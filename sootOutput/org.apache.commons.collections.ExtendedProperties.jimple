public class org.apache.commons.collections.ExtendedProperties extends java.util.Hashtable
{
    private org.apache.commons.collections.ExtendedProperties defaults;
    protected java.lang.String file;
    protected java.lang.String basePath;
    protected java.lang.String fileSeparator;
    protected boolean isInitialized;
    protected static java.lang.String include;
    protected java.util.ArrayList keysAsListed;
    protected static final java.lang.String START_TOKEN;
    protected static final java.lang.String END_TOKEN;

    protected java.lang.String interpolate(java.lang.String)
    {
        java.lang.String r1, $r2;
        org.apache.commons.collections.ExtendedProperties r0;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.String interpolateHelper(java.lang.String,java.util.List)>(r1, null);

        return $r2;
    }

    protected java.lang.String interpolateHelper(java.lang.String, java.util.List)
    {
        java.lang.IllegalStateException $r41;
        boolean $z0, $z1, $z2;
        java.util.List r35;
        java.util.ArrayList $r37;
        java.lang.StringBuffer $r13, $r14, $r27, $r28, $r29, $r31, $r38, $r39, $r40;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, $i13, $i14, $i16, $i18;
        java.lang.String r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r16, $r18, $r19, $r20, $r22, $r30, $r32, $r36;
        java.util.Iterator $r24;
        org.apache.commons.collections.ExtendedProperties r10, $r12, $r15, $r17;
        java.lang.Object $r11, $r21, $r33;

        r10 := @this: org.apache.commons.collections.ExtendedProperties;

        r0 := @parameter0: java.lang.String;

        r35 := @parameter1: java.util.List;

        if r0 != null goto label01;

        return null;

     label01:
        if r35 != null goto label02;

        $r37 = new java.util.ArrayList;

        specialinvoke $r37.<java.util.ArrayList: void <init>()>();

        r35 = $r37;

        interfaceinvoke $r37.<java.util.List: boolean add(java.lang.Object)>(r0);

     label02:
        $r1 = "}";

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        i11 = 0 - $i0;

        $r38 = new java.lang.StringBuffer;

        specialinvoke $r38.<java.lang.StringBuffer: void <init>()>();

     label03:
        $r36 = "}";

        $i12 = virtualinvoke $r36.<java.lang.String: int length()>();

        $i13 = i11 + $i12;

        $i14 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("${", $i13);

        $i16 = (int) -1;

        if $i14 <= $i16 goto label10;

        $i4 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("}", $i14);

        $i18 = (int) -1;

        if $i4 <= $i18 goto label10;

        $r6 = "}";

        $i5 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i6 = i11 + $i5;

        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i6, $i14);

        virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r8 = "${";

        $i7 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i8 = $i14 + $i7;

        $r9 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i8, $i4);

        $z0 = interfaceinvoke r35.<java.util.List: boolean contains(java.lang.Object)>($r9);

        if $z0 == 0 goto label06;

        $r21 = interfaceinvoke r35.<java.util.List: java.lang.Object remove(int)>(0);

        $r22 = virtualinvoke $r21.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r35.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r39 = new java.lang.StringBuffer;

        specialinvoke $r39.<java.lang.StringBuffer: void <init>()>();

        $r24 = interfaceinvoke r35.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke $r24.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label05;

        $r33 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r33);

        $z1 = interfaceinvoke $r24.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("->");

        goto label04;

     label05:
        $r41 = new java.lang.IllegalStateException;

        $r40 = new java.lang.StringBuffer;

        specialinvoke $r40.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("infinite loop in property interpolation of ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r30 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.String toString()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r41.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r32);

        throw $r41;

     label06:
        interfaceinvoke r35.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r11 = virtualinvoke r10.<org.apache.commons.collections.ExtendedProperties: java.lang.Object getProperty(java.lang.String)>($r9);

        if $r11 == null goto label07;

        $r19 = virtualinvoke $r11.<java.lang.Object: java.lang.String toString()>();

        $r20 = virtualinvoke r10.<org.apache.commons.collections.ExtendedProperties: java.lang.String interpolateHelper(java.lang.String,java.util.List)>($r19, r35);

        virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $i9 = interfaceinvoke r35.<java.util.List: int size()>();

        $i10 = $i9 - 1;

        interfaceinvoke r35.<java.util.List: java.lang.Object remove(int)>($i10);

        goto label09;

     label07:
        $r12 = r10.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        if $r12 == null goto label08;

        $r15 = r10.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        $r16 = virtualinvoke $r15.<org.apache.commons.collections.ExtendedProperties: java.lang.String getString(java.lang.String,java.lang.String)>($r9, null);

        if $r16 == null goto label08;

        $r17 = r10.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        $r18 = virtualinvoke $r17.<org.apache.commons.collections.ExtendedProperties: java.lang.String getString(java.lang.String)>($r9);

        virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        goto label09;

     label08:
        $r13 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("${");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

     label09:
        i11 = $i4;

        goto label03;

     label10:
        $r3 = "}";

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i2 = i11 + $i1;

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

        virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    private static java.lang.String escape(java.lang.String)
    {
        char $c1;
        java.lang.StringBuffer $r3;
        int $i0, i2, $i3, $i4;
        java.lang.String r1, $r2;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(java.lang.String)>(r1);

        i2 = 0;

     label1:
        $i0 = virtualinvoke $r3.<java.lang.StringBuffer: int length()>();

        if i2 >= $i0 goto label4;

        $c1 = virtualinvoke $r3.<java.lang.StringBuffer: char charAt(int)>(i2);

        $i3 = (int) $c1;

        if $i3 == 44 goto label2;

        $i4 = (int) $c1;

        if $i4 != 92 goto label3;

     label2:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>(i2, 92);

        i2 = i2 + 1;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    private static java.lang.String unescape(java.lang.String)
    {
        char $c2, $c4;
        java.lang.StringBuffer $r3;
        int $i0, $i1, $i3, i5, $i6, $i7;
        java.lang.String r1, $r2;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(java.lang.String)>(r1);

        i5 = 0;

     label1:
        $i0 = virtualinvoke $r3.<java.lang.StringBuffer: int length()>();

        $i1 = $i0 - 1;

        if i5 >= $i1 goto label3;

        $c2 = virtualinvoke $r3.<java.lang.StringBuffer: char charAt(int)>(i5);

        $i3 = i5 + 1;

        $c4 = virtualinvoke $r3.<java.lang.StringBuffer: char charAt(int)>($i3);

        $i6 = (int) $c2;

        if $i6 != 92 goto label2;

        $i7 = (int) $c4;

        if $i7 != 92 goto label2;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>(i5);

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    private static int countPreceding(java.lang.String, int, char)
    {
        char $c3, c4;
        int i0, $i1, $i2, i5, $i6, $i7, $i9;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        c4 := @parameter2: char;

        i5 = i0 - 1;

     label1:
        if i5 < 0 goto label3;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        $i6 = (int) $c3;

        $i7 = (int) c4;

        if $i6 == $i7 goto label2;

        goto label3;

     label2:
        $i9 = (int) -1;

        i5 = i5 + $i9;

        goto label1;

     label3:
        $i1 = i0 - 1;

        $i2 = $i1 - i5;

        return $i2;
    }

    private static boolean endsWithSlash(java.lang.String)
    {
        int $i0, $i1, $i2, $i3;
        java.lang.String r0;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("\\");

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        $i2 = staticinvoke <org.apache.commons.collections.ExtendedProperties: int countPreceding(java.lang.String,int,char)>(r0, $i1, 92);

        $i3 = $i2 % 2;

        if $i3 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public void <init>()
    {
        java.lang.String $r1;
        org.apache.commons.collections.ExtendedProperties r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        specialinvoke r0.<java.util.Hashtable: void <init>()>();

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("file.separator");

        r0.<org.apache.commons.collections.ExtendedProperties: java.lang.String fileSeparator> = $r1;

        r0.<org.apache.commons.collections.ExtendedProperties: boolean isInitialized> = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections.ExtendedProperties: java.util.ArrayList keysAsListed> = $r2;

        return;
    }

    public void <init>(java.lang.String) throws java.io.IOException
    {
        java.lang.String r1;
        org.apache.commons.collections.ExtendedProperties r0;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.collections.ExtendedProperties: void <init>(java.lang.String,java.lang.String)>(r1, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r14;
        java.util.ArrayList $r2;
        int $i0, $i1;
        java.lang.String $r1, r3, $r5, $r6, $r7, $r8, $r9, r11;
        java.io.IOException $r13, $r15;
        java.io.FileInputStream $r10, r16;
        org.apache.commons.collections.ExtendedProperties r0, $r12;
        java.io.File $r4;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r3 := @parameter0: java.lang.String;

        r11 := @parameter1: java.lang.String;

        specialinvoke r0.<java.util.Hashtable: void <init>()>();

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("file.separator");

        r0.<org.apache.commons.collections.ExtendedProperties: java.lang.String fileSeparator> = $r1;

        r0.<org.apache.commons.collections.ExtendedProperties: boolean isInitialized> = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections.ExtendedProperties: java.util.ArrayList keysAsListed> = $r2;

        r0.<org.apache.commons.collections.ExtendedProperties: java.lang.String file> = r3;

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.io.File: java.lang.String getAbsolutePath()>();

        r0.<org.apache.commons.collections.ExtendedProperties: java.lang.String basePath> = $r5;

        $r8 = r0.<org.apache.commons.collections.ExtendedProperties: java.lang.String basePath>;

        $r7 = r0.<org.apache.commons.collections.ExtendedProperties: java.lang.String basePath>;

        $r6 = r0.<org.apache.commons.collections.ExtendedProperties: java.lang.String fileSeparator>;

        $i0 = virtualinvoke $r7.<java.lang.String: int lastIndexOf(java.lang.String)>($r6);

        $i1 = $i0 + 1;

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        r0.<org.apache.commons.collections.ExtendedProperties: java.lang.String basePath> = $r9;

        r16 = null;

     label01:
        $r10 = new java.io.FileInputStream;

        specialinvoke $r10.<java.io.FileInputStream: void <init>(java.lang.String)>(r3);

        r16 = $r10;

        virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: void load(java.io.InputStream)>($r10);

     label02:
        if $r10 == null goto label03;

        virtualinvoke $r10.<java.io.FileInputStream: void close()>();

     label03:
        goto label10;

     label04:
        $r15 := @caughtexception;

        goto label10;

     label05:
        $r14 := @caughtexception;

     label06:
        if r16 == null goto label07;

        virtualinvoke r16.<java.io.FileInputStream: void close()>();

     label07:
        goto label09;

     label08:
        $r13 := @caughtexception;

     label09:
        throw $r14;

     label10:
        if r11 == null goto label11;

        $r12 = new org.apache.commons.collections.ExtendedProperties;

        specialinvoke $r12.<org.apache.commons.collections.ExtendedProperties: void <init>(java.lang.String)>(r11);

        r0.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults> = $r12;

     label11:
        return;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.lang.Throwable from label05 to label06 with label05;
    }

    public boolean isInitialized()
    {
        org.apache.commons.collections.ExtendedProperties r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        $z0 = r0.<org.apache.commons.collections.ExtendedProperties: boolean isInitialized>;

        return $z0;
    }

    public java.lang.String getInclude()
    {
        java.lang.String $r0;
        org.apache.commons.collections.ExtendedProperties r1;

        r1 := @this: org.apache.commons.collections.ExtendedProperties;

        $r0 = <org.apache.commons.collections.ExtendedProperties: java.lang.String include>;

        return $r0;
    }

    public void setInclude(java.lang.String)
    {
        java.lang.String r0;
        org.apache.commons.collections.ExtendedProperties r1;

        r1 := @this: org.apache.commons.collections.ExtendedProperties;

        r0 := @parameter0: java.lang.String;

        <org.apache.commons.collections.ExtendedProperties: java.lang.String include> = r0;

        return;
    }

    public void load(java.io.InputStream) throws java.io.IOException
    {
        org.apache.commons.collections.ExtendedProperties r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.io.InputStream;

        virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: void load(java.io.InputStream,java.lang.String)>(r1, null);

        return;
    }

    public synchronized void load(java.io.InputStream, java.lang.String) throws java.io.IOException
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.commons.collections.ExtendedProperties$PropertiesReader $r23, $r26, $r30, r33;
        java.io.UnsupportedEncodingException $r29, $r32;
        java.lang.Throwable $r28;
        java.lang.StringBuffer $r10, $r11, $r13, $r16, $r18, $r19;
        int $i0, $i1;
        java.lang.String r0, $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r12, $r14, $r17, $r20, $r34, r35;
        java.io.FileInputStream $r21;
        org.apache.commons.collections.ExtendedProperties r6;
        java.io.InputStreamReader $r24, $r27, $r31;
        java.io.File $r15, $r22, r36;
        java.io.InputStream r25;

        r6 := @this: org.apache.commons.collections.ExtendedProperties;

        r25 := @parameter0: java.io.InputStream;

        r0 := @parameter1: java.lang.String;

        r33 = null;

        if r0 == null goto label04;

     label01:
        $r26 = new org.apache.commons.collections.ExtendedProperties$PropertiesReader;

        $r27 = new java.io.InputStreamReader;

        specialinvoke $r27.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r25, r0);

        specialinvoke $r26.<org.apache.commons.collections.ExtendedProperties$PropertiesReader: void <init>(java.io.Reader)>($r27);

        r33 = $r26;

     label02:
        goto label04;

     label03:
        $r32 := @caughtexception;

     label04:
        if r33 != null goto label08;

     label05:
        $r23 = new org.apache.commons.collections.ExtendedProperties$PropertiesReader;

        $r24 = new java.io.InputStreamReader;

        specialinvoke $r24.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r25, "8859_1");

        specialinvoke $r23.<org.apache.commons.collections.ExtendedProperties$PropertiesReader: void <init>(java.io.Reader)>($r24);

        r33 = $r23;

     label06:
        goto label08;

     label07:
        $r29 := @caughtexception;

        $r30 = new org.apache.commons.collections.ExtendedProperties$PropertiesReader;

        $r31 = new java.io.InputStreamReader;

        specialinvoke $r31.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r25);

        specialinvoke $r30.<org.apache.commons.collections.ExtendedProperties$PropertiesReader: void <init>(java.io.Reader)>($r31);

        r33 = $r30;

     label08:
        $r34 = virtualinvoke r33.<org.apache.commons.collections.ExtendedProperties$PropertiesReader: java.lang.String readProperty()>();

        if $r34 != null goto label10;

     label09:
        r6.<org.apache.commons.collections.ExtendedProperties: boolean isInitialized> = 1;

        return;

     label10:
        $i0 = virtualinvoke $r34.<java.lang.String: int indexOf(int)>(61);

        if $i0 <= 0 goto label17;

        $r1 = virtualinvoke $r34.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $i1 = $i0 + 1;

        $r3 = virtualinvoke $r34.<java.lang.String: java.lang.String substring(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        r35 = $r4;

        $r5 = "";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label11;

        goto label08;

     label11:
        $r7 = virtualinvoke r6.<org.apache.commons.collections.ExtendedProperties: java.lang.String getInclude()>();

        if $r7 == null goto label16;

        $r8 = virtualinvoke r6.<org.apache.commons.collections.ExtendedProperties: java.lang.String getInclude()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);

        if $z1 == 0 goto label16;

        $r9 = r6.<org.apache.commons.collections.ExtendedProperties: java.lang.String fileSeparator>;

        $z2 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>($r9);

        if $z2 == 0 goto label12;

        $r22 = new java.io.File;

        specialinvoke $r22.<java.io.File: void <init>(java.lang.String)>($r4);

        r36 = $r22;

        goto label14;

     label12:
        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r12 = r6.<org.apache.commons.collections.ExtendedProperties: java.lang.String fileSeparator>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        $z3 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>($r14);

        if $z3 == 0 goto label13;

        r35 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>(2);

     label13:
        $r15 = new java.io.File;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = r6.<org.apache.commons.collections.ExtendedProperties: java.lang.String basePath>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r35);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>($r20);

        r36 = $r15;

     label14:
        if r36 == null goto label15;

        $z4 = virtualinvoke r36.<java.io.File: boolean exists()>();

        if $z4 == 0 goto label15;

        $z5 = virtualinvoke r36.<java.io.File: boolean canRead()>();

        if $z5 == 0 goto label15;

        $r21 = new java.io.FileInputStream;

        specialinvoke $r21.<java.io.FileInputStream: void <init>(java.io.File)>(r36);

        virtualinvoke r6.<org.apache.commons.collections.ExtendedProperties: void load(java.io.InputStream)>($r21);

     label15:
        goto label17;

     label16:
        virtualinvoke r6.<org.apache.commons.collections.ExtendedProperties: void addProperty(java.lang.String,java.lang.Object)>($r2, $r4);

     label17:
        goto label08;

     label18:
        $r28 := @caughtexception;

     label19:
        r6.<org.apache.commons.collections.ExtendedProperties: boolean isInitialized> = 1;

        throw $r28;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label03;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label10 to label19 with label18;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        java.lang.Object $r2, r5;
        java.lang.String r1;
        org.apache.commons.collections.ExtendedProperties r0, $r3, $r4;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object get(java.lang.Object)>(r1);

        r5 = $r2;

        if $r2 != null goto label1;

        $r3 = r0.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        if $r3 == null goto label1;

        $r4 = r0.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        r5 = virtualinvoke $r4.<org.apache.commons.collections.ExtendedProperties: java.lang.Object get(java.lang.Object)>(r1);

     label1:
        return r5;
    }

    public void addProperty(java.lang.String, java.lang.Object)
    {
        org.apache.commons.collections.ExtendedProperties r1;
        int $i0;
        java.lang.Object r0;
        java.lang.String r2, r3, $r4, $r6, $r7;
        boolean $z0, $z1;
        org.apache.commons.collections.ExtendedProperties$PropertiesTokenizer $r5;

        r1 := @this: org.apache.commons.collections.ExtendedProperties;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label5;

        r3 = (java.lang.String) r0;

        $i0 = virtualinvoke r3.<java.lang.String: int indexOf(java.lang.String)>(",");

        if $i0 <= 0 goto label3;

        $r5 = new org.apache.commons.collections.ExtendedProperties$PropertiesTokenizer;

        specialinvoke $r5.<org.apache.commons.collections.ExtendedProperties$PropertiesTokenizer: void <init>(java.lang.String)>(r3);

     label1:
        $z1 = virtualinvoke $r5.<org.apache.commons.collections.ExtendedProperties$PropertiesTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label2;

        $r6 = virtualinvoke $r5.<org.apache.commons.collections.ExtendedProperties$PropertiesTokenizer: java.lang.String nextToken()>();

        $r7 = staticinvoke <org.apache.commons.collections.ExtendedProperties: java.lang.String unescape(java.lang.String)>($r6);

        specialinvoke r1.<org.apache.commons.collections.ExtendedProperties: void addPropertyInternal(java.lang.String,java.lang.Object)>(r2, $r7);

        goto label1;

     label2:
        goto label4;

     label3:
        $r4 = staticinvoke <org.apache.commons.collections.ExtendedProperties: java.lang.String unescape(java.lang.String)>(r3);

        specialinvoke r1.<org.apache.commons.collections.ExtendedProperties: void addPropertyInternal(java.lang.String,java.lang.Object)>(r2, $r4);

     label4:
        goto label6;

     label5:
        specialinvoke r1.<org.apache.commons.collections.ExtendedProperties: void addPropertyInternal(java.lang.String,java.lang.Object)>(r2, r0);

     label6:
        r1.<org.apache.commons.collections.ExtendedProperties: boolean isInitialized> = 1;

        return;
    }

    private void addPropertyDirect(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String r1;
        org.apache.commons.collections.ExtendedProperties r0;
        boolean $z0;
        java.util.ArrayList $r3;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<org.apache.commons.collections.ExtendedProperties: java.util.ArrayList keysAsListed>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label1:
        virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    private void addPropertyInternal(java.lang.String, java.lang.Object)
    {
        org.apache.commons.collections.ExtendedProperties r0;
        java.util.ArrayList $r4;
        java.util.List $r5;
        java.util.Vector $r6;
        java.lang.Object $r2, r3;
        java.lang.String r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = $r2 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r6 = new java.util.Vector;

        specialinvoke $r6.<java.util.Vector: void <init>(int)>(2);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r2);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r3);

        virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        goto label4;

     label1:
        $z1 = $r2 instanceof java.util.List;

        if $z1 == 0 goto label2;

        $r5 = (java.util.List) $r2;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r3);

        goto label4;

     label2:
        $z2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: boolean containsKey(java.lang.Object)>(r1);

        if $z2 != 0 goto label3;

        $r4 = r0.<org.apache.commons.collections.ExtendedProperties: java.util.ArrayList keysAsListed>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label3:
        virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

     label4:
        return;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String r1;
        org.apache.commons.collections.ExtendedProperties r0;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: void clearProperty(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: void addProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public synchronized void save(java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        java.util.Enumeration $r4;
        java.lang.StringBuffer $r11, $r14;
        java.lang.String r2, r6, r10, $r12, $r13, $r15, $r16, $r17;
        boolean $z0, $z1, $z2, $z3;
        java.io.OutputStream r0;
        java.io.PrintWriter $r1;
        java.util.Iterator $r8;
        org.apache.commons.collections.ExtendedProperties r3;
        java.util.List r18;
        java.lang.Object $r5, $r7, $r9;

        r3 := @this: org.apache.commons.collections.ExtendedProperties;

        r0 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return;

     label1:
        $r1 = new java.io.PrintWriter;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(r0);

        if r2 == null goto label2;

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(r2);

     label2:
        $r4 = virtualinvoke r3.<org.apache.commons.collections.ExtendedProperties: java.util.Enumeration keys()>();

     label3:
        $z3 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z3 == 0 goto label7;

        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        r6 = (java.lang.String) $r5;

        $r7 = virtualinvoke r3.<org.apache.commons.collections.ExtendedProperties: java.lang.Object get(java.lang.Object)>(r6);

        if $r7 == null goto label6;

        $z0 = $r7 instanceof java.lang.String;

        if $z0 == 0 goto label4;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=");

        $r15 = (java.lang.String) $r7;

        $r16 = staticinvoke <org.apache.commons.collections.ExtendedProperties: java.lang.String escape(java.lang.String)>($r15);

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r17 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        goto label6;

     label4:
        $z1 = $r7 instanceof java.util.List;

        if $z1 == 0 goto label6;

        r18 = (java.util.List) $r7;

        $r8 = interfaceinvoke r18.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r9;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=");

        $r12 = staticinvoke <org.apache.commons.collections.ExtendedProperties: java.lang.String escape(java.lang.String)>(r10);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        goto label5;

     label6:
        virtualinvoke $r1.<java.io.PrintWriter: void println()>();

        virtualinvoke $r1.<java.io.PrintWriter: void flush()>();

        goto label3;

     label7:
        return;
    }

    public void combine(org.apache.commons.collections.ExtendedProperties)
    {
        java.util.Iterator $r1;
        java.lang.Object $r2, $r5;
        java.lang.String r3;
        org.apache.commons.collections.ExtendedProperties r0, r4;
        boolean $z0;

        r4 := @this: org.apache.commons.collections.ExtendedProperties;

        r0 := @parameter0: org.apache.commons.collections.ExtendedProperties;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.util.Iterator getKeys()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r2;

        $r5 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object get(java.lang.Object)>(r3);

        virtualinvoke r4.<org.apache.commons.collections.ExtendedProperties: void setProperty(java.lang.String,java.lang.Object)>(r3, $r5);

        goto label1;

     label2:
        return;
    }

    public void clearProperty(java.lang.String)
    {
        org.apache.commons.collections.ExtendedProperties r0;
        java.util.ArrayList $r2, $r3, $r5;
        int $i0, i1;
        java.lang.Object $r4;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label4;

        i1 = 0;

     label1:
        $r2 = r0.<org.apache.commons.collections.ExtendedProperties: java.util.ArrayList keysAsListed>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label3;

        $r3 = r0.<org.apache.commons.collections.ExtendedProperties: java.util.ArrayList keysAsListed>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $r5 = r0.<org.apache.commons.collections.ExtendedProperties: java.util.ArrayList keysAsListed>;

        virtualinvoke $r5.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object remove(java.lang.Object)>(r1);

     label4:
        return;
    }

    public java.util.Iterator getKeys()
    {
        org.apache.commons.collections.ExtendedProperties r0;
        java.util.Iterator $r2;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        $r1 = r0.<org.apache.commons.collections.ExtendedProperties: java.util.ArrayList keysAsListed>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

        return $r2;
    }

    public java.util.Iterator getKeys(java.lang.String)
    {
        java.util.Iterator $r1, $r3;
        org.apache.commons.collections.ExtendedProperties r0;
        java.util.ArrayList $r2;
        java.lang.Object $r4;
        java.lang.String r5, $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r5 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.util.Iterator getKeys()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $z1 = $r4 instanceof java.lang.String;

        if $z1 == 0 goto label2;

        $r6 = (java.lang.String) $r4;

        $z2 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>(r5);

        if $z2 == 0 goto label2;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label2:
        goto label1;

     label3:
        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

        return $r3;
    }

    public org.apache.commons.collections.ExtendedProperties subset(java.lang.String)
    {
        int $i0, $i1, $i2, $i3;
        java.lang.String r4, $r5, $r6, $r7, r9;
        boolean $z0, $z1, $z2, z3, z4, z5;
        java.util.Iterator $r2;
        org.apache.commons.collections.ExtendedProperties $r0, r1;
        java.lang.Object $r3, $r8;

        r1 := @this: org.apache.commons.collections.ExtendedProperties;

        r4 := @parameter0: java.lang.String;

        $r0 = new org.apache.commons.collections.ExtendedProperties;

        specialinvoke $r0.<org.apache.commons.collections.ExtendedProperties: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.commons.collections.ExtendedProperties: java.util.Iterator getKeys()>();

        z3 = 0;

        z5 = 0;

        z4 = 0;

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $z1 = $r3 instanceof java.lang.String;

        if $z1 == 0 goto label5;

        $r5 = (java.lang.String) $r3;

        $z2 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>(r4);

        if $z2 == 0 goto label5;

        if z4 != 0 goto label2;

        z3 = 1;

        z5 = 1;

        z4 = 1;

     label2:
        $r6 = (java.lang.String) $r3;

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i1 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i0 != $i1 goto label3;

        r9 = r4;

        goto label4;

     label3:
        $r7 = (java.lang.String) $r3;

        $i2 = virtualinvoke r4.<java.lang.String: int length()>();

        $i3 = $i2 + 1;

        r9 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>($i3);

     label4:
        $r8 = virtualinvoke r1.<org.apache.commons.collections.ExtendedProperties: java.lang.Object get(java.lang.Object)>($r3);

        specialinvoke $r0.<org.apache.commons.collections.ExtendedProperties: void addPropertyDirect(java.lang.String,java.lang.Object)>(r9, $r8);

     label5:
        goto label1;

     label6:
        if z5 == 0 goto label7;

        return $r0;

     label7:
        return null;
    }

    public void display()
    {
        java.io.PrintStream $r6;
        java.util.Iterator $r1;
        org.apache.commons.collections.ExtendedProperties r0;
        java.lang.StringBuffer $r5, $r7, $r8, $r9;
        java.lang.Object $r2, $r4;
        java.lang.String r3, $r10;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.util.Iterator getKeys()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r2;

        $r4 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object get(java.lang.Object)>(r3);

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" => ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10);

        goto label1;

     label2:
        return;
    }

    public java.lang.String getString(java.lang.String)
    {
        java.lang.String r1, $r2;
        org.apache.commons.collections.ExtendedProperties r0;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.String getString(java.lang.String,java.lang.String)>(r1, null);

        return $r2;
    }

    public java.lang.String getString(java.lang.String, java.lang.String)
    {
        java.lang.ClassCastException $r3;
        java.lang.StringBuffer $r4, $r5, $r6, $r7;
        java.lang.String r1, $r8, $r11, $r12, r14, $r15, $r17, $r18, $r19, $r20;
        boolean $z0, $z1;
        org.apache.commons.collections.ExtendedProperties r0, $r13, $r16;
        java.util.List $r9;
        java.lang.Object $r2, $r10;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        r14 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = $r2 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r19 = (java.lang.String) $r2;

        $r20 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.String interpolate(java.lang.String)>($r19);

        return $r20;

     label1:
        if $r2 != null goto label3;

        $r13 = r0.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        if $r13 == null goto label2;

        $r16 = r0.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        $r17 = virtualinvoke $r16.<org.apache.commons.collections.ExtendedProperties: java.lang.String getString(java.lang.String,java.lang.String)>(r1, r14);

        $r18 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.String interpolate(java.lang.String)>($r17);

        return $r18;

     label2:
        $r15 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.String interpolate(java.lang.String)>(r14);

        return $r15;

     label3:
        $z1 = $r2 instanceof java.util.List;

        if $z1 == 0 goto label4;

        $r9 = (java.util.List) $r2;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0);

        $r11 = (java.lang.String) $r10;

        $r12 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.String interpolate(java.lang.String)>($r11);

        return $r12;

     label4:
        $r3 = new java.lang.ClassCastException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to a String object");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.ClassCastException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public java.util.Properties getProperties(java.lang.String)
    {
        java.util.Properties $r2, $r3;
        java.lang.String r1;
        org.apache.commons.collections.ExtendedProperties r0;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.util.Properties;

        specialinvoke $r2.<java.util.Properties: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.util.Properties getProperties(java.lang.String,java.util.Properties)>(r1, $r2);

        return $r3;
    }

    public java.util.Properties getProperties(java.lang.String, java.util.Properties)
    {
        java.lang.String[] $r2;
        java.lang.StringBuffer $r7, $r8, $r9, $r10, $r11;
        int $i0, $i1, $i2, i3;
        java.lang.String r1, r5, $r12, $r13, $r14, $r15, $r16;
        java.util.Properties $r3, r4;
        org.apache.commons.collections.ExtendedProperties r0;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.util.Properties;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.String[] getStringArray(java.lang.String)>(r1);

        $r3 = new java.util.Properties;

        specialinvoke $r3.<java.util.Properties: void <init>(java.util.Properties)>(r4);

        i3 = 0;

     label1:
        $i0 = lengthof $r2;

        if i3 >= $i0 goto label4;

        r5 = $r2[i3];

        $i1 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(61);

        if $i1 <= 0 goto label2;

        $r13 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String trim()>();

        $i2 = $i1 + 1;

        $r15 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i2);

        $r16 = virtualinvoke $r15.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r16);

        goto label3;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' does not contain ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("an equals sign");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return $r3;
    }

    public java.lang.String[] getStringArray(java.lang.String)
    {
        java.lang.String[] $r10, $r12, $r16;
        java.lang.ClassCastException $r3;
        java.util.Vector $r15;
        java.lang.StringBuffer $r4, $r5, $r6, $r7;
        int $i0, i1, $i2;
        java.lang.String r1, $r8, $r14;
        boolean $z0, $z1;
        org.apache.commons.collections.ExtendedProperties r0, $r9, $r11;
        java.util.List r17;
        java.lang.Object $r2, $r13;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = $r2 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r15 = new java.util.Vector;

        specialinvoke $r15.<java.util.Vector: void <init>(int)>(1);

        r17 = $r15;

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r2);

        goto label5;

     label1:
        $z1 = $r2 instanceof java.util.List;

        if $z1 == 0 goto label2;

        r17 = (java.util.List) $r2;

        goto label5;

     label2:
        if $r2 != null goto label4;

        $r9 = r0.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        if $r9 == null goto label3;

        $r11 = r0.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        $r12 = virtualinvoke $r11.<org.apache.commons.collections.ExtendedProperties: java.lang.String[] getStringArray(java.lang.String)>(r1);

        return $r12;

     label3:
        $r10 = newarray (java.lang.String)[0];

        return $r10;

     label4:
        $r3 = new java.lang.ClassCastException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to a String/List object");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.ClassCastException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label5:
        $i0 = interfaceinvoke r17.<java.util.List: int size()>();

        $r16 = newarray (java.lang.String)[$i0];

        i1 = 0;

     label6:
        $i2 = lengthof $r16;

        if i1 >= $i2 goto label7;

        $r13 = interfaceinvoke r17.<java.util.List: java.lang.Object get(int)>(i1);

        $r14 = (java.lang.String) $r13;

        $r16[i1] = $r14;

        i1 = i1 + 1;

        goto label6;

     label7:
        return $r16;
    }

    public java.util.Vector getVector(java.lang.String)
    {
        java.lang.String r1;
        java.util.Vector $r2;
        org.apache.commons.collections.ExtendedProperties r0;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.util.Vector getVector(java.lang.String,java.util.Vector)>(r1, null);

        return $r2;
    }

    public java.util.Vector getVector(java.lang.String, java.util.Vector)
    {
        java.lang.ClassCastException $r3;
        java.util.Vector r10, $r12, $r13, $r14, $r16;
        java.lang.StringBuffer $r4, $r5, $r6, $r7;
        java.lang.String r1, $r8;
        boolean $z0, $z1;
        org.apache.commons.collections.ExtendedProperties r0, $r9, $r11;
        java.util.List $r15;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        r10 := @parameter1: java.util.Vector;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = $r2 instanceof java.util.List;

        if $z0 == 0 goto label1;

        $r14 = new java.util.Vector;

        $r15 = (java.util.List) $r2;

        specialinvoke $r14.<java.util.Vector: void <init>(java.util.Collection)>($r15);

        return $r14;

     label1:
        $z1 = $r2 instanceof java.lang.String;

        if $z1 == 0 goto label2;

        $r13 = new java.util.Vector;

        specialinvoke $r13.<java.util.Vector: void <init>(int)>(1);

        virtualinvoke $r13.<java.util.Vector: boolean add(java.lang.Object)>($r2);

        virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r13);

        return $r13;

     label2:
        if $r2 != null goto label6;

        $r9 = r0.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        if $r9 == null goto label3;

        $r11 = r0.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        $r12 = virtualinvoke $r11.<org.apache.commons.collections.ExtendedProperties: java.util.Vector getVector(java.lang.String,java.util.Vector)>(r1, r10);

        return $r12;

     label3:
        if r10 != null goto label4;

        $r16 = new java.util.Vector;

        specialinvoke $r16.<java.util.Vector: void <init>()>();

        goto label5;

     label4:
        $r16 = r10;

     label5:
        return $r16;

     label6:
        $r3 = new java.lang.ClassCastException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to a Vector object");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.ClassCastException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public java.util.List getList(java.lang.String)
    {
        java.util.List $r2;
        java.lang.String r1;
        org.apache.commons.collections.ExtendedProperties r0;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.util.List getList(java.lang.String,java.util.List)>(r1, null);

        return $r2;
    }

    public java.util.List getList(java.lang.String, java.util.List)
    {
        java.lang.ClassCastException $r21;
        java.util.ArrayList $r17, $r18, $r19;
        java.lang.StringBuffer $r5, $r6, $r7, $r20;
        java.lang.String r1, $r8;
        boolean $z0, $z1;
        org.apache.commons.collections.ExtendedProperties r0, $r9, $r11;
        java.util.List r10, $r12, $r15, $r16;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        r10 := @parameter1: java.util.List;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = $r2 instanceof java.util.List;

        if $z0 == 0 goto label1;

        $r17 = new java.util.ArrayList;

        $r15 = (java.util.List) $r2;

        specialinvoke $r17.<java.util.ArrayList: void <init>(java.util.Collection)>($r15);

        return $r17;

     label1:
        $z1 = $r2 instanceof java.lang.String;

        if $z1 == 0 goto label2;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>(int)>(1);

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r2);

        virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r18);

        return $r18;

     label2:
        if $r2 != null goto label6;

        $r9 = r0.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        if $r9 == null goto label3;

        $r11 = r0.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        $r12 = virtualinvoke $r11.<org.apache.commons.collections.ExtendedProperties: java.util.List getList(java.lang.String,java.util.List)>(r1, r10);

        return $r12;

     label3:
        if r10 != null goto label4;

        $r19 = new java.util.ArrayList;

        $r16 = $r19;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        goto label5;

     label4:
        $r16 = r10;

     label5:
        return $r16;

     label6:
        $r21 = new java.lang.ClassCastException;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to a List object");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.ClassCastException: void <init>(java.lang.String)>($r8);

        throw $r21;
    }

    public boolean getBoolean(java.lang.String)
    {
        org.apache.commons.collections.ExtendedProperties r0;
        java.lang.StringBuffer $r4, $r5, $r6, $r7;
        java.lang.Boolean $r2;
        java.lang.String r1, $r8;
        java.util.NoSuchElementException $r3;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Boolean getBoolean(java.lang.String,java.lang.Boolean)>(r1, null);

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label1:
        $r3 = new java.util.NoSuchElementException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to an existing object");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public boolean getBoolean(java.lang.String, boolean)
    {
        java.lang.Boolean $r2, $r3;
        java.lang.String r1;
        org.apache.commons.collections.ExtendedProperties r0;
        boolean z0, $z1;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = new java.lang.Boolean;

        specialinvoke $r2.<java.lang.Boolean: void <init>(boolean)>(z0);

        $r3 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Boolean getBoolean(java.lang.String,java.lang.Boolean)>(r1, $r2);

        $z1 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;
    }

    public java.lang.Boolean getBoolean(java.lang.String, java.lang.Boolean)
    {
        java.lang.ClassCastException $r3;
        java.lang.StringBuffer $r4, $r5, $r6, $r7;
        java.lang.Boolean r10, $r12, $r15, $r16;
        java.lang.String r1, $r8, $r13, $r14;
        boolean $z0, $z1;
        org.apache.commons.collections.ExtendedProperties r0, $r9, $r11;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.Boolean;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = $r2 instanceof java.lang.Boolean;

        if $z0 == 0 goto label1;

        $r16 = (java.lang.Boolean) $r2;

        return $r16;

     label1:
        $z1 = $r2 instanceof java.lang.String;

        if $z1 == 0 goto label2;

        $r13 = (java.lang.String) $r2;

        $r14 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.String testBoolean(java.lang.String)>($r13);

        $r15 = new java.lang.Boolean;

        specialinvoke $r15.<java.lang.Boolean: void <init>(java.lang.String)>($r14);

        virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r15);

        return $r15;

     label2:
        if $r2 != null goto label4;

        $r9 = r0.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        if $r9 == null goto label3;

        $r11 = r0.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        $r12 = virtualinvoke $r11.<org.apache.commons.collections.ExtendedProperties: java.lang.Boolean getBoolean(java.lang.String,java.lang.Boolean)>(r1, r10);

        return $r12;

     label3:
        return r10;

     label4:
        $r3 = new java.lang.ClassCastException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to a Boolean object");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.ClassCastException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public java.lang.String testBoolean(java.lang.String)
    {
        org.apache.commons.collections.ExtendedProperties r2;
        java.lang.String r0, $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r2 := @this: org.apache.commons.collections.ExtendedProperties;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("on");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("yes");

        if $z2 == 0 goto label2;

     label1:
        return "true";

     label2:
        $z3 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("false");

        if $z3 != 0 goto label3;

        $z4 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("off");

        if $z4 != 0 goto label3;

        $z5 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("no");

        if $z5 == 0 goto label4;

     label3:
        return "false";

     label4:
        return null;
    }

    public byte getByte(java.lang.String)
    {
        org.apache.commons.collections.ExtendedProperties r0;
        byte $b0;
        java.lang.StringBuffer $r4, $r5, $r6, $r7;
        java.lang.String r1, $r8;
        java.lang.Byte $r2;
        java.util.NoSuchElementException $r3;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Byte getByte(java.lang.String,java.lang.Byte)>(r1, null);

        if $r2 == null goto label1;

        $b0 = virtualinvoke $r2.<java.lang.Byte: byte byteValue()>();

        return $b0;

     label1:
        $r3 = new java.util.NoSuchElementException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" doesn\'t map to an existing object");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public byte getByte(java.lang.String, byte)
    {
        byte b0, $b1;
        java.lang.String r1;
        org.apache.commons.collections.ExtendedProperties r0;
        java.lang.Byte $r2, $r3;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        b0 := @parameter1: byte;

        $r2 = new java.lang.Byte;

        specialinvoke $r2.<java.lang.Byte: void <init>(byte)>(b0);

        $r3 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Byte getByte(java.lang.String,java.lang.Byte)>(r1, $r2);

        $b1 = virtualinvoke $r3.<java.lang.Byte: byte byteValue()>();

        return $b1;
    }

    public java.lang.Byte getByte(java.lang.String, java.lang.Byte)
    {
        java.lang.ClassCastException $r3;
        java.lang.StringBuffer $r4, $r5, $r6, $r7;
        java.lang.String r1, $r8, $r14;
        java.lang.Byte r10, $r12, $r13, $r15;
        boolean $z0, $z1;
        org.apache.commons.collections.ExtendedProperties r0, $r9, $r11;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.Byte;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = $r2 instanceof java.lang.Byte;

        if $z0 == 0 goto label1;

        $r15 = (java.lang.Byte) $r2;

        return $r15;

     label1:
        $z1 = $r2 instanceof java.lang.String;

        if $z1 == 0 goto label2;

        $r13 = new java.lang.Byte;

        $r14 = (java.lang.String) $r2;

        specialinvoke $r13.<java.lang.Byte: void <init>(java.lang.String)>($r14);

        virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r13);

        return $r13;

     label2:
        if $r2 != null goto label4;

        $r9 = r0.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        if $r9 == null goto label3;

        $r11 = r0.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        $r12 = virtualinvoke $r11.<org.apache.commons.collections.ExtendedProperties: java.lang.Byte getByte(java.lang.String,java.lang.Byte)>(r1, r10);

        return $r12;

     label3:
        return r10;

     label4:
        $r3 = new java.lang.ClassCastException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to a Byte object");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.ClassCastException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public short getShort(java.lang.String)
    {
        org.apache.commons.collections.ExtendedProperties r0;
        short $s0;
        java.lang.Short $r2;
        java.lang.StringBuffer $r4, $r5, $r6, $r7;
        java.lang.String r1, $r8;
        java.util.NoSuchElementException $r3;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Short getShort(java.lang.String,java.lang.Short)>(r1, null);

        if $r2 == null goto label1;

        $s0 = virtualinvoke $r2.<java.lang.Short: short shortValue()>();

        return $s0;

     label1:
        $r3 = new java.util.NoSuchElementException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to an existing object");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public short getShort(java.lang.String, short)
    {
        short s0, $s1;
        java.lang.Short $r2, $r3;
        java.lang.String r1;
        org.apache.commons.collections.ExtendedProperties r0;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        s0 := @parameter1: short;

        $r2 = new java.lang.Short;

        specialinvoke $r2.<java.lang.Short: void <init>(short)>(s0);

        $r3 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Short getShort(java.lang.String,java.lang.Short)>(r1, $r2);

        $s1 = virtualinvoke $r3.<java.lang.Short: short shortValue()>();

        return $s1;
    }

    public java.lang.Short getShort(java.lang.String, java.lang.Short)
    {
        java.lang.ClassCastException $r3;
        java.lang.StringBuffer $r4, $r5, $r6, $r7;
        java.lang.Short r10, $r12, $r13, $r15;
        java.lang.String r1, $r8, $r14;
        boolean $z0, $z1;
        org.apache.commons.collections.ExtendedProperties r0, $r9, $r11;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.Short;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = $r2 instanceof java.lang.Short;

        if $z0 == 0 goto label1;

        $r15 = (java.lang.Short) $r2;

        return $r15;

     label1:
        $z1 = $r2 instanceof java.lang.String;

        if $z1 == 0 goto label2;

        $r13 = new java.lang.Short;

        $r14 = (java.lang.String) $r2;

        specialinvoke $r13.<java.lang.Short: void <init>(java.lang.String)>($r14);

        virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r13);

        return $r13;

     label2:
        if $r2 != null goto label4;

        $r9 = r0.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        if $r9 == null goto label3;

        $r11 = r0.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        $r12 = virtualinvoke $r11.<org.apache.commons.collections.ExtendedProperties: java.lang.Short getShort(java.lang.String,java.lang.Short)>(r1, r10);

        return $r12;

     label3:
        return r10;

     label4:
        $r3 = new java.lang.ClassCastException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to a Short object");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.ClassCastException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public int getInt(java.lang.String)
    {
        int $i0;
        java.lang.String r1;
        org.apache.commons.collections.ExtendedProperties r0;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: int getInteger(java.lang.String)>(r1);

        return $i0;
    }

    public int getInt(java.lang.String, int)
    {
        int i0, $i1;
        java.lang.String r1;
        org.apache.commons.collections.ExtendedProperties r0;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: int getInteger(java.lang.String,int)>(r1, i0);

        return $i1;
    }

    public int getInteger(java.lang.String)
    {
        org.apache.commons.collections.ExtendedProperties r0;
        java.lang.Integer $r2;
        java.lang.StringBuffer $r4, $r5, $r6, $r7;
        int $i0;
        java.lang.String r1, $r8;
        java.util.NoSuchElementException $r3;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(r1, null);

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        $r3 = new java.util.NoSuchElementException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to an existing object");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public int getInteger(java.lang.String, int)
    {
        int $i0, i1;
        java.lang.String r1;
        org.apache.commons.collections.ExtendedProperties r0;
        java.lang.Integer $r2;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(r1, null);

        if $r2 != null goto label1;

        return i1;

     label1:
        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public java.lang.Integer getInteger(java.lang.String, java.lang.Integer)
    {
        java.lang.ClassCastException $r3;
        java.lang.Integer r10, $r12, $r13, $r15;
        java.lang.StringBuffer $r4, $r5, $r6, $r7;
        java.lang.String r1, $r8, $r14;
        boolean $z0, $z1;
        org.apache.commons.collections.ExtendedProperties r0, $r9, $r11;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.Integer;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = $r2 instanceof java.lang.Integer;

        if $z0 == 0 goto label1;

        $r15 = (java.lang.Integer) $r2;

        return $r15;

     label1:
        $z1 = $r2 instanceof java.lang.String;

        if $z1 == 0 goto label2;

        $r13 = new java.lang.Integer;

        $r14 = (java.lang.String) $r2;

        specialinvoke $r13.<java.lang.Integer: void <init>(java.lang.String)>($r14);

        virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r13);

        return $r13;

     label2:
        if $r2 != null goto label4;

        $r9 = r0.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        if $r9 == null goto label3;

        $r11 = r0.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        $r12 = virtualinvoke $r11.<org.apache.commons.collections.ExtendedProperties: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>(r1, r10);

        return $r12;

     label3:
        return r10;

     label4:
        $r3 = new java.lang.ClassCastException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to a Integer object");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.ClassCastException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public long getLong(java.lang.String)
    {
        long $l0;
        org.apache.commons.collections.ExtendedProperties r0;
        java.lang.Long $r2;
        java.lang.StringBuffer $r4, $r5, $r6, $r7;
        java.lang.String r1, $r8;
        java.util.NoSuchElementException $r3;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Long getLong(java.lang.String,java.lang.Long)>(r1, null);

        if $r2 == null goto label1;

        $l0 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        return $l0;

     label1:
        $r3 = new java.util.NoSuchElementException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to an existing object");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public long getLong(java.lang.String, long)
    {
        java.lang.Long $r2, $r3;
        long l0, $l1;
        java.lang.String r1;
        org.apache.commons.collections.ExtendedProperties r0;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r2 = new java.lang.Long;

        specialinvoke $r2.<java.lang.Long: void <init>(long)>(l0);

        $r3 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Long getLong(java.lang.String,java.lang.Long)>(r1, $r2);

        $l1 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        return $l1;
    }

    public java.lang.Long getLong(java.lang.String, java.lang.Long)
    {
        java.lang.ClassCastException $r3;
        java.lang.Long r10, $r12, $r13, $r15;
        java.lang.StringBuffer $r4, $r5, $r6, $r7;
        java.lang.String r1, $r8, $r14;
        boolean $z0, $z1;
        org.apache.commons.collections.ExtendedProperties r0, $r9, $r11;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.Long;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = $r2 instanceof java.lang.Long;

        if $z0 == 0 goto label1;

        $r15 = (java.lang.Long) $r2;

        return $r15;

     label1:
        $z1 = $r2 instanceof java.lang.String;

        if $z1 == 0 goto label2;

        $r13 = new java.lang.Long;

        $r14 = (java.lang.String) $r2;

        specialinvoke $r13.<java.lang.Long: void <init>(java.lang.String)>($r14);

        virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r13);

        return $r13;

     label2:
        if $r2 != null goto label4;

        $r9 = r0.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        if $r9 == null goto label3;

        $r11 = r0.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        $r12 = virtualinvoke $r11.<org.apache.commons.collections.ExtendedProperties: java.lang.Long getLong(java.lang.String,java.lang.Long)>(r1, r10);

        return $r12;

     label3:
        return r10;

     label4:
        $r3 = new java.lang.ClassCastException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to a Long object");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.ClassCastException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public float getFloat(java.lang.String)
    {
        java.lang.Float $r2;
        org.apache.commons.collections.ExtendedProperties r0;
        java.lang.StringBuffer $r4, $r5, $r6, $r7;
        float $f0;
        java.lang.String r1, $r8;
        java.util.NoSuchElementException $r3;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Float getFloat(java.lang.String,java.lang.Float)>(r1, null);

        if $r2 == null goto label1;

        $f0 = virtualinvoke $r2.<java.lang.Float: float floatValue()>();

        return $f0;

     label1:
        $r3 = new java.util.NoSuchElementException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to an existing object");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public float getFloat(java.lang.String, float)
    {
        java.lang.Float $r2, $r3;
        float f0, $f1;
        java.lang.String r1;
        org.apache.commons.collections.ExtendedProperties r0;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        f0 := @parameter1: float;

        $r2 = new java.lang.Float;

        specialinvoke $r2.<java.lang.Float: void <init>(float)>(f0);

        $r3 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Float getFloat(java.lang.String,java.lang.Float)>(r1, $r2);

        $f1 = virtualinvoke $r3.<java.lang.Float: float floatValue()>();

        return $f1;
    }

    public java.lang.Float getFloat(java.lang.String, java.lang.Float)
    {
        java.lang.Float r10, $r12, $r13, $r15;
        java.lang.ClassCastException $r3;
        java.lang.StringBuffer $r4, $r5, $r6, $r7;
        java.lang.String r1, $r8, $r14;
        boolean $z0, $z1;
        org.apache.commons.collections.ExtendedProperties r0, $r9, $r11;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.Float;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = $r2 instanceof java.lang.Float;

        if $z0 == 0 goto label1;

        $r15 = (java.lang.Float) $r2;

        return $r15;

     label1:
        $z1 = $r2 instanceof java.lang.String;

        if $z1 == 0 goto label2;

        $r13 = new java.lang.Float;

        $r14 = (java.lang.String) $r2;

        specialinvoke $r13.<java.lang.Float: void <init>(java.lang.String)>($r14);

        virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r13);

        return $r13;

     label2:
        if $r2 != null goto label4;

        $r9 = r0.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        if $r9 == null goto label3;

        $r11 = r0.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        $r12 = virtualinvoke $r11.<org.apache.commons.collections.ExtendedProperties: java.lang.Float getFloat(java.lang.String,java.lang.Float)>(r1, r10);

        return $r12;

     label3:
        return r10;

     label4:
        $r3 = new java.lang.ClassCastException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to a Float object");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.ClassCastException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public double getDouble(java.lang.String)
    {
        java.lang.Double $r2;
        org.apache.commons.collections.ExtendedProperties r0;
        java.lang.StringBuffer $r4, $r5, $r6, $r7;
        java.lang.String r1, $r8;
        java.util.NoSuchElementException $r3;
        double $d0;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Double getDouble(java.lang.String,java.lang.Double)>(r1, null);

        if $r2 == null goto label1;

        $d0 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        return $d0;

     label1:
        $r3 = new java.util.NoSuchElementException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to an existing object");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public double getDouble(java.lang.String, double)
    {
        java.lang.Double $r2, $r3;
        java.lang.String r1;
        org.apache.commons.collections.ExtendedProperties r0;
        double d0, $d1;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        $r2 = new java.lang.Double;

        specialinvoke $r2.<java.lang.Double: void <init>(double)>(d0);

        $r3 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Double getDouble(java.lang.String,java.lang.Double)>(r1, $r2);

        $d1 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        return $d1;
    }

    public java.lang.Double getDouble(java.lang.String, java.lang.Double)
    {
        java.lang.Double r10, $r12, $r13, $r15;
        java.lang.ClassCastException $r3;
        java.lang.StringBuffer $r4, $r5, $r6, $r7;
        java.lang.String r1, $r8, $r14;
        boolean $z0, $z1;
        org.apache.commons.collections.ExtendedProperties r0, $r9, $r11;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.collections.ExtendedProperties;

        r1 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.Double;

        $r2 = virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = $r2 instanceof java.lang.Double;

        if $z0 == 0 goto label1;

        $r15 = (java.lang.Double) $r2;

        return $r15;

     label1:
        $z1 = $r2 instanceof java.lang.String;

        if $z1 == 0 goto label2;

        $r13 = new java.lang.Double;

        $r14 = (java.lang.String) $r2;

        specialinvoke $r13.<java.lang.Double: void <init>(java.lang.String)>($r14);

        virtualinvoke r0.<org.apache.commons.collections.ExtendedProperties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r13);

        return $r13;

     label2:
        if $r2 != null goto label4;

        $r9 = r0.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        if $r9 == null goto label3;

        $r11 = r0.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties defaults>;

        $r12 = virtualinvoke $r11.<org.apache.commons.collections.ExtendedProperties: java.lang.Double getDouble(java.lang.String,java.lang.Double)>(r1, r10);

        return $r12;

     label3:
        return r10;

     label4:
        $r3 = new java.lang.ClassCastException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to a Double object");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.ClassCastException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public static org.apache.commons.collections.ExtendedProperties convertProperties(java.util.Properties)
    {
        java.util.Properties r1;
        java.util.Enumeration $r2;
        java.lang.Object $r3;
        java.lang.String r4, $r5;
        org.apache.commons.collections.ExtendedProperties $r0;
        boolean $z0;

        r1 := @parameter0: java.util.Properties;

        $r0 = new org.apache.commons.collections.ExtendedProperties;

        specialinvoke $r0.<org.apache.commons.collections.ExtendedProperties: void <init>()>();

        $r2 = virtualinvoke r1.<java.util.Properties: java.util.Enumeration propertyNames()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        r4 = (java.lang.String) $r3;

        $r5 = virtualinvoke r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r4);

        virtualinvoke $r0.<org.apache.commons.collections.ExtendedProperties: void setProperty(java.lang.String,java.lang.Object)>(r4, $r5);

        goto label1;

     label2:
        return $r0;
    }

    static boolean access$000(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.commons.collections.ExtendedProperties: boolean endsWithSlash(java.lang.String)>(r0);

        return $z0;
    }

    static void <clinit>()
    {
        <org.apache.commons.collections.ExtendedProperties: java.lang.String END_TOKEN> = "}";

        <org.apache.commons.collections.ExtendedProperties: java.lang.String START_TOKEN> = "${";

        <org.apache.commons.collections.ExtendedProperties: java.lang.String include> = "include";

        return;
    }
}
