class org.waveprotocol.box.server.waveserver.WaveServerImpl$2 extends java.lang.Object implements org.waveprotocol.wave.federation.WaveletFederationProvider$SubmitResultListener
{
    final org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener val$listener;
    final org.waveprotocol.box.server.waveserver.WaveServerImpl this$0;

    void <init>(org.waveprotocol.box.server.waveserver.WaveServerImpl, org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener)
    {
        org.waveprotocol.box.server.waveserver.WaveServerImpl$2 r0;
        org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener r2;
        org.waveprotocol.box.server.waveserver.WaveServerImpl r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveServerImpl$2;

        r1 := @parameter0: org.waveprotocol.box.server.waveserver.WaveServerImpl;

        r2 := @parameter1: org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener;

        r0.<org.waveprotocol.box.server.waveserver.WaveServerImpl$2: org.waveprotocol.box.server.waveserver.WaveServerImpl this$0> = r1;

        r0.<org.waveprotocol.box.server.waveserver.WaveServerImpl$2: org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener val$listener> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onFailure(org.waveprotocol.wave.federation.FederationErrorProto$FederationError)
    {
        org.waveprotocol.wave.federation.FederationErrorProto$FederationError r1;
        org.waveprotocol.box.server.waveserver.WaveServerImpl$2 r0;
        org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener $r2;
        java.lang.String $r3;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveServerImpl$2;

        r1 := @parameter0: org.waveprotocol.wave.federation.FederationErrorProto$FederationError;

        $r2 = r0.<org.waveprotocol.box.server.waveserver.WaveServerImpl$2: org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener val$listener>;

        $r3 = virtualinvoke r1.<org.waveprotocol.wave.federation.FederationErrorProto$FederationError: java.lang.String getErrorMessage()>();

        interfaceinvoke $r2.<org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener: void onFailure(java.lang.String)>($r3);

        return;
    }

    public void onSuccess(int, org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion, long)
    {
        int i0;
        org.waveprotocol.wave.model.version.HashedVersion $r3;
        long l1;
        org.waveprotocol.box.server.waveserver.WaveServerImpl$2 r0;
        org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener $r2;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveServerImpl$2;

        i0 := @parameter0: int;

        r1 := @parameter1: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion;

        l1 := @parameter2: long;

        $r2 = r0.<org.waveprotocol.box.server.waveserver.WaveServerImpl$2: org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener val$listener>;

        $r3 = staticinvoke <org.waveprotocol.box.server.common.CoreWaveletOperationSerializer: org.waveprotocol.wave.model.version.HashedVersion deserialize(org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion)>(r1);

        interfaceinvoke $r2.<org.waveprotocol.box.server.waveserver.WaveletProvider$SubmitRequestListener: void onSuccess(int,org.waveprotocol.wave.model.version.HashedVersion,long)>(i0, $r3, l1);

        return;
    }
}
