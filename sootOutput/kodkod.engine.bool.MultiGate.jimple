public abstract class kodkod.engine.bool.MultiGate extends kodkod.engine.bool.BooleanFormula
{
    final kodkod.engine.bool.Operator$Nary op;
    private final int label;
    private final int labelhash;
    private final int hashcode;
    static final boolean $assertionsDisabled;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lkodkod/engine/bool/MultiGate;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <kodkod.engine.bool.MultiGate: boolean $assertionsDisabled> = $z1;

        return;
    }

    void <init>(kodkod.engine.bool.Operator$Nary, int, int)
    {
        kodkod.engine.bool.Operator$Nary r1;
        java.lang.AssertionError $r2, $r3;
        kodkod.engine.bool.MultiGate r0;
        int i0, $i1, i2;
        boolean $z0, $z1;

        r0 := @this: kodkod.engine.bool.MultiGate;

        r1 := @parameter0: kodkod.engine.bool.Operator$Nary;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<kodkod.engine.bool.BooleanFormula: void <init>(kodkod.engine.bool.BooleanFormula)>(null);

        $z0 = <kodkod.engine.bool.MultiGate: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != null goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $z1 = <kodkod.engine.bool.MultiGate: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        if i0 >= 0 goto label2;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        r0.<kodkod.engine.bool.MultiGate: kodkod.engine.bool.Operator$Nary op> = r1;

        r0.<kodkod.engine.bool.MultiGate: int label> = i0;

        $i1 = staticinvoke <kodkod.util.ints.Ints: int superFastHash(int)>(i0);

        r0.<kodkod.engine.bool.MultiGate: int labelhash> = $i1;

        r0.<kodkod.engine.bool.MultiGate: int hashcode> = i2;

        return;
    }

    public final int label()
    {
        int $i0;
        kodkod.engine.bool.MultiGate r0;

        r0 := @this: kodkod.engine.bool.MultiGate;

        $i0 = r0.<kodkod.engine.bool.MultiGate: int label>;

        return $i0;
    }

    public final kodkod.engine.bool.Operator$Nary op()
    {
        kodkod.engine.bool.Operator$Nary $r1;
        kodkod.engine.bool.MultiGate r0;

        r0 := @this: kodkod.engine.bool.MultiGate;

        $r1 = r0.<kodkod.engine.bool.MultiGate: kodkod.engine.bool.Operator$Nary op>;

        return $r1;
    }

    public java.lang.Object accept(kodkod.engine.bool.BooleanVisitor, java.lang.Object)
    {
        kodkod.engine.bool.BooleanVisitor r0;
        java.lang.Object r2, $r3;
        kodkod.engine.bool.MultiGate r1;

        r1 := @this: kodkod.engine.bool.MultiGate;

        r0 := @parameter0: kodkod.engine.bool.BooleanVisitor;

        r2 := @parameter1: java.lang.Object;

        $r3 = interfaceinvoke r0.<kodkod.engine.bool.BooleanVisitor: java.lang.Object visit(kodkod.engine.bool.MultiGate,java.lang.Object)>(r1, r2);

        return $r3;
    }

    public java.lang.String toString()
    {
        kodkod.engine.bool.Operator$Nary $r4;
        java.util.Iterator $r2;
        kodkod.engine.bool.MultiGate r1;
        java.lang.StringBuilder $r0;
        java.lang.Object $r3, $r5;
        java.lang.String $r6;
        boolean $z0;

        r1 := @this: kodkod.engine.bool.MultiGate;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("(");

        $r2 = virtualinvoke r1.<kodkod.engine.bool.MultiGate: java.util.Iterator iterator()>();

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        goto label2;

     label1:
        $r4 = r1.<kodkod.engine.bool.MultiGate: kodkod.engine.bool.Operator$Nary op>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r5 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public final int hashCode()
    {
        int $i0;
        kodkod.engine.bool.MultiGate r0;

        r0 := @this: kodkod.engine.bool.MultiGate;

        $i0 = r0.<kodkod.engine.bool.MultiGate: int hashcode>;

        return $i0;
    }

    final int hash(kodkod.engine.bool.Operator)
    {
        kodkod.engine.bool.Operator$Nary $r2;
        int $i0;
        kodkod.engine.bool.Operator r0;
        kodkod.engine.bool.MultiGate r1;

        r1 := @this: kodkod.engine.bool.MultiGate;

        r0 := @parameter0: kodkod.engine.bool.Operator;

        $r2 = r1.<kodkod.engine.bool.MultiGate: kodkod.engine.bool.Operator$Nary op>;

        if r0 != $r2 goto label1;

        $i0 = r1.<kodkod.engine.bool.MultiGate: int hashcode>;

        goto label2;

     label1:
        $i0 = r1.<kodkod.engine.bool.MultiGate: int labelhash>;

     label2:
        return $i0;
    }

    public volatile kodkod.engine.bool.Operator op()
    {
        kodkod.engine.bool.Operator$Nary $r1;
        kodkod.engine.bool.MultiGate r0;

        r0 := @this: kodkod.engine.bool.MultiGate;

        $r1 = virtualinvoke r0.<kodkod.engine.bool.MultiGate: kodkod.engine.bool.Operator$Nary op()>();

        return $r1;
    }
}
