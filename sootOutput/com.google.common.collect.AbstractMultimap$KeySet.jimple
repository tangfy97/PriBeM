class com.google.common.collect.AbstractMultimap$KeySet extends java.util.AbstractSet
{
    final java.util.Map subMap;
    final com.google.common.collect.AbstractMultimap this$0;

    void <init>(com.google.common.collect.AbstractMultimap, java.util.Map)
    {
        com.google.common.collect.AbstractMultimap$KeySet r0;
        com.google.common.collect.AbstractMultimap r1;
        java.util.Map r2;

        r0 := @this: com.google.common.collect.AbstractMultimap$KeySet;

        r1 := @parameter0: com.google.common.collect.AbstractMultimap;

        r2 := @parameter1: java.util.Map;

        r0.<com.google.common.collect.AbstractMultimap$KeySet: com.google.common.collect.AbstractMultimap this$0> = r1;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        r0.<com.google.common.collect.AbstractMultimap$KeySet: java.util.Map subMap> = r2;

        return;
    }

    public int size()
    {
        int $i0;
        com.google.common.collect.AbstractMultimap$KeySet r0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.AbstractMultimap$KeySet;

        $r1 = r0.<com.google.common.collect.AbstractMultimap$KeySet: java.util.Map subMap>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public java.util.Iterator iterator()
    {
        com.google.common.collect.AbstractMultimap$KeySet$1 $r0;
        com.google.common.collect.AbstractMultimap$KeySet r1;

        r1 := @this: com.google.common.collect.AbstractMultimap$KeySet;

        $r0 = new com.google.common.collect.AbstractMultimap$KeySet$1;

        specialinvoke $r0.<com.google.common.collect.AbstractMultimap$KeySet$1: void <init>(com.google.common.collect.AbstractMultimap$KeySet)>(r1);

        return $r0;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.Map $r2;
        java.lang.Object r1;
        com.google.common.collect.AbstractMultimap$KeySet r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMultimap$KeySet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.AbstractMultimap$KeySet: java.util.Map subMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.Collection r4;
        com.google.common.collect.AbstractMultimap $r5;
        java.util.Map $r2;
        int $i0, i1;
        java.lang.Object r1, $r3;
        com.google.common.collect.AbstractMultimap$KeySet r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMultimap$KeySet;

        r1 := @parameter0: java.lang.Object;

        i1 = 0;

        $r2 = r0.<com.google.common.collect.AbstractMultimap$KeySet: java.util.Map subMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r4 = (java.util.Collection) $r3;

        if r4 == null goto label1;

        $i0 = interfaceinvoke r4.<java.util.Collection: int size()>();

        i1 = $i0;

        interfaceinvoke r4.<java.util.Collection: void clear()>();

        $r5 = r0.<com.google.common.collect.AbstractMultimap$KeySet: com.google.common.collect.AbstractMultimap this$0>;

        staticinvoke <com.google.common.collect.AbstractMultimap: int access$220(com.google.common.collect.AbstractMultimap,int)>($r5, $i0);

     label1:
        if i1 <= 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.util.Collection r0;
        com.google.common.collect.AbstractMultimap$KeySet r1;
        boolean $z0;

        r1 := @this: com.google.common.collect.AbstractMultimap$KeySet;

        r0 := @parameter0: java.util.Collection;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $z0 = specialinvoke r1.<java.util.AbstractSet: boolean removeAll(java.util.Collection)>(r0);

        return $z0;
    }

    public boolean containsAll(java.util.Collection)
    {
        java.util.Map $r1;
        java.util.Collection r3;
        java.util.Set $r2;
        com.google.common.collect.AbstractMultimap$KeySet r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMultimap$KeySet;

        r3 := @parameter0: java.util.Collection;

        $r1 = r0.<com.google.common.collect.AbstractMultimap$KeySet: java.util.Map subMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean containsAll(java.util.Collection)>(r3);

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Map $r2;
        java.util.Set $r3;
        java.lang.Object r1;
        com.google.common.collect.AbstractMultimap$KeySet r0;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.AbstractMultimap$KeySet;

        r1 := @parameter0: java.lang.Object;

        if r0 == r1 goto label1;

        $r2 = r0.<com.google.common.collect.AbstractMultimap$KeySet: java.util.Map subMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public int hashCode()
    {
        java.util.Map $r1;
        int $i0;
        java.util.Set $r2;
        com.google.common.collect.AbstractMultimap$KeySet r0;

        r0 := @this: com.google.common.collect.AbstractMultimap$KeySet;

        $r1 = r0.<com.google.common.collect.AbstractMultimap$KeySet: java.util.Map subMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $i0 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        return $i0;
    }
}
