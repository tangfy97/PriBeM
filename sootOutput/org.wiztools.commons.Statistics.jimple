public final class org.wiztools.commons.Statistics extends java.lang.Object
{
    private static final java.lang.String LOG_ARRAY_LENGTH_0;

    private void <init>()
    {
        org.wiztools.commons.Statistics r0;

        r0 := @this: org.wiztools.commons.Statistics;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int mean(int[]) throws java.lang.IllegalArgumentException
    {
        java.lang.IllegalArgumentException $r1;
        int[] r0;
        int $i0, i1, $i2, $i3, i4, i5, i6;

        r0 := @parameter0: int[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Length of array cannot be 0!");

        throw $r1;

     label1:
        i5 = 0;

        i1 = lengthof r0;

        i6 = 0;

     label2:
        if i6 >= i1 goto label3;

        i4 = r0[i6];

        i5 = i5 + i4;

        i6 = i6 + 1;

        goto label2;

     label3:
        $i2 = lengthof r0;

        $i3 = i5 / $i2;

        return $i3;
    }

    public static long mean(long[]) throws java.lang.IllegalArgumentException
    {
        long $l3, $l4, l5, l6;
        java.lang.IllegalArgumentException $r1;
        long[] r0;
        int $i0, i1, $i2, i7;

        r0 := @parameter0: long[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Length of array cannot be 0!");

        throw $r1;

     label1:
        l6 = 0L;

        i1 = lengthof r0;

        i7 = 0;

     label2:
        if i7 >= i1 goto label3;

        l5 = r0[i7];

        l6 = l6 + l5;

        i7 = i7 + 1;

        goto label2;

     label3:
        $i2 = lengthof r0;

        $l3 = (long) $i2;

        $l4 = l6 / $l3;

        return $l4;
    }

    public static float mean(float[]) throws java.lang.IllegalArgumentException
    {
        float[] r0;
        java.lang.IllegalArgumentException $r1;
        int $i0, i1, $i2, i3;
        float $f0, $f1, f2, f3;

        r0 := @parameter0: float[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Length of array cannot be 0!");

        throw $r1;

     label1:
        f3 = 0.0F;

        i1 = lengthof r0;

        i3 = 0;

     label2:
        if i3 >= i1 goto label3;

        f2 = r0[i3];

        f3 = f3 + f2;

        i3 = i3 + 1;

        goto label2;

     label3:
        $i2 = lengthof r0;

        $f0 = (float) $i2;

        $f1 = f3 / $f0;

        return $f1;
    }

    public static double mean(double[]) throws java.lang.IllegalArgumentException
    {
        double[] r0;
        java.lang.IllegalArgumentException $r1;
        int $i0, i1, $i2, i3;
        float $f0, $f1, f2;
        double $d0, d1, $d2, $d3;

        r0 := @parameter0: double[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Length of array cannot be 0!");

        throw $r1;

     label1:
        f2 = 0.0F;

        i1 = lengthof r0;

        i3 = 0;

     label2:
        if i3 >= i1 goto label3;

        d1 = r0[i3];

        $d2 = (double) f2;

        $d3 = $d2 + d1;

        f2 = (float) $d3;

        i3 = i3 + 1;

        goto label2;

     label3:
        $i2 = lengthof r0;

        $f0 = (float) $i2;

        $f1 = f2 / $f0;

        $d0 = (double) $f1;

        return $d0;
    }

    public static int median(int[]) throws java.lang.IllegalArgumentException
    {
        java.lang.IllegalArgumentException $r1;
        int[] r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;

        r0 := @parameter0: int[];

        $i0 = lengthof r0;

        if $i0 >= 1 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label1:
        staticinvoke <java.util.Arrays: void sort(int[])>(r0);

        $i1 = lengthof r0;

        $i2 = $i1 % 2;

        if $i2 != 0 goto label2;

        $i5 = lengthof r0;

        i11 = $i5 / 2;

        $i8 = r0[i11];

        $i6 = i11 - 1;

        $i7 = r0[$i6];

        $i9 = $i8 + $i7;

        $i10 = $i9 / 2;

        return $i10;

     label2:
        $i3 = lengthof r0;

        i12 = $i3 / 2;

        $i4 = r0[i12];

        return $i4;
    }

    public static int[] mode(int[]) throws java.lang.IllegalArgumentException
    {
        org.wiztools.commons.Statistics$ModeCompute $r1;
        java.lang.Integer $r6, $r7;
        int[] r0, r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        java.util.Iterator $r4;
        java.lang.IllegalArgumentException $r8;
        java.util.List $r2;
        java.lang.Object $r5;

        r0 := @parameter0: int[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Length of array cannot be 0!");

        throw $r8;

     label1:
        $r1 = new org.wiztools.commons.Statistics$ModeCompute;

        specialinvoke $r1.<org.wiztools.commons.Statistics$ModeCompute: void <init>(org.wiztools.commons.Statistics$1)>(null);

        i6 = 0;

     label2:
        $i1 = lengthof r0;

        if i6 >= $i1 goto label3;

        $i5 = r0[i6];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        virtualinvoke $r1.<org.wiztools.commons.Statistics$ModeCompute: void add(java.lang.Number)>($r7);

        i6 = i6 + 1;

        goto label2;

     label3:
        $r2 = virtualinvoke $r1.<org.wiztools.commons.Statistics$ModeCompute: java.util.List getMode()>();

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        r3 = newarray (int)[$i2];

        $r4 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        i7 = 0;

     label4:
        $i3 = lengthof r3;

        if i7 >= $i3 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.Integer) $r5;

        $i4 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        r3[i7] = $i4;

        i7 = i7 + 1;

        goto label4;

     label5:
        return r3;
    }

    public static void <clinit>()
    {
        <org.wiztools.commons.Statistics: java.lang.String LOG_ARRAY_LENGTH_0> = "Length of array cannot be 0!";

        return;
    }
}
