public class org.jdesktop.swingx.geom.Morphing2D extends java.lang.Object implements java.awt.Shape
{
    private double morph;
    private org.jdesktop.swingx.geom.Morphing2D$Geometry startGeometry;
    private org.jdesktop.swingx.geom.Morphing2D$Geometry endGeometry;

    public void <init>(java.awt.Shape, java.awt.Shape)
    {
        double[] $r8, $r10, $r11;
        int $i0, $i1;
        java.awt.Shape r2, r4;
        org.jdesktop.swingx.geom.Morphing2D$Geometry $r1, $r3, $r5, $r6, $r7, $r9, $r12, $r13;
        org.jdesktop.swingx.geom.Morphing2D r0;
        java.awt.geom.IllegalPathStateException $r14;

        r0 := @this: org.jdesktop.swingx.geom.Morphing2D;

        r2 := @parameter0: java.awt.Shape;

        r4 := @parameter1: java.awt.Shape;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.jdesktop.swingx.geom.Morphing2D$Geometry;

        specialinvoke $r1.<org.jdesktop.swingx.geom.Morphing2D$Geometry: void <init>(java.awt.Shape)>(r2);

        r0.<org.jdesktop.swingx.geom.Morphing2D: org.jdesktop.swingx.geom.Morphing2D$Geometry startGeometry> = $r1;

        $r3 = new org.jdesktop.swingx.geom.Morphing2D$Geometry;

        specialinvoke $r3.<org.jdesktop.swingx.geom.Morphing2D$Geometry: void <init>(java.awt.Shape)>(r4);

        r0.<org.jdesktop.swingx.geom.Morphing2D: org.jdesktop.swingx.geom.Morphing2D$Geometry endGeometry> = $r3;

        $r5 = r0.<org.jdesktop.swingx.geom.Morphing2D: org.jdesktop.swingx.geom.Morphing2D$Geometry startGeometry>;

        $i0 = virtualinvoke $r5.<org.jdesktop.swingx.geom.Morphing2D$Geometry: int getWindingRule()>();

        $r6 = r0.<org.jdesktop.swingx.geom.Morphing2D: org.jdesktop.swingx.geom.Morphing2D$Geometry endGeometry>;

        $i1 = virtualinvoke $r6.<org.jdesktop.swingx.geom.Morphing2D$Geometry: int getWindingRule()>();

        if $i0 == $i1 goto label1;

        $r14 = new java.awt.geom.IllegalPathStateException;

        specialinvoke $r14.<java.awt.geom.IllegalPathStateException: void <init>(java.lang.String)>("shapes must use same winding rule");

        throw $r14;

     label1:
        $r7 = r0.<org.jdesktop.swingx.geom.Morphing2D: org.jdesktop.swingx.geom.Morphing2D$Geometry startGeometry>;

        $r8 = virtualinvoke $r7.<org.jdesktop.swingx.geom.Morphing2D$Geometry: double[] getTvals()>();

        $r9 = r0.<org.jdesktop.swingx.geom.Morphing2D: org.jdesktop.swingx.geom.Morphing2D$Geometry endGeometry>;

        $r10 = virtualinvoke $r9.<org.jdesktop.swingx.geom.Morphing2D$Geometry: double[] getTvals()>();

        $r11 = staticinvoke <org.jdesktop.swingx.geom.Morphing2D: double[] mergeTvals(double[],double[])>($r8, $r10);

        $r12 = r0.<org.jdesktop.swingx.geom.Morphing2D: org.jdesktop.swingx.geom.Morphing2D$Geometry startGeometry>;

        virtualinvoke $r12.<org.jdesktop.swingx.geom.Morphing2D$Geometry: void setTvals(double[])>($r11);

        $r13 = r0.<org.jdesktop.swingx.geom.Morphing2D: org.jdesktop.swingx.geom.Morphing2D$Geometry endGeometry>;

        virtualinvoke $r13.<org.jdesktop.swingx.geom.Morphing2D$Geometry: void setTvals(double[])>($r11);

        return;
    }

    public double getMorphing()
    {
        org.jdesktop.swingx.geom.Morphing2D r0;
        double $d0;

        r0 := @this: org.jdesktop.swingx.geom.Morphing2D;

        $d0 = r0.<org.jdesktop.swingx.geom.Morphing2D: double morph>;

        return $d0;
    }

    public void setMorphing(double)
    {
        byte $b0, $b1;
        org.jdesktop.swingx.geom.Morphing2D r0;
        int $i2, $i3;
        double d0;

        r0 := @this: org.jdesktop.swingx.geom.Morphing2D;

        d0 := @parameter0: double;

        $b0 = d0 cmpl 1.0;

        $i2 = (int) $b0;

        if $i2 <= 0 goto label1;

        d0 = 1.0;

        goto label3;

     label1:
        $b1 = d0 cmpl 0.0;

        $i3 = (int) $b1;

        if $i3 < 0 goto label2;

        goto label3;

     label2:
        d0 = 0.0;

     label3:
        r0.<org.jdesktop.swingx.geom.Morphing2D: double morph> = d0;

        return;
    }

    private static double interp(double, double, double)
    {
        double d0, d1, d2, $d3, $d4, $d5;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $d3 = d1 - d0;

        $d4 = $d3 * d2;

        $d5 = d0 + $d4;

        return $d5;
    }

    private static double[] mergeTvals(double[], double[])
    {
        double[] r0, r1, $r2;
        byte $b2, $b3, $b5, $b6;
        int $i0, $i1, $i4, i7, i8, i9, i10, i11, i12, $i13, $i14, $i15, $i16, $i17;
        double d0, d1, d2, d3;

        r0 := @parameter0: double[];

        r1 := @parameter1: double[];

        i7 = 0;

        i8 = 0;

        i9 = 0;

     label1:
        $i0 = lengthof r0;

        if i7 >= $i0 goto label4;

        $i4 = lengthof r1;

        if i8 >= $i4 goto label4;

        d3 = r0[i7];

        d2 = r1[i8];

        $b5 = d3 cmpg d2;

        $i14 = (int) $b5;

        if $i14 > 0 goto label2;

        i7 = i7 + 1;

     label2:
        $b6 = d2 cmpg d3;

        $i15 = (int) $b6;

        if $i15 > 0 goto label3;

        i8 = i8 + 1;

     label3:
        i9 = i9 + 1;

        goto label1;

     label4:
        $r2 = newarray (double)[i9];

        i10 = 0;

        i11 = 0;

        i12 = 0;

     label5:
        $i13 = lengthof r0;

        if i10 >= $i13 goto label8;

        $i1 = lengthof r1;

        if i11 >= $i1 goto label8;

        d0 = r0[i10];

        d1 = r1[i11];

        $b2 = d0 cmpg d1;

        $i16 = (int) $b2;

        if $i16 > 0 goto label6;

        $r2[i12] = d0;

        i10 = i10 + 1;

     label6:
        $b3 = d1 cmpg d0;

        $i17 = (int) $b3;

        if $i17 > 0 goto label7;

        $r2[i12] = d1;

        i11 = i11 + 1;

     label7:
        i12 = i12 + 1;

        goto label5;

     label8:
        return $r2;
    }

    public java.awt.Rectangle getBounds()
    {
        org.jdesktop.swingx.geom.Morphing2D r0;
        java.awt.Rectangle $r2;
        java.awt.geom.Rectangle2D $r1;

        r0 := @this: org.jdesktop.swingx.geom.Morphing2D;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.geom.Morphing2D: java.awt.geom.Rectangle2D getBounds2D()>();

        $r2 = virtualinvoke $r1.<java.awt.geom.Rectangle2D: java.awt.Rectangle getBounds()>();

        return $r2;
    }

    public java.awt.geom.Rectangle2D getBounds2D()
    {
        byte $b3, $b4, $b5, $b6;
        java.awt.geom.Rectangle2D$Double $r11;
        int $i0, $i1, $i2, i7, $i8, $i9, $i10, $i11;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, d18, d19, d20, d21;
        org.jdesktop.swingx.geom.Morphing2D$Geometry $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10;
        org.jdesktop.swingx.geom.Morphing2D r0;

        r0 := @this: org.jdesktop.swingx.geom.Morphing2D;

        $r1 = r0.<org.jdesktop.swingx.geom.Morphing2D: org.jdesktop.swingx.geom.Morphing2D$Geometry startGeometry>;

        $i0 = virtualinvoke $r1.<org.jdesktop.swingx.geom.Morphing2D$Geometry: int getNumCoords()>();

        $r2 = r0.<org.jdesktop.swingx.geom.Morphing2D: org.jdesktop.swingx.geom.Morphing2D$Geometry startGeometry>;

        $d0 = virtualinvoke $r2.<org.jdesktop.swingx.geom.Morphing2D$Geometry: double getCoord(int)>(0);

        $r3 = r0.<org.jdesktop.swingx.geom.Morphing2D: org.jdesktop.swingx.geom.Morphing2D$Geometry endGeometry>;

        $d1 = virtualinvoke $r3.<org.jdesktop.swingx.geom.Morphing2D$Geometry: double getCoord(int)>(0);

        $d2 = r0.<org.jdesktop.swingx.geom.Morphing2D: double morph>;

        $d3 = staticinvoke <org.jdesktop.swingx.geom.Morphing2D: double interp(double,double,double)>($d0, $d1, $d2);

        d18 = $d3;

        d19 = $d3;

        $r4 = r0.<org.jdesktop.swingx.geom.Morphing2D: org.jdesktop.swingx.geom.Morphing2D$Geometry startGeometry>;

        $d4 = virtualinvoke $r4.<org.jdesktop.swingx.geom.Morphing2D$Geometry: double getCoord(int)>(1);

        $r5 = r0.<org.jdesktop.swingx.geom.Morphing2D: org.jdesktop.swingx.geom.Morphing2D$Geometry endGeometry>;

        $d5 = virtualinvoke $r5.<org.jdesktop.swingx.geom.Morphing2D$Geometry: double getCoord(int)>(1);

        $d6 = r0.<org.jdesktop.swingx.geom.Morphing2D: double morph>;

        $d7 = staticinvoke <org.jdesktop.swingx.geom.Morphing2D: double interp(double,double,double)>($d4, $d5, $d6);

        d20 = $d7;

        d21 = $d7;

        i7 = 2;

     label1:
        if i7 >= $i0 goto label6;

        $r7 = r0.<org.jdesktop.swingx.geom.Morphing2D: org.jdesktop.swingx.geom.Morphing2D$Geometry startGeometry>;

        $d10 = virtualinvoke $r7.<org.jdesktop.swingx.geom.Morphing2D$Geometry: double getCoord(int)>(i7);

        $r8 = r0.<org.jdesktop.swingx.geom.Morphing2D: org.jdesktop.swingx.geom.Morphing2D$Geometry endGeometry>;

        $d11 = virtualinvoke $r8.<org.jdesktop.swingx.geom.Morphing2D$Geometry: double getCoord(int)>(i7);

        $d12 = r0.<org.jdesktop.swingx.geom.Morphing2D: double morph>;

        $d13 = staticinvoke <org.jdesktop.swingx.geom.Morphing2D: double interp(double,double,double)>($d10, $d11, $d12);

        $r9 = r0.<org.jdesktop.swingx.geom.Morphing2D: org.jdesktop.swingx.geom.Morphing2D$Geometry startGeometry>;

        $i1 = i7 + 1;

        $d14 = virtualinvoke $r9.<org.jdesktop.swingx.geom.Morphing2D$Geometry: double getCoord(int)>($i1);

        $r10 = r0.<org.jdesktop.swingx.geom.Morphing2D: org.jdesktop.swingx.geom.Morphing2D$Geometry endGeometry>;

        $i2 = i7 + 1;

        $d15 = virtualinvoke $r10.<org.jdesktop.swingx.geom.Morphing2D$Geometry: double getCoord(int)>($i2);

        $d16 = r0.<org.jdesktop.swingx.geom.Morphing2D: double morph>;

        $d17 = staticinvoke <org.jdesktop.swingx.geom.Morphing2D: double interp(double,double,double)>($d14, $d15, $d16);

        $b3 = d19 cmpl $d13;

        $i8 = (int) $b3;

        if $i8 <= 0 goto label2;

        d19 = $d13;

     label2:
        $b4 = d21 cmpl $d17;

        $i9 = (int) $b4;

        if $i9 <= 0 goto label3;

        d21 = $d17;

     label3:
        $b5 = d18 cmpg $d13;

        $i10 = (int) $b5;

        if $i10 >= 0 goto label4;

        d18 = $d13;

     label4:
        $b6 = d20 cmpg $d17;

        $i11 = (int) $b6;

        if $i11 >= 0 goto label5;

        d20 = $d17;

     label5:
        i7 = i7 + 2;

        goto label1;

     label6:
        $r11 = new java.awt.geom.Rectangle2D$Double;

        $d9 = d18 - d19;

        $d8 = d20 - d21;

        specialinvoke $r11.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d19, d21, $d9, $d8);

        return $r11;
    }

    public boolean contains(double, double)
    {
        org.jdesktop.swingx.geom.Morphing2D r1;
        java.lang.InternalError $r0;
        double d0, d1;

        r1 := @this: org.jdesktop.swingx.geom.Morphing2D;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r0 = new java.lang.InternalError;

        specialinvoke $r0.<java.lang.InternalError: void <init>(java.lang.String)>("unimplemented");

        throw $r0;
    }

    public boolean contains(java.awt.geom.Point2D)
    {
        java.awt.geom.Point2D r1;
        org.jdesktop.swingx.geom.Morphing2D r0;
        double $d0, $d1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.geom.Morphing2D;

        r1 := @parameter0: java.awt.geom.Point2D;

        $d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.geom.Morphing2D: boolean contains(double,double)>($d0, $d1);

        return $z0;
    }

    public boolean intersects(double, double, double, double)
    {
        org.jdesktop.swingx.geom.Morphing2D r1;
        java.lang.InternalError $r0;
        double d0, d1, d2, d3;

        r1 := @this: org.jdesktop.swingx.geom.Morphing2D;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        $r0 = new java.lang.InternalError;

        specialinvoke $r0.<java.lang.InternalError: void <init>(java.lang.String)>("unimplemented");

        throw $r0;
    }

    public boolean intersects(java.awt.geom.Rectangle2D)
    {
        java.awt.geom.Rectangle2D r1;
        org.jdesktop.swingx.geom.Morphing2D r0;
        double $d0, $d1, $d2, $d3;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.geom.Morphing2D;

        r1 := @parameter0: java.awt.geom.Rectangle2D;

        $d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();

        $d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();

        $d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();

        $d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.geom.Morphing2D: boolean intersects(double,double,double,double)>($d0, $d1, $d2, $d3);

        return $z0;
    }

    public boolean contains(double, double, double, double)
    {
        org.jdesktop.swingx.geom.Morphing2D r1;
        java.lang.InternalError $r0;
        double d0, d1, d2, d3;

        r1 := @this: org.jdesktop.swingx.geom.Morphing2D;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        $r0 = new java.lang.InternalError;

        specialinvoke $r0.<java.lang.InternalError: void <init>(java.lang.String)>("unimplemented");

        throw $r0;
    }

    public boolean contains(java.awt.geom.Rectangle2D)
    {
        java.awt.geom.Rectangle2D r1;
        org.jdesktop.swingx.geom.Morphing2D r0;
        double $d0, $d1, $d2, $d3;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.geom.Morphing2D;

        r1 := @parameter0: java.awt.geom.Rectangle2D;

        $d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>();

        $d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>();

        $d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>();

        $d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>();

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.geom.Morphing2D: boolean contains(double,double,double,double)>($d0, $d1, $d2, $d3);

        return $z0;
    }

    public java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)
    {
        org.jdesktop.swingx.geom.Morphing2D$Iterator $r0;
        org.jdesktop.swingx.geom.Morphing2D$Geometry $r3, $r4;
        org.jdesktop.swingx.geom.Morphing2D r2;
        java.awt.geom.AffineTransform r1;
        double $d0;

        r2 := @this: org.jdesktop.swingx.geom.Morphing2D;

        r1 := @parameter0: java.awt.geom.AffineTransform;

        $r0 = new org.jdesktop.swingx.geom.Morphing2D$Iterator;

        $r4 = r2.<org.jdesktop.swingx.geom.Morphing2D: org.jdesktop.swingx.geom.Morphing2D$Geometry startGeometry>;

        $r3 = r2.<org.jdesktop.swingx.geom.Morphing2D: org.jdesktop.swingx.geom.Morphing2D$Geometry endGeometry>;

        $d0 = r2.<org.jdesktop.swingx.geom.Morphing2D: double morph>;

        specialinvoke $r0.<org.jdesktop.swingx.geom.Morphing2D$Iterator: void <init>(java.awt.geom.AffineTransform,org.jdesktop.swingx.geom.Morphing2D$Geometry,org.jdesktop.swingx.geom.Morphing2D$Geometry,double)>(r1, $r4, $r3, $d0);

        return $r0;
    }

    public java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform, double)
    {
        org.jdesktop.swingx.geom.Morphing2D r1;
        java.awt.geom.FlatteningPathIterator $r0;
        java.awt.geom.AffineTransform r2;
        java.awt.geom.PathIterator $r3;
        double d0;

        r1 := @this: org.jdesktop.swingx.geom.Morphing2D;

        r2 := @parameter0: java.awt.geom.AffineTransform;

        d0 := @parameter1: double;

        $r0 = new java.awt.geom.FlatteningPathIterator;

        $r3 = virtualinvoke r1.<org.jdesktop.swingx.geom.Morphing2D: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>(r2);

        specialinvoke $r0.<java.awt.geom.FlatteningPathIterator: void <init>(java.awt.geom.PathIterator,double)>($r3, d0);

        return $r0;
    }

    static double access$000(double, double, double)
    {
        double d0, d1, d2, $d3;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $d3 = staticinvoke <org.jdesktop.swingx.geom.Morphing2D: double interp(double,double,double)>(d0, d1, d2);

        return $d3;
    }
}
