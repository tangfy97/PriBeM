public class org.apache.cxf.wsdl11.SchemaSerializer extends java.lang.Object implements javax.wsdl.extensions.ExtensionSerializer
{

    public void <init>()
    {
        org.apache.cxf.wsdl11.SchemaSerializer r0;

        r0 := @this: org.apache.cxf.wsdl11.SchemaSerializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void marshall(java.lang.Class, javax.xml.namespace.QName, javax.wsdl.extensions.ExtensibilityElement, java.io.PrintWriter, javax.wsdl.Definition, javax.wsdl.extensions.ExtensionRegistry) throws javax.wsdl.WSDLException
    {
        java.io.PrintWriter r4;
        javax.wsdl.Definition r9;
        javax.wsdl.extensions.ExtensibilityElement r1;
        org.apache.cxf.wsdl11.SchemaSerializer r0;
        javax.wsdl.WSDLException $r6;
        javax.wsdl.extensions.ExtensionRegistry r10;
        org.w3c.dom.Element $r3;
        javax.xml.stream.XMLStreamException $r5;
        java.lang.Class r7;
        javax.xml.namespace.QName r8;
        javax.wsdl.extensions.schema.Schema $r2;

        r0 := @this: org.apache.cxf.wsdl11.SchemaSerializer;

        r7 := @parameter0: java.lang.Class;

        r8 := @parameter1: javax.xml.namespace.QName;

        r1 := @parameter2: javax.wsdl.extensions.ExtensibilityElement;

        r4 := @parameter3: java.io.PrintWriter;

        r9 := @parameter4: javax.wsdl.Definition;

        r10 := @parameter5: javax.wsdl.extensions.ExtensionRegistry;

     label1:
        $r2 = (javax.wsdl.extensions.schema.Schema) r1;

        $r3 = interfaceinvoke $r2.<javax.wsdl.extensions.schema.Schema: org.w3c.dom.Element getElement()>();

        specialinvoke r0.<org.apache.cxf.wsdl11.SchemaSerializer: void writeXml(org.w3c.dom.Node,java.io.PrintWriter)>($r3, r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new javax.wsdl.WSDLException;

        specialinvoke $r6.<javax.wsdl.WSDLException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>("", "Could not write schema.", $r5);

        throw $r6;

     label4:
        return;

        catch javax.xml.stream.XMLStreamException from label1 to label2 with label3;
    }

    private void writeXml(org.w3c.dom.Node, java.io.PrintWriter) throws javax.xml.stream.XMLStreamException
    {
        java.io.PrintWriter r0;
        javax.xml.transform.dom.DOMSource $r3;
        org.w3c.dom.Node r4;
        javax.xml.stream.XMLStreamWriter $r1;
        org.apache.cxf.wsdl11.SchemaSerializer r5;
        org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter $r2;

        r5 := @this: org.apache.cxf.wsdl11.SchemaSerializer;

        r4 := @parameter0: org.w3c.dom.Node;

        r0 := @parameter1: java.io.PrintWriter;

        $r1 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer)>(r0);

        $r2 = new org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter;

        specialinvoke $r2.<org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter: void <init>(javax.xml.stream.XMLStreamWriter,int)>($r1, 2);

        $r3 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r3.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>(r4);

        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void copy(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)>($r3, $r2);

        interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void close()>();

        return;
    }
}
