public class org.jdesktop.swingx.calendar.SingleDaySelectionModel extends org.jdesktop.swingx.calendar.AbstractDateSelectionModel
{
    private java.util.SortedSet selectedDates;
    private java.util.SortedSet unselectableDates;

    public void <init>()
    {
        org.jdesktop.swingx.calendar.SingleDaySelectionModel r0;

        r0 := @this: org.jdesktop.swingx.calendar.SingleDaySelectionModel;

        specialinvoke r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: void <init>(java.util.Locale)>(null);

        return;
    }

    public void <init>(java.util.Locale)
    {
        org.jdesktop.swingx.calendar.SingleDaySelectionModel r0;
        java.util.Locale r1;
        java.util.TreeSet $r2, $r3;

        r0 := @this: org.jdesktop.swingx.calendar.SingleDaySelectionModel;

        r1 := @parameter0: java.util.Locale;

        specialinvoke r0.<org.jdesktop.swingx.calendar.AbstractDateSelectionModel: void <init>(java.util.Locale)>(r1);

        $r2 = new java.util.TreeSet;

        specialinvoke $r2.<java.util.TreeSet: void <init>()>();

        r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: java.util.SortedSet selectedDates> = $r2;

        $r3 = new java.util.TreeSet;

        specialinvoke $r3.<java.util.TreeSet: void <init>()>();

        r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: java.util.SortedSet unselectableDates> = $r3;

        return;
    }

    public org.jdesktop.swingx.calendar.DateSelectionModel$SelectionMode getSelectionMode()
    {
        org.jdesktop.swingx.calendar.SingleDaySelectionModel r1;
        org.jdesktop.swingx.calendar.DateSelectionModel$SelectionMode $r0;

        r1 := @this: org.jdesktop.swingx.calendar.SingleDaySelectionModel;

        $r0 = <org.jdesktop.swingx.calendar.DateSelectionModel$SelectionMode: org.jdesktop.swingx.calendar.DateSelectionModel$SelectionMode SINGLE_SELECTION>;

        return $r0;
    }

    public void setSelectionMode(org.jdesktop.swingx.calendar.DateSelectionModel$SelectionMode)
    {
        org.jdesktop.swingx.calendar.SingleDaySelectionModel r0;
        org.jdesktop.swingx.calendar.DateSelectionModel$SelectionMode r1;

        r0 := @this: org.jdesktop.swingx.calendar.SingleDaySelectionModel;

        r1 := @parameter0: org.jdesktop.swingx.calendar.DateSelectionModel$SelectionMode;

        return;
    }

    public void addSelectionInterval(java.util.Date, java.util.Date)
    {
        org.jdesktop.swingx.calendar.SingleDaySelectionModel r0;
        java.util.Date r1, r2;

        r0 := @this: org.jdesktop.swingx.calendar.SingleDaySelectionModel;

        r1 := @parameter0: java.util.Date;

        r2 := @parameter1: java.util.Date;

        virtualinvoke r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: void setSelection(java.util.Date)>(r1);

        return;
    }

    public void setSelectionInterval(java.util.Date, java.util.Date)
    {
        org.jdesktop.swingx.calendar.SingleDaySelectionModel r0;
        java.util.Date r1, r2;

        r0 := @this: org.jdesktop.swingx.calendar.SingleDaySelectionModel;

        r1 := @parameter0: java.util.Date;

        r2 := @parameter1: java.util.Date;

        virtualinvoke r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: void setSelection(java.util.Date)>(r1);

        return;
    }

    public void removeSelectionInterval(java.util.Date, java.util.Date)
    {
        org.jdesktop.swingx.calendar.SingleDaySelectionModel r1;
        org.jdesktop.swingx.event.DateSelectionEvent$EventType $r4;
        java.util.SortedSet $r3;
        java.util.Date r0, r2;
        boolean $z0, $z1;

        r1 := @this: org.jdesktop.swingx.calendar.SingleDaySelectionModel;

        r0 := @parameter0: java.util.Date;

        r2 := @parameter1: java.util.Date;

        staticinvoke <org.jdesktop.swingx.util.Contract: java.lang.Object asNotNull(java.lang.Object,java.lang.String)>(r0, "date must not be null");

        $z0 = virtualinvoke r1.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: boolean isSelectionEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke r1.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: boolean isSelectionInInterval(java.util.Date,java.util.Date)>(r0, r2);

        if $z1 == 0 goto label2;

        $r3 = r1.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: java.util.SortedSet selectedDates>;

        interfaceinvoke $r3.<java.util.SortedSet: void clear()>();

        $r4 = <org.jdesktop.swingx.event.DateSelectionEvent$EventType: org.jdesktop.swingx.event.DateSelectionEvent$EventType DATES_REMOVED>;

        virtualinvoke r1.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: void fireValueChanged(org.jdesktop.swingx.event.DateSelectionEvent$EventType)>($r4);

     label2:
        return;
    }

    protected boolean isSelectionInInterval(java.util.Date, java.util.Date)
    {
        org.jdesktop.swingx.calendar.SingleDaySelectionModel r0;
        java.util.SortedSet $r1, $r6;
        java.util.Date r3, $r4, $r5, r8, $r9, $r10;
        java.lang.Object $r2, $r7;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.calendar.SingleDaySelectionModel;

        r3 := @parameter0: java.util.Date;

        r8 := @parameter1: java.util.Date;

        $r1 = r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: java.util.SortedSet selectedDates>;

        $r2 = interfaceinvoke $r1.<java.util.SortedSet: java.lang.Object first()>();

        $r4 = (java.util.Date) $r2;

        $r5 = virtualinvoke r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: java.util.Date startOfDay(java.util.Date)>(r3);

        $z0 = virtualinvoke $r4.<java.util.Date: boolean before(java.util.Date)>($r5);

        if $z0 != 0 goto label1;

        $r6 = r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: java.util.SortedSet selectedDates>;

        $r7 = interfaceinvoke $r6.<java.util.SortedSet: java.lang.Object first()>();

        $r9 = (java.util.Date) $r7;

        $r10 = virtualinvoke r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: java.util.Date endOfDay(java.util.Date)>(r8);

        $z1 = virtualinvoke $r9.<java.util.Date: boolean after(java.util.Date)>($r10);

        if $z1 == 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    protected void setSelection(java.util.Date)
    {
        org.jdesktop.swingx.calendar.SingleDaySelectionModel r1;
        org.jdesktop.swingx.event.DateSelectionEvent$EventType $r4;
        java.util.SortedSet $r2, $r3;
        java.util.Date r0;
        boolean $z0, $z1;

        r1 := @this: org.jdesktop.swingx.calendar.SingleDaySelectionModel;

        r0 := @parameter0: java.util.Date;

        staticinvoke <org.jdesktop.swingx.util.Contract: java.lang.Object asNotNull(java.lang.Object,java.lang.String)>(r0, "date must not be null");

        $z0 = specialinvoke r1.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: boolean isSelectedStrict(java.util.Date)>(r0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke r1.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: boolean isSelectable(java.util.Date)>(r0);

        if $z1 == 0 goto label2;

        $r2 = r1.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: java.util.SortedSet selectedDates>;

        interfaceinvoke $r2.<java.util.SortedSet: void clear()>();

        $r3 = r1.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: java.util.SortedSet selectedDates>;

        interfaceinvoke $r3.<java.util.SortedSet: boolean add(java.lang.Object)>(r0);

        $r4 = <org.jdesktop.swingx.event.DateSelectionEvent$EventType: org.jdesktop.swingx.event.DateSelectionEvent$EventType DATES_SET>;

        virtualinvoke r1.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: void fireValueChanged(org.jdesktop.swingx.event.DateSelectionEvent$EventType)>($r4);

     label2:
        return;
    }

    private boolean isSelectedStrict(java.util.Date)
    {
        org.jdesktop.swingx.calendar.SingleDaySelectionModel r0;
        java.util.SortedSet $r1;
        java.util.Date r3, $r4;
        java.lang.Object $r2;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.calendar.SingleDaySelectionModel;

        r3 := @parameter0: java.util.Date;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: boolean isSelectionEmpty()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: java.util.SortedSet selectedDates>;

        $r2 = interfaceinvoke $r1.<java.util.SortedSet: java.lang.Object first()>();

        $r4 = (java.util.Date) $r2;

        $z1 = virtualinvoke $r4.<java.util.Date: boolean equals(java.lang.Object)>(r3);

        return $z1;

     label1:
        return 0;
    }

    public java.util.Date getFirstSelectionDate()
    {
        org.jdesktop.swingx.calendar.SingleDaySelectionModel r0;
        java.util.SortedSet $r1;
        java.util.Date $r3;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.calendar.SingleDaySelectionModel;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: boolean isSelectionEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r1 = r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: java.util.SortedSet selectedDates>;

        $r2 = interfaceinvoke $r1.<java.util.SortedSet: java.lang.Object first()>();

        $r3 = (java.util.Date) $r2;

     label2:
        return $r3;
    }

    public java.util.Date getLastSelectionDate()
    {
        org.jdesktop.swingx.calendar.SingleDaySelectionModel r0;
        java.util.SortedSet $r1;
        java.util.Date $r3;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.calendar.SingleDaySelectionModel;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: boolean isSelectionEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r1 = r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: java.util.SortedSet selectedDates>;

        $r2 = interfaceinvoke $r1.<java.util.SortedSet: java.lang.Object last()>();

        $r3 = (java.util.Date) $r2;

     label2:
        return $r3;
    }

    public boolean isSelectable(java.util.Date)
    {
        org.jdesktop.swingx.calendar.SingleDaySelectionModel r0;
        java.util.Date r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.jdesktop.swingx.calendar.SingleDaySelectionModel;

        r1 := @parameter0: java.util.Date;

        $z0 = specialinvoke r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: boolean outOfBounds(java.util.Date)>(r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = specialinvoke r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: boolean inUnselectables(java.util.Date)>(r1);

        if $z1 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private boolean inUnselectables(java.util.Date)
    {
        org.jdesktop.swingx.calendar.SingleDaySelectionModel r0;
        java.util.SortedSet $r1;
        java.util.Iterator $r2;
        java.util.Date r4, r5;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.calendar.SingleDaySelectionModel;

        r5 := @parameter0: java.util.Date;

        $r1 = r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: java.util.SortedSet unselectableDates>;

        $r2 = interfaceinvoke $r1.<java.util.SortedSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Date) $r3;

        $z1 = virtualinvoke r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: boolean isSameDay(java.util.Date,java.util.Date)>(r4, r5);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    private boolean outOfBounds(java.util.Date)
    {
        org.jdesktop.swingx.calendar.SingleDaySelectionModel r0;
        java.util.Date r1;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.calendar.SingleDaySelectionModel;

        r1 := @parameter0: java.util.Date;

        $z0 = specialinvoke r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: boolean belowLowerBound(java.util.Date)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: boolean aboveUpperBound(java.util.Date)>(r1);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private boolean aboveUpperBound(java.util.Date)
    {
        org.jdesktop.swingx.calendar.SingleDaySelectionModel r0;
        java.util.Date $r1, $r2, $r3, r4;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.calendar.SingleDaySelectionModel;

        r4 := @parameter0: java.util.Date;

        $r1 = r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: java.util.Date upperBound>;

        if $r1 == null goto label1;

        $r2 = r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: java.util.Date upperBound>;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: java.util.Date endOfDay(java.util.Date)>($r2);

        $z0 = virtualinvoke $r3.<java.util.Date: boolean before(java.util.Date)>(r4);

        return $z0;

     label1:
        return 0;
    }

    private boolean belowLowerBound(java.util.Date)
    {
        org.jdesktop.swingx.calendar.SingleDaySelectionModel r0;
        java.util.Date $r1, $r2, $r3, r4;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.calendar.SingleDaySelectionModel;

        r4 := @parameter0: java.util.Date;

        $r1 = r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: java.util.Date lowerBound>;

        if $r1 == null goto label1;

        $r2 = r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: java.util.Date lowerBound>;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: java.util.Date startOfDay(java.util.Date)>($r2);

        $z0 = virtualinvoke $r3.<java.util.Date: boolean after(java.util.Date)>(r4);

        return $z0;

     label1:
        return 0;
    }

    public void clearSelection()
    {
        org.jdesktop.swingx.calendar.SingleDaySelectionModel r0;
        org.jdesktop.swingx.event.DateSelectionEvent$EventType $r2;
        java.util.SortedSet $r1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.calendar.SingleDaySelectionModel;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: boolean isSelectionEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: java.util.SortedSet selectedDates>;

        interfaceinvoke $r1.<java.util.SortedSet: void clear()>();

        $r2 = <org.jdesktop.swingx.event.DateSelectionEvent$EventType: org.jdesktop.swingx.event.DateSelectionEvent$EventType SELECTION_CLEARED>;

        virtualinvoke r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: void fireValueChanged(org.jdesktop.swingx.event.DateSelectionEvent$EventType)>($r2);

        return;
    }

    public java.util.SortedSet getSelection()
    {
        org.jdesktop.swingx.calendar.SingleDaySelectionModel r1;
        java.util.SortedSet $r2;
        java.util.TreeSet $r0;

        r1 := @this: org.jdesktop.swingx.calendar.SingleDaySelectionModel;

        $r0 = new java.util.TreeSet;

        $r2 = r1.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: java.util.SortedSet selectedDates>;

        specialinvoke $r0.<java.util.TreeSet: void <init>(java.util.SortedSet)>($r2);

        return $r0;
    }

    public boolean isSelected(java.util.Date)
    {
        org.jdesktop.swingx.calendar.SingleDaySelectionModel r1;
        java.util.SortedSet $r2;
        java.util.Date r0, $r4;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r1 := @this: org.jdesktop.swingx.calendar.SingleDaySelectionModel;

        r0 := @parameter0: java.util.Date;

        staticinvoke <org.jdesktop.swingx.util.Contract: java.lang.Object asNotNull(java.lang.Object,java.lang.String)>(r0, "date must not be null");

        $z0 = virtualinvoke r1.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: boolean isSelectionEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = r1.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: java.util.SortedSet selectedDates>;

        $r3 = interfaceinvoke $r2.<java.util.SortedSet: java.lang.Object first()>();

        $r4 = (java.util.Date) $r3;

        $z1 = virtualinvoke r1.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: boolean isSameDay(java.util.Date,java.util.Date)>($r4, r0);

        return $z1;
    }

    public java.util.Date getNormalizedDate(java.util.Date)
    {
        org.jdesktop.swingx.calendar.SingleDaySelectionModel r2;
        java.util.Date $r0, r1;
        long $l0;

        r2 := @this: org.jdesktop.swingx.calendar.SingleDaySelectionModel;

        r1 := @parameter0: java.util.Date;

        $r0 = new java.util.Date;

        $l0 = virtualinvoke r1.<java.util.Date: long getTime()>();

        specialinvoke $r0.<java.util.Date: void <init>(long)>($l0);

        return $r0;
    }

    public boolean isSelectionEmpty()
    {
        org.jdesktop.swingx.calendar.SingleDaySelectionModel r0;
        java.util.SortedSet $r1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.calendar.SingleDaySelectionModel;

        $r1 = r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: java.util.SortedSet selectedDates>;

        $z0 = interfaceinvoke $r1.<java.util.SortedSet: boolean isEmpty()>();

        return $z0;
    }

    public java.util.SortedSet getUnselectableDates()
    {
        org.jdesktop.swingx.calendar.SingleDaySelectionModel r1;
        java.util.SortedSet $r2;
        java.util.TreeSet $r0;

        r1 := @this: org.jdesktop.swingx.calendar.SingleDaySelectionModel;

        $r0 = new java.util.TreeSet;

        $r2 = r1.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: java.util.SortedSet unselectableDates>;

        specialinvoke $r0.<java.util.TreeSet: void <init>(java.util.SortedSet)>($r2);

        return $r0;
    }

    public void setUnselectableDates(java.util.SortedSet)
    {
        org.jdesktop.swingx.calendar.SingleDaySelectionModel r1;
        org.jdesktop.swingx.event.DateSelectionEvent$EventType $r4;
        java.util.SortedSet r0, $r2, $r7;
        java.util.Iterator $r3;
        java.util.Date r6;
        java.lang.Object $r5;
        boolean $z0;

        r1 := @this: org.jdesktop.swingx.calendar.SingleDaySelectionModel;

        r0 := @parameter0: java.util.SortedSet;

        staticinvoke <org.jdesktop.swingx.util.Contract: java.lang.Object asNotNull(java.lang.Object,java.lang.String)>(r0, "unselectable dates must not be null");

        $r2 = r1.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: java.util.SortedSet unselectableDates>;

        interfaceinvoke $r2.<java.util.SortedSet: void clear()>();

        $r3 = interfaceinvoke r0.<java.util.SortedSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Date) $r5;

        virtualinvoke r1.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: void removeSelectionInterval(java.util.Date,java.util.Date)>(r6, r6);

        $r7 = r1.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: java.util.SortedSet unselectableDates>;

        interfaceinvoke $r7.<java.util.SortedSet: boolean add(java.lang.Object)>(r6);

        goto label1;

     label2:
        $r4 = <org.jdesktop.swingx.event.DateSelectionEvent$EventType: org.jdesktop.swingx.event.DateSelectionEvent$EventType UNSELECTED_DATES_CHANGED>;

        virtualinvoke r1.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: void fireValueChanged(org.jdesktop.swingx.event.DateSelectionEvent$EventType)>($r4);

        return;
    }

    public boolean isUnselectableDate(java.util.Date)
    {
        org.jdesktop.swingx.calendar.SingleDaySelectionModel r0;
        java.util.Date r1;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.calendar.SingleDaySelectionModel;

        r1 := @parameter0: java.util.Date;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.calendar.SingleDaySelectionModel: boolean isSelectable(java.util.Date)>(r1);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }
}
