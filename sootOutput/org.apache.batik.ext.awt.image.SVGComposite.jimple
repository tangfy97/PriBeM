public class org.apache.batik.ext.awt.image.SVGComposite extends java.lang.Object implements java.awt.Composite
{
    public static final org.apache.batik.ext.awt.image.SVGComposite OVER;
    public static final org.apache.batik.ext.awt.image.SVGComposite IN;
    public static final org.apache.batik.ext.awt.image.SVGComposite OUT;
    public static final org.apache.batik.ext.awt.image.SVGComposite ATOP;
    public static final org.apache.batik.ext.awt.image.SVGComposite XOR;
    public static final org.apache.batik.ext.awt.image.SVGComposite MULTIPLY;
    public static final org.apache.batik.ext.awt.image.SVGComposite SCREEN;
    public static final org.apache.batik.ext.awt.image.SVGComposite DARKEN;
    public static final org.apache.batik.ext.awt.image.SVGComposite LIGHTEN;
    org.apache.batik.ext.awt.image.CompositeRule rule;

    public org.apache.batik.ext.awt.image.CompositeRule getRule()
    {
        org.apache.batik.ext.awt.image.SVGComposite r0;
        org.apache.batik.ext.awt.image.CompositeRule $r1;

        r0 := @this: org.apache.batik.ext.awt.image.SVGComposite;

        $r1 = r0.<org.apache.batik.ext.awt.image.SVGComposite: org.apache.batik.ext.awt.image.CompositeRule rule>;

        return $r1;
    }

    public void <init>(org.apache.batik.ext.awt.image.CompositeRule)
    {
        org.apache.batik.ext.awt.image.SVGComposite r0;
        org.apache.batik.ext.awt.image.CompositeRule r1;

        r0 := @this: org.apache.batik.ext.awt.image.SVGComposite;

        r1 := @parameter0: org.apache.batik.ext.awt.image.CompositeRule;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.ext.awt.image.SVGComposite: org.apache.batik.ext.awt.image.CompositeRule rule> = r1;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.batik.ext.awt.image.CompositeRule $r2, $r6, $r7;
        java.awt.AlphaComposite $r3, $r4, $r5, r9;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.batik.ext.awt.image.SVGComposite r1, r8;
        java.lang.Object r0;

        r1 := @this: org.apache.batik.ext.awt.image.SVGComposite;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.batik.ext.awt.image.SVGComposite;

        if $z0 == 0 goto label03;

        r8 = (org.apache.batik.ext.awt.image.SVGComposite) r0;

        $r6 = virtualinvoke r8.<org.apache.batik.ext.awt.image.SVGComposite: org.apache.batik.ext.awt.image.CompositeRule getRule()>();

        $r7 = virtualinvoke r1.<org.apache.batik.ext.awt.image.SVGComposite: org.apache.batik.ext.awt.image.CompositeRule getRule()>();

        if $r6 != $r7 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        return $z2;

     label03:
        $z1 = r0 instanceof java.awt.AlphaComposite;

        if $z1 == 0 goto label14;

        r9 = (java.awt.AlphaComposite) r0;

        $r2 = virtualinvoke r1.<org.apache.batik.ext.awt.image.SVGComposite: org.apache.batik.ext.awt.image.CompositeRule getRule()>();

        $i0 = virtualinvoke $r2.<org.apache.batik.ext.awt.image.CompositeRule: int getRule()>();

        tableswitch($i0)
        {
            case 1: goto label04;
            case 2: goto label07;
            case 3: goto label10;
            default: goto label13;
        };

     label04:
        $r5 = <java.awt.AlphaComposite: java.awt.AlphaComposite SrcOver>;

        if r9 != $r5 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        return $z3;

     label07:
        $r4 = <java.awt.AlphaComposite: java.awt.AlphaComposite SrcIn>;

        if r9 != $r4 goto label08;

        $z4 = 1;

        goto label09;

     label08:
        $z4 = 0;

     label09:
        return $z4;

     label10:
        $r3 = <java.awt.AlphaComposite: java.awt.AlphaComposite SrcOut>;

        if r9 != $r3 goto label11;

        $z5 = 1;

        goto label12;

     label11:
        $z5 = 0;

     label12:
        return $z5;

     label13:
        return 0;

     label14:
        return 0;
    }

    public boolean is_INT_PACK(java.awt.image.ColorModel)
    {
        org.apache.batik.ext.awt.image.SVGComposite r3;
        java.awt.image.PackedColorModel r1;
        java.awt.image.ColorModel r0;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        boolean $z0;

        r3 := @this: org.apache.batik.ext.awt.image.SVGComposite;

        r0 := @parameter0: java.awt.image.ColorModel;

        $z0 = r0 instanceof java.awt.image.PackedColorModel;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (java.awt.image.PackedColorModel) r0;

        $r2 = virtualinvoke r1.<java.awt.image.PackedColorModel: int[] getMasks()>();

        $i0 = lengthof $r2;

        if $i0 == 4 goto label2;

        return 0;

     label2:
        $i1 = $r2[0];

        if $i1 == 16711680 goto label3;

        return 0;

     label3:
        $i2 = $r2[1];

        $i6 = (int) 65280;

        if $i2 == $i6 goto label4;

        return 0;

     label4:
        $i3 = $r2[2];

        if $i3 == 255 goto label5;

        return 0;

     label5:
        $i4 = $r2[3];

        if $i4 == -16777216 goto label6;

        return 0;

     label6:
        return 1;
    }

    public java.awt.CompositeContext createContext(java.awt.image.ColorModel, java.awt.image.ColorModel, java.awt.RenderingHints)
    {
        org.apache.batik.ext.awt.image.SVGComposite$AtopCompositeContext $r17;
        org.apache.batik.ext.awt.image.SVGComposite$InCompositeContext_INT_PACK $r22;
        org.apache.batik.ext.awt.image.SVGComposite$LightenCompositeContext $r2;
        java.awt.RenderingHints r29;
        org.apache.batik.ext.awt.image.CompositeRule $r11, $r30;
        org.apache.batik.ext.awt.image.SVGComposite$InCompositeContext $r21;
        boolean $z0, $z1, $z2, $z3, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        org.apache.batik.ext.awt.image.SVGComposite$ArithCompositeContext $r13;
        org.apache.batik.ext.awt.image.SVGComposite r0;
        org.apache.batik.ext.awt.image.SVGComposite$ScreenCompositeContext_INT_PACK $r8;
        org.apache.batik.ext.awt.image.SVGComposite$OutCompositeContext $r19;
        org.apache.batik.ext.awt.image.SVGComposite$DarkenCompositeContext_INT_PACK $r6;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        org.apache.batik.ext.awt.image.SVGComposite$DarkenCompositeContext $r5;
        float[] $r12;
        org.apache.batik.ext.awt.image.SVGComposite$OverCompositeContext $r25;
        org.apache.batik.ext.awt.image.SVGComposite$LightenCompositeContext_INT_PACK $r4;
        org.apache.batik.ext.awt.image.SVGComposite$OverCompositeContext_NA $r26;
        int $i0;
        org.apache.batik.ext.awt.image.SVGComposite$OutCompositeContext_INT_PACK $r20;
        org.apache.batik.ext.awt.image.SVGComposite$ArithCompositeContext_INT_PACK_LUT $r14;
        org.apache.batik.ext.awt.image.SVGComposite$XorCompositeContext_INT_PACK $r16;
        java.lang.UnsupportedOperationException $r28;
        org.apache.batik.ext.awt.image.SVGComposite$ScreenCompositeContext $r7;
        org.apache.batik.ext.awt.image.SVGComposite$OverCompositeContext_INT_PACK_UNPRE $r23;
        org.apache.batik.ext.awt.image.SVGComposite$MultiplyCompositeContext $r9;
        java.awt.image.ColorModel r1, r3;
        org.apache.batik.ext.awt.image.SVGComposite$OverCompositeContext_INT_PACK $r24;
        org.apache.batik.ext.awt.image.SVGComposite$OverCompositeContext_INT_PACK_NA $r27;
        org.apache.batik.ext.awt.image.SVGComposite$MultiplyCompositeContext_INT_PACK $r10;
        org.apache.batik.ext.awt.image.SVGComposite$AtopCompositeContext_INT_PACK $r18;
        org.apache.batik.ext.awt.image.SVGComposite$XorCompositeContext $r15;

        r0 := @this: org.apache.batik.ext.awt.image.SVGComposite;

        r1 := @parameter0: java.awt.image.ColorModel;

        r3 := @parameter1: java.awt.image.ColorModel;

        r29 := @parameter2: java.awt.RenderingHints;

        $z0 = virtualinvoke r0.<org.apache.batik.ext.awt.image.SVGComposite: boolean is_INT_PACK(java.awt.image.ColorModel)>(r1);

        if $z0 == 0 goto label01;

        $z3 = virtualinvoke r0.<org.apache.batik.ext.awt.image.SVGComposite: boolean is_INT_PACK(java.awt.image.ColorModel)>(r3);

        if $z3 == 0 goto label01;

        $z15 = 1;

        $z14 = 1;

        $z13 = 1;

        $z12 = 1;

        $z11 = 1;

        $z10 = 1;

        $z9 = 1;

        $z8 = 1;

        $z7 = 1;

        $z6 = 1;

        $z5 = 1;

        goto label02;

     label01:
        $z15 = 0;

        $z14 = 0;

        $z13 = 0;

        $z12 = 0;

        $z11 = 0;

        $z10 = 0;

        $z9 = 0;

        $z8 = 0;

        $z7 = 0;

        $z6 = 0;

        $z5 = 0;

     label02:
        $r30 = r0.<org.apache.batik.ext.awt.image.SVGComposite: org.apache.batik.ext.awt.image.CompositeRule rule>;

        $i0 = virtualinvoke $r30.<org.apache.batik.ext.awt.image.CompositeRule: int getRule()>();

        tableswitch($i0)
        {
            case 1: goto label03;
            case 2: goto label08;
            case 3: goto label10;
            case 4: goto label12;
            case 5: goto label14;
            case 6: goto label16;
            case 7: goto label18;
            case 8: goto label20;
            case 9: goto label22;
            case 10: goto label24;
            default: goto label26;
        };

     label03:
        $z1 = virtualinvoke r3.<java.awt.image.ColorModel: boolean hasAlpha()>();

        if $z1 != 0 goto label05;

        if $z7 == 0 goto label04;

        $r27 = new org.apache.batik.ext.awt.image.SVGComposite$OverCompositeContext_INT_PACK_NA;

        specialinvoke $r27.<org.apache.batik.ext.awt.image.SVGComposite$OverCompositeContext_INT_PACK_NA: void <init>(java.awt.image.ColorModel,java.awt.image.ColorModel)>(r1, r3);

        return $r27;

     label04:
        $r26 = new org.apache.batik.ext.awt.image.SVGComposite$OverCompositeContext_NA;

        specialinvoke $r26.<org.apache.batik.ext.awt.image.SVGComposite$OverCompositeContext_NA: void <init>(java.awt.image.ColorModel,java.awt.image.ColorModel)>(r1, r3);

        return $r26;

     label05:
        if $z9 != 0 goto label06;

        $r25 = new org.apache.batik.ext.awt.image.SVGComposite$OverCompositeContext;

        specialinvoke $r25.<org.apache.batik.ext.awt.image.SVGComposite$OverCompositeContext: void <init>(java.awt.image.ColorModel,java.awt.image.ColorModel)>(r1, r3);

        return $r25;

     label06:
        $z2 = virtualinvoke r1.<java.awt.image.ColorModel: boolean isAlphaPremultiplied()>();

        if $z2 == 0 goto label07;

        $r24 = new org.apache.batik.ext.awt.image.SVGComposite$OverCompositeContext_INT_PACK;

        specialinvoke $r24.<org.apache.batik.ext.awt.image.SVGComposite$OverCompositeContext_INT_PACK: void <init>(java.awt.image.ColorModel,java.awt.image.ColorModel)>(r1, r3);

        return $r24;

     label07:
        $r23 = new org.apache.batik.ext.awt.image.SVGComposite$OverCompositeContext_INT_PACK_UNPRE;

        specialinvoke $r23.<org.apache.batik.ext.awt.image.SVGComposite$OverCompositeContext_INT_PACK_UNPRE: void <init>(java.awt.image.ColorModel,java.awt.image.ColorModel)>(r1, r3);

        return $r23;

     label08:
        if $z11 == 0 goto label09;

        $r22 = new org.apache.batik.ext.awt.image.SVGComposite$InCompositeContext_INT_PACK;

        specialinvoke $r22.<org.apache.batik.ext.awt.image.SVGComposite$InCompositeContext_INT_PACK: void <init>(java.awt.image.ColorModel,java.awt.image.ColorModel)>(r1, r3);

        return $r22;

     label09:
        $r21 = new org.apache.batik.ext.awt.image.SVGComposite$InCompositeContext;

        specialinvoke $r21.<org.apache.batik.ext.awt.image.SVGComposite$InCompositeContext: void <init>(java.awt.image.ColorModel,java.awt.image.ColorModel)>(r1, r3);

        return $r21;

     label10:
        if $z8 == 0 goto label11;

        $r20 = new org.apache.batik.ext.awt.image.SVGComposite$OutCompositeContext_INT_PACK;

        specialinvoke $r20.<org.apache.batik.ext.awt.image.SVGComposite$OutCompositeContext_INT_PACK: void <init>(java.awt.image.ColorModel,java.awt.image.ColorModel)>(r1, r3);

        return $r20;

     label11:
        $r19 = new org.apache.batik.ext.awt.image.SVGComposite$OutCompositeContext;

        specialinvoke $r19.<org.apache.batik.ext.awt.image.SVGComposite$OutCompositeContext: void <init>(java.awt.image.ColorModel,java.awt.image.ColorModel)>(r1, r3);

        return $r19;

     label12:
        if $z12 == 0 goto label13;

        $r18 = new org.apache.batik.ext.awt.image.SVGComposite$AtopCompositeContext_INT_PACK;

        specialinvoke $r18.<org.apache.batik.ext.awt.image.SVGComposite$AtopCompositeContext_INT_PACK: void <init>(java.awt.image.ColorModel,java.awt.image.ColorModel)>(r1, r3);

        return $r18;

     label13:
        $r17 = new org.apache.batik.ext.awt.image.SVGComposite$AtopCompositeContext;

        specialinvoke $r17.<org.apache.batik.ext.awt.image.SVGComposite$AtopCompositeContext: void <init>(java.awt.image.ColorModel,java.awt.image.ColorModel)>(r1, r3);

        return $r17;

     label14:
        if $z13 == 0 goto label15;

        $r16 = new org.apache.batik.ext.awt.image.SVGComposite$XorCompositeContext_INT_PACK;

        specialinvoke $r16.<org.apache.batik.ext.awt.image.SVGComposite$XorCompositeContext_INT_PACK: void <init>(java.awt.image.ColorModel,java.awt.image.ColorModel)>(r1, r3);

        return $r16;

     label15:
        $r15 = new org.apache.batik.ext.awt.image.SVGComposite$XorCompositeContext;

        specialinvoke $r15.<org.apache.batik.ext.awt.image.SVGComposite$XorCompositeContext: void <init>(java.awt.image.ColorModel,java.awt.image.ColorModel)>(r1, r3);

        return $r15;

     label16:
        $r11 = r0.<org.apache.batik.ext.awt.image.SVGComposite: org.apache.batik.ext.awt.image.CompositeRule rule>;

        $r12 = virtualinvoke $r11.<org.apache.batik.ext.awt.image.CompositeRule: float[] getCoefficients()>();

        if $z14 == 0 goto label17;

        $r14 = new org.apache.batik.ext.awt.image.SVGComposite$ArithCompositeContext_INT_PACK_LUT;

        $f7 = $r12[0];

        $f6 = $r12[1];

        $f5 = $r12[2];

        $f4 = $r12[3];

        specialinvoke $r14.<org.apache.batik.ext.awt.image.SVGComposite$ArithCompositeContext_INT_PACK_LUT: void <init>(java.awt.image.ColorModel,java.awt.image.ColorModel,float,float,float,float)>(r1, r3, $f7, $f6, $f5, $f4);

        return $r14;

     label17:
        $r13 = new org.apache.batik.ext.awt.image.SVGComposite$ArithCompositeContext;

        $f3 = $r12[0];

        $f2 = $r12[1];

        $f1 = $r12[2];

        $f0 = $r12[3];

        specialinvoke $r13.<org.apache.batik.ext.awt.image.SVGComposite$ArithCompositeContext: void <init>(java.awt.image.ColorModel,java.awt.image.ColorModel,float,float,float,float)>(r1, r3, $f3, $f2, $f1, $f0);

        return $r13;

     label18:
        if $z15 == 0 goto label19;

        $r10 = new org.apache.batik.ext.awt.image.SVGComposite$MultiplyCompositeContext_INT_PACK;

        specialinvoke $r10.<org.apache.batik.ext.awt.image.SVGComposite$MultiplyCompositeContext_INT_PACK: void <init>(java.awt.image.ColorModel,java.awt.image.ColorModel)>(r1, r3);

        return $r10;

     label19:
        $r9 = new org.apache.batik.ext.awt.image.SVGComposite$MultiplyCompositeContext;

        specialinvoke $r9.<org.apache.batik.ext.awt.image.SVGComposite$MultiplyCompositeContext: void <init>(java.awt.image.ColorModel,java.awt.image.ColorModel)>(r1, r3);

        return $r9;

     label20:
        if $z5 == 0 goto label21;

        $r8 = new org.apache.batik.ext.awt.image.SVGComposite$ScreenCompositeContext_INT_PACK;

        specialinvoke $r8.<org.apache.batik.ext.awt.image.SVGComposite$ScreenCompositeContext_INT_PACK: void <init>(java.awt.image.ColorModel,java.awt.image.ColorModel)>(r1, r3);

        return $r8;

     label21:
        $r7 = new org.apache.batik.ext.awt.image.SVGComposite$ScreenCompositeContext;

        specialinvoke $r7.<org.apache.batik.ext.awt.image.SVGComposite$ScreenCompositeContext: void <init>(java.awt.image.ColorModel,java.awt.image.ColorModel)>(r1, r3);

        return $r7;

     label22:
        if $z6 == 0 goto label23;

        $r6 = new org.apache.batik.ext.awt.image.SVGComposite$DarkenCompositeContext_INT_PACK;

        specialinvoke $r6.<org.apache.batik.ext.awt.image.SVGComposite$DarkenCompositeContext_INT_PACK: void <init>(java.awt.image.ColorModel,java.awt.image.ColorModel)>(r1, r3);

        return $r6;

     label23:
        $r5 = new org.apache.batik.ext.awt.image.SVGComposite$DarkenCompositeContext;

        specialinvoke $r5.<org.apache.batik.ext.awt.image.SVGComposite$DarkenCompositeContext: void <init>(java.awt.image.ColorModel,java.awt.image.ColorModel)>(r1, r3);

        return $r5;

     label24:
        if $z10 == 0 goto label25;

        $r4 = new org.apache.batik.ext.awt.image.SVGComposite$LightenCompositeContext_INT_PACK;

        specialinvoke $r4.<org.apache.batik.ext.awt.image.SVGComposite$LightenCompositeContext_INT_PACK: void <init>(java.awt.image.ColorModel,java.awt.image.ColorModel)>(r1, r3);

        return $r4;

     label25:
        $r2 = new org.apache.batik.ext.awt.image.SVGComposite$LightenCompositeContext;

        specialinvoke $r2.<org.apache.batik.ext.awt.image.SVGComposite$LightenCompositeContext: void <init>(java.awt.image.ColorModel,java.awt.image.ColorModel)>(r1, r3);

        return $r2;

     label26:
        $r28 = new java.lang.UnsupportedOperationException;

        specialinvoke $r28.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Unknown composite rule requested.");

        throw $r28;
    }

    static void <clinit>()
    {
        org.apache.batik.ext.awt.image.CompositeRule $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17;
        org.apache.batik.ext.awt.image.SVGComposite $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16;

        $r0 = new org.apache.batik.ext.awt.image.SVGComposite;

        $r1 = <org.apache.batik.ext.awt.image.CompositeRule: org.apache.batik.ext.awt.image.CompositeRule OVER>;

        specialinvoke $r0.<org.apache.batik.ext.awt.image.SVGComposite: void <init>(org.apache.batik.ext.awt.image.CompositeRule)>($r1);

        <org.apache.batik.ext.awt.image.SVGComposite: org.apache.batik.ext.awt.image.SVGComposite OVER> = $r0;

        $r2 = new org.apache.batik.ext.awt.image.SVGComposite;

        $r3 = <org.apache.batik.ext.awt.image.CompositeRule: org.apache.batik.ext.awt.image.CompositeRule IN>;

        specialinvoke $r2.<org.apache.batik.ext.awt.image.SVGComposite: void <init>(org.apache.batik.ext.awt.image.CompositeRule)>($r3);

        <org.apache.batik.ext.awt.image.SVGComposite: org.apache.batik.ext.awt.image.SVGComposite IN> = $r2;

        $r4 = new org.apache.batik.ext.awt.image.SVGComposite;

        $r5 = <org.apache.batik.ext.awt.image.CompositeRule: org.apache.batik.ext.awt.image.CompositeRule OUT>;

        specialinvoke $r4.<org.apache.batik.ext.awt.image.SVGComposite: void <init>(org.apache.batik.ext.awt.image.CompositeRule)>($r5);

        <org.apache.batik.ext.awt.image.SVGComposite: org.apache.batik.ext.awt.image.SVGComposite OUT> = $r4;

        $r6 = new org.apache.batik.ext.awt.image.SVGComposite;

        $r7 = <org.apache.batik.ext.awt.image.CompositeRule: org.apache.batik.ext.awt.image.CompositeRule ATOP>;

        specialinvoke $r6.<org.apache.batik.ext.awt.image.SVGComposite: void <init>(org.apache.batik.ext.awt.image.CompositeRule)>($r7);

        <org.apache.batik.ext.awt.image.SVGComposite: org.apache.batik.ext.awt.image.SVGComposite ATOP> = $r6;

        $r8 = new org.apache.batik.ext.awt.image.SVGComposite;

        $r9 = <org.apache.batik.ext.awt.image.CompositeRule: org.apache.batik.ext.awt.image.CompositeRule XOR>;

        specialinvoke $r8.<org.apache.batik.ext.awt.image.SVGComposite: void <init>(org.apache.batik.ext.awt.image.CompositeRule)>($r9);

        <org.apache.batik.ext.awt.image.SVGComposite: org.apache.batik.ext.awt.image.SVGComposite XOR> = $r8;

        $r10 = new org.apache.batik.ext.awt.image.SVGComposite;

        $r11 = <org.apache.batik.ext.awt.image.CompositeRule: org.apache.batik.ext.awt.image.CompositeRule MULTIPLY>;

        specialinvoke $r10.<org.apache.batik.ext.awt.image.SVGComposite: void <init>(org.apache.batik.ext.awt.image.CompositeRule)>($r11);

        <org.apache.batik.ext.awt.image.SVGComposite: org.apache.batik.ext.awt.image.SVGComposite MULTIPLY> = $r10;

        $r12 = new org.apache.batik.ext.awt.image.SVGComposite;

        $r13 = <org.apache.batik.ext.awt.image.CompositeRule: org.apache.batik.ext.awt.image.CompositeRule SCREEN>;

        specialinvoke $r12.<org.apache.batik.ext.awt.image.SVGComposite: void <init>(org.apache.batik.ext.awt.image.CompositeRule)>($r13);

        <org.apache.batik.ext.awt.image.SVGComposite: org.apache.batik.ext.awt.image.SVGComposite SCREEN> = $r12;

        $r14 = new org.apache.batik.ext.awt.image.SVGComposite;

        $r15 = <org.apache.batik.ext.awt.image.CompositeRule: org.apache.batik.ext.awt.image.CompositeRule DARKEN>;

        specialinvoke $r14.<org.apache.batik.ext.awt.image.SVGComposite: void <init>(org.apache.batik.ext.awt.image.CompositeRule)>($r15);

        <org.apache.batik.ext.awt.image.SVGComposite: org.apache.batik.ext.awt.image.SVGComposite DARKEN> = $r14;

        $r16 = new org.apache.batik.ext.awt.image.SVGComposite;

        $r17 = <org.apache.batik.ext.awt.image.CompositeRule: org.apache.batik.ext.awt.image.CompositeRule LIGHTEN>;

        specialinvoke $r16.<org.apache.batik.ext.awt.image.SVGComposite: void <init>(org.apache.batik.ext.awt.image.CompositeRule)>($r17);

        <org.apache.batik.ext.awt.image.SVGComposite: org.apache.batik.ext.awt.image.SVGComposite LIGHTEN> = $r16;

        return;
    }
}
