public class com.jhlabs.image.DisplaceFilter extends com.jhlabs.image.TransformFilter
{
    private float amount;
    private java.awt.image.BufferedImage displacementMap;
    private int[] xmap;
    private int[] ymap;
    private int dw;
    private int dh;

    public void <init>()
    {
        com.jhlabs.image.DisplaceFilter r0;

        r0 := @this: com.jhlabs.image.DisplaceFilter;

        specialinvoke r0.<com.jhlabs.image.TransformFilter: void <init>()>();

        r0.<com.jhlabs.image.DisplaceFilter: float amount> = 1.0F;

        r0.<com.jhlabs.image.DisplaceFilter: java.awt.image.BufferedImage displacementMap> = null;

        return;
    }

    public void setDisplacementMap(java.awt.image.BufferedImage)
    {
        java.awt.image.BufferedImage r1;
        com.jhlabs.image.DisplaceFilter r0;

        r0 := @this: com.jhlabs.image.DisplaceFilter;

        r1 := @parameter0: java.awt.image.BufferedImage;

        r0.<com.jhlabs.image.DisplaceFilter: java.awt.image.BufferedImage displacementMap> = r1;

        return;
    }

    public java.awt.image.BufferedImage getDisplacementMap()
    {
        java.awt.image.BufferedImage $r1;
        com.jhlabs.image.DisplaceFilter r0;

        r0 := @this: com.jhlabs.image.DisplaceFilter;

        $r1 = r0.<com.jhlabs.image.DisplaceFilter: java.awt.image.BufferedImage displacementMap>;

        return $r1;
    }

    public void setAmount(float)
    {
        float f0;
        com.jhlabs.image.DisplaceFilter r0;

        r0 := @this: com.jhlabs.image.DisplaceFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.DisplaceFilter: float amount> = f0;

        return;
    }

    public float getAmount()
    {
        float $f0;
        com.jhlabs.image.DisplaceFilter r0;

        r0 := @this: com.jhlabs.image.DisplaceFilter;

        $f0 = r0.<com.jhlabs.image.DisplaceFilter: float amount>;

        return $f0;
    }

    public java.awt.image.BufferedImage filter(java.awt.image.BufferedImage, java.awt.image.BufferedImage)
    {
        com.jhlabs.image.DisplaceFilter r1;
        int[] $r3, $r4, $r6, $r7, $r8;
        java.awt.image.BufferedImage r0, $r2, $r5, r9, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, i73, i74, $i75, i76, i77, i78, i79, i80, i81, i82, i83, i84, i85, i86, i87;

        r1 := @this: com.jhlabs.image.DisplaceFilter;

        r0 := @parameter0: java.awt.image.BufferedImage;

        r9 := @parameter1: java.awt.image.BufferedImage;

        virtualinvoke r0.<java.awt.image.BufferedImage: int getWidth()>();

        virtualinvoke r0.<java.awt.image.BufferedImage: int getHeight()>();

        $r2 = r1.<com.jhlabs.image.DisplaceFilter: java.awt.image.BufferedImage displacementMap>;

        if $r2 == null goto label01;

        $r10 = r1.<com.jhlabs.image.DisplaceFilter: java.awt.image.BufferedImage displacementMap>;

        goto label02;

     label01:
        $r10 = r0;

     label02:
        $i0 = virtualinvoke $r10.<java.awt.image.BufferedImage: int getWidth()>();

        r1.<com.jhlabs.image.DisplaceFilter: int dw> = $i0;

        $i1 = virtualinvoke $r10.<java.awt.image.BufferedImage: int getHeight()>();

        r1.<com.jhlabs.image.DisplaceFilter: int dh> = $i1;

        $i3 = r1.<com.jhlabs.image.DisplaceFilter: int dw>;

        $i2 = r1.<com.jhlabs.image.DisplaceFilter: int dh>;

        $i4 = $i3 * $i2;

        $r8 = newarray (int)[$i4];

        $i6 = r1.<com.jhlabs.image.DisplaceFilter: int dw>;

        $i5 = r1.<com.jhlabs.image.DisplaceFilter: int dh>;

        virtualinvoke r1.<com.jhlabs.image.AbstractBufferedImageOp: int[] getRGB(java.awt.image.BufferedImage,int,int,int,int,int[])>($r10, 0, 0, $i6, $i5, $r8);

        $i8 = r1.<com.jhlabs.image.DisplaceFilter: int dw>;

        $i7 = r1.<com.jhlabs.image.DisplaceFilter: int dh>;

        $i9 = $i8 * $i7;

        $r3 = newarray (int)[$i9];

        r1.<com.jhlabs.image.DisplaceFilter: int[] xmap> = $r3;

        $i11 = r1.<com.jhlabs.image.DisplaceFilter: int dw>;

        $i10 = r1.<com.jhlabs.image.DisplaceFilter: int dh>;

        $i12 = $i11 * $i10;

        $r4 = newarray (int)[$i12];

        r1.<com.jhlabs.image.DisplaceFilter: int[] ymap> = $r4;

        i73 = 0;

        i74 = 0;

     label03:
        $i75 = r1.<com.jhlabs.image.DisplaceFilter: int dh>;

        if i74 >= $i75 goto label06;

        i76 = 0;

     label04:
        $i67 = r1.<com.jhlabs.image.DisplaceFilter: int dw>;

        if i76 >= $i67 goto label05;

        i77 = $r8[i73];

        $i68 = i77 >> 16;

        i78 = $i68 & 255;

        $i69 = i77 >> 8;

        i79 = $i69 & 255;

        i80 = i77 & 255;

        $i70 = i78 + i79;

        $i71 = $i70 + i80;

        $i72 = $i71 / 8;

        $r8[i73] = $i72;

        i73 = i73 + 1;

        i76 = i76 + 1;

        goto label04;

     label05:
        i74 = i74 + 1;

        goto label03;

     label06:
        i81 = 0;

        i82 = 0;

     label07:
        $i13 = r1.<com.jhlabs.image.DisplaceFilter: int dh>;

        if i82 >= $i13 goto label10;

        $i14 = r1.<com.jhlabs.image.DisplaceFilter: int dh>;

        $i15 = i82 + $i14;

        $i17 = $i15 - 1;

        $i16 = r1.<com.jhlabs.image.DisplaceFilter: int dh>;

        $i19 = $i17 % $i16;

        $i18 = r1.<com.jhlabs.image.DisplaceFilter: int dw>;

        i83 = $i19 * $i18;

        $i20 = r1.<com.jhlabs.image.DisplaceFilter: int dw>;

        i84 = i82 * $i20;

        $i22 = i82 + 1;

        $i21 = r1.<com.jhlabs.image.DisplaceFilter: int dh>;

        $i24 = $i22 % $i21;

        $i23 = r1.<com.jhlabs.image.DisplaceFilter: int dw>;

        i85 = $i24 * $i23;

        i86 = 0;

     label08:
        $i25 = r1.<com.jhlabs.image.DisplaceFilter: int dw>;

        if i86 >= $i25 goto label09;

        $i26 = r1.<com.jhlabs.image.DisplaceFilter: int dw>;

        $i27 = i86 + $i26;

        $i29 = $i27 - 1;

        $i28 = r1.<com.jhlabs.image.DisplaceFilter: int dw>;

        i87 = $i29 % $i28;

        $i31 = i86 + 1;

        $i30 = r1.<com.jhlabs.image.DisplaceFilter: int dw>;

        i32 = $i31 % $i30;

        $r6 = r1.<com.jhlabs.image.DisplaceFilter: int[] xmap>;

        $i33 = i87 + i83;

        $i36 = $r8[$i33];

        $i34 = i87 + i84;

        $i35 = $r8[$i34];

        $i39 = $i36 + $i35;

        $i37 = i87 + i85;

        $i38 = $r8[$i37];

        $i42 = $i39 + $i38;

        $i40 = i32 + i83;

        $i41 = $r8[$i40];

        $i45 = $i42 - $i41;

        $i43 = i32 + i84;

        $i44 = $r8[$i43];

        $i48 = $i45 - $i44;

        $i46 = i32 + i85;

        $i47 = $r8[$i46];

        $i49 = $i48 - $i47;

        $r6[i81] = $i49;

        $r7 = r1.<com.jhlabs.image.DisplaceFilter: int[] ymap>;

        $i50 = i87 + i85;

        $i53 = $r8[$i50];

        $i51 = i86 + i85;

        $i52 = $r8[$i51];

        $i56 = $i53 + $i52;

        $i54 = i32 + i85;

        $i55 = $r8[$i54];

        $i59 = $i56 + $i55;

        $i57 = i87 + i83;

        $i58 = $r8[$i57];

        $i62 = $i59 - $i58;

        $i60 = i86 + i83;

        $i61 = $r8[$i60];

        $i65 = $i62 - $i61;

        $i63 = i32 + i83;

        $i64 = $r8[$i63];

        $i66 = $i65 - $i64;

        $r7[i81] = $i66;

        i81 = i81 + 1;

        i86 = i86 + 1;

        goto label08;

     label09:
        i82 = i82 + 1;

        goto label07;

     label10:
        $r5 = specialinvoke r1.<com.jhlabs.image.TransformFilter: java.awt.image.BufferedImage filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)>(r0, r9);

        r1.<com.jhlabs.image.DisplaceFilter: int[] ymap> = null;

        r1.<com.jhlabs.image.DisplaceFilter: int[] xmap> = null;

        return $r5;
    }

    protected void transformInverse(int, int, float[])
    {
        float[] r1;
        int[] $r2, $r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        com.jhlabs.image.DisplaceFilter r0;

        r0 := @this: com.jhlabs.image.DisplaceFilter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: float[];

        $i2 = r0.<com.jhlabs.image.DisplaceFilter: int dh>;

        $i4 = i1 % $i2;

        $i3 = r0.<com.jhlabs.image.DisplaceFilter: int dw>;

        $i7 = $i4 * $i3;

        $i5 = r0.<com.jhlabs.image.DisplaceFilter: int dw>;

        $i6 = i0 % $i5;

        i8 = $i7 + $i6;

        $f3 = (float) i0;

        $f1 = r0.<com.jhlabs.image.DisplaceFilter: float amount>;

        $r2 = r0.<com.jhlabs.image.DisplaceFilter: int[] xmap>;

        $i9 = $r2[i8];

        $f0 = (float) $i9;

        $f2 = $f1 * $f0;

        $f4 = $f3 + $f2;

        r1[0] = $f4;

        $f8 = (float) i1;

        $f6 = r0.<com.jhlabs.image.DisplaceFilter: float amount>;

        $r3 = r0.<com.jhlabs.image.DisplaceFilter: int[] ymap>;

        $i10 = $r3[i8];

        $f5 = (float) $i10;

        $f7 = $f6 * $f5;

        $f9 = $f8 + $f7;

        r1[1] = $f9;

        return;
    }

    public java.lang.String toString()
    {
        com.jhlabs.image.DisplaceFilter r0;

        r0 := @this: com.jhlabs.image.DisplaceFilter;

        return "Distort/Displace...";
    }
}
