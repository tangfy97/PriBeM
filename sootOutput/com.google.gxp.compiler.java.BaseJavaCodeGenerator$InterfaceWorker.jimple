public class com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker extends com.google.gxp.compiler.java.BaseJavaCodeGenerator$Worker
{
    protected final com.google.gxp.compiler.base.Interface iface;

    protected void <init>(java.lang.Appendable, com.google.gxp.compiler.alerts.AlertSink, com.google.gxp.compiler.base.Interface)
    {
        com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker r0;
        com.google.gxp.compiler.alerts.AlertSink r2;
        java.lang.Appendable r1;
        java.lang.Object $r4;
        com.google.gxp.compiler.base.Interface r3, $r5;

        r0 := @this: com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker;

        r1 := @parameter0: java.lang.Appendable;

        r2 := @parameter1: com.google.gxp.compiler.alerts.AlertSink;

        r3 := @parameter2: com.google.gxp.compiler.base.Interface;

        specialinvoke r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$Worker: void <init>(java.lang.Appendable,com.google.gxp.compiler.alerts.AlertSink)>(r1, r2);

        $r4 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r5 = (com.google.gxp.compiler.base.Interface) $r4;

        r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: com.google.gxp.compiler.base.Interface iface> = $r5;

        return;
    }

    public void run()
    {
        java.util.Iterator $r5;
        com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker r0;
        java.lang.Iterable $r4;
        java.util.List $r2;
        com.google.gxp.compiler.base.OutputLanguage $r10;
        com.google.gxp.compiler.alerts.AlertSink $r11;
        com.google.gxp.compiler.base.Parameter r9;
        java.lang.Object $r8;
        java.lang.String $r12;
        com.google.gxp.com.google.common.base.Predicate $r3;
        com.google.gxp.compiler.base.Interface $r1, $r6, $r7;
        boolean $z0;

        r0 := @this: com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker;

        $r1 = r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: com.google.gxp.compiler.base.Interface iface>;

        $r2 = virtualinvoke $r1.<com.google.gxp.compiler.base.Interface: java.util.List getParameters()>();

        $r3 = <com.google.gxp.compiler.base.Implementable: com.google.gxp.com.google.common.base.Predicate NOT_INSTANCE_PARAM>;

        $r4 = staticinvoke <com.google.gxp.com.google.common.collect.Iterables: java.lang.Iterable filter(java.lang.Iterable,com.google.gxp.com.google.common.base.Predicate)>($r2, $r3);

        $r5 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.google.gxp.compiler.base.Parameter) $r8;

        $r10 = <com.google.gxp.compiler.base.OutputLanguage: com.google.gxp.compiler.base.OutputLanguage JAVA>;

        $r11 = r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: com.google.gxp.compiler.alerts.AlertSink alertSink>;

        $r12 = virtualinvoke r9.<com.google.gxp.compiler.base.Parameter: java.lang.String getPrimaryName()>();

        virtualinvoke $r10.<com.google.gxp.compiler.base.OutputLanguage: java.lang.String validateName(com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.base.Node,java.lang.String)>($r11, r9, $r12);

        goto label1;

     label2:
        $r6 = r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: com.google.gxp.compiler.base.Interface iface>;

        virtualinvoke r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: void appendHeader(com.google.gxp.compiler.base.Root)>($r6);

        $r7 = r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: com.google.gxp.compiler.base.Interface iface>;

        virtualinvoke r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: void appendImports(com.google.gxp.compiler.base.Root)>($r7);

        virtualinvoke r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: void appendLine()>();

        virtualinvoke r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: void appendInterface()>();

        virtualinvoke r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: void appendLine()>();

        virtualinvoke r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: void appendFooter()>();

        return;
    }

    protected com.google.gxp.compiler.alerts.SourcePosition getDefaultSourcePosition()
    {
        com.google.gxp.compiler.alerts.SourcePosition $r2;
        com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker r0;
        com.google.gxp.compiler.base.Interface $r1;

        r0 := @this: com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker;

        $r1 = r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: com.google.gxp.compiler.base.Interface iface>;

        $r2 = virtualinvoke $r1.<com.google.gxp.compiler.base.Interface: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        return $r2;
    }

    protected void appendInterface()
    {
        com.google.gxp.compiler.alerts.SourcePosition $r11;
        com.google.gxp.compiler.base.JavaAnnotation$Element $r1;
        com.google.gxp.compiler.base.TemplateName$FullyQualified $r6;
        com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker r0;
        java.lang.Iterable $r3;
        java.util.List $r9;
        java.lang.StringBuilder $r4;
        java.lang.String $r7, $r12, $r13, $r14;
        com.google.gxp.compiler.base.Interface $r2, $r5, $r8, $r10;

        r0 := @this: com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker;

        $r2 = r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: com.google.gxp.compiler.base.Interface iface>;

        $r1 = <com.google.gxp.compiler.base.JavaAnnotation$Element: com.google.gxp.compiler.base.JavaAnnotation$Element INTERFACE>;

        $r3 = virtualinvoke $r2.<com.google.gxp.compiler.base.Interface: java.lang.Iterable getJavaAnnotations(com.google.gxp.compiler.base.JavaAnnotation$Element)>($r1);

        virtualinvoke r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: void appendAnnotations(java.lang.Iterable)>($r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("public interface ");

        $r5 = r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: com.google.gxp.compiler.base.Interface iface>;

        $r6 = virtualinvoke $r5.<com.google.gxp.compiler.base.Interface: com.google.gxp.compiler.base.TemplateName$FullyQualified getName()>();

        $r7 = virtualinvoke r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: java.lang.String getClassName(com.google.gxp.compiler.base.TemplateName)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r8 = r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: com.google.gxp.compiler.base.Interface iface>;

        $r9 = virtualinvoke $r8.<com.google.gxp.compiler.base.Interface: java.util.List getFormalTypeParameters()>();

        virtualinvoke r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: void appendJavaFormalTypeParameters(java.lang.StringBuilder,boolean,java.util.List)>($r4, 1, $r9);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {");

        $r10 = r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: com.google.gxp.compiler.base.Interface iface>;

        $r11 = virtualinvoke $r10.<com.google.gxp.compiler.base.Interface: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: void appendLine(com.google.gxp.compiler.alerts.SourcePosition,java.lang.CharSequence)>($r11, $r12);

        $r13 = specialinvoke r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: java.lang.String getWriteMethodSignature()>();

        virtualinvoke r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: void appendLine(java.lang.CharSequence)>($r13);

        $r14 = specialinvoke r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: java.lang.String getGetGxpClosureMethodSignature()>();

        virtualinvoke r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: void appendLine(java.lang.CharSequence)>($r14);

        specialinvoke r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: void appendGetDefaultMethods()>();

        specialinvoke r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: void appendConstructorMethods()>();

        virtualinvoke r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: void appendLine(java.lang.CharSequence)>("}");

        return;
    }

    private java.lang.String getWriteMethodSignature()
    {
        java.lang.Iterable $r6;
        com.google.gxp.com.google.common.base.Function $r13;
        com.google.gxp.compiler.base.Parameter r12;
        java.lang.String $r1, $r10, $r15;
        com.google.gxp.com.google.common.base.Predicate $r5;
        com.google.gxp.compiler.base.Interface $r3, $r8;
        boolean $z0;
        java.util.Iterator $r7;
        com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker r2;
        java.util.List $r4, $r9;
        java.lang.StringBuilder $r0;
        java.lang.Object $r11, $r14;

        r2 := @this: com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("void write(");

        $r1 = <com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: java.lang.String GXP_SIG>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = r2.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: com.google.gxp.compiler.base.Interface iface>;

        $r4 = virtualinvoke $r3.<com.google.gxp.compiler.base.Interface: java.util.List getParameters()>();

        $r5 = <com.google.gxp.compiler.base.Implementable: com.google.gxp.com.google.common.base.Predicate NOT_INSTANCE_PARAM>;

        $r6 = staticinvoke <com.google.gxp.com.google.common.collect.Iterables: java.lang.Iterable filter(java.lang.Iterable,com.google.gxp.com.google.common.base.Predicate)>($r4, $r5);

        $r7 = interfaceinvoke $r6.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.google.gxp.compiler.base.Parameter) $r11;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r13 = r2.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: com.google.gxp.com.google.common.base.Function parameterToCallName>;

        $r14 = interfaceinvoke $r13.<com.google.gxp.com.google.common.base.Function: java.lang.Object apply(java.lang.Object)>(r12);

        $r15 = (java.lang.String) $r14;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        goto label1;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = r2.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: com.google.gxp.compiler.base.Interface iface>;

        $r9 = virtualinvoke $r8.<com.google.gxp.compiler.base.Interface: java.util.List getThrowsDeclarations()>();

        staticinvoke <com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: void appendJavaThrowsDeclaration(java.lang.StringBuilder,java.lang.Iterable)>($r0, $r9);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r10 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    private java.lang.String getGetGxpClosureMethodSignature()
    {
        com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker r1;
        com.google.gxp.compiler.schema.Schema $r3;
        java.lang.Iterable $r8, $r10;
        java.util.List $r6;
        com.google.gxp.com.google.common.base.Function $r9;
        java.lang.StringBuilder $r0;
        java.lang.String $r4, $r11;
        com.google.gxp.com.google.common.base.Predicate $r7;
        com.google.gxp.compiler.base.Interface $r2, $r5;

        r1 := @this: com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: com.google.gxp.compiler.base.Interface iface>;

        $r3 = virtualinvoke $r2.<com.google.gxp.compiler.base.Interface: com.google.gxp.compiler.schema.Schema getSchema()>();

        $r4 = virtualinvoke $r3.<com.google.gxp.compiler.schema.Schema: java.lang.String getJavaType()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" getGxpClosure(");

        $r5 = r1.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: com.google.gxp.compiler.base.Interface iface>;

        $r6 = virtualinvoke $r5.<com.google.gxp.compiler.base.Interface: java.util.List getParameters()>();

        $r7 = <com.google.gxp.compiler.base.Implementable: com.google.gxp.com.google.common.base.Predicate NOT_INSTANCE_PARAM>;

        $r8 = staticinvoke <com.google.gxp.com.google.common.collect.Iterables: java.lang.Iterable filter(java.lang.Iterable,com.google.gxp.com.google.common.base.Predicate)>($r6, $r7);

        $r9 = r1.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: com.google.gxp.com.google.common.base.Function parameterToCallName>;

        $r10 = staticinvoke <com.google.gxp.com.google.common.collect.Iterables: java.lang.Iterable transform(java.lang.Iterable,com.google.gxp.com.google.common.base.Function)>($r8, $r9);

        staticinvoke <com.google.gxp.com.google.common.base.Join: java.lang.Appendable join(java.lang.Appendable,java.lang.String,java.lang.Iterable)>($r0, ", ", $r10);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");");

        $r11 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    private void appendGetDefaultMethods()
    {
        com.google.gxp.compiler.alerts.SourcePosition $r6;
        java.lang.Object[] $r7;
        java.util.Iterator $r3;
        com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker r0;
        com.google.gxp.compiler.base.Type $r8;
        java.util.List $r2;
        com.google.gxp.compiler.base.Parameter r5;
        java.lang.Object $r4;
        java.lang.String $r9, $r10;
        com.google.gxp.compiler.base.Interface $r1;
        boolean $z0, $z1;

        r0 := @this: com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker;

        $r1 = r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: com.google.gxp.compiler.base.Interface iface>;

        $r2 = virtualinvoke $r1.<com.google.gxp.compiler.base.Interface: java.util.List getParameters()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.google.gxp.compiler.base.Parameter) $r4;

        $z1 = virtualinvoke r5.<com.google.gxp.compiler.base.Parameter: boolean hasDefaultFlag()>();

        if $z1 == 0 goto label2;

        $r6 = virtualinvoke r5.<com.google.gxp.compiler.base.Parameter: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r7 = newarray (java.lang.Object)[2];

        $r8 = virtualinvoke r5.<com.google.gxp.compiler.base.Parameter: com.google.gxp.compiler.base.Type getType()>();

        $r9 = virtualinvoke r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: java.lang.String toJavaType(com.google.gxp.compiler.base.Type)>($r8);

        $r7[0] = $r9;

        $r10 = staticinvoke <com.google.gxp.compiler.java.BaseJavaCodeGenerator: java.lang.String access$500(com.google.gxp.compiler.base.Parameter)>(r5);

        $r7[1] = $r10;

        virtualinvoke r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: void formatLine(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,java.lang.Object[])>($r6, "%s %s();", $r7);

     label2:
        goto label1;

     label3:
        return;
    }

    private void appendConstructorMethods()
    {
        com.google.gxp.compiler.alerts.SourcePosition $r6;
        java.lang.Object[] $r7;
        java.util.Iterator $r3;
        com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker r0;
        com.google.gxp.compiler.base.Type $r8;
        java.util.List $r2;
        com.google.gxp.compiler.base.Parameter r5;
        java.lang.Object $r4;
        java.lang.String $r9, $r10, $r11;
        com.google.gxp.compiler.base.Interface $r1;
        boolean $z0, $z1;

        r0 := @this: com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker;

        $r1 = r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: com.google.gxp.compiler.base.Interface iface>;

        $r2 = virtualinvoke $r1.<com.google.gxp.compiler.base.Interface: java.util.List getParameters()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.google.gxp.compiler.base.Parameter) $r4;

        $z1 = virtualinvoke r5.<com.google.gxp.compiler.base.Parameter: boolean hasConstructorFlag()>();

        if $z1 == 0 goto label2;

        $r6 = virtualinvoke r5.<com.google.gxp.compiler.base.Parameter: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r7 = newarray (java.lang.Object)[3];

        $r8 = virtualinvoke r5.<com.google.gxp.compiler.base.Parameter: com.google.gxp.compiler.base.Type getType()>();

        $r9 = virtualinvoke r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: java.lang.String toJavaType(com.google.gxp.compiler.base.Type)>($r8);

        $r7[0] = $r9;

        $r10 = staticinvoke <com.google.gxp.compiler.java.BaseJavaCodeGenerator: java.lang.String access$600(com.google.gxp.compiler.base.Parameter)>(r5);

        $r7[1] = $r10;

        $r11 = virtualinvoke r5.<com.google.gxp.compiler.base.Parameter: java.lang.String getPrimaryName()>();

        $r7[2] = $r11;

        virtualinvoke r0.<com.google.gxp.compiler.java.BaseJavaCodeGenerator$InterfaceWorker: void formatLine(com.google.gxp.compiler.alerts.SourcePosition,java.lang.String,java.lang.Object[])>($r6, "public %s %s(String %s);", $r7);

     label2:
        goto label1;

     label3:
        return;
    }
}
