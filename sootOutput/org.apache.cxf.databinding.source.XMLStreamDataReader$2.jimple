class org.apache.cxf.databinding.source.XMLStreamDataReader$2 extends org.apache.cxf.staxutils.FragmentStreamReader
{
    boolean closed;
    final java.io.InputStream val$ins;
    final org.apache.cxf.databinding.source.XMLStreamDataReader this$0;

    void <init>(org.apache.cxf.databinding.source.XMLStreamDataReader, javax.xml.stream.XMLStreamReader, boolean, java.io.InputStream)
    {
        org.apache.cxf.databinding.source.XMLStreamDataReader r1;
        javax.xml.stream.XMLStreamReader r3;
        org.apache.cxf.databinding.source.XMLStreamDataReader$2 r0;
        java.io.InputStream r2;
        boolean z0;

        r0 := @this: org.apache.cxf.databinding.source.XMLStreamDataReader$2;

        r1 := @parameter0: org.apache.cxf.databinding.source.XMLStreamDataReader;

        r3 := @parameter1: javax.xml.stream.XMLStreamReader;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.io.InputStream;

        r0.<org.apache.cxf.databinding.source.XMLStreamDataReader$2: org.apache.cxf.databinding.source.XMLStreamDataReader this$0> = r1;

        r0.<org.apache.cxf.databinding.source.XMLStreamDataReader$2: java.io.InputStream val$ins> = r2;

        specialinvoke r0.<org.apache.cxf.staxutils.FragmentStreamReader: void <init>(javax.xml.stream.XMLStreamReader,boolean)>(r3, z0);

        return;
    }

    public boolean hasNext() throws javax.xml.stream.XMLStreamException
    {
        org.apache.cxf.databinding.source.XMLStreamDataReader$2 r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.databinding.source.XMLStreamDataReader$2;

        $z0 = specialinvoke r0.<org.apache.cxf.staxutils.FragmentStreamReader: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $z1 = r0.<org.apache.cxf.databinding.source.XMLStreamDataReader$2: boolean closed>;

        if $z1 != 0 goto label1;

        virtualinvoke r0.<org.apache.cxf.databinding.source.XMLStreamDataReader$2: void close()>();

     label1:
        return $z0;
    }

    public void close() throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.XMLStreamException $r4;
        java.io.IOException $r3;
        org.apache.cxf.databinding.source.XMLStreamDataReader$2 r0;
        java.io.InputStream $r1, $r2;

        r0 := @this: org.apache.cxf.databinding.source.XMLStreamDataReader$2;

        r0.<org.apache.cxf.databinding.source.XMLStreamDataReader$2: boolean closed> = 1;

     label1:
        specialinvoke r0.<org.apache.cxf.staxutils.FragmentStreamReader: void close()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        $r1 = r0.<org.apache.cxf.databinding.source.XMLStreamDataReader$2: java.io.InputStream val$ins>;

        if $r1 == null goto label8;

     label5:
        $r2 = r0.<org.apache.cxf.databinding.source.XMLStreamDataReader$2: java.io.InputStream val$ins>;

        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label6:
        goto label8;

     label7:
        $r3 := @caughtexception;

     label8:
        return;

        catch javax.xml.stream.XMLStreamException from label1 to label2 with label3;
        catch java.io.IOException from label5 to label6 with label7;
    }
}
