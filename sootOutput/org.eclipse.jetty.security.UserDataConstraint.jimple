public final enum class org.eclipse.jetty.security.UserDataConstraint extends java.lang.Enum
{
    public static final enum org.eclipse.jetty.security.UserDataConstraint None;
    public static final enum org.eclipse.jetty.security.UserDataConstraint Integral;
    public static final enum org.eclipse.jetty.security.UserDataConstraint Confidential;
    private static final org.eclipse.jetty.security.UserDataConstraint[] $VALUES;

    public static org.eclipse.jetty.security.UserDataConstraint[] values()
    {
        java.lang.Object $r1;
        org.eclipse.jetty.security.UserDataConstraint[] $r0, $r2;

        $r0 = <org.eclipse.jetty.security.UserDataConstraint: org.eclipse.jetty.security.UserDataConstraint[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.eclipse.jetty.security.UserDataConstraint[]) $r1;

        return $r2;
    }

    public static org.eclipse.jetty.security.UserDataConstraint valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.eclipse.jetty.security.UserDataConstraint $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/eclipse/jetty/security/UserDataConstraint;", r0);

        $r2 = (org.eclipse.jetty.security.UserDataConstraint) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        org.eclipse.jetty.security.UserDataConstraint r0;

        r0 := @this: org.eclipse.jetty.security.UserDataConstraint;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public static org.eclipse.jetty.security.UserDataConstraint get(int)
    {
        org.eclipse.jetty.security.UserDataConstraint[] $r5;
        org.eclipse.jetty.security.UserDataConstraint $r6, $r7;
        java.lang.IllegalArgumentException $r9;
        int i0, $i2, $i4;
        java.lang.StringBuilder $r2, $r3, $r8;
        java.lang.String $r4;

        i0 := @parameter0: int;

        $i2 = (int) -1;

        if i0 < $i2 goto label1;

        if i0 <= 2 goto label2;

     label1:
        $r9 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected -1, 0, 1, or 2, not: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r9;

     label2:
        $i4 = (int) -1;

        if i0 != $i4 goto label3;

        $r7 = <org.eclipse.jetty.security.UserDataConstraint: org.eclipse.jetty.security.UserDataConstraint None>;

        return $r7;

     label3:
        $r5 = staticinvoke <org.eclipse.jetty.security.UserDataConstraint: org.eclipse.jetty.security.UserDataConstraint[] values()>();

        $r6 = $r5[i0];

        return $r6;
    }

    public org.eclipse.jetty.security.UserDataConstraint combine(org.eclipse.jetty.security.UserDataConstraint)
    {
        int $i0;
        org.eclipse.jetty.security.UserDataConstraint r0, r1;

        r0 := @this: org.eclipse.jetty.security.UserDataConstraint;

        r1 := @parameter0: org.eclipse.jetty.security.UserDataConstraint;

        $i0 = virtualinvoke r0.<org.eclipse.jetty.security.UserDataConstraint: int compareTo(java.lang.Enum)>(r1);

        if $i0 >= 0 goto label1;

        return r0;

     label1:
        return r1;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.security.UserDataConstraint[] $r3;
        org.eclipse.jetty.security.UserDataConstraint $r0, $r1, $r2, $r4, $r5, $r6;

        $r0 = new org.eclipse.jetty.security.UserDataConstraint;

        specialinvoke $r0.<org.eclipse.jetty.security.UserDataConstraint: void <init>(java.lang.String,int)>("None", 0);

        <org.eclipse.jetty.security.UserDataConstraint: org.eclipse.jetty.security.UserDataConstraint None> = $r0;

        $r1 = new org.eclipse.jetty.security.UserDataConstraint;

        specialinvoke $r1.<org.eclipse.jetty.security.UserDataConstraint: void <init>(java.lang.String,int)>("Integral", 1);

        <org.eclipse.jetty.security.UserDataConstraint: org.eclipse.jetty.security.UserDataConstraint Integral> = $r1;

        $r2 = new org.eclipse.jetty.security.UserDataConstraint;

        specialinvoke $r2.<org.eclipse.jetty.security.UserDataConstraint: void <init>(java.lang.String,int)>("Confidential", 2);

        <org.eclipse.jetty.security.UserDataConstraint: org.eclipse.jetty.security.UserDataConstraint Confidential> = $r2;

        $r3 = newarray (org.eclipse.jetty.security.UserDataConstraint)[3];

        $r4 = <org.eclipse.jetty.security.UserDataConstraint: org.eclipse.jetty.security.UserDataConstraint None>;

        $r3[0] = $r4;

        $r5 = <org.eclipse.jetty.security.UserDataConstraint: org.eclipse.jetty.security.UserDataConstraint Integral>;

        $r3[1] = $r5;

        $r6 = <org.eclipse.jetty.security.UserDataConstraint: org.eclipse.jetty.security.UserDataConstraint Confidential>;

        $r3[2] = $r6;

        <org.eclipse.jetty.security.UserDataConstraint: org.eclipse.jetty.security.UserDataConstraint[] $VALUES> = $r3;

        return;
    }
}
