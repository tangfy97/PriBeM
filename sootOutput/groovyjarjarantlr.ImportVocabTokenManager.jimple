class groovyjarjarantlr.ImportVocabTokenManager extends groovyjarjarantlr.SimpleTokenManager implements java.lang.Cloneable
{
    private java.lang.String filename;
    protected groovyjarjarantlr.Grammar grammar;

    void <init>(groovyjarjarantlr.Grammar, java.lang.String, java.lang.String, groovyjarjarantlr.Tool)
    {
        groovyjarjarantlr.Grammar r3;
        groovyjarjarantlr.ANTLRTokdefParser $r48;
        boolean $z0, $z1;
        java.io.FileNotFoundException $r36;
        groovyjarjarantlr.RecognitionException $r26;
        groovyjarjarantlr.ANTLRTokdefLexer $r47;
        groovyjarjarantlr.Tool r2, $r8, $r12, $r20, $r28, $r38, $r49;
        java.lang.StringBuffer $r11, $r13, $r15, $r16, $r19, $r21, $r23, $r24, $r27, $r29, $r31, $r32, $r34, $r37, $r39, $r41, $r42;
        java.lang.String r1, r4, $r6, $r9, $r10, $r14, $r17, $r22, $r25, $r30, $r33, $r35, $r40, $r43, $r50;
        java.io.File $r5, $r7, r44;
        groovyjarjarantlr.ImportVocabTokenManager r0;
        java.io.BufferedReader $r45;
        java.io.FileReader $r46;
        groovyjarjarantlr.TokenStreamException $r18;

        r0 := @this: groovyjarjarantlr.ImportVocabTokenManager;

        r3 := @parameter0: groovyjarjarantlr.Grammar;

        r4 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: groovyjarjarantlr.Tool;

        specialinvoke r0.<groovyjarjarantlr.SimpleTokenManager: void <init>(java.lang.String,groovyjarjarantlr.Tool)>(r1, r2);

        r0.<groovyjarjarantlr.ImportVocabTokenManager: groovyjarjarantlr.Grammar grammar> = r3;

        r0.<groovyjarjarantlr.ImportVocabTokenManager: java.lang.String filename> = r4;

        $r5 = new java.io.File;

        $r6 = r0.<groovyjarjarantlr.ImportVocabTokenManager: java.lang.String filename>;

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r6);

        r44 = $r5;

        $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r7 = new java.io.File;

        $r8 = r0.<groovyjarjarantlr.ImportVocabTokenManager: groovyjarjarantlr.Tool antlrTool>;

        $r9 = virtualinvoke $r8.<groovyjarjarantlr.Tool: java.lang.String getOutputDirectory()>();

        $r10 = r0.<groovyjarjarantlr.ImportVocabTokenManager: java.lang.String filename>;

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r9, $r10);

        r44 = $r7;

        $z1 = virtualinvoke $r7.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label1;

        $r12 = r0.<groovyjarjarantlr.ImportVocabTokenManager: groovyjarjarantlr.Tool antlrTool>;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot find importVocab file \'");

        $r14 = r0.<groovyjarjarantlr.ImportVocabTokenManager: java.lang.String filename>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r12.<groovyjarjarantlr.Tool: void panic(java.lang.String)>($r17);

     label1:
        virtualinvoke r0.<groovyjarjarantlr.ImportVocabTokenManager: void setReadOnly(boolean)>(1);

     label2:
        $r45 = new java.io.BufferedReader;

        $r46 = new java.io.FileReader;

        specialinvoke $r46.<java.io.FileReader: void <init>(java.io.File)>(r44);

        specialinvoke $r45.<java.io.BufferedReader: void <init>(java.io.Reader)>($r46);

        $r47 = new groovyjarjarantlr.ANTLRTokdefLexer;

        specialinvoke $r47.<groovyjarjarantlr.ANTLRTokdefLexer: void <init>(java.io.Reader)>($r45);

        $r48 = new groovyjarjarantlr.ANTLRTokdefParser;

        specialinvoke $r48.<groovyjarjarantlr.ANTLRTokdefParser: void <init>(groovyjarjarantlr.TokenStream)>($r47);

        $r49 = r0.<groovyjarjarantlr.ImportVocabTokenManager: groovyjarjarantlr.Tool antlrTool>;

        virtualinvoke $r48.<groovyjarjarantlr.ANTLRTokdefParser: void setTool(groovyjarjarantlr.Tool)>($r49);

        $r50 = r0.<groovyjarjarantlr.ImportVocabTokenManager: java.lang.String filename>;

        virtualinvoke $r48.<groovyjarjarantlr.ANTLRTokdefParser: void setFilename(java.lang.String)>($r50);

        virtualinvoke $r48.<groovyjarjarantlr.ANTLRTokdefParser: void file(groovyjarjarantlr.ImportVocabTokenManager)>(r0);

     label3:
        goto label7;

     label4:
        $r36 := @caughtexception;

        $r38 = r0.<groovyjarjarantlr.ImportVocabTokenManager: groovyjarjarantlr.Tool antlrTool>;

        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot find importVocab file \'");

        $r40 = r0.<groovyjarjarantlr.ImportVocabTokenManager: java.lang.String filename>;

        $r41 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r38.<groovyjarjarantlr.Tool: void panic(java.lang.String)>($r43);

        goto label7;

     label5:
        $r26 := @caughtexception;

        $r28 = r0.<groovyjarjarantlr.ImportVocabTokenManager: groovyjarjarantlr.Tool antlrTool>;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error parsing importVocab file \'");

        $r30 = r0.<groovyjarjarantlr.ImportVocabTokenManager: java.lang.String filename>;

        $r31 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\': ");

        $r33 = virtualinvoke $r26.<groovyjarjarantlr.RecognitionException: java.lang.String toString()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r28.<groovyjarjarantlr.Tool: void panic(java.lang.String)>($r35);

        goto label7;

     label6:
        $r18 := @caughtexception;

        $r20 = r0.<groovyjarjarantlr.ImportVocabTokenManager: groovyjarjarantlr.Tool antlrTool>;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error reading importVocab file \'");

        $r22 = r0.<groovyjarjarantlr.ImportVocabTokenManager: java.lang.String filename>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r20.<groovyjarjarantlr.Tool: void panic(java.lang.String)>($r25);

     label7:
        return;

        catch java.io.FileNotFoundException from label2 to label3 with label4;
        catch groovyjarjarantlr.RecognitionException from label2 to label3 with label5;
        catch groovyjarjarantlr.TokenStreamException from label2 to label3 with label6;
    }

    public java.lang.Object clone()
    {
        java.lang.Object $r1;
        java.lang.String $r3;
        groovyjarjarantlr.Grammar $r4;
        groovyjarjarantlr.ImportVocabTokenManager r0, r2;

        r0 := @this: groovyjarjarantlr.ImportVocabTokenManager;

        $r1 = specialinvoke r0.<groovyjarjarantlr.SimpleTokenManager: java.lang.Object clone()>();

        r2 = (groovyjarjarantlr.ImportVocabTokenManager) $r1;

        $r3 = r0.<groovyjarjarantlr.ImportVocabTokenManager: java.lang.String filename>;

        r2.<groovyjarjarantlr.ImportVocabTokenManager: java.lang.String filename> = $r3;

        $r4 = r0.<groovyjarjarantlr.ImportVocabTokenManager: groovyjarjarantlr.Grammar grammar>;

        r2.<groovyjarjarantlr.ImportVocabTokenManager: groovyjarjarantlr.Grammar grammar> = $r4;

        return r2;
    }

    public void define(groovyjarjarantlr.TokenSymbol)
    {
        groovyjarjarantlr.TokenSymbol r1;
        groovyjarjarantlr.ImportVocabTokenManager r0;

        r0 := @this: groovyjarjarantlr.ImportVocabTokenManager;

        r1 := @parameter0: groovyjarjarantlr.TokenSymbol;

        specialinvoke r0.<groovyjarjarantlr.SimpleTokenManager: void define(groovyjarjarantlr.TokenSymbol)>(r1);

        return;
    }

    public void define(java.lang.String, int)
    {
        groovyjarjarantlr.TokenSymbol $r1, r4;
        groovyjarjarantlr.StringLiteralSymbol $r3;
        groovyjarjarantlr.ImportVocabTokenManager r2;
        int i0, $i1, $i2, $i3;
        java.lang.String r0;
        boolean $z0;

        r2 := @this: groovyjarjarantlr.ImportVocabTokenManager;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("\"");

        if $z0 == 0 goto label1;

        $r3 = new groovyjarjarantlr.StringLiteralSymbol;

        specialinvoke $r3.<groovyjarjarantlr.StringLiteralSymbol: void <init>(java.lang.String)>(r0);

        r4 = $r3;

        goto label2;

     label1:
        $r1 = new groovyjarjarantlr.TokenSymbol;

        specialinvoke $r1.<groovyjarjarantlr.TokenSymbol: void <init>(java.lang.String)>(r0);

        r4 = $r1;

     label2:
        virtualinvoke r4.<groovyjarjarantlr.TokenSymbol: void setTokenType(int)>(i0);

        specialinvoke r2.<groovyjarjarantlr.SimpleTokenManager: void define(groovyjarjarantlr.TokenSymbol)>(r4);

        $i2 = i0 + 1;

        $i1 = r2.<groovyjarjarantlr.ImportVocabTokenManager: int maxToken>;

        if $i2 <= $i1 goto label3;

        $i3 = i0 + 1;

        goto label4;

     label3:
        $i3 = r2.<groovyjarjarantlr.ImportVocabTokenManager: int maxToken>;

     label4:
        r2.<groovyjarjarantlr.ImportVocabTokenManager: int maxToken> = $i3;

        return;
    }

    public boolean isReadOnly()
    {
        groovyjarjarantlr.ImportVocabTokenManager r0;
        boolean $z0;

        r0 := @this: groovyjarjarantlr.ImportVocabTokenManager;

        $z0 = r0.<groovyjarjarantlr.ImportVocabTokenManager: boolean readOnly>;

        return $z0;
    }

    public int nextTokenType()
    {
        int $i0;
        groovyjarjarantlr.ImportVocabTokenManager r0;

        r0 := @this: groovyjarjarantlr.ImportVocabTokenManager;

        $i0 = specialinvoke r0.<groovyjarjarantlr.SimpleTokenManager: int nextTokenType()>();

        return $i0;
    }
}
