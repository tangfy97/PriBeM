public class com.hp.hpl.jena.sparql.core.describe.DescribeBNodeClosure extends java.lang.Object implements com.hp.hpl.jena.sparql.core.describe.DescribeHandler
{
    com.hp.hpl.jena.rdf.model.Model acc;
    com.hp.hpl.jena.query.Dataset dataset;
    private static com.hp.hpl.jena.query.Query query;

    public void <init>()
    {
        com.hp.hpl.jena.sparql.core.describe.DescribeBNodeClosure r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.describe.DescribeBNodeClosure;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void start(com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.rdf.model.Model r1;
        com.hp.hpl.jena.query.Dataset $r5;
        com.hp.hpl.jena.sparql.core.describe.DescribeBNodeClosure r0;
        java.lang.Object $r4;
        com.hp.hpl.jena.sparql.util.Context r2;
        com.hp.hpl.jena.sparql.util.Symbol $r3;

        r0 := @this: com.hp.hpl.jena.sparql.core.describe.DescribeBNodeClosure;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r2 := @parameter1: com.hp.hpl.jena.sparql.util.Context;

        r0.<com.hp.hpl.jena.sparql.core.describe.DescribeBNodeClosure: com.hp.hpl.jena.rdf.model.Model acc> = r1;

        $r3 = <com.hp.hpl.jena.sparql.ARQConstants: com.hp.hpl.jena.sparql.util.Symbol sysCurrentDataset>;

        $r4 = virtualinvoke r2.<com.hp.hpl.jena.sparql.util.Context: java.lang.Object get(com.hp.hpl.jena.sparql.util.Symbol)>($r3);

        $r5 = (com.hp.hpl.jena.query.Dataset) $r4;

        r0.<com.hp.hpl.jena.sparql.core.describe.DescribeBNodeClosure: com.hp.hpl.jena.query.Dataset dataset> = $r5;

        return;
    }

    public void describe(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.query.Query $r8;
        com.hp.hpl.jena.sparql.core.describe.DescribeBNodeClosure r1;
        java.lang.String $r14;
        boolean $z0;
        com.hp.hpl.jena.query.QuerySolutionMap $r6;
        com.hp.hpl.jena.query.ResultSet $r10;
        com.hp.hpl.jena.rdf.model.Resource r0, $r4, $r13, $r17;
        com.hp.hpl.jena.query.QuerySolution $r12;
        com.hp.hpl.jena.rdf.model.Model $r3, $r5, $r11, $r16, $r18;
        com.hp.hpl.jena.query.Dataset $r2, $r7, $r15;
        com.hp.hpl.jena.query.QueryExecution $r9;

        r1 := @this: com.hp.hpl.jena.sparql.core.describe.DescribeBNodeClosure;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r2 = r1.<com.hp.hpl.jena.sparql.core.describe.DescribeBNodeClosure: com.hp.hpl.jena.query.Dataset dataset>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.query.Dataset: com.hp.hpl.jena.rdf.model.Model getDefaultModel()>();

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.core.describe.DescribeBNodeClosure: com.hp.hpl.jena.rdf.model.Resource otherModel(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Model)>(r0, $r3);

        $r5 = r1.<com.hp.hpl.jena.sparql.core.describe.DescribeBNodeClosure: com.hp.hpl.jena.rdf.model.Model acc>;

        staticinvoke <com.hp.hpl.jena.sparql.util.Closure: com.hp.hpl.jena.rdf.model.Model closure(com.hp.hpl.jena.rdf.model.Resource,boolean,com.hp.hpl.jena.rdf.model.Model)>($r4, 0, $r5);

        $r6 = new com.hp.hpl.jena.query.QuerySolutionMap;

        specialinvoke $r6.<com.hp.hpl.jena.query.QuerySolutionMap: void <init>()>();

        virtualinvoke $r6.<com.hp.hpl.jena.query.QuerySolutionMap: void add(java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>("s", r0);

        $r8 = <com.hp.hpl.jena.sparql.core.describe.DescribeBNodeClosure: com.hp.hpl.jena.query.Query query>;

        $r7 = r1.<com.hp.hpl.jena.sparql.core.describe.DescribeBNodeClosure: com.hp.hpl.jena.query.Dataset dataset>;

        $r9 = staticinvoke <com.hp.hpl.jena.query.QueryExecutionFactory: com.hp.hpl.jena.query.QueryExecution create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.query.Dataset,com.hp.hpl.jena.query.QuerySolution)>($r8, $r7, $r6);

        $r10 = interfaceinvoke $r9.<com.hp.hpl.jena.query.QueryExecution: com.hp.hpl.jena.query.ResultSet execSelect()>();

     label1:
        $z0 = interfaceinvoke $r10.<com.hp.hpl.jena.query.ResultSet: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke $r10.<com.hp.hpl.jena.query.ResultSet: com.hp.hpl.jena.query.QuerySolution next()>();

        $r13 = interfaceinvoke $r12.<com.hp.hpl.jena.query.QuerySolution: com.hp.hpl.jena.rdf.model.Resource getResource(java.lang.String)>("g");

        $r14 = interfaceinvoke $r13.<com.hp.hpl.jena.rdf.model.Resource: java.lang.String getURI()>();

        $r15 = r1.<com.hp.hpl.jena.sparql.core.describe.DescribeBNodeClosure: com.hp.hpl.jena.query.Dataset dataset>;

        $r16 = interfaceinvoke $r15.<com.hp.hpl.jena.query.Dataset: com.hp.hpl.jena.rdf.model.Model getNamedModel(java.lang.String)>($r14);

        $r17 = staticinvoke <com.hp.hpl.jena.sparql.core.describe.DescribeBNodeClosure: com.hp.hpl.jena.rdf.model.Resource otherModel(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Model)>(r0, $r16);

        $r18 = r1.<com.hp.hpl.jena.sparql.core.describe.DescribeBNodeClosure: com.hp.hpl.jena.rdf.model.Model acc>;

        staticinvoke <com.hp.hpl.jena.sparql.util.Closure: com.hp.hpl.jena.rdf.model.Model closure(com.hp.hpl.jena.rdf.model.Resource,boolean,com.hp.hpl.jena.rdf.model.Model)>($r17, 0, $r18);

        goto label1;

     label2:
        $r11 = r1.<com.hp.hpl.jena.sparql.core.describe.DescribeBNodeClosure: com.hp.hpl.jena.rdf.model.Model acc>;

        staticinvoke <com.hp.hpl.jena.sparql.util.Closure: com.hp.hpl.jena.rdf.model.Model closure(com.hp.hpl.jena.rdf.model.Resource,boolean,com.hp.hpl.jena.rdf.model.Model)>(r0, 0, $r11);

        return;
    }

    private static com.hp.hpl.jena.rdf.model.Resource otherModel(com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Resource r0, $r3, $r5;
        com.hp.hpl.jena.rdf.model.AnonId $r2;
        com.hp.hpl.jena.rdf.model.Model r1;
        java.lang.String $r4;
        boolean $z0, $z1;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Model;

        $z0 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: boolean isURIResource()>();

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: java.lang.String getURI()>();

        $r5 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource createResource(java.lang.String)>($r4);

        return $r5;

     label1:
        $z1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: boolean isAnon()>();

        if $z1 == 0 goto label2;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.AnonId getId()>();

        $r3 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource createResource(com.hp.hpl.jena.rdf.model.AnonId)>($r2);

        return $r3;

     label2:
        return r0;
    }

    public void finish()
    {
        com.hp.hpl.jena.sparql.core.describe.DescribeBNodeClosure r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.describe.DescribeBNodeClosure;

        return;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.query.Query $r0;

        $r0 = staticinvoke <com.hp.hpl.jena.query.QueryFactory: com.hp.hpl.jena.query.Query create(java.lang.String)>("SELECT DISTINCT ?g { GRAPH ?g { ?s ?p ?o } }");

        <com.hp.hpl.jena.sparql.core.describe.DescribeBNodeClosure: com.hp.hpl.jena.query.Query query> = $r0;

        return;
    }
}
