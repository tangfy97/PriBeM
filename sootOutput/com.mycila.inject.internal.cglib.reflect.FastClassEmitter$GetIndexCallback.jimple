class com.mycila.inject.internal.cglib.reflect.FastClassEmitter$GetIndexCallback extends java.lang.Object implements com.mycila.inject.internal.cglib.core.ObjectSwitchCallback
{
    private com.mycila.inject.internal.cglib.core.CodeEmitter e;
    private java.util.Map indexes;

    public void <init>(com.mycila.inject.internal.cglib.core.CodeEmitter, java.util.List)
    {
        java.util.Iterator $r4;
        com.mycila.inject.internal.cglib.reflect.FastClassEmitter$GetIndexCallback r0;
        java.util.HashMap $r1;
        com.mycila.inject.internal.cglib.core.CodeEmitter r2;
        java.lang.Integer $r7;
        java.util.List r3;
        java.util.Map $r5;
        int $i0, i1;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.cglib.reflect.FastClassEmitter$GetIndexCallback;

        r2 := @parameter0: com.mycila.inject.internal.cglib.core.CodeEmitter;

        r3 := @parameter1: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.mycila.inject.internal.cglib.reflect.FastClassEmitter$GetIndexCallback: java.util.Map indexes> = $r1;

        r0.<com.mycila.inject.internal.cglib.reflect.FastClassEmitter$GetIndexCallback: com.mycila.inject.internal.cglib.core.CodeEmitter e> = r2;

        i1 = 0;

        $r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = r0.<com.mycila.inject.internal.cglib.reflect.FastClassEmitter$GetIndexCallback: java.util.Map indexes>;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r7 = new java.lang.Integer;

        $i0 = i1;

        i1 = i1 + 1;

        specialinvoke $r7.<java.lang.Integer: void <init>(int)>($i0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        goto label1;

     label2:
        return;
    }

    public void processCase(java.lang.Object, com.mycila.inject.internal.asm.Label)
    {
        com.mycila.inject.internal.cglib.reflect.FastClassEmitter$GetIndexCallback r0;
        com.mycila.inject.internal.cglib.core.CodeEmitter $r3, $r6;
        java.lang.Integer $r5;
        java.util.Map $r2;
        int $i0;
        com.mycila.inject.internal.asm.Label r7;
        java.lang.Object r1, $r4;

        r0 := @this: com.mycila.inject.internal.cglib.reflect.FastClassEmitter$GetIndexCallback;

        r1 := @parameter0: java.lang.Object;

        r7 := @parameter1: com.mycila.inject.internal.asm.Label;

        $r3 = r0.<com.mycila.inject.internal.cglib.reflect.FastClassEmitter$GetIndexCallback: com.mycila.inject.internal.cglib.core.CodeEmitter e>;

        $r2 = r0.<com.mycila.inject.internal.cglib.reflect.FastClassEmitter$GetIndexCallback: java.util.Map indexes>;

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (java.lang.Integer) $r4;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        virtualinvoke $r3.<com.mycila.inject.internal.cglib.core.CodeEmitter: void push(int)>($i0);

        $r6 = r0.<com.mycila.inject.internal.cglib.reflect.FastClassEmitter$GetIndexCallback: com.mycila.inject.internal.cglib.core.CodeEmitter e>;

        virtualinvoke $r6.<com.mycila.inject.internal.cglib.core.CodeEmitter: void return_value()>();

        return;
    }

    public void processDefault()
    {
        com.mycila.inject.internal.cglib.reflect.FastClassEmitter$GetIndexCallback r0;
        int $i1;
        com.mycila.inject.internal.cglib.core.CodeEmitter $r1, $r2;

        r0 := @this: com.mycila.inject.internal.cglib.reflect.FastClassEmitter$GetIndexCallback;

        $r1 = r0.<com.mycila.inject.internal.cglib.reflect.FastClassEmitter$GetIndexCallback: com.mycila.inject.internal.cglib.core.CodeEmitter e>;

        $i1 = (int) -1;

        virtualinvoke $r1.<com.mycila.inject.internal.cglib.core.CodeEmitter: void push(int)>($i1);

        $r2 = r0.<com.mycila.inject.internal.cglib.reflect.FastClassEmitter$GetIndexCallback: com.mycila.inject.internal.cglib.core.CodeEmitter e>;

        virtualinvoke $r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void return_value()>();

        return;
    }
}
