public class com.hp.hpl.jena.sparql.util.ResultSetUtils extends java.lang.Object
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.util.ResultSetUtils r0;

        r0 := @this: com.hp.hpl.jena.sparql.util.ResultSetUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.List resultSetToList(com.hp.hpl.jena.query.ResultSet, java.lang.String)
    {
        com.hp.hpl.jena.query.QuerySolution $r2;
        com.hp.hpl.jena.rdf.model.RDFNode $r4;
        java.lang.String r3;
        com.hp.hpl.jena.query.ResultSet r1;
        java.util.ArrayList $r0;
        boolean $z0;

        r1 := @parameter0: com.hp.hpl.jena.query.ResultSet;

        r3 := @parameter1: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

     label1:
        $z0 = interfaceinvoke r1.<com.hp.hpl.jena.query.ResultSet: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r1.<com.hp.hpl.jena.query.ResultSet: com.hp.hpl.jena.query.QuerySolution nextSolution()>();

        $r4 = interfaceinvoke $r2.<com.hp.hpl.jena.query.QuerySolution: com.hp.hpl.jena.rdf.model.RDFNode get(java.lang.String)>(r3);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        return $r0;
    }

    public static java.util.List resultSetToStringList(com.hp.hpl.jena.query.ResultSet, java.lang.String, java.lang.String)
    {
        java.util.ArrayList $r0;
        com.hp.hpl.jena.rdf.model.AnonId $r11;
        java.lang.String r3, $r9, $r12, $r14, $r16, r17;
        com.hp.hpl.jena.sparql.ARQException $r5;
        boolean $z0, $z1, $z2, $z3;
        com.hp.hpl.jena.rdf.model.RDFNode $r4;
        com.hp.hpl.jena.query.ResultSet r1;
        com.hp.hpl.jena.rdf.model.Resource $r10, $r13;
        com.hp.hpl.jena.query.QuerySolution $r2;
        java.lang.StringBuilder $r6, $r7, $r8;
        com.hp.hpl.jena.rdf.model.Literal $r15;

        r1 := @parameter0: com.hp.hpl.jena.query.ResultSet;

        r3 := @parameter1: java.lang.String;

        r17 := @parameter2: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

     label1:
        $z0 = interfaceinvoke r1.<com.hp.hpl.jena.query.ResultSet: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r2 = interfaceinvoke r1.<com.hp.hpl.jena.query.ResultSet: com.hp.hpl.jena.query.QuerySolution nextSolution()>();

        $r4 = interfaceinvoke $r2.<com.hp.hpl.jena.query.QuerySolution: com.hp.hpl.jena.rdf.model.RDFNode get(java.lang.String)>(r3);

        $z1 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.RDFNode: boolean isLiteral()>();

        if $z1 == 0 goto label2;

        $r15 = (com.hp.hpl.jena.rdf.model.Literal) $r4;

        $r16 = interfaceinvoke $r15.<com.hp.hpl.jena.rdf.model.Literal: java.lang.String getLexicalForm()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r16);

        goto label5;

     label2:
        $z2 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.RDFNode: boolean isURIResource()>();

        if $z2 == 0 goto label3;

        $r13 = (com.hp.hpl.jena.rdf.model.Resource) $r4;

        $r14 = interfaceinvoke $r13.<com.hp.hpl.jena.rdf.model.Resource: java.lang.String getURI()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r14);

        goto label5;

     label3:
        $z3 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.RDFNode: boolean isAnon()>();

        if $z3 == 0 goto label4;

        $r10 = (com.hp.hpl.jena.rdf.model.Resource) $r4;

        $r11 = interfaceinvoke $r10.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.AnonId getId()>();

        $r12 = virtualinvoke $r11.<com.hp.hpl.jena.rdf.model.AnonId: java.lang.String getLabelString()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label5;

     label4:
        $r5 = new com.hp.hpl.jena.sparql.ARQException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknow thing in results : ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.hp.hpl.jena.sparql.ARQException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label5:
        goto label1;

     label6:
        return $r0;
    }

    public static transient com.hp.hpl.jena.query.ResultSet union(com.hp.hpl.jena.query.ResultSet[])
    {
        com.hp.hpl.jena.sparql.resultset.ResultSetMem $r0;
        com.hp.hpl.jena.query.ResultSet[] r1;

        r1 := @parameter0: com.hp.hpl.jena.query.ResultSet[];

        $r0 = new com.hp.hpl.jena.sparql.resultset.ResultSetMem;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.resultset.ResultSetMem: void <init>(com.hp.hpl.jena.query.ResultSet[])>(r1);

        return $r0;
    }
}
