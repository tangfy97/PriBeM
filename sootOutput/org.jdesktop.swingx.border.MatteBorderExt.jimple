public class org.jdesktop.swingx.border.MatteBorderExt extends javax.swing.border.MatteBorder
{
    protected javax.swing.Icon[] tileIcons;
    private javax.swing.Icon defaultIcon;

    public void <init>(int, int, int, int, javax.swing.Icon[])
    {
        org.jdesktop.swingx.border.MatteBorderExt r0;
        javax.swing.Icon $r2;
        int i0, i1, i2, i3, $i4;
        javax.swing.Icon[] r1;

        r0 := @this: org.jdesktop.swingx.border.MatteBorderExt;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: javax.swing.Icon[];

        if r1 == null goto label1;

        $i4 = lengthof r1;

        if $i4 != 0 goto label2;

     label1:
        $r2 = null;

        goto label3;

     label2:
        $r2 = r1[0];

     label3:
        specialinvoke r0.<javax.swing.border.MatteBorder: void <init>(int,int,int,int,javax.swing.Icon)>(i0, i1, i2, i3, $r2);

        r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons> = null;

        r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon defaultIcon> = null;

        r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons> = r1;

        return;
    }

    public void <init>(int, int, int, int, java.awt.Color)
    {
        java.awt.Color r1;
        org.jdesktop.swingx.border.MatteBorderExt r0;
        int i0, i1, i2, i3;

        r0 := @this: org.jdesktop.swingx.border.MatteBorderExt;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: java.awt.Color;

        specialinvoke r0.<javax.swing.border.MatteBorder: void <init>(int,int,int,int,java.awt.Color)>(i0, i1, i2, i3, r1);

        r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons> = null;

        r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon defaultIcon> = null;

        return;
    }

    public void <init>(java.awt.Insets, java.awt.Color)
    {
        java.awt.Color r2;
        java.awt.Insets r1;
        org.jdesktop.swingx.border.MatteBorderExt r0;

        r0 := @this: org.jdesktop.swingx.border.MatteBorderExt;

        r1 := @parameter0: java.awt.Insets;

        r2 := @parameter1: java.awt.Color;

        specialinvoke r0.<javax.swing.border.MatteBorder: void <init>(java.awt.Insets,java.awt.Color)>(r1, r2);

        r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons> = null;

        r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon defaultIcon> = null;

        return;
    }

    public void <init>(int, int, int, int, javax.swing.Icon)
    {
        org.jdesktop.swingx.border.MatteBorderExt r0;
        int i0, i1, i2, i3;
        javax.swing.Icon r1;

        r0 := @this: org.jdesktop.swingx.border.MatteBorderExt;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: javax.swing.Icon;

        specialinvoke r0.<javax.swing.border.MatteBorder: void <init>(int,int,int,int,javax.swing.Icon)>(i0, i1, i2, i3, r1);

        r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons> = null;

        r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon defaultIcon> = null;

        return;
    }

    public void <init>(java.awt.Insets, javax.swing.Icon)
    {
        java.awt.Insets r1;
        javax.swing.Icon r2;
        org.jdesktop.swingx.border.MatteBorderExt r0;

        r0 := @this: org.jdesktop.swingx.border.MatteBorderExt;

        r1 := @parameter0: java.awt.Insets;

        r2 := @parameter1: javax.swing.Icon;

        specialinvoke r0.<javax.swing.border.MatteBorder: void <init>(java.awt.Insets,javax.swing.Icon)>(r1, r2);

        r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons> = null;

        r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon defaultIcon> = null;

        return;
    }

    public void <init>(javax.swing.Icon)
    {
        javax.swing.Icon r1;
        org.jdesktop.swingx.border.MatteBorderExt r0;

        r0 := @this: org.jdesktop.swingx.border.MatteBorderExt;

        r1 := @parameter0: javax.swing.Icon;

        specialinvoke r0.<javax.swing.border.MatteBorder: void <init>(javax.swing.Icon)>(r1);

        r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons> = null;

        r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon defaultIcon> = null;

        return;
    }

    public javax.swing.Icon[] getTileIcons()
    {
        javax.swing.Icon[] $r1;
        org.jdesktop.swingx.border.MatteBorderExt r0;

        r0 := @this: org.jdesktop.swingx.border.MatteBorderExt;

        $r1 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons>;

        return $r1;
    }

    public void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int)
    {
        java.awt.Color $r6;
        java.awt.Component r2;
        javax.swing.Icon[] $r1, $r4, $r7, $r8, $r10;
        org.jdesktop.swingx.border.MatteBorderExt r0;
        javax.swing.Icon $r9, $r11;
        java.awt.Graphics r3;
        java.awt.Insets $r5;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, i56;

        r0 := @this: org.jdesktop.swingx.border.MatteBorderExt;

        r2 := @parameter0: java.awt.Component;

        r3 := @parameter1: java.awt.Graphics;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $r1 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons>;

        if $r1 == null goto label1;

        $r4 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons>;

        $i4 = lengthof $r4;

        if $i4 >= 2 goto label2;

     label1:
        specialinvoke r0.<javax.swing.border.MatteBorder: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)>(r2, r3, i0, i1, i2, i3);

        return;

     label2:
        $r5 = virtualinvoke r0.<org.jdesktop.swingx.border.MatteBorderExt: java.awt.Insets getBorderInsets(java.awt.Component)>(r2);

        $i5 = $r5.<java.awt.Insets: int left>;

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i5);

        $i7 = $r5.<java.awt.Insets: int top>;

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>(i3, $i7);

        if $i6 <= 0 goto label3;

        if $i8 > 0 goto label4;

     label3:
        return;

     label4:
        $r6 = virtualinvoke r3.<java.awt.Graphics: java.awt.Color getColor()>();

        virtualinvoke r3.<java.awt.Graphics: void translate(int,int)>(i0, i1);

        i56 = 0;

     label5:
        $r7 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons>;

        $i9 = lengthof $r7;

        if i56 >= $i9 goto label7;

        $r8 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons>;

        $r9 = $r8[i56];

        if $r9 != null goto label6;

        $r10 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons>;

        $r11 = virtualinvoke r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon getDefaultIcon()>();

        $r10[i56] = $r11;

     label6:
        i56 = i56 + 1;

        goto label5;

     label7:
        $i11 = $r5.<java.awt.Insets: int left>;

        $i10 = $r5.<java.awt.Insets: int top>;

        virtualinvoke r0.<org.jdesktop.swingx.border.MatteBorderExt: void paintTopLeft(java.awt.Component,java.awt.Graphics,int,int,int,int)>(r2, r3, 0, 0, $i11, $i10);

        $i17 = $r5.<java.awt.Insets: int left>;

        $i12 = $r5.<java.awt.Insets: int left>;

        $i14 = i2 - $i12;

        $i13 = $r5.<java.awt.Insets: int right>;

        $i16 = $i14 - $i13;

        $i15 = $r5.<java.awt.Insets: int top>;

        virtualinvoke r0.<org.jdesktop.swingx.border.MatteBorderExt: void paintTop(java.awt.Component,java.awt.Graphics,int,int,int,int)>(r2, r3, $i17, 0, $i16, $i15);

        $i18 = $r5.<java.awt.Insets: int right>;

        $i21 = i2 - $i18;

        $i20 = $r5.<java.awt.Insets: int right>;

        $i19 = $r5.<java.awt.Insets: int top>;

        virtualinvoke r0.<org.jdesktop.swingx.border.MatteBorderExt: void paintTopRight(java.awt.Component,java.awt.Graphics,int,int,int,int)>(r2, r3, $i21, 0, $i20, $i19);

        $i22 = $r5.<java.awt.Insets: int right>;

        $i29 = i2 - $i22;

        $i28 = $r5.<java.awt.Insets: int top>;

        $i27 = $r5.<java.awt.Insets: int right>;

        $i23 = $r5.<java.awt.Insets: int top>;

        $i25 = i3 - $i23;

        $i24 = $r5.<java.awt.Insets: int bottom>;

        $i26 = $i25 - $i24;

        virtualinvoke r0.<org.jdesktop.swingx.border.MatteBorderExt: void paintRight(java.awt.Component,java.awt.Graphics,int,int,int,int)>(r2, r3, $i29, $i28, $i27, $i26);

        $i30 = $r5.<java.awt.Insets: int right>;

        $i35 = i2 - $i30;

        $i31 = $r5.<java.awt.Insets: int bottom>;

        $i34 = i3 - $i31;

        $i33 = $r5.<java.awt.Insets: int right>;

        $i32 = $r5.<java.awt.Insets: int bottom>;

        virtualinvoke r0.<org.jdesktop.swingx.border.MatteBorderExt: void paintBottomRight(java.awt.Component,java.awt.Graphics,int,int,int,int)>(r2, r3, $i35, $i34, $i33, $i32);

        $i43 = $r5.<java.awt.Insets: int left>;

        $i36 = $r5.<java.awt.Insets: int bottom>;

        $i42 = i3 - $i36;

        $i37 = $r5.<java.awt.Insets: int left>;

        $i39 = i2 - $i37;

        $i38 = $r5.<java.awt.Insets: int right>;

        $i41 = $i39 - $i38;

        $i40 = $r5.<java.awt.Insets: int bottom>;

        virtualinvoke r0.<org.jdesktop.swingx.border.MatteBorderExt: void paintBottom(java.awt.Component,java.awt.Graphics,int,int,int,int)>(r2, r3, $i43, $i42, $i41, $i40);

        $i44 = $r5.<java.awt.Insets: int bottom>;

        $i47 = i3 - $i44;

        $i46 = $r5.<java.awt.Insets: int left>;

        $i45 = $r5.<java.awt.Insets: int bottom>;

        virtualinvoke r0.<org.jdesktop.swingx.border.MatteBorderExt: void paintBottomLeft(java.awt.Component,java.awt.Graphics,int,int,int,int)>(r2, r3, 0, $i47, $i46, $i45);

        $i53 = $r5.<java.awt.Insets: int top>;

        $i52 = $r5.<java.awt.Insets: int left>;

        $i48 = $r5.<java.awt.Insets: int top>;

        $i50 = i3 - $i48;

        $i49 = $r5.<java.awt.Insets: int bottom>;

        $i51 = $i50 - $i49;

        virtualinvoke r0.<org.jdesktop.swingx.border.MatteBorderExt: void paintLeft(java.awt.Component,java.awt.Graphics,int,int,int,int)>(r2, r3, 0, $i53, $i52, $i51);

        $i55 = neg i0;

        $i54 = neg i1;

        virtualinvoke r3.<java.awt.Graphics: void translate(int,int)>($i55, $i54);

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r6);

        return;
    }

    protected void paint(javax.swing.Icon, java.awt.Component, java.awt.Graphics, int, int, int, int)
    {
        java.lang.Throwable $r4;
        org.jdesktop.swingx.border.MatteBorderExt r5;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11;
        javax.swing.Icon r2;
        java.awt.Component r3;
        java.awt.Graphics r0, $r1;

        r5 := @this: org.jdesktop.swingx.border.MatteBorderExt;

        r2 := @parameter0: javax.swing.Icon;

        r3 := @parameter1: java.awt.Component;

        r0 := @parameter2: java.awt.Graphics;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        $r1 = virtualinvoke r0.<java.awt.Graphics: java.awt.Graphics create()>();

     label1:
        virtualinvoke $r1.<java.awt.Graphics: void setClip(int,int,int,int)>(i0, i1, i2, i3);

        $i4 = interfaceinvoke r2.<javax.swing.Icon: int getIconWidth()>();

        $i5 = interfaceinvoke r2.<javax.swing.Icon: int getIconHeight()>();

        i10 = 0;

     label2:
        $i6 = i3 - i10;

        if $i6 <= 0 goto label5;

        i11 = 0;

     label3:
        $i7 = i2 - i11;

        if $i7 <= 0 goto label4;

        $i9 = i0 + i11;

        $i8 = i1 + i10;

        interfaceinvoke r2.<javax.swing.Icon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(r3, $r1, $i9, $i8);

        i11 = i11 + $i4;

        goto label3;

     label4:
        i10 = i10 + $i5;

        goto label2;

     label5:
        virtualinvoke $r1.<java.awt.Graphics: void dispose()>();

        goto label8;

     label6:
        $r4 := @caughtexception;

     label7:
        virtualinvoke $r1.<java.awt.Graphics: void dispose()>();

        throw $r4;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    protected void paintTopLeft(java.awt.Component, java.awt.Graphics, int, int, int, int)
    {
        java.lang.Throwable $r6;
        org.jdesktop.swingx.border.MatteBorderExt r2;
        javax.swing.Icon $r5;
        java.awt.Component r4;
        java.awt.Graphics r0, $r1;
        int i0, i1, i2, i3;
        javax.swing.Icon[] $r3;

        r2 := @this: org.jdesktop.swingx.border.MatteBorderExt;

        r4 := @parameter0: java.awt.Component;

        r0 := @parameter1: java.awt.Graphics;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $r1 = virtualinvoke r0.<java.awt.Graphics: java.awt.Graphics create()>();

     label1:
        virtualinvoke $r1.<java.awt.Graphics: void setClip(int,int,int,int)>(i0, i1, i2, i3);

        $r3 = r2.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons>;

        $r5 = $r3[0];

        interfaceinvoke $r5.<javax.swing.Icon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(r4, $r1, i0, i1);

     label2:
        virtualinvoke $r1.<java.awt.Graphics: void dispose()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

     label4:
        virtualinvoke $r1.<java.awt.Graphics: void dispose()>();

        throw $r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected void paintTop(java.awt.Component, java.awt.Graphics, int, int, int, int)
    {
        org.jdesktop.swingx.border.MatteBorderExt r0;
        javax.swing.Icon $r4;
        java.awt.Component r2;
        java.awt.Graphics r3;
        int i0, i1, i2, i3;
        javax.swing.Icon[] $r1;

        r0 := @this: org.jdesktop.swingx.border.MatteBorderExt;

        r2 := @parameter0: java.awt.Component;

        r3 := @parameter1: java.awt.Graphics;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $r1 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons>;

        $r4 = $r1[1];

        virtualinvoke r0.<org.jdesktop.swingx.border.MatteBorderExt: void paint(javax.swing.Icon,java.awt.Component,java.awt.Graphics,int,int,int,int)>($r4, r2, r3, i0, i1, i2, i3);

        return;
    }

    protected void paintTopRight(java.awt.Component, java.awt.Graphics, int, int, int, int)
    {
        org.jdesktop.swingx.border.MatteBorderExt r0;
        javax.swing.Icon r3, $r7;
        java.awt.Component r5;
        int $i0, i1, i2, i3, i4;
        java.awt.Graphics r6;
        javax.swing.Icon[] $r1, $r2, $r4;

        r0 := @this: org.jdesktop.swingx.border.MatteBorderExt;

        r5 := @parameter0: java.awt.Component;

        r6 := @parameter1: java.awt.Graphics;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        $r1 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons>;

        $i0 = lengthof $r1;

        if $i0 != 8 goto label1;

        $r4 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons>;

        $r7 = $r4[2];

        virtualinvoke r0.<org.jdesktop.swingx.border.MatteBorderExt: void paint(javax.swing.Icon,java.awt.Component,java.awt.Graphics,int,int,int,int)>($r7, r5, r6, i1, i2, i3, i4);

        goto label2;

     label1:
        $r2 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons>;

        r3 = $r2[0];

     label2:
        return;
    }

    protected void paintRight(java.awt.Component, java.awt.Graphics, int, int, int, int)
    {
        org.jdesktop.swingx.border.MatteBorderExt r0;
        javax.swing.Icon r3, $r7;
        java.awt.Component r5;
        int $i0, i1, i2, i3, i4;
        java.awt.Graphics r6;
        javax.swing.Icon[] $r1, $r2, $r4;

        r0 := @this: org.jdesktop.swingx.border.MatteBorderExt;

        r5 := @parameter0: java.awt.Component;

        r6 := @parameter1: java.awt.Graphics;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        $r1 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons>;

        $i0 = lengthof $r1;

        if $i0 != 8 goto label1;

        $r4 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons>;

        $r7 = $r4[3];

        virtualinvoke r0.<org.jdesktop.swingx.border.MatteBorderExt: void paint(javax.swing.Icon,java.awt.Component,java.awt.Graphics,int,int,int,int)>($r7, r5, r6, i1, i2, i3, i4);

        goto label2;

     label1:
        $r2 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons>;

        r3 = $r2[1];

     label2:
        return;
    }

    protected void paintBottomRight(java.awt.Component, java.awt.Graphics, int, int, int, int)
    {
        org.jdesktop.swingx.border.MatteBorderExt r0;
        javax.swing.Icon r3, $r7;
        java.awt.Component r5;
        int $i0, i1, i2, i3, i4;
        java.awt.Graphics r6;
        javax.swing.Icon[] $r1, $r2, $r4;

        r0 := @this: org.jdesktop.swingx.border.MatteBorderExt;

        r5 := @parameter0: java.awt.Component;

        r6 := @parameter1: java.awt.Graphics;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        $r1 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons>;

        $i0 = lengthof $r1;

        if $i0 != 8 goto label1;

        $r4 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons>;

        $r7 = $r4[4];

        virtualinvoke r0.<org.jdesktop.swingx.border.MatteBorderExt: void paint(javax.swing.Icon,java.awt.Component,java.awt.Graphics,int,int,int,int)>($r7, r5, r6, i1, i2, i3, i4);

        goto label2;

     label1:
        $r2 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons>;

        r3 = $r2[0];

     label2:
        return;
    }

    protected void paintBottom(java.awt.Component, java.awt.Graphics, int, int, int, int)
    {
        org.jdesktop.swingx.border.MatteBorderExt r0;
        javax.swing.Icon r3, $r7;
        java.awt.Component r5;
        int $i0, i1, i2, i3, i4;
        java.awt.Graphics r6;
        javax.swing.Icon[] $r1, $r2, $r4;

        r0 := @this: org.jdesktop.swingx.border.MatteBorderExt;

        r5 := @parameter0: java.awt.Component;

        r6 := @parameter1: java.awt.Graphics;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        $r1 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons>;

        $i0 = lengthof $r1;

        if $i0 != 8 goto label1;

        $r4 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons>;

        $r7 = $r4[5];

        virtualinvoke r0.<org.jdesktop.swingx.border.MatteBorderExt: void paint(javax.swing.Icon,java.awt.Component,java.awt.Graphics,int,int,int,int)>($r7, r5, r6, i1, i2, i3, i4);

        goto label2;

     label1:
        $r2 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons>;

        r3 = $r2[1];

     label2:
        return;
    }

    protected void paintBottomLeft(java.awt.Component, java.awt.Graphics, int, int, int, int)
    {
        org.jdesktop.swingx.border.MatteBorderExt r0;
        javax.swing.Icon r3, $r7;
        java.awt.Component r5;
        int $i0, i1, i2, i3, i4;
        java.awt.Graphics r6;
        javax.swing.Icon[] $r1, $r2, $r4;

        r0 := @this: org.jdesktop.swingx.border.MatteBorderExt;

        r5 := @parameter0: java.awt.Component;

        r6 := @parameter1: java.awt.Graphics;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        $r1 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons>;

        $i0 = lengthof $r1;

        if $i0 != 8 goto label1;

        $r4 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons>;

        $r7 = $r4[6];

        virtualinvoke r0.<org.jdesktop.swingx.border.MatteBorderExt: void paint(javax.swing.Icon,java.awt.Component,java.awt.Graphics,int,int,int,int)>($r7, r5, r6, i1, i2, i3, i4);

        goto label2;

     label1:
        $r2 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons>;

        r3 = $r2[0];

     label2:
        return;
    }

    protected void paintLeft(java.awt.Component, java.awt.Graphics, int, int, int, int)
    {
        org.jdesktop.swingx.border.MatteBorderExt r0;
        javax.swing.Icon r3, $r7;
        java.awt.Component r5;
        int $i0, i1, i2, i3, i4;
        java.awt.Graphics r6;
        javax.swing.Icon[] $r1, $r2, $r4;

        r0 := @this: org.jdesktop.swingx.border.MatteBorderExt;

        r5 := @parameter0: java.awt.Component;

        r6 := @parameter1: java.awt.Graphics;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        $r1 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons>;

        $i0 = lengthof $r1;

        if $i0 != 8 goto label1;

        $r4 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons>;

        $r7 = $r4[7];

        virtualinvoke r0.<org.jdesktop.swingx.border.MatteBorderExt: void paint(javax.swing.Icon,java.awt.Component,java.awt.Graphics,int,int,int,int)>($r7, r5, r6, i1, i2, i3, i4);

        goto label2;

     label1:
        $r2 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon[] tileIcons>;

        r3 = $r2[1];

     label2:
        return;
    }

    protected javax.swing.Icon getDefaultIcon()
    {
        org.jdesktop.swingx.border.MatteBorderExt r0;
        javax.swing.Icon $r1, $r2;
        org.jdesktop.swingx.border.MatteBorderExt$1 $r3;

        r0 := @this: org.jdesktop.swingx.border.MatteBorderExt;

        $r1 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon defaultIcon>;

        if $r1 != null goto label1;

        $r3 = new org.jdesktop.swingx.border.MatteBorderExt$1;

        specialinvoke $r3.<org.jdesktop.swingx.border.MatteBorderExt$1: void <init>(org.jdesktop.swingx.border.MatteBorderExt)>(r0);

        r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon defaultIcon> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.border.MatteBorderExt: javax.swing.Icon defaultIcon>;

        return $r2;
    }
}
