final class org.apache.lucene.index.MultiTermsEnum$TermsEnumWithSlice extends java.lang.Object
{
    private final org.apache.lucene.index.ReaderSlice subSlice;
    org.apache.lucene.index.TermsEnum terms;
    public org.apache.lucene.util.BytesRef current;
    final int index;
    static final boolean $assertionsDisabled;

    public void <init>(int, org.apache.lucene.index.ReaderSlice)
    {
        java.lang.AssertionError $r2;
        org.apache.lucene.index.ReaderSlice r1;
        org.apache.lucene.index.MultiTermsEnum$TermsEnumWithSlice r0;
        int i0, $i1, $i2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.MultiTermsEnum$TermsEnumWithSlice;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.lucene.index.ReaderSlice;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.index.MultiTermsEnum$TermsEnumWithSlice: org.apache.lucene.index.ReaderSlice subSlice> = r1;

        r0.<org.apache.lucene.index.MultiTermsEnum$TermsEnumWithSlice: int index> = i0;

        $z0 = <org.apache.lucene.index.MultiTermsEnum$TermsEnumWithSlice: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i1 = r1.<org.apache.lucene.index.ReaderSlice: int length>;

        if $i1 >= 0 goto label1;

        $r2 = new java.lang.AssertionError;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("length=");

        $i2 = r1.<org.apache.lucene.index.ReaderSlice: int length>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>($r6);

        throw $r2;

     label1:
        return;
    }

    public void reset(org.apache.lucene.index.TermsEnum, org.apache.lucene.util.BytesRef)
    {
        org.apache.lucene.index.TermsEnum r1;
        org.apache.lucene.util.BytesRef r2;
        org.apache.lucene.index.MultiTermsEnum$TermsEnumWithSlice r0;

        r0 := @this: org.apache.lucene.index.MultiTermsEnum$TermsEnumWithSlice;

        r1 := @parameter0: org.apache.lucene.index.TermsEnum;

        r2 := @parameter1: org.apache.lucene.util.BytesRef;

        r0.<org.apache.lucene.index.MultiTermsEnum$TermsEnumWithSlice: org.apache.lucene.index.TermsEnum terms> = r1;

        r0.<org.apache.lucene.index.MultiTermsEnum$TermsEnumWithSlice: org.apache.lucene.util.BytesRef current> = r2;

        return;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.index.ReaderSlice $r2;
        org.apache.lucene.index.MultiTermsEnum$TermsEnumWithSlice r1;
        org.apache.lucene.index.TermsEnum $r6;
        java.lang.StringBuilder $r0, $r4, $r5, $r7;
        java.lang.String $r3, $r8;

        r1 := @this: org.apache.lucene.index.MultiTermsEnum$TermsEnumWithSlice;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.lucene.index.MultiTermsEnum$TermsEnumWithSlice: org.apache.lucene.index.ReaderSlice subSlice>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.ReaderSlice: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r6 = r1.<org.apache.lucene.index.MultiTermsEnum$TermsEnumWithSlice: org.apache.lucene.index.TermsEnum terms>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    static org.apache.lucene.index.ReaderSlice access$000(org.apache.lucene.index.MultiTermsEnum$TermsEnumWithSlice)
    {
        org.apache.lucene.index.ReaderSlice $r1;
        org.apache.lucene.index.MultiTermsEnum$TermsEnumWithSlice r0;

        r0 := @parameter0: org.apache.lucene.index.MultiTermsEnum$TermsEnumWithSlice;

        $r1 = r0.<org.apache.lucene.index.MultiTermsEnum$TermsEnumWithSlice: org.apache.lucene.index.ReaderSlice subSlice>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/MultiTermsEnum;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.MultiTermsEnum$TermsEnumWithSlice: boolean $assertionsDisabled> = $z1;

        return;
    }
}
