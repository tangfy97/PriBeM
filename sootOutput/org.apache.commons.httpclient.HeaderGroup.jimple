public class org.apache.commons.httpclient.HeaderGroup extends java.lang.Object
{
    private java.util.List headers;

    public void <init>()
    {
        org.apache.commons.httpclient.HeaderGroup r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.commons.httpclient.HeaderGroup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.httpclient.HeaderGroup: java.util.List headers> = $r1;

        return;
    }

    public void clear()
    {
        java.util.List $r1;
        org.apache.commons.httpclient.HeaderGroup r0;

        r0 := @this: org.apache.commons.httpclient.HeaderGroup;

        $r1 = r0.<org.apache.commons.httpclient.HeaderGroup: java.util.List headers>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public void addHeader(org.apache.commons.httpclient.Header)
    {
        java.util.List $r2;
        org.apache.commons.httpclient.Header r1;
        org.apache.commons.httpclient.HeaderGroup r0;

        r0 := @this: org.apache.commons.httpclient.HeaderGroup;

        r1 := @parameter0: org.apache.commons.httpclient.Header;

        $r2 = r0.<org.apache.commons.httpclient.HeaderGroup: java.util.List headers>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeHeader(org.apache.commons.httpclient.Header)
    {
        java.util.List $r2;
        org.apache.commons.httpclient.Header r1;
        org.apache.commons.httpclient.HeaderGroup r0;

        r0 := @this: org.apache.commons.httpclient.HeaderGroup;

        r1 := @parameter0: org.apache.commons.httpclient.Header;

        $r2 = r0.<org.apache.commons.httpclient.HeaderGroup: java.util.List headers>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void setHeaders(org.apache.commons.httpclient.Header[])
    {
        org.apache.commons.httpclient.HeaderGroup r0;
        int $i0, i1;
        org.apache.commons.httpclient.Header[] r1;
        org.apache.commons.httpclient.Header $r2;

        r0 := @this: org.apache.commons.httpclient.HeaderGroup;

        r1 := @parameter0: org.apache.commons.httpclient.Header[];

        virtualinvoke r0.<org.apache.commons.httpclient.HeaderGroup: void clear()>();

        i1 = 0;

     label1:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label2;

        $r2 = r1[i1];

        virtualinvoke r0.<org.apache.commons.httpclient.HeaderGroup: void addHeader(org.apache.commons.httpclient.Header)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public org.apache.commons.httpclient.Header getCondensedHeader(java.lang.String)
    {
        org.apache.commons.httpclient.Header $r4, $r6, $r9, $r11, $r12, $r14;
        java.lang.StringBuffer $r3;
        int $i0, $i1, $i2, i3;
        java.lang.String r1, $r5, $r7, $r8, $r10, $r13, $r15;
        org.apache.commons.httpclient.HeaderGroup r0;
        org.apache.commons.httpclient.Header[] $r2;

        r0 := @this: org.apache.commons.httpclient.HeaderGroup;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.httpclient.HeaderGroup: org.apache.commons.httpclient.Header[] getHeaders(java.lang.String)>(r1);

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        return null;

     label1:
        $i1 = lengthof $r2;

        if $i1 != 1 goto label2;

        $r11 = new org.apache.commons.httpclient.Header;

        $r12 = $r2[0];

        $r13 = virtualinvoke $r12.<org.apache.commons.httpclient.Header: java.lang.String getName()>();

        $r14 = $r2[0];

        $r15 = virtualinvoke $r14.<org.apache.commons.httpclient.Header: java.lang.String getValue()>();

        specialinvoke $r11.<org.apache.commons.httpclient.Header: void <init>(java.lang.String,java.lang.String)>($r13, $r15);

        return $r11;

     label2:
        $r3 = new java.lang.StringBuffer;

        $r4 = $r2[0];

        $r5 = virtualinvoke $r4.<org.apache.commons.httpclient.Header: java.lang.String getValue()>();

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(java.lang.String)>($r5);

        i3 = 1;

     label3:
        $i2 = lengthof $r2;

        if i3 >= $i2 goto label4;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r9 = $r2[i3];

        $r10 = virtualinvoke $r9.<org.apache.commons.httpclient.Header: java.lang.String getValue()>();

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        i3 = i3 + 1;

        goto label3;

     label4:
        $r6 = new org.apache.commons.httpclient.Header;

        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r8 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<org.apache.commons.httpclient.Header: void <init>(java.lang.String,java.lang.String)>($r7, $r8);

        return $r6;
    }

    public org.apache.commons.httpclient.Header[] getHeaders(java.lang.String)
    {
        java.lang.Object[] $r5;
        java.util.Iterator $r3;
        org.apache.commons.httpclient.HeaderGroup r1;
        org.apache.commons.httpclient.Header r9;
        java.util.ArrayList $r0;
        java.util.List $r2;
        int $i0;
        java.lang.Object $r8;
        java.lang.String $r10, r11;
        org.apache.commons.httpclient.Header[] $r4, $r6, $r7;
        boolean $z0, $z1;

        r1 := @this: org.apache.commons.httpclient.HeaderGroup;

        r11 := @parameter0: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.commons.httpclient.HeaderGroup: java.util.List headers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.commons.httpclient.Header) $r8;

        $r10 = virtualinvoke r9.<org.apache.commons.httpclient.Header: java.lang.String getName()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r11);

        if $z1 == 0 goto label2;

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>(r9);

     label2:
        goto label1;

     label3:
        $i0 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        $r4 = newarray (org.apache.commons.httpclient.Header)[$i0];

        $r5 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (org.apache.commons.httpclient.Header[]) $r5;

        $r7 = (org.apache.commons.httpclient.Header[]) $r6;

        return $r7;
    }

    public org.apache.commons.httpclient.Header getFirstHeader(java.lang.String)
    {
        java.util.Iterator $r2;
        org.apache.commons.httpclient.HeaderGroup r0;
        org.apache.commons.httpclient.Header r4;
        java.util.List $r1;
        java.lang.Object $r3;
        java.lang.String $r5, r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.httpclient.HeaderGroup;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.commons.httpclient.HeaderGroup: java.util.List headers>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.commons.httpclient.Header) $r3;

        $r5 = virtualinvoke r4.<org.apache.commons.httpclient.Header: java.lang.String getName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r6);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    public org.apache.commons.httpclient.Header getLastHeader(java.lang.String)
    {
        org.apache.commons.httpclient.HeaderGroup r0;
        org.apache.commons.httpclient.Header r4;
        java.util.List $r1, $r2;
        int $i0, i1, $i3;
        java.lang.Object $r3;
        java.lang.String $r5, r6;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.HeaderGroup;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.commons.httpclient.HeaderGroup: java.util.List headers>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r2 = r0.<org.apache.commons.httpclient.HeaderGroup: java.util.List headers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (org.apache.commons.httpclient.Header) $r3;

        $r5 = virtualinvoke r4.<org.apache.commons.httpclient.Header: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r6);

        if $z0 == 0 goto label2;

        return r4;

     label2:
        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label1;

     label3:
        return null;
    }

    public org.apache.commons.httpclient.Header[] getAllHeaders()
    {
        java.lang.Object[] $r4;
        org.apache.commons.httpclient.HeaderGroup r0;
        java.util.List $r1, $r2;
        int $i0;
        org.apache.commons.httpclient.Header[] $r3, $r5, $r6;

        r0 := @this: org.apache.commons.httpclient.HeaderGroup;

        $r2 = r0.<org.apache.commons.httpclient.HeaderGroup: java.util.List headers>;

        $r1 = r0.<org.apache.commons.httpclient.HeaderGroup: java.util.List headers>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r3 = newarray (org.apache.commons.httpclient.Header)[$i0];

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (org.apache.commons.httpclient.Header[]) $r4;

        $r6 = (org.apache.commons.httpclient.Header[]) $r5;

        return $r6;
    }

    public boolean containsHeader(java.lang.String)
    {
        java.util.Iterator $r2;
        org.apache.commons.httpclient.HeaderGroup r0;
        org.apache.commons.httpclient.Header r4;
        java.util.List $r1;
        java.lang.Object $r3;
        java.lang.String $r5, r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.httpclient.HeaderGroup;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.commons.httpclient.HeaderGroup: java.util.List headers>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.commons.httpclient.Header) $r3;

        $r5 = virtualinvoke r4.<org.apache.commons.httpclient.Header: java.lang.String getName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r6);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public java.util.Iterator getIterator()
    {
        java.util.List $r1;
        java.util.Iterator $r2;
        org.apache.commons.httpclient.HeaderGroup r0;

        r0 := @this: org.apache.commons.httpclient.HeaderGroup;

        $r1 = r0.<org.apache.commons.httpclient.HeaderGroup: java.util.List headers>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }
}
