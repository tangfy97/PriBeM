public abstract class javax.xml.datatype.Duration extends java.lang.Object
{

    public void <init>()
    {
        javax.xml.datatype.Duration r0;

        r0 := @this: javax.xml.datatype.Duration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public javax.xml.namespace.QName getXMLSchemaType()
    {
        java.lang.IllegalStateException $r10;
        javax.xml.datatype.Duration r0;
        java.lang.StringBuffer $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23;
        java.lang.String $r24;
        javax.xml.datatype.DatatypeConstants$Field $r1, $r2, $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        javax.xml.namespace.QName $r7, $r8, $r9;

        r0 := @this: javax.xml.datatype.Duration;

        $r1 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field YEARS>;

        $z0 = virtualinvoke r0.<javax.xml.datatype.Duration: boolean isSet(javax.xml.datatype.DatatypeConstants$Field)>($r1);

        $r2 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field MONTHS>;

        $z1 = virtualinvoke r0.<javax.xml.datatype.Duration: boolean isSet(javax.xml.datatype.DatatypeConstants$Field)>($r2);

        $r3 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field DAYS>;

        $z2 = virtualinvoke r0.<javax.xml.datatype.Duration: boolean isSet(javax.xml.datatype.DatatypeConstants$Field)>($r3);

        $r4 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field HOURS>;

        $z3 = virtualinvoke r0.<javax.xml.datatype.Duration: boolean isSet(javax.xml.datatype.DatatypeConstants$Field)>($r4);

        $r5 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field MINUTES>;

        $z4 = virtualinvoke r0.<javax.xml.datatype.Duration: boolean isSet(javax.xml.datatype.DatatypeConstants$Field)>($r5);

        $r6 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field SECONDS>;

        $z5 = virtualinvoke r0.<javax.xml.datatype.Duration: boolean isSet(javax.xml.datatype.DatatypeConstants$Field)>($r6);

        if $z0 == 0 goto label1;

        if $z1 == 0 goto label1;

        if $z2 == 0 goto label1;

        if $z3 == 0 goto label1;

        if $z4 == 0 goto label1;

        if $z5 == 0 goto label1;

        $r9 = <javax.xml.datatype.DatatypeConstants: javax.xml.namespace.QName DURATION>;

        return $r9;

     label1:
        if $z0 != 0 goto label2;

        if $z1 != 0 goto label2;

        if $z2 == 0 goto label2;

        if $z3 == 0 goto label2;

        if $z4 == 0 goto label2;

        if $z5 == 0 goto label2;

        $r8 = <javax.xml.datatype.DatatypeConstants: javax.xml.namespace.QName DURATION_DAYTIME>;

        return $r8;

     label2:
        if $z0 == 0 goto label3;

        if $z1 == 0 goto label3;

        if $z2 != 0 goto label3;

        if $z3 != 0 goto label3;

        if $z4 != 0 goto label3;

        if $z5 != 0 goto label3;

        $r7 = <javax.xml.datatype.DatatypeConstants: javax.xml.namespace.QName DURATION_YEARMONTH>;

        return $r7;

     label3:
        $r10 = new java.lang.IllegalStateException;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("javax.xml.datatype.Duration#getXMLSchemaType(): this Duration does not match one of the XML Schema date/time datatypes: year set = ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" month set = ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" day set = ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" hour set = ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" minute set = ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z4);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" second set = ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z5);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r24);

        throw $r10;
    }

    public abstract int getSign();

    public int getYears()
    {
        int $i0;
        javax.xml.datatype.Duration r0;
        javax.xml.datatype.DatatypeConstants$Field $r1;

        r0 := @this: javax.xml.datatype.Duration;

        $r1 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field YEARS>;

        $i0 = specialinvoke r0.<javax.xml.datatype.Duration: int getFieldValueAsInt(javax.xml.datatype.DatatypeConstants$Field)>($r1);

        return $i0;
    }

    public int getMonths()
    {
        int $i0;
        javax.xml.datatype.Duration r0;
        javax.xml.datatype.DatatypeConstants$Field $r1;

        r0 := @this: javax.xml.datatype.Duration;

        $r1 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field MONTHS>;

        $i0 = specialinvoke r0.<javax.xml.datatype.Duration: int getFieldValueAsInt(javax.xml.datatype.DatatypeConstants$Field)>($r1);

        return $i0;
    }

    public int getDays()
    {
        int $i0;
        javax.xml.datatype.Duration r0;
        javax.xml.datatype.DatatypeConstants$Field $r1;

        r0 := @this: javax.xml.datatype.Duration;

        $r1 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field DAYS>;

        $i0 = specialinvoke r0.<javax.xml.datatype.Duration: int getFieldValueAsInt(javax.xml.datatype.DatatypeConstants$Field)>($r1);

        return $i0;
    }

    public int getHours()
    {
        int $i0;
        javax.xml.datatype.Duration r0;
        javax.xml.datatype.DatatypeConstants$Field $r1;

        r0 := @this: javax.xml.datatype.Duration;

        $r1 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field HOURS>;

        $i0 = specialinvoke r0.<javax.xml.datatype.Duration: int getFieldValueAsInt(javax.xml.datatype.DatatypeConstants$Field)>($r1);

        return $i0;
    }

    public int getMinutes()
    {
        int $i0;
        javax.xml.datatype.Duration r0;
        javax.xml.datatype.DatatypeConstants$Field $r1;

        r0 := @this: javax.xml.datatype.Duration;

        $r1 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field MINUTES>;

        $i0 = specialinvoke r0.<javax.xml.datatype.Duration: int getFieldValueAsInt(javax.xml.datatype.DatatypeConstants$Field)>($r1);

        return $i0;
    }

    public int getSeconds()
    {
        int $i0;
        javax.xml.datatype.Duration r0;
        javax.xml.datatype.DatatypeConstants$Field $r1;

        r0 := @this: javax.xml.datatype.Duration;

        $r1 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field SECONDS>;

        $i0 = specialinvoke r0.<javax.xml.datatype.Duration: int getFieldValueAsInt(javax.xml.datatype.DatatypeConstants$Field)>($r1);

        return $i0;
    }

    public long getTimeInMillis(java.util.Calendar)
    {
        java.util.Calendar r0, r2;
        javax.xml.datatype.Duration r3;
        java.lang.Object $r1;
        long $l0, $l1, $l2;

        r3 := @this: javax.xml.datatype.Duration;

        r0 := @parameter0: java.util.Calendar;

        $r1 = virtualinvoke r0.<java.util.Calendar: java.lang.Object clone()>();

        r2 = (java.util.Calendar) $r1;

        virtualinvoke r3.<javax.xml.datatype.Duration: void addTo(java.util.Calendar)>(r2);

        $l0 = staticinvoke <javax.xml.datatype.Duration: long getCalendarTimeInMillis(java.util.Calendar)>(r2);

        $l1 = staticinvoke <javax.xml.datatype.Duration: long getCalendarTimeInMillis(java.util.Calendar)>(r0);

        $l2 = $l0 - $l1;

        return $l2;
    }

    public long getTimeInMillis(java.util.Date)
    {
        javax.xml.datatype.Duration r2;
        java.util.GregorianCalendar $r0;
        java.util.Date r1;
        long $l0, $l1, $l2;

        r2 := @this: javax.xml.datatype.Duration;

        r1 := @parameter0: java.util.Date;

        $r0 = new java.util.GregorianCalendar;

        specialinvoke $r0.<java.util.GregorianCalendar: void <init>()>();

        virtualinvoke $r0.<java.util.Calendar: void setTime(java.util.Date)>(r1);

        virtualinvoke r2.<javax.xml.datatype.Duration: void addTo(java.util.Calendar)>($r0);

        $l0 = staticinvoke <javax.xml.datatype.Duration: long getCalendarTimeInMillis(java.util.Calendar)>($r0);

        $l1 = virtualinvoke r1.<java.util.Date: long getTime()>();

        $l2 = $l0 - $l1;

        return $l2;
    }

    public abstract java.lang.Number getField(javax.xml.datatype.DatatypeConstants$Field);

    private int getFieldValueAsInt(javax.xml.datatype.DatatypeConstants$Field)
    {
        javax.xml.datatype.Duration r0;
        int $i0;
        javax.xml.datatype.DatatypeConstants$Field r1;
        java.lang.Number $r2;

        r0 := @this: javax.xml.datatype.Duration;

        r1 := @parameter0: javax.xml.datatype.DatatypeConstants$Field;

        $r2 = virtualinvoke r0.<javax.xml.datatype.Duration: java.lang.Number getField(javax.xml.datatype.DatatypeConstants$Field)>(r1);

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r2.<java.lang.Number: int intValue()>();

        return $i0;

     label1:
        return 0;
    }

    public abstract boolean isSet(javax.xml.datatype.DatatypeConstants$Field);

    public abstract javax.xml.datatype.Duration add(javax.xml.datatype.Duration);

    public abstract void addTo(java.util.Calendar);

    public void addTo(java.util.Date)
    {
        java.util.GregorianCalendar $r1;
        java.util.Date r0;
        long $l0;
        java.lang.NullPointerException $r3;
        javax.xml.datatype.Duration r2;
        java.lang.StringBuffer $r4, $r5, $r8, $r9;
        java.lang.Class $r6;
        java.lang.String $r7, $r10;

        r2 := @this: javax.xml.datatype.Duration;

        r0 := @parameter0: java.util.Date;

        if r0 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot call ");

        $r6 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#addTo(Date date) with date == null.");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>($r10);

        throw $r3;

     label1:
        $r1 = new java.util.GregorianCalendar;

        specialinvoke $r1.<java.util.GregorianCalendar: void <init>()>();

        virtualinvoke $r1.<java.util.Calendar: void setTime(java.util.Date)>(r0);

        virtualinvoke r2.<javax.xml.datatype.Duration: void addTo(java.util.Calendar)>($r1);

        $l0 = staticinvoke <javax.xml.datatype.Duration: long getCalendarTimeInMillis(java.util.Calendar)>($r1);

        virtualinvoke r0.<java.util.Date: void setTime(long)>($l0);

        return;
    }

    public javax.xml.datatype.Duration subtract(javax.xml.datatype.Duration)
    {
        javax.xml.datatype.Duration r0, r1, $r2, $r3;

        r0 := @this: javax.xml.datatype.Duration;

        r1 := @parameter0: javax.xml.datatype.Duration;

        $r2 = virtualinvoke r1.<javax.xml.datatype.Duration: javax.xml.datatype.Duration negate()>();

        $r3 = virtualinvoke r0.<javax.xml.datatype.Duration: javax.xml.datatype.Duration add(javax.xml.datatype.Duration)>($r2);

        return $r3;
    }

    public javax.xml.datatype.Duration multiply(int)
    {
        java.math.BigDecimal $r1;
        javax.xml.datatype.Duration r0, $r2;
        int i0;
        long $l1;

        r0 := @this: javax.xml.datatype.Duration;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        $r1 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>($l1);

        $r2 = virtualinvoke r0.<javax.xml.datatype.Duration: javax.xml.datatype.Duration multiply(java.math.BigDecimal)>($r1);

        return $r2;
    }

    public abstract javax.xml.datatype.Duration multiply(java.math.BigDecimal);

    public abstract javax.xml.datatype.Duration negate();

    public abstract javax.xml.datatype.Duration normalizeWith(java.util.Calendar);

    public abstract int compare(javax.xml.datatype.Duration);

    public boolean isLongerThan(javax.xml.datatype.Duration)
    {
        javax.xml.datatype.Duration r0, r1;
        int $i0;
        boolean $z0;

        r0 := @this: javax.xml.datatype.Duration;

        r1 := @parameter0: javax.xml.datatype.Duration;

        $i0 = virtualinvoke r0.<javax.xml.datatype.Duration: int compare(javax.xml.datatype.Duration)>(r1);

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isShorterThan(javax.xml.datatype.Duration)
    {
        javax.xml.datatype.Duration r0, r1;
        int $i0, $i2;
        boolean $z0;

        r0 := @this: javax.xml.datatype.Duration;

        r1 := @parameter0: javax.xml.datatype.Duration;

        $i0 = virtualinvoke r0.<javax.xml.datatype.Duration: int compare(javax.xml.datatype.Duration)>(r1);

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        javax.xml.datatype.Duration r1, $r2;
        int $i0;
        java.lang.Object r0;
        boolean $z0, $z1;

        r1 := @this: javax.xml.datatype.Duration;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof javax.xml.datatype.Duration;

        if $z0 == 0 goto label4;

        $r2 = (javax.xml.datatype.Duration) r0;

        $i0 = virtualinvoke r1.<javax.xml.datatype.Duration: int compare(javax.xml.datatype.Duration)>($r2);

        if $i0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        return 0;
    }

    public abstract int hashCode();

    public java.lang.String toString()
    {
        java.math.BigDecimal $r21;
        javax.xml.datatype.Duration r1;
        java.lang.StringBuffer $r0, $r15, $r16, $r17, $r18, $r22, $r24;
        int $i0;
        java.math.BigInteger $r19, $r20, $r23, $r25, $r26;
        java.lang.String $r14, $r27;
        javax.xml.datatype.DatatypeConstants$Field $r2, $r4, $r6, $r8, $r10, $r12;
        java.lang.Number $r3, $r5, $r7, $r9, $r11, $r13;

        r1 := @this: javax.xml.datatype.Duration;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $i0 = virtualinvoke r1.<javax.xml.datatype.Duration: int getSign()>();

        if $i0 >= 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45);

     label1:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(80);

        $r2 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field YEARS>;

        $r3 = virtualinvoke r1.<javax.xml.datatype.Duration: java.lang.Number getField(javax.xml.datatype.DatatypeConstants$Field)>($r2);

        $r26 = (java.math.BigInteger) $r3;

        if $r26 == null goto label2;

        $r24 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r26);

        virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(89);

     label2:
        $r4 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field MONTHS>;

        $r5 = virtualinvoke r1.<javax.xml.datatype.Duration: java.lang.Number getField(javax.xml.datatype.DatatypeConstants$Field)>($r4);

        $r25 = (java.math.BigInteger) $r5;

        if $r25 == null goto label3;

        $r22 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r25);

        virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(77);

     label3:
        $r6 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field DAYS>;

        $r7 = virtualinvoke r1.<javax.xml.datatype.Duration: java.lang.Number getField(javax.xml.datatype.DatatypeConstants$Field)>($r6);

        $r23 = (java.math.BigInteger) $r7;

        if $r23 == null goto label4;

        $r18 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r23);

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(68);

     label4:
        $r8 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field HOURS>;

        $r9 = virtualinvoke r1.<javax.xml.datatype.Duration: java.lang.Number getField(javax.xml.datatype.DatatypeConstants$Field)>($r8);

        $r19 = (java.math.BigInteger) $r9;

        $r10 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field MINUTES>;

        $r11 = virtualinvoke r1.<javax.xml.datatype.Duration: java.lang.Number getField(javax.xml.datatype.DatatypeConstants$Field)>($r10);

        $r20 = (java.math.BigInteger) $r11;

        $r12 = <javax.xml.datatype.DatatypeConstants: javax.xml.datatype.DatatypeConstants$Field SECONDS>;

        $r13 = virtualinvoke r1.<javax.xml.datatype.Duration: java.lang.Number getField(javax.xml.datatype.DatatypeConstants$Field)>($r12);

        $r21 = (java.math.BigDecimal) $r13;

        if $r19 != null goto label5;

        if $r20 != null goto label5;

        if $r21 == null goto label8;

     label5:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(84);

        if $r19 == null goto label6;

        $r17 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r19);

        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(72);

     label6:
        if $r20 == null goto label7;

        $r16 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r20);

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(77);

     label7:
        if $r21 == null goto label8;

        $r14 = specialinvoke r1.<javax.xml.datatype.Duration: java.lang.String toString(java.math.BigDecimal)>($r21);

        $r15 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(83);

     label8:
        $r27 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r27;
    }

    private java.lang.String toString(java.math.BigDecimal)
    {
        java.math.BigDecimal r0;
        javax.xml.datatype.Duration r10;
        java.lang.StringBuffer $r3, $r5, $r6, $r7, $r8, r11;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, i7;
        java.math.BigInteger $r1;
        java.lang.String $r2, $r4, $r9;

        r10 := @this: javax.xml.datatype.Duration;

        r0 := @parameter0: java.math.BigDecimal;

        $r1 = virtualinvoke r0.<java.math.BigDecimal: java.math.BigInteger unscaledValue()>();

        $r2 = virtualinvoke $r1.<java.math.BigInteger: java.lang.String toString()>();

        $i0 = virtualinvoke r0.<java.math.BigDecimal: int scale()>();

        if $i0 != 0 goto label1;

        return $r2;

     label1:
        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        i2 = $i1 - $i0;

        if i2 != 0 goto label2;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;

     label2:
        if i2 <= 0 goto label3;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(java.lang.String)>($r2);

        r11 = $r5;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>(i2, 46);

        goto label6;

     label3:
        $r3 = new java.lang.StringBuffer;

        $i3 = 3 - i2;

        $i4 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i5 = $i3 + $i4;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(int)>($i5);

        r11 = $r3;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0.");

        i7 = 0;

        goto label5;

     label4:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

        i7 = i7 + 1;

     label5:
        $i6 = neg i2;

        if i7 < $i6 goto label4;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

     label6:
        $r4 = virtualinvoke r11.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    private static long getCalendarTimeInMillis(java.util.Calendar)
    {
        long $l0;
        java.util.Calendar r0;
        java.util.Date $r1;

        r0 := @parameter0: java.util.Calendar;

        $r1 = virtualinvoke r0.<java.util.Calendar: java.util.Date getTime()>();

        $l0 = virtualinvoke $r1.<java.util.Date: long getTime()>();

        return $l0;
    }
}
