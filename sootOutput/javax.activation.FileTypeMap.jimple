public abstract class javax.activation.FileTypeMap extends java.lang.Object
{
    private static javax.activation.FileTypeMap defaultFileTypeMap;

    public static void setDefaultFileTypeMap(javax.activation.FileTypeMap)
    {
        javax.activation.FileTypeMap r1;
        java.lang.SecurityManager $r0;

        r1 := @parameter0: javax.activation.FileTypeMap;

        $r0 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if $r0 == null goto label1;

        virtualinvoke $r0.<java.lang.SecurityManager: void checkSetFactory()>();

     label1:
        <javax.activation.FileTypeMap: javax.activation.FileTypeMap defaultFileTypeMap> = r1;

        return;
    }

    public static synchronized javax.activation.FileTypeMap getDefaultFileTypeMap()
    {
        javax.activation.FileTypeMap $r0, $r1;
        javax.activation.MimetypesFileTypeMap $r2;

        $r0 = <javax.activation.FileTypeMap: javax.activation.FileTypeMap defaultFileTypeMap>;

        if $r0 != null goto label1;

        $r2 = new javax.activation.MimetypesFileTypeMap;

        specialinvoke $r2.<javax.activation.MimetypesFileTypeMap: void <init>()>();

        <javax.activation.FileTypeMap: javax.activation.FileTypeMap defaultFileTypeMap> = $r2;

     label1:
        $r1 = <javax.activation.FileTypeMap: javax.activation.FileTypeMap defaultFileTypeMap>;

        return $r1;
    }

    public void <init>()
    {
        javax.activation.FileTypeMap r0;

        r0 := @this: javax.activation.FileTypeMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract java.lang.String getContentType(java.io.File);

    public abstract java.lang.String getContentType(java.lang.String);

    static void <clinit>()
    {
        <javax.activation.FileTypeMap: javax.activation.FileTypeMap defaultFileTypeMap> = null;

        return;
    }
}
