public class tdb.tdbstats extends tdb.cmdline.CmdTDBGraph
{

    public static transient void main(java.lang.String[])
    {
        tdb.tdbstats $r0;
        java.lang.String[] r1;

        r1 := @parameter0: java.lang.String[];

        staticinvoke <tdb.cmdline.CmdTDB: void init()>();

        $r0 = new tdb.tdbstats;

        specialinvoke $r0.<tdb.tdbstats: void <init>(java.lang.String[])>(r1);

        virtualinvoke $r0.<tdb.tdbstats: void mainRun()>();

        return;
    }

    protected void <init>(java.lang.String[])
    {
        tdb.tdbstats r0;
        java.lang.String[] r1;

        r0 := @this: tdb.tdbstats;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<tdb.cmdline.CmdTDBGraph: void <init>(java.lang.String[])>(r1);

        return;
    }

    protected java.lang.String getSummary()
    {
        tdb.tdbstats r0;

        r0 := @this: tdb.tdbstats;

        return null;
    }

    public static com.hp.hpl.jena.tdb.solver.stats.StatsResults stats(com.hp.hpl.jena.tdb.store.DatasetGraphTDB, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.tdb.store.QuadTable $r29;
        com.hp.hpl.jena.tdb.store.DatasetGraphTDB r0;
        com.hp.hpl.jena.graph.Node r5;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r3;
        boolean $z0, $z1, $z2, $z3;
        com.hp.hpl.jena.tdb.store.TripleTable $r1, $r20;
        com.hp.hpl.jena.tdb.solver.stats.StatsResults $r8;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r2, $r21, $r30;
        java.lang.StringBuilder $r16, $r17, $r18;
        org.apache.jena.atlas.lib.Tuple r10, r27;
        com.hp.hpl.jena.tdb.store.NodeId[] $r6;
        com.hp.hpl.jena.tdb.store.NodeId $r15, r28;
        java.lang.String $r19;
        java.util.Iterator r7, $r22, $r31;
        com.hp.hpl.jena.tdb.solver.stats.StatsCollectorNodeId $r4;
        java.lang.Object $r9, $r11, $r12, $r13, $r14, $r23, $r24, $r25, $r26;

        r0 := @parameter0: com.hp.hpl.jena.tdb.store.DatasetGraphTDB;

        r5 := @parameter1: com.hp.hpl.jena.graph.Node;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.store.DatasetGraphTDB: com.hp.hpl.jena.tdb.store.TripleTable getTripleTable()>();

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.store.TripleTable: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable getNodeTupleTable()>();

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: com.hp.hpl.jena.tdb.nodetable.NodeTable getNodeTable()>();

        $r4 = new com.hp.hpl.jena.tdb.solver.stats.StatsCollectorNodeId;

        specialinvoke $r4.<com.hp.hpl.jena.tdb.solver.stats.StatsCollectorNodeId: void <init>(com.hp.hpl.jena.tdb.nodetable.NodeTable)>($r3);

        if r5 != null goto label3;

        $r20 = virtualinvoke r0.<com.hp.hpl.jena.tdb.store.DatasetGraphTDB: com.hp.hpl.jena.tdb.store.TripleTable getTripleTable()>();

        $r21 = virtualinvoke $r20.<com.hp.hpl.jena.tdb.store.TripleTable: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable getNodeTupleTable()>();

        $r22 = interfaceinvoke $r21.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: java.util.Iterator findAll()>();

     label1:
        $z2 = interfaceinvoke $r22.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r23 = interfaceinvoke $r22.<java.util.Iterator: java.lang.Object next()>();

        r27 = (org.apache.jena.atlas.lib.Tuple) $r23;

        $r24 = virtualinvoke r27.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(0);

        $r25 = virtualinvoke r27.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(1);

        $r26 = virtualinvoke r27.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(2);

        virtualinvoke $r4.<com.hp.hpl.jena.tdb.solver.stats.StatsCollectorNodeId: void record(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(null, $r24, $r25, $r26);

        goto label1;

     label2:
        goto label8;

     label3:
        $z0 = staticinvoke <com.hp.hpl.jena.sparql.core.Quad: boolean isUnionGraph(com.hp.hpl.jena.graph.Node)>(r5);

        r28 = null;

        if $z0 != 0 goto label4;

        $r15 = interfaceinvoke $r3.<com.hp.hpl.jena.tdb.nodetable.NodeTable: com.hp.hpl.jena.tdb.store.NodeId getNodeIdForNode(com.hp.hpl.jena.graph.Node)>(r5);

        r28 = $r15;

        $z1 = staticinvoke <com.hp.hpl.jena.tdb.store.NodeId: boolean isDoesNotExist(com.hp.hpl.jena.tdb.store.NodeId)>($r15);

        if $z1 == 0 goto label4;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such graph: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Class,java.lang.String)>(class "Ltdb/tdbstats;", $r19);

     label4:
        $r29 = virtualinvoke r0.<com.hp.hpl.jena.tdb.store.DatasetGraphTDB: com.hp.hpl.jena.tdb.store.QuadTable getQuadTable()>();

        $r30 = virtualinvoke $r29.<com.hp.hpl.jena.tdb.store.QuadTable: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable getNodeTupleTable()>();

        if $z0 == 0 goto label5;

        $r31 = staticinvoke <com.hp.hpl.jena.tdb.solver.SolverLib: java.util.Iterator unionGraph(com.hp.hpl.jena.tdb.nodetable.NodeTupleTable)>($r30);

        goto label6;

     label5:
        $r6 = newarray (com.hp.hpl.jena.tdb.store.NodeId)[4];

        $r6[0] = r28;

        $r6[1] = null;

        $r6[2] = null;

        $r6[3] = null;

        $r31 = interfaceinvoke $r30.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: java.util.Iterator find(com.hp.hpl.jena.tdb.store.NodeId[])>($r6);

     label6:
        r7 = $r31;

     label7:
        $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label8;

        $r9 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.jena.atlas.lib.Tuple) $r9;

        $r11 = virtualinvoke r10.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(0);

        $r12 = virtualinvoke r10.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(1);

        $r13 = virtualinvoke r10.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(2);

        $r14 = virtualinvoke r10.<org.apache.jena.atlas.lib.Tuple: java.lang.Object get(int)>(3);

        virtualinvoke $r4.<com.hp.hpl.jena.tdb.solver.stats.StatsCollectorNodeId: void record(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r11, $r12, $r13, $r14);

        goto label7;

     label8:
        $r8 = virtualinvoke $r4.<com.hp.hpl.jena.tdb.solver.stats.StatsCollectorNodeId: com.hp.hpl.jena.tdb.solver.stats.StatsResults results()>();

        return $r8;
    }

    protected void exec()
    {
        java.io.PrintStream $r4;
        tdb.tdbstats r0;
        com.hp.hpl.jena.tdb.store.DatasetGraphTDB $r1;
        com.hp.hpl.jena.graph.Node $r2;
        com.hp.hpl.jena.tdb.solver.stats.StatsResults $r3;

        r0 := @this: tdb.tdbstats;

        $r1 = virtualinvoke r0.<tdb.tdbstats: com.hp.hpl.jena.tdb.store.DatasetGraphTDB getDatasetGraphTDB()>();

        $r2 = virtualinvoke r0.<tdb.tdbstats: com.hp.hpl.jena.graph.Node getGraphName()>();

        $r3 = staticinvoke <tdb.tdbstats: com.hp.hpl.jena.tdb.solver.stats.StatsResults stats(com.hp.hpl.jena.tdb.store.DatasetGraphTDB,com.hp.hpl.jena.graph.Node)>($r1, $r2);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        staticinvoke <com.hp.hpl.jena.tdb.solver.stats.Stats: void write(java.io.OutputStream,com.hp.hpl.jena.tdb.solver.stats.StatsResults)>($r4, $r3);

        return;
    }
}
