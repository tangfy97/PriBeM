public class org.eclipse.jetty.websocket.DeflateFrameExtension extends org.eclipse.jetty.websocket.AbstractExtension
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    private int _minLength;
    private java.util.zip.Deflater _deflater;
    private java.util.zip.Inflater _inflater;

    public void <init>()
    {
        org.eclipse.jetty.websocket.DeflateFrameExtension r0;

        r0 := @this: org.eclipse.jetty.websocket.DeflateFrameExtension;

        specialinvoke r0.<org.eclipse.jetty.websocket.AbstractExtension: void <init>(java.lang.String)>("x-deflate-frame");

        r0.<org.eclipse.jetty.websocket.DeflateFrameExtension: int _minLength> = 8;

        return;
    }

    public boolean init(java.util.Map)
    {
        java.util.zip.Inflater $r3;
        java.util.zip.Deflater $r2;
        java.util.Map r0;
        org.eclipse.jetty.websocket.DeflateFrameExtension r1;
        int $i0, $i1, $i2;
        java.lang.String $r4;
        boolean $z0, $z1;

        r1 := @this: org.eclipse.jetty.websocket.DeflateFrameExtension;

        r0 := @parameter0: java.util.Map;

        $z0 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>("minLength");

        if $z0 != 0 goto label1;

        $i2 = r1.<org.eclipse.jetty.websocket.DeflateFrameExtension: int _minLength>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("minLength", $r4);

     label1:
        $z1 = specialinvoke r1.<org.eclipse.jetty.websocket.AbstractExtension: boolean init(java.util.Map)>(r0);

        if $z1 == 0 goto label2;

        $i0 = r1.<org.eclipse.jetty.websocket.DeflateFrameExtension: int _minLength>;

        $i1 = virtualinvoke r1.<org.eclipse.jetty.websocket.DeflateFrameExtension: int getInitParameter(java.lang.String,int)>("minLength", $i0);

        r1.<org.eclipse.jetty.websocket.DeflateFrameExtension: int _minLength> = $i1;

        $r2 = new java.util.zip.Deflater;

        specialinvoke $r2.<java.util.zip.Deflater: void <init>()>();

        r1.<org.eclipse.jetty.websocket.DeflateFrameExtension: java.util.zip.Deflater _deflater> = $r2;

        $r3 = new java.util.zip.Inflater;

        specialinvoke $r3.<java.util.zip.Inflater: void <init>()>();

        r1.<org.eclipse.jetty.websocket.DeflateFrameExtension: java.util.zip.Inflater _inflater> = $r3;

        return 1;

     label2:
        return 0;
    }

    public void onFrame(byte, byte, org.eclipse.jetty.io.Buffer)
    {
        byte[] $r2, $r4, $r7;
        java.util.zip.Inflater $r3, $r6, $r14;
        byte b0, b1, $b2, $b5, $b12, $b16;
        org.eclipse.jetty.websocket.DeflateFrameExtension r0;
        org.eclipse.jetty.io.Buffer r13;
        boolean $z0, $z1;
        org.eclipse.jetty.io.ByteArrayBuffer $r15;
        short $s13, $s14, $s20, $s26;
        int $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, i15, i17, $i18, $i19, $i21, $i22, $i23, $i25, $i27;
        java.util.zip.DataFormatException $r9, $r16;
        java.lang.String $r12;
        org.eclipse.jetty.websocket.WebSocket$FrameConnection $r1, $r11;
        org.eclipse.jetty.util.log.Logger $r10;

        r0 := @this: org.eclipse.jetty.websocket.DeflateFrameExtension;

        b1 := @parameter0: byte;

        b0 := @parameter1: byte;

        r13 := @parameter2: org.eclipse.jetty.io.Buffer;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.websocket.DeflateFrameExtension: org.eclipse.jetty.websocket.WebSocket$FrameConnection getConnection()>();

        $z0 = interfaceinvoke $r1.<org.eclipse.jetty.websocket.WebSocket$FrameConnection: boolean isControl(byte)>(b0);

        if $z0 != 0 goto label01;

        $z1 = virtualinvoke r0.<org.eclipse.jetty.websocket.DeflateFrameExtension: boolean isFlag(byte,int)>(b1, 1);

        if $z1 != 0 goto label02;

     label01:
        specialinvoke r0.<org.eclipse.jetty.websocket.AbstractExtension: void onFrame(byte,byte,org.eclipse.jetty.io.Buffer)>(b1, b0, r13);

        return;

     label02:
        $r2 = interfaceinvoke r13.<org.eclipse.jetty.io.Buffer: byte[] array()>();

        if $r2 != null goto label03;

        r13 = interfaceinvoke r13.<org.eclipse.jetty.io.Buffer: org.eclipse.jetty.io.Buffer asMutableBuffer()>();

     label03:
        $b2 = interfaceinvoke r13.<org.eclipse.jetty.io.Buffer: byte get()>();

        $s20 = (short) $b2;

        $s14 = 255 & $s20;

        $i21 = (int) $s14;

        i15 = $i21;

        $i22 = (int) $s14;

        if $i22 < 126 goto label07;

        $i23 = (int) $s14;

        if $i23 != 127 goto label04;

        $b16 = 8;

        goto label05;

     label04:
        $b16 = 2;

     label05:
        i17 = $b16;

        i15 = 0;

     label06:
        $i18 = i17;

        $i25 = (int) -1;

        i17 = i17 + $i25;

        if $i18 <= 0 goto label07;

        $i11 = 256 * i15;

        $b12 = interfaceinvoke r13.<org.eclipse.jetty.io.Buffer: byte get()>();

        $s26 = (short) $b12;

        $s13 = 255 & $s26;

        $i27 = (int) $s13;

        i15 = $i11 + $i27;

        goto label06;

     label07:
        $r3 = r0.<org.eclipse.jetty.websocket.DeflateFrameExtension: java.util.zip.Inflater _inflater>;

        $r4 = interfaceinvoke r13.<org.eclipse.jetty.io.Buffer: byte[] array()>();

        $i3 = interfaceinvoke r13.<org.eclipse.jetty.io.Buffer: int getIndex()>();

        $i4 = interfaceinvoke r13.<org.eclipse.jetty.io.Buffer: int length()>();

        virtualinvoke $r3.<java.util.zip.Inflater: void setInput(byte[],int,int)>($r4, $i3, $i4);

        $r15 = new org.eclipse.jetty.io.ByteArrayBuffer;

        specialinvoke $r15.<org.eclipse.jetty.io.ByteArrayBuffer: void <init>(int)>(i15);

     label08:
        $r14 = r0.<org.eclipse.jetty.websocket.DeflateFrameExtension: java.util.zip.Inflater _inflater>;

        $i19 = virtualinvoke $r14.<java.util.zip.Inflater: int getRemaining()>();

        if $i19 <= 0 goto label10;

        $r6 = r0.<org.eclipse.jetty.websocket.DeflateFrameExtension: java.util.zip.Inflater _inflater>;

        $r7 = virtualinvoke $r15.<org.eclipse.jetty.io.ByteArrayBuffer: byte[] array()>();

        $i6 = virtualinvoke $r15.<org.eclipse.jetty.io.ByteArrayBuffer: int putIndex()>();

        $i7 = virtualinvoke $r15.<org.eclipse.jetty.io.ByteArrayBuffer: int space()>();

        $i8 = virtualinvoke $r6.<java.util.zip.Inflater: int inflate(byte[],int,int)>($r7, $i6, $i7);

        if $i8 != 0 goto label09;

        $r16 = new java.util.zip.DataFormatException;

        specialinvoke $r16.<java.util.zip.DataFormatException: void <init>(java.lang.String)>("insufficient data");

        throw $r16;

     label09:
        $i9 = virtualinvoke $r15.<org.eclipse.jetty.io.ByteArrayBuffer: int putIndex()>();

        $i10 = $i9 + $i8;

        virtualinvoke $r15.<org.eclipse.jetty.io.ByteArrayBuffer: void setPutIndex(int)>($i10);

        goto label08;

     label10:
        $b5 = virtualinvoke r0.<org.eclipse.jetty.websocket.DeflateFrameExtension: byte clearFlag(byte,int)>(b1, 1);

        specialinvoke r0.<org.eclipse.jetty.websocket.AbstractExtension: void onFrame(byte,byte,org.eclipse.jetty.io.Buffer)>($b5, b0, $r15);

     label11:
        goto label13;

     label12:
        $r9 := @caughtexception;

        $r10 = <org.eclipse.jetty.websocket.DeflateFrameExtension: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r10.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r9);

        $r11 = virtualinvoke r0.<org.eclipse.jetty.websocket.DeflateFrameExtension: org.eclipse.jetty.websocket.WebSocket$FrameConnection getConnection()>();

        $r12 = virtualinvoke $r9.<java.util.zip.DataFormatException: java.lang.String toString()>();

        interfaceinvoke $r11.<org.eclipse.jetty.websocket.WebSocket$FrameConnection: void close(int,java.lang.String)>(1007, $r12);

     label13:
        return;

        catch java.util.zip.DataFormatException from label08 to label11 with label12;
    }

    public void addFrame(byte, byte, byte[], int, int) throws java.io.IOException
    {
        byte[] r2, r6;
        byte b0, b1, $b2, $b7, $b8, $b9, $b12, $b14, $b17, $b20, $b23, $b25, b26, b29, b30, b31;
        org.eclipse.jetty.websocket.DeflateFrameExtension r0;
        boolean $z0, $z1;
        java.util.zip.Deflater $r3, $r4, $r5, $r7, $r8;
        int i3, i4, $i5, $i6, $i10, $i11, $i13, $i15, $i16, $i18, $i19, $i21, $i22, $i24, $i27, $i28, $i33;
        org.eclipse.jetty.websocket.WebSocket$FrameConnection $r1;

        r0 := @this: org.eclipse.jetty.websocket.DeflateFrameExtension;

        b1 := @parameter0: byte;

        b0 := @parameter1: byte;

        r2 := @parameter2: byte[];

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.websocket.DeflateFrameExtension: org.eclipse.jetty.websocket.WebSocket$FrameConnection getConnection()>();

        $z0 = interfaceinvoke $r1.<org.eclipse.jetty.websocket.WebSocket$FrameConnection: boolean isControl(byte)>(b0);

        if $z0 != 0 goto label1;

        $i5 = r0.<org.eclipse.jetty.websocket.DeflateFrameExtension: int _minLength>;

        if i4 >= $i5 goto label2;

     label1:
        $b2 = virtualinvoke r0.<org.eclipse.jetty.websocket.DeflateFrameExtension: byte clearFlag(byte,int)>(b1, 1);

        specialinvoke r0.<org.eclipse.jetty.websocket.AbstractExtension: void addFrame(byte,byte,byte[],int,int)>($b2, b0, r2, i3, i4);

        return;

     label2:
        $r3 = r0.<org.eclipse.jetty.websocket.DeflateFrameExtension: java.util.zip.Deflater _deflater>;

        virtualinvoke $r3.<java.util.zip.Deflater: void reset()>();

        $r4 = r0.<org.eclipse.jetty.websocket.DeflateFrameExtension: java.util.zip.Deflater _deflater>;

        virtualinvoke $r4.<java.util.zip.Deflater: void setInput(byte[],int,int)>(r2, i3, i4);

        $r5 = r0.<org.eclipse.jetty.websocket.DeflateFrameExtension: java.util.zip.Deflater _deflater>;

        virtualinvoke $r5.<java.util.zip.Deflater: void finish()>();

        r6 = newarray (byte)[i4];

        $i33 = (int) 65535;

        if i4 <= $i33 goto label3;

        r6[0] = 127;

        r6[1] = 0;

        r6[2] = 0;

        r6[3] = 0;

        r6[4] = 0;

        $i15 = i4 >> 24;

        $i16 = $i15 & 255;

        $b17 = (byte) $i16;

        r6[5] = $b17;

        $i18 = i4 >> 16;

        $i19 = $i18 & 255;

        $b20 = (byte) $i19;

        r6[6] = $b20;

        $i21 = i4 >> 8;

        $i22 = $i21 & 255;

        $b23 = (byte) $i22;

        r6[7] = $b23;

        b26 = 9;

        b31 = 9;

        b30 = 9;

        b29 = 9;

        $i24 = i4 & 255;

        $b25 = (byte) $i24;

        r6[8] = $b25;

        goto label5;

     label3:
        if i4 < 126 goto label4;

        r6[0] = 126;

        $i11 = i4 >> 8;

        $b12 = (byte) $i11;

        r6[1] = $b12;

        b26 = 3;

        b31 = 3;

        b30 = 3;

        b29 = 3;

        $i13 = i4 & 255;

        $b14 = (byte) $i13;

        r6[2] = $b14;

        goto label5;

     label4:
        b26 = 1;

        b31 = 1;

        b30 = 1;

        b29 = 1;

        $i6 = i4 & 127;

        $b7 = (byte) $i6;

        r6[0] = $b7;

     label5:
        $r7 = r0.<org.eclipse.jetty.websocket.DeflateFrameExtension: java.util.zip.Deflater _deflater>;

        $i27 = i4 - b30;

        $i28 = virtualinvoke $r7.<java.util.zip.Deflater: int deflate(byte[],int,int)>(r6, b29, $i27);

        $r8 = r0.<org.eclipse.jetty.websocket.DeflateFrameExtension: java.util.zip.Deflater _deflater>;

        $z1 = virtualinvoke $r8.<java.util.zip.Deflater: boolean finished()>();

        if $z1 == 0 goto label6;

        $b9 = virtualinvoke r0.<org.eclipse.jetty.websocket.DeflateFrameExtension: byte setFlag(byte,int)>(b1, 1);

        $i10 = $i28 + b31;

        specialinvoke r0.<org.eclipse.jetty.websocket.AbstractExtension: void addFrame(byte,byte,byte[],int,int)>($b9, b0, r6, 0, $i10);

        goto label7;

     label6:
        $b8 = virtualinvoke r0.<org.eclipse.jetty.websocket.DeflateFrameExtension: byte clearFlag(byte,int)>(b1, 1);

        specialinvoke r0.<org.eclipse.jetty.websocket.AbstractExtension: void addFrame(byte,byte,byte[],int,int)>($b8, b0, r2, i3, i4);

     label7:
        return;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/websocket/DeflateFrameExtension;");

        <org.eclipse.jetty.websocket.DeflateFrameExtension: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
