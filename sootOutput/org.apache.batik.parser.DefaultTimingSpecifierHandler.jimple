public class org.apache.batik.parser.DefaultTimingSpecifierHandler extends java.lang.Object implements org.apache.batik.parser.TimingSpecifierHandler
{
    public static final org.apache.batik.parser.TimingSpecifierHandler INSTANCE;

    protected void <init>()
    {
        org.apache.batik.parser.DefaultTimingSpecifierHandler r0;

        r0 := @this: org.apache.batik.parser.DefaultTimingSpecifierHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void offset(float)
    {
        org.apache.batik.parser.DefaultTimingSpecifierHandler r0;
        float f0;

        r0 := @this: org.apache.batik.parser.DefaultTimingSpecifierHandler;

        f0 := @parameter0: float;

        return;
    }

    public void syncbase(float, java.lang.String, java.lang.String)
    {
        org.apache.batik.parser.DefaultTimingSpecifierHandler r0;
        float f0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.batik.parser.DefaultTimingSpecifierHandler;

        f0 := @parameter0: float;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return;
    }

    public void eventbase(float, java.lang.String, java.lang.String)
    {
        org.apache.batik.parser.DefaultTimingSpecifierHandler r0;
        float f0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.batik.parser.DefaultTimingSpecifierHandler;

        f0 := @parameter0: float;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        return;
    }

    public void repeat(float, java.lang.String)
    {
        org.apache.batik.parser.DefaultTimingSpecifierHandler r0;
        float f0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.parser.DefaultTimingSpecifierHandler;

        f0 := @parameter0: float;

        r1 := @parameter1: java.lang.String;

        return;
    }

    public void repeat(float, java.lang.String, int)
    {
        int i0;
        org.apache.batik.parser.DefaultTimingSpecifierHandler r0;
        float f0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.parser.DefaultTimingSpecifierHandler;

        f0 := @parameter0: float;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        return;
    }

    public void accesskey(float, char)
    {
        org.apache.batik.parser.DefaultTimingSpecifierHandler r0;
        float f0;
        char c0;

        r0 := @this: org.apache.batik.parser.DefaultTimingSpecifierHandler;

        f0 := @parameter0: float;

        c0 := @parameter1: char;

        return;
    }

    public void accessKeySVG12(float, java.lang.String)
    {
        org.apache.batik.parser.DefaultTimingSpecifierHandler r0;
        float f0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.parser.DefaultTimingSpecifierHandler;

        f0 := @parameter0: float;

        r1 := @parameter1: java.lang.String;

        return;
    }

    public void mediaMarker(java.lang.String, java.lang.String)
    {
        org.apache.batik.parser.DefaultTimingSpecifierHandler r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.batik.parser.DefaultTimingSpecifierHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void wallclock(java.util.Calendar)
    {
        org.apache.batik.parser.DefaultTimingSpecifierHandler r0;
        java.util.Calendar r1;

        r0 := @this: org.apache.batik.parser.DefaultTimingSpecifierHandler;

        r1 := @parameter0: java.util.Calendar;

        return;
    }

    public void indefinite()
    {
        org.apache.batik.parser.DefaultTimingSpecifierHandler r0;

        r0 := @this: org.apache.batik.parser.DefaultTimingSpecifierHandler;

        return;
    }

    static void <clinit>()
    {
        org.apache.batik.parser.DefaultTimingSpecifierHandler $r0;

        $r0 = new org.apache.batik.parser.DefaultTimingSpecifierHandler;

        specialinvoke $r0.<org.apache.batik.parser.DefaultTimingSpecifierHandler: void <init>()>();

        <org.apache.batik.parser.DefaultTimingSpecifierHandler: org.apache.batik.parser.TimingSpecifierHandler INSTANCE> = $r0;

        return;
    }
}
