public class org.apache.poi.xssf.extractor.XSSFExcelExtractor extends org.apache.poi.POIXMLTextExtractor implements org.apache.poi.ss.extractor.ExcelExtractor
{
    public static final org.apache.poi.xssf.usermodel.XSSFRelation[] SUPPORTED_TYPES;
    private java.util.Locale locale;
    private org.apache.poi.xssf.usermodel.XSSFWorkbook workbook;
    private boolean includeSheetNames;
    private boolean formulasNotResults;
    private boolean includeCellComments;
    private boolean includeHeadersFooters;
    private boolean includeTextBoxes;

    public void <init>(java.lang.String) throws org.apache.xmlbeans.XmlException, org.apache.poi.openxml4j.exceptions.OpenXML4JException, java.io.IOException
    {
        org.apache.poi.xssf.usermodel.XSSFWorkbook $r1;
        org.apache.poi.xssf.extractor.XSSFExcelExtractor r0;
        java.lang.String r2;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFExcelExtractor;

        r2 := @parameter0: java.lang.String;

        $r1 = new org.apache.poi.xssf.usermodel.XSSFWorkbook;

        specialinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFWorkbook: void <init>(java.lang.String)>(r2);

        specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: void <init>(org.apache.poi.xssf.usermodel.XSSFWorkbook)>($r1);

        return;
    }

    public void <init>(org.apache.poi.openxml4j.opc.OPCPackage) throws org.apache.xmlbeans.XmlException, org.apache.poi.openxml4j.exceptions.OpenXML4JException, java.io.IOException
    {
        org.apache.poi.xssf.usermodel.XSSFWorkbook $r1;
        org.apache.poi.xssf.extractor.XSSFExcelExtractor r0;
        org.apache.poi.openxml4j.opc.OPCPackage r2;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFExcelExtractor;

        r2 := @parameter0: org.apache.poi.openxml4j.opc.OPCPackage;

        $r1 = new org.apache.poi.xssf.usermodel.XSSFWorkbook;

        specialinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFWorkbook: void <init>(org.apache.poi.openxml4j.opc.OPCPackage)>(r2);

        specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: void <init>(org.apache.poi.xssf.usermodel.XSSFWorkbook)>($r1);

        return;
    }

    public void <init>(org.apache.poi.xssf.usermodel.XSSFWorkbook)
    {
        org.apache.poi.xssf.usermodel.XSSFWorkbook r1;
        org.apache.poi.xssf.extractor.XSSFExcelExtractor r0;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFExcelExtractor;

        r1 := @parameter0: org.apache.poi.xssf.usermodel.XSSFWorkbook;

        specialinvoke r0.<org.apache.poi.POIXMLTextExtractor: void <init>(org.apache.poi.POIXMLDocument)>(r1);

        r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: boolean includeSheetNames> = 1;

        r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: boolean formulasNotResults> = 0;

        r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: boolean includeCellComments> = 0;

        r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: boolean includeHeadersFooters> = 1;

        r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: boolean includeTextBoxes> = 1;

        r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: org.apache.poi.xssf.usermodel.XSSFWorkbook workbook> = r1;

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.io.PrintStream $r3, $r5, $r6;
        org.apache.poi.xssf.extractor.XSSFExcelExtractor $r1;
        java.lang.String[] r0;
        int $i0;
        java.lang.String $r2, $r4;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 >= 1 goto label1;

        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("Use:");

        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("  XSSFExcelExtractor <filename.xlsx>");

        staticinvoke <java.lang.System: void exit(int)>(1);

     label1:
        $r1 = new org.apache.poi.xssf.extractor.XSSFExcelExtractor;

        $r2 = r0[0];

        specialinvoke $r1.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: void <init>(java.lang.String)>($r2);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r4 = virtualinvoke $r1.<org.apache.poi.POIXMLTextExtractor: java.lang.String getText()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

        return;
    }

    public void setIncludeSheetNames(boolean)
    {
        org.apache.poi.xssf.extractor.XSSFExcelExtractor r0;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFExcelExtractor;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: boolean includeSheetNames> = z0;

        return;
    }

    public void setFormulasNotResults(boolean)
    {
        org.apache.poi.xssf.extractor.XSSFExcelExtractor r0;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFExcelExtractor;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: boolean formulasNotResults> = z0;

        return;
    }

    public void setIncludeCellComments(boolean)
    {
        org.apache.poi.xssf.extractor.XSSFExcelExtractor r0;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFExcelExtractor;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: boolean includeCellComments> = z0;

        return;
    }

    public void setIncludeHeadersFooters(boolean)
    {
        org.apache.poi.xssf.extractor.XSSFExcelExtractor r0;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFExcelExtractor;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: boolean includeHeadersFooters> = z0;

        return;
    }

    public void setIncludeTextBoxes(boolean)
    {
        org.apache.poi.xssf.extractor.XSSFExcelExtractor r0;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFExcelExtractor;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: boolean includeTextBoxes> = z0;

        return;
    }

    public void setLocale(java.util.Locale)
    {
        org.apache.poi.xssf.extractor.XSSFExcelExtractor r0;
        java.util.Locale r1;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFExcelExtractor;

        r1 := @parameter0: java.util.Locale;

        r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: java.util.Locale locale> = r1;

        return;
    }

    public java.lang.String getText()
    {
        org.apache.poi.xssf.usermodel.XSSFWorkbook $r6, $r39, $r44;
        org.apache.poi.xssf.usermodel.XSSFDrawing $r15;
        org.apache.poi.xssf.usermodel.XSSFShape r48;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape $r19;
        org.apache.poi.ss.usermodel.Footer $r9, $r11, $r13;
        java.lang.StringBuffer $r4, $r28, $r30, $r31, $r41;
        java.lang.String $r5, $r10, $r12, $r14, $r20, $r26, $r27, $r29, $r32, $r34, $r36, $r38, $r40;
        org.apache.poi.ss.usermodel.Header $r33, $r35, $r37;
        org.apache.poi.xssf.usermodel.XSSFSheet $r7;
        java.util.Locale $r1, $r3;
        org.apache.poi.ss.usermodel.DataFormatter $r2, $r42, r43;
        org.apache.poi.ss.usermodel.Cell r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.apache.poi.xssf.extractor.XSSFExcelExtractor r0;
        org.apache.poi.ss.usermodel.Comment $r47;
        org.apache.poi.ss.usermodel.RichTextString $r25;
        java.util.List $r16;
        int $i0, $i1, $i2, $i3, i4, $i5;
        java.util.Iterator $r8, $r17, $r22;
        org.apache.poi.ss.usermodel.Row r45, r46;
        java.lang.Object $r18, $r21, $r23;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFExcelExtractor;

        $r1 = r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: java.util.Locale locale>;

        if $r1 != null goto label01;

        $r42 = new org.apache.poi.ss.usermodel.DataFormatter;

        specialinvoke $r42.<org.apache.poi.ss.usermodel.DataFormatter: void <init>()>();

        r43 = $r42;

        goto label02;

     label01:
        $r2 = new org.apache.poi.ss.usermodel.DataFormatter;

        $r3 = r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: java.util.Locale locale>;

        specialinvoke $r2.<org.apache.poi.ss.usermodel.DataFormatter: void <init>(java.util.Locale)>($r3);

        r43 = $r2;

     label02:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        i4 = 0;

     label03:
        $r44 = r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: org.apache.poi.xssf.usermodel.XSSFWorkbook workbook>;

        $i5 = virtualinvoke $r44.<org.apache.poi.xssf.usermodel.XSSFWorkbook: int getNumberOfSheets()>();

        if i4 >= $i5 goto label21;

        $r6 = r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: org.apache.poi.xssf.usermodel.XSSFWorkbook workbook>;

        $r7 = virtualinvoke $r6.<org.apache.poi.xssf.usermodel.XSSFWorkbook: org.apache.poi.xssf.usermodel.XSSFSheet getSheetAt(int)>(i4);

        $z0 = r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: boolean includeSheetNames>;

        if $z0 == 0 goto label04;

        $r39 = r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: org.apache.poi.xssf.usermodel.XSSFWorkbook workbook>;

        $r40 = virtualinvoke $r39.<org.apache.poi.xssf.usermodel.XSSFWorkbook: java.lang.String getSheetName(int)>(i4);

        $r41 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

     label04:
        $z1 = r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: boolean includeHeadersFooters>;

        if $z1 == 0 goto label05;

        $r33 = virtualinvoke $r7.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.ss.usermodel.Header getFirstHeader()>();

        $r34 = specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: java.lang.String extractHeaderFooter(org.apache.poi.ss.usermodel.HeaderFooter)>($r33);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        $r35 = virtualinvoke $r7.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.ss.usermodel.Header getOddHeader()>();

        $r36 = specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: java.lang.String extractHeaderFooter(org.apache.poi.ss.usermodel.HeaderFooter)>($r35);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        $r37 = virtualinvoke $r7.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.ss.usermodel.Header getEvenHeader()>();

        $r38 = specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: java.lang.String extractHeaderFooter(org.apache.poi.ss.usermodel.HeaderFooter)>($r37);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r38);

     label05:
        $r8 = virtualinvoke $r7.<org.apache.poi.xssf.usermodel.XSSFSheet: java.util.Iterator iterator()>();

     label06:
        $z8 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label16;

        $r21 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r45 = (org.apache.poi.ss.usermodel.Row) $r21;

        r46 = (org.apache.poi.ss.usermodel.Row) r45;

        $r22 = interfaceinvoke r46.<org.apache.poi.ss.usermodel.Row: java.util.Iterator cellIterator()>();

     label07:
        $z6 = interfaceinvoke $r22.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label15;

        $r23 = interfaceinvoke $r22.<java.util.Iterator: java.lang.Object next()>();

        r24 = (org.apache.poi.ss.usermodel.Cell) $r23;

        $i1 = interfaceinvoke r24.<org.apache.poi.ss.usermodel.Cell: int getCellType()>();

        if $i1 != 2 goto label10;

        $z7 = r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: boolean formulasNotResults>;

        if $z7 == 0 goto label08;

        $r32 = interfaceinvoke r24.<org.apache.poi.ss.usermodel.Cell: java.lang.String getCellFormula()>();

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        goto label12;

     label08:
        $i3 = interfaceinvoke r24.<org.apache.poi.ss.usermodel.Cell: int getCachedFormulaResultType()>();

        if $i3 != 1 goto label09;

        specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: void handleStringCell(java.lang.StringBuffer,org.apache.poi.ss.usermodel.Cell)>($r4, r24);

        goto label12;

     label09:
        specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: void handleNonStringCell(java.lang.StringBuffer,org.apache.poi.ss.usermodel.Cell,org.apache.poi.ss.usermodel.DataFormatter)>($r4, r24, r43);

        goto label12;

     label10:
        $i2 = interfaceinvoke r24.<org.apache.poi.ss.usermodel.Cell: int getCellType()>();

        if $i2 != 1 goto label11;

        specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: void handleStringCell(java.lang.StringBuffer,org.apache.poi.ss.usermodel.Cell)>($r4, r24);

        goto label12;

     label11:
        specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: void handleNonStringCell(java.lang.StringBuffer,org.apache.poi.ss.usermodel.Cell,org.apache.poi.ss.usermodel.DataFormatter)>($r4, r24, r43);

     label12:
        $r47 = interfaceinvoke r24.<org.apache.poi.ss.usermodel.Cell: org.apache.poi.ss.usermodel.Comment getCellComment()>();

        $z9 = r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: boolean includeCellComments>;

        if $z9 == 0 goto label13;

        if $r47 == null goto label13;

        $r25 = interfaceinvoke $r47.<org.apache.poi.ss.usermodel.Comment: org.apache.poi.ss.usermodel.RichTextString getString()>();

        $r26 = interfaceinvoke $r25.<org.apache.poi.ss.usermodel.RichTextString: java.lang.String getString()>();

        $r27 = virtualinvoke $r26.<java.lang.String: java.lang.String replace(char,char)>(10, 32);

        $r28 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" Comment by ");

        $r29 = interfaceinvoke $r47.<org.apache.poi.ss.usermodel.Comment: java.lang.String getAuthor()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

     label13:
        $z10 = interfaceinvoke $r22.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label14;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\t");

     label14:
        goto label07;

     label15:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        goto label06;

     label16:
        $z2 = r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: boolean includeTextBoxes>;

        if $z2 == 0 goto label19;

        $r15 = virtualinvoke $r7.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFDrawing createDrawingPatriarch()>();

        $r16 = virtualinvoke $r15.<org.apache.poi.xssf.usermodel.XSSFDrawing: java.util.List getShapes()>();

        $r17 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

     label17:
        $z4 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label19;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r48 = (org.apache.poi.xssf.usermodel.XSSFShape) $r18;

        $z5 = r48 instanceof org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        if $z5 == 0 goto label18;

        $r19 = (org.apache.poi.xssf.usermodel.XSSFSimpleShape) r48;

        $r20 = virtualinvoke $r19.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.lang.String getText()>();

        $i0 = virtualinvoke $r20.<java.lang.String: int length()>();

        if $i0 <= 0 goto label18;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

     label18:
        goto label17;

     label19:
        $z3 = r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: boolean includeHeadersFooters>;

        if $z3 == 0 goto label20;

        $r9 = virtualinvoke $r7.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.ss.usermodel.Footer getFirstFooter()>();

        $r10 = specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: java.lang.String extractHeaderFooter(org.apache.poi.ss.usermodel.HeaderFooter)>($r9);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r7.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.ss.usermodel.Footer getOddFooter()>();

        $r12 = specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: java.lang.String extractHeaderFooter(org.apache.poi.ss.usermodel.HeaderFooter)>($r11);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r7.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.ss.usermodel.Footer getEvenFooter()>();

        $r14 = specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFExcelExtractor: java.lang.String extractHeaderFooter(org.apache.poi.ss.usermodel.HeaderFooter)>($r13);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

     label20:
        i4 = i4 + 1;

        goto label03;

     label21:
        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    private void handleStringCell(java.lang.StringBuffer, org.apache.poi.ss.usermodel.Cell)
    {
        org.apache.poi.xssf.extractor.XSSFExcelExtractor r4;
        java.lang.StringBuffer r0;
        org.apache.poi.ss.usermodel.Cell r1;
        org.apache.poi.ss.usermodel.RichTextString $r2;
        java.lang.String $r3;

        r4 := @this: org.apache.poi.xssf.extractor.XSSFExcelExtractor;

        r0 := @parameter0: java.lang.StringBuffer;

        r1 := @parameter1: org.apache.poi.ss.usermodel.Cell;

        $r2 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.Cell: org.apache.poi.ss.usermodel.RichTextString getRichStringCellValue()>();

        $r3 = interfaceinvoke $r2.<org.apache.poi.ss.usermodel.RichTextString: java.lang.String getString()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        return;
    }

    private void handleNonStringCell(java.lang.StringBuffer, org.apache.poi.ss.usermodel.Cell, org.apache.poi.ss.usermodel.DataFormatter)
    {
        org.apache.poi.xssf.extractor.XSSFExcelExtractor r9;
        short $s1;
        java.lang.StringBuffer r1;
        org.apache.poi.ss.usermodel.DataFormatter r6;
        org.apache.poi.ss.usermodel.Cell r0;
        int $i0, i2, $i3;
        java.lang.String $r2, $r4, $r7, $r8;
        org.apache.poi.ss.usermodel.CellStyle $r3;
        org.apache.poi.xssf.usermodel.XSSFCell $r5;
        double $d0;

        r9 := @this: org.apache.poi.xssf.extractor.XSSFExcelExtractor;

        r1 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: org.apache.poi.ss.usermodel.Cell;

        r6 := @parameter2: org.apache.poi.ss.usermodel.DataFormatter;

        $i0 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: int getCellType()>();

        i2 = $i0;

        if $i0 != 2 goto label1;

        i2 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: int getCachedFormulaResultType()>();

     label1:
        if i2 != 0 goto label2;

        $r3 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: org.apache.poi.ss.usermodel.CellStyle getCellStyle()>();

        $r4 = interfaceinvoke $r3.<org.apache.poi.ss.usermodel.CellStyle: java.lang.String getDataFormatString()>();

        if $r4 == null goto label2;

        $d0 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: double getNumericCellValue()>();

        $s1 = interfaceinvoke $r3.<org.apache.poi.ss.usermodel.CellStyle: short getDataFormat()>();

        $r7 = interfaceinvoke $r3.<org.apache.poi.ss.usermodel.CellStyle: java.lang.String getDataFormatString()>();

        $i3 = (int) $s1;

        $r8 = virtualinvoke r6.<org.apache.poi.ss.usermodel.DataFormatter: java.lang.String formatRawCellContents(double,int,java.lang.String)>($d0, $i3, $r7);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        return;

     label2:
        $r5 = (org.apache.poi.xssf.usermodel.XSSFCell) r0;

        $r2 = virtualinvoke $r5.<org.apache.poi.xssf.usermodel.XSSFCell: java.lang.String getRawValue()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        return;
    }

    private java.lang.String extractHeaderFooter(org.apache.poi.ss.usermodel.HeaderFooter)
    {
        org.apache.poi.xssf.extractor.XSSFExcelExtractor r2;
        java.lang.String $r1;
        org.apache.poi.ss.usermodel.HeaderFooter r0;

        r2 := @this: org.apache.poi.xssf.extractor.XSSFExcelExtractor;

        r0 := @parameter0: org.apache.poi.ss.usermodel.HeaderFooter;

        $r1 = staticinvoke <org.apache.poi.hssf.extractor.ExcelExtractor: java.lang.String _extractHeaderFooter(org.apache.poi.ss.usermodel.HeaderFooter)>(r0);

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.poi.xssf.usermodel.XSSFRelation[] $r0;
        org.apache.poi.xssf.usermodel.XSSFRelation $r1, $r2, $r3, $r4, $r5;

        $r0 = newarray (org.apache.poi.xssf.usermodel.XSSFRelation)[5];

        $r1 = <org.apache.poi.xssf.usermodel.XSSFRelation: org.apache.poi.xssf.usermodel.XSSFRelation WORKBOOK>;

        $r0[0] = $r1;

        $r2 = <org.apache.poi.xssf.usermodel.XSSFRelation: org.apache.poi.xssf.usermodel.XSSFRelation MACRO_TEMPLATE_WORKBOOK>;

        $r0[1] = $r2;

        $r3 = <org.apache.poi.xssf.usermodel.XSSFRelation: org.apache.poi.xssf.usermodel.XSSFRelation MACRO_ADDIN_WORKBOOK>;

        $r0[2] = $r3;

        $r4 = <org.apache.poi.xssf.usermodel.XSSFRelation: org.apache.poi.xssf.usermodel.XSSFRelation TEMPLATE_WORKBOOK>;

        $r0[3] = $r4;

        $r5 = <org.apache.poi.xssf.usermodel.XSSFRelation: org.apache.poi.xssf.usermodel.XSSFRelation MACROS_WORKBOOK>;

        $r0[4] = $r5;

        <org.apache.poi.xssf.extractor.XSSFExcelExtractor: org.apache.poi.xssf.usermodel.XSSFRelation[] SUPPORTED_TYPES> = $r0;

        return;
    }
}
