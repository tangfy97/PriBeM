public abstract class org.springframework.aop.interceptor.AbstractMonitoringInterceptor extends org.springframework.aop.interceptor.AbstractTraceInterceptor
{
    private java.lang.String prefix;
    private java.lang.String suffix;
    private boolean logTargetClassInvocation;

    public void <init>()
    {
        org.springframework.aop.interceptor.AbstractMonitoringInterceptor r0;

        r0 := @this: org.springframework.aop.interceptor.AbstractMonitoringInterceptor;

        specialinvoke r0.<org.springframework.aop.interceptor.AbstractTraceInterceptor: void <init>()>();

        r0.<org.springframework.aop.interceptor.AbstractMonitoringInterceptor: java.lang.String prefix> = "";

        r0.<org.springframework.aop.interceptor.AbstractMonitoringInterceptor: java.lang.String suffix> = "";

        r0.<org.springframework.aop.interceptor.AbstractMonitoringInterceptor: boolean logTargetClassInvocation> = 0;

        return;
    }

    public void setPrefix(java.lang.String)
    {
        org.springframework.aop.interceptor.AbstractMonitoringInterceptor r0;
        java.lang.String r1, $r2;

        r0 := @this: org.springframework.aop.interceptor.AbstractMonitoringInterceptor;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $r2 = r1;

        goto label2;

     label1:
        $r2 = "";

     label2:
        r0.<org.springframework.aop.interceptor.AbstractMonitoringInterceptor: java.lang.String prefix> = $r2;

        return;
    }

    protected java.lang.String getPrefix()
    {
        org.springframework.aop.interceptor.AbstractMonitoringInterceptor r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.aop.interceptor.AbstractMonitoringInterceptor;

        $r1 = r0.<org.springframework.aop.interceptor.AbstractMonitoringInterceptor: java.lang.String prefix>;

        return $r1;
    }

    public void setSuffix(java.lang.String)
    {
        org.springframework.aop.interceptor.AbstractMonitoringInterceptor r0;
        java.lang.String r1, $r2;

        r0 := @this: org.springframework.aop.interceptor.AbstractMonitoringInterceptor;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $r2 = r1;

        goto label2;

     label1:
        $r2 = "";

     label2:
        r0.<org.springframework.aop.interceptor.AbstractMonitoringInterceptor: java.lang.String suffix> = $r2;

        return;
    }

    protected java.lang.String getSuffix()
    {
        org.springframework.aop.interceptor.AbstractMonitoringInterceptor r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.aop.interceptor.AbstractMonitoringInterceptor;

        $r1 = r0.<org.springframework.aop.interceptor.AbstractMonitoringInterceptor: java.lang.String suffix>;

        return $r1;
    }

    public void setLogTargetClassInvocation(boolean)
    {
        org.springframework.aop.interceptor.AbstractMonitoringInterceptor r0;
        boolean z0;

        r0 := @this: org.springframework.aop.interceptor.AbstractMonitoringInterceptor;

        z0 := @parameter0: boolean;

        r0.<org.springframework.aop.interceptor.AbstractMonitoringInterceptor: boolean logTargetClassInvocation> = z0;

        return;
    }

    protected java.lang.String createInvocationTraceName(org.aopalliance.intercept.MethodInvocation)
    {
        org.springframework.aop.interceptor.AbstractMonitoringInterceptor r1;
        org.aopalliance.intercept.MethodInvocation r3;
        java.lang.String $r2, $r9, $r11, $r12, $r13;
        java.lang.reflect.Method $r4;
        boolean $z0, $z1;
        java.lang.StringBuilder $r0, $r10;
        java.lang.Class $r5, r8;
        java.lang.Object $r6, $r7;

        r1 := @this: org.springframework.aop.interceptor.AbstractMonitoringInterceptor;

        r3 := @parameter0: org.aopalliance.intercept.MethodInvocation;

        $r0 = new java.lang.StringBuilder;

        $r2 = virtualinvoke r1.<org.springframework.aop.interceptor.AbstractMonitoringInterceptor: java.lang.String getPrefix()>();

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r4 = interfaceinvoke r3.<org.aopalliance.intercept.MethodInvocation: java.lang.reflect.Method getMethod()>();

        $r5 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        r8 = $r5;

        $z0 = r1.<org.springframework.aop.interceptor.AbstractMonitoringInterceptor: boolean logTargetClassInvocation>;

        if $z0 == 0 goto label1;

        $r6 = interfaceinvoke r3.<org.aopalliance.intercept.MethodInvocation: java.lang.Object getThis()>();

        $z1 = virtualinvoke $r5.<java.lang.Class: boolean isInstance(java.lang.Object)>($r6);

        if $z1 == 0 goto label1;

        $r7 = interfaceinvoke r3.<org.aopalliance.intercept.MethodInvocation: java.lang.Object getThis()>();

        r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

     label1:
        $r9 = virtualinvoke r8.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r10 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r11 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.String getName()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = virtualinvoke r1.<org.springframework.aop.interceptor.AbstractMonitoringInterceptor: java.lang.String getSuffix()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }
}
