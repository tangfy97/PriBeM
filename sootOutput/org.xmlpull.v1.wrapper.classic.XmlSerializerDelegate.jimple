public class org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate extends java.lang.Object implements org.xmlpull.v1.XmlSerializer
{
    protected org.xmlpull.v1.XmlSerializer xs;

    public void <init>(org.xmlpull.v1.XmlSerializer)
    {
        org.xmlpull.v1.XmlSerializer r1;
        org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate r0;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate: org.xmlpull.v1.XmlSerializer xs> = r1;

        return;
    }

    public java.lang.String getName()
    {
        java.lang.String $r2;
        org.xmlpull.v1.XmlSerializer $r1;
        org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate r0;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate: org.xmlpull.v1.XmlSerializer xs>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: java.lang.String getName()>();

        return $r2;
    }

    public void setPrefix(java.lang.String, java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate r0;
        java.lang.String r1, r2;
        org.xmlpull.v1.XmlSerializer $r3;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate: org.xmlpull.v1.XmlSerializer xs>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void setOutput(java.io.OutputStream, java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        java.io.OutputStream r1;
        org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate r0;
        java.lang.String r2;
        org.xmlpull.v1.XmlSerializer $r3;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate: org.xmlpull.v1.XmlSerializer xs>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r1, r2);

        return;
    }

    public void endDocument() throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        org.xmlpull.v1.XmlSerializer $r1;
        org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate r0;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate: org.xmlpull.v1.XmlSerializer xs>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        return;
    }

    public void comment(java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        java.lang.String r1;
        org.xmlpull.v1.XmlSerializer $r2;
        org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate r0;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate: org.xmlpull.v1.XmlSerializer xs>;

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: void comment(java.lang.String)>(r1);

        return;
    }

    public int getDepth()
    {
        int $i0;
        org.xmlpull.v1.XmlSerializer $r1;
        org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate r0;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate: org.xmlpull.v1.XmlSerializer xs>;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: int getDepth()>();

        return $i0;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate r0;
        java.lang.Object r2;
        java.lang.String r1;
        org.xmlpull.v1.XmlSerializer $r3;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate: org.xmlpull.v1.XmlSerializer xs>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public void cdsect(java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        java.lang.String r1;
        org.xmlpull.v1.XmlSerializer $r2;
        org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate r0;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate: org.xmlpull.v1.XmlSerializer xs>;

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: void cdsect(java.lang.String)>(r1);

        return;
    }

    public void setFeature(java.lang.String, boolean) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate r0;
        java.lang.String r1;
        org.xmlpull.v1.XmlSerializer $r2;
        boolean z0;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate: org.xmlpull.v1.XmlSerializer xs>;

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>(r1, z0);

        return;
    }

    public void entityRef(java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        java.lang.String r1;
        org.xmlpull.v1.XmlSerializer $r2;
        org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate r0;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate: org.xmlpull.v1.XmlSerializer xs>;

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: void entityRef(java.lang.String)>(r1);

        return;
    }

    public void processingInstruction(java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        java.lang.String r1;
        org.xmlpull.v1.XmlSerializer $r2;
        org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate r0;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate: org.xmlpull.v1.XmlSerializer xs>;

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: void processingInstruction(java.lang.String)>(r1);

        return;
    }

    public void setOutput(java.io.Writer) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        java.io.Writer r1;
        org.xmlpull.v1.XmlSerializer $r2;
        org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate r0;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;

        r1 := @parameter0: java.io.Writer;

        $r2 = r0.<org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate: org.xmlpull.v1.XmlSerializer xs>;

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.Writer)>(r1);

        return;
    }

    public void docdecl(java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        java.lang.String r1;
        org.xmlpull.v1.XmlSerializer $r2;
        org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate r0;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate: org.xmlpull.v1.XmlSerializer xs>;

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: void docdecl(java.lang.String)>(r1);

        return;
    }

    public void flush() throws java.io.IOException
    {
        org.xmlpull.v1.XmlSerializer $r1;
        org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate r0;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate: org.xmlpull.v1.XmlSerializer xs>;

        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: void flush()>();

        return;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate r0;
        java.lang.Object $r3;
        java.lang.String r1;
        org.xmlpull.v1.XmlSerializer $r2;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate: org.xmlpull.v1.XmlSerializer xs>;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r3;
    }

    public org.xmlpull.v1.XmlSerializer startTag(java.lang.String, java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate r0;
        java.lang.String r1, r2;
        org.xmlpull.v1.XmlSerializer $r3, $r4;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate: org.xmlpull.v1.XmlSerializer xs>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(r1, r2);

        return $r4;
    }

    public void ignorableWhitespace(java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        java.lang.String r1;
        org.xmlpull.v1.XmlSerializer $r2;
        org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate r0;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate: org.xmlpull.v1.XmlSerializer xs>;

        interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: void ignorableWhitespace(java.lang.String)>(r1);

        return;
    }

    public org.xmlpull.v1.XmlSerializer text(java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate r0;
        java.lang.String r1;
        org.xmlpull.v1.XmlSerializer $r2, $r3;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate: org.xmlpull.v1.XmlSerializer xs>;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>(r1);

        return $r3;
    }

    public boolean getFeature(java.lang.String)
    {
        org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate r0;
        java.lang.String r1;
        org.xmlpull.v1.XmlSerializer $r2;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate: org.xmlpull.v1.XmlSerializer xs>;

        $z0 = interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: boolean getFeature(java.lang.String)>(r1);

        return $z0;
    }

    public org.xmlpull.v1.XmlSerializer attribute(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate r0;
        java.lang.String r1, r2, r3;
        org.xmlpull.v1.XmlSerializer $r4, $r5;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate: org.xmlpull.v1.XmlSerializer xs>;

        $r5 = interfaceinvoke $r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        return $r5;
    }

    public void startDocument(java.lang.String, java.lang.Boolean) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate r0;
        java.lang.Boolean r2;
        java.lang.String r1;
        org.xmlpull.v1.XmlSerializer $r3;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Boolean;

        $r3 = r0.<org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate: org.xmlpull.v1.XmlSerializer xs>;

        interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(r1, r2);

        return;
    }

    public java.lang.String getPrefix(java.lang.String, boolean) throws java.lang.IllegalArgumentException
    {
        org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate r0;
        java.lang.String r1, $r3;
        org.xmlpull.v1.XmlSerializer $r2;
        boolean z0;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate: org.xmlpull.v1.XmlSerializer xs>;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: java.lang.String getPrefix(java.lang.String,boolean)>(r1, z0);

        return $r3;
    }

    public java.lang.String getNamespace()
    {
        java.lang.String $r2;
        org.xmlpull.v1.XmlSerializer $r1;
        org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate r0;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;

        $r1 = r0.<org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate: org.xmlpull.v1.XmlSerializer xs>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: java.lang.String getNamespace()>();

        return $r2;
    }

    public org.xmlpull.v1.XmlSerializer endTag(java.lang.String, java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate r0;
        java.lang.String r1, r2;
        org.xmlpull.v1.XmlSerializer $r3, $r4;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate: org.xmlpull.v1.XmlSerializer xs>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(r1, r2);

        return $r4;
    }

    public org.xmlpull.v1.XmlSerializer text(char[], int, int) throws java.io.IOException, java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate r0;
        int i0, i1;
        char[] r1;
        org.xmlpull.v1.XmlSerializer $r2, $r3;

        r0 := @this: org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate: org.xmlpull.v1.XmlSerializer xs>;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(char[],int,int)>(r1, i0, i1);

        return $r3;
    }
}
