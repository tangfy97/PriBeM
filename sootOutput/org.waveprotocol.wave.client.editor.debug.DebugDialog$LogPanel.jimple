class org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel extends java.lang.Object
{
    private final org.waveprotocol.wave.common.logging.InMemoryLogSink log;
    private final com.google.gwt.dom.client.DivElement logContainer;
    private com.google.gwt.dom.client.DivElement lastElement;
    private final org.waveprotocol.wave.common.logging.LogSink domSink;

    void <init>(org.waveprotocol.wave.common.logging.InMemoryLogSink)
    {
        com.google.gwt.dom.client.Style$Unit $r7, $r10;
        org.waveprotocol.wave.common.logging.InMemoryLogSink r4;
        com.google.gwt.dom.client.Style$Overflow $r13;
        com.google.gwt.dom.client.DivElement $r2, $r5, $r8, $r11;
        org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel r0;
        com.google.gwt.dom.client.Style $r6, $r9, $r12;
        org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel$1 $r3;
        com.google.gwt.dom.client.Document $r1;

        r0 := @this: org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel;

        r4 := @parameter0: org.waveprotocol.wave.common.logging.InMemoryLogSink;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.gwt.dom.client.Document: com.google.gwt.dom.client.Document get()>();

        $r2 = virtualinvoke $r1.<com.google.gwt.dom.client.Document: com.google.gwt.dom.client.DivElement createDivElement()>();

        r0.<org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel: com.google.gwt.dom.client.DivElement logContainer> = $r2;

        $r3 = new org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel$1;

        specialinvoke $r3.<org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel$1: void <init>(org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel)>(r0);

        r0.<org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel: org.waveprotocol.wave.common.logging.LogSink domSink> = $r3;

        r0.<org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel: org.waveprotocol.wave.common.logging.InMemoryLogSink log> = r4;

        $r5 = r0.<org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel: com.google.gwt.dom.client.DivElement logContainer>;

        $r6 = virtualinvoke $r5.<com.google.gwt.dom.client.DivElement: com.google.gwt.dom.client.Style getStyle()>();

        $r7 = <com.google.gwt.dom.client.Style$Unit: com.google.gwt.dom.client.Style$Unit PX>;

        virtualinvoke $r6.<com.google.gwt.dom.client.Style: void setWidth(double,com.google.gwt.dom.client.Style$Unit)>(800.0, $r7);

        $r8 = r0.<org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel: com.google.gwt.dom.client.DivElement logContainer>;

        $r9 = virtualinvoke $r8.<com.google.gwt.dom.client.DivElement: com.google.gwt.dom.client.Style getStyle()>();

        $r10 = <com.google.gwt.dom.client.Style$Unit: com.google.gwt.dom.client.Style$Unit PX>;

        virtualinvoke $r9.<com.google.gwt.dom.client.Style: void setHeight(double,com.google.gwt.dom.client.Style$Unit)>(500.0, $r10);

        $r11 = r0.<org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel: com.google.gwt.dom.client.DivElement logContainer>;

        $r12 = virtualinvoke $r11.<com.google.gwt.dom.client.DivElement: com.google.gwt.dom.client.Style getStyle()>();

        $r13 = <com.google.gwt.dom.client.Style$Overflow: com.google.gwt.dom.client.Style$Overflow SCROLL>;

        virtualinvoke $r12.<com.google.gwt.dom.client.Style: void setOverflow(com.google.gwt.dom.client.Style$Overflow)>($r13);

        return;
    }

    public void attachTo(com.google.gwt.dom.client.Element)
    {
        com.google.gwt.dom.client.Element r0;
        com.google.gwt.dom.client.DivElement $r2;
        com.google.gwt.dom.client.Node $r3;
        org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel r1;

        r1 := @this: org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel;

        r0 := @parameter0: com.google.gwt.dom.client.Element;

        $r2 = r1.<org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel: com.google.gwt.dom.client.DivElement logContainer>;

        $r3 = (com.google.gwt.dom.client.Node) $r2;

        virtualinvoke r0.<com.google.gwt.dom.client.Element: com.google.gwt.dom.client.Node appendChild(com.google.gwt.dom.client.Node)>($r3);

        return;
    }

    public void detach()
    {
        com.google.gwt.dom.client.DivElement $r1;
        org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel r0;

        r0 := @this: org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel;

        $r1 = r0.<org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel: com.google.gwt.dom.client.DivElement logContainer>;

        virtualinvoke $r1.<com.google.gwt.dom.client.DivElement: void removeFromParent()>();

        return;
    }

    private void appendLogLine(java.lang.String)
    {
        com.google.gwt.dom.client.Style$Unit $r5;
        com.google.gwt.dom.client.DivElement $r1, $r8;
        org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel r7;
        com.google.gwt.dom.client.Style $r3, $r4, $r6;
        java.lang.String r2;
        com.google.gwt.dom.client.Document $r0;
        com.google.gwt.dom.client.Node $r9;

        r7 := @this: org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel;

        r2 := @parameter0: java.lang.String;

        $r0 = staticinvoke <com.google.gwt.dom.client.Document: com.google.gwt.dom.client.Document get()>();

        $r1 = virtualinvoke $r0.<com.google.gwt.dom.client.Document: com.google.gwt.dom.client.DivElement createDivElement()>();

        virtualinvoke $r1.<com.google.gwt.dom.client.DivElement: void setInnerHTML(java.lang.String)>(r2);

        $r3 = virtualinvoke $r1.<com.google.gwt.dom.client.DivElement: com.google.gwt.dom.client.Style getStyle()>();

        virtualinvoke $r3.<com.google.gwt.dom.client.Style: void setProperty(java.lang.String,java.lang.String)>("borderBottomStyle", "dotted");

        $r4 = virtualinvoke $r1.<com.google.gwt.dom.client.DivElement: com.google.gwt.dom.client.Style getStyle()>();

        $r5 = <com.google.gwt.dom.client.Style$Unit: com.google.gwt.dom.client.Style$Unit PX>;

        virtualinvoke $r4.<com.google.gwt.dom.client.Style: void setBorderWidth(double,com.google.gwt.dom.client.Style$Unit)>(1.0, $r5);

        $r6 = virtualinvoke $r1.<com.google.gwt.dom.client.DivElement: com.google.gwt.dom.client.Style getStyle()>();

        virtualinvoke $r6.<com.google.gwt.dom.client.Style: void setBorderColor(java.lang.String)>("#c0c0c0");

        $r8 = r7.<org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel: com.google.gwt.dom.client.DivElement logContainer>;

        $r9 = (com.google.gwt.dom.client.Node) $r1;

        virtualinvoke $r8.<com.google.gwt.dom.client.DivElement: com.google.gwt.dom.client.Node appendChild(com.google.gwt.dom.client.Node)>($r9);

        r7.<org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel: com.google.gwt.dom.client.DivElement lastElement> = $r1;

        return;
    }

    public void fillContent()
    {
        java.util.Iterator $r4;
        org.waveprotocol.wave.common.logging.InMemoryLogSink $r2;
        com.google.gwt.dom.client.DivElement $r1, $r5, $r6;
        org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel r0;
        java.util.List $r3;
        java.lang.Object $r7;
        java.lang.String r8;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel;

        $r1 = r0.<org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel: com.google.gwt.dom.client.DivElement logContainer>;

        virtualinvoke $r1.<com.google.gwt.dom.client.DivElement: void setInnerHTML(java.lang.String)>(null);

        $r2 = r0.<org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel: org.waveprotocol.wave.common.logging.InMemoryLogSink log>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.common.logging.InMemoryLogSink: java.util.List showAll()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r7;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel: void appendLogLine(java.lang.String)>(r8);

        goto label1;

     label2:
        $r5 = r0.<org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel: com.google.gwt.dom.client.DivElement lastElement>;

        if $r5 == null goto label3;

        $r6 = r0.<org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel: com.google.gwt.dom.client.DivElement lastElement>;

        virtualinvoke $r6.<com.google.gwt.dom.client.DivElement: void scrollIntoView()>();

     label3:
        return;
    }

    public void showUpdates(boolean)
    {
        org.waveprotocol.wave.common.logging.LogSink $r1, $r3;
        org.waveprotocol.wave.common.logging.InMemoryLogSink $r2, $r4;
        boolean z0;
        org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel r0;

        r0 := @this: org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel: void fillContent()>();

        $r4 = r0.<org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel: org.waveprotocol.wave.common.logging.InMemoryLogSink log>;

        $r3 = r0.<org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel: org.waveprotocol.wave.common.logging.LogSink domSink>;

        virtualinvoke $r4.<org.waveprotocol.wave.common.logging.InMemoryLogSink: void addLogSink_DO_NOT_USE(org.waveprotocol.wave.common.logging.LogSink)>($r3);

        goto label2;

     label1:
        $r2 = r0.<org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel: org.waveprotocol.wave.common.logging.InMemoryLogSink log>;

        $r1 = r0.<org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel: org.waveprotocol.wave.common.logging.LogSink domSink>;

        virtualinvoke $r2.<org.waveprotocol.wave.common.logging.InMemoryLogSink: void removeLogSink(org.waveprotocol.wave.common.logging.LogSink)>($r1);

     label2:
        return;
    }

    static void access$100(org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel, java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel r0;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel: void appendLogLine(java.lang.String)>(r1);

        return;
    }

    static com.google.gwt.dom.client.DivElement access$200(org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel)
    {
        com.google.gwt.dom.client.DivElement $r1;
        org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel r0;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel;

        $r1 = r0.<org.waveprotocol.wave.client.editor.debug.DebugDialog$LogPanel: com.google.gwt.dom.client.DivElement lastElement>;

        return $r1;
    }
}
