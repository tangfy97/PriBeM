class thredds.util.DodsURLExtractor$CallerBacker extends javax.swing.text.html.HTMLEditorKit$ParserCallback
{
    final thredds.util.DodsURLExtractor this$0;

    private void <init>(thredds.util.DodsURLExtractor)
    {
        thredds.util.DodsURLExtractor r1;
        thredds.util.DodsURLExtractor$CallerBacker r0;

        r0 := @this: thredds.util.DodsURLExtractor$CallerBacker;

        r1 := @parameter0: thredds.util.DodsURLExtractor;

        r0.<thredds.util.DodsURLExtractor$CallerBacker: thredds.util.DodsURLExtractor this$0> = r1;

        specialinvoke r0.<javax.swing.text.html.HTMLEditorKit$ParserCallback: void <init>()>();

        return;
    }

    private boolean wantTag(javax.swing.text.html.HTML$Tag)
    {
        thredds.util.DodsURLExtractor$CallerBacker r7;
        javax.swing.text.html.HTML$Tag r0, $r1, $r2, $r3, $r4, $r5, $r6;
        boolean $z0;

        r7 := @this: thredds.util.DodsURLExtractor$CallerBacker;

        r0 := @parameter0: javax.swing.text.html.HTML$Tag;

        $r1 = <javax.swing.text.html.HTML$Tag: javax.swing.text.html.HTML$Tag H1>;

        if r0 == $r1 goto label1;

        $r2 = <javax.swing.text.html.HTML$Tag: javax.swing.text.html.HTML$Tag H2>;

        if r0 == $r2 goto label1;

        $r3 = <javax.swing.text.html.HTML$Tag: javax.swing.text.html.HTML$Tag H3>;

        if r0 == $r3 goto label1;

        $r4 = <javax.swing.text.html.HTML$Tag: javax.swing.text.html.HTML$Tag H4>;

        if r0 == $r4 goto label1;

        $r5 = <javax.swing.text.html.HTML$Tag: javax.swing.text.html.HTML$Tag H5>;

        if r0 == $r5 goto label1;

        $r6 = <javax.swing.text.html.HTML$Tag: javax.swing.text.html.HTML$Tag H6>;

        if r0 != $r6 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public void handleStartTag(javax.swing.text.html.HTML$Tag, javax.swing.text.MutableAttributeSet, int)
    {
        thredds.util.DodsURLExtractor $r3, $r4;
        javax.swing.text.MutableAttributeSet r6;
        thredds.util.DodsURLExtractor$CallerBacker r0;
        javax.swing.text.html.HTML$Tag r1, $r2, $r5;
        int i0;
        boolean $z0, $z1;

        r0 := @this: thredds.util.DodsURLExtractor$CallerBacker;

        r1 := @parameter0: javax.swing.text.html.HTML$Tag;

        r6 := @parameter1: javax.swing.text.MutableAttributeSet;

        i0 := @parameter2: int;

        $r3 = r0.<thredds.util.DodsURLExtractor$CallerBacker: thredds.util.DodsURLExtractor this$0>;

        $r2 = <javax.swing.text.html.HTML$Tag: javax.swing.text.html.HTML$Tag TITLE>;

        if r1 != $r2 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <thredds.util.DodsURLExtractor: boolean access$202(thredds.util.DodsURLExtractor,boolean)>($r3, $z1);

        $r4 = r0.<thredds.util.DodsURLExtractor$CallerBacker: thredds.util.DodsURLExtractor this$0>;

        $z0 = staticinvoke <thredds.util.DodsURLExtractor: boolean access$300(thredds.util.DodsURLExtractor)>($r4);

        if $z0 == 0 goto label3;

        $r5 = <javax.swing.text.html.HTML$Tag: javax.swing.text.html.HTML$Tag A>;

        if r1 != $r5 goto label3;

        specialinvoke r0.<thredds.util.DodsURLExtractor$CallerBacker: void extractHREF(javax.swing.text.AttributeSet)>(r6);

     label3:
        return;
    }

    public void handleEndTag(javax.swing.text.html.HTML$Tag, int)
    {
        thredds.util.DodsURLExtractor $r1;
        thredds.util.DodsURLExtractor$CallerBacker r0;
        javax.swing.text.html.HTML$Tag r2;
        int i0;

        r0 := @this: thredds.util.DodsURLExtractor$CallerBacker;

        r2 := @parameter0: javax.swing.text.html.HTML$Tag;

        i0 := @parameter1: int;

        $r1 = r0.<thredds.util.DodsURLExtractor$CallerBacker: thredds.util.DodsURLExtractor this$0>;

        staticinvoke <thredds.util.DodsURLExtractor: boolean access$202(thredds.util.DodsURLExtractor,boolean)>($r1, 0);

        return;
    }

    public void handleSimpleTag(javax.swing.text.html.HTML$Tag, javax.swing.text.MutableAttributeSet, int)
    {
        thredds.util.DodsURLExtractor $r1, $r2;
        javax.swing.text.MutableAttributeSet r5;
        thredds.util.DodsURLExtractor$CallerBacker r0;
        javax.swing.text.html.HTML$Tag r3, $r4;
        int i0;
        boolean $z0;

        r0 := @this: thredds.util.DodsURLExtractor$CallerBacker;

        r3 := @parameter0: javax.swing.text.html.HTML$Tag;

        r5 := @parameter1: javax.swing.text.MutableAttributeSet;

        i0 := @parameter2: int;

        $r1 = r0.<thredds.util.DodsURLExtractor$CallerBacker: thredds.util.DodsURLExtractor this$0>;

        staticinvoke <thredds.util.DodsURLExtractor: boolean access$202(thredds.util.DodsURLExtractor,boolean)>($r1, 0);

        $r2 = r0.<thredds.util.DodsURLExtractor$CallerBacker: thredds.util.DodsURLExtractor this$0>;

        $z0 = staticinvoke <thredds.util.DodsURLExtractor: boolean access$300(thredds.util.DodsURLExtractor)>($r2);

        if $z0 == 0 goto label1;

        $r4 = <javax.swing.text.html.HTML$Tag: javax.swing.text.html.HTML$Tag A>;

        if r3 != $r4 goto label1;

        specialinvoke r0.<thredds.util.DodsURLExtractor$CallerBacker: void extractHREF(javax.swing.text.AttributeSet)>(r5);

     label1:
        return;
    }

    private void extractHREF(javax.swing.text.AttributeSet)
    {
        java.util.Enumeration $r1;
        java.net.URL $r8, $r11, $r29, $r35;
        java.net.URISyntaxException $r25;
        java.net.URI $r9, $r10;
        javax.swing.text.AttributeSet r0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r16, $r18, $r19, $r20;
        thredds.util.DodsURLExtractor $r7, $r13, $r15, $r22, $r27, $r33;
        java.util.ArrayList $r14, $r23;
        javax.swing.text.html.HTML$Attribute $r5;
        java.lang.String r4, $r12, $r21, $r24;
        java.io.PrintStream $r17, $r26, $r28, $r30, $r32, $r34, $r36;
        java.net.MalformedURLException $r31;
        thredds.util.DodsURLExtractor$CallerBacker r6;
        java.lang.Object $r2, $r3;

        r6 := @this: thredds.util.DodsURLExtractor$CallerBacker;

        r0 := @parameter0: javax.swing.text.AttributeSet;

        $r1 = interfaceinvoke r0.<javax.swing.text.AttributeSet: java.util.Enumeration getAttributeNames()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label8;

        $r2 = interfaceinvoke $r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r3 = interfaceinvoke r0.<javax.swing.text.AttributeSet: java.lang.Object getAttribute(java.lang.Object)>($r2);

        r4 = (java.lang.String) $r3;

     label2:
        $r5 = <javax.swing.text.html.HTML$Attribute: javax.swing.text.html.HTML$Attribute HREF>;

        if $r2 != $r5 goto label4;

        $r7 = r6.<thredds.util.DodsURLExtractor$CallerBacker: thredds.util.DodsURLExtractor this$0>;

        $r8 = staticinvoke <thredds.util.DodsURLExtractor: java.net.URL access$400(thredds.util.DodsURLExtractor)>($r7);

        $r9 = virtualinvoke $r8.<java.net.URL: java.net.URI toURI()>();

        $r10 = virtualinvoke $r9.<java.net.URI: java.net.URI resolve(java.lang.String)>(r4);

        $r11 = virtualinvoke $r10.<java.net.URI: java.net.URL toURL()>();

        $r12 = virtualinvoke $r11.<java.net.URL: java.lang.String toString()>();

        $r13 = r6.<thredds.util.DodsURLExtractor$CallerBacker: thredds.util.DodsURLExtractor this$0>;

        $r14 = staticinvoke <thredds.util.DodsURLExtractor: java.util.ArrayList access$500(thredds.util.DodsURLExtractor)>($r13);

        if $r14 == null goto label3;

        $r22 = r6.<thredds.util.DodsURLExtractor$CallerBacker: thredds.util.DodsURLExtractor this$0>;

        $r23 = staticinvoke <thredds.util.DodsURLExtractor: java.util.ArrayList access$500(thredds.util.DodsURLExtractor)>($r22);

        $r24 = virtualinvoke $r11.<java.net.URL: java.lang.String toString()>();

        virtualinvoke $r23.<java.util.ArrayList: boolean add(java.lang.Object)>($r24);

     label3:
        $r15 = r6.<thredds.util.DodsURLExtractor$CallerBacker: thredds.util.DodsURLExtractor this$0>;

        $z1 = staticinvoke <thredds.util.DodsURLExtractor: boolean access$600(thredds.util.DodsURLExtractor)>($r15);

        if $z1 == 0 goto label4;

        $r17 = <java.lang.System: java.io.PrintStream out>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" extracted URL= <");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r21);

     label4:
        goto label7;

     label5:
        $r31 := @caughtexception;

        $r32 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.Object)>($r31);

        $r34 = <java.lang.System: java.io.PrintStream err>;

        $r33 = r6.<thredds.util.DodsURLExtractor$CallerBacker: thredds.util.DodsURLExtractor this$0>;

        $r35 = staticinvoke <thredds.util.DodsURLExtractor: java.net.URL access$400(thredds.util.DodsURLExtractor)>($r33);

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.Object)>($r35);

        $r36 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>(r4);

        virtualinvoke $r31.<java.net.MalformedURLException: void printStackTrace()>();

        goto label7;

     label6:
        $r25 := @caughtexception;

        $r26 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.Object)>($r25);

        $r28 = <java.lang.System: java.io.PrintStream err>;

        $r27 = r6.<thredds.util.DodsURLExtractor$CallerBacker: thredds.util.DodsURLExtractor this$0>;

        $r29 = staticinvoke <thredds.util.DodsURLExtractor: java.net.URL access$400(thredds.util.DodsURLExtractor)>($r27);

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.Object)>($r29);

        $r30 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>(r4);

        virtualinvoke $r25.<java.net.URISyntaxException: void printStackTrace()>();

     label7:
        goto label1;

     label8:
        return;

        catch java.net.MalformedURLException from label2 to label4 with label5;
        catch java.net.URISyntaxException from label2 to label4 with label6;
    }

    public void handleText(char[], int)
    {
        thredds.util.DodsURLExtractor $r1, $r2, $r3, $r6, $r9;
        thredds.util.DodsURLExtractor$CallerBacker r0;
        java.lang.StringBuffer $r4, $r7;
        int i0;
        char[] r5;
        java.lang.String $r8;
        boolean $z0, $z1;

        r0 := @this: thredds.util.DodsURLExtractor$CallerBacker;

        r5 := @parameter0: char[];

        i0 := @parameter1: int;

        $r1 = r0.<thredds.util.DodsURLExtractor$CallerBacker: thredds.util.DodsURLExtractor this$0>;

        $z0 = staticinvoke <thredds.util.DodsURLExtractor: boolean access$200(thredds.util.DodsURLExtractor)>($r1);

        if $z0 == 0 goto label1;

        $r9 = r0.<thredds.util.DodsURLExtractor$CallerBacker: thredds.util.DodsURLExtractor this$0>;

        $r8 = new java.lang.String;

        specialinvoke $r8.<java.lang.String: void <init>(char[])>(r5);

        staticinvoke <thredds.util.DodsURLExtractor: java.lang.String access$702(thredds.util.DodsURLExtractor,java.lang.String)>($r9, $r8);

     label1:
        $r2 = r0.<thredds.util.DodsURLExtractor$CallerBacker: thredds.util.DodsURLExtractor this$0>;

        $z1 = staticinvoke <thredds.util.DodsURLExtractor: boolean access$800(thredds.util.DodsURLExtractor)>($r2);

        if $z1 == 0 goto label2;

        $r3 = r0.<thredds.util.DodsURLExtractor$CallerBacker: thredds.util.DodsURLExtractor this$0>;

        $r4 = staticinvoke <thredds.util.DodsURLExtractor: java.lang.StringBuffer access$900(thredds.util.DodsURLExtractor)>($r3);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>(r5);

        $r6 = r0.<thredds.util.DodsURLExtractor$CallerBacker: thredds.util.DodsURLExtractor this$0>;

        $r7 = staticinvoke <thredds.util.DodsURLExtractor: java.lang.StringBuffer access$900(thredds.util.DodsURLExtractor)>($r6);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label2:
        return;
    }

    void <init>(thredds.util.DodsURLExtractor, thredds.util.DodsURLExtractor$1)
    {
        thredds.util.DodsURLExtractor r1;
        thredds.util.DodsURLExtractor$CallerBacker r0;
        thredds.util.DodsURLExtractor$1 r2;

        r0 := @this: thredds.util.DodsURLExtractor$CallerBacker;

        r1 := @parameter0: thredds.util.DodsURLExtractor;

        r2 := @parameter1: thredds.util.DodsURLExtractor$1;

        specialinvoke r0.<thredds.util.DodsURLExtractor$CallerBacker: void <init>(thredds.util.DodsURLExtractor)>(r1);

        return;
    }
}
