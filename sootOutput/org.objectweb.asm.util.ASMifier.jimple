public class org.objectweb.asm.util.ASMifier extends org.objectweb.asm.util.Printer
{
    protected final java.lang.String name;
    protected final int id;
    protected java.util.Map labelNames;
    private static final int ACCESS_CLASS;
    private static final int ACCESS_FIELD;
    private static final int ACCESS_INNER;

    public void <init>()
    {
        org.objectweb.asm.util.ASMifier r0;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        specialinvoke r0.<org.objectweb.asm.util.ASMifier: void <init>(int,java.lang.String,int)>(262144, "cw", 0);

        return;
    }

    protected void <init>(int, java.lang.String, int)
    {
        org.objectweb.asm.util.ASMifier r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        specialinvoke r0.<org.objectweb.asm.util.Printer: void <init>(int)>(i0);

        r0.<org.objectweb.asm.util.ASMifier: java.lang.String name> = r1;

        r0.<org.objectweb.asm.util.ASMifier: int id> = i1;

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        byte b5, b6, b7, b8, b9, b10;
        boolean $z0, $z1, z2, z3, z4, z5;
        java.io.PrintWriter $r22;
        org.objectweb.asm.util.TraceClassVisitor $r23;
        org.objectweb.asm.util.ASMifier $r21;
        org.objectweb.asm.ClassReader r17, $r19, $r20;
        java.lang.String[] r0;
        int $i0, $i1, $i2, $i3, $i4, $i12, $i14;
        java.lang.String $r1, $r6, $r7, $r9, $r12, $r13, $r16;
        java.io.PrintStream $r5, $r10, $r11;
        java.io.FileInputStream $r18;

        r0 := @parameter0: java.lang.String[];

        z2 = 0;

        b10 = 0;

        b9 = 0;

        b8 = 0;

        b7 = 0;

        b6 = 0;

        b5 = 2;

        z3 = 1;

        z5 = 1;

        z4 = 1;

        $i0 = lengthof r0;

        if $i0 < 1 goto label1;

        $i4 = lengthof r0;

        if $i4 <= 2 goto label2;

     label1:
        z3 = 0;

        z5 = 0;

        z4 = 0;

     label2:
        if z4 == 0 goto label3;

        $r13 = "-debug";

        $r12 = r0[0];

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z1 == 0 goto label3;

        z2 = 1;

        b10 = 1;

        b9 = 1;

        b8 = 1;

        b7 = 1;

        b6 = 1;

        b5 = 0;

        $i3 = lengthof r0;

        if $i3 == 2 goto label3;

        z3 = 0;

        z5 = 0;

     label3:
        if z5 != 0 goto label4;

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("Prints the ASM code to generate the given class.");

        $r11 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("Usage: ASMifier [-debug] <fully qualified class name or class file name>");

        return;

     label4:
        $r1 = r0[b8];

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>(".class");

        if $z0 != 0 goto label5;

        $r6 = r0[b9];

        $i1 = virtualinvoke $r6.<java.lang.String: int indexOf(int)>(92);

        $i12 = (int) -1;

        if $i1 > $i12 goto label5;

        $r7 = r0[b7];

        $i2 = virtualinvoke $r7.<java.lang.String: int indexOf(int)>(47);

        $i14 = (int) -1;

        if $i2 <= $i14 goto label6;

     label5:
        $r19 = new org.objectweb.asm.ClassReader;

        $r18 = new java.io.FileInputStream;

        $r16 = r0[b6];

        specialinvoke $r18.<java.io.FileInputStream: void <init>(java.lang.String)>($r16);

        specialinvoke $r19.<org.objectweb.asm.ClassReader: void <init>(java.io.InputStream)>($r18);

        r17 = $r19;

        goto label7;

     label6:
        $r20 = new org.objectweb.asm.ClassReader;

        $r9 = r0[b10];

        specialinvoke $r20.<org.objectweb.asm.ClassReader: void <init>(java.lang.String)>($r9);

        r17 = $r20;

     label7:
        $r23 = new org.objectweb.asm.util.TraceClassVisitor;

        $r21 = new org.objectweb.asm.util.ASMifier;

        specialinvoke $r21.<org.objectweb.asm.util.ASMifier: void <init>()>();

        $r22 = new java.io.PrintWriter;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r22.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r5);

        specialinvoke $r23.<org.objectweb.asm.util.TraceClassVisitor: void <init>(org.objectweb.asm.ClassVisitor,org.objectweb.asm.util.Printer,java.io.PrintWriter)>(null, $r21, $r22);

        virtualinvoke r17.<org.objectweb.asm.ClassReader: void accept(org.objectweb.asm.ClassVisitor,int)>($r23, b5);

        return;
    }

    public void visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        org.objectweb.asm.util.ASMifier r1;
        java.util.List $r3, $r10, $r11, $r12, $r14, $r19, $r20, $r21, $r22, $r23, $r50;
        java.lang.StringBuilder $r4, $r7, $r8, $r15, $r16, $r17, $r53, $r54;
        java.lang.String[] r29;
        java.lang.StringBuffer $r24, $r25, $r26, $r30, $r31, $r32, $r33, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r43, $r44, $r45, $r46, $r47, $r49, $r51;
        int $i0, $i1, i2, i3, $i4, $i5, $i6, i7, $i9;
        java.lang.String r0, $r5, $r6, $r9, $r18, r27, r28, $r34, r42, $r48, $r52;

        r1 := @this: org.objectweb.asm.util.ASMifier;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

        r27 := @parameter3: java.lang.String;

        r28 := @parameter4: java.lang.String;

        r29 := @parameter5: java.lang.String[];

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(47);

        $i9 = (int) -1;

        if $i0 != $i9 goto label01;

        r42 = r0;

        goto label02;

     label01:
        $r3 = r1.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("package asm.");

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r9);

        $i1 = $i0 + 1;

        r42 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

     label02:
        $r10 = r1.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>("import java.util.*;\n");

        $r11 = r1.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>("import org.objectweb.asm.*;\n");

        $r12 = r1.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>("import org.objectweb.asm.attrs.*;\n");

        $r14 = r1.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("public class ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dump implements Opcodes {\n\n");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r18);

        $r19 = r1.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>("public static byte[] dump () throws Exception {\n\n");

        $r20 = r1.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>("ClassWriter cw = new ClassWriter(0);\n");

        $r21 = r1.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>("FieldVisitor fv;\n");

        $r22 = r1.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>("MethodVisitor mv;\n");

        $r23 = r1.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>("AnnotationVisitor av0;\n\n");

        $r24 = r1.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r24.<java.lang.StringBuffer: void setLength(int)>(0);

        $r25 = r1.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("cw.visit(");

        lookupswitch(i2)
        {
            case 46: goto label04;
            case 47: goto label05;
            case 48: goto label06;
            case 49: goto label07;
            case 50: goto label08;
            case 51: goto label09;
            case 196653: goto label03;
            default: goto label10;
        };

     label03:
        $r26 = r1.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("V1_1");

        goto label11;

     label04:
        $r40 = r1.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("V1_2");

        goto label11;

     label05:
        $r39 = r1.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("V1_3");

        goto label11;

     label06:
        $r38 = r1.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("V1_4");

        goto label11;

     label07:
        $r37 = r1.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("V1_5");

        goto label11;

     label08:
        $r36 = r1.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("V1_6");

        goto label11;

     label09:
        $r35 = r1.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("V1_7");

        goto label11;

     label10:
        $r41 = r1.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i2);

     label11:
        $r43 = r1.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $i6 = i3 | 262144;

        virtualinvoke r1.<org.objectweb.asm.util.ASMifier: void appendAccess(int)>($i6);

        $r44 = r1.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r1.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r0);

        $r45 = r1.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r1.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r27);

        $r46 = r1.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r1.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r28);

        $r47 = r1.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        if r29 == null goto label16;

        $i4 = lengthof r29;

        if $i4 <= 0 goto label16;

        $r31 = r1.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("new String[] {");

        i7 = 0;

     label12:
        $i5 = lengthof r29;

        if i7 >= $i5 goto label15;

        $r33 = r1.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        if i7 != 0 goto label13;

        $r48 = " ";

        goto label14;

     label13:
        $r48 = ", ";

     label14:
        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r48);

        $r34 = r29[i7];

        virtualinvoke r1.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>($r34);

        i7 = i7 + 1;

        goto label12;

     label15:
        $r32 = r1.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" }");

        goto label17;

     label16:
        $r30 = r1.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("null");

     label17:
        $r49 = r1.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n\n");

        $r50 = r1.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r51 = r1.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r50.<java.util.List: boolean add(java.lang.Object)>($r52);

        return;
    }

    public void visitSource(java.lang.String, java.lang.String)
    {
        org.objectweb.asm.util.ASMifier r0;
        java.util.List $r8;
        java.lang.StringBuffer $r1, $r2, $r4, $r6, $r7;
        java.lang.String r3, r5, $r9;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r3 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("cw.visitSource(");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r3);

        $r4 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r5);

        $r6 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n\n");

        $r8 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r7 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

        return;
    }

    public void visitOuterClass(java.lang.String, java.lang.String, java.lang.String)
    {
        org.objectweb.asm.util.ASMifier r0;
        java.util.List $r10;
        java.lang.StringBuffer $r1, $r2, $r4, $r6, $r8, $r9;
        java.lang.String r3, r5, r7, $r11;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r3 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("cw.visitOuterClass(");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r3);

        $r4 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r5);

        $r6 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r7);

        $r8 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n\n");

        $r10 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r9 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11);

        return;
    }

    public org.objectweb.asm.util.ASMifier visitClassAnnotation(java.lang.String, boolean)
    {
        org.objectweb.asm.util.ASMifier r0, $r2;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<org.objectweb.asm.util.ASMifier: org.objectweb.asm.util.ASMifier visitAnnotation(java.lang.String,boolean)>(r1, z0);

        return $r2;
    }

    public void visitClassAttribute(org.objectweb.asm.Attribute)
    {
        org.objectweb.asm.Attribute r1;
        org.objectweb.asm.util.ASMifier r0;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r1 := @parameter0: org.objectweb.asm.Attribute;

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void visitAttribute(org.objectweb.asm.Attribute)>(r1);

        return;
    }

    public void visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int)
    {
        org.objectweb.asm.util.ASMifier r0;
        java.util.List $r11;
        java.lang.StringBuffer $r1, $r2, $r4, $r6, $r8, $r9, $r10;
        int i0, $i1;
        java.lang.String r3, r5, r7, $r12;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r3 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("cw.visitInnerClass(");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r3);

        $r4 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r5);

        $r6 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r7);

        $r8 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $i1 = i0 | 1048576;

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendAccess(int)>($i1);

        $r9 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n\n");

        $r11 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r10 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r12);

        return;
    }

    public org.objectweb.asm.util.ASMifier visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)
    {
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r6, $r8, $r10, $r12, $r13;
        int i0, $i1;
        java.lang.String r5, r7, r9, $r15;
        org.objectweb.asm.util.ASMifier r0, $r16;
        java.util.List $r14, $r17, $r18, $r19;
        java.lang.Object r11;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        i0 := @parameter0: int;

        r5 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        r9 := @parameter3: java.lang.String;

        r11 := @parameter4: java.lang.Object;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{\n");

        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("fv = cw.visitField(");

        $i1 = i0 | 524288;

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendAccess(int)>($i1);

        $r4 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r5);

        $r6 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r7);

        $r8 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r9);

        $r10 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r11);

        $r12 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r14 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r13 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r15);

        $r16 = virtualinvoke r0.<org.objectweb.asm.util.ASMifier: org.objectweb.asm.util.ASMifier createASMifier(java.lang.String,int)>("fv", 0);

        $r17 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r18 = virtualinvoke $r16.<org.objectweb.asm.util.ASMifier: java.util.List getText()>();

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r18);

        $r19 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>("}\n");

        return $r16;
    }

    public org.objectweb.asm.util.ASMifier visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        java.lang.String[] r11;
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r6, $r8, $r10, $r12, $r13, $r14, $r15, $r18, $r20;
        int i0, $i1, $i2, i3;
        java.lang.String r5, r7, r9, $r16, $r17, $r21;
        org.objectweb.asm.util.ASMifier r0, $r22;
        java.util.List $r19, $r23, $r24, $r25;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        i0 := @parameter0: int;

        r5 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        r9 := @parameter3: java.lang.String;

        r11 := @parameter4: java.lang.String[];

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{\n");

        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("mv = cw.visitMethod(");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendAccess(int)>(i0);

        $r4 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r5);

        $r6 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r7);

        $r8 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r9);

        $r10 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        if r11 == null goto label5;

        $i1 = lengthof r11;

        if $i1 <= 0 goto label5;

        $r13 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("new String[] {");

        i3 = 0;

     label1:
        $i2 = lengthof r11;

        if i3 >= $i2 goto label4;

        $r15 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        if i3 != 0 goto label2;

        $r17 = " ";

        goto label3;

     label2:
        $r17 = ", ";

     label3:
        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r16 = r11[i3];

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>($r16);

        i3 = i3 + 1;

        goto label1;

     label4:
        $r14 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" }");

        goto label6;

     label5:
        $r12 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("null");

     label6:
        $r18 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r19 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r20 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r21);

        $r22 = virtualinvoke r0.<org.objectweb.asm.util.ASMifier: org.objectweb.asm.util.ASMifier createASMifier(java.lang.String,int)>("mv", 0);

        $r23 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r24 = virtualinvoke $r22.<org.objectweb.asm.util.ASMifier: java.util.List getText()>();

        interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>($r24);

        $r25 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        interfaceinvoke $r25.<java.util.List: boolean add(java.lang.Object)>("}\n");

        return $r22;
    }

    public void visitClassEnd()
    {
        org.objectweb.asm.util.ASMifier r0;
        java.util.List $r1, $r2, $r3, $r4;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>("cw.visitEnd();\n\n");

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("return cw.toByteArray();\n");

        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>("}\n");

        $r4 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>("}\n");

        return;
    }

    public void visit(java.lang.String, java.lang.Object)
    {
        org.objectweb.asm.util.ASMifier r0;
        java.util.List $r12;
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r6, $r7, $r9, $r10, $r11;
        int $i0;
        java.lang.Object r8;
        java.lang.String r5, $r13;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r5 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.Object;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("av");

        $i0 = r0.<org.objectweb.asm.util.ASMifier: int id>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visit(");

        $r6 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        staticinvoke <org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.StringBuffer,java.lang.Object)>($r6, r5);

        $r7 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r9 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        staticinvoke <org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.StringBuffer,java.lang.Object)>($r9, r8);

        $r10 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r12 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r11 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r13);

        return;
    }

    public void visitEnum(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r14;
        int $i0;
        java.lang.String r5, r8, r11, $r16;
        org.objectweb.asm.util.ASMifier r0;
        java.util.List $r15;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r5 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.String;

        r11 := @parameter2: java.lang.String;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("av");

        $i0 = r0.<org.objectweb.asm.util.ASMifier: int id>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitEnum(");

        $r6 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        staticinvoke <org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.StringBuffer,java.lang.Object)>($r6, r5);

        $r7 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r9 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        staticinvoke <org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.StringBuffer,java.lang.Object)>($r9, r8);

        $r10 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r12 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        staticinvoke <org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.StringBuffer,java.lang.Object)>($r12, r11);

        $r13 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r15 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r14 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r16);

        return;
    }

    public org.objectweb.asm.util.ASMifier visitAnnotation(java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r12, $r13, $r14;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String r8, r11, $r16;
        org.objectweb.asm.util.ASMifier r0, $r17;
        java.util.List $r15, $r18, $r19, $r20;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r8 := @parameter0: java.lang.String;

        r11 := @parameter1: java.lang.String;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{\n");

        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("AnnotationVisitor av");

        $i0 = r0.<org.objectweb.asm.util.ASMifier: int id>;

        $i1 = $i0 + 1;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = av");

        $r6 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $i2 = r0.<org.objectweb.asm.util.ASMifier: int id>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitAnnotation(");

        $r9 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        staticinvoke <org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.StringBuffer,java.lang.Object)>($r9, r8);

        $r10 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r12 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        staticinvoke <org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.StringBuffer,java.lang.Object)>($r12, r11);

        $r13 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r15 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r14 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r16);

        $i3 = r0.<org.objectweb.asm.util.ASMifier: int id>;

        $i4 = $i3 + 1;

        $r17 = virtualinvoke r0.<org.objectweb.asm.util.ASMifier: org.objectweb.asm.util.ASMifier createASMifier(java.lang.String,int)>("av", $i4);

        $r18 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r19 = virtualinvoke $r17.<org.objectweb.asm.util.ASMifier: java.util.List getText()>();

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r19);

        $r20 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>("}\n");

        return $r17;
    }

    public org.objectweb.asm.util.ASMifier visitArray(java.lang.String)
    {
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String r8, $r13;
        org.objectweb.asm.util.ASMifier r0, $r14;
        java.util.List $r12, $r15, $r16, $r17;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r8 := @parameter0: java.lang.String;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{\n");

        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("AnnotationVisitor av");

        $i0 = r0.<org.objectweb.asm.util.ASMifier: int id>;

        $i1 = $i0 + 1;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = av");

        $r6 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $i2 = r0.<org.objectweb.asm.util.ASMifier: int id>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitArray(");

        $r9 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        staticinvoke <org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.StringBuffer,java.lang.Object)>($r9, r8);

        $r10 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r12 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r11 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r13);

        $i3 = r0.<org.objectweb.asm.util.ASMifier: int id>;

        $i4 = $i3 + 1;

        $r14 = virtualinvoke r0.<org.objectweb.asm.util.ASMifier: org.objectweb.asm.util.ASMifier createASMifier(java.lang.String,int)>("av", $i4);

        $r15 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r16 = virtualinvoke $r14.<org.objectweb.asm.util.ASMifier: java.util.List getText()>();

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r16);

        $r17 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>("}\n");

        return $r14;
    }

    public void visitAnnotationEnd()
    {
        org.objectweb.asm.util.ASMifier r0;
        java.util.List $r6;
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r5;
        int $i0;
        java.lang.String $r7;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("av");

        $i0 = r0.<org.objectweb.asm.util.ASMifier: int id>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitEnd();\n");

        $r6 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r5 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r7);

        return;
    }

    public org.objectweb.asm.util.ASMifier visitFieldAnnotation(java.lang.String, boolean)
    {
        org.objectweb.asm.util.ASMifier r0, $r2;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<org.objectweb.asm.util.ASMifier: org.objectweb.asm.util.ASMifier visitAnnotation(java.lang.String,boolean)>(r1, z0);

        return $r2;
    }

    public void visitFieldAttribute(org.objectweb.asm.Attribute)
    {
        org.objectweb.asm.Attribute r1;
        org.objectweb.asm.util.ASMifier r0;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r1 := @parameter0: org.objectweb.asm.Attribute;

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void visitAttribute(org.objectweb.asm.Attribute)>(r1);

        return;
    }

    public void visitFieldEnd()
    {
        org.objectweb.asm.util.ASMifier r0;
        java.util.List $r6;
        java.lang.StringBuffer $r1, $r3, $r4, $r5;
        java.lang.String $r2, $r7;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitEnd();\n");

        $r6 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r5 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r7);

        return;
    }

    public org.objectweb.asm.util.ASMifier visitAnnotationDefault()
    {
        org.objectweb.asm.util.ASMifier r0, $r10;
        java.util.List $r8, $r11, $r12, $r13;
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r6, $r7;
        java.lang.String $r5, $r9;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{\n");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("av0 = ");

        $r5 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitAnnotationDefault();\n");

        $r8 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r7 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = virtualinvoke r0.<org.objectweb.asm.util.ASMifier: org.objectweb.asm.util.ASMifier createASMifier(java.lang.String,int)>("av", 0);

        $r11 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r12 = virtualinvoke $r10.<org.objectweb.asm.util.ASMifier: java.util.List getText()>();

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r13 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>("}\n");

        return $r10;
    }

    public org.objectweb.asm.util.ASMifier visitMethodAnnotation(java.lang.String, boolean)
    {
        org.objectweb.asm.util.ASMifier r0, $r2;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<org.objectweb.asm.util.ASMifier: org.objectweb.asm.util.ASMifier visitAnnotation(java.lang.String,boolean)>(r1, z0);

        return $r2;
    }

    public org.objectweb.asm.util.ASMifier visitParameterAnnotation(int, java.lang.String, boolean)
    {
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r10, $r11, $r12, $r13;
        int i0;
        java.lang.String $r5, r9, $r15;
        boolean z0;
        org.objectweb.asm.util.ASMifier r0, $r16;
        java.util.List $r14, $r17, $r18, $r19;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        i0 := @parameter0: int;

        r9 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{\n");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("av0 = ");

        $r5 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitParameterAnnotation(");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r9);

        $r10 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>(z0);

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r14 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r13 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r15);

        $r16 = virtualinvoke r0.<org.objectweb.asm.util.ASMifier: org.objectweb.asm.util.ASMifier createASMifier(java.lang.String,int)>("av", 0);

        $r17 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r18 = virtualinvoke $r16.<org.objectweb.asm.util.ASMifier: java.util.List getText()>();

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r18);

        $r19 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>("}\n");

        return $r16;
    }

    public void visitMethodAttribute(org.objectweb.asm.Attribute)
    {
        org.objectweb.asm.Attribute r1;
        org.objectweb.asm.util.ASMifier r0;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r1 := @parameter0: org.objectweb.asm.Attribute;

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void visitAttribute(org.objectweb.asm.Attribute)>(r1);

        return;
    }

    public void visitCode()
    {
        org.objectweb.asm.util.ASMifier r0;
        java.util.List $r2;
        java.lang.StringBuilder $r1, $r4, $r5;
        java.lang.String $r3, $r6;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".visitCode();\n");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r6);

        return;
    }

    public void visitFrame(int, int, java.lang.Object[], int, java.lang.Object[])
    {
        org.objectweb.asm.util.ASMifier r0;
        java.util.List $r35;
        java.lang.Object[] r2, r15;
        java.lang.StringBuffer $r1, $r4, $r5, $r6, $r8, $r9, $r11, $r12, $r13, $r14, $r17, $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r32, $r33, $r34, $r36;
        int i0, i1, i2, $i4;
        java.lang.String $r3, $r7, $r10, $r16, $r22, $r31, $r37;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r15 := @parameter2: java.lang.Object[];

        i2 := @parameter3: int;

        r2 := @parameter4: java.lang.Object[];

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        tableswitch(i0)
        {
            case -1: goto label1;
            case 0: goto label1;
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label6;
            case 4: goto label7;
            default: goto label8;
        };

     label1:
        specialinvoke r0.<org.objectweb.asm.util.ASMifier: void declareFrameTypes(int,java.lang.Object[])>(i1, r15);

        specialinvoke r0.<org.objectweb.asm.util.ASMifier: void declareFrameTypes(int,java.lang.Object[])>(i2, r2);

        $i4 = (int) -1;

        if i0 != $i4 goto label2;

        $r32 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r31 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitFrame(Opcodes.F_NEW, ");

        goto label3;

     label2:
        $r23 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r22 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitFrame(Opcodes.F_FULL, ");

     label3:
        $r25 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", new Object[] {");

        specialinvoke r0.<org.objectweb.asm.util.ASMifier: void appendFrameTypes(int,java.lang.Object[])>(i1, r15);

        $r27 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}, ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i2);

        virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", new Object[] {");

        specialinvoke r0.<org.objectweb.asm.util.ASMifier: void appendFrameTypes(int,java.lang.Object[])>(i2, r2);

        $r30 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        goto label8;

     label4:
        specialinvoke r0.<org.objectweb.asm.util.ASMifier: void declareFrameTypes(int,java.lang.Object[])>(i1, r15);

        $r17 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r16 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitFrame(Opcodes.F_APPEND,");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", new Object[] {");

        specialinvoke r0.<org.objectweb.asm.util.ASMifier: void appendFrameTypes(int,java.lang.Object[])>(i1, r15);

        $r21 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}, 0, null");

        goto label8;

     label5:
        $r11 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r10 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitFrame(Opcodes.F_CHOP,");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", null, 0, null");

        goto label8;

     label6:
        $r8 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r7 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitFrame(Opcodes.F_SAME, 0, null, 0, null");

        goto label8;

     label7:
        specialinvoke r0.<org.objectweb.asm.util.ASMifier: void declareFrameTypes(int,java.lang.Object[])>(1, r2);

        $r4 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {");

        specialinvoke r0.<org.objectweb.asm.util.ASMifier: void appendFrameTypes(int,java.lang.Object[])>(1, r2);

        $r6 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

     label8:
        $r34 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r35 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r36 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r35.<java.util.List: boolean add(java.lang.Object)>($r37);

        return;
    }

    public void visitInsn(int)
    {
        org.objectweb.asm.util.ASMifier r0;
        java.lang.String[] $r6;
        java.util.List $r10;
        java.lang.StringBuffer $r1, $r3, $r4, $r5, $r8, $r9;
        int i0;
        java.lang.String $r2, $r7, $r11;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        i0 := @parameter0: int;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitInsn(");

        $r6 = <org.objectweb.asm.util.ASMifier: java.lang.String[] OPCODES>;

        $r7 = $r6[i0];

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r10 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r9 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11);

        return;
    }

    public void visitIntInsn(int, int)
    {
        java.lang.String[] $r6, $r14;
        java.lang.StringBuffer $r1, $r3, $r4, $r5, $r8, $r9, $r10, $r11;
        int i0, i1;
        java.lang.String $r2, $r7, $r13, $r15;
        org.objectweb.asm.util.ASMifier r0;
        java.util.List $r12;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitIntInsn(");

        $r6 = <org.objectweb.asm.util.ASMifier: java.lang.String[] OPCODES>;

        $r7 = $r6[i0];

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        if i0 != 188 goto label1;

        $r14 = <org.objectweb.asm.util.ASMifier: java.lang.String[] TYPES>;

        $r15 = $r14[i1];

        goto label2;

     label1:
        $r15 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

     label2:
        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r12 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r11 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r13);

        return;
    }

    public void visitVarInsn(int, int)
    {
        java.lang.String[] $r6;
        java.lang.StringBuffer $r1, $r3, $r4, $r5, $r8, $r9, $r10, $r11;
        int i0, i1;
        java.lang.String $r2, $r7, $r13;
        org.objectweb.asm.util.ASMifier r0;
        java.util.List $r12;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitVarInsn(");

        $r6 = <org.objectweb.asm.util.ASMifier: java.lang.String[] OPCODES>;

        $r7 = $r6[i0];

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r12 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r11 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r13);

        return;
    }

    public void visitTypeInsn(int, java.lang.String)
    {
        org.objectweb.asm.util.ASMifier r0;
        java.lang.String[] $r6;
        java.util.List $r12;
        java.lang.StringBuffer $r1, $r3, $r4, $r5, $r8, $r10, $r11;
        int i0;
        java.lang.String $r2, $r7, r9, $r13;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        i0 := @parameter0: int;

        r9 := @parameter1: java.lang.String;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitTypeInsn(");

        $r6 = <org.objectweb.asm.util.ASMifier: java.lang.String[] OPCODES>;

        $r7 = $r6[i0];

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r9);

        $r10 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r12 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r11 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r13);

        return;
    }

    public void visitFieldInsn(int, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String[] $r6;
        java.lang.StringBuffer $r1, $r3, $r4, $r5, $r8, $r10, $r12, $r14, $r15;
        int i0;
        java.lang.String $r2, $r7, r9, r11, r13, $r17;
        org.objectweb.asm.util.ASMifier r0;
        java.util.List $r16;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        i0 := @parameter0: int;

        r9 := @parameter1: java.lang.String;

        r11 := @parameter2: java.lang.String;

        r13 := @parameter3: java.lang.String;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitFieldInsn(");

        $r6 = <org.objectweb.asm.util.ASMifier: java.lang.String[] OPCODES>;

        $r7 = $r6[i0];

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r9);

        $r10 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r11);

        $r12 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r13);

        $r14 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r16 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r15 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r17);

        return;
    }

    public void visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String[] $r6;
        java.lang.StringBuffer $r1, $r3, $r4, $r5, $r8, $r10, $r12, $r14, $r15;
        int i0;
        java.lang.String $r2, $r7, r9, r11, r13, $r17;
        org.objectweb.asm.util.ASMifier r0;
        java.util.List $r16;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        i0 := @parameter0: int;

        r9 := @parameter1: java.lang.String;

        r11 := @parameter2: java.lang.String;

        r13 := @parameter3: java.lang.String;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitMethodInsn(");

        $r6 = <org.objectweb.asm.util.ASMifier: java.lang.String[] OPCODES>;

        $r7 = $r6[i0];

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r9);

        $r10 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r11);

        $r12 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r13);

        $r14 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r16 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r15 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r17);

        return;
    }

    public transient void visitInvokeDynamicInsn(java.lang.String, java.lang.String, org.objectweb.asm.Handle, java.lang.Object[])
    {
        java.lang.Object[] r11;
        java.lang.StringBuffer $r1, $r3, $r4, $r6, $r8, $r10, $r12, $r13, $r17;
        int $i0, $i1, $i2, i3;
        java.lang.String $r2, r5, r7, $r15;
        org.objectweb.asm.util.ASMifier r0;
        org.objectweb.asm.Handle r9;
        java.util.List $r14;
        java.lang.Object $r16;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r5 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        r9 := @parameter2: org.objectweb.asm.Handle;

        r11 := @parameter3: java.lang.Object[];

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitInvokeDynamicInsn(");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r5);

        $r6 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r7);

        $r8 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r9);

        $r10 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", new Object[]{");

        i3 = 0;

     label1:
        $i0 = lengthof r11;

        if i3 >= $i0 goto label3;

        $r16 = r11[i3];

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>($r16);

        $i1 = lengthof r11;

        $i2 = $i1 - 1;

        if i3 == $i2 goto label2;

        $r17 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r12 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("});\n");

        $r14 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r13 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r15);

        return;
    }

    public void visitJumpInsn(int, org.objectweb.asm.Label)
    {
        org.objectweb.asm.util.ASMifier r0;
        org.objectweb.asm.Label r2;
        java.lang.String[] $r7;
        java.util.List $r12;
        java.lang.StringBuffer $r1, $r4, $r5, $r6, $r9, $r10, $r11;
        int i0;
        java.lang.String $r3, $r8, $r13;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        i0 := @parameter0: int;

        r2 := @parameter1: org.objectweb.asm.Label;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void declareLabel(org.objectweb.asm.Label)>(r2);

        $r4 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitJumpInsn(");

        $r7 = <org.objectweb.asm.util.ASMifier: java.lang.String[] OPCODES>;

        $r8 = $r7[i0];

        $r9 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendLabel(org.objectweb.asm.Label)>(r2);

        $r10 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r12 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r11 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r13);

        return;
    }

    public void visitLabel(org.objectweb.asm.Label)
    {
        org.objectweb.asm.util.ASMifier r0;
        org.objectweb.asm.Label r2;
        java.util.List $r8;
        java.lang.StringBuffer $r1, $r4, $r5, $r6, $r7;
        java.lang.String $r3, $r9;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r2 := @parameter0: org.objectweb.asm.Label;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void declareLabel(org.objectweb.asm.Label)>(r2);

        $r4 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitLabel(");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendLabel(org.objectweb.asm.Label)>(r2);

        $r6 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r8 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r7 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

        return;
    }

    public void visitLdcInsn(java.lang.Object)
    {
        org.objectweb.asm.util.ASMifier r0;
        java.util.List $r8;
        java.lang.StringBuffer $r1, $r3, $r4, $r6, $r7;
        java.lang.Object r5;
        java.lang.String $r2, $r9;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r5 := @parameter0: java.lang.Object;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitLdcInsn(");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r5);

        $r6 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r8 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r7 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

        return;
    }

    public void visitIincInsn(int, int)
    {
        org.objectweb.asm.util.ASMifier r0;
        java.util.List $r10;
        java.lang.StringBuffer $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        int i0, i1;
        java.lang.String $r2, $r11;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitIincInsn(");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r10 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r9 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11);

        return;
    }

    public transient void visitTableSwitchInsn(int, int, org.objectweb.asm.Label, org.objectweb.asm.Label[])
    {
        org.objectweb.asm.Label r3, $r17, $r18;
        java.lang.StringBuffer $r1, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r16;
        int $i0, i1, i2, $i3, i4, i5;
        org.objectweb.asm.Label[] r2;
        java.lang.String $r4, $r15, $r19;
        org.objectweb.asm.util.ASMifier r0;
        java.util.List $r14;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        r3 := @parameter2: org.objectweb.asm.Label;

        r2 := @parameter3: org.objectweb.asm.Label[];

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        i4 = 0;

     label1:
        $i0 = lengthof r2;

        if i4 >= $i0 goto label2;

        $r18 = r2[i4];

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void declareLabel(org.objectweb.asm.Label)>($r18);

        i4 = i4 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void declareLabel(org.objectweb.asm.Label)>(r3);

        $r5 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r4 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitTableSwitchInsn(");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i2);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendLabel(org.objectweb.asm.Label)>(r3);

        $r11 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", new Label[] {");

        i5 = 0;

     label3:
        $i3 = lengthof r2;

        if i5 >= $i3 goto label6;

        $r16 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        if i5 != 0 goto label4;

        $r19 = " ";

        goto label5;

     label4:
        $r19 = ", ";

     label5:
        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r17 = r2[i5];

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendLabel(org.objectweb.asm.Label)>($r17);

        i5 = i5 + 1;

        goto label3;

     label6:
        $r12 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" });\n");

        $r14 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r13 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r15);

        return;
    }

    public void visitLookupSwitchInsn(org.objectweb.asm.Label, int[], org.objectweb.asm.Label[])
    {
        org.objectweb.asm.Label r3, $r15, $r18;
        int[] r8;
        java.lang.StringBuffer $r1, $r5, $r6, $r7, $r9, $r10, $r11, $r14, $r16, $r17;
        int $i0, $i1, $i2, $i3, i4, i5, i6;
        org.objectweb.asm.Label[] r2;
        java.lang.String $r4, $r13, $r19, $r20;
        org.objectweb.asm.util.ASMifier r0;
        java.util.List $r12;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r3 := @parameter0: org.objectweb.asm.Label;

        r8 := @parameter1: int[];

        r2 := @parameter2: org.objectweb.asm.Label[];

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        i4 = 0;

     label01:
        $i0 = lengthof r2;

        if i4 >= $i0 goto label02;

        $r18 = r2[i4];

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void declareLabel(org.objectweb.asm.Label)>($r18);

        i4 = i4 + 1;

        goto label01;

     label02:
        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void declareLabel(org.objectweb.asm.Label)>(r3);

        $r5 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r4 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitLookupSwitchInsn(");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendLabel(org.objectweb.asm.Label)>(r3);

        $r7 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", new int[] {");

        i5 = 0;

     label03:
        $i1 = lengthof r8;

        if i5 >= $i1 goto label06;

        $r16 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        if i5 != 0 goto label04;

        $r19 = " ";

        goto label05;

     label04:
        $r19 = ", ";

     label05:
        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $i3 = r8[i5];

        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        i5 = i5 + 1;

        goto label03;

     label06:
        $r9 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" }, new Label[] {");

        i6 = 0;

     label07:
        $i2 = lengthof r2;

        if i6 >= $i2 goto label10;

        $r14 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        if i6 != 0 goto label08;

        $r20 = " ";

        goto label09;

     label08:
        $r20 = ", ";

     label09:
        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $r15 = r2[i6];

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendLabel(org.objectweb.asm.Label)>($r15);

        i6 = i6 + 1;

        goto label07;

     label10:
        $r10 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" });\n");

        $r12 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r11 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r13);

        return;
    }

    public void visitMultiANewArrayInsn(java.lang.String, int)
    {
        org.objectweb.asm.util.ASMifier r0;
        java.util.List $r10;
        java.lang.StringBuffer $r1, $r3, $r4, $r6, $r7, $r8, $r9;
        int i0;
        java.lang.String $r2, r5, $r11;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r5 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitMultiANewArrayInsn(");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r5);

        $r6 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r10 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r9 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11);

        return;
    }

    public void visitTryCatchBlock(org.objectweb.asm.Label, org.objectweb.asm.Label, org.objectweb.asm.Label, java.lang.String)
    {
        org.objectweb.asm.Label r2, r3, r4;
        java.lang.StringBuffer $r1, $r6, $r7, $r8, $r9, $r10, $r12, $r13;
        java.lang.String $r5, r11, $r15;
        org.objectweb.asm.util.ASMifier r0;
        java.util.List $r14;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r2 := @parameter0: org.objectweb.asm.Label;

        r3 := @parameter1: org.objectweb.asm.Label;

        r4 := @parameter2: org.objectweb.asm.Label;

        r11 := @parameter3: java.lang.String;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void declareLabel(org.objectweb.asm.Label)>(r2);

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void declareLabel(org.objectweb.asm.Label)>(r3);

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void declareLabel(org.objectweb.asm.Label)>(r4);

        $r6 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r5 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitTryCatchBlock(");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendLabel(org.objectweb.asm.Label)>(r2);

        $r8 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendLabel(org.objectweb.asm.Label)>(r3);

        $r9 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendLabel(org.objectweb.asm.Label)>(r4);

        $r10 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r11);

        $r12 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r14 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r13 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r15);

        return;
    }

    public void visitLocalVariable(java.lang.String, java.lang.String, java.lang.String, org.objectweb.asm.Label, org.objectweb.asm.Label, int)
    {
        org.objectweb.asm.Label r11, r13;
        java.lang.StringBuffer $r1, $r3, $r4, $r6, $r8, $r10, $r12, $r14, $r15, $r16, $r17;
        int i0;
        java.lang.String $r2, r5, r7, r9, $r19;
        org.objectweb.asm.util.ASMifier r0;
        java.util.List $r18;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r5 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        r9 := @parameter2: java.lang.String;

        r11 := @parameter3: org.objectweb.asm.Label;

        r13 := @parameter4: org.objectweb.asm.Label;

        i0 := @parameter5: int;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitLocalVariable(");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r5);

        $r6 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r7);

        $r8 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r9);

        $r10 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendLabel(org.objectweb.asm.Label)>(r11);

        $r12 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendLabel(org.objectweb.asm.Label)>(r13);

        $r14 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r18 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r17 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r19);

        return;
    }

    public void visitLineNumber(int, org.objectweb.asm.Label)
    {
        org.objectweb.asm.util.ASMifier r0;
        org.objectweb.asm.Label r7;
        java.util.List $r10;
        java.lang.StringBuffer $r1, $r3, $r4, $r5, $r6, $r8, $r9;
        int i0;
        java.lang.String $r2, $r11;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        i0 := @parameter0: int;

        r7 := @parameter1: org.objectweb.asm.Label;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitLineNumber(");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendLabel(org.objectweb.asm.Label)>(r7);

        $r8 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r10 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r9 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11);

        return;
    }

    public void visitMaxs(int, int)
    {
        org.objectweb.asm.util.ASMifier r0;
        java.util.List $r10;
        java.lang.StringBuffer $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        int i0, i1;
        java.lang.String $r2, $r11;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitMaxs(");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i1);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r10 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r9 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11);

        return;
    }

    public void visitMethodEnd()
    {
        org.objectweb.asm.util.ASMifier r0;
        java.util.List $r6;
        java.lang.StringBuffer $r1, $r3, $r4, $r5;
        java.lang.String $r2, $r7;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitEnd();\n");

        $r6 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r5 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r7);

        return;
    }

    public org.objectweb.asm.util.ASMifier visitAnnotation(java.lang.String, boolean)
    {
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r6, $r8, $r9, $r10, $r11;
        java.lang.String $r5, r7, $r13;
        boolean z0;
        org.objectweb.asm.util.ASMifier r0, $r14;
        java.util.List $r12, $r15, $r16, $r17;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r7 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{\n");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("av0 = ");

        $r5 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitAnnotation(");

        virtualinvoke r0.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>(r7);

        $r8 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>(z0);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r12 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r11 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r14 = virtualinvoke r0.<org.objectweb.asm.util.ASMifier: org.objectweb.asm.util.ASMifier createASMifier(java.lang.String,int)>("av", 0);

        $r15 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r16 = virtualinvoke $r14.<org.objectweb.asm.util.ASMifier: java.util.List getText()>();

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r16);

        $r17 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>("}\n");

        return $r14;
    }

    public void visitAttribute(org.objectweb.asm.Attribute)
    {
        java.util.HashMap $r16;
        java.lang.StringBuffer $r1, $r2, $r3, $r6, $r8, $r10, $r13, $r14, $r15, $r18;
        java.util.Map $r7, $r9;
        org.objectweb.asm.Attribute r4;
        java.lang.String $r5, $r12, $r19;
        boolean $z0;
        org.objectweb.asm.util.ASMifier r0;
        java.util.List $r17;
        org.objectweb.asm.util.ASMifiable $r11;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r4 := @parameter0: org.objectweb.asm.Attribute;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("// ATTRIBUTE ");

        $r5 = r4.<org.objectweb.asm.Attribute: java.lang.String type>;

        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $z0 = r4 instanceof org.objectweb.asm.util.ASMifiable;

        if $z0 == 0 goto label2;

        $r7 = r0.<org.objectweb.asm.util.ASMifier: java.util.Map labelNames>;

        if $r7 != null goto label1;

        $r16 = new java.util.HashMap;

        specialinvoke $r16.<java.util.HashMap: void <init>()>();

        r0.<org.objectweb.asm.util.ASMifier: java.util.Map labelNames> = $r16;

     label1:
        $r8 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{\n");

        $r11 = (org.objectweb.asm.util.ASMifiable) r4;

        $r10 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r9 = r0.<org.objectweb.asm.util.ASMifier: java.util.Map labelNames>;

        interfaceinvoke $r11.<org.objectweb.asm.util.ASMifiable: void asmify(java.lang.StringBuffer,java.lang.String,java.util.Map)>($r10, "attr", $r9);

        $r13 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r12 = r0.<org.objectweb.asm.util.ASMifier: java.lang.String name>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitAttribute(attr);\n");

        $r15 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}\n");

     label2:
        $r17 = r0.<org.objectweb.asm.util.ASMifier: java.util.List text>;

        $r18 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r19);

        return;
    }

    protected org.objectweb.asm.util.ASMifier createASMifier(java.lang.String, int)
    {
        org.objectweb.asm.util.ASMifier $r0, r2;
        int i0;
        java.lang.String r1;

        r2 := @this: org.objectweb.asm.util.ASMifier;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = new org.objectweb.asm.util.ASMifier;

        specialinvoke $r0.<org.objectweb.asm.util.ASMifier: void <init>(int,java.lang.String,int)>(262144, r1, i0);

        return $r0;
    }

    void appendAccess(int)
    {
        org.objectweb.asm.util.ASMifier r0;
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, z14, z15, z16;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        i0 := @parameter0: int;

        z0 = 1;

        z16 = 1;

        z15 = 1;

        z14 = 1;

        z13 = 1;

        z12 = 1;

        z11 = 1;

        z10 = 1;

        z9 = 1;

        z8 = 1;

        z7 = 1;

        z6 = 1;

        z5 = 1;

        z4 = 1;

        z3 = 1;

        z2 = 1;

        z1 = 1;

        $i1 = i0 & 1;

        if $i1 == 0 goto label01;

        $r35 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ACC_PUBLIC");

        z0 = 0;

        z16 = 0;

        z15 = 0;

        z14 = 0;

        z13 = 0;

        z12 = 0;

        z11 = 0;

        z10 = 0;

        z9 = 0;

        z8 = 0;

        z7 = 0;

        z6 = 0;

        z5 = 0;

        z4 = 0;

        z3 = 0;

        z2 = 0;

        z1 = 0;

     label01:
        $i2 = i0 & 2;

        if $i2 == 0 goto label02;

        $r34 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ACC_PRIVATE");

        z0 = 0;

        z16 = 0;

        z15 = 0;

        z14 = 0;

        z13 = 0;

        z12 = 0;

        z11 = 0;

        z10 = 0;

        z9 = 0;

        z8 = 0;

        z7 = 0;

        z6 = 0;

        z5 = 0;

        z4 = 0;

        z3 = 0;

        z2 = 0;

        z1 = 0;

     label02:
        $i3 = i0 & 4;

        if $i3 == 0 goto label03;

        $r33 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ACC_PROTECTED");

        z0 = 0;

        z16 = 0;

        z15 = 0;

        z14 = 0;

        z13 = 0;

        z12 = 0;

        z11 = 0;

        z10 = 0;

        z9 = 0;

        z8 = 0;

        z7 = 0;

        z6 = 0;

        z5 = 0;

        z4 = 0;

        z3 = 0;

        z2 = 0;

        z1 = 0;

     label03:
        $i4 = i0 & 16;

        if $i4 == 0 goto label05;

        if z8 != 0 goto label04;

        $r32 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" + ");

     label04:
        $r31 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ACC_FINAL");

        z0 = 0;

        z16 = 0;

        z15 = 0;

        z14 = 0;

        z13 = 0;

        z12 = 0;

        z11 = 0;

        z10 = 0;

        z9 = 0;

        z7 = 0;

        z6 = 0;

        z5 = 0;

        z4 = 0;

        z3 = 0;

        z2 = 0;

        z1 = 0;

     label05:
        $i19 = i0 & 8;

        if $i19 == 0 goto label07;

        if z16 != 0 goto label06;

        $r30 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" + ");

     label06:
        $r29 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ACC_STATIC");

        z0 = 0;

        z15 = 0;

        z14 = 0;

        z13 = 0;

        z12 = 0;

        z11 = 0;

        z10 = 0;

        z9 = 0;

        z7 = 0;

        z6 = 0;

        z5 = 0;

        z4 = 0;

        z3 = 0;

        z2 = 0;

        z1 = 0;

     label07:
        $i20 = i0 & 32;

        if $i20 == 0 goto label11;

        if z4 != 0 goto label08;

        $r28 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" + ");

     label08:
        $i18 = i0 & 262144;

        if $i18 != 0 goto label09;

        $r27 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ACC_SYNCHRONIZED");

        goto label10;

     label09:
        $r26 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ACC_SUPER");

     label10:
        z0 = 0;

        z15 = 0;

        z14 = 0;

        z13 = 0;

        z12 = 0;

        z11 = 0;

        z10 = 0;

        z9 = 0;

        z7 = 0;

        z6 = 0;

        z5 = 0;

        z3 = 0;

        z2 = 0;

        z1 = 0;

     label11:
        $i21 = i0 & 64;

        if $i21 == 0 goto label13;

        $i17 = i0 & 524288;

        if $i17 == 0 goto label13;

        if z12 != 0 goto label12;

        $r25 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" + ");

     label12:
        $r24 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ACC_VOLATILE");

        z0 = 0;

        z15 = 0;

        z14 = 0;

        z13 = 0;

        z11 = 0;

        z10 = 0;

        z9 = 0;

        z7 = 0;

        z6 = 0;

        z5 = 0;

        z3 = 0;

        z2 = 0;

        z1 = 0;

     label13:
        $i22 = i0 & 64;

        if $i22 == 0 goto label15;

        $i15 = i0 & 262144;

        if $i15 != 0 goto label15;

        $i16 = i0 & 524288;

        if $i16 != 0 goto label15;

        if z13 != 0 goto label14;

        $r23 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" + ");

     label14:
        $r22 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ACC_BRIDGE");

        z0 = 0;

        z15 = 0;

        z14 = 0;

        z11 = 0;

        z10 = 0;

        z9 = 0;

        z7 = 0;

        z6 = 0;

        z5 = 0;

        z3 = 0;

        z2 = 0;

        z1 = 0;

     label15:
        $i23 = i0 & 128;

        if $i23 == 0 goto label17;

        $i13 = i0 & 262144;

        if $i13 != 0 goto label17;

        $i14 = i0 & 524288;

        if $i14 != 0 goto label17;

        if z5 != 0 goto label16;

        $r21 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" + ");

     label16:
        $r20 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ACC_VARARGS");

        z0 = 0;

        z15 = 0;

        z14 = 0;

        z11 = 0;

        z10 = 0;

        z9 = 0;

        z7 = 0;

        z6 = 0;

        z3 = 0;

        z2 = 0;

        z1 = 0;

     label17:
        $i24 = i0 & 128;

        if $i24 == 0 goto label19;

        $i12 = i0 & 524288;

        if $i12 == 0 goto label19;

        if z10 != 0 goto label18;

        $r19 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" + ");

     label18:
        $r18 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ACC_TRANSIENT");

        z0 = 0;

        z15 = 0;

        z14 = 0;

        z11 = 0;

        z9 = 0;

        z7 = 0;

        z6 = 0;

        z3 = 0;

        z2 = 0;

        z1 = 0;

     label19:
        $i25 = i0 & 256;

        if $i25 == 0 goto label21;

        $i10 = i0 & 262144;

        if $i10 != 0 goto label21;

        $i11 = i0 & 524288;

        if $i11 != 0 goto label21;

        if z15 != 0 goto label20;

        $r17 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" + ");

     label20:
        $r16 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ACC_NATIVE");

        z0 = 0;

        z14 = 0;

        z11 = 0;

        z9 = 0;

        z7 = 0;

        z6 = 0;

        z3 = 0;

        z2 = 0;

        z1 = 0;

     label21:
        $i26 = i0 & 16384;

        if $i26 == 0 goto label24;

        $i7 = i0 & 262144;

        if $i7 != 0 goto label22;

        $i8 = i0 & 524288;

        if $i8 != 0 goto label22;

        $i9 = i0 & 1048576;

        if $i9 == 0 goto label24;

     label22:
        if z11 != 0 goto label23;

        $r15 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" + ");

     label23:
        $r14 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ACC_ENUM");

        z0 = 0;

        z14 = 0;

        z9 = 0;

        z7 = 0;

        z6 = 0;

        z3 = 0;

        z2 = 0;

        z1 = 0;

     label24:
        $i27 = i0 & 8192;

        if $i27 == 0 goto label27;

        $i5 = i0 & 262144;

        if $i5 != 0 goto label25;

        $i6 = i0 & 1048576;

        if $i6 == 0 goto label27;

     label25:
        if z6 != 0 goto label26;

        $r13 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" + ");

     label26:
        $r12 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ACC_ANNOTATION");

        z0 = 0;

        z14 = 0;

        z9 = 0;

        z7 = 0;

        z3 = 0;

        z2 = 0;

        z1 = 0;

     label27:
        $i28 = i0 & 1024;

        if $i28 == 0 goto label29;

        if z2 != 0 goto label28;

        $r11 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" + ");

     label28:
        $r10 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ACC_ABSTRACT");

        z0 = 0;

        z14 = 0;

        z9 = 0;

        z7 = 0;

        z3 = 0;

        z1 = 0;

     label29:
        $i29 = i0 & 512;

        if $i29 == 0 goto label31;

        if z9 != 0 goto label30;

        $r9 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" + ");

     label30:
        $r8 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ACC_INTERFACE");

        z0 = 0;

        z14 = 0;

        z7 = 0;

        z3 = 0;

        z1 = 0;

     label31:
        $i30 = i0 & 2048;

        if $i30 == 0 goto label33;

        if z14 != 0 goto label32;

        $r7 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" + ");

     label32:
        $r6 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ACC_STRICT");

        z0 = 0;

        z7 = 0;

        z3 = 0;

        z1 = 0;

     label33:
        $i31 = i0 & 4096;

        if $i31 == 0 goto label35;

        if z3 != 0 goto label34;

        $r5 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" + ");

     label34:
        $r4 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ACC_SYNTHETIC");

        z0 = 0;

        z7 = 0;

        z1 = 0;

     label35:
        $i32 = i0 & 131072;

        if $i32 == 0 goto label37;

        if z1 != 0 goto label36;

        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" + ");

     label36:
        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ACC_DEPRECATED");

        z0 = 0;

        z7 = 0;

     label37:
        if z7 == 0 goto label38;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

     label38:
        return;
    }

    protected void appendConstant(java.lang.Object)
    {
        org.objectweb.asm.util.ASMifier r0;
        java.lang.Object r1;
        java.lang.StringBuffer $r2;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        staticinvoke <org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.StringBuffer,java.lang.Object)>($r2, r1);

        return;
    }

    static void appendConstant(java.lang.StringBuffer, java.lang.Object)
    {
        byte[] $r21, r54;
        byte $b12;
        java.lang.Character $r31;
        double[] $r1, r68;
        float[] $r5, r66;
        long $l3;
        short $s9;
        java.lang.StringBuffer r2, $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r14, $r15, $r17, $r18, $r20, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r32, $r33, $r34, $r35, $r37, $r38, $r39, $r42, $r44, $r46, $r48;
        java.lang.String $r41, $r43, $r45, $r47, $r50, $r51, $r53, $r55, $r57, $r59, $r61, $r63, $r65, $r67, $r69;
        boolean[] $r19, r56;
        org.objectweb.asm.Handle r52;
        char[] $r13, r60;
        org.objectweb.asm.Type $r49;
        int[] $r11, r62;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        float $f0;
        short[] $r16, r58;
        java.lang.String[] $r40;
        long[] $r8, r64;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i8, $i10, $i11, $i14, i15, i16, i17, i18, i19, i20, i21, i22, $i23, $i24, $i25, $i26;
        java.lang.Boolean $r36;
        double $d0;
        char $c7, $c13;
        java.lang.Object r0;

        r2 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: java.lang.Object;

        if r0 != null goto label01;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("null");

        goto label54;

     label01:
        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label02;

        $r51 = (java.lang.String) r0;

        staticinvoke <org.objectweb.asm.util.ASMifier: void appendString(java.lang.StringBuffer,java.lang.String)>(r2, $r51);

        goto label54;

     label02:
        $z1 = r0 instanceof org.objectweb.asm.Type;

        if $z1 == 0 goto label03;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Type.getType(\"");

        $r49 = (org.objectweb.asm.Type) r0;

        $r50 = virtualinvoke $r49.<org.objectweb.asm.Type: java.lang.String getDescriptor()>();

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r50);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\")");

        goto label54;

     label03:
        $z2 = r0 instanceof org.objectweb.asm.Handle;

        if $z2 == 0 goto label04;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("new Handle(");

        r52 = (org.objectweb.asm.Handle) r0;

        $r39 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Opcodes.");

        $r40 = <org.objectweb.asm.util.ASMifier: java.lang.String[] HANDLE_TAG>;

        $i14 = virtualinvoke r52.<org.objectweb.asm.Handle: int getTag()>();

        $r41 = $r40[$i14];

        $r42 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r41);

        virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", \"");

        $r43 = virtualinvoke r52.<org.objectweb.asm.Handle: java.lang.String getOwner()>();

        $r44 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r43);

        virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\", \"");

        $r45 = virtualinvoke r52.<org.objectweb.asm.Handle: java.lang.String getName()>();

        $r46 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r45);

        virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\", \"");

        $r47 = virtualinvoke r52.<org.objectweb.asm.Handle: java.lang.String getDesc()>();

        $r48 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r47);

        virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\")");

        goto label54;

     label04:
        $z3 = r0 instanceof java.lang.Byte;

        if $z3 == 0 goto label05;

        $r37 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("new Byte((byte)");

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        goto label54;

     label05:
        $z4 = r0 instanceof java.lang.Boolean;

        if $z4 == 0 goto label08;

        $r36 = (java.lang.Boolean) r0;

        $z20 = virtualinvoke $r36.<java.lang.Boolean: boolean booleanValue()>();

        if $z20 == 0 goto label06;

        $r53 = "Boolean.TRUE";

        goto label07;

     label06:
        $r53 = "Boolean.FALSE";

     label07:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r53);

        goto label54;

     label08:
        $z5 = r0 instanceof java.lang.Short;

        if $z5 == 0 goto label09;

        $r34 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("new Short((short)");

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        goto label54;

     label09:
        $z6 = r0 instanceof java.lang.Character;

        if $z6 == 0 goto label10;

        $r31 = (java.lang.Character) r0;

        $c13 = virtualinvoke $r31.<java.lang.Character: char charValue()>();

        $r32 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("new Character((char)");

        $i23 = (int) $c13;

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i23);

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        goto label54;

     label10:
        $z7 = r0 instanceof java.lang.Integer;

        if $z7 == 0 goto label11;

        $r29 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("new Integer(");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        goto label54;

     label11:
        $z8 = r0 instanceof java.lang.Float;

        if $z8 == 0 goto label12;

        $r27 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("new Float(\"");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\")");

        goto label54;

     label12:
        $z9 = r0 instanceof java.lang.Long;

        if $z9 == 0 goto label13;

        $r25 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("new Long(");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("L)");

        goto label54;

     label13:
        $z10 = r0 instanceof java.lang.Double;

        if $z10 == 0 goto label14;

        $r23 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("new Double(\"");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\")");

        goto label54;

     label14:
        $z11 = r0 instanceof byte[];

        if $z11 == 0 goto label19;

        $r21 = (byte[]) r0;

        r54 = (byte[]) $r21;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("new byte[] {");

        i15 = 0;

     label15:
        $i11 = lengthof r54;

        if i15 >= $i11 goto label18;

        if i15 != 0 goto label16;

        $r55 = "";

        goto label17;

     label16:
        $r55 = ",";

     label17:
        $r22 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r55);

        $b12 = r54[i15];

        $i24 = (int) $b12;

        virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i24);

        i15 = i15 + 1;

        goto label15;

     label18:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        goto label54;

     label19:
        $z12 = r0 instanceof boolean[];

        if $z12 == 0 goto label24;

        $r19 = (boolean[]) r0;

        r56 = (boolean[]) $r19;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("new boolean[] {");

        i16 = 0;

     label20:
        $i10 = lengthof r56;

        if i16 >= $i10 goto label23;

        if i16 != 0 goto label21;

        $r57 = "";

        goto label22;

     label21:
        $r57 = ",";

     label22:
        $r20 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r57);

        $z19 = r56[i16];

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z19);

        i16 = i16 + 1;

        goto label20;

     label23:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        goto label54;

     label24:
        $z13 = r0 instanceof short[];

        if $z13 == 0 goto label29;

        $r16 = (short[]) r0;

        r58 = (short[]) $r16;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("new short[] {");

        i17 = 0;

     label25:
        $i8 = lengthof r58;

        if i17 >= $i8 goto label28;

        if i17 != 0 goto label26;

        $r59 = "";

        goto label27;

     label26:
        $r59 = ",";

     label27:
        $r17 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r59);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(short)");

        $s9 = r58[i17];

        $i25 = (int) $s9;

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i25);

        i17 = i17 + 1;

        goto label25;

     label28:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        goto label54;

     label29:
        $z14 = r0 instanceof char[];

        if $z14 == 0 goto label34;

        $r13 = (char[]) r0;

        r60 = (char[]) $r13;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("new char[] {");

        i18 = 0;

     label30:
        $i6 = lengthof r60;

        if i18 >= $i6 goto label33;

        if i18 != 0 goto label31;

        $r61 = "";

        goto label32;

     label31:
        $r61 = ",";

     label32:
        $r14 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r61);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(char)");

        $c7 = r60[i18];

        $i26 = (int) $c7;

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i26);

        i18 = i18 + 1;

        goto label30;

     label33:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        goto label54;

     label34:
        $z15 = r0 instanceof int[];

        if $z15 == 0 goto label39;

        $r11 = (int[]) r0;

        r62 = (int[]) $r11;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("new int[] {");

        i19 = 0;

     label35:
        $i4 = lengthof r62;

        if i19 >= $i4 goto label38;

        if i19 != 0 goto label36;

        $r63 = "";

        goto label37;

     label36:
        $r63 = ",";

     label37:
        $r12 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r63);

        $i5 = r62[i19];

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i5);

        i19 = i19 + 1;

        goto label35;

     label38:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        goto label54;

     label39:
        $z16 = r0 instanceof long[];

        if $z16 == 0 goto label44;

        $r8 = (long[]) r0;

        r64 = (long[]) $r8;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("new long[] {");

        i20 = 0;

     label40:
        $i2 = lengthof r64;

        if i20 >= $i2 goto label43;

        if i20 != 0 goto label41;

        $r65 = "";

        goto label42;

     label41:
        $r65 = ",";

     label42:
        $r9 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r65);

        $l3 = r64[i20];

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l3);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(76);

        i20 = i20 + 1;

        goto label40;

     label43:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        goto label54;

     label44:
        $z17 = r0 instanceof float[];

        if $z17 == 0 goto label49;

        $r5 = (float[]) r0;

        r66 = (float[]) $r5;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("new float[] {");

        i21 = 0;

     label45:
        $i1 = lengthof r66;

        if i21 >= $i1 goto label48;

        if i21 != 0 goto label46;

        $r67 = "";

        goto label47;

     label46:
        $r67 = ",";

     label47:
        $r6 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r67);

        $f0 = r66[i21];

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f0);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(102);

        i21 = i21 + 1;

        goto label45;

     label48:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        goto label54;

     label49:
        $z18 = r0 instanceof double[];

        if $z18 == 0 goto label54;

        $r1 = (double[]) r0;

        r68 = (double[]) $r1;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("new double[] {");

        i22 = 0;

     label50:
        $i0 = lengthof r68;

        if i22 >= $i0 goto label53;

        if i22 != 0 goto label51;

        $r69 = "";

        goto label52;

     label51:
        $r69 = ",";

     label52:
        $r3 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r69);

        $d0 = r68[i22];

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>($d0);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(100);

        i22 = i22 + 1;

        goto label50;

     label53:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

     label54:
        return;
    }

    private void declareFrameTypes(int, java.lang.Object[])
    {
        org.objectweb.asm.util.ASMifier r2;
        java.lang.Object[] r0;
        org.objectweb.asm.Label $r4;
        int i0, i1;
        java.lang.Object $r1, $r3;
        boolean $z0;

        r2 := @this: org.objectweb.asm.util.ASMifier;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Object[];

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r1 = r0[i1];

        $z0 = $r1 instanceof org.objectweb.asm.Label;

        if $z0 == 0 goto label2;

        $r3 = r0[i1];

        $r4 = (org.objectweb.asm.Label) $r3;

        virtualinvoke r2.<org.objectweb.asm.util.ASMifier: void declareLabel(org.objectweb.asm.Label)>($r4);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private void appendFrameTypes(int, java.lang.Object[])
    {
        java.lang.Object[] r0;
        org.objectweb.asm.Label $r5;
        java.lang.Integer $r7;
        java.lang.StringBuffer $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16;
        int i0, $i1, i2;
        boolean $z0, $z1;
        org.objectweb.asm.util.ASMifier r3;
        java.lang.Object $r1, $r2, $r4, $r6, $r15;

        r3 := @this: org.objectweb.asm.util.ASMifier;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Object[];

        i2 = 0;

     label01:
        if i2 >= i0 goto label14;

        if i2 <= 0 goto label02;

        $r16 = r3.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label02:
        $r1 = r0[i2];

        $z0 = $r1 instanceof java.lang.String;

        if $z0 == 0 goto label03;

        $r15 = r0[i2];

        virtualinvoke r3.<org.objectweb.asm.util.ASMifier: void appendConstant(java.lang.Object)>($r15);

        goto label13;

     label03:
        $r2 = r0[i2];

        $z1 = $r2 instanceof java.lang.Integer;

        if $z1 == 0 goto label12;

        $r6 = r0[i2];

        $r7 = (java.lang.Integer) $r6;

        $i1 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        tableswitch($i1)
        {
            case 0: goto label04;
            case 1: goto label05;
            case 2: goto label06;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label09;
            case 6: goto label10;
            default: goto label11;
        };

     label04:
        $r14 = r3.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Opcodes.TOP");

        goto label11;

     label05:
        $r13 = r3.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Opcodes.INTEGER");

        goto label11;

     label06:
        $r12 = r3.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Opcodes.FLOAT");

        goto label11;

     label07:
        $r11 = r3.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Opcodes.DOUBLE");

        goto label11;

     label08:
        $r10 = r3.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Opcodes.LONG");

        goto label11;

     label09:
        $r9 = r3.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Opcodes.NULL");

        goto label11;

     label10:
        $r8 = r3.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Opcodes.UNINITIALIZED_THIS");

     label11:
        goto label13;

     label12:
        $r4 = r0[i2];

        $r5 = (org.objectweb.asm.Label) $r4;

        virtualinvoke r3.<org.objectweb.asm.util.ASMifier: void appendLabel(org.objectweb.asm.Label)>($r5);

     label13:
        i2 = i2 + 1;

        goto label01;

     label14:
        return;
    }

    protected void declareLabel(org.objectweb.asm.Label)
    {
        org.objectweb.asm.Label r2;
        java.util.HashMap $r14;
        java.lang.StringBuffer $r11, $r12, $r13;
        java.util.Map $r1, $r3, $r7, $r10;
        int $i0;
        java.lang.String $r9, $r15;
        org.objectweb.asm.util.ASMifier r0;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5, $r6, $r8;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r2 := @parameter0: org.objectweb.asm.Label;

        $r1 = r0.<org.objectweb.asm.util.ASMifier: java.util.Map labelNames>;

        if $r1 != null goto label1;

        $r14 = new java.util.HashMap;

        specialinvoke $r14.<java.util.HashMap: void <init>()>();

        r0.<org.objectweb.asm.util.ASMifier: java.util.Map labelNames> = $r14;

     label1:
        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.util.Map labelNames>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r15 = (java.lang.String) $r4;

        if $r15 != null goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("l");

        $r7 = r0.<org.objectweb.asm.util.ASMifier: java.util.Map labelNames>;

        $i0 = interfaceinvoke $r7.<java.util.Map: int size()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = r0.<org.objectweb.asm.util.ASMifier: java.util.Map labelNames>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r9);

        $r11 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Label ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = new Label();\n");

     label2:
        return;
    }

    protected void appendLabel(org.objectweb.asm.Label)
    {
        org.objectweb.asm.util.ASMifier r0;
        java.lang.StringBuffer $r3;
        java.util.Map $r2;
        org.objectweb.asm.Label r1;
        java.lang.Object $r4;
        java.lang.String $r5;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r1 := @parameter0: org.objectweb.asm.Label;

        $r3 = r0.<org.objectweb.asm.util.ASMifier: java.lang.StringBuffer buf>;

        $r2 = r0.<org.objectweb.asm.util.ASMifier: java.util.Map labelNames>;

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (java.lang.String) $r4;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        return;
    }

    public volatile org.objectweb.asm.util.Printer visitParameterAnnotation(int, java.lang.String, boolean)
    {
        org.objectweb.asm.util.ASMifier r0, $r2;
        int i0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r2 = virtualinvoke r0.<org.objectweb.asm.util.ASMifier: org.objectweb.asm.util.ASMifier visitParameterAnnotation(int,java.lang.String,boolean)>(i0, r1, z0);

        return $r2;
    }

    public volatile org.objectweb.asm.util.Printer visitMethodAnnotation(java.lang.String, boolean)
    {
        org.objectweb.asm.util.ASMifier r0, $r2;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<org.objectweb.asm.util.ASMifier: org.objectweb.asm.util.ASMifier visitMethodAnnotation(java.lang.String,boolean)>(r1, z0);

        return $r2;
    }

    public volatile org.objectweb.asm.util.Printer visitAnnotationDefault()
    {
        org.objectweb.asm.util.ASMifier r0, $r1;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        $r1 = virtualinvoke r0.<org.objectweb.asm.util.ASMifier: org.objectweb.asm.util.ASMifier visitAnnotationDefault()>();

        return $r1;
    }

    public volatile org.objectweb.asm.util.Printer visitFieldAnnotation(java.lang.String, boolean)
    {
        org.objectweb.asm.util.ASMifier r0, $r2;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<org.objectweb.asm.util.ASMifier: org.objectweb.asm.util.ASMifier visitFieldAnnotation(java.lang.String,boolean)>(r1, z0);

        return $r2;
    }

    public volatile org.objectweb.asm.util.Printer visitArray(java.lang.String)
    {
        org.objectweb.asm.util.ASMifier r0, $r2;
        java.lang.String r1;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.objectweb.asm.util.ASMifier: org.objectweb.asm.util.ASMifier visitArray(java.lang.String)>(r1);

        return $r2;
    }

    public volatile org.objectweb.asm.util.Printer visitAnnotation(java.lang.String, java.lang.String)
    {
        org.objectweb.asm.util.ASMifier r0, $r3;
        java.lang.String r1, r2;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.objectweb.asm.util.ASMifier: org.objectweb.asm.util.ASMifier visitAnnotation(java.lang.String,java.lang.String)>(r1, r2);

        return $r3;
    }

    public volatile org.objectweb.asm.util.Printer visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        org.objectweb.asm.util.ASMifier r0, $r5;
        int i0;
        java.lang.String[] r4;
        java.lang.String r1, r2, r3;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String[];

        $r5 = virtualinvoke r0.<org.objectweb.asm.util.ASMifier: org.objectweb.asm.util.ASMifier visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(i0, r1, r2, r3, r4);

        return $r5;
    }

    public volatile org.objectweb.asm.util.Printer visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)
    {
        org.objectweb.asm.util.ASMifier r0, $r5;
        int i0;
        java.lang.Object r4;
        java.lang.String r1, r2, r3;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.Object;

        $r5 = virtualinvoke r0.<org.objectweb.asm.util.ASMifier: org.objectweb.asm.util.ASMifier visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>(i0, r1, r2, r3, r4);

        return $r5;
    }

    public volatile org.objectweb.asm.util.Printer visitClassAnnotation(java.lang.String, boolean)
    {
        org.objectweb.asm.util.ASMifier r0, $r2;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.objectweb.asm.util.ASMifier;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<org.objectweb.asm.util.ASMifier: org.objectweb.asm.util.ASMifier visitClassAnnotation(java.lang.String,boolean)>(r1, z0);

        return $r2;
    }

    public static void <clinit>()
    {
        <org.objectweb.asm.util.ASMifier: int ACCESS_INNER> = 1048576;

        <org.objectweb.asm.util.ASMifier: int ACCESS_FIELD> = 524288;

        <org.objectweb.asm.util.ASMifier: int ACCESS_CLASS> = 262144;

        return;
    }
}
