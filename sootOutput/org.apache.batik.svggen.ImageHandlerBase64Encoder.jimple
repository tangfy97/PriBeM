public class org.apache.batik.svggen.ImageHandlerBase64Encoder extends org.apache.batik.svggen.DefaultImageHandler
{

    public void <init>()
    {
        org.apache.batik.svggen.ImageHandlerBase64Encoder r0;

        r0 := @this: org.apache.batik.svggen.ImageHandlerBase64Encoder;

        specialinvoke r0.<org.apache.batik.svggen.DefaultImageHandler: void <init>()>();

        return;
    }

    public void handleHREF(java.awt.Image, org.w3c.dom.Element, org.apache.batik.svggen.SVGGeneratorContext) throws org.apache.batik.svggen.SVGGraphics2DIOException
    {
        java.awt.Image r0;
        java.awt.image.BufferedImage $r3;
        java.awt.image.RenderedImage $r6;
        org.apache.batik.svggen.SVGGraphics2DRuntimeException $r7;
        org.apache.batik.svggen.ImageHandlerBase64Encoder r1;
        org.w3c.dom.Element r2;
        java.awt.Graphics2D $r4;
        org.apache.batik.svggen.SVGGeneratorContext r5;
        int $i0, $i1;
        boolean $z0;

        r1 := @this: org.apache.batik.svggen.ImageHandlerBase64Encoder;

        r0 := @parameter0: java.awt.Image;

        r2 := @parameter1: org.w3c.dom.Element;

        r5 := @parameter2: org.apache.batik.svggen.SVGGeneratorContext;

        if r0 != null goto label1;

        $r7 = new org.apache.batik.svggen.SVGGraphics2DRuntimeException;

        specialinvoke $r7.<org.apache.batik.svggen.SVGGraphics2DRuntimeException: void <init>(java.lang.String)>("image should not be null");

        throw $r7;

     label1:
        $i0 = virtualinvoke r0.<java.awt.Image: int getWidth(java.awt.image.ImageObserver)>(null);

        $i1 = virtualinvoke r0.<java.awt.Image: int getHeight(java.awt.image.ImageObserver)>(null);

        if $i0 == 0 goto label2;

        if $i1 != 0 goto label3;

     label2:
        virtualinvoke r1.<org.apache.batik.svggen.ImageHandlerBase64Encoder: void handleEmptyImage(org.w3c.dom.Element)>(r2);

        goto label5;

     label3:
        $z0 = r0 instanceof java.awt.image.RenderedImage;

        if $z0 == 0 goto label4;

        $r6 = (java.awt.image.RenderedImage) r0;

        virtualinvoke r1.<org.apache.batik.svggen.ImageHandlerBase64Encoder: void handleHREF(java.awt.image.RenderedImage,org.w3c.dom.Element,org.apache.batik.svggen.SVGGeneratorContext)>($r6, r2, r5);

        goto label5;

     label4:
        $r3 = new java.awt.image.BufferedImage;

        specialinvoke $r3.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i0, $i1, 2);

        $r4 = virtualinvoke $r3.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        virtualinvoke $r4.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>(r0, 0, 0, null);

        virtualinvoke $r4.<java.awt.Graphics: void dispose()>();

        virtualinvoke r1.<org.apache.batik.svggen.ImageHandlerBase64Encoder: void handleHREF(java.awt.image.RenderedImage,org.w3c.dom.Element,org.apache.batik.svggen.SVGGeneratorContext)>($r3, r2, r5);

     label5:
        return;
    }

    public void handleHREF(java.awt.image.renderable.RenderableImage, org.w3c.dom.Element, org.apache.batik.svggen.SVGGeneratorContext) throws org.apache.batik.svggen.SVGGraphics2DIOException
    {
        org.apache.batik.svggen.ImageHandlerBase64Encoder r2;
        org.w3c.dom.Element r3;
        org.apache.batik.svggen.SVGGeneratorContext r4;
        java.awt.image.RenderedImage $r1;
        java.awt.image.renderable.RenderableImage r0;
        org.apache.batik.svggen.SVGGraphics2DRuntimeException $r5;

        r2 := @this: org.apache.batik.svggen.ImageHandlerBase64Encoder;

        r0 := @parameter0: java.awt.image.renderable.RenderableImage;

        r3 := @parameter1: org.w3c.dom.Element;

        r4 := @parameter2: org.apache.batik.svggen.SVGGeneratorContext;

        if r0 != null goto label1;

        $r5 = new org.apache.batik.svggen.SVGGraphics2DRuntimeException;

        specialinvoke $r5.<org.apache.batik.svggen.SVGGraphics2DRuntimeException: void <init>(java.lang.String)>("image should not be null");

        throw $r5;

     label1:
        $r1 = interfaceinvoke r0.<java.awt.image.renderable.RenderableImage: java.awt.image.RenderedImage createDefaultRendering()>();

        if $r1 != null goto label2;

        virtualinvoke r2.<org.apache.batik.svggen.ImageHandlerBase64Encoder: void handleEmptyImage(org.w3c.dom.Element)>(r3);

        goto label3;

     label2:
        virtualinvoke r2.<org.apache.batik.svggen.ImageHandlerBase64Encoder: void handleHREF(java.awt.image.RenderedImage,org.w3c.dom.Element,org.apache.batik.svggen.SVGGeneratorContext)>($r1, r3, r4);

     label3:
        return;
    }

    protected void handleEmptyImage(org.w3c.dom.Element)
    {
        org.apache.batik.svggen.ImageHandlerBase64Encoder r1;
        org.w3c.dom.Element r0;

        r1 := @this: org.apache.batik.svggen.ImageHandlerBase64Encoder;

        r0 := @parameter0: org.w3c.dom.Element;

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/1999/xlink", "xlink:href", "data:image/png;base64,");

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "width", "0");

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "height", "0");

        return;
    }

    public void handleHREF(java.awt.image.RenderedImage, org.w3c.dom.Element, org.apache.batik.svggen.SVGGeneratorContext) throws org.apache.batik.svggen.SVGGraphics2DIOException
    {
        java.io.ByteArrayOutputStream $r0;
        org.apache.batik.svggen.SVGGraphics2DIOException $r11;
        java.awt.image.RenderedImage r3;
        java.io.IOException $r10;
        org.apache.batik.svggen.ImageHandlerBase64Encoder r2;
        org.w3c.dom.Element r4;
        java.lang.StringBuffer $r5, $r6, $r8;
        org.apache.batik.svggen.SVGGeneratorContext r12;
        org.apache.batik.util.Base64EncoderStream $r1;
        java.lang.String $r7, $r9;

        r2 := @this: org.apache.batik.svggen.ImageHandlerBase64Encoder;

        r3 := @parameter0: java.awt.image.RenderedImage;

        r4 := @parameter1: org.w3c.dom.Element;

        r12 := @parameter2: org.apache.batik.svggen.SVGGeneratorContext;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new org.apache.batik.util.Base64EncoderStream;

        specialinvoke $r1.<org.apache.batik.util.Base64EncoderStream: void <init>(java.io.OutputStream)>($r0);

     label1:
        virtualinvoke r2.<org.apache.batik.svggen.ImageHandlerBase64Encoder: void encodeImage(java.awt.image.RenderedImage,java.io.OutputStream)>(r3, $r1);

        virtualinvoke $r1.<org.apache.batik.util.Base64EncoderStream: void close()>();

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = new org.apache.batik.svggen.SVGGraphics2DIOException;

        specialinvoke $r11.<org.apache.batik.svggen.SVGGraphics2DIOException: void <init>(java.lang.String,java.io.IOException)>("unexpected exception", $r10);

        throw $r11;

     label4:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("data:image/png;base64,");

        $r7 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke r4.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/1999/xlink", "xlink:href", $r9);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void encodeImage(java.awt.image.RenderedImage, java.io.OutputStream) throws org.apache.batik.svggen.SVGGraphics2DIOException
    {
        java.io.OutputStream r3;
        org.apache.batik.ext.awt.image.spi.ImageWriterRegistry $r0;
        org.apache.batik.ext.awt.image.spi.ImageWriter $r1;
        org.apache.batik.svggen.ImageHandlerBase64Encoder r6;
        org.apache.batik.svggen.SVGGraphics2DIOException $r5;
        java.awt.image.RenderedImage r2;
        java.io.IOException $r4;

        r6 := @this: org.apache.batik.svggen.ImageHandlerBase64Encoder;

        r2 := @parameter0: java.awt.image.RenderedImage;

        r3 := @parameter1: java.io.OutputStream;

     label1:
        $r0 = staticinvoke <org.apache.batik.ext.awt.image.spi.ImageWriterRegistry: org.apache.batik.ext.awt.image.spi.ImageWriterRegistry getInstance()>();

        $r1 = virtualinvoke $r0.<org.apache.batik.ext.awt.image.spi.ImageWriterRegistry: org.apache.batik.ext.awt.image.spi.ImageWriter getWriterFor(java.lang.String)>("image/png");

        interfaceinvoke $r1.<org.apache.batik.ext.awt.image.spi.ImageWriter: void writeImage(java.awt.image.RenderedImage,java.io.OutputStream)>(r2, r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.apache.batik.svggen.SVGGraphics2DIOException;

        specialinvoke $r5.<org.apache.batik.svggen.SVGGraphics2DIOException: void <init>(java.lang.String)>("unexpected exception");

        throw $r5;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.awt.image.BufferedImage buildBufferedImage(java.awt.Dimension)
    {
        java.awt.Dimension r1;
        org.apache.batik.svggen.ImageHandlerBase64Encoder r2;
        java.awt.image.BufferedImage $r0;
        int $i0, $i1;

        r2 := @this: org.apache.batik.svggen.ImageHandlerBase64Encoder;

        r1 := @parameter0: java.awt.Dimension;

        $r0 = new java.awt.image.BufferedImage;

        $i1 = r1.<java.awt.Dimension: int width>;

        $i0 = r1.<java.awt.Dimension: int height>;

        specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i1, $i0, 2);

        return $r0;
    }
}
