public class org.apache.batik.gvt.CompositeGraphicsNode extends org.apache.batik.gvt.AbstractGraphicsNode implements java.util.List
{
    public static final java.awt.geom.Rectangle2D VIEWPORT;
    public static final java.awt.geom.Rectangle2D NULL_RECT;
    protected org.apache.batik.gvt.GraphicsNode[] children;
    protected volatile int count;
    protected volatile int modCount;
    protected java.awt.geom.Rectangle2D backgroundEnableRgn;
    private volatile java.awt.geom.Rectangle2D geometryBounds;
    private volatile java.awt.geom.Rectangle2D primitiveBounds;
    private volatile java.awt.geom.Rectangle2D sensitiveBounds;
    private java.awt.Shape outline;

    public void <init>()
    {
        org.apache.batik.gvt.CompositeGraphicsNode r0;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        specialinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: void <init>()>();

        r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D backgroundEnableRgn> = null;

        return;
    }

    public java.util.List getChildren()
    {
        org.apache.batik.gvt.CompositeGraphicsNode r0;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        return r0;
    }

    public void setBackgroundEnable(java.awt.geom.Rectangle2D)
    {
        org.apache.batik.gvt.CompositeGraphicsNode r0;
        java.awt.geom.Rectangle2D r1;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        r1 := @parameter0: java.awt.geom.Rectangle2D;

        r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D backgroundEnableRgn> = r1;

        return;
    }

    public java.awt.geom.Rectangle2D getBackgroundEnable()
    {
        org.apache.batik.gvt.CompositeGraphicsNode r0;
        java.awt.geom.Rectangle2D $r1;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        $r1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D backgroundEnableRgn>;

        return $r1;
    }

    public void setVisible(boolean)
    {
        org.apache.batik.gvt.CompositeGraphicsNode r0;
        boolean z0;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        z0 := @parameter0: boolean;

        r0.<org.apache.batik.gvt.AbstractGraphicsNode: boolean isVisible> = z0;

        return;
    }

    public void primitivePaint(java.awt.Graphics2D)
    {
        org.apache.batik.gvt.GraphicsNode r3;
        org.apache.batik.gvt.CompositeGraphicsNode r0;
        java.awt.Graphics2D r4;
        java.lang.Thread $r1;
        org.apache.batik.gvt.GraphicsNode[] $r2;
        int $i0, i1, $i2;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        r4 := @parameter0: java.awt.Graphics2D;

        $i0 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if $i0 != 0 goto label1;

        return;

     label1:
        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        i1 = 0;

        goto label6;

     label2:
        $z0 = staticinvoke <org.apache.batik.util.HaltingThread: boolean hasBeenHalted(java.lang.Thread)>($r1);

        if $z0 == 0 goto label3;

        return;

     label3:
        $r2 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        r3 = $r2[i1];

        if r3 != null goto label4;

        goto label5;

     label4:
        interfaceinvoke r3.<org.apache.batik.gvt.GraphicsNode: void paint(java.awt.Graphics2D)>(r4);

     label5:
        i1 = i1 + 1;

     label6:
        $i2 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if i1 < $i2 goto label2;

        return;
    }

    protected void invalidateGeometryCache()
    {
        org.apache.batik.gvt.CompositeGraphicsNode r0;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        specialinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: void invalidateGeometryCache()>();

        r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D geometryBounds> = null;

        r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D primitiveBounds> = null;

        r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D sensitiveBounds> = null;

        r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.Shape outline> = null;

        return;
    }

    public java.awt.geom.Rectangle2D getPrimitiveBounds()
    {
        java.awt.geom.Rectangle2D $r1, $r6, $r7, $r8, $r9, $r10, $r14, $r15, $r16, r17;
        org.apache.batik.gvt.CompositeGraphicsNode r0;
        java.lang.Thread $r2;
        org.apache.batik.gvt.GraphicsNode[] $r3, $r11;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6;
        boolean $z0, $z1, $z2, $z3;
        org.apache.batik.gvt.GraphicsNode $r5, $r13;
        java.awt.geom.AffineTransform $r4, $r12;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        $r1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D primitiveBounds>;

        if $r1 == null goto label02;

        $r15 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D primitiveBounds>;

        $r14 = <org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D NULL_RECT>;

        if $r15 != $r14 goto label01;

        return null;

     label01:
        $r16 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D primitiveBounds>;

        return $r16;

     label02:
        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        i5 = 0;

        r17 = null;

        goto label04;

     label03:
        $r11 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $i3 = i5;

        i5 = i5 + 1;

        $r13 = $r11[$i3];

        $r12 = <org.apache.batik.gvt.GraphicsNode: java.awt.geom.AffineTransform IDENTITY>;

        r17 = interfaceinvoke $r13.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getTransformedBounds(java.awt.geom.AffineTransform)>($r12);

        $i4 = i5 & 15;

        if $i4 != 0 goto label04;

        $z2 = staticinvoke <org.apache.batik.util.HaltingThread: boolean hasBeenHalted(java.lang.Thread)>($r2);

        if $z2 == 0 goto label04;

        goto label05;

     label04:
        if r17 != null goto label05;

        $i2 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if i5 < $i2 goto label03;

     label05:
        $z3 = staticinvoke <org.apache.batik.util.HaltingThread: boolean hasBeenHalted(java.lang.Thread)>($r2);

        if $z3 == 0 goto label06;

        virtualinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode: void invalidateGeometryCache()>();

        return null;

     label06:
        if r17 != null goto label07;

        $r10 = <org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D NULL_RECT>;

        r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D primitiveBounds> = $r10;

        return null;

     label07:
        r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D primitiveBounds> = r17;

        goto label11;

     label08:
        $r3 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $i0 = i5;

        i5 = i5 + 1;

        $r5 = $r3[$i0];

        $r4 = <org.apache.batik.gvt.GraphicsNode: java.awt.geom.AffineTransform IDENTITY>;

        $r6 = interfaceinvoke $r5.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getTransformedBounds(java.awt.geom.AffineTransform)>($r4);

        if $r6 == null goto label10;

        $r8 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D primitiveBounds>;

        if $r8 != null goto label09;

        return null;

     label09:
        $r9 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D primitiveBounds>;

        virtualinvoke $r9.<java.awt.geom.Rectangle2D: void add(java.awt.geom.Rectangle2D)>($r6);

     label10:
        $i1 = i5 & 15;

        if $i1 != 0 goto label11;

        $z0 = staticinvoke <org.apache.batik.util.HaltingThread: boolean hasBeenHalted(java.lang.Thread)>($r2);

        if $z0 == 0 goto label11;

        goto label12;

     label11:
        $i6 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if i5 < $i6 goto label08;

     label12:
        $z1 = staticinvoke <org.apache.batik.util.HaltingThread: boolean hasBeenHalted(java.lang.Thread)>($r2);

        if $z1 == 0 goto label13;

        virtualinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode: void invalidateGeometryCache()>();

     label13:
        $r7 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D primitiveBounds>;

        return $r7;
    }

    public static java.awt.geom.Rectangle2D getTransformedBBox(java.awt.geom.Rectangle2D, java.awt.geom.AffineTransform)
    {
        java.awt.geom.Rectangle2D r1;
        java.awt.geom.Rectangle2D$Float $r3;
        byte $b0, $b1;
        int $i2, $i3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, d16, d17, d18, d19;
        java.awt.geom.AffineTransform r0;
        float $f0, $f1, $f2, $f3;

        r1 := @parameter0: java.awt.geom.Rectangle2D;

        r0 := @parameter1: java.awt.geom.AffineTransform;

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        return r1;

     label2:
        $d0 = virtualinvoke r1.<java.awt.geom.RectangularShape: double getX()>();

        d16 = $d0;

        $d1 = virtualinvoke r1.<java.awt.geom.RectangularShape: double getWidth()>();

        $d2 = virtualinvoke r1.<java.awt.geom.RectangularShape: double getY()>();

        d17 = $d2;

        $d3 = virtualinvoke r1.<java.awt.geom.RectangularShape: double getHeight()>();

        $d4 = virtualinvoke r0.<java.awt.geom.AffineTransform: double getScaleX()>();

        d18 = $d4;

        $d5 = virtualinvoke r0.<java.awt.geom.AffineTransform: double getScaleY()>();

        d19 = $d5;

        $b0 = $d4 cmpg 0.0;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label3;

        $d15 = $d0 + $d1;

        d16 = neg $d15;

        d18 = neg $d4;

     label3:
        $b1 = $d5 cmpg 0.0;

        $i3 = (int) $b1;

        if $i3 >= 0 goto label4;

        $d14 = $d2 + $d3;

        d17 = neg $d14;

        d19 = neg $d5;

     label4:
        $r3 = new java.awt.geom.Rectangle2D$Float;

        $d6 = d16 * d18;

        $d7 = virtualinvoke r0.<java.awt.geom.AffineTransform: double getTranslateX()>();

        $d8 = $d6 + $d7;

        $f0 = (float) $d8;

        $d9 = d17 * d19;

        $d10 = virtualinvoke r0.<java.awt.geom.AffineTransform: double getTranslateY()>();

        $d11 = $d9 + $d10;

        $f3 = (float) $d11;

        $d12 = $d1 * d18;

        $f2 = (float) $d12;

        $d13 = $d3 * d19;

        $f1 = (float) $d13;

        specialinvoke $r3.<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>($f0, $f3, $f2, $f1);

        return $r3;
    }

    public java.awt.geom.Rectangle2D getTransformedPrimitiveBounds(java.awt.geom.AffineTransform)
    {
        java.awt.geom.Rectangle2D $r3, $r4, $r7, r13;
        org.apache.batik.gvt.CompositeGraphicsNode r1;
        byte $b0, $b4;
        org.apache.batik.gvt.GraphicsNode[] $r5, $r8;
        int $i1, $i2, $i3, i5, $i6;
        double $d0, $d1;
        org.apache.batik.gvt.GraphicsNode $r6, $r9;
        java.awt.geom.AffineTransform r0, $r2, $r10, $r11, r12;

        r1 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        r0 := @parameter0: java.awt.geom.AffineTransform;

        r12 = r0;

        $r2 = r1.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform transform>;

        if $r2 == null goto label1;

        $r10 = new java.awt.geom.AffineTransform;

        specialinvoke $r10.<java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>(r0);

        r12 = $r10;

        $r11 = r1.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform transform>;

        virtualinvoke $r10.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>($r11);

     label1:
        if r12 == null goto label2;

        $d0 = virtualinvoke r12.<java.awt.geom.AffineTransform: double getShearX()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label3;

        $d1 = virtualinvoke r12.<java.awt.geom.AffineTransform: double getShearY()>();

        $b4 = $d1 cmpl 0.0;

        if $b4 != 0 goto label3;

     label2:
        $r3 = virtualinvoke r1.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D getPrimitiveBounds()>();

        $r4 = staticinvoke <org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D getTransformedBBox(java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform)>($r3, r12);

        return $r4;

     label3:
        i5 = 0;

        r13 = null;

        goto label5;

     label4:
        $r8 = r1.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $i3 = i5;

        i5 = i5 + 1;

        $r9 = $r8[$i3];

        r13 = interfaceinvoke $r9.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getTransformedBounds(java.awt.geom.AffineTransform)>(r12);

     label5:
        if r13 != null goto label7;

        $i2 = r1.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if i5 < $i2 goto label4;

        goto label7;

     label6:
        $r5 = r1.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $i1 = i5;

        i5 = i5 + 1;

        $r6 = $r5[$i1];

        $r7 = interfaceinvoke $r6.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getTransformedBounds(java.awt.geom.AffineTransform)>(r12);

        if $r7 == null goto label7;

        virtualinvoke r13.<java.awt.geom.Rectangle2D: void add(java.awt.geom.Rectangle2D)>($r7);

     label7:
        $i6 = r1.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if i5 < $i6 goto label6;

        return r13;
    }

    public java.awt.geom.Rectangle2D getGeometryBounds()
    {
        java.awt.geom.Rectangle2D $r1, $r2, $r3, $r7, $r8, $r9, $r10, $r14;
        org.apache.batik.gvt.CompositeGraphicsNode r0;
        org.apache.batik.gvt.GraphicsNode[] $r4, $r11;
        int $i0, $i1, $i2, i3, $i4;
        org.apache.batik.gvt.GraphicsNode $r6, $r13;
        java.awt.geom.AffineTransform $r5, $r12;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        $r1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D geometryBounds>;

        if $r1 != null goto label6;

        i3 = 0;

        goto label2;

     label1:
        $r11 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $i2 = i3;

        i3 = i3 + 1;

        $r13 = $r11[$i2];

        $r12 = <org.apache.batik.gvt.GraphicsNode: java.awt.geom.AffineTransform IDENTITY>;

        $r14 = interfaceinvoke $r13.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getTransformedGeometryBounds(java.awt.geom.AffineTransform)>($r12);

        r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D geometryBounds> = $r14;

     label2:
        $r3 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D geometryBounds>;

        if $r3 != null goto label5;

        $i1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if i3 < $i1 goto label1;

        goto label5;

     label3:
        $r4 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $i0 = i3;

        i3 = i3 + 1;

        $r6 = $r4[$i0];

        $r5 = <org.apache.batik.gvt.GraphicsNode: java.awt.geom.AffineTransform IDENTITY>;

        $r7 = interfaceinvoke $r6.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getTransformedGeometryBounds(java.awt.geom.AffineTransform)>($r5);

        if $r7 == null goto label5;

        $r8 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D geometryBounds>;

        if $r8 != null goto label4;

        $r10 = virtualinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D getGeometryBounds()>();

        return $r10;

     label4:
        $r9 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D geometryBounds>;

        virtualinvoke $r9.<java.awt.geom.Rectangle2D: void add(java.awt.geom.Rectangle2D)>($r7);

     label5:
        $i4 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if i3 < $i4 goto label3;

     label6:
        $r2 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D geometryBounds>;

        return $r2;
    }

    public java.awt.geom.Rectangle2D getTransformedGeometryBounds(java.awt.geom.AffineTransform)
    {
        java.awt.geom.Rectangle2D $r3, $r4, $r7, r13;
        org.apache.batik.gvt.CompositeGraphicsNode r1;
        byte $b0, $b4;
        org.apache.batik.gvt.GraphicsNode[] $r5, $r8;
        int $i1, $i2, $i3, i5, $i6;
        double $d0, $d1;
        org.apache.batik.gvt.GraphicsNode $r6, $r9;
        java.awt.geom.AffineTransform r0, $r2, $r10, $r11, r12;

        r1 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        r0 := @parameter0: java.awt.geom.AffineTransform;

        r12 = r0;

        $r2 = r1.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform transform>;

        if $r2 == null goto label1;

        $r10 = new java.awt.geom.AffineTransform;

        specialinvoke $r10.<java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>(r0);

        r12 = $r10;

        $r11 = r1.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform transform>;

        virtualinvoke $r10.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>($r11);

     label1:
        if r12 == null goto label2;

        $d0 = virtualinvoke r12.<java.awt.geom.AffineTransform: double getShearX()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label3;

        $d1 = virtualinvoke r12.<java.awt.geom.AffineTransform: double getShearY()>();

        $b4 = $d1 cmpl 0.0;

        if $b4 != 0 goto label3;

     label2:
        $r3 = virtualinvoke r1.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D getGeometryBounds()>();

        $r4 = staticinvoke <org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D getTransformedBBox(java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform)>($r3, r12);

        return $r4;

     label3:
        r13 = null;

        i5 = 0;

        goto label5;

     label4:
        $r8 = r1.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $i3 = i5;

        i5 = i5 + 1;

        $r9 = $r8[$i3];

        r13 = interfaceinvoke $r9.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getTransformedGeometryBounds(java.awt.geom.AffineTransform)>(r12);

     label5:
        if r13 != null goto label6;

        $i2 = r1.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if i5 < $i2 goto label4;

     label6:
        goto label8;

     label7:
        $r5 = r1.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $i1 = i5;

        i5 = i5 + 1;

        $r6 = $r5[$i1];

        $r7 = interfaceinvoke $r6.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getTransformedGeometryBounds(java.awt.geom.AffineTransform)>(r12);

        if $r7 == null goto label8;

        virtualinvoke r13.<java.awt.geom.Rectangle2D: void add(java.awt.geom.Rectangle2D)>($r7);

     label8:
        $i6 = r1.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if i5 < $i6 goto label7;

        return r13;
    }

    public java.awt.geom.Rectangle2D getSensitiveBounds()
    {
        java.awt.geom.Rectangle2D $r1, $r2, $r6, $r7, $r8, $r9, $r10, $r14, $r15;
        org.apache.batik.gvt.CompositeGraphicsNode r0;
        org.apache.batik.gvt.GraphicsNode[] $r3, $r11;
        int $i0, $i1, $i2, i3, $i4;
        org.apache.batik.gvt.GraphicsNode $r5, $r13;
        java.awt.geom.AffineTransform $r4, $r12;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        $r1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D sensitiveBounds>;

        if $r1 == null goto label1;

        $r15 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D sensitiveBounds>;

        return $r15;

     label1:
        i3 = 0;

        goto label3;

     label2:
        $r11 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $i2 = i3;

        i3 = i3 + 1;

        $r13 = $r11[$i2];

        $r12 = <org.apache.batik.gvt.GraphicsNode: java.awt.geom.AffineTransform IDENTITY>;

        $r14 = interfaceinvoke $r13.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getTransformedSensitiveBounds(java.awt.geom.AffineTransform)>($r12);

        r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D sensitiveBounds> = $r14;

     label3:
        $r2 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D sensitiveBounds>;

        if $r2 != null goto label6;

        $i1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if i3 < $i1 goto label2;

        goto label6;

     label4:
        $r3 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $i0 = i3;

        i3 = i3 + 1;

        $r5 = $r3[$i0];

        $r4 = <org.apache.batik.gvt.GraphicsNode: java.awt.geom.AffineTransform IDENTITY>;

        $r6 = interfaceinvoke $r5.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getTransformedSensitiveBounds(java.awt.geom.AffineTransform)>($r4);

        if $r6 == null goto label6;

        $r7 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D sensitiveBounds>;

        if $r7 != null goto label5;

        $r9 = virtualinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D getSensitiveBounds()>();

        return $r9;

     label5:
        $r8 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D sensitiveBounds>;

        virtualinvoke $r8.<java.awt.geom.Rectangle2D: void add(java.awt.geom.Rectangle2D)>($r6);

     label6:
        $i4 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if i3 < $i4 goto label4;

        $r10 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D sensitiveBounds>;

        return $r10;
    }

    public java.awt.geom.Rectangle2D getTransformedSensitiveBounds(java.awt.geom.AffineTransform)
    {
        java.awt.geom.Rectangle2D $r3, $r4, $r7, r13;
        org.apache.batik.gvt.CompositeGraphicsNode r1;
        byte $b0, $b4;
        org.apache.batik.gvt.GraphicsNode[] $r5, $r8;
        int $i1, $i2, $i3, i5, $i6;
        double $d0, $d1;
        org.apache.batik.gvt.GraphicsNode $r6, $r9;
        java.awt.geom.AffineTransform r0, $r2, $r10, $r11, r12;

        r1 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        r0 := @parameter0: java.awt.geom.AffineTransform;

        r12 = r0;

        $r2 = r1.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform transform>;

        if $r2 == null goto label1;

        $r10 = new java.awt.geom.AffineTransform;

        specialinvoke $r10.<java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>(r0);

        r12 = $r10;

        $r11 = r1.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.AffineTransform transform>;

        virtualinvoke $r10.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>($r11);

     label1:
        if r12 == null goto label2;

        $d0 = virtualinvoke r12.<java.awt.geom.AffineTransform: double getShearX()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label3;

        $d1 = virtualinvoke r12.<java.awt.geom.AffineTransform: double getShearY()>();

        $b4 = $d1 cmpl 0.0;

        if $b4 != 0 goto label3;

     label2:
        $r3 = virtualinvoke r1.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D getSensitiveBounds()>();

        $r4 = staticinvoke <org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D getTransformedBBox(java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform)>($r3, r12);

        return $r4;

     label3:
        r13 = null;

        i5 = 0;

        goto label5;

     label4:
        $r8 = r1.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $i3 = i5;

        i5 = i5 + 1;

        $r9 = $r8[$i3];

        r13 = interfaceinvoke $r9.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getTransformedSensitiveBounds(java.awt.geom.AffineTransform)>(r12);

     label5:
        if r13 != null goto label7;

        $i2 = r1.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if i5 < $i2 goto label4;

        goto label7;

     label6:
        $r5 = r1.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $i1 = i5;

        i5 = i5 + 1;

        $r6 = $r5[$i1];

        $r7 = interfaceinvoke $r6.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getTransformedSensitiveBounds(java.awt.geom.AffineTransform)>(r12);

        if $r7 == null goto label7;

        virtualinvoke r13.<java.awt.geom.Rectangle2D: void add(java.awt.geom.Rectangle2D)>($r7);

     label7:
        $i6 = r1.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if i5 < $i6 goto label6;

        return r13;
    }

    public boolean contains(java.awt.geom.Point2D)
    {
        java.awt.geom.Point2D r2, $r8, r9, r10;
        java.awt.geom.Rectangle2D $r1;
        org.apache.batik.gvt.CompositeGraphicsNode r0;
        org.apache.batik.gvt.GraphicsNode[] $r3, $r6;
        int $i0, $i1, i2;
        boolean $z0, $z1;
        org.apache.batik.gvt.GraphicsNode $r4, $r7;
        java.awt.geom.AffineTransform $r5;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        r2 := @parameter0: java.awt.geom.Point2D;

        $r1 = virtualinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D getSensitiveBounds()>();

        $i0 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if $i0 <= 0 goto label6;

        if $r1 == null goto label6;

        $z0 = virtualinvoke $r1.<java.awt.geom.RectangularShape: boolean contains(java.awt.geom.Point2D)>(r2);

        if $z0 == 0 goto label6;

        r9 = null;

        i2 = 0;

        goto label5;

     label1:
        $r3 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $r4 = $r3[i2];

        $r5 = interfaceinvoke $r4.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.AffineTransform getInverseTransform()>();

        if $r5 == null goto label2;

        $r8 = virtualinvoke $r5.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r2, r9);

        r9 = $r8;

        r10 = $r8;

        goto label3;

     label2:
        r10 = r2;

     label3:
        $r6 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $r7 = $r6[i2];

        $z1 = interfaceinvoke $r7.<org.apache.batik.gvt.GraphicsNode: boolean contains(java.awt.geom.Point2D)>(r10);

        if $z1 == 0 goto label4;

        return 1;

     label4:
        i2 = i2 + 1;

     label5:
        $i1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if i2 < $i1 goto label1;

     label6:
        return 0;
    }

    public org.apache.batik.gvt.GraphicsNode nodeHitAt(java.awt.geom.Point2D)
    {
        java.awt.geom.Point2D r2, $r9, r10, r11;
        java.awt.geom.Rectangle2D $r1;
        org.apache.batik.gvt.CompositeGraphicsNode r0;
        org.apache.batik.gvt.GraphicsNode[] $r3, $r6;
        int $i0, $i1, i2, $i4;
        boolean $z0;
        org.apache.batik.gvt.GraphicsNode $r4, $r7, $r8;
        java.awt.geom.AffineTransform $r5;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        r2 := @parameter0: java.awt.geom.Point2D;

        $r1 = virtualinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D getSensitiveBounds()>();

        $i0 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if $i0 <= 0 goto label6;

        if $r1 == null goto label6;

        $z0 = virtualinvoke $r1.<java.awt.geom.RectangularShape: boolean contains(java.awt.geom.Point2D)>(r2);

        if $z0 == 0 goto label6;

        r10 = null;

        $i1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        i2 = $i1 - 1;

        goto label5;

     label1:
        $r3 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $r4 = $r3[i2];

        $r5 = interfaceinvoke $r4.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.AffineTransform getInverseTransform()>();

        if $r5 == null goto label2;

        $r9 = virtualinvoke $r5.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r2, r10);

        r10 = $r9;

        r11 = $r9;

        goto label3;

     label2:
        r11 = r2;

     label3:
        $r6 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $r7 = $r6[i2];

        $r8 = interfaceinvoke $r7.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.gvt.GraphicsNode nodeHitAt(java.awt.geom.Point2D)>(r11);

        if $r8 == null goto label4;

        return $r8;

     label4:
        $i4 = (int) -1;

        i2 = i2 + $i4;

     label5:
        if i2 >= 0 goto label1;

     label6:
        return null;
    }

    public java.awt.Shape getOutline()
    {
        org.apache.batik.gvt.CompositeGraphicsNode r0;
        org.apache.batik.gvt.GraphicsNode[] $r3, $r6;
        int i0, $i1;
        java.awt.Shape $r1, $r5, $r9, $r11, $r13, $r14, $r15;
        org.apache.batik.gvt.GraphicsNode $r4, $r7;
        java.awt.geom.AffineTransform $r8;
        java.awt.geom.GeneralPath $r2, $r10, $r12;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        $r1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.Shape outline>;

        if $r1 == null goto label1;

        $r15 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.Shape outline>;

        return $r15;

     label1:
        $r2 = new java.awt.geom.GeneralPath;

        specialinvoke $r2.<java.awt.geom.GeneralPath: void <init>()>();

        r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.Shape outline> = $r2;

        i0 = 0;

        goto label5;

     label2:
        $r3 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $r4 = $r3[i0];

        $r5 = interfaceinvoke $r4.<org.apache.batik.gvt.GraphicsNode: java.awt.Shape getOutline()>();

        if $r5 == null goto label4;

        $r6 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $r7 = $r6[i0];

        $r8 = interfaceinvoke $r7.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.AffineTransform getTransform()>();

        if $r8 == null goto label3;

        $r11 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.Shape outline>;

        $r12 = (java.awt.geom.GeneralPath) $r11;

        $r13 = virtualinvoke $r8.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>($r5);

        virtualinvoke $r12.<java.awt.geom.GeneralPath: void append(java.awt.Shape,boolean)>($r13, 0);

        goto label4;

     label3:
        $r9 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.Shape outline>;

        $r10 = (java.awt.geom.GeneralPath) $r9;

        virtualinvoke $r10.<java.awt.geom.GeneralPath: void append(java.awt.Shape,boolean)>($r5, 0);

     label4:
        i0 = i0 + 1;

     label5:
        $i1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if i0 < $i1 goto label2;

        $r14 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.Shape outline>;

        return $r14;
    }

    protected void setRoot(org.apache.batik.gvt.RootGraphicsNode)
    {
        org.apache.batik.gvt.RootGraphicsNode r1;
        org.apache.batik.gvt.GraphicsNode r3;
        org.apache.batik.gvt.GraphicsNode[] $r2;
        int $i0, i1;
        org.apache.batik.gvt.AbstractGraphicsNode $r4;
        org.apache.batik.gvt.CompositeGraphicsNode r0;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        r1 := @parameter0: org.apache.batik.gvt.RootGraphicsNode;

        specialinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: void setRoot(org.apache.batik.gvt.RootGraphicsNode)>(r1);

        i1 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        r3 = $r2[i1];

        $r4 = (org.apache.batik.gvt.AbstractGraphicsNode) r3;

        virtualinvoke $r4.<org.apache.batik.gvt.AbstractGraphicsNode: void setRoot(org.apache.batik.gvt.RootGraphicsNode)>(r1);

        i1 = i1 + 1;

     label2:
        $i0 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if i1 < $i0 goto label1;

        return;
    }

    public int size()
    {
        int $i0;
        org.apache.batik.gvt.CompositeGraphicsNode r0;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        $i0 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        return $i0;
    }

    public boolean isEmpty()
    {
        int $i0;
        org.apache.batik.gvt.CompositeGraphicsNode r0;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        $i0 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean contains(java.lang.Object)
    {
        int $i0;
        java.lang.Object r1;
        org.apache.batik.gvt.CompositeGraphicsNode r0;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode: int indexOf(java.lang.Object)>(r1);

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.util.Iterator iterator()
    {
        org.apache.batik.gvt.CompositeGraphicsNode$Itr $r0;
        org.apache.batik.gvt.CompositeGraphicsNode r1;

        r1 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        $r0 = new org.apache.batik.gvt.CompositeGraphicsNode$Itr;

        specialinvoke $r0.<org.apache.batik.gvt.CompositeGraphicsNode$Itr: void <init>(org.apache.batik.gvt.CompositeGraphicsNode,org.apache.batik.gvt.CompositeGraphicsNode$1)>(r1, null);

        return $r0;
    }

    public java.lang.Object[] toArray()
    {
        org.apache.batik.gvt.GraphicsNode[] r1, $r2;
        int $i0, $i1;
        org.apache.batik.gvt.CompositeGraphicsNode r0;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        $i0 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        r1 = newarray (org.apache.batik.gvt.GraphicsNode)[$i0];

        $r2 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $i1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i1);

        return r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.lang.Object[] r2;
        org.apache.batik.gvt.CompositeGraphicsNode r0;
        org.apache.batik.gvt.GraphicsNode[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        r2 := @parameter0: java.lang.Object[];

        $i1 = lengthof r2;

        $i0 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if $i1 >= $i0 goto label1;

        $i6 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        r2 = newarray (org.apache.batik.gvt.GraphicsNode)[$i6];

     label1:
        $r1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $i2 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, r2, 0, $i2);

        $i4 = lengthof r2;

        $i3 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if $i4 <= $i3 goto label2;

        $i5 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        r2[$i5] = null;

     label2:
        return r2;
    }

    public java.lang.Object get(int)
    {
        org.apache.batik.gvt.GraphicsNode $r2;
        org.apache.batik.gvt.GraphicsNode[] $r1;
        int i0;
        org.apache.batik.gvt.CompositeGraphicsNode r0;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode: void checkRange(int)>(i0);

        $r1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $r2 = $r1[i0];

        return $r2;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        org.apache.batik.gvt.CompositeGraphicsNode r1, $r3, $r11;
        org.apache.batik.gvt.RootGraphicsNode $r9;
        java.lang.StringBuffer $r15, $r16, $r17;
        org.apache.batik.gvt.GraphicsNode[] $r4, $r5;
        int i0;
        java.lang.String $r18;
        boolean $z0;
        org.apache.batik.gvt.GraphicsNode r2, $r13;
        java.lang.IllegalArgumentException $r14;
        java.util.List $r12;
        java.lang.Object r0;
        org.apache.batik.gvt.AbstractGraphicsNode $r6, $r7, $r8, $r10;

        r1 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof org.apache.batik.gvt.GraphicsNode;

        if $z0 != 0 goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not a GraphicsNode");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r14;

     label1:
        specialinvoke r1.<org.apache.batik.gvt.CompositeGraphicsNode: void checkRange(int)>(i0);

        r2 = (org.apache.batik.gvt.GraphicsNode) r0;

        virtualinvoke r1.<org.apache.batik.gvt.AbstractGraphicsNode: void fireGraphicsNodeChangeStarted(org.apache.batik.gvt.GraphicsNode)>(r2);

        $r3 = interfaceinvoke r2.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.gvt.CompositeGraphicsNode getParent()>();

        if $r3 == null goto label2;

        $r11 = interfaceinvoke r2.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.gvt.CompositeGraphicsNode getParent()>();

        $r12 = virtualinvoke $r11.<org.apache.batik.gvt.CompositeGraphicsNode: java.util.List getChildren()>();

        interfaceinvoke $r12.<java.util.List: boolean remove(java.lang.Object)>(r2);

     label2:
        $r4 = r1.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $r13 = $r4[i0];

        $r5 = r1.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $r5[i0] = r2;

        $r6 = (org.apache.batik.gvt.AbstractGraphicsNode) r2;

        virtualinvoke $r6.<org.apache.batik.gvt.AbstractGraphicsNode: void setParent(org.apache.batik.gvt.CompositeGraphicsNode)>(r1);

        $r7 = (org.apache.batik.gvt.AbstractGraphicsNode) $r13;

        virtualinvoke $r7.<org.apache.batik.gvt.AbstractGraphicsNode: void setParent(org.apache.batik.gvt.CompositeGraphicsNode)>(null);

        $r8 = (org.apache.batik.gvt.AbstractGraphicsNode) r2;

        $r9 = virtualinvoke r1.<org.apache.batik.gvt.AbstractGraphicsNode: org.apache.batik.gvt.RootGraphicsNode getRoot()>();

        virtualinvoke $r8.<org.apache.batik.gvt.AbstractGraphicsNode: void setRoot(org.apache.batik.gvt.RootGraphicsNode)>($r9);

        $r10 = (org.apache.batik.gvt.AbstractGraphicsNode) $r13;

        virtualinvoke $r10.<org.apache.batik.gvt.AbstractGraphicsNode: void setRoot(org.apache.batik.gvt.RootGraphicsNode)>(null);

        virtualinvoke r1.<org.apache.batik.gvt.CompositeGraphicsNode: void invalidateGeometryCache()>();

        virtualinvoke r1.<org.apache.batik.gvt.AbstractGraphicsNode: void fireGraphicsNodeChangeCompleted()>();

        return $r13;
    }

    public boolean add(java.lang.Object)
    {
        org.apache.batik.gvt.CompositeGraphicsNode r2, $r3, $r8;
        org.apache.batik.gvt.RootGraphicsNode $r7;
        java.lang.StringBuffer $r11, $r12, $r13;
        org.apache.batik.gvt.GraphicsNode[] $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r14;
        boolean $z0;
        org.apache.batik.gvt.GraphicsNode r1;
        java.lang.IllegalArgumentException $r10;
        java.util.List $r9;
        java.lang.Object r0;
        org.apache.batik.gvt.AbstractGraphicsNode $r5, $r6;

        r2 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.batik.gvt.GraphicsNode;

        if $z0 != 0 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not a GraphicsNode");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r10;

     label1:
        r1 = (org.apache.batik.gvt.GraphicsNode) r0;

        virtualinvoke r2.<org.apache.batik.gvt.AbstractGraphicsNode: void fireGraphicsNodeChangeStarted(org.apache.batik.gvt.GraphicsNode)>(r1);

        $r3 = interfaceinvoke r1.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.gvt.CompositeGraphicsNode getParent()>();

        if $r3 == null goto label2;

        $r8 = interfaceinvoke r1.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.gvt.CompositeGraphicsNode getParent()>();

        $r9 = virtualinvoke $r8.<org.apache.batik.gvt.CompositeGraphicsNode: java.util.List getChildren()>();

        interfaceinvoke $r9.<java.util.List: boolean remove(java.lang.Object)>(r1);

     label2:
        $i0 = r2.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        $i1 = $i0 + 1;

        virtualinvoke r2.<org.apache.batik.gvt.CompositeGraphicsNode: void ensureCapacity(int)>($i1);

        $r4 = r2.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $i2 = r2.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        $i3 = $i2 + 1;

        r2.<org.apache.batik.gvt.CompositeGraphicsNode: int count> = $i3;

        $r4[$i2] = r1;

        $r5 = (org.apache.batik.gvt.AbstractGraphicsNode) r1;

        virtualinvoke $r5.<org.apache.batik.gvt.AbstractGraphicsNode: void setParent(org.apache.batik.gvt.CompositeGraphicsNode)>(r2);

        $r6 = (org.apache.batik.gvt.AbstractGraphicsNode) r1;

        $r7 = virtualinvoke r2.<org.apache.batik.gvt.AbstractGraphicsNode: org.apache.batik.gvt.RootGraphicsNode getRoot()>();

        virtualinvoke $r6.<org.apache.batik.gvt.AbstractGraphicsNode: void setRoot(org.apache.batik.gvt.RootGraphicsNode)>($r7);

        virtualinvoke r2.<org.apache.batik.gvt.CompositeGraphicsNode: void invalidateGeometryCache()>();

        virtualinvoke r2.<org.apache.batik.gvt.AbstractGraphicsNode: void fireGraphicsNodeChangeCompleted()>();

        return 1;
    }

    public void add(int, java.lang.Object)
    {
        java.lang.IndexOutOfBoundsException $r2;
        org.apache.batik.gvt.CompositeGraphicsNode r1, $r10, $r17;
        org.apache.batik.gvt.RootGraphicsNode $r16;
        boolean $z0;
        org.apache.batik.gvt.GraphicsNode r9;
        java.util.List $r18;
        java.lang.StringBuffer $r3, $r4, $r5, $r6, $r7, $r20, $r21, $r22;
        org.apache.batik.gvt.GraphicsNode[] $r11, $r12, $r13;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r8, $r23;
        java.lang.IllegalArgumentException $r19;
        java.lang.Object r0;
        org.apache.batik.gvt.AbstractGraphicsNode $r14, $r15;

        r1 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof org.apache.batik.gvt.GraphicsNode;

        if $z0 != 0 goto label1;

        $r19 = new java.lang.IllegalArgumentException;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not a GraphicsNode");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw $r19;

     label1:
        $i1 = r1.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if i0 > $i1 goto label2;

        if i0 >= 0 goto label3;

     label2:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Index: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", Size: ");

        $i2 = r1.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label3:
        r9 = (org.apache.batik.gvt.GraphicsNode) r0;

        virtualinvoke r1.<org.apache.batik.gvt.AbstractGraphicsNode: void fireGraphicsNodeChangeStarted(org.apache.batik.gvt.GraphicsNode)>(r9);

        $r10 = interfaceinvoke r9.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.gvt.CompositeGraphicsNode getParent()>();

        if $r10 == null goto label4;

        $r17 = interfaceinvoke r9.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.gvt.CompositeGraphicsNode getParent()>();

        $r18 = virtualinvoke $r17.<org.apache.batik.gvt.CompositeGraphicsNode: java.util.List getChildren()>();

        interfaceinvoke $r18.<java.util.List: boolean remove(java.lang.Object)>(r9);

     label4:
        $i3 = r1.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        $i4 = $i3 + 1;

        virtualinvoke r1.<org.apache.batik.gvt.CompositeGraphicsNode: void ensureCapacity(int)>($i4);

        $r12 = r1.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $r11 = r1.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $i7 = i0 + 1;

        $i5 = r1.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        $i6 = $i5 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, i0, $r11, $i7, $i6);

        $r13 = r1.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $r13[i0] = r9;

        $i8 = r1.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        $i9 = $i8 + 1;

        r1.<org.apache.batik.gvt.CompositeGraphicsNode: int count> = $i9;

        $r14 = (org.apache.batik.gvt.AbstractGraphicsNode) r9;

        virtualinvoke $r14.<org.apache.batik.gvt.AbstractGraphicsNode: void setParent(org.apache.batik.gvt.CompositeGraphicsNode)>(r1);

        $r15 = (org.apache.batik.gvt.AbstractGraphicsNode) r9;

        $r16 = virtualinvoke r1.<org.apache.batik.gvt.AbstractGraphicsNode: org.apache.batik.gvt.RootGraphicsNode getRoot()>();

        virtualinvoke $r15.<org.apache.batik.gvt.AbstractGraphicsNode: void setRoot(org.apache.batik.gvt.RootGraphicsNode)>($r16);

        virtualinvoke r1.<org.apache.batik.gvt.CompositeGraphicsNode: void invalidateGeometryCache()>();

        virtualinvoke r1.<org.apache.batik.gvt.AbstractGraphicsNode: void fireGraphicsNodeChangeCompleted()>();

        return;
    }

    public boolean addAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.batik.gvt.CompositeGraphicsNode r1;
        java.util.Collection r2;

        r1 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean addAll(int, java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        java.util.Collection r2;
        int i0;
        org.apache.batik.gvt.CompositeGraphicsNode r1;

        r1 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        i0 := @parameter0: int;

        r2 := @parameter1: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean remove(java.lang.Object)
    {
        org.apache.batik.gvt.GraphicsNode r1, $r5;
        java.lang.IllegalArgumentException $r6;
        org.apache.batik.gvt.CompositeGraphicsNode $r2, r3;
        java.lang.StringBuffer $r7, $r8, $r9;
        org.apache.batik.gvt.GraphicsNode[] $r4;
        int i0;
        java.lang.Object r0;
        java.lang.String $r10;
        boolean $z0;

        r3 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.batik.gvt.GraphicsNode;

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not a GraphicsNode");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label1:
        r1 = (org.apache.batik.gvt.GraphicsNode) r0;

        $r2 = interfaceinvoke r1.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.gvt.CompositeGraphicsNode getParent()>();

        if $r2 == r3 goto label2;

        return 0;

     label2:
        i0 = 0;

        goto label4;

     label3:
        i0 = i0 + 1;

     label4:
        $r4 = r3.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $r5 = $r4[i0];

        if r1 != $r5 goto label3;

        virtualinvoke r3.<org.apache.batik.gvt.CompositeGraphicsNode: java.lang.Object remove(int)>(i0);

        return 1;
    }

    public java.lang.Object remove(int)
    {
        org.apache.batik.gvt.CompositeGraphicsNode r0;
        org.apache.batik.gvt.GraphicsNode[] $r1, $r3, $r6, $r7;
        int i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9;
        org.apache.batik.gvt.GraphicsNode r2;
        org.apache.batik.gvt.AbstractGraphicsNode $r4, $r5;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode: void checkRange(int)>(i0);

        $r1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        r2 = $r1[i0];

        virtualinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: void fireGraphicsNodeChangeStarted(org.apache.batik.gvt.GraphicsNode)>(r2);

        $i1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int modCount>;

        $i2 = $i1 + 1;

        r0.<org.apache.batik.gvt.CompositeGraphicsNode: int modCount> = $i2;

        $i3 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        $i4 = $i3 - i0;

        i5 = $i4 - 1;

        if i5 <= 0 goto label1;

        $r7 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $i9 = i0 + 1;

        $r6 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, $i9, $r6, i0, i5);

     label1:
        $r3 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $i6 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        $i7 = $i6 - 1;

        r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count> = $i7;

        $r3[$i7] = null;

        $i8 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if $i8 != 0 goto label2;

        r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children> = null;

     label2:
        $r4 = (org.apache.batik.gvt.AbstractGraphicsNode) r2;

        virtualinvoke $r4.<org.apache.batik.gvt.AbstractGraphicsNode: void setParent(org.apache.batik.gvt.CompositeGraphicsNode)>(null);

        $r5 = (org.apache.batik.gvt.AbstractGraphicsNode) r2;

        virtualinvoke $r5.<org.apache.batik.gvt.AbstractGraphicsNode: void setRoot(org.apache.batik.gvt.RootGraphicsNode)>(null);

        virtualinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode: void invalidateGeometryCache()>();

        virtualinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: void fireGraphicsNodeChangeCompleted()>();

        return r2;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.batik.gvt.CompositeGraphicsNode r1;
        java.util.Collection r2;

        r1 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.batik.gvt.CompositeGraphicsNode r1;
        java.util.Collection r2;

        r1 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void clear()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.batik.gvt.CompositeGraphicsNode r1;

        r1 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean containsAll(java.util.Collection)
    {
        java.util.Iterator $r1;
        java.util.Collection r0;
        java.lang.Object $r3;
        boolean $z0, $z1;
        org.apache.batik.gvt.CompositeGraphicsNode r2;

        r2 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        r0 := @parameter0: java.util.Collection;

        $r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $z1 = virtualinvoke r2.<org.apache.batik.gvt.CompositeGraphicsNode: boolean contains(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return 1;
    }

    public int indexOf(java.lang.Object)
    {
        org.apache.batik.gvt.GraphicsNode $r1, $r5;
        org.apache.batik.gvt.CompositeGraphicsNode $r2, r3;
        org.apache.batik.gvt.GraphicsNode[] r4;
        int i0, i1, $i3, $i5;
        java.lang.Object r0;
        boolean $z0;

        r3 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $z0 = r0 instanceof org.apache.batik.gvt.GraphicsNode;

        if $z0 != 0 goto label2;

     label1:
        $i3 = (int) -1;

        return $i3;

     label2:
        $r1 = (org.apache.batik.gvt.GraphicsNode) r0;

        $r2 = interfaceinvoke $r1.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.gvt.CompositeGraphicsNode getParent()>();

        if $r2 != r3 goto label6;

        i0 = r3.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        r4 = r3.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        i1 = 0;

        goto label5;

     label3:
        $r5 = r4[i1];

        if r0 != $r5 goto label4;

        return i1;

     label4:
        i1 = i1 + 1;

     label5:
        if i1 < i0 goto label3;

     label6:
        $i5 = (int) -1;

        return $i5;
    }

    public int lastIndexOf(java.lang.Object)
    {
        org.apache.batik.gvt.GraphicsNode $r1, $r5;
        org.apache.batik.gvt.CompositeGraphicsNode $r2, r3;
        org.apache.batik.gvt.GraphicsNode[] $r4;
        int $i0, i1, $i3, $i5, $i7;
        java.lang.Object r0;
        boolean $z0;

        r3 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $z0 = r0 instanceof org.apache.batik.gvt.GraphicsNode;

        if $z0 != 0 goto label2;

     label1:
        $i3 = (int) -1;

        return $i3;

     label2:
        $r1 = (org.apache.batik.gvt.GraphicsNode) r0;

        $r2 = interfaceinvoke $r1.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.gvt.CompositeGraphicsNode getParent()>();

        if $r2 != r3 goto label6;

        $i0 = r3.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        i1 = $i0 - 1;

        goto label5;

     label3:
        $r4 = r3.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $r5 = $r4[i1];

        if r0 != $r5 goto label4;

        return i1;

     label4:
        $i5 = (int) -1;

        i1 = i1 + $i5;

     label5:
        if i1 >= 0 goto label3;

     label6:
        $i7 = (int) -1;

        return $i7;
    }

    public java.util.ListIterator listIterator()
    {
        java.util.ListIterator $r1;
        org.apache.batik.gvt.CompositeGraphicsNode r0;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        $r1 = virtualinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.util.ListIterator listIterator(int)>(0);

        return $r1;
    }

    public java.util.ListIterator listIterator(int)
    {
        org.apache.batik.gvt.CompositeGraphicsNode$ListItr $r6;
        java.lang.IndexOutOfBoundsException $r0;
        org.apache.batik.gvt.CompositeGraphicsNode r5;
        java.lang.StringBuffer $r1, $r2, $r3;
        int i0, $i1;
        java.lang.String $r4;

        r5 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = r5.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if i0 <= $i1 goto label2;

     label1:
        $r0 = new java.lang.IndexOutOfBoundsException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Index: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label2:
        $r6 = new org.apache.batik.gvt.CompositeGraphicsNode$ListItr;

        specialinvoke $r6.<org.apache.batik.gvt.CompositeGraphicsNode$ListItr: void <init>(org.apache.batik.gvt.CompositeGraphicsNode,int)>(r5, i0);

        return $r6;
    }

    public java.util.List subList(int, int)
    {
        java.lang.UnsupportedOperationException $r0;
        int i0, i1;
        org.apache.batik.gvt.CompositeGraphicsNode r1;

        r1 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    private void checkRange(int)
    {
        java.lang.IndexOutOfBoundsException $r1;
        org.apache.batik.gvt.CompositeGraphicsNode r0;
        java.lang.StringBuffer $r2, $r3, $r4, $r5, $r6;
        int i0, $i1, $i2;
        java.lang.String $r7;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if i0 >= $i1 goto label1;

        if i0 >= 0 goto label2;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Index: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", Size: ");

        $i2 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r1;

     label2:
        return;
    }

    public void ensureCapacity(int)
    {
        org.apache.batik.gvt.CompositeGraphicsNode r0;
        org.apache.batik.gvt.GraphicsNode[] $r1, $r2, r3, $r4, $r5, $r6;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, i7;

        r0 := @this: org.apache.batik.gvt.CompositeGraphicsNode;

        i2 := @parameter0: int;

        $r1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        if $r1 != null goto label1;

        $r6 = newarray (org.apache.batik.gvt.GraphicsNode)[4];

        r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children> = $r6;

     label1:
        $i0 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int modCount>;

        $i1 = $i0 + 1;

        r0.<org.apache.batik.gvt.CompositeGraphicsNode: int modCount> = $i1;

        $r2 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $i6 = lengthof $r2;

        if i2 <= $i6 goto label3;

        r3 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $i3 = $i6 / 2;

        $i4 = $i6 + $i3;

        i7 = $i4 + 1;

        if i7 >= i2 goto label2;

        i7 = i2;

     label2:
        $r4 = newarray (org.apache.batik.gvt.GraphicsNode)[i7];

        r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children> = $r4;

        $r5 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $i5 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, $r5, 0, $i5);

     label3:
        return;
    }

    static void <clinit>()
    {
        java.awt.Rectangle $r0, $r1;

        $r0 = new java.awt.Rectangle;

        specialinvoke $r0.<java.awt.Rectangle: void <init>()>();

        <org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D VIEWPORT> = $r0;

        $r1 = new java.awt.Rectangle;

        specialinvoke $r1.<java.awt.Rectangle: void <init>()>();

        <org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D NULL_RECT> = $r1;

        return;
    }
}
