class com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Leader extends com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Siblings
{
    final java.util.Set components;

    void <init>(java.util.Set)
    {
        java.util.Set r1;
        com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Leader r0;

        r0 := @this: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Leader;

        r1 := @parameter0: java.util.Set;

        specialinvoke r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Siblings: void <init>()>();

        r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Leader: java.util.Set components> = r1;

        return;
    }

    java.util.Set members()
    {
        java.util.Set $r1;
        com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Leader r0;

        r0 := @this: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Leader;

        $r1 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Leader: java.util.Set components>;

        return $r1;
    }

    void addInto(java.util.Set, com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode)
    {
        com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode r3;
        java.util.Set r0, $r2;
        com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Leader r1;

        r1 := @this: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Leader;

        r0 := @parameter0: java.util.Set;

        r3 := @parameter1: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode;

        $r2 = r1.<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Leader: java.util.Set components>;

        interfaceinvoke r0.<java.util.Set: boolean addAll(java.util.Collection)>($r2);

        return;
    }

    void addSuccessors(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache, java.util.ArrayList)
    {
        com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode $r9;
        java.util.Iterator $r2;
        java.util.Set $r1;
        com.hp.hpl.jena.graph.Node r5, $r7, $r10;
        com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache r6;
        com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Leader r0;
        java.util.ArrayList r3;
        com.hp.hpl.jena.graph.Triple $r4;
        java.lang.Object $r8;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Leader;

        r5 := @parameter0: com.hp.hpl.jena.graph.Node;

        r6 := @parameter1: com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache;

        r3 := @parameter2: java.util.ArrayList;

        $r1 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Leader: java.util.Set components>;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = new com.hp.hpl.jena.graph.Triple;

        $r7 = r6.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache: com.hp.hpl.jena.graph.Node closedPredicate>;

        $r8 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode) $r8;

        $r10 = $r9.<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode: com.hp.hpl.jena.graph.Node rdfNode>;

        specialinvoke $r4.<com.hp.hpl.jena.graph.Triple: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r5, $r7, $r10);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        return;
    }

    java.util.Iterator siblingIterator()
    {
        java.util.Set $r1;
        java.util.Iterator $r2;
        com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Leader r0;

        r0 := @this: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Leader;

        $r1 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Leader: java.util.Set components>;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        return $r2;
    }

    java.lang.String dump()
    {
        java.util.Set $r3;
        com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Leader r2;
        java.lang.StringBuilder $r0, $r1, $r5, $r6;
        java.lang.String $r4, $r7;

        r2 := @this: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Leader;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" SCC=");

        $r3 = r2.<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode$Leader: java.util.Set components>;

        $r4 = staticinvoke <com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode: java.lang.String access$000(java.util.Set)>($r3);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
