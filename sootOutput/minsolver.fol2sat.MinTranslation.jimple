public final class minsolver.fol2sat.MinTranslation extends java.lang.Object
{
    private final kodkod.instance.Bounds bounds;
    private final minsolver.MinSATSolver solver;
    private final java.util.Map primaryVarUsage;
    private final minsolver.fol2sat.MinTranslationLog log;
    private final int maxPrimaryLit;
    public final java.util.Set symmetries;
    public final java.util.Set permutations;

    void <init>(minsolver.MinSATSolver, kodkod.instance.Bounds, java.util.Map, int, minsolver.fol2sat.MinTranslationLog, java.util.Set, java.util.Set)
    {
        java.util.Set r5, r6;
        minsolver.fol2sat.MinTranslation r0;
        kodkod.instance.Bounds r2;
        java.util.Map r3;
        int i0;
        minsolver.MinSATSolver r1;
        minsolver.fol2sat.MinTranslationLog r4;

        r0 := @this: minsolver.fol2sat.MinTranslation;

        r1 := @parameter0: minsolver.MinSATSolver;

        r2 := @parameter1: kodkod.instance.Bounds;

        r3 := @parameter2: java.util.Map;

        i0 := @parameter3: int;

        r4 := @parameter4: minsolver.fol2sat.MinTranslationLog;

        r5 := @parameter5: java.util.Set;

        r6 := @parameter6: java.util.Set;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<minsolver.fol2sat.MinTranslation: minsolver.MinSATSolver solver> = r1;

        r0.<minsolver.fol2sat.MinTranslation: kodkod.instance.Bounds bounds> = r2;

        r0.<minsolver.fol2sat.MinTranslation: java.util.Map primaryVarUsage> = r3;

        r0.<minsolver.fol2sat.MinTranslation: int maxPrimaryLit> = i0;

        r0.<minsolver.fol2sat.MinTranslation: minsolver.fol2sat.MinTranslationLog log> = r4;

        r0.<minsolver.fol2sat.MinTranslation: java.util.Set symmetries> = r5;

        r0.<minsolver.fol2sat.MinTranslation: java.util.Set permutations> = r6;

        return;
    }

    public minsolver.MinSATSolver cnf()
    {
        minsolver.fol2sat.MinTranslation r0;
        minsolver.MinSATSolver $r1;

        r0 := @this: minsolver.fol2sat.MinTranslation;

        $r1 = r0.<minsolver.fol2sat.MinTranslation: minsolver.MinSATSolver solver>;

        return $r1;
    }

    public kodkod.instance.Instance interpret()
    {
        minsolver.fol2sat.MinTranslation r0;
        kodkod.util.ints.IntIterator $r23;
        kodkod.instance.Bounds $r1, $r5, $r7, $r12, $r20;
        java.util.Map $r16;
        minsolver.MinSATSolver $r24;
        boolean $z0, $z1, $z2, $z3;
        java.util.Set $r8;
        kodkod.ast.Relation r11;
        kodkod.instance.Instance $r4;
        int $i0, $i1, $i2, $i3, i4;
        kodkod.instance.Universe $r2, $r6;
        kodkod.instance.TupleFactory $r3;
        kodkod.instance.TupleSet $r13, $r19, $r21;
        java.util.Iterator $r9;
        kodkod.util.ints.IntSet $r14, $r15, r18, $r22;
        java.lang.Object $r10, $r17;

        r0 := @this: minsolver.fol2sat.MinTranslation;

        $r1 = r0.<minsolver.fol2sat.MinTranslation: kodkod.instance.Bounds bounds>;

        $r2 = virtualinvoke $r1.<kodkod.instance.Bounds: kodkod.instance.Universe universe()>();

        $r3 = virtualinvoke $r2.<kodkod.instance.Universe: kodkod.instance.TupleFactory factory()>();

        $r4 = new kodkod.instance.Instance;

        $r5 = r0.<minsolver.fol2sat.MinTranslation: kodkod.instance.Bounds bounds>;

        $r6 = virtualinvoke $r5.<kodkod.instance.Bounds: kodkod.instance.Universe universe()>();

        specialinvoke $r4.<kodkod.instance.Instance: void <init>(kodkod.instance.Universe)>($r6);

        $r7 = r0.<minsolver.fol2sat.MinTranslation: kodkod.instance.Bounds bounds>;

        $r8 = virtualinvoke $r7.<kodkod.instance.Bounds: java.util.Set relations()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

        goto label5;

     label1:
        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (kodkod.ast.Relation) $r10;

        $r12 = r0.<minsolver.fol2sat.MinTranslation: kodkod.instance.Bounds bounds>;

        $r13 = virtualinvoke $r12.<kodkod.instance.Bounds: kodkod.instance.TupleSet lowerBound(kodkod.ast.Relation)>(r11);

        $i0 = virtualinvoke $r13.<kodkod.instance.TupleSet: int capacity()>();

        $r14 = staticinvoke <kodkod.util.ints.Ints: kodkod.util.ints.IntSet bestSet(int)>($i0);

        $r15 = virtualinvoke $r13.<kodkod.instance.TupleSet: kodkod.util.ints.IntSet indexView()>();

        interfaceinvoke $r14.<kodkod.util.ints.IntSet: boolean addAll(kodkod.util.ints.IntCollection)>($r15);

        $r16 = r0.<minsolver.fol2sat.MinTranslation: java.util.Map primaryVarUsage>;

        $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11);

        r18 = (kodkod.util.ints.IntSet) $r17;

        if r18 == null goto label4;

        i4 = interfaceinvoke r18.<kodkod.util.ints.IntSet: int min()>();

        $r20 = r0.<minsolver.fol2sat.MinTranslation: kodkod.instance.Bounds bounds>;

        $r21 = virtualinvoke $r20.<kodkod.instance.Bounds: kodkod.instance.TupleSet upperBound(kodkod.ast.Relation)>(r11);

        $r22 = virtualinvoke $r21.<kodkod.instance.TupleSet: kodkod.util.ints.IntSet indexView()>();

        $r23 = interfaceinvoke $r22.<kodkod.util.ints.IntSet: kodkod.util.ints.IntIterator iterator()>();

        goto label3;

     label2:
        $i2 = interfaceinvoke $r23.<kodkod.util.ints.IntIterator: int next()>();

        $z0 = interfaceinvoke $r14.<kodkod.util.ints.IntSet: boolean contains(int)>($i2);

        if $z0 != 0 goto label3;

        $r24 = r0.<minsolver.fol2sat.MinTranslation: minsolver.MinSATSolver solver>;

        $i3 = i4;

        i4 = i4 + 1;

        $z1 = virtualinvoke $r24.<minsolver.MinSATSolver: boolean valueOf(int)>($i3);

        if $z1 == 0 goto label3;

        interfaceinvoke $r14.<kodkod.util.ints.IntSet: boolean add(int)>($i2);

     label3:
        $z2 = interfaceinvoke $r23.<kodkod.util.ints.IntIterator: boolean hasNext()>();

        if $z2 != 0 goto label2;

     label4:
        $i1 = virtualinvoke r11.<kodkod.ast.Relation: int arity()>();

        $r19 = virtualinvoke $r3.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet setOf(int,kodkod.util.ints.IntSet)>($i1, $r14);

        virtualinvoke $r4.<kodkod.instance.Instance: void add(kodkod.ast.Relation,kodkod.instance.TupleSet)>(r11, $r19);

     label5:
        $z3 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label1;

        return $r4;
    }

    public kodkod.util.ints.IntSet primaryVariables(kodkod.ast.Relation)
    {
        java.util.Map $r2;
        kodkod.util.ints.IntSet $r4;
        minsolver.fol2sat.MinTranslation r0;
        java.lang.Object $r3;
        kodkod.ast.Relation r1;

        r0 := @this: minsolver.fol2sat.MinTranslation;

        r1 := @parameter0: kodkod.ast.Relation;

        $r2 = r0.<minsolver.fol2sat.MinTranslation: java.util.Map primaryVarUsage>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (kodkod.util.ints.IntSet) $r3;

        return $r4;
    }

    public int numPrimaryVariables()
    {
        int $i0;
        minsolver.fol2sat.MinTranslation r0;

        r0 := @this: minsolver.fol2sat.MinTranslation;

        $i0 = r0.<minsolver.fol2sat.MinTranslation: int maxPrimaryLit>;

        return $i0;
    }

    public minsolver.fol2sat.MinTranslationLog log()
    {
        minsolver.fol2sat.MinTranslation r0;
        minsolver.fol2sat.MinTranslationLog $r1;

        r0 := @this: minsolver.fol2sat.MinTranslation;

        $r1 = r0.<minsolver.fol2sat.MinTranslation: minsolver.fol2sat.MinTranslationLog log>;

        return $r1;
    }
}
