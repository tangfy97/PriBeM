public class org.apache.commons.configuration.PropertiesConfiguration extends org.apache.commons.configuration.AbstractFileConfiguration
{
    static final java.lang.String COMMENT_CHARS;
    private static java.lang.String include;
    private static final char[] SEPARATORS;
    private static final char[] WHITE_SPACE;
    private static final java.lang.String DEFAULT_ENCODING;
    private static final java.lang.String LINE_SEPARATOR;
    private static final java.lang.String ESCAPE;
    private static final int HEX_RADIX;
    private static final int UNICODE_LEN;
    private org.apache.commons.configuration.PropertiesConfigurationLayout layout;
    private boolean includesAllowed;

    public void <init>()
    {
        org.apache.commons.configuration.PropertiesConfiguration r0;
        org.apache.commons.configuration.PropertiesConfigurationLayout $r1;

        r0 := @this: org.apache.commons.configuration.PropertiesConfiguration;

        specialinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void <init>()>();

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration: org.apache.commons.configuration.PropertiesConfigurationLayout createLayout()>();

        r0.<org.apache.commons.configuration.PropertiesConfiguration: org.apache.commons.configuration.PropertiesConfigurationLayout layout> = $r1;

        virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration: void setIncludesAllowed(boolean)>(0);

        return;
    }

    public void <init>(java.lang.String) throws org.apache.commons.configuration.ConfigurationException
    {
        java.lang.String r1;
        org.apache.commons.configuration.PropertiesConfiguration r0;

        r0 := @this: org.apache.commons.configuration.PropertiesConfiguration;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.io.File) throws org.apache.commons.configuration.ConfigurationException
    {
        org.apache.commons.configuration.PropertiesConfiguration r0;
        java.io.File r1;

        r0 := @this: org.apache.commons.configuration.PropertiesConfiguration;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void <init>(java.io.File)>(r1);

        virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration: org.apache.commons.configuration.PropertiesConfigurationLayout getLayout()>();

        return;
    }

    public void <init>(java.net.URL) throws org.apache.commons.configuration.ConfigurationException
    {
        org.apache.commons.configuration.PropertiesConfiguration r0;
        java.net.URL r1;

        r0 := @this: org.apache.commons.configuration.PropertiesConfiguration;

        r1 := @parameter0: java.net.URL;

        specialinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void <init>(java.net.URL)>(r1);

        return;
    }

    public static java.lang.String getInclude()
    {
        java.lang.String $r0;

        $r0 = <org.apache.commons.configuration.PropertiesConfiguration: java.lang.String include>;

        return $r0;
    }

    public static void setInclude(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        <org.apache.commons.configuration.PropertiesConfiguration: java.lang.String include> = r0;

        return;
    }

    protected void setIncludesAllowed(boolean)
    {
        org.apache.commons.configuration.PropertiesConfiguration r0;
        boolean z0;

        r0 := @this: org.apache.commons.configuration.PropertiesConfiguration;

        z0 := @parameter0: boolean;

        r0.<org.apache.commons.configuration.PropertiesConfiguration: boolean includesAllowed> = z0;

        return;
    }

    public boolean getIncludesAllowed()
    {
        org.apache.commons.configuration.PropertiesConfiguration r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.PropertiesConfiguration;

        $z0 = r0.<org.apache.commons.configuration.PropertiesConfiguration: boolean includesAllowed>;

        return $z0;
    }

    public java.lang.String getHeader()
    {
        java.lang.String $r2;
        org.apache.commons.configuration.PropertiesConfiguration r0;
        org.apache.commons.configuration.PropertiesConfigurationLayout $r1;

        r0 := @this: org.apache.commons.configuration.PropertiesConfiguration;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration: org.apache.commons.configuration.PropertiesConfigurationLayout getLayout()>();

        $r2 = virtualinvoke $r1.<org.apache.commons.configuration.PropertiesConfigurationLayout: java.lang.String getHeaderComment()>();

        return $r2;
    }

    public void setHeader(java.lang.String)
    {
        java.lang.String r2;
        org.apache.commons.configuration.PropertiesConfiguration r0;
        org.apache.commons.configuration.PropertiesConfigurationLayout $r1;

        r0 := @this: org.apache.commons.configuration.PropertiesConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration: org.apache.commons.configuration.PropertiesConfigurationLayout getLayout()>();

        virtualinvoke $r1.<org.apache.commons.configuration.PropertiesConfigurationLayout: void setHeaderComment(java.lang.String)>(r2);

        return;
    }

    public java.lang.String getEncoding()
    {
        java.lang.String $r1, $r2;
        org.apache.commons.configuration.PropertiesConfiguration r0;

        r0 := @this: org.apache.commons.configuration.PropertiesConfiguration;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.String getEncoding()>();

        if $r1 == null goto label1;

        $r2 = $r1;

        goto label2;

     label1:
        $r2 = "ISO-8859-1";

     label2:
        return $r2;
    }

    public synchronized org.apache.commons.configuration.PropertiesConfigurationLayout getLayout()
    {
        org.apache.commons.configuration.PropertiesConfigurationLayout $r1, $r2, $r3;
        org.apache.commons.configuration.PropertiesConfiguration r0;

        r0 := @this: org.apache.commons.configuration.PropertiesConfiguration;

        $r1 = r0.<org.apache.commons.configuration.PropertiesConfiguration: org.apache.commons.configuration.PropertiesConfigurationLayout layout>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration: org.apache.commons.configuration.PropertiesConfigurationLayout createLayout()>();

        r0.<org.apache.commons.configuration.PropertiesConfiguration: org.apache.commons.configuration.PropertiesConfigurationLayout layout> = $r3;

     label1:
        $r2 = r0.<org.apache.commons.configuration.PropertiesConfiguration: org.apache.commons.configuration.PropertiesConfigurationLayout layout>;

        return $r2;
    }

    public synchronized void setLayout(org.apache.commons.configuration.PropertiesConfigurationLayout)
    {
        org.apache.commons.configuration.PropertiesConfigurationLayout $r1, r2, $r3, $r4;
        org.apache.commons.configuration.PropertiesConfiguration r0;

        r0 := @this: org.apache.commons.configuration.PropertiesConfiguration;

        r2 := @parameter0: org.apache.commons.configuration.PropertiesConfigurationLayout;

        $r1 = r0.<org.apache.commons.configuration.PropertiesConfiguration: org.apache.commons.configuration.PropertiesConfigurationLayout layout>;

        if $r1 == null goto label1;

        $r4 = r0.<org.apache.commons.configuration.PropertiesConfiguration: org.apache.commons.configuration.PropertiesConfigurationLayout layout>;

        virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration: boolean removeConfigurationListener(org.apache.commons.configuration.event.ConfigurationListener)>($r4);

     label1:
        if r2 != null goto label2;

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration: org.apache.commons.configuration.PropertiesConfigurationLayout createLayout()>();

        r0.<org.apache.commons.configuration.PropertiesConfiguration: org.apache.commons.configuration.PropertiesConfigurationLayout layout> = $r3;

        goto label3;

     label2:
        r0.<org.apache.commons.configuration.PropertiesConfiguration: org.apache.commons.configuration.PropertiesConfigurationLayout layout> = r2;

     label3:
        return;
    }

    protected org.apache.commons.configuration.PropertiesConfigurationLayout createLayout()
    {
        org.apache.commons.configuration.PropertiesConfiguration r1;
        org.apache.commons.configuration.PropertiesConfigurationLayout $r0;

        r1 := @this: org.apache.commons.configuration.PropertiesConfiguration;

        $r0 = new org.apache.commons.configuration.PropertiesConfigurationLayout;

        specialinvoke $r0.<org.apache.commons.configuration.PropertiesConfigurationLayout: void <init>(org.apache.commons.configuration.PropertiesConfiguration)>(r1);

        return $r0;
    }

    public synchronized void load(java.io.Reader) throws org.apache.commons.configuration.ConfigurationException
    {
        java.lang.Throwable $r3;
        org.apache.commons.configuration.PropertiesConfigurationLayout $r1;
        java.io.Reader r2;
        org.apache.commons.configuration.PropertiesConfiguration r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.PropertiesConfiguration;

        r2 := @parameter0: java.io.Reader;

        $z0 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration: boolean isAutoSave()>();

        virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration: void setAutoSave(boolean)>(0);

     label1:
        $r1 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration: org.apache.commons.configuration.PropertiesConfigurationLayout getLayout()>();

        virtualinvoke $r1.<org.apache.commons.configuration.PropertiesConfigurationLayout: void load(java.io.Reader)>(r2);

     label2:
        virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration: void setAutoSave(boolean)>($z0);

        goto label5;

     label3:
        $r3 := @caughtexception;

     label4:
        virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration: void setAutoSave(boolean)>($z0);

        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void save(java.io.Writer) throws org.apache.commons.configuration.ConfigurationException
    {
        java.lang.Throwable $r3;
        org.apache.commons.configuration.PropertiesConfigurationLayout $r1;
        java.io.Writer r2;
        org.apache.commons.configuration.PropertiesConfiguration r0;

        r0 := @this: org.apache.commons.configuration.PropertiesConfiguration;

        r2 := @parameter0: java.io.Writer;

        virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration: void enterNoReload()>();

     label1:
        $r1 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration: org.apache.commons.configuration.PropertiesConfigurationLayout getLayout()>();

        virtualinvoke $r1.<org.apache.commons.configuration.PropertiesConfigurationLayout: void save(java.io.Writer)>(r2);

     label2:
        virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration: void exitNoReload()>();

        goto label5;

     label3:
        $r3 := @caughtexception;

     label4:
        virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration: void exitNoReload()>();

        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setBasePath(java.lang.String)
    {
        java.lang.String r1;
        org.apache.commons.configuration.PropertiesConfiguration r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.PropertiesConfiguration;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: void setBasePath(java.lang.String)>(r1);

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration: void setIncludesAllowed(boolean)>($z0);

        return;
    }

    public java.lang.Object clone()
    {
        org.apache.commons.configuration.PropertiesConfigurationLayout $r3, $r4, $r5;
        java.lang.Object $r1;
        org.apache.commons.configuration.PropertiesConfiguration r0, r2;

        r0 := @this: org.apache.commons.configuration.PropertiesConfiguration;

        $r1 = specialinvoke r0.<org.apache.commons.configuration.AbstractFileConfiguration: java.lang.Object clone()>();

        r2 = (org.apache.commons.configuration.PropertiesConfiguration) $r1;

        $r3 = r0.<org.apache.commons.configuration.PropertiesConfiguration: org.apache.commons.configuration.PropertiesConfigurationLayout layout>;

        if $r3 == null goto label1;

        $r4 = new org.apache.commons.configuration.PropertiesConfigurationLayout;

        $r5 = r0.<org.apache.commons.configuration.PropertiesConfiguration: org.apache.commons.configuration.PropertiesConfigurationLayout layout>;

        specialinvoke $r4.<org.apache.commons.configuration.PropertiesConfigurationLayout: void <init>(org.apache.commons.configuration.PropertiesConfiguration,org.apache.commons.configuration.PropertiesConfigurationLayout)>(r2, $r5);

        virtualinvoke r2.<org.apache.commons.configuration.PropertiesConfiguration: void setLayout(org.apache.commons.configuration.PropertiesConfigurationLayout)>($r4);

     label1:
        return r2;
    }

    boolean propertyLoaded(java.lang.String, java.lang.String) throws org.apache.commons.configuration.ConfigurationException
    {
        java.lang.String[] $r5, r9;
        int i1, $i2;
        java.lang.String $r0, r2, r3, $r4, $r6, $r7, $r8;
        org.apache.commons.configuration.PropertiesConfiguration r1;
        boolean $z0, $z1, $z2, $z3, z4;
        char $c0;

        r1 := @this: org.apache.commons.configuration.PropertiesConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = staticinvoke <org.apache.commons.configuration.PropertiesConfiguration: java.lang.String getInclude()>();

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r0);

        if $z0 == 0 goto label5;

        $r4 = staticinvoke <org.apache.commons.configuration.PropertiesConfiguration: java.lang.String getInclude()>();

        $z1 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        if $z1 == 0 goto label5;

        $z2 = virtualinvoke r1.<org.apache.commons.configuration.PropertiesConfiguration: boolean getIncludesAllowed()>();

        if $z2 == 0 goto label4;

        $z3 = virtualinvoke r1.<org.apache.commons.configuration.PropertiesConfiguration: boolean isDelimiterParsingDisabled()>();

        if $z3 != 0 goto label1;

        $c0 = virtualinvoke r1.<org.apache.commons.configuration.PropertiesConfiguration: char getListDelimiter()>();

        r9 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String[] split(java.lang.String,char)>(r3, $c0);

        goto label2;

     label1:
        $r5 = newarray (java.lang.String)[1];

        $r5[0] = r3;

        r9 = $r5;

     label2:
        i1 = 0;

     label3:
        $i2 = lengthof r9;

        if i1 >= $i2 goto label4;

        $r6 = r9[i1];

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $r8 = virtualinvoke r1.<org.apache.commons.configuration.PropertiesConfiguration: java.lang.String interpolate(java.lang.String)>($r7);

        specialinvoke r1.<org.apache.commons.configuration.PropertiesConfiguration: void loadIncludeFile(java.lang.String)>($r8);

        i1 = i1 + 1;

        goto label3;

     label4:
        z4 = 0;

        goto label6;

     label5:
        virtualinvoke r1.<org.apache.commons.configuration.PropertiesConfiguration: void addProperty(java.lang.String,java.lang.Object)>(r2, r3);

        z4 = 1;

     label6:
        return z4;
    }

    static boolean isCommentLine(java.lang.String)
    {
        char $c1;
        int $i0, $i2, $i3;
        java.lang.String r0, $r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 < 1 goto label1;

        $r2 = "#!";

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $i3 = (int) $c1;

        $i2 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>($i3);

        if $i2 < 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    protected static java.lang.String unescapeJava(java.lang.String, char)
    {
        boolean z0, z1, z2, z3;
        java.lang.StringBuffer $r8, $r9, $r11, $r12, $r13;
        int $i0, $i3, $i4, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        java.lang.String r0, $r3, $r4, $r10;
        char $c1, c2, $c5;
        java.lang.NumberFormatException $r5;
        org.apache.commons.configuration.ConfigurationRuntimeException $r14;

        r0 := @parameter0: java.lang.String;

        c2 := @parameter1: char;

        if r0 != null goto label01;

        return null;

     label01:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>(int)>($i0);

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>(int)>(4);

        z0 = 0;

        z3 = 0;

        z2 = 0;

        z1 = 0;

        i6 = 0;

     label02:
        if i6 >= $i0 goto label20;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        if z1 == 0 goto label06;

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        $i3 = virtualinvoke $r12.<java.lang.StringBuffer: int length()>();

        if $i3 != 4 goto label19;

     label03:
        $r4 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r4, 16);

        $c5 = (char) $i4;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5);

        virtualinvoke $r12.<java.lang.StringBuffer: void setLength(int)>(0);

        z1 = 0;

        z0 = 0;

        z3 = 0;

        z2 = 0;

     label04:
        goto label19;

     label05:
        $r5 := @caughtexception;

        $r14 = new org.apache.commons.configuration.ConfigurationRuntimeException;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to parse unicode value: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r12);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r14.<org.apache.commons.configuration.ConfigurationRuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r10, $r5);

        throw $r14;

     label06:
        if z2 == 0 goto label17;

        z0 = 0;

        z3 = 0;

        z2 = 0;

        $i7 = (int) $c1;

        if $i7 != 92 goto label07;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

        goto label19;

     label07:
        $i8 = (int) $c1;

        if $i8 != 39 goto label08;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        goto label19;

     label08:
        $i9 = (int) $c1;

        if $i9 != 34 goto label09;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        goto label19;

     label09:
        $i10 = (int) $c1;

        if $i10 != 114 goto label10;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(13);

        goto label19;

     label10:
        $i11 = (int) $c1;

        if $i11 != 102 goto label11;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(12);

        goto label19;

     label11:
        $i12 = (int) $c1;

        if $i12 != 116 goto label12;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(9);

        goto label19;

     label12:
        $i13 = (int) $c1;

        if $i13 != 110 goto label13;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        goto label19;

     label13:
        $i14 = (int) $c1;

        if $i14 != 98 goto label14;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(8);

        goto label19;

     label14:
        $i15 = (int) $c1;

        $i16 = (int) c2;

        if $i15 != $i16 goto label15;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c2);

        goto label19;

     label15:
        $i17 = (int) $c1;

        if $i17 != 117 goto label16;

        z1 = 1;

        goto label19;

     label16:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        goto label19;

     label17:
        $i18 = (int) $c1;

        if $i18 != 92 goto label18;

        z0 = 1;

        z3 = 1;

        z2 = 1;

        goto label19;

     label18:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

     label19:
        i6 = i6 + 1;

        goto label02;

     label20:
        if z3 == 0 goto label21;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

     label21:
        $r3 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;

        catch java.lang.NumberFormatException from label03 to label04 with label05;
    }

    private void loadIncludeFile(java.lang.String) throws org.apache.commons.configuration.ConfigurationException
    {
        java.net.URL $r3, $r9, r11;
        java.lang.StringBuffer $r5, $r6, $r7;
        java.lang.String $r1, r2, $r8, $r10;
        org.apache.commons.configuration.PropertiesConfiguration r0;
        org.apache.commons.configuration.ConfigurationException $r4;

        r0 := @this: org.apache.commons.configuration.PropertiesConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration: java.lang.String getBasePath()>();

        $r3 = staticinvoke <org.apache.commons.configuration.ConfigurationUtils: java.net.URL locate(java.lang.String,java.lang.String)>($r1, r2);

        r11 = $r3;

        if $r3 != null goto label1;

        $r9 = virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration: java.net.URL getURL()>();

        if $r9 == null goto label1;

        $r10 = virtualinvoke $r9.<java.net.URL: java.lang.String toString()>();

        r11 = staticinvoke <org.apache.commons.configuration.ConfigurationUtils: java.net.URL locate(java.lang.String,java.lang.String)>($r10, r2);

     label1:
        if r11 != null goto label2;

        $r4 = new org.apache.commons.configuration.ConfigurationException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot resolve include file ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label2:
        virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration: void load(java.net.URL)>(r11);

        return;
    }

    static char[] access$000()
    {
        char[] $r0;

        $r0 = <org.apache.commons.configuration.PropertiesConfiguration: char[] WHITE_SPACE>;

        return $r0;
    }

    static char[] access$100()
    {
        char[] $r0;

        $r0 = <org.apache.commons.configuration.PropertiesConfiguration: char[] SEPARATORS>;

        return $r0;
    }

    static java.lang.String access$200()
    {
        java.lang.String $r0;

        $r0 = <org.apache.commons.configuration.PropertiesConfiguration: java.lang.String LINE_SEPARATOR>;

        return $r0;
    }

    static void <clinit>()
    {
        char[] $r0, $r1;
        java.lang.String $r2;

        <org.apache.commons.configuration.PropertiesConfiguration: int UNICODE_LEN> = 4;

        <org.apache.commons.configuration.PropertiesConfiguration: int HEX_RADIX> = 16;

        <org.apache.commons.configuration.PropertiesConfiguration: java.lang.String ESCAPE> = "\\";

        <org.apache.commons.configuration.PropertiesConfiguration: java.lang.String DEFAULT_ENCODING> = "ISO-8859-1";

        <org.apache.commons.configuration.PropertiesConfiguration: java.lang.String COMMENT_CHARS> = "#!";

        <org.apache.commons.configuration.PropertiesConfiguration: java.lang.String include> = "include";

        $r0 = newarray (char)[2];

        $r0[0] = 61;

        $r0[1] = 58;

        <org.apache.commons.configuration.PropertiesConfiguration: char[] SEPARATORS> = $r0;

        $r1 = newarray (char)[3];

        $r1[0] = 32;

        $r1[1] = 9;

        $r1[2] = 12;

        <org.apache.commons.configuration.PropertiesConfiguration: char[] WHITE_SPACE> = $r1;

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        <org.apache.commons.configuration.PropertiesConfiguration: java.lang.String LINE_SEPARATOR> = $r2;

        return;
    }
}
