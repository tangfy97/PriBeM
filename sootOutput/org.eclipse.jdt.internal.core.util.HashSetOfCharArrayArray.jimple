public final class org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray extends java.lang.Object implements java.lang.Cloneable
{
    public char[][][] set;
    public int elementSize;
    int threshold;

    public void <init>()
    {
        org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: void <init>(int)>(13);

        return;
    }

    public void <init>(int)
    {
        int i0, $i1, i2;
        float $f0, $f1;
        org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray r0;
        char[][][] $r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: int elementSize> = 0;

        r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: int threshold> = i0;

        $f0 = (float) i0;

        $f1 = $f0 * 1.75F;

        i2 = (int) $f1;

        $i1 = r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: int threshold>;

        if $i1 != i2 goto label1;

        i2 = i2 + 1;

     label1:
        $r1 = newarray (char[][])[i2];

        r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: char[][][] set> = $r1;

        return;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        int $i0, $i1, i2;
        java.lang.Object $r1;
        org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray r0, r2;
        char[][][] $r3, $r4, $r5, $r6;

        r0 := @this: org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray) $r1;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: int elementSize>;

        r2.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: int elementSize> = $i0;

        $i1 = r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: int threshold>;

        r2.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: int threshold> = $i1;

        $r3 = r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: char[][][] set>;

        i2 = lengthof $r3;

        $r4 = newarray (char[][])[i2];

        r2.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: char[][][] set> = $r4;

        $r6 = r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: char[][][] set>;

        $r5 = r2.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: char[][][] set>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r5, 0, i2);

        return r2;
    }

    public boolean contains(char[][])
    {
        char[][] r2, $r4;
        int i0, $i1, i2, $i3, i4;
        org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray r0;
        char[][][] $r1, $r3;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray;

        r2 := @parameter0: char[][];

        $r1 = r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: char[][][] set>;

        i0 = lengthof $r1;

        $i1 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: int hashCode(char[][])>(r2);

        i4 = $i1 % i0;

        i2 = lengthof r2;

        goto label3;

     label1:
        $i3 = lengthof $r4;

        if $i3 != i2 goto label2;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[][],char[][])>($r4, r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i4 = i4 + 1;

        if i4 != i0 goto label3;

        i4 = 0;

     label3:
        $r3 = r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: char[][][] set>;

        $r4 = $r3[i4];

        if $r4 != null goto label1;

        return 0;
    }

    private int hashCode(char[][])
    {
        int $i0, $i1;
        org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray r0;
        char[][] r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray;

        r1 := @parameter0: char[][];

        $i0 = lengthof r1;

        $i1 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: int hashCode(char[][],int)>(r1, $i0);

        return $i1;
    }

    private int hashCode(char[][], int)
    {
        char[][] r0;
        int i0, $i1, $i2, i3, i4, $i6;
        char[] $r1;
        org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray r2;

        r2 := @this: org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray;

        r0 := @parameter0: char[][];

        i0 := @parameter1: int;

        i3 = 0;

        i4 = i0 - 1;

        goto label2;

     label1:
        $r1 = r0[i4];

        $i1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int hashCode(char[])>($r1);

        i3 = staticinvoke <org.eclipse.jdt.internal.core.util.Util: int combineHashCodes(int,int)>(i3, $i1);

        $i6 = (int) -1;

        i4 = i4 + $i6;

     label2:
        if i4 >= 0 goto label1;

        $i2 = i3 & 2147483647;

        return $i2;
    }

    public char[][] add(char[][])
    {
        char[][] r2, $r6;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, i7;
        char[][][] $r1, $r3, $r4, $r5;
        boolean $z0;
        org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray;

        r2 := @parameter0: char[][];

        $r1 = r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: char[][][] set>;

        i0 = lengthof $r1;

        $i1 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: int hashCode(char[][])>(r2);

        i7 = $i1 % i0;

        i2 = lengthof r2;

        goto label3;

     label1:
        $i3 = lengthof $r6;

        if $i3 != i2 goto label2;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[][],char[][])>($r6, r2);

        if $z0 == 0 goto label2;

        $r3 = r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: char[][][] set>;

        $r3[i7] = r2;

        return r2;

     label2:
        i7 = i7 + 1;

        if i7 != i0 goto label3;

        i7 = 0;

     label3:
        $r5 = r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: char[][][] set>;

        $r6 = $r5[i7];

        if $r6 != null goto label1;

        $r4 = r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: char[][][] set>;

        $r4[i7] = r2;

        $i4 = r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: int elementSize>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: int elementSize> = $i5;

        $i6 = r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: int threshold>;

        if $i5 <= $i6 goto label4;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: void rehash()>();

     label4:
        return r2;
    }

    public char[][] remove(char[][])
    {
        char[][] r2, r4, $r7;
        int i0, $i1, i2, $i3, $i4, $i5, i6;
        char[][][] $r1, $r3, $r5, $r6;
        boolean $z0;
        org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray;

        r2 := @parameter0: char[][];

        $r1 = r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: char[][][] set>;

        i0 = lengthof $r1;

        $i1 = specialinvoke r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: int hashCode(char[][])>(r2);

        i6 = $i1 % i0;

        i2 = lengthof r2;

        goto label3;

     label1:
        $i3 = lengthof $r7;

        if $i3 != i2 goto label2;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[][],char[][])>($r7, r2);

        if $z0 == 0 goto label2;

        $r3 = r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: char[][][] set>;

        r4 = $r3[i6];

        $i4 = r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: int elementSize>;

        $i5 = $i4 - 1;

        r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: int elementSize> = $i5;

        $r5 = r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: char[][][] set>;

        $r5[i6] = null;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: void rehash()>();

        return r4;

     label2:
        i6 = i6 + 1;

        if i6 != i0 goto label3;

        i6 = 0;

     label3:
        $r6 = r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: char[][][] set>;

        $r7 = $r6[i6];

        if $r7 != null goto label1;

        return null;
    }

    private void rehash()
    {
        char[][] $r4;
        int $i0, $i1, $i2, i3, $i5;
        org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray r1, $r6;
        char[][][] $r2, $r3, $r5;

        r1 := @this: org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray;

        $r6 = new org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray;

        $i0 = r1.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: int elementSize>;

        $i1 = $i0 * 2;

        specialinvoke $r6.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: void <init>(int)>($i1);

        $r2 = r1.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: char[][][] set>;

        i3 = lengthof $r2;

        goto label2;

     label1:
        $r3 = r1.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: char[][][] set>;

        $r4 = $r3[i3];

        if $r4 == null goto label2;

        virtualinvoke $r6.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: char[][] add(char[][])>($r4);

     label2:
        $i5 = (int) -1;

        i3 = i3 + $i5;

        if i3 >= 0 goto label1;

        $r5 = $r6.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: char[][][] set>;

        r1.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: char[][][] set> = $r5;

        $i2 = $r6.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: int threshold>;

        r1.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: int threshold> = $i2;

        return;
    }

    public int size()
    {
        int $i0;
        org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: int elementSize>;

        return $i0;
    }

    public java.lang.String toString()
    {
        char[][] r4;
        java.lang.StringBuffer $r0;
        int i0, i1, i2, $i4, $i5, $i6, i7, i8, i9;
        java.lang.String $r6;
        char[][][] $r2, $r3;
        char $c3;
        char[] r5;
        org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray r1;

        r1 := @this: org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i7 = 0;

        $r2 = r1.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: char[][][] set>;

        i0 = lengthof $r2;

        goto label9;

     label1:
        $r3 = r1.<org.eclipse.jdt.internal.core.util.HashSetOfCharArrayArray: char[][][] set>;

        r4 = $r3[i7];

        if r4 == null goto label8;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{");

        i8 = 0;

        i1 = lengthof r4;

        goto label7;

     label2:
        r5 = r4[i8];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(123);

        i9 = 0;

        i2 = lengthof r5;

        goto label5;

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $c3 = r5[i9];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $i4 = i2 - 1;

        if i9 == $i4 goto label4;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label4:
        i9 = i9 + 1;

     label5:
        if i9 < i2 goto label3;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        $i5 = i1 - 1;

        if i8 == $i5 goto label6;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label6:
        i8 = i8 + 1;

     label7:
        if i8 < i1 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

        $i6 = i0 - 1;

        if i7 == $i6 goto label8;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

     label8:
        i7 = i7 + 1;

     label9:
        if i7 < i0 goto label1;

        $r6 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }
}
