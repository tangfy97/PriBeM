public class org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor extends org.springframework.aop.framework.ProxyConfig implements org.springframework.beans.factory.config.BeanPostProcessor, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.InitializingBean, org.springframework.core.Ordered
{
    private java.lang.Class asyncAnnotationType;
    private java.util.concurrent.Executor executor;
    private java.lang.ClassLoader beanClassLoader;
    private org.springframework.scheduling.'annotation'.AsyncAnnotationAdvisor asyncAnnotationAdvisor;

    public void <init>()
    {
        org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor r0;
        java.lang.ClassLoader $r1;

        r0 := @this: org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor;

        specialinvoke r0.<org.springframework.aop.framework.ProxyConfig: void <init>()>();

        $r1 = staticinvoke <org.springframework.util.ClassUtils: java.lang.ClassLoader getDefaultClassLoader()>();

        r0.<org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor: java.lang.ClassLoader beanClassLoader> = $r1;

        return;
    }

    public void setAsyncAnnotationType(java.lang.Class)
    {
        org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor r1;
        java.lang.Class r0;

        r1 := @this: org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor;

        r0 := @parameter0: java.lang.Class;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "\'asyncAnnotationType\' must not be null");

        r1.<org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor: java.lang.Class asyncAnnotationType> = r0;

        return;
    }

    public void setExecutor(java.util.concurrent.Executor)
    {
        org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor r0;
        java.util.concurrent.Executor r1;

        r0 := @this: org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor;

        r1 := @parameter0: java.util.concurrent.Executor;

        r0.<org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor: java.util.concurrent.Executor executor> = r1;

        return;
    }

    public void setBeanClassLoader(java.lang.ClassLoader)
    {
        org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor r0;
        java.lang.ClassLoader r1;

        r0 := @this: org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor;

        r1 := @parameter0: java.lang.ClassLoader;

        r0.<org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor: java.lang.ClassLoader beanClassLoader> = r1;

        return;
    }

    public void afterPropertiesSet()
    {
        java.util.concurrent.Executor $r1, $r5;
        org.springframework.scheduling.'annotation'.AsyncAnnotationAdvisor $r4, $r6;
        org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor r0;
        java.lang.Class $r2, $r3;

        r0 := @this: org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor;

        $r1 = r0.<org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor: java.util.concurrent.Executor executor>;

        if $r1 == null goto label1;

        $r6 = new org.springframework.scheduling.'annotation'.AsyncAnnotationAdvisor;

        $r5 = r0.<org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor: java.util.concurrent.Executor executor>;

        specialinvoke $r6.<org.springframework.scheduling.'annotation'.AsyncAnnotationAdvisor: void <init>(java.util.concurrent.Executor)>($r5);

        goto label2;

     label1:
        $r6 = new org.springframework.scheduling.'annotation'.AsyncAnnotationAdvisor;

        specialinvoke $r6.<org.springframework.scheduling.'annotation'.AsyncAnnotationAdvisor: void <init>()>();

     label2:
        r0.<org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor: org.springframework.scheduling.'annotation'.AsyncAnnotationAdvisor asyncAnnotationAdvisor> = $r6;

        $r2 = r0.<org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor: java.lang.Class asyncAnnotationType>;

        if $r2 == null goto label3;

        $r4 = r0.<org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor: org.springframework.scheduling.'annotation'.AsyncAnnotationAdvisor asyncAnnotationAdvisor>;

        $r3 = r0.<org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor: java.lang.Class asyncAnnotationType>;

        virtualinvoke $r4.<org.springframework.scheduling.'annotation'.AsyncAnnotationAdvisor: void setAsyncAnnotationType(java.lang.Class)>($r3);

     label3:
        return;
    }

    public int getOrder()
    {
        org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor r0;

        r0 := @this: org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor;

        return 2147483647;
    }

    public java.lang.Object postProcessBeforeInitialization(java.lang.Object, java.lang.String)
    {
        org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor r1;
        java.lang.Object r0;
        java.lang.String r2;

        r1 := @this: org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        return r0;
    }

    public java.lang.Object postProcessAfterInitialization(java.lang.Object, java.lang.String)
    {
        org.springframework.scheduling.'annotation'.AsyncAnnotationAdvisor $r3, $r5, $r8;
        org.springframework.aop.framework.Advised $r9;
        org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor r2;
        org.springframework.aop.framework.ProxyFactory $r4;
        java.lang.Object r0, $r7;
        java.lang.Class $r1;
        java.lang.ClassLoader $r6;
        java.lang.String r10;
        boolean $z0, $z1, $z2;

        r2 := @this: org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor;

        r0 := @parameter0: java.lang.Object;

        r10 := @parameter1: java.lang.String;

        $z0 = r0 instanceof org.springframework.aop.framework.AopInfrastructureBean;

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r1 = staticinvoke <org.springframework.aop.support.AopUtils: java.lang.Class getTargetClass(java.lang.Object)>(r0);

        $r3 = r2.<org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor: org.springframework.scheduling.'annotation'.AsyncAnnotationAdvisor asyncAnnotationAdvisor>;

        $z1 = staticinvoke <org.springframework.aop.support.AopUtils: boolean canApply(org.springframework.aop.Advisor,java.lang.Class)>($r3, $r1);

        if $z1 == 0 goto label3;

        $z2 = r0 instanceof org.springframework.aop.framework.Advised;

        if $z2 == 0 goto label2;

        $r9 = (org.springframework.aop.framework.Advised) r0;

        $r8 = r2.<org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor: org.springframework.scheduling.'annotation'.AsyncAnnotationAdvisor asyncAnnotationAdvisor>;

        interfaceinvoke $r9.<org.springframework.aop.framework.Advised: void addAdvisor(int,org.springframework.aop.Advisor)>(0, $r8);

        return r0;

     label2:
        $r4 = new org.springframework.aop.framework.ProxyFactory;

        specialinvoke $r4.<org.springframework.aop.framework.ProxyFactory: void <init>(java.lang.Object)>(r0);

        virtualinvoke $r4.<org.springframework.aop.framework.ProxyFactory: void copyFrom(org.springframework.aop.framework.ProxyConfig)>(r2);

        $r5 = r2.<org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor: org.springframework.scheduling.'annotation'.AsyncAnnotationAdvisor asyncAnnotationAdvisor>;

        virtualinvoke $r4.<org.springframework.aop.framework.ProxyFactory: void addAdvisor(org.springframework.aop.Advisor)>($r5);

        $r6 = r2.<org.springframework.scheduling.'annotation'.AsyncAnnotationBeanPostProcessor: java.lang.ClassLoader beanClassLoader>;

        $r7 = virtualinvoke $r4.<org.springframework.aop.framework.ProxyFactory: java.lang.Object getProxy(java.lang.ClassLoader)>($r6);

        return $r7;

     label3:
        return r0;
    }
}
