final class org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver extends org.apache.xmlbeans.impl.store.Saver
{
    java.io.Writer _w;
    private char[] _buf;
    static final boolean $assertionsDisabled;

    void <init>(org.apache.xmlbeans.impl.store.Cur, java.io.Writer)
    {
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver r0;
        org.apache.xmlbeans.XmlOptions $r2;
        java.io.Writer r4;
        char[] $r3;
        org.apache.xmlbeans.impl.store.Cur r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        r4 := @parameter1: java.io.Writer;

        $r2 = staticinvoke <org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions maskNull(org.apache.xmlbeans.XmlOptions)>(null);

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver: void <init>(org.apache.xmlbeans.impl.store.Cur,org.apache.xmlbeans.XmlOptions)>(r1, $r2);

        $r3 = newarray (char)[1024];

        r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: char[] _buf> = $r3;

        r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: java.io.Writer _w> = r4;

        return;
    }

    static void save(org.apache.xmlbeans.impl.store.Cur, java.io.Writer) throws java.io.IOException
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver$SaverIOException $r3;
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver $r0;
        java.io.Writer r2;
        java.io.IOException $r5;
        org.apache.xmlbeans.impl.store.Cur r1;
        boolean $z0;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        r2 := @parameter1: java.io.Writer;

     label1:
        $r0 = new org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver;

        specialinvoke $r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void <init>(org.apache.xmlbeans.impl.store.Cur,java.io.Writer)>(r1, r2);

     label2:
        $z0 = virtualinvoke $r0.<org.apache.xmlbeans.impl.store.Saver: boolean process()>();

        if $z0 == 0 goto label3;

        goto label2;

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver$SaverIOException: java.lang.Throwable getCause()>();

        $r5 = (java.io.IOException) $r4;

        throw $r5;

     label5:
        return;

        catch org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver$SaverIOException from label1 to label3 with label4;
    }

    private void emit(java.lang.String)
    {
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver$SaverIOException $r4;
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver r0;
        java.io.Writer $r2;
        java.io.IOException $r3;
        java.lang.String r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: java.io.Writer _w>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver$SaverIOException;

        specialinvoke $r4.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver$SaverIOException: void <init>(java.io.IOException)>($r3);

        throw $r4;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void emit(char)
    {
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver$SaverIOException $r5;
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver r0;
        java.io.Writer $r3;
        char[] $r1, $r2;
        char c0;
        java.io.IOException $r4;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver;

        c0 := @parameter0: char;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: char[] _buf>;

        $r1[0] = c0;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: java.io.Writer _w>;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: char[] _buf>;

        virtualinvoke $r3.<java.io.Writer: void write(char[],int,int)>($r2, 0, 1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver$SaverIOException;

        specialinvoke $r5.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver$SaverIOException: void <init>(java.io.IOException)>($r4);

        throw $r5;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void emit(char, char)
    {
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver$SaverIOException $r6;
        char c0, c1;
        java.io.IOException $r5;
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver r0;
        java.io.Writer $r4;
        char[] $r1, $r2, $r3;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver;

        c0 := @parameter0: char;

        c1 := @parameter1: char;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: char[] _buf>;

        $r1[0] = c0;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: char[] _buf>;

        $r2[1] = c1;

        $r4 = r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: java.io.Writer _w>;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: char[] _buf>;

        virtualinvoke $r4.<java.io.Writer: void write(char[],int,int)>($r3, 0, 2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver$SaverIOException;

        specialinvoke $r6.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver$SaverIOException: void <init>(java.io.IOException)>($r5);

        throw $r6;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void emit(char[], int, int)
    {
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver$SaverIOException $r4;
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver r0;
        int i0, i1;
        java.io.Writer $r2;
        char[] r1;
        java.io.IOException $r3;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: java.io.Writer _w>;

        virtualinvoke $r2.<java.io.Writer: void write(char[],int,int)>(r1, i0, i1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver$SaverIOException;

        specialinvoke $r4.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver$SaverIOException: void <init>(java.io.IOException)>($r3);

        throw $r4;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected boolean emitElement(org.apache.xmlbeans.impl.store.Saver$SaveCur, java.util.ArrayList, java.util.ArrayList)
    {
        java.lang.AssertionError $r9;
        java.util.ArrayList r3, r5;
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver r0;
        int i0, $i1;
        java.lang.String $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xmlbeans.impl.store.Saver$SaveCur r1;
        java.lang.Object $r4, $r7;
        javax.xml.namespace.QName $r2, $r6;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Saver$SaveCur;

        r3 := @parameter1: java.util.ArrayList;

        r5 := @parameter2: java.util.ArrayList;

        $z0 = <org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z4 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Saver$SaveCur: boolean isElem()>();

        if $z4 != 0 goto label1;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label1:
        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(char)>(60);

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Saver$SaveCur: javax.xml.namespace.QName getName()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emitName(javax.xml.namespace.QName,boolean)>($r2, 0);

        i0 = 0;

     label2:
        $i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label3;

        $r4 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r6 = (javax.xml.namespace.QName) $r4;

        $r7 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r8 = (java.lang.String) $r7;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emitAttrHelper(javax.xml.namespace.QName,java.lang.String)>($r6, $r8);

        i0 = i0 + 1;

        goto label2;

     label3:
        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: boolean saveNamespacesFirst()>();

        if $z1 != 0 goto label4;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emitNamespacesHelper()>();

     label4:
        $z2 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Saver$SaveCur: boolean hasChildren()>();

        if $z2 != 0 goto label5;

        $z3 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Saver$SaveCur: boolean hasText()>();

        if $z3 != 0 goto label5;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(char,char)>(47, 62);

        return 1;

     label5:
        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(char)>(62);

        return 0;
    }

    protected void emitFinish(org.apache.xmlbeans.impl.store.Saver$SaveCur)
    {
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver r0;
        javax.xml.namespace.QName $r2;
        org.apache.xmlbeans.impl.store.Saver$SaveCur r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Saver$SaveCur;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(char,char)>(60, 47);

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Saver$SaveCur: javax.xml.namespace.QName getName()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emitName(javax.xml.namespace.QName,boolean)>($r2, 0);

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(char)>(62);

        return;
    }

    protected void emitXmlns(java.lang.String, java.lang.String)
    {
        java.lang.AssertionError $r3, $r4;
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver r0;
        int $i0;
        java.lang.String r1, r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = <org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != null goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $z1 = <org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        if r2 != null goto label2;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(java.lang.String)>("xmlns");

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(char)>(58);

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(java.lang.String)>(r1);

     label3:
        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(char,char)>(61, 34);

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emitAttrValue(java.lang.CharSequence)>(r2);

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(char)>(34);

        return;
    }

    private void emitNamespacesHelper()
    {
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void iterateMappings()>();

     label1:
        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: boolean hasMapping()>();

        if $z0 == 0 goto label2;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(char)>(32);

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: java.lang.String mappingPrefix()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: java.lang.String mappingUri()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emitXmlns(java.lang.String,java.lang.String)>($r1, $r2);

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void nextMapping()>();

        goto label1;

     label2:
        return;
    }

    private void emitAttrHelper(javax.xml.namespace.QName, java.lang.String)
    {
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver r0;
        javax.xml.namespace.QName r1;
        java.lang.String r2;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver;

        r1 := @parameter0: javax.xml.namespace.QName;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(char)>(32);

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emitName(javax.xml.namespace.QName,boolean)>(r1, 1);

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(char,char)>(61, 34);

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emitAttrValue(java.lang.CharSequence)>(r2);

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(char)>(34);

        return;
    }

    protected void emitComment(org.apache.xmlbeans.impl.store.Saver$SaveCur)
    {
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver r0;
        org.apache.xmlbeans.impl.store.Saver$SaveCur r1;
        java.lang.AssertionError $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Saver$SaveCur;

        $z0 = <org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Saver$SaveCur: boolean isComment()>();

        if $z1 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(java.lang.String)>("<!--");

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Saver$SaveCur: void push()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Saver$SaveCur: boolean next()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emitCommentText(org.apache.xmlbeans.impl.store.Saver$SaveCur)>(r1);

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Saver$SaveCur: void pop()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(java.lang.String)>("-->");

        return;
    }

    protected void emitProcinst(org.apache.xmlbeans.impl.store.Saver$SaveCur)
    {
        java.lang.AssertionError $r4;
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver r0;
        org.apache.xmlbeans.impl.store.Saver$SaveCur r1;
        javax.xml.namespace.QName $r2;
        java.lang.String $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Saver$SaveCur;

        $z0 = <org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Saver$SaveCur: boolean isProcinst()>();

        if $z2 != 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(java.lang.String)>("<?");

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Saver$SaveCur: javax.xml.namespace.QName getName()>();

        $r3 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(java.lang.String)>($r3);

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Saver$SaveCur: void push()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Saver$SaveCur: boolean next()>();

        $z1 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Saver$SaveCur: boolean isText()>();

        if $z1 == 0 goto label2;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(char)>(32);

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emitPiText(org.apache.xmlbeans.impl.store.Saver$SaveCur)>(r1);

     label2:
        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Saver$SaveCur: void pop()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(java.lang.String)>("?>");

        return;
    }

    protected void emitDocType(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver r0;
        java.lang.String r1, r2, r3, $r5;
        java.lang.AssertionError $r4;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $z0 = <org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != null goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(java.lang.String)>("<!DOCTYPE ");

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(java.lang.String)>(r1);

        if r2 != null goto label2;

        if r3 == null goto label2;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(java.lang.String)>(" SYSTEM ");

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emitLiteral(java.lang.String)>(r3);

        goto label3;

     label2:
        if r2 == null goto label3;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(java.lang.String)>(" PUBLIC ");

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emitLiteral(java.lang.String)>(r2);

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(char)>(32);

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emitLiteral(java.lang.String)>(r3);

     label3:
        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(char)>(62);

        $r5 = <org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: java.lang.String _newLine>;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(java.lang.String)>($r5);

        return;
    }

    protected void emitStartDoc(org.apache.xmlbeans.impl.store.Saver$SaveCur)
    {
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver r0;
        org.apache.xmlbeans.impl.store.Saver$SaveCur r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Saver$SaveCur;

        return;
    }

    protected void emitEndDoc(org.apache.xmlbeans.impl.store.Saver$SaveCur)
    {
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver r0;
        org.apache.xmlbeans.impl.store.Saver$SaveCur r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Saver$SaveCur;

        return;
    }

    private void emitName(javax.xml.namespace.QName, boolean)
    {
        java.lang.AssertionError $r5, $r8, $r9;
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver r2;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1, $r3, $r4, $r6, $r7, r10;
        boolean $z0, $z1, z2, $z3, $z4;
        javax.xml.namespace.QName r0;

        r2 := @this: org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver;

        r0 := @parameter0: javax.xml.namespace.QName;

        z2 := @parameter1: boolean;

        $z0 = <org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r0 != null goto label1;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label1:
        $r1 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z1 = <org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        if $r1 != null goto label2;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label2:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 == 0 goto label6;

        $r6 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        r10 = $r6;

        $r7 = virtualinvoke r2.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: java.lang.String getNamespaceForPrefix(java.lang.String)>($r6);

        if $r7 == null goto label3;

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z3 != 0 goto label4;

     label3:
        r10 = virtualinvoke r2.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: java.lang.String getUriMapping(java.lang.String)>($r1);

     label4:
        if z2 == 0 goto label5;

        $i2 = virtualinvoke r10.<java.lang.String: int length()>();

        if $i2 != 0 goto label5;

        r10 = virtualinvoke r2.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: java.lang.String getNonDefaultUriMapping(java.lang.String)>($r1);

     label5:
        $i3 = virtualinvoke r10.<java.lang.String: int length()>();

        if $i3 <= 0 goto label6;

        specialinvoke r2.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(java.lang.String)>(r10);

        specialinvoke r2.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(char)>(58);

     label6:
        $z4 = <org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: boolean $assertionsDisabled>;

        if $z4 != 0 goto label7;

        $r4 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i1 > 0 goto label7;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label7:
        $r3 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke r2.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(java.lang.String)>($r3);

        return;
    }

    private void emitAttrValue(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        char $c1;
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver r1;
        int $i0, i2, $i3, $i4, $i5;

        r1 := @this: org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver;

        r0 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        i2 = 0;

     label1:
        if i2 >= $i0 goto label6;

        $c1 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i2);

        $i3 = (int) $c1;

        if $i3 != 60 goto label2;

        specialinvoke r1.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(java.lang.String)>("&lt;");

        goto label5;

     label2:
        $i4 = (int) $c1;

        if $i4 != 38 goto label3;

        specialinvoke r1.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(java.lang.String)>("&amp;");

        goto label5;

     label3:
        $i5 = (int) $c1;

        if $i5 != 34 goto label4;

        specialinvoke r1.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(java.lang.String)>("&quot;");

        goto label5;

     label4:
        specialinvoke r1.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(char)>($c1);

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        return;
    }

    private boolean isBadChar(char)
    {
        char c0;
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver r0;
        int $i1, $i2, $i4, $i5, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 < 32 goto label1;

        $i2 = (int) c0;

        $i4 = (int) 55295;

        if $i2 <= $i4 goto label4;

     label1:
        $i5 = (int) c0;

        $i7 = (int) 57344;

        if $i5 < $i7 goto label2;

        $i8 = (int) c0;

        $i10 = (int) 65533;

        if $i8 <= $i10 goto label4;

     label2:
        $i11 = (int) c0;

        if $i11 < 65536 goto label3;

        $i12 = (int) c0;

        if $i12 <= 1114111 goto label4;

     label3:
        $i13 = (int) c0;

        if $i13 == 9 goto label4;

        $i14 = (int) c0;

        if $i14 == 10 goto label4;

        $i15 = (int) c0;

        if $i15 == 13 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    private void emitLiteral(java.lang.String)
    {
        int $i0;
        java.lang.String r0;
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver r1;

        r1 := @this: org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("\"");

        if $i0 >= 0 goto label1;

        specialinvoke r1.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(char)>(34);

        specialinvoke r1.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(java.lang.String)>(r0);

        specialinvoke r1.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(char)>(34);

        goto label2;

     label1:
        specialinvoke r1.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(char)>(39);

        specialinvoke r1.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(java.lang.String)>(r0);

        specialinvoke r1.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(char)>(39);

     label2:
        return;
    }

    protected void emitText(org.apache.xmlbeans.impl.store.Saver$SaveCur)
    {
        java.lang.AssertionError $r4;
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver r2;
        org.apache.xmlbeans.impl.store.Saver$SaveCur r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7;
        char[] $r3;
        java.lang.Object $r1;
        boolean $z0, $z1;

        r2 := @this: org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Saver$SaveCur;

        $z0 = <org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Saver$SaveCur: boolean isText()>();

        if $z1 != 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Saver$SaveCur: java.lang.Object getChars()>();

        $i4 = r0.<org.apache.xmlbeans.impl.store.Saver$SaveCur: int _cchSrc>;

        $i5 = r0.<org.apache.xmlbeans.impl.store.Saver$SaveCur: int _offSrc>;

        i6 = 0;

     label2:
        if i6 >= $i4 goto label5;

        $i0 = i6 + 512;

        if $i0 <= $i4 goto label3;

        $i7 = $i4;

        goto label4;

     label3:
        $i7 = i6 + 512;

     label4:
        $r3 = r2.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: char[] _buf>;

        $i2 = $i5 + i6;

        $i1 = $i7 - i6;

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: void getChars(char[],int,java.lang.Object,int,int)>($r3, 0, $r1, $i2, $i1);

        $i3 = $i7 - i6;

        specialinvoke r2.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void entitizeAndWriteText(int)>($i3);

        i6 = $i7;

        goto label2;

     label5:
        return;
    }

    protected void emitPiText(org.apache.xmlbeans.impl.store.Saver$SaveCur)
    {
        java.lang.AssertionError $r4;
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver r2;
        org.apache.xmlbeans.impl.store.Saver$SaveCur r0;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6;
        char[] $r3;
        java.lang.Object $r1;
        boolean $z0, $z1;

        r2 := @this: org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Saver$SaveCur;

        $z0 = <org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Saver$SaveCur: boolean isText()>();

        if $z1 != 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Saver$SaveCur: java.lang.Object getChars()>();

        $i3 = r0.<org.apache.xmlbeans.impl.store.Saver$SaveCur: int _cchSrc>;

        $i4 = r0.<org.apache.xmlbeans.impl.store.Saver$SaveCur: int _offSrc>;

        i5 = 0;

     label2:
        if i5 >= $i3 goto label5;

        $i0 = i5 + 512;

        if $i0 <= $i3 goto label3;

        $i6 = $i3;

        goto label4;

     label3:
        $i6 = 512;

     label4:
        $r3 = r2.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: char[] _buf>;

        $i1 = $i4 + i5;

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: void getChars(char[],int,java.lang.Object,int,int)>($r3, 0, $r1, $i1, $i6);

        $i2 = $i6 - i5;

        specialinvoke r2.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void entitizeAndWritePIText(int)>($i2);

        i5 = $i6;

        goto label2;

     label5:
        return;
    }

    protected void emitCommentText(org.apache.xmlbeans.impl.store.Saver$SaveCur)
    {
        java.lang.AssertionError $r4;
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver r2;
        org.apache.xmlbeans.impl.store.Saver$SaveCur r0;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6;
        char[] $r3;
        java.lang.Object $r1;
        boolean $z0, $z1;

        r2 := @this: org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Saver$SaveCur;

        $z0 = <org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Saver$SaveCur: boolean isText()>();

        if $z1 != 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Saver$SaveCur: java.lang.Object getChars()>();

        $i3 = r0.<org.apache.xmlbeans.impl.store.Saver$SaveCur: int _cchSrc>;

        $i4 = r0.<org.apache.xmlbeans.impl.store.Saver$SaveCur: int _offSrc>;

        i5 = 0;

     label2:
        if i5 >= $i3 goto label5;

        $i0 = i5 + 512;

        if $i0 <= $i3 goto label3;

        $i6 = $i3;

        goto label4;

     label3:
        $i6 = 512;

     label4:
        $r3 = r2.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: char[] _buf>;

        $i1 = $i4 + i5;

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: void getChars(char[],int,java.lang.Object,int,int)>($r3, 0, $r1, $i1, $i6);

        $i2 = $i6 - i5;

        specialinvoke r2.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void entitizeAndWriteCommentText(int)>($i2);

        i5 = $i6;

        goto label2;

     label5:
        return;
    }

    private void entitizeAndWriteText(int)
    {
        char c2;
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver r0;
        int i0, $i1, $i3, $i4, i5, i6, $i7;
        char[] $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver;

        i0 := @parameter0: int;

        i5 = 0;

        i6 = 0;

     label1:
        if i6 >= i0 goto label5;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: char[] _buf>;

        c2 = $r2[i6];

        $i7 = (int) c2;

        lookupswitch($i7)
        {
            case 38: goto label3;
            case 60: goto label2;
            default: goto label4;
        };

     label2:
        $r3 = r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: char[] _buf>;

        $i3 = i6 - i5;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(char[],int,int)>($r3, i5, $i3);

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(java.lang.String)>("&lt;");

        i5 = i6 + 1;

        goto label4;

     label3:
        $r4 = r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: char[] _buf>;

        $i4 = i6 - i5;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(char[],int,int)>($r4, i5, $i4);

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(java.lang.String)>("&amp;");

        i5 = i6 + 1;

     label4:
        i6 = i6 + 1;

        goto label1;

     label5:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: char[] _buf>;

        $i1 = i0 - i5;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(char[],int,int)>($r1, i5, $i1);

        return;
    }

    private void entitizeAndWriteCommentText(int)
    {
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver r0;
        int i0, $i1, $i3, i5, $i6, $i7, $i8;
        boolean $z0, z1;
        char $c2, c4;
        char[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver;

        i0 := @parameter0: int;

        z1 = 0;

        i5 = 0;

     label1:
        if i5 >= i0 goto label7;

        $r4 = r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: char[] _buf>;

        c4 = $r4[i5];

        $z0 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: boolean isBadChar(char)>(c4);

        if $z0 == 0 goto label2;

        $r6 = r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: char[] _buf>;

        $r6[i5] = 63;

        goto label5;

     label2:
        $i7 = (int) c4;

        if $i7 != 45 goto label4;

        if z1 == 0 goto label3;

        $r5 = r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: char[] _buf>;

        $r5[i5] = 32;

        z1 = 0;

        goto label5;

     label3:
        z1 = 1;

        goto label5;

     label4:
        z1 = 0;

     label5:
        $r7 = r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: char[] _buf>;

        $i6 = lengthof $r7;

        if i5 != $i6 goto label6;

        i5 = 0;

     label6:
        i5 = i5 + 1;

        goto label1;

     label7:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: char[] _buf>;

        $i1 = i0 - 1;

        $c2 = $r1[$i1];

        $i8 = (int) $c2;

        if $i8 != 45 goto label8;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: char[] _buf>;

        $i3 = i0 - 1;

        $r3[$i3] = 32;

     label8:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: char[] _buf>;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(char[],int,int)>($r2, 0, i0);

        return;
    }

    private void entitizeAndWritePIText(int)
    {
        char c2;
        org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver r0;
        int i0, i1;
        char[] $r1, $r2, $r3, $r4;
        boolean $z0, z1, $z2;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver;

        i0 := @parameter0: int;

        z1 = 0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label8;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: char[] _buf>;

        c2 = $r2[i1];

        $z0 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: boolean isBadChar(char)>(c2);

        if $z0 == 0 goto label2;

        $r4 = r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: char[] _buf>;

        $r4[i1] = 63;

        c2 = 63;

     label2:
        if c2 != 62 goto label4;

        if z1 == 0 goto label3;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: char[] _buf>;

        $r3[i1] = 32;

     label3:
        z1 = 0;

        goto label7;

     label4:
        if c2 != 63 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        z1 = $z2;

     label7:
        i1 = i1 + 1;

        goto label1;

     label8:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: char[] _buf>;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: void emit(char[],int,int)>($r1, 0, i0);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        $r0 = <org.apache.xmlbeans.impl.store.Saver: java.lang.Class class$org$apache$xmlbeans$impl$store$Saver>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.store.Saver: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.store.Saver");

        <org.apache.xmlbeans.impl.store.Saver: java.lang.Class class$org$apache$xmlbeans$impl$store$Saver> = $r1;

        goto label2;

     label1:
        $r1 = <org.apache.xmlbeans.impl.store.Saver: java.lang.Class class$org$apache$xmlbeans$impl$store$Saver>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.store.Saver$OptimizedForSpeedSaver: boolean $assertionsDisabled> = $z1;

        return;
    }
}
