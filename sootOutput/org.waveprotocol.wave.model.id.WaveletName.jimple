public class org.waveprotocol.wave.model.id.WaveletName extends java.lang.Object implements java.lang.Comparable, java.io.Serializable
{
    private static final long serialVersionUID;
    public final org.waveprotocol.wave.model.id.WaveId waveId;
    public final org.waveprotocol.wave.model.id.WaveletId waveletId;

    public static org.waveprotocol.wave.model.id.WaveletName of(org.waveprotocol.wave.model.id.WaveId, org.waveprotocol.wave.model.id.WaveletId)
    {
        org.waveprotocol.wave.model.id.WaveletName $r0;
        org.waveprotocol.wave.model.id.WaveletId r2;
        org.waveprotocol.wave.model.id.WaveId r1;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveId;

        r2 := @parameter1: org.waveprotocol.wave.model.id.WaveletId;

        $r0 = new org.waveprotocol.wave.model.id.WaveletName;

        specialinvoke $r0.<org.waveprotocol.wave.model.id.WaveletName: void <init>(org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId)>(r1, r2);

        return $r0;
    }

    public static org.waveprotocol.wave.model.id.WaveletName of(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.model.id.WaveletName $r0;
        org.waveprotocol.wave.model.id.WaveId $r3;
        org.waveprotocol.wave.model.id.WaveletId $r6;
        java.lang.String r1, r2, r4, r5;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        $r0 = new org.waveprotocol.wave.model.id.WaveletName;

        $r3 = staticinvoke <org.waveprotocol.wave.model.id.WaveId: org.waveprotocol.wave.model.id.WaveId of(java.lang.String,java.lang.String)>(r1, r2);

        $r6 = staticinvoke <org.waveprotocol.wave.model.id.WaveletId: org.waveprotocol.wave.model.id.WaveletId of(java.lang.String,java.lang.String)>(r4, r5);

        specialinvoke $r0.<org.waveprotocol.wave.model.id.WaveletName: void <init>(org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId)>($r3, $r6);

        return $r0;
    }

    private void <init>(org.waveprotocol.wave.model.id.WaveId, org.waveprotocol.wave.model.id.WaveletId)
    {
        org.waveprotocol.wave.model.id.WaveletName r0;
        org.waveprotocol.wave.model.id.WaveId r1;
        org.waveprotocol.wave.model.id.WaveletId r6;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: org.waveprotocol.wave.model.id.WaveletName;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveId;

        r6 := @parameter1: org.waveprotocol.wave.model.id.WaveletId;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        if r6 != null goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create WaveletName with null value in [waveId:");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] [waveletId:");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void nullPointer(java.lang.Object)>($r9);

     label2:
        r0.<org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveId waveId> = r1;

        r0.<org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveletId waveletId> = r6;

        return;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.model.id.WaveletName r2;
        org.waveprotocol.wave.model.id.WaveId $r3;
        org.waveprotocol.wave.model.id.WaveletId $r8;
        org.waveprotocol.wave.model.id.ModernIdSerialiser $r4, $r9;
        java.lang.StringBuilder $r0, $r1, $r6, $r7, $r11, $r12;
        java.lang.String $r5, $r10, $r13;

        r2 := @this: org.waveprotocol.wave.model.id.WaveletName;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[WaveletName ");

        $r4 = <org.waveprotocol.wave.model.id.ModernIdSerialiser: org.waveprotocol.wave.model.id.ModernIdSerialiser INSTANCE>;

        $r3 = r2.<org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveId waveId>;

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.model.id.ModernIdSerialiser: java.lang.String serialiseWaveId(org.waveprotocol.wave.model.id.WaveId)>($r3);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r9 = <org.waveprotocol.wave.model.id.ModernIdSerialiser: org.waveprotocol.wave.model.id.ModernIdSerialiser INSTANCE>;

        $r8 = r2.<org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveletId waveletId>;

        $r10 = virtualinvoke $r9.<org.waveprotocol.wave.model.id.ModernIdSerialiser: java.lang.String serialiseWaveletId(org.waveprotocol.wave.model.id.WaveletId)>($r8);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public boolean equals(java.lang.Object)
    {
        org.waveprotocol.wave.model.id.WaveletName r1, r2;
        org.waveprotocol.wave.model.id.WaveId $r3, $r4;
        org.waveprotocol.wave.model.id.WaveletId $r5, $r6;
        java.lang.Object r0;
        boolean $z0, $z1, $z2, $z3;

        r2 := @this: org.waveprotocol.wave.model.id.WaveletName;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.waveprotocol.wave.model.id.WaveletName;

        if $z0 == 0 goto label3;

        r1 = (org.waveprotocol.wave.model.id.WaveletName) r0;

        $r4 = r2.<org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveId waveId>;

        $r3 = r1.<org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveId waveId>;

        $z1 = virtualinvoke $r4.<org.waveprotocol.wave.model.id.WaveId: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        $r6 = r2.<org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveletId waveletId>;

        $r5 = r1.<org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveletId waveletId>;

        $z2 = virtualinvoke $r6.<org.waveprotocol.wave.model.id.WaveletId: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;

     label3:
        return 0;
    }

    public int hashCode()
    {
        org.waveprotocol.wave.model.id.WaveletName r0;
        org.waveprotocol.wave.model.id.WaveId $r1;
        int $i0, $i1, $i2, $i3;
        org.waveprotocol.wave.model.id.WaveletId $r2;

        r0 := @this: org.waveprotocol.wave.model.id.WaveletName;

        $r1 = r0.<org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveId waveId>;

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.model.id.WaveId: int hashCode()>();

        $i1 = $i0 * 37;

        $r2 = r0.<org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveletId waveletId>;

        $i2 = virtualinvoke $r2.<org.waveprotocol.wave.model.id.WaveletId: int hashCode()>();

        $i3 = $i1 + $i2;

        return $i3;
    }

    public int compareTo(org.waveprotocol.wave.model.id.WaveletName)
    {
        org.waveprotocol.wave.model.id.WaveletName r0, r1;
        org.waveprotocol.wave.model.id.WaveId $r2, $r3, $r4, $r5;
        org.waveprotocol.wave.model.id.WaveletId $r6, $r7;
        int $i0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.id.WaveletName;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletName;

        $r3 = r0.<org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveId waveId>;

        $r2 = r1.<org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveId waveId>;

        $z0 = virtualinvoke $r3.<org.waveprotocol.wave.model.id.WaveId: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r7 = r0.<org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveletId waveletId>;

        $r6 = r1.<org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveletId waveletId>;

        $i0 = virtualinvoke $r7.<org.waveprotocol.wave.model.id.WaveletId: int compareTo(org.waveprotocol.wave.model.id.WaveletId)>($r6);

        goto label2;

     label1:
        $r5 = r0.<org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveId waveId>;

        $r4 = r1.<org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveId waveId>;

        $i0 = virtualinvoke $r5.<org.waveprotocol.wave.model.id.WaveId: int compareTo(org.waveprotocol.wave.model.id.WaveId)>($r4);

     label2:
        return $i0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        org.waveprotocol.wave.model.id.WaveletName r0, $r2;
        int $i0;
        java.lang.Object r1;

        r0 := @this: org.waveprotocol.wave.model.id.WaveletName;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.id.WaveletName) r1;

        $i0 = virtualinvoke r0.<org.waveprotocol.wave.model.id.WaveletName: int compareTo(org.waveprotocol.wave.model.id.WaveletName)>($r2);

        return $i0;
    }

    public static void <clinit>()
    {
        <org.waveprotocol.wave.model.id.WaveletName: long serialVersionUID> = 0L;

        return;
    }
}
