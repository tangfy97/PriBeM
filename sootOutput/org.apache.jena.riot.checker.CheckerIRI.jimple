public class org.apache.jena.riot.checker.CheckerIRI extends java.lang.Object implements org.apache.jena.riot.checker.NodeChecker
{
    private boolean allowRelativeIRIs;
    private org.apache.jena.riot.system.ErrorHandler handler;
    private org.apache.jena.iri.IRIFactory iriFactory;
    private final org.apache.jena.atlas.lib.Cache cache;

    public void <init>()
    {
        org.apache.jena.riot.system.ErrorHandler $r1;
        org.apache.jena.riot.checker.CheckerIRI r0;
        org.apache.jena.iri.IRIFactory $r2;

        r0 := @this: org.apache.jena.riot.checker.CheckerIRI;

        $r1 = staticinvoke <org.apache.jena.riot.system.ErrorHandlerFactory: org.apache.jena.riot.system.ErrorHandler getDefaultErrorHandler()>();

        $r2 = <org.apache.jena.riot.system.IRIResolver: org.apache.jena.iri.IRIFactory iriFactory>;

        specialinvoke r0.<org.apache.jena.riot.checker.CheckerIRI: void <init>(org.apache.jena.riot.system.ErrorHandler,org.apache.jena.iri.IRIFactory)>($r1, $r2);

        return;
    }

    public void <init>(org.apache.jena.riot.system.ErrorHandler, org.apache.jena.iri.IRIFactory)
    {
        org.apache.jena.atlas.lib.Cache $r1;
        org.apache.jena.riot.system.ErrorHandler r2;
        org.apache.jena.iri.IRIFactory r3;
        org.apache.jena.riot.checker.CheckerIRI r0;

        r0 := @this: org.apache.jena.riot.checker.CheckerIRI;

        r2 := @parameter0: org.apache.jena.riot.system.ErrorHandler;

        r3 := @parameter1: org.apache.jena.iri.IRIFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jena.riot.checker.CheckerIRI: boolean allowRelativeIRIs> = 0;

        $r1 = staticinvoke <org.apache.jena.atlas.lib.CacheFactory: org.apache.jena.atlas.lib.Cache createSimpleCache(int)>(5000);

        r0.<org.apache.jena.riot.checker.CheckerIRI: org.apache.jena.atlas.lib.Cache cache> = $r1;

        r0.<org.apache.jena.riot.checker.CheckerIRI: org.apache.jena.riot.system.ErrorHandler handler> = r2;

        r0.<org.apache.jena.riot.checker.CheckerIRI: org.apache.jena.iri.IRIFactory iriFactory> = r3;

        return;
    }

    public boolean check(com.hp.hpl.jena.graph.Node, long, long)
    {
        long l0, l1;
        com.hp.hpl.jena.graph.Node r0;
        org.apache.jena.riot.checker.CheckerIRI r1;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.jena.riot.checker.CheckerIRI;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: boolean isURI()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<org.apache.jena.riot.checker.CheckerIRI: boolean checkURI(com.hp.hpl.jena.graph.Node,long,long)>(r0, l0, l1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public final boolean checkURI(com.hp.hpl.jena.graph.Node, long, long)
    {
        org.apache.jena.iri.IRIFactory $r3;
        long l0, l1;
        com.hp.hpl.jena.graph.Node r2;
        org.apache.jena.atlas.lib.Cache $r1, $r6, $r7, $r8;
        java.lang.String $r4;
        org.apache.jena.riot.checker.CheckerIRI r0;
        org.apache.jena.iri.IRI $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.jena.riot.checker.CheckerIRI;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r1 = r0.<org.apache.jena.riot.checker.CheckerIRI: org.apache.jena.atlas.lib.Cache cache>;

        if $r1 == null goto label1;

        $r8 = r0.<org.apache.jena.riot.checker.CheckerIRI: org.apache.jena.atlas.lib.Cache cache>;

        $z1 = interfaceinvoke $r8.<org.apache.jena.atlas.lib.Cache: boolean containsKey(java.lang.Object)>(r2);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $r3 = r0.<org.apache.jena.riot.checker.CheckerIRI: org.apache.jena.iri.IRIFactory iriFactory>;

        $r4 = virtualinvoke r2.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

        $r5 = virtualinvoke $r3.<org.apache.jena.iri.IRIFactory: org.apache.jena.iri.IRI create(java.lang.String)>($r4);

        $z0 = virtualinvoke r0.<org.apache.jena.riot.checker.CheckerIRI: boolean checkIRI(org.apache.jena.iri.IRI,long,long)>($r5, l0, l1);

        $r6 = r0.<org.apache.jena.riot.checker.CheckerIRI: org.apache.jena.atlas.lib.Cache cache>;

        if $r6 == null goto label2;

        if $z0 == 0 goto label2;

        $r7 = r0.<org.apache.jena.riot.checker.CheckerIRI: org.apache.jena.atlas.lib.Cache cache>;

        interfaceinvoke $r7.<org.apache.jena.atlas.lib.Cache: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r5);

     label2:
        return $z0;
    }

    public final boolean checkIRI(org.apache.jena.iri.IRI, long, long)
    {
        long l0, l1;
        org.apache.jena.riot.system.ErrorHandler $r2;
        org.apache.jena.iri.IRI r0;
        org.apache.jena.riot.checker.CheckerIRI r1;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.jena.riot.checker.CheckerIRI;

        r0 := @parameter0: org.apache.jena.iri.IRI;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r2 = r1.<org.apache.jena.riot.checker.CheckerIRI: org.apache.jena.riot.system.ErrorHandler handler>;

        $z0 = r1.<org.apache.jena.riot.checker.CheckerIRI: boolean allowRelativeIRIs>;

        staticinvoke <org.apache.jena.riot.checker.CheckerIRI: void iriViolations(org.apache.jena.iri.IRI,org.apache.jena.riot.system.ErrorHandler,boolean,boolean,long,long)>(r0, $r2, $z0, 1, l0, l1);

        $z1 = virtualinvoke r0.<org.apache.jena.iri.IRI: boolean hasViolation(boolean)>(1);

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public static void iriViolations(org.apache.jena.iri.IRI, org.apache.jena.riot.system.ErrorHandler)
    {
        org.apache.jena.riot.system.ErrorHandler r1;
        org.apache.jena.iri.IRI r0;

        r0 := @parameter0: org.apache.jena.iri.IRI;

        r1 := @parameter1: org.apache.jena.riot.system.ErrorHandler;

        staticinvoke <org.apache.jena.riot.checker.CheckerIRI: void iriViolations(org.apache.jena.iri.IRI,org.apache.jena.riot.system.ErrorHandler,long,long)>(r0, r1, -1L, -1L);

        return;
    }

    public static void iriViolations(org.apache.jena.iri.IRI, org.apache.jena.riot.system.ErrorHandler, long, long)
    {
        org.apache.jena.riot.system.ErrorHandler r1;
        long l0, l1;
        org.apache.jena.iri.IRI r0;

        r0 := @parameter0: org.apache.jena.iri.IRI;

        r1 := @parameter1: org.apache.jena.riot.system.ErrorHandler;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        staticinvoke <org.apache.jena.riot.checker.CheckerIRI: void iriViolations(org.apache.jena.iri.IRI,org.apache.jena.riot.system.ErrorHandler,boolean,boolean,long,long)>(r0, r1, 0, 1, l0, l1);

        return;
    }

    private static void iriViolations(org.apache.jena.iri.IRI, org.apache.jena.riot.system.ErrorHandler, boolean)
    {
        org.apache.jena.riot.system.ErrorHandler r1;
        org.apache.jena.iri.IRI r0;
        boolean z0;

        r0 := @parameter0: org.apache.jena.iri.IRI;

        r1 := @parameter1: org.apache.jena.riot.system.ErrorHandler;

        z0 := @parameter2: boolean;

        staticinvoke <org.apache.jena.riot.checker.CheckerIRI: void iriViolations(org.apache.jena.iri.IRI,org.apache.jena.riot.system.ErrorHandler,boolean,long,long)>(r0, r1, z0, -1L, -1L);

        return;
    }

    private static void iriViolations(org.apache.jena.iri.IRI, org.apache.jena.riot.system.ErrorHandler, boolean, long, long)
    {
        org.apache.jena.riot.system.ErrorHandler r1;
        long l0, l1;
        org.apache.jena.iri.IRI r0;
        boolean z0;

        r0 := @parameter0: org.apache.jena.iri.IRI;

        r1 := @parameter1: org.apache.jena.riot.system.ErrorHandler;

        z0 := @parameter2: boolean;

        l0 := @parameter3: long;

        l1 := @parameter4: long;

        staticinvoke <org.apache.jena.riot.checker.CheckerIRI: void iriViolations(org.apache.jena.iri.IRI,org.apache.jena.riot.system.ErrorHandler,boolean,boolean,long,long)>(r0, r1, z0, 1, l0, l1);

        return;
    }

    public static void iriViolations(org.apache.jena.iri.IRI, org.apache.jena.riot.system.ErrorHandler, boolean, boolean, long, long)
    {
        long l1, l2;
        org.apache.jena.riot.system.ErrorHandler r4;
        int $i0;
        java.lang.String $r8, $r12, $r16, $r19;
        org.apache.jena.iri.IRI r0;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        java.lang.StringBuilder $r5, $r6, $r7, $r9, $r10, $r11, $r13, $r14, $r15;
        org.apache.jena.iri.Violation r3, r17, r18;

        r0 := @parameter0: org.apache.jena.iri.IRI;

        r4 := @parameter1: org.apache.jena.riot.system.ErrorHandler;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        l1 := @parameter4: long;

        l2 := @parameter5: long;

        if z0 != 0 goto label1;

        $z3 = virtualinvoke r0.<org.apache.jena.iri.IRI: boolean isRelative()>();

        if $z3 == 0 goto label1;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Relative IRI: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<org.apache.jena.riot.system.ErrorHandler: void error(java.lang.String,long,long)>($r16, l1, l2);

     label1:
        $z4 = virtualinvoke r0.<org.apache.jena.iri.IRI: boolean hasViolation(boolean)>(z1);

        if $z4 == 0 goto label8;

        $r1 = virtualinvoke r0.<org.apache.jena.iri.IRI: java.util.Iterator violations(boolean)>(z1);

        r17 = null;

        r18 = null;

     label2:
        $z5 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label8;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.jena.iri.Violation) $r2;

        $i0 = virtualinvoke r3.<org.apache.jena.iri.Violation: int getViolationCode()>();

        $z2 = virtualinvoke r3.<org.apache.jena.iri.Violation: boolean isError()>();

        if $i0 == 11 goto label2;

        if $i0 == 1 goto label2;

        if $i0 != 61 goto label3;

        goto label2;

     label3:
        if $z2 == 0 goto label4;

        if r17 != null goto label5;

        r17 = r3;

        goto label5;

     label4:
        if r18 != null goto label5;

        r18 = r3;

     label5:
        $r19 = virtualinvoke r3.<org.apache.jena.iri.Violation: java.lang.String getShortMessage()>();

        virtualinvoke r0.<org.apache.jena.iri.IRI: java.lang.String toString()>();

        if $z2 == 0 goto label6;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad IRI: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<org.apache.jena.riot.system.ErrorHandler: void warning(java.lang.String,long,long)>($r12, l1, l2);

        goto label7;

     label6:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not advised IRI: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<org.apache.jena.riot.system.ErrorHandler: void warning(java.lang.String,long,long)>($r8, l1, l2);

     label7:
        goto label2;

     label8:
        return;
    }
}
