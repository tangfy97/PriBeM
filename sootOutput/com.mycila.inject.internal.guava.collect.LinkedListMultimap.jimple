public class com.mycila.inject.internal.guava.collect.LinkedListMultimap extends java.lang.Object implements com.mycila.inject.internal.guava.collect.ListMultimap, java.io.Serializable
{
    private transient com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node head;
    private transient com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node tail;
    private transient com.mycila.inject.internal.guava.collect.Multiset keyCount;
    private transient java.util.Map keyToKeyHead;
    private transient java.util.Map keyToKeyTail;
    private transient java.util.Set keySet;
    private transient com.mycila.inject.internal.guava.collect.Multiset keys;
    private transient java.util.List valuesList;
    private transient java.util.List entries;
    private transient java.util.Map map;
    private static final long serialVersionUID;

    public static com.mycila.inject.internal.guava.collect.LinkedListMultimap create()
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap $r0;

        $r0 = new com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: void <init>()>();

        return $r0;
    }

    public static com.mycila.inject.internal.guava.collect.LinkedListMultimap create(int)
    {
        int i0;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap $r0;

        i0 := @parameter0: int;

        $r0 = new com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: void <init>(int)>(i0);

        return $r0;
    }

    public static com.mycila.inject.internal.guava.collect.LinkedListMultimap create(com.mycila.inject.internal.guava.collect.Multimap)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap $r0;
        com.mycila.inject.internal.guava.collect.Multimap r1;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.Multimap;

        $r0 = new com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: void <init>(com.mycila.inject.internal.guava.collect.Multimap)>(r1);

        return $r0;
    }

    void <init>()
    {
        com.mycila.inject.internal.guava.collect.LinkedHashMultiset $r1;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        java.util.HashMap $r2, $r3;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.mycila.inject.internal.guava.collect.LinkedHashMultiset: com.mycila.inject.internal.guava.collect.LinkedHashMultiset create()>();

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.Multiset keyCount> = $r1;

        $r2 = staticinvoke <com.mycila.inject.internal.guava.collect.Maps: java.util.HashMap newHashMap()>();

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map keyToKeyHead> = $r2;

        $r3 = staticinvoke <com.mycila.inject.internal.guava.collect.Maps: java.util.HashMap newHashMap()>();

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map keyToKeyTail> = $r3;

        return;
    }

    private void <init>(int)
    {
        com.mycila.inject.internal.guava.collect.LinkedHashMultiset $r1;
        int i0;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        java.util.HashMap $r2, $r3;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.mycila.inject.internal.guava.collect.LinkedHashMultiset: com.mycila.inject.internal.guava.collect.LinkedHashMultiset create(int)>(i0);

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.Multiset keyCount> = $r1;

        $r2 = staticinvoke <com.mycila.inject.internal.guava.collect.Maps: java.util.HashMap newHashMapWithExpectedSize(int)>(i0);

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map keyToKeyHead> = $r2;

        $r3 = staticinvoke <com.mycila.inject.internal.guava.collect.Maps: java.util.HashMap newHashMapWithExpectedSize(int)>(i0);

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map keyToKeyTail> = $r3;

        return;
    }

    private void <init>(com.mycila.inject.internal.guava.collect.Multimap)
    {
        int $i0;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        java.util.Set $r2;
        com.mycila.inject.internal.guava.collect.Multimap r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.Multimap;

        $r2 = interfaceinvoke r1.<com.mycila.inject.internal.guava.collect.Multimap: java.util.Set keySet()>();

        $i0 = interfaceinvoke $r2.<java.util.Set: int size()>();

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: void <init>(int)>($i0);

        virtualinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: boolean putAll(com.mycila.inject.internal.guava.collect.Multimap)>(r1);

        return;
    }

    private com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node addNode(java.lang.Object, java.lang.Object, com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node $r0, $r4, r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14, r17;
        java.util.Map $r12, $r15, $r18, $r19, $r20, $r21;
        com.mycila.inject.internal.guava.collect.Multiset $r22;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r3;
        java.lang.Object r1, r2, $r16;

        r3 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r5 := @parameter2: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node;

        $r0 = new com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: void <init>(java.lang.Object,java.lang.Object)>(r1, r2);

        $r4 = r3.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node head>;

        if $r4 != null goto label1;

        r3.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node tail> = $r0;

        r3.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node head> = $r0;

        $r20 = r3.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map keyToKeyHead>;

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r0);

        $r21 = r3.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map keyToKeyTail>;

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r0);

        goto label9;

     label1:
        if r5 != null goto label4;

        $r13 = r3.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node tail>;

        $r13.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node next> = $r0;

        $r14 = r3.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node tail>;

        $r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previous> = $r14;

        $r15 = r3.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map keyToKeyTail>;

        $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r17 = (com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node) $r16;

        if r17 != null goto label2;

        $r19 = r3.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map keyToKeyHead>;

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r0);

        goto label3;

     label2:
        r17.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node nextSibling> = $r0;

        $r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previousSibling> = r17;

     label3:
        $r18 = r3.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map keyToKeyTail>;

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r0);

        r3.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node tail> = $r0;

        goto label9;

     label4:
        $r6 = r5.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previous>;

        $r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previous> = $r6;

        $r7 = r5.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previousSibling>;

        $r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previousSibling> = $r7;

        $r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node next> = r5;

        $r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node nextSibling> = r5;

        $r8 = r5.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previousSibling>;

        if $r8 != null goto label5;

        $r12 = r3.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map keyToKeyHead>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r0);

        goto label6;

     label5:
        $r9 = r5.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previousSibling>;

        $r9.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node nextSibling> = $r0;

     label6:
        $r10 = r5.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previous>;

        if $r10 != null goto label7;

        r3.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node head> = $r0;

        goto label8;

     label7:
        $r11 = r5.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previous>;

        $r11.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node next> = $r0;

     label8:
        r5.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previous> = $r0;

        r5.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previousSibling> = $r0;

     label9:
        $r22 = r3.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.Multiset keyCount>;

        interfaceinvoke $r22.<com.mycila.inject.internal.guava.collect.Multiset: boolean add(java.lang.Object)>(r1);

        return $r0;
    }

    private void removeNode(com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node r0, $r1, $r3, $r4, $r5, $r6, $r7, $r10, $r13, $r16, $r17, $r18, $r21, $r22, $r23, $r24, $r25, $r26, $r27;
        java.util.Map $r9, $r12, $r15, $r20;
        com.mycila.inject.internal.guava.collect.Multiset $r28;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r2;
        java.lang.Object $r8, $r11, $r14, $r19, $r29;

        r2 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r0 := @parameter0: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previous>;

        if $r1 == null goto label01;

        $r26 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previous>;

        $r25 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node next>;

        $r26.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node next> = $r25;

        goto label02;

     label01:
        $r3 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node next>;

        r2.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node head> = $r3;

     label02:
        $r4 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node next>;

        if $r4 == null goto label03;

        $r24 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node next>;

        $r23 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previous>;

        $r24.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previous> = $r23;

        goto label04;

     label03:
        $r5 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previous>;

        r2.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node tail> = $r5;

     label04:
        $r6 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previousSibling>;

        if $r6 == null goto label05;

        $r22 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previousSibling>;

        $r21 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node nextSibling>;

        $r22.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node nextSibling> = $r21;

        goto label07;

     label05:
        $r7 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node nextSibling>;

        if $r7 == null goto label06;

        $r20 = r2.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map keyToKeyHead>;

        $r19 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: java.lang.Object key>;

        $r18 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node nextSibling>;

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r18);

        goto label07;

     label06:
        $r9 = r2.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map keyToKeyHead>;

        $r8 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: java.lang.Object key>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r8);

     label07:
        $r27 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node nextSibling>;

        if $r27 == null goto label08;

        $r17 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node nextSibling>;

        $r16 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previousSibling>;

        $r17.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previousSibling> = $r16;

        goto label10;

     label08:
        $r10 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previousSibling>;

        if $r10 == null goto label09;

        $r15 = r2.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map keyToKeyTail>;

        $r14 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: java.lang.Object key>;

        $r13 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previousSibling>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r13);

        goto label10;

     label09:
        $r12 = r2.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map keyToKeyTail>;

        $r11 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: java.lang.Object key>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r11);

     label10:
        $r28 = r2.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.Multiset keyCount>;

        $r29 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: java.lang.Object key>;

        interfaceinvoke $r28.<com.mycila.inject.internal.guava.collect.Multiset: boolean remove(java.lang.Object)>($r29);

        return;
    }

    private void removeAllNodes(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$ValueForKeyIterator $r0;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r1;
        java.lang.Object r2;
        boolean $z0;

        r1 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r2 := @parameter0: java.lang.Object;

        $r0 = new com.mycila.inject.internal.guava.collect.LinkedListMultimap$ValueForKeyIterator;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$ValueForKeyIterator: void <init>(com.mycila.inject.internal.guava.collect.LinkedListMultimap,java.lang.Object)>(r1, r2);

     label1:
        $z0 = interfaceinvoke $r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r0.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r0.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        return;
    }

    private static void checkElement(java.lang.Object)
    {
        java.lang.Object r0;
        java.util.NoSuchElementException $r1;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;

     label1:
        return;
    }

    public int size()
    {
        int $i0;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        com.mycila.inject.internal.guava.collect.Multiset $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.Multiset keyCount>;

        $i0 = interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.Multiset: int size()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node $r1;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node head>;

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean containsKey(java.lang.Object)
    {
        java.util.Map $r2;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map keyToKeyHead>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node $r3;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator $r0;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r1;
        java.lang.Object $r2, r4, $r5;
        boolean $z0, $z1;

        r1 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r4 := @parameter0: java.lang.Object;

        $r0 = new com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: void <init>(com.mycila.inject.internal.guava.collect.LinkedListMultimap)>(r1);

     label1:
        $z0 = interfaceinvoke $r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r0.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node) $r2;

        $r5 = $r3.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: java.lang.Object value>;

        $z1 = staticinvoke <com.mycila.inject.internal.guava.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r5, r4);

        if $z1 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }

    public boolean containsEntry(java.lang.Object, java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$ValueForKeyIterator $r0;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r1;
        java.lang.Object r2, $r3, r4;
        boolean $z0, $z1;

        r1 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r2 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r0 = new com.mycila.inject.internal.guava.collect.LinkedListMultimap$ValueForKeyIterator;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$ValueForKeyIterator: void <init>(com.mycila.inject.internal.guava.collect.LinkedListMultimap,java.lang.Object)>(r1, r2);

     label1:
        $z0 = interfaceinvoke $r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r0.<java.util.Iterator: java.lang.Object next()>();

        $z1 = staticinvoke <com.mycila.inject.internal.guava.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r3, r4);

        if $z1 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }

    public boolean put(java.lang.Object, java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        java.lang.Object r1, r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node addNode(java.lang.Object,java.lang.Object,com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node)>(r1, r2, null);

        return 1;
    }

    public boolean remove(java.lang.Object, java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$ValueForKeyIterator $r0;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r1;
        java.lang.Object r2, $r3, r4;
        boolean $z0, $z1;

        r1 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r2 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r0 = new com.mycila.inject.internal.guava.collect.LinkedListMultimap$ValueForKeyIterator;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$ValueForKeyIterator: void <init>(com.mycila.inject.internal.guava.collect.LinkedListMultimap,java.lang.Object)>(r1, r2);

     label1:
        $z0 = interfaceinvoke $r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r0.<java.util.Iterator: java.lang.Object next()>();

        $z1 = staticinvoke <com.mycila.inject.internal.guava.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r3, r4);

        if $z1 == 0 goto label1;

        interfaceinvoke $r0.<java.util.Iterator: void remove()>();

        return 1;

     label2:
        return 0;
    }

    public boolean putAll(java.lang.Object, java.lang.Iterable)
    {
        java.util.Iterator $r1;
        java.lang.Iterable r0;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r3;
        java.lang.Object $r2, r4;
        boolean $z0, $z1, z2;

        r3 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r4 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Iterable;

        z2 = 0;

        $r1 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $z1 = virtualinvoke r3.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: boolean put(java.lang.Object,java.lang.Object)>(r4, $r2);

        z2 = z2 | $z1;

        goto label1;

     label2:
        return z2;
    }

    public boolean putAll(com.mycila.inject.internal.guava.collect.Multimap)
    {
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.util.Collection $r1;
        com.mycila.inject.internal.guava.collect.Multimap r0;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r5;
        java.lang.Object $r3, $r6, $r7;
        boolean $z0, $z1, z2;

        r5 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r0 := @parameter0: com.mycila.inject.internal.guava.collect.Multimap;

        z2 = 0;

        $r1 = interfaceinvoke r0.<com.mycila.inject.internal.guava.collect.Multimap: java.util.Collection entries()>();

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z1 = virtualinvoke r5.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: boolean put(java.lang.Object,java.lang.Object)>($r6, $r7);

        z2 = z2 | $z1;

        goto label1;

     label2:
        return z2;
    }

    public java.util.List replaceValues(java.lang.Object, java.lang.Iterable)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$ValueForKeyIterator $r3;
        java.util.Iterator $r5;
        java.lang.Iterable r4;
        java.util.List $r2;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        java.lang.Object r1, $r6, $r7;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Iterable;

        $r2 = specialinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.List getCopy(java.lang.Object)>(r1);

        $r3 = new com.mycila.inject.internal.guava.collect.LinkedListMultimap$ValueForKeyIterator;

        specialinvoke $r3.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$ValueForKeyIterator: void <init>(com.mycila.inject.internal.guava.collect.LinkedListMultimap,java.lang.Object)>(r0, r1);

        $r5 = interfaceinvoke r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        interfaceinvoke $r3.<java.util.ListIterator: java.lang.Object next()>();

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r3.<java.util.ListIterator: void set(java.lang.Object)>($r7);

        goto label1;

     label2:
        $z3 = interfaceinvoke $r3.<java.util.ListIterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        interfaceinvoke $r3.<java.util.ListIterator: java.lang.Object next()>();

        interfaceinvoke $r3.<java.util.ListIterator: void remove()>();

        goto label2;

     label3:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r3.<java.util.ListIterator: void add(java.lang.Object)>($r6);

        goto label3;

     label4:
        return $r2;
    }

    private java.util.List getCopy(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$ValueForKeyIterator $r0;
        java.util.List $r4;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r1;
        java.lang.Object r2;
        java.util.ArrayList $r3;

        r1 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r2 := @parameter0: java.lang.Object;

        $r0 = new com.mycila.inject.internal.guava.collect.LinkedListMultimap$ValueForKeyIterator;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$ValueForKeyIterator: void <init>(com.mycila.inject.internal.guava.collect.LinkedListMultimap,java.lang.Object)>(r1, r2);

        $r3 = staticinvoke <com.mycila.inject.internal.guava.collect.Lists: java.util.ArrayList newArrayList(java.util.Iterator)>($r0);

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r3);

        return $r4;
    }

    public java.util.List removeAll(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        java.lang.Object r1;
        java.util.List $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.List getCopy(java.lang.Object)>(r1);

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: void removeAllNodes(java.lang.Object)>(r1);

        return $r2;
    }

    public void clear()
    {
        com.mycila.inject.internal.guava.collect.Multiset $r1;
        java.util.Map $r2, $r3;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node head> = null;

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node tail> = null;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.Multiset keyCount>;

        interfaceinvoke $r1.<com.mycila.inject.internal.guava.collect.Multiset: void clear()>();

        $r2 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map keyToKeyHead>;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

        $r3 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map keyToKeyTail>;

        interfaceinvoke $r3.<java.util.Map: void clear()>();

        return;
    }

    public java.util.List get(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r1;
        java.lang.Object r2;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$1 $r0;

        r1 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r2 := @parameter0: java.lang.Object;

        $r0 = new com.mycila.inject.internal.guava.collect.LinkedListMultimap$1;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$1: void <init>(com.mycila.inject.internal.guava.collect.LinkedListMultimap,java.lang.Object)>(r1, r2);

        return $r0;
    }

    public java.util.Set keySet()
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        java.util.Set r2;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$2 $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r2 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Set keySet>;

        if r2 != null goto label1;

        $r1 = new com.mycila.inject.internal.guava.collect.LinkedListMultimap$2;

        specialinvoke $r1.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$2: void <init>(com.mycila.inject.internal.guava.collect.LinkedListMultimap)>(r0);

        r2 = $r1;

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Set keySet> = $r1;

     label1:
        return r2;
    }

    public com.mycila.inject.internal.guava.collect.Multiset keys()
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$MultisetView $r1;
        com.mycila.inject.internal.guava.collect.Multiset r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r2 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.Multiset keys>;

        if r2 != null goto label1;

        $r1 = new com.mycila.inject.internal.guava.collect.LinkedListMultimap$MultisetView;

        specialinvoke $r1.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$MultisetView: void <init>(com.mycila.inject.internal.guava.collect.LinkedListMultimap,com.mycila.inject.internal.guava.collect.LinkedListMultimap$1)>(r0, null);

        r2 = $r1;

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.Multiset keys> = $r1;

     label1:
        return r2;
    }

    public java.util.List values()
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        java.util.List r2;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$3 $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r2 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.List valuesList>;

        if r2 != null goto label1;

        $r1 = new com.mycila.inject.internal.guava.collect.LinkedListMultimap$3;

        specialinvoke $r1.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$3: void <init>(com.mycila.inject.internal.guava.collect.LinkedListMultimap)>(r0);

        r2 = $r1;

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.List valuesList> = $r1;

     label1:
        return r2;
    }

    private static java.util.Map$Entry createEntry(com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$4 $r0;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node r1;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node;

        $r0 = new com.mycila.inject.internal.guava.collect.LinkedListMultimap$4;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$4: void <init>(com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node)>(r1);

        return $r0;
    }

    public java.util.List entries()
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        java.util.List r2;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$5 $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r2 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.List entries>;

        if r2 != null goto label1;

        $r1 = new com.mycila.inject.internal.guava.collect.LinkedListMultimap$5;

        specialinvoke $r1.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$5: void <init>(com.mycila.inject.internal.guava.collect.LinkedListMultimap)>(r0);

        r2 = $r1;

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.List entries> = $r1;

     label1:
        return r2;
    }

    public java.util.Map asMap()
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$6 $r1;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        java.util.Map r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r2 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map map>;

        if r2 != null goto label1;

        $r1 = new com.mycila.inject.internal.guava.collect.LinkedListMultimap$6;

        specialinvoke $r1.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$6: void <init>(com.mycila.inject.internal.guava.collect.LinkedListMultimap)>(r0);

        r2 = $r1;

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map map> = $r1;

     label1:
        return r2;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Map $r3, $r4;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r1;
        java.lang.Object r0;
        com.mycila.inject.internal.guava.collect.Multimap r2;
        boolean $z0, $z1;

        r1 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof com.mycila.inject.internal.guava.collect.Multimap;

        if $z0 == 0 goto label2;

        r2 = (com.mycila.inject.internal.guava.collect.Multimap) r0;

        $r3 = virtualinvoke r1.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map asMap()>();

        $r4 = interfaceinvoke r2.<com.mycila.inject.internal.guava.collect.Multimap: java.util.Map asMap()>();

        $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        return $z1;

     label2:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        java.util.Map $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map asMap()>();

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        java.lang.String $r2;
        java.util.Map $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map asMap()>();

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.List $r2;
        int $i0;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r1;
        java.io.ObjectOutputStream r0;
        java.lang.Object $r4, $r6, $r7;
        boolean $z0;

        r1 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r0 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r0.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $i0 = virtualinvoke r1.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: int size()>();

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeInt(int)>($i0);

        $r2 = virtualinvoke r1.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.List entries()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r6);

        $r7 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r7);

        goto label1;

     label2:
        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream r0;
        java.util.HashMap $r3, $r4;
        com.mycila.inject.internal.guava.collect.LinkedHashMultiset $r2;
        int $i0, i1;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r1;
        java.lang.Object $r5, $r6;

        r1 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r0 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r0.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = staticinvoke <com.mycila.inject.internal.guava.collect.LinkedHashMultiset: com.mycila.inject.internal.guava.collect.LinkedHashMultiset create()>();

        r1.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.Multiset keyCount> = $r2;

        $r3 = staticinvoke <com.mycila.inject.internal.guava.collect.Maps: java.util.HashMap newHashMap()>();

        r1.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map keyToKeyHead> = $r3;

        $r4 = staticinvoke <com.mycila.inject.internal.guava.collect.Maps: java.util.HashMap newHashMap()>();

        r1.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map keyToKeyTail> = $r4;

        $i0 = virtualinvoke r0.<java.io.ObjectInputStream: int readInt()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r5 = virtualinvoke r0.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r6 = virtualinvoke r0.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        virtualinvoke r1.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: boolean put(java.lang.Object,java.lang.Object)>($r5, $r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public volatile java.util.Collection entries()
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        java.util.List $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.List entries()>();

        return $r1;
    }

    public volatile java.util.Collection values()
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        java.util.List $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.List values()>();

        return $r1;
    }

    public volatile java.util.Collection get(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        java.lang.Object r1;
        java.util.List $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.List get(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.util.Collection removeAll(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        java.lang.Object r1;
        java.util.List $r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.List removeAll(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)
    {
        java.util.List $r3;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        java.lang.Object r1;
        java.lang.Iterable r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Iterable;

        $r3 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.List replaceValues(java.lang.Object,java.lang.Iterable)>(r1, r2);

        return $r3;
    }

    static com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node access$000(com.mycila.inject.internal.guava.collect.LinkedListMultimap)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node $r1;

        r0 := @parameter0: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node head>;

        return $r1;
    }

    static com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node access$100(com.mycila.inject.internal.guava.collect.LinkedListMultimap)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node $r1;

        r0 := @parameter0: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node tail>;

        return $r1;
    }

    static void access$200(java.lang.Object)
    {
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        staticinvoke <com.mycila.inject.internal.guava.collect.LinkedListMultimap: void checkElement(java.lang.Object)>(r0);

        return;
    }

    static void access$300(com.mycila.inject.internal.guava.collect.LinkedListMultimap, com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node r1;

        r0 := @parameter0: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r1 := @parameter1: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: void removeNode(com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node)>(r1);

        return;
    }

    static void access$400(com.mycila.inject.internal.guava.collect.LinkedListMultimap, java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        java.lang.Object r1;

        r0 := @parameter0: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r1 := @parameter1: java.lang.Object;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: void removeAllNodes(java.lang.Object)>(r1);

        return;
    }

    static java.util.Map access$500(com.mycila.inject.internal.guava.collect.LinkedListMultimap)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        java.util.Map $r1;

        r0 := @parameter0: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map keyToKeyHead>;

        return $r1;
    }

    static com.mycila.inject.internal.guava.collect.Multiset access$600(com.mycila.inject.internal.guava.collect.LinkedListMultimap)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        com.mycila.inject.internal.guava.collect.Multiset $r1;

        r0 := @parameter0: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.Multiset keyCount>;

        return $r1;
    }

    static java.util.Map access$700(com.mycila.inject.internal.guava.collect.LinkedListMultimap)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        java.util.Map $r1;

        r0 := @parameter0: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map keyToKeyTail>;

        return $r1;
    }

    static com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node access$800(com.mycila.inject.internal.guava.collect.LinkedListMultimap, java.lang.Object, java.lang.Object, com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r0;
        java.lang.Object r1, r2;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node r3, $r4;

        r0 := @parameter0: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node;

        $r4 = specialinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node addNode(java.lang.Object,java.lang.Object,com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node)>(r1, r2, r3);

        return $r4;
    }

    static java.util.Map$Entry access$1100(com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node r0;
        java.util.Map$Entry $r1;

        r0 := @parameter0: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node;

        $r1 = staticinvoke <com.mycila.inject.internal.guava.collect.LinkedListMultimap: java.util.Map$Entry createEntry(com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node)>(r0);

        return $r1;
    }

    public static void <clinit>()
    {
        <com.mycila.inject.internal.guava.collect.LinkedListMultimap: long serialVersionUID> = 0L;

        return;
    }
}
