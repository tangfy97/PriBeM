public class org.apache.batik.anim.timing.SyncbaseTimingSpecifier extends org.apache.batik.anim.timing.OffsetTimingSpecifier
{
    protected java.lang.String syncbaseID;
    protected org.apache.batik.anim.timing.TimedElement syncbaseElement;
    protected boolean syncBegin;
    protected java.util.HashMap instances;

    public void <init>(org.apache.batik.anim.timing.TimedElement, boolean, float, java.lang.String, boolean)
    {
        java.util.HashMap $r2;
        org.apache.batik.anim.timing.SyncbaseTimingSpecifier r0;
        org.apache.batik.anim.timing.TimedElement r1, $r4, $r5;
        float f0;
        java.lang.String r3;
        boolean z0, z1;

        r0 := @this: org.apache.batik.anim.timing.SyncbaseTimingSpecifier;

        r1 := @parameter0: org.apache.batik.anim.timing.TimedElement;

        z0 := @parameter1: boolean;

        f0 := @parameter2: float;

        r3 := @parameter3: java.lang.String;

        z1 := @parameter4: boolean;

        specialinvoke r0.<org.apache.batik.anim.timing.OffsetTimingSpecifier: void <init>(org.apache.batik.anim.timing.TimedElement,boolean,float)>(r1, z0, f0);

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.batik.anim.timing.SyncbaseTimingSpecifier: java.util.HashMap instances> = $r2;

        r0.<org.apache.batik.anim.timing.SyncbaseTimingSpecifier: java.lang.String syncbaseID> = r3;

        r0.<org.apache.batik.anim.timing.SyncbaseTimingSpecifier: boolean syncBegin> = z1;

        $r4 = virtualinvoke r1.<org.apache.batik.anim.timing.TimedElement: org.apache.batik.anim.timing.TimedElement getTimedElementById(java.lang.String)>(r3);

        r0.<org.apache.batik.anim.timing.SyncbaseTimingSpecifier: org.apache.batik.anim.timing.TimedElement syncbaseElement> = $r4;

        $r5 = r0.<org.apache.batik.anim.timing.SyncbaseTimingSpecifier: org.apache.batik.anim.timing.TimedElement syncbaseElement>;

        virtualinvoke $r5.<org.apache.batik.anim.timing.TimedElement: void addDependent(org.apache.batik.anim.timing.TimingSpecifier,boolean)>(r0, z1);

        return;
    }

    public java.lang.String toString()
    {
        byte $b0;
        org.apache.batik.anim.timing.SyncbaseTimingSpecifier r1;
        java.lang.StringBuffer $r0, $r3, $r4, $r5, $r6;
        float $f0;
        java.lang.String $r2, $r7, $r8, $r9;
        boolean $z0;

        r1 := @this: org.apache.batik.anim.timing.SyncbaseTimingSpecifier;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.batik.anim.timing.SyncbaseTimingSpecifier: java.lang.String syncbaseID>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $z0 = r1.<org.apache.batik.anim.timing.SyncbaseTimingSpecifier: boolean syncBegin>;

        if $z0 == 0 goto label1;

        $r8 = "begin";

        goto label2;

     label1:
        $r8 = "end";

     label2:
        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $f0 = r1.<org.apache.batik.anim.timing.OffsetTimingSpecifier: float offset>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 == 0 goto label3;

        $r9 = specialinvoke r1.<org.apache.batik.anim.timing.OffsetTimingSpecifier: java.lang.String toString()>();

        goto label4;

     label3:
        $r9 = "";

     label4:
        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    public void initialize()
    {
        org.apache.batik.anim.timing.SyncbaseTimingSpecifier r0;

        r0 := @this: org.apache.batik.anim.timing.SyncbaseTimingSpecifier;

        return;
    }

    public boolean isEventCondition()
    {
        org.apache.batik.anim.timing.SyncbaseTimingSpecifier r0;

        r0 := @this: org.apache.batik.anim.timing.SyncbaseTimingSpecifier;

        return 0;
    }

    float newInterval(org.apache.batik.anim.timing.Interval)
    {
        org.apache.batik.anim.timing.InstanceTime $r2;
        org.apache.batik.anim.timing.Interval r3;
        java.util.HashMap $r4;
        org.apache.batik.anim.timing.SyncbaseTimingSpecifier r0;
        org.apache.batik.anim.timing.TimedElement $r1, $r5;
        float $f0, $f1, $f2, $f3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.batik.anim.timing.SyncbaseTimingSpecifier;

        r3 := @parameter0: org.apache.batik.anim.timing.Interval;

        $r1 = r0.<org.apache.batik.anim.timing.TimingSpecifier: org.apache.batik.anim.timing.TimedElement owner>;

        $z0 = $r1.<org.apache.batik.anim.timing.TimedElement: boolean hasPropagated>;

        if $z0 == 0 goto label1;

        return #InfinityF;

     label1:
        $r2 = new org.apache.batik.anim.timing.InstanceTime;

        $z1 = r0.<org.apache.batik.anim.timing.SyncbaseTimingSpecifier: boolean syncBegin>;

        if $z1 == 0 goto label2;

        $f3 = virtualinvoke r3.<org.apache.batik.anim.timing.Interval: float getBegin()>();

        goto label3;

     label2:
        $f3 = virtualinvoke r3.<org.apache.batik.anim.timing.Interval: float getEnd()>();

     label3:
        $f0 = r0.<org.apache.batik.anim.timing.OffsetTimingSpecifier: float offset>;

        $f1 = $f3 + $f0;

        specialinvoke $r2.<org.apache.batik.anim.timing.InstanceTime: void <init>(org.apache.batik.anim.timing.TimingSpecifier,float,boolean)>(r0, $f1, 1);

        $r4 = r0.<org.apache.batik.anim.timing.SyncbaseTimingSpecifier: java.util.HashMap instances>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r2);

        $z2 = r0.<org.apache.batik.anim.timing.SyncbaseTimingSpecifier: boolean syncBegin>;

        virtualinvoke r3.<org.apache.batik.anim.timing.Interval: void addDependent(org.apache.batik.anim.timing.InstanceTime,boolean)>($r2, $z2);

        $r5 = r0.<org.apache.batik.anim.timing.TimingSpecifier: org.apache.batik.anim.timing.TimedElement owner>;

        $z3 = r0.<org.apache.batik.anim.timing.TimingSpecifier: boolean isBegin>;

        $f2 = virtualinvoke $r5.<org.apache.batik.anim.timing.TimedElement: float addInstanceTime(org.apache.batik.anim.timing.InstanceTime,boolean)>($r2, $z3);

        return $f2;
    }

    float removeInterval(org.apache.batik.anim.timing.Interval)
    {
        org.apache.batik.anim.timing.Interval r2;
        org.apache.batik.anim.timing.InstanceTime r5;
        java.util.HashMap $r3;
        org.apache.batik.anim.timing.SyncbaseTimingSpecifier r0;
        org.apache.batik.anim.timing.TimedElement $r1, $r6;
        float $f0;
        java.lang.Object $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.batik.anim.timing.SyncbaseTimingSpecifier;

        r2 := @parameter0: org.apache.batik.anim.timing.Interval;

        $r1 = r0.<org.apache.batik.anim.timing.TimingSpecifier: org.apache.batik.anim.timing.TimedElement owner>;

        $z0 = $r1.<org.apache.batik.anim.timing.TimedElement: boolean hasPropagated>;

        if $z0 == 0 goto label1;

        return #InfinityF;

     label1:
        $r3 = r0.<org.apache.batik.anim.timing.SyncbaseTimingSpecifier: java.util.HashMap instances>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (org.apache.batik.anim.timing.InstanceTime) $r4;

        $z1 = r0.<org.apache.batik.anim.timing.SyncbaseTimingSpecifier: boolean syncBegin>;

        virtualinvoke r2.<org.apache.batik.anim.timing.Interval: void removeDependent(org.apache.batik.anim.timing.InstanceTime,boolean)>(r5, $z1);

        $r6 = r0.<org.apache.batik.anim.timing.TimingSpecifier: org.apache.batik.anim.timing.TimedElement owner>;

        $z2 = r0.<org.apache.batik.anim.timing.TimingSpecifier: boolean isBegin>;

        $f0 = virtualinvoke $r6.<org.apache.batik.anim.timing.TimedElement: float removeInstanceTime(org.apache.batik.anim.timing.InstanceTime,boolean)>(r5, $z2);

        return $f0;
    }

    float handleTimebaseUpdate(org.apache.batik.anim.timing.InstanceTime, float)
    {
        org.apache.batik.anim.timing.InstanceTime r2;
        org.apache.batik.anim.timing.SyncbaseTimingSpecifier r0;
        org.apache.batik.anim.timing.TimedElement $r1, $r3;
        float $f0, f1;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.anim.timing.SyncbaseTimingSpecifier;

        r2 := @parameter0: org.apache.batik.anim.timing.InstanceTime;

        f1 := @parameter1: float;

        $r1 = r0.<org.apache.batik.anim.timing.TimingSpecifier: org.apache.batik.anim.timing.TimedElement owner>;

        $z0 = $r1.<org.apache.batik.anim.timing.TimedElement: boolean hasPropagated>;

        if $z0 == 0 goto label1;

        return #InfinityF;

     label1:
        $r3 = r0.<org.apache.batik.anim.timing.TimingSpecifier: org.apache.batik.anim.timing.TimedElement owner>;

        $z1 = r0.<org.apache.batik.anim.timing.TimingSpecifier: boolean isBegin>;

        $f0 = virtualinvoke $r3.<org.apache.batik.anim.timing.TimedElement: float instanceTimeChanged(org.apache.batik.anim.timing.InstanceTime,boolean)>(r2, $z1);

        return $f0;
    }
}
