final class org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DoubleKD extends org.codehaus.jackson.map.deser.std.StdKeyDeserializer
{

    void <init>()
    {
        org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DoubleKD r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DoubleKD;

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.StdKeyDeserializer: void <init>(java.lang.Class)>(class "Ljava/lang/Double;");

        return;
    }

    public java.lang.Double _parse(java.lang.String, org.codehaus.jackson.map.DeserializationContext) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DoubleKD r0;
        java.lang.Double $r2;
        java.lang.String r1;
        org.codehaus.jackson.map.DeserializationContext r3;
        double $d0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DoubleKD;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $d0 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DoubleKD: double _parseDouble(java.lang.String)>(r1);

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r2;
    }

    public volatile java.lang.Object _parse(java.lang.String, org.codehaus.jackson.map.DeserializationContext) throws java.lang.Exception
    {
        org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DoubleKD r0;
        java.lang.Double $r3;
        java.lang.String r1;
        org.codehaus.jackson.map.DeserializationContext r2;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DoubleKD;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DoubleKD: java.lang.Double _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>(r1, r2);

        return $r3;
    }
}
