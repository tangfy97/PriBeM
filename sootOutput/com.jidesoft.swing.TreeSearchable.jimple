public class com.jidesoft.swing.TreeSearchable extends com.jidesoft.swing.Searchable implements javax.swing.event.TreeModelListener, java.beans.PropertyChangeListener
{
    private boolean _recursive;
    private transient java.util.List _treePathes;

    public void <init>(javax.swing.JTree)
    {
        com.jidesoft.swing.TreeSearchable r0;
        javax.swing.tree.TreeModel $r2, $r3;
        javax.swing.JTree r1;

        r0 := @this: com.jidesoft.swing.TreeSearchable;

        r1 := @parameter0: javax.swing.JTree;

        specialinvoke r0.<com.jidesoft.swing.Searchable: void <init>(javax.swing.JComponent)>(r1);

        r0.<com.jidesoft.swing.TreeSearchable: boolean _recursive> = 0;

        $r2 = virtualinvoke r1.<javax.swing.JTree: javax.swing.tree.TreeModel getModel()>();

        if $r2 == null goto label1;

        $r3 = virtualinvoke r1.<javax.swing.JTree: javax.swing.tree.TreeModel getModel()>();

        interfaceinvoke $r3.<javax.swing.tree.TreeModel: void addTreeModelListener(javax.swing.event.TreeModelListener)>(r0);

     label1:
        virtualinvoke r1.<javax.swing.JTree: void addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>("model", r0);

        return;
    }

    public boolean isRecursive()
    {
        com.jidesoft.swing.TreeSearchable r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.TreeSearchable;

        $z0 = r0.<com.jidesoft.swing.TreeSearchable: boolean _recursive>;

        return $z0;
    }

    public void setRecursive(boolean)
    {
        com.jidesoft.swing.TreeSearchable r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.TreeSearchable;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.swing.TreeSearchable: boolean _recursive> = z0;

        virtualinvoke r0.<com.jidesoft.swing.TreeSearchable: void resetTreePathes()>();

        return;
    }

    public void uninstallListeners()
    {
        javax.swing.JComponent $r1, $r2, $r5, $r8;
        javax.swing.tree.TreeModel $r4, $r7;
        javax.swing.JTree $r3, $r6;
        com.jidesoft.swing.TreeSearchable r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.TreeSearchable;

        specialinvoke r0.<com.jidesoft.swing.Searchable: void uninstallListeners()>();

        $r1 = r0.<com.jidesoft.swing.TreeSearchable: javax.swing.JComponent _component>;

        $z0 = $r1 instanceof javax.swing.JTree;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.jidesoft.swing.TreeSearchable: javax.swing.JComponent _component>;

        $r3 = (javax.swing.JTree) $r2;

        $r4 = virtualinvoke $r3.<javax.swing.JTree: javax.swing.tree.TreeModel getModel()>();

        if $r4 == null goto label1;

        $r5 = r0.<com.jidesoft.swing.TreeSearchable: javax.swing.JComponent _component>;

        $r6 = (javax.swing.JTree) $r5;

        $r7 = virtualinvoke $r6.<javax.swing.JTree: javax.swing.tree.TreeModel getModel()>();

        interfaceinvoke $r7.<javax.swing.tree.TreeModel: void removeTreeModelListener(javax.swing.event.TreeModelListener)>(r0);

     label1:
        $r8 = r0.<com.jidesoft.swing.TreeSearchable: javax.swing.JComponent _component>;

        virtualinvoke $r8.<javax.swing.JComponent: void removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>("model", r0);

        return;
    }

    protected void setSelectedIndex(int, boolean)
    {
        com.jidesoft.swing.TreeSearchable r0;
        int i0;
        boolean $z0, $z1, z2;
        javax.swing.JComponent $r3, $r5, $r7, $r9, $r11, $r13;
        javax.swing.tree.TreePath r2;
        javax.swing.JTree $r4, $r6, $r8, $r10, $r12, $r14;
        java.lang.Object $r1;

        r0 := @this: com.jidesoft.swing.TreeSearchable;

        i0 := @parameter0: int;

        z2 := @parameter1: boolean;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.TreeSearchable: boolean isRecursive()>();

        if $z0 != 0 goto label3;

        if z2 == 0 goto label1;

        $r13 = r0.<com.jidesoft.swing.TreeSearchable: javax.swing.JComponent _component>;

        $r14 = (javax.swing.JTree) $r13;

        virtualinvoke $r14.<javax.swing.JTree: void addSelectionInterval(int,int)>(i0, i0);

        goto label2;

     label1:
        $r9 = r0.<com.jidesoft.swing.TreeSearchable: javax.swing.JComponent _component>;

        $r10 = (javax.swing.JTree) $r9;

        virtualinvoke $r10.<javax.swing.JTree: void setSelectionRow(int)>(i0);

     label2:
        $r11 = r0.<com.jidesoft.swing.TreeSearchable: javax.swing.JComponent _component>;

        $r12 = (javax.swing.JTree) $r11;

        virtualinvoke $r12.<javax.swing.JTree: void scrollRowToVisible(int)>(i0);

        goto label6;

     label3:
        $r1 = virtualinvoke r0.<com.jidesoft.swing.TreeSearchable: java.lang.Object getElementAt(int)>(i0);

        $z1 = $r1 instanceof javax.swing.tree.TreePath;

        if $z1 == 0 goto label6;

        r2 = (javax.swing.tree.TreePath) $r1;

        if z2 == 0 goto label4;

        $r7 = r0.<com.jidesoft.swing.TreeSearchable: javax.swing.JComponent _component>;

        $r8 = (javax.swing.JTree) $r7;

        virtualinvoke $r8.<javax.swing.JTree: void addSelectionPath(javax.swing.tree.TreePath)>(r2);

        goto label5;

     label4:
        $r3 = r0.<com.jidesoft.swing.TreeSearchable: javax.swing.JComponent _component>;

        $r4 = (javax.swing.JTree) $r3;

        virtualinvoke $r4.<javax.swing.JTree: void setSelectionPath(javax.swing.tree.TreePath)>(r2);

     label5:
        $r5 = r0.<com.jidesoft.swing.TreeSearchable: javax.swing.JComponent _component>;

        $r6 = (javax.swing.JTree) $r5;

        virtualinvoke $r6.<javax.swing.JTree: void scrollPathToVisible(javax.swing.tree.TreePath)>(r2);

     label6:
        return;
    }

    protected int getSelectedIndex()
    {
        javax.swing.tree.TreePath[] $r3;
        com.jidesoft.swing.TreeSearchable r0;
        int[] $r8;
        int $i0, $i1, $i2, $i3, $i5, $i7;
        boolean $z0;
        javax.swing.JComponent $r1, $r6;
        javax.swing.tree.TreePath $r5;
        javax.swing.JTree $r2, $r7;
        java.util.List $r4;

        r0 := @this: com.jidesoft.swing.TreeSearchable;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.TreeSearchable: boolean isRecursive()>();

        if $z0 != 0 goto label3;

        $r6 = r0.<com.jidesoft.swing.TreeSearchable: javax.swing.JComponent _component>;

        $r7 = (javax.swing.JTree) $r6;

        $r8 = virtualinvoke $r7.<javax.swing.JTree: int[] getSelectionRows()>();

        if $r8 == null goto label1;

        $i2 = lengthof $r8;

        if $i2 == 0 goto label1;

        $i3 = $r8[0];

        goto label2;

     label1:
        $i5 = (int) -1;

        $i3 = $i5;

     label2:
        return $i3;

     label3:
        $r1 = r0.<com.jidesoft.swing.TreeSearchable: javax.swing.JComponent _component>;

        $r2 = (javax.swing.JTree) $r1;

        $r3 = virtualinvoke $r2.<javax.swing.JTree: javax.swing.tree.TreePath[] getSelectionPaths()>();

        if $r3 == null goto label4;

        $i0 = lengthof $r3;

        if $i0 <= 0 goto label4;

        $r4 = virtualinvoke r0.<com.jidesoft.swing.TreeSearchable: java.util.List getTreePathes()>();

        $r5 = $r3[0];

        $i1 = interfaceinvoke $r4.<java.util.List: int indexOf(java.lang.Object)>($r5);

        return $i1;

     label4:
        $i7 = (int) -1;

        return $i7;
    }

    protected java.lang.Object getElementAt(int)
    {
        javax.swing.JComponent $r3;
        javax.swing.tree.TreePath $r5;
        javax.swing.JTree $r4;
        java.util.List $r1;
        com.jidesoft.swing.TreeSearchable r0;
        int i0, $i2;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.TreeSearchable;

        i0 := @parameter0: int;

        $i2 = (int) -1;

        if i0 != $i2 goto label1;

        return null;

     label1:
        $z0 = virtualinvoke r0.<com.jidesoft.swing.TreeSearchable: boolean isRecursive()>();

        if $z0 != 0 goto label2;

        $r3 = r0.<com.jidesoft.swing.TreeSearchable: javax.swing.JComponent _component>;

        $r4 = (javax.swing.JTree) $r3;

        $r5 = virtualinvoke $r4.<javax.swing.JTree: javax.swing.tree.TreePath getPathForRow(int)>(i0);

        return $r5;

     label2:
        $r1 = virtualinvoke r0.<com.jidesoft.swing.TreeSearchable: java.util.List getTreePathes()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        return $r2;
    }

    protected int getElementCount()
    {
        javax.swing.JComponent $r2;
        java.util.List $r1;
        com.jidesoft.swing.TreeSearchable r0;
        int $i0, $i1;
        javax.swing.JTree $r3;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.TreeSearchable;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.TreeSearchable: boolean isRecursive()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<com.jidesoft.swing.TreeSearchable: javax.swing.JComponent _component>;

        $r3 = (javax.swing.JTree) $r2;

        $i1 = virtualinvoke $r3.<javax.swing.JTree: int getRowCount()>();

        return $i1;

     label1:
        $r1 = virtualinvoke r0.<com.jidesoft.swing.TreeSearchable: java.util.List getTreePathes()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    protected void populateTreePaths()
    {
        javax.swing.JComponent $r2, $r7;
        javax.swing.tree.TreePath $r6;
        javax.swing.tree.TreeModel $r4, $r9;
        javax.swing.JTree $r3, $r8;
        java.util.ArrayList $r1;
        com.jidesoft.swing.TreeSearchable r0;
        java.lang.Object $r5;

        r0 := @this: com.jidesoft.swing.TreeSearchable;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.jidesoft.swing.TreeSearchable: java.util.List _treePathes> = $r1;

        $r2 = r0.<com.jidesoft.swing.TreeSearchable: javax.swing.JComponent _component>;

        $r3 = (javax.swing.JTree) $r2;

        $r4 = virtualinvoke $r3.<javax.swing.JTree: javax.swing.tree.TreeModel getModel()>();

        $r5 = interfaceinvoke $r4.<javax.swing.tree.TreeModel: java.lang.Object getRoot()>();

        $r6 = new javax.swing.tree.TreePath;

        specialinvoke $r6.<javax.swing.tree.TreePath: void <init>(java.lang.Object)>($r5);

        $r7 = r0.<com.jidesoft.swing.TreeSearchable: javax.swing.JComponent _component>;

        $r8 = (javax.swing.JTree) $r7;

        $r9 = virtualinvoke $r8.<javax.swing.JTree: javax.swing.tree.TreeModel getModel()>();

        specialinvoke r0.<com.jidesoft.swing.TreeSearchable: void populateTreePaths0(java.lang.Object,javax.swing.tree.TreePath,javax.swing.tree.TreeModel)>($r5, $r6, $r9);

        return;
    }

    private void populateTreePaths0(java.lang.Object, javax.swing.tree.TreePath, javax.swing.tree.TreeModel)
    {
        javax.swing.tree.TreeModel r5, $r12;
        com.jidesoft.swing.TreeSearchable r0;
        int i0, $i1;
        boolean $z0;
        javax.swing.JComponent $r1, $r10;
        javax.swing.tree.TreePath r3, $r8;
        javax.swing.JTree $r2, $r11;
        java.util.List $r4;
        java.lang.Object r6, $r7, $r9, $r13;

        r0 := @this: com.jidesoft.swing.TreeSearchable;

        r6 := @parameter0: java.lang.Object;

        r3 := @parameter1: javax.swing.tree.TreePath;

        r5 := @parameter2: javax.swing.tree.TreeModel;

        $r1 = r0.<com.jidesoft.swing.TreeSearchable: javax.swing.JComponent _component>;

        $r2 = (javax.swing.JTree) $r1;

        $z0 = virtualinvoke $r2.<javax.swing.JTree: boolean isRootVisible()>();

        if $z0 != 0 goto label1;

        $r9 = virtualinvoke r3.<javax.swing.tree.TreePath: java.lang.Object getLastPathComponent()>();

        $r10 = r0.<com.jidesoft.swing.TreeSearchable: javax.swing.JComponent _component>;

        $r11 = (javax.swing.JTree) $r10;

        $r12 = virtualinvoke $r11.<javax.swing.JTree: javax.swing.tree.TreeModel getModel()>();

        $r13 = interfaceinvoke $r12.<javax.swing.tree.TreeModel: java.lang.Object getRoot()>();

        if $r9 == $r13 goto label2;

     label1:
        $r4 = r0.<com.jidesoft.swing.TreeSearchable: java.util.List _treePathes>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r3);

     label2:
        i0 = 0;

     label3:
        $i1 = interfaceinvoke r5.<javax.swing.tree.TreeModel: int getChildCount(java.lang.Object)>(r6);

        if i0 >= $i1 goto label4;

        $r7 = interfaceinvoke r5.<javax.swing.tree.TreeModel: java.lang.Object getChild(java.lang.Object,int)>(r6, i0);

        $r8 = virtualinvoke r3.<javax.swing.tree.TreePath: javax.swing.tree.TreePath pathByAddingChild(java.lang.Object)>($r7);

        specialinvoke r0.<com.jidesoft.swing.TreeSearchable: void populateTreePaths0(java.lang.Object,javax.swing.tree.TreePath,javax.swing.tree.TreeModel)>($r7, $r8, r5);

        i0 = i0 + 1;

        goto label3;

     label4:
        return;
    }

    protected void resetTreePathes()
    {
        com.jidesoft.swing.TreeSearchable r0;

        r0 := @this: com.jidesoft.swing.TreeSearchable;

        r0.<com.jidesoft.swing.TreeSearchable: java.util.List _treePathes> = null;

        return;
    }

    protected java.util.List getTreePathes()
    {
        java.util.List $r1, $r2;
        com.jidesoft.swing.TreeSearchable r0;

        r0 := @this: com.jidesoft.swing.TreeSearchable;

        $r1 = r0.<com.jidesoft.swing.TreeSearchable: java.util.List _treePathes>;

        if $r1 != null goto label1;

        virtualinvoke r0.<com.jidesoft.swing.TreeSearchable: void populateTreePaths()>();

     label1:
        $r2 = r0.<com.jidesoft.swing.TreeSearchable: java.util.List _treePathes>;

        return $r2;
    }

    protected java.lang.String convertElementToString(java.lang.Object)
    {
        javax.swing.tree.TreeModel $r13;
        javax.swing.tree.TreePath[] $r9;
        com.jidesoft.swing.TreeSearchable r4;
        int i0, i1, $i2;
        java.lang.String $r1, $r6, $r15;
        boolean $z0, $z1, z2, $z3, $z4, $z5, $z6, $z7;
        javax.swing.tree.TreePath $r2, $r10, r11, $r12, $r14;
        javax.swing.JTree r8;
        java.awt.Component $r5, $r7;
        java.lang.Object r0, $r3;

        r4 := @this: com.jidesoft.swing.TreeSearchable;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof javax.swing.tree.TreePath;

        if $z0 == 0 goto label7;

        $r2 = (javax.swing.tree.TreePath) r0;

        $r3 = virtualinvoke $r2.<javax.swing.tree.TreePath: java.lang.Object getLastPathComponent()>();

        $r5 = virtualinvoke r4.<com.jidesoft.swing.TreeSearchable: java.awt.Component getComponent()>();

        $z1 = $r5 instanceof javax.swing.JTree;

        if $z1 == 0 goto label6;

        $r7 = virtualinvoke r4.<com.jidesoft.swing.TreeSearchable: java.awt.Component getComponent()>();

        r8 = (javax.swing.JTree) $r7;

        $r9 = virtualinvoke r8.<javax.swing.JTree: javax.swing.tree.TreePath[] getSelectionPaths()>();

        z2 = 0;

        if $r9 == null goto label3;

        i0 = lengthof $r9;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r11 = $r9[i1];

        if r11 != r0 goto label2;

        z2 = 1;

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $z3 = z2;

        $r12 = (javax.swing.tree.TreePath) r0;

        $z4 = virtualinvoke r8.<javax.swing.JTree: boolean isExpanded(javax.swing.tree.TreePath)>($r12);

        $r13 = virtualinvoke r8.<javax.swing.JTree: javax.swing.tree.TreeModel getModel()>();

        $z5 = interfaceinvoke $r13.<javax.swing.tree.TreeModel: boolean isLeaf(java.lang.Object)>($r3);

        $r14 = (javax.swing.tree.TreePath) r0;

        $i2 = virtualinvoke r8.<javax.swing.JTree: int getRowForPath(javax.swing.tree.TreePath)>($r14);

        $z6 = virtualinvoke r8.<javax.swing.JTree: boolean hasFocus()>();

        if $z6 == 0 goto label4;

        $r10 = virtualinvoke r8.<javax.swing.JTree: javax.swing.tree.TreePath getLeadSelectionPath()>();

        if $r10 != r0 goto label4;

        $z7 = 1;

        goto label5;

     label4:
        $z7 = 0;

     label5:
        $r15 = virtualinvoke r8.<javax.swing.JTree: java.lang.String convertValueToText(java.lang.Object,boolean,boolean,boolean,int,boolean)>($r3, $z3, $z4, $z5, $i2, $z7);

        return $r15;

     label6:
        $r6 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        return $r6;

     label7:
        if r0 == null goto label8;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;

     label8:
        return "";
    }

    public void treeNodesChanged(javax.swing.event.TreeModelEvent)
    {
        javax.swing.event.TreeModelEvent r1;
        com.jidesoft.swing.TreeSearchable r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.TreeSearchable;

        r1 := @parameter0: javax.swing.event.TreeModelEvent;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.TreeSearchable: boolean isProcessModelChangeEvent()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.jidesoft.swing.TreeSearchable: void hidePopup()>();

        virtualinvoke r0.<com.jidesoft.swing.TreeSearchable: void resetTreePathes()>();

        return;
    }

    public void treeNodesInserted(javax.swing.event.TreeModelEvent)
    {
        javax.swing.event.TreeModelEvent r1;
        com.jidesoft.swing.TreeSearchable r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.TreeSearchable;

        r1 := @parameter0: javax.swing.event.TreeModelEvent;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.TreeSearchable: boolean isProcessModelChangeEvent()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.jidesoft.swing.TreeSearchable: void hidePopup()>();

        virtualinvoke r0.<com.jidesoft.swing.TreeSearchable: void resetTreePathes()>();

        return;
    }

    public void treeNodesRemoved(javax.swing.event.TreeModelEvent)
    {
        javax.swing.event.TreeModelEvent r1;
        com.jidesoft.swing.TreeSearchable r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.TreeSearchable;

        r1 := @parameter0: javax.swing.event.TreeModelEvent;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.TreeSearchable: boolean isProcessModelChangeEvent()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.jidesoft.swing.TreeSearchable: void hidePopup()>();

        virtualinvoke r0.<com.jidesoft.swing.TreeSearchable: void resetTreePathes()>();

        return;
    }

    public void treeStructureChanged(javax.swing.event.TreeModelEvent)
    {
        javax.swing.event.TreeModelEvent r1;
        com.jidesoft.swing.TreeSearchable r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.TreeSearchable;

        r1 := @parameter0: javax.swing.event.TreeModelEvent;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.TreeSearchable: boolean isProcessModelChangeEvent()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.jidesoft.swing.TreeSearchable: void hidePopup()>();

        virtualinvoke r0.<com.jidesoft.swing.TreeSearchable: void resetTreePathes()>();

        return;
    }

    public void propertyChange(java.beans.PropertyChangeEvent)
    {
        javax.swing.tree.TreeModel $r7, $r9;
        com.jidesoft.swing.TreeSearchable r3;
        java.lang.Object $r4, $r5, $r6, $r8;
        java.lang.String $r1, $r2;
        java.beans.PropertyChangeEvent r0;
        boolean $z0, $z1, $z2;

        r3 := @this: com.jidesoft.swing.TreeSearchable;

        r0 := @parameter0: java.beans.PropertyChangeEvent;

        $r1 = "model";

        $r2 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.String getPropertyName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

        virtualinvoke r3.<com.jidesoft.swing.TreeSearchable: void hidePopup()>();

        $r4 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getOldValue()>();

        $z1 = $r4 instanceof javax.swing.tree.TreeModel;

        if $z1 == 0 goto label1;

        $r8 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getOldValue()>();

        $r9 = (javax.swing.tree.TreeModel) $r8;

        interfaceinvoke $r9.<javax.swing.tree.TreeModel: void removeTreeModelListener(javax.swing.event.TreeModelListener)>(r3);

     label1:
        $r5 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>();

        $z2 = $r5 instanceof javax.swing.tree.TreeModel;

        if $z2 == 0 goto label2;

        $r6 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>();

        $r7 = (javax.swing.tree.TreeModel) $r6;

        interfaceinvoke $r7.<javax.swing.tree.TreeModel: void addTreeModelListener(javax.swing.event.TreeModelListener)>(r3);

     label2:
        virtualinvoke r3.<com.jidesoft.swing.TreeSearchable: void resetTreePathes()>();

     label3:
        return;
    }
}
