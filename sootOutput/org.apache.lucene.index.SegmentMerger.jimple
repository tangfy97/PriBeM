final class org.apache.lucene.index.SegmentMerger extends java.lang.Object
{
    private final org.apache.lucene.store.Directory directory;
    private final int termIndexInterval;
    private final org.apache.lucene.codecs.Codec codec;
    private final org.apache.lucene.store.IOContext context;
    private final org.apache.lucene.index.MergeState mergeState;
    private final org.apache.lucene.index.FieldInfos$Builder fieldInfosBuilder;
    static final boolean $assertionsDisabled;

    void <init>(java.util.List, org.apache.lucene.index.SegmentInfo, org.apache.lucene.util.InfoStream, org.apache.lucene.store.Directory, int, org.apache.lucene.index.MergeState$CheckAbort, org.apache.lucene.index.FieldInfos$FieldNumbers, org.apache.lucene.store.IOContext)
    {
        org.apache.lucene.index.MergeState$CheckAbort r5;
        org.apache.lucene.index.SegmentMerger r0;
        org.apache.lucene.index.SegmentInfo r3;
        org.apache.lucene.index.FieldInfos$Builder $r9;
        org.apache.lucene.index.MergeState $r1;
        java.util.List r2;
        org.apache.lucene.util.InfoStream r4;
        org.apache.lucene.index.FieldInfos$FieldNumbers r10;
        org.apache.lucene.store.Directory r6;
        org.apache.lucene.codecs.Codec $r7;
        int i0;
        org.apache.lucene.store.IOContext r8;

        r0 := @this: org.apache.lucene.index.SegmentMerger;

        r2 := @parameter0: java.util.List;

        r3 := @parameter1: org.apache.lucene.index.SegmentInfo;

        r4 := @parameter2: org.apache.lucene.util.InfoStream;

        r6 := @parameter3: org.apache.lucene.store.Directory;

        i0 := @parameter4: int;

        r5 := @parameter5: org.apache.lucene.index.MergeState$CheckAbort;

        r10 := @parameter6: org.apache.lucene.index.FieldInfos$FieldNumbers;

        r8 := @parameter7: org.apache.lucene.store.IOContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.lucene.index.MergeState;

        specialinvoke $r1.<org.apache.lucene.index.MergeState: void <init>(java.util.List,org.apache.lucene.index.SegmentInfo,org.apache.lucene.util.InfoStream,org.apache.lucene.index.MergeState$CheckAbort)>(r2, r3, r4, r5);

        r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState> = $r1;

        r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.store.Directory directory> = r6;

        r0.<org.apache.lucene.index.SegmentMerger: int termIndexInterval> = i0;

        $r7 = virtualinvoke r3.<org.apache.lucene.index.SegmentInfo: org.apache.lucene.codecs.Codec getCodec()>();

        r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.codecs.Codec codec> = $r7;

        r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.store.IOContext context> = r8;

        $r9 = new org.apache.lucene.index.FieldInfos$Builder;

        specialinvoke $r9.<org.apache.lucene.index.FieldInfos$Builder: void <init>(org.apache.lucene.index.FieldInfos$FieldNumbers)>(r10);

        r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.FieldInfos$Builder fieldInfosBuilder> = $r9;

        return;
    }

    org.apache.lucene.index.MergeState merge() throws java.io.IOException
    {
        org.apache.lucene.index.FieldInfos $r12, $r23, $r27, $r83, $r92;
        org.apache.lucene.store.IOContext $r11, $r93;
        org.apache.lucene.index.SegmentInfo $r2, $r13, $r33, $r72, $r89;
        org.apache.lucene.util.InfoStream $r4, $r6, $r15, $r17, $r19, $r21, $r25, $r29, $r31, $r37, $r44, $r46, $r49, $r57, $r65, $r76;
        java.lang.StringBuilder $r36, $r38, $r39, $r40, $r41, $r48, $r50, $r51, $r52, $r53, $r56, $r58, $r59, $r60, $r61, $r64, $r66, $r67, $r68, $r69, $r75, $r77, $r78, $r79, $r80;
        org.apache.lucene.codecs.FieldInfosWriter $r86;
        long $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l18, $l19, $l20, l21;
        org.apache.lucene.index.MergeState $r1, $r3, $r5, $r8, $r9, $r10, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r35, $r43, $r45, $r47, $r55, $r63, $r71, $r74, $r82, $r88, $r91, $r94;
        int $i0, $i1, $i2, $i3, $i4, $i17;
        org.apache.lucene.codecs.Codec $r84;
        java.lang.AssertionError $r34, $r73;
        java.lang.String $r42, $r54, $r62, $r70, $r81, $r90;
        org.apache.lucene.store.Directory $r14, $r87;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        org.apache.lucene.codecs.FieldInfosFormat $r85;
        org.apache.lucene.index.SegmentWriteState $r7;
        org.apache.lucene.index.SegmentMerger r0;

        r0 := @this: org.apache.lucene.index.SegmentMerger;

        $r1 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r2 = $r1.<org.apache.lucene.index.MergeState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $i0 = specialinvoke r0.<org.apache.lucene.index.SegmentMerger: int setDocMaps()>();

        virtualinvoke $r2.<org.apache.lucene.index.SegmentInfo: void setDocCount(int)>($i0);

        virtualinvoke r0.<org.apache.lucene.index.SegmentMerger: void mergeFieldInfos()>();

        specialinvoke r0.<org.apache.lucene.index.SegmentMerger: void setMatchingSegmentReaders()>();

        l21 = 0L;

        $r3 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r4 = $r3.<org.apache.lucene.index.MergeState: org.apache.lucene.util.InfoStream infoStream>;

        $z0 = virtualinvoke $r4.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("SM");

        if $z0 == 0 goto label01;

        l21 = staticinvoke <java.lang.System: long nanoTime()>();

     label01:
        $i1 = specialinvoke r0.<org.apache.lucene.index.SegmentMerger: int mergeFields()>();

        $r5 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r6 = $r5.<org.apache.lucene.index.MergeState: org.apache.lucene.util.InfoStream infoStream>;

        $z1 = virtualinvoke $r6.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("SM");

        if $z1 == 0 goto label02;

        $l18 = staticinvoke <java.lang.System: long nanoTime()>();

        $r74 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r76 = $r74.<org.apache.lucene.index.MergeState: org.apache.lucene.util.InfoStream infoStream>;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $l19 = $l18 - l21;

        $l20 = $l19 / 1000000L;

        $r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l20);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msec to merge stored fields [");

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" docs]");

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r76.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("SM", $r81);

     label02:
        $z2 = <org.apache.lucene.index.SegmentMerger: boolean $assertionsDisabled>;

        if $z2 != 0 goto label03;

        $r71 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r72 = $r71.<org.apache.lucene.index.MergeState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $i17 = virtualinvoke $r72.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        if $i1 == $i17 goto label03;

        $r73 = new java.lang.AssertionError;

        specialinvoke $r73.<java.lang.AssertionError: void <init>()>();

        throw $r73;

     label03:
        $r7 = new org.apache.lucene.index.SegmentWriteState;

        $r8 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r15 = $r8.<org.apache.lucene.index.MergeState: org.apache.lucene.util.InfoStream infoStream>;

        $r14 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.store.Directory directory>;

        $r9 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r13 = $r9.<org.apache.lucene.index.MergeState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $r10 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r12 = $r10.<org.apache.lucene.index.MergeState: org.apache.lucene.index.FieldInfos fieldInfos>;

        $i2 = r0.<org.apache.lucene.index.SegmentMerger: int termIndexInterval>;

        $r11 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.store.IOContext context>;

        specialinvoke $r7.<org.apache.lucene.index.SegmentWriteState: void <init>(org.apache.lucene.util.InfoStream,org.apache.lucene.store.Directory,org.apache.lucene.index.SegmentInfo,org.apache.lucene.index.FieldInfos,int,org.apache.lucene.index.BufferedDeletes,org.apache.lucene.store.IOContext)>($r15, $r14, $r13, $r12, $i2, null, $r11);

        $r16 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r17 = $r16.<org.apache.lucene.index.MergeState: org.apache.lucene.util.InfoStream infoStream>;

        $z3 = virtualinvoke $r17.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("SM");

        if $z3 == 0 goto label04;

        l21 = staticinvoke <java.lang.System: long nanoTime()>();

     label04:
        specialinvoke r0.<org.apache.lucene.index.SegmentMerger: void mergeTerms(org.apache.lucene.index.SegmentWriteState)>($r7);

        $r18 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r19 = $r18.<org.apache.lucene.index.MergeState: org.apache.lucene.util.InfoStream infoStream>;

        $z4 = virtualinvoke $r19.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("SM");

        if $z4 == 0 goto label05;

        $l14 = staticinvoke <java.lang.System: long nanoTime()>();

        $r63 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r65 = $r63.<org.apache.lucene.index.MergeState: org.apache.lucene.util.InfoStream infoStream>;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $l15 = $l14 - l21;

        $l16 = $l15 / 1000000L;

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l16);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msec to merge postings [");

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" docs]");

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r65.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("SM", $r70);

     label05:
        $r20 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r21 = $r20.<org.apache.lucene.index.MergeState: org.apache.lucene.util.InfoStream infoStream>;

        $z5 = virtualinvoke $r21.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("SM");

        if $z5 == 0 goto label06;

        l21 = staticinvoke <java.lang.System: long nanoTime()>();

     label06:
        $r22 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r23 = $r22.<org.apache.lucene.index.MergeState: org.apache.lucene.index.FieldInfos fieldInfos>;

        $z6 = virtualinvoke $r23.<org.apache.lucene.index.FieldInfos: boolean hasDocValues()>();

        if $z6 == 0 goto label07;

        specialinvoke r0.<org.apache.lucene.index.SegmentMerger: void mergeDocValues(org.apache.lucene.index.SegmentWriteState)>($r7);

     label07:
        $r24 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r25 = $r24.<org.apache.lucene.index.MergeState: org.apache.lucene.util.InfoStream infoStream>;

        $z7 = virtualinvoke $r25.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("SM");

        if $z7 == 0 goto label08;

        $l11 = staticinvoke <java.lang.System: long nanoTime()>();

        $r55 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r57 = $r55.<org.apache.lucene.index.MergeState: org.apache.lucene.util.InfoStream infoStream>;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $l12 = $l11 - l21;

        $l13 = $l12 / 1000000L;

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l13);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msec to merge doc values [");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" docs]");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r57.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("SM", $r62);

     label08:
        $r26 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r27 = $r26.<org.apache.lucene.index.MergeState: org.apache.lucene.index.FieldInfos fieldInfos>;

        $z8 = virtualinvoke $r27.<org.apache.lucene.index.FieldInfos: boolean hasNorms()>();

        if $z8 == 0 goto label10;

        $r43 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r44 = $r43.<org.apache.lucene.index.MergeState: org.apache.lucene.util.InfoStream infoStream>;

        $z12 = virtualinvoke $r44.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("SM");

        if $z12 == 0 goto label09;

        l21 = staticinvoke <java.lang.System: long nanoTime()>();

     label09:
        specialinvoke r0.<org.apache.lucene.index.SegmentMerger: void mergeNorms(org.apache.lucene.index.SegmentWriteState)>($r7);

        $r45 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r46 = $r45.<org.apache.lucene.index.MergeState: org.apache.lucene.util.InfoStream infoStream>;

        $z13 = virtualinvoke $r46.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("SM");

        if $z13 == 0 goto label10;

        $l8 = staticinvoke <java.lang.System: long nanoTime()>();

        $r47 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r49 = $r47.<org.apache.lucene.index.MergeState: org.apache.lucene.util.InfoStream infoStream>;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $l9 = $l8 - l21;

        $l10 = $l9 / 1000000L;

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msec to merge norms [");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" docs]");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r49.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("SM", $r54);

     label10:
        $r82 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r83 = $r82.<org.apache.lucene.index.MergeState: org.apache.lucene.index.FieldInfos fieldInfos>;

        $z14 = virtualinvoke $r83.<org.apache.lucene.index.FieldInfos: boolean hasVectors()>();

        if $z14 == 0 goto label13;

        $r28 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r29 = $r28.<org.apache.lucene.index.MergeState: org.apache.lucene.util.InfoStream infoStream>;

        $z9 = virtualinvoke $r29.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("SM");

        if $z9 == 0 goto label11;

        l21 = staticinvoke <java.lang.System: long nanoTime()>();

     label11:
        $i3 = specialinvoke r0.<org.apache.lucene.index.SegmentMerger: int mergeVectors()>();

        $r30 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r31 = $r30.<org.apache.lucene.index.MergeState: org.apache.lucene.util.InfoStream infoStream>;

        $z10 = virtualinvoke $r31.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("SM");

        if $z10 == 0 goto label12;

        $l5 = staticinvoke <java.lang.System: long nanoTime()>();

        $r35 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r37 = $r35.<org.apache.lucene.index.MergeState: org.apache.lucene.util.InfoStream infoStream>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $l6 = $l5 - l21;

        $l7 = $l6 / 1000000L;

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msec to merge vectors [");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" docs]");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r37.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("SM", $r42);

     label12:
        $z11 = <org.apache.lucene.index.SegmentMerger: boolean $assertionsDisabled>;

        if $z11 != 0 goto label13;

        $r32 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r33 = $r32.<org.apache.lucene.index.MergeState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $i4 = virtualinvoke $r33.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        if $i3 == $i4 goto label13;

        $r34 = new java.lang.AssertionError;

        specialinvoke $r34.<java.lang.AssertionError: void <init>()>();

        throw $r34;

     label13:
        $r84 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.codecs.Codec codec>;

        $r85 = virtualinvoke $r84.<org.apache.lucene.codecs.Codec: org.apache.lucene.codecs.FieldInfosFormat fieldInfosFormat()>();

        $r86 = virtualinvoke $r85.<org.apache.lucene.codecs.FieldInfosFormat: org.apache.lucene.codecs.FieldInfosWriter getFieldInfosWriter()>();

        $r87 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.store.Directory directory>;

        $r88 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r89 = $r88.<org.apache.lucene.index.MergeState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $r90 = $r89.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r91 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r92 = $r91.<org.apache.lucene.index.MergeState: org.apache.lucene.index.FieldInfos fieldInfos>;

        $r93 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.store.IOContext context>;

        virtualinvoke $r86.<org.apache.lucene.codecs.FieldInfosWriter: void write(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.index.FieldInfos,org.apache.lucene.store.IOContext)>($r87, $r90, $r92, $r93);

        $r94 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        return $r94;
    }

    private void mergeDocValues(org.apache.lucene.index.SegmentWriteState) throws java.io.IOException
    {
        org.apache.lucene.index.FieldInfos $r6;
        java.lang.StringBuilder $r18, $r19, $r20;
        org.apache.lucene.index.AtomicReader r57, r59, r61, r63;
        java.lang.Throwable $r54;
        java.lang.AssertionError $r17;
        java.util.ArrayList $r22, $r30, $r38, $r46;
        org.apache.lucene.index.SortedSetDocValues $r29, r64;
        java.lang.String $r21, $r28, $r36, $r44, $r52;
        org.apache.lucene.codecs.DocValuesFormat $r2;
        org.apache.lucene.index.FieldInfo r11;
        org.apache.lucene.index.MergeState $r5, $r23, $r26, $r31, $r34, $r39, $r42, $r47, $r50;
        java.io.Closeable[] $r8, $r9, $r55, $r56;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.lucene.codecs.DocValuesConsumer $r4;
        java.util.List $r24, $r32, $r40, $r48;
        org.apache.lucene.index.BinaryDocValues $r45, r60;
        org.apache.lucene.index.NumericDocValues $r53, r58;
        org.apache.lucene.index.SegmentWriteState r3;
        org.apache.lucene.index.SortedDocValues $r37, r62;
        java.util.Iterator $r7, $r25, $r33, $r41, $r49;
        org.apache.lucene.index.SegmentMerger r0;
        org.apache.lucene.index.FieldInfo$DocValuesType $r12, $r13, $r14, $r15, $r16;
        org.apache.lucene.codecs.Codec $r1;
        java.lang.Object $r10, $r27, $r35, $r43, $r51;

        r0 := @this: org.apache.lucene.index.SegmentMerger;

        r3 := @parameter0: org.apache.lucene.index.SegmentWriteState;

        $r1 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.codecs.Codec codec>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.codecs.Codec: org.apache.lucene.codecs.DocValuesFormat docValuesFormat()>();

        $r4 = virtualinvoke $r2.<org.apache.lucene.codecs.DocValuesFormat: org.apache.lucene.codecs.DocValuesConsumer fieldsConsumer(org.apache.lucene.index.SegmentWriteState)>(r3);

     label01:
        $r5 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r6 = $r5.<org.apache.lucene.index.MergeState: org.apache.lucene.index.FieldInfos fieldInfos>;

        $r7 = virtualinvoke $r6.<org.apache.lucene.index.FieldInfos: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label20;

        $r10 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.apache.lucene.index.FieldInfo) $r10;

        $r12 = virtualinvoke r11.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$DocValuesType getDocValuesType()>();

        if $r12 == null goto label19;

        $r13 = <org.apache.lucene.index.FieldInfo$DocValuesType: org.apache.lucene.index.FieldInfo$DocValuesType NUMERIC>;

        if $r12 != $r13 goto label06;

        $r46 = new java.util.ArrayList;

        specialinvoke $r46.<java.util.ArrayList: void <init>()>();

        $r47 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r48 = $r47.<org.apache.lucene.index.MergeState: java.util.List readers>;

        $r49 = interfaceinvoke $r48.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z4 = interfaceinvoke $r49.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label05;

        $r51 = interfaceinvoke $r49.<java.util.Iterator: java.lang.Object next()>();

        r57 = (org.apache.lucene.index.AtomicReader) $r51;

        $r52 = r11.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r53 = virtualinvoke r57.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.NumericDocValues getNumericDocValues(java.lang.String)>($r52);

        r58 = $r53;

        if $r53 != null goto label04;

        r58 = <org.apache.lucene.index.NumericDocValues: org.apache.lucene.index.NumericDocValues EMPTY>;

     label04:
        interfaceinvoke $r46.<java.util.List: boolean add(java.lang.Object)>(r58);

        goto label03;

     label05:
        $r50 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        virtualinvoke $r4.<org.apache.lucene.codecs.DocValuesConsumer: void mergeNumericField(org.apache.lucene.index.FieldInfo,org.apache.lucene.index.MergeState,java.util.List)>(r11, $r50, $r46);

        goto label19;

     label06:
        $r14 = <org.apache.lucene.index.FieldInfo$DocValuesType: org.apache.lucene.index.FieldInfo$DocValuesType BINARY>;

        if $r12 != $r14 goto label10;

        $r38 = new java.util.ArrayList;

        specialinvoke $r38.<java.util.ArrayList: void <init>()>();

        $r39 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r40 = $r39.<org.apache.lucene.index.MergeState: java.util.List readers>;

        $r41 = interfaceinvoke $r40.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z3 = interfaceinvoke $r41.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label09;

        $r43 = interfaceinvoke $r41.<java.util.Iterator: java.lang.Object next()>();

        r59 = (org.apache.lucene.index.AtomicReader) $r43;

        $r44 = r11.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r45 = virtualinvoke r59.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.BinaryDocValues getBinaryDocValues(java.lang.String)>($r44);

        r60 = $r45;

        if $r45 != null goto label08;

        r60 = <org.apache.lucene.index.BinaryDocValues: org.apache.lucene.index.BinaryDocValues EMPTY>;

     label08:
        interfaceinvoke $r38.<java.util.List: boolean add(java.lang.Object)>(r60);

        goto label07;

     label09:
        $r42 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        virtualinvoke $r4.<org.apache.lucene.codecs.DocValuesConsumer: void mergeBinaryField(org.apache.lucene.index.FieldInfo,org.apache.lucene.index.MergeState,java.util.List)>(r11, $r42, $r38);

        goto label19;

     label10:
        $r15 = <org.apache.lucene.index.FieldInfo$DocValuesType: org.apache.lucene.index.FieldInfo$DocValuesType SORTED>;

        if $r12 != $r15 goto label14;

        $r30 = new java.util.ArrayList;

        specialinvoke $r30.<java.util.ArrayList: void <init>()>();

        $r31 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r32 = $r31.<org.apache.lucene.index.MergeState: java.util.List readers>;

        $r33 = interfaceinvoke $r32.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z2 = interfaceinvoke $r33.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label13;

        $r35 = interfaceinvoke $r33.<java.util.Iterator: java.lang.Object next()>();

        r61 = (org.apache.lucene.index.AtomicReader) $r35;

        $r36 = r11.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r37 = virtualinvoke r61.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.SortedDocValues getSortedDocValues(java.lang.String)>($r36);

        r62 = $r37;

        if $r37 != null goto label12;

        r62 = <org.apache.lucene.index.SortedDocValues: org.apache.lucene.index.SortedDocValues EMPTY>;

     label12:
        interfaceinvoke $r30.<java.util.List: boolean add(java.lang.Object)>(r62);

        goto label11;

     label13:
        $r34 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        virtualinvoke $r4.<org.apache.lucene.codecs.DocValuesConsumer: void mergeSortedField(org.apache.lucene.index.FieldInfo,org.apache.lucene.index.MergeState,java.util.List)>(r11, $r34, $r30);

        goto label19;

     label14:
        $r16 = <org.apache.lucene.index.FieldInfo$DocValuesType: org.apache.lucene.index.FieldInfo$DocValuesType SORTED_SET>;

        if $r12 != $r16 goto label18;

        $r22 = new java.util.ArrayList;

        specialinvoke $r22.<java.util.ArrayList: void <init>()>();

        $r23 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r24 = $r23.<org.apache.lucene.index.MergeState: java.util.List readers>;

        $r25 = interfaceinvoke $r24.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z1 = interfaceinvoke $r25.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label17;

        $r27 = interfaceinvoke $r25.<java.util.Iterator: java.lang.Object next()>();

        r63 = (org.apache.lucene.index.AtomicReader) $r27;

        $r28 = r11.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r29 = virtualinvoke r63.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.SortedSetDocValues getSortedSetDocValues(java.lang.String)>($r28);

        r64 = $r29;

        if $r29 != null goto label16;

        r64 = <org.apache.lucene.index.SortedSetDocValues: org.apache.lucene.index.SortedSetDocValues EMPTY>;

     label16:
        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>(r64);

        goto label15;

     label17:
        $r26 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        virtualinvoke $r4.<org.apache.lucene.codecs.DocValuesConsumer: void mergeSortedSetField(org.apache.lucene.index.FieldInfo,org.apache.lucene.index.MergeState,java.util.List)>(r11, $r26, $r22);

        goto label19;

     label18:
        $r17 = new java.lang.AssertionError;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("type=");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.AssertionError: void <init>(java.lang.Object)>($r21);

        throw $r17;

     label19:
        goto label02;

     label20:
        if 1 == 0 goto label21;

        $r9 = newarray (java.io.Closeable)[1];

        $r9[0] = $r4;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r9);

        goto label26;

     label21:
        $r8 = newarray (java.io.Closeable)[1];

        $r8[0] = $r4;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r8);

        goto label26;

     label22:
        $r54 := @caughtexception;

     label23:
        if 0 == 0 goto label24;

        $r56 = newarray (java.io.Closeable)[1];

        $r56[0] = $r4;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r56);

        goto label25;

     label24:
        $r55 = newarray (java.io.Closeable)[1];

        $r55[0] = $r4;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r55);

     label25:
        throw $r54;

     label26:
        return;

        catch java.lang.Throwable from label01 to label20 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
    }

    private void mergeNorms(org.apache.lucene.index.SegmentWriteState) throws java.io.IOException
    {
        java.lang.Throwable $r21;
        org.apache.lucene.index.NumericDocValues $r20, r24;
        org.apache.lucene.codecs.NormsFormat $r2;
        org.apache.lucene.index.MergeState $r5, $r13, $r16;
        java.util.ArrayList $r12;
        org.apache.lucene.index.SegmentWriteState r3;
        java.io.Closeable[] $r8, $r9, $r22, $r23;
        java.lang.String $r19;
        org.apache.lucene.index.FieldInfos $r6;
        boolean $z0, $z1, $z2;
        org.apache.lucene.codecs.DocValuesConsumer $r4;
        java.util.Iterator $r7, $r15;
        org.apache.lucene.index.SegmentMerger r0;
        java.util.List $r14;
        org.apache.lucene.codecs.Codec $r1;
        org.apache.lucene.index.FieldInfo r11;
        java.lang.Object $r10, $r17;
        org.apache.lucene.index.AtomicReader r18;

        r0 := @this: org.apache.lucene.index.SegmentMerger;

        r3 := @parameter0: org.apache.lucene.index.SegmentWriteState;

        $r1 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.codecs.Codec codec>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.codecs.Codec: org.apache.lucene.codecs.NormsFormat normsFormat()>();

        $r4 = virtualinvoke $r2.<org.apache.lucene.codecs.NormsFormat: org.apache.lucene.codecs.DocValuesConsumer normsConsumer(org.apache.lucene.index.SegmentWriteState)>(r3);

     label01:
        $r5 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r6 = $r5.<org.apache.lucene.index.MergeState: org.apache.lucene.index.FieldInfos fieldInfos>;

        $r7 = virtualinvoke $r6.<org.apache.lucene.index.FieldInfos: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r10 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.apache.lucene.index.FieldInfo) $r10;

        $z1 = virtualinvoke r11.<org.apache.lucene.index.FieldInfo: boolean hasNorms()>();

        if $z1 == 0 goto label06;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        $r13 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r14 = $r13.<org.apache.lucene.index.MergeState: java.util.List readers>;

        $r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label05;

        $r17 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r18 = (org.apache.lucene.index.AtomicReader) $r17;

        $r19 = r11.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r20 = virtualinvoke r18.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.NumericDocValues getNormValues(java.lang.String)>($r19);

        r24 = $r20;

        if $r20 != null goto label04;

        r24 = <org.apache.lucene.index.NumericDocValues: org.apache.lucene.index.NumericDocValues EMPTY>;

     label04:
        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r24);

        goto label03;

     label05:
        $r16 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        virtualinvoke $r4.<org.apache.lucene.codecs.DocValuesConsumer: void mergeNumericField(org.apache.lucene.index.FieldInfo,org.apache.lucene.index.MergeState,java.util.List)>(r11, $r16, $r12);

     label06:
        goto label02;

     label07:
        if 1 == 0 goto label08;

        $r9 = newarray (java.io.Closeable)[1];

        $r9[0] = $r4;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r9);

        goto label13;

     label08:
        $r8 = newarray (java.io.Closeable)[1];

        $r8[0] = $r4;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r8);

        goto label13;

     label09:
        $r21 := @caughtexception;

     label10:
        if 0 == 0 goto label11;

        $r23 = newarray (java.io.Closeable)[1];

        $r23[0] = $r4;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r23);

        goto label12;

     label11:
        $r22 = newarray (java.io.Closeable)[1];

        $r22[0] = $r4;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r22);

     label12:
        throw $r21;

     label13:
        return;

        catch java.lang.Throwable from label01 to label07 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private void setMatchingSegmentReaders()
    {
        org.apache.lucene.index.FieldInfos $r36, $r44;
        org.apache.lucene.util.InfoStream $r6, $r9, $r23;
        java.lang.StringBuilder $r8, $r10, $r12, $r13, $r16, $r22, $r24, $r28, $r29;
        org.apache.lucene.index.AtomicReader r34;
        org.apache.lucene.index.SegmentReader[] $r3, $r39;
        java.lang.String $r17, $r30, $r46, $r47;
        org.apache.lucene.index.FieldInfo r42, $r45;
        org.apache.lucene.index.MergeState $r1, $r4, $r5, $r7, $r11, $r14, $r18, $r19, $r21, $r25, $r27, $r31, $r38, $r40, $r43;
        boolean $z0, $z1, $z2, $z3, z4;
        java.util.List $r2, $r15, $r20, $r26, $r32;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        org.apache.lucene.index.SegmentReader r35;
        java.util.Iterator $r37;
        org.apache.lucene.index.SegmentMerger r0;
        java.lang.Object $r33, $r41;

        r0 := @this: org.apache.lucene.index.SegmentMerger;

        $r1 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r2 = $r1.<org.apache.lucene.index.MergeState: java.util.List readers>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r4 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r3 = newarray (org.apache.lucene.index.SegmentReader)[$i0];

        $r4.<org.apache.lucene.index.MergeState: org.apache.lucene.index.SegmentReader[] matchingSegmentReaders> = $r3;

        i11 = 0;

     label1:
        if i11 >= $i0 goto label7;

        $r31 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r32 = $r31.<org.apache.lucene.index.MergeState: java.util.List readers>;

        $r33 = interfaceinvoke $r32.<java.util.List: java.lang.Object get(int)>(i11);

        r34 = (org.apache.lucene.index.AtomicReader) $r33;

        $z1 = r34 instanceof org.apache.lucene.index.SegmentReader;

        if $z1 == 0 goto label6;

        r35 = (org.apache.lucene.index.SegmentReader) r34;

        z4 = 1;

        $r36 = virtualinvoke r35.<org.apache.lucene.index.SegmentReader: org.apache.lucene.index.FieldInfos getFieldInfos()>();

        $r37 = virtualinvoke $r36.<org.apache.lucene.index.FieldInfos: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r37.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r41 = interfaceinvoke $r37.<java.util.Iterator: java.lang.Object next()>();

        r42 = (org.apache.lucene.index.FieldInfo) $r41;

        $r43 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r44 = $r43.<org.apache.lucene.index.MergeState: org.apache.lucene.index.FieldInfos fieldInfos>;

        $i10 = r42.<org.apache.lucene.index.FieldInfo: int number>;

        $r45 = virtualinvoke $r44.<org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(int)>($i10);

        if $r45 == null goto label3;

        $r47 = $r45.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r46 = r42.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $z3 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>($r46);

        if $z3 != 0 goto label4;

     label3:
        z4 = 0;

        goto label5;

     label4:
        goto label2;

     label5:
        if z4 == 0 goto label6;

        $r38 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r39 = $r38.<org.apache.lucene.index.MergeState: org.apache.lucene.index.SegmentReader[] matchingSegmentReaders>;

        $r39[i11] = r35;

        $r40 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $i8 = $r40.<org.apache.lucene.index.MergeState: int matchedCount>;

        $i9 = $i8 + 1;

        $r40.<org.apache.lucene.index.MergeState: int matchedCount> = $i9;

     label6:
        i11 = i11 + 1;

        goto label1;

     label7:
        $r5 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r6 = $r5.<org.apache.lucene.index.MergeState: org.apache.lucene.util.InfoStream infoStream>;

        $z0 = virtualinvoke $r6.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("SM");

        if $z0 == 0 goto label8;

        $r7 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r9 = $r7.<org.apache.lucene.index.MergeState: org.apache.lucene.util.InfoStream infoStream>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("merge store matchedCount=");

        $r11 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $i1 = $r11.<org.apache.lucene.index.MergeState: int matchedCount>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ");

        $r14 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r15 = $r14.<org.apache.lucene.index.MergeState: java.util.List readers>;

        $i2 = interfaceinvoke $r15.<java.util.List: int size()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("SM", $r17);

        $r18 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $i3 = $r18.<org.apache.lucene.index.MergeState: int matchedCount>;

        $r19 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r20 = $r19.<org.apache.lucene.index.MergeState: java.util.List readers>;

        $i4 = interfaceinvoke $r20.<java.util.List: int size()>();

        if $i3 == $i4 goto label8;

        $r21 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r23 = $r21.<org.apache.lucene.index.MergeState: org.apache.lucene.util.InfoStream infoStream>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r25 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r26 = $r25.<org.apache.lucene.index.MergeState: java.util.List readers>;

        $i5 = interfaceinvoke $r26.<java.util.List: int size()>();

        $r27 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $i6 = $r27.<org.apache.lucene.index.MergeState: int matchedCount>;

        $i7 = $i5 - $i6;

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" non-bulk merges");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("SM", $r30);

     label8:
        return;
    }

    public void mergeFieldInfos() throws java.io.IOException
    {
        org.apache.lucene.index.FieldInfos$Builder $r4, $r13;
        org.apache.lucene.index.MergeState $r1, $r5;
        org.apache.lucene.index.FieldInfos $r6, $r9;
        boolean $z0, $z1;
        java.util.Iterator $r3, $r10;
        org.apache.lucene.index.SegmentMerger r0;
        java.util.List $r2;
        org.apache.lucene.index.FieldInfo r12;
        java.lang.Object $r7, $r11;
        org.apache.lucene.index.AtomicReader r8;

        r0 := @this: org.apache.lucene.index.SegmentMerger;

        $r1 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r2 = $r1.<org.apache.lucene.index.MergeState: java.util.List readers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.lucene.index.AtomicReader) $r7;

        $r9 = virtualinvoke r8.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.FieldInfos getFieldInfos()>();

        $r10 = virtualinvoke $r9.<org.apache.lucene.index.FieldInfos: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.apache.lucene.index.FieldInfo) $r11;

        $r13 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.FieldInfos$Builder fieldInfosBuilder>;

        virtualinvoke $r13.<org.apache.lucene.index.FieldInfos$Builder: org.apache.lucene.index.FieldInfo add(org.apache.lucene.index.FieldInfo)>(r12);

        goto label2;

     label3:
        goto label1;

     label4:
        $r5 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r4 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.FieldInfos$Builder fieldInfosBuilder>;

        $r6 = virtualinvoke $r4.<org.apache.lucene.index.FieldInfos$Builder: org.apache.lucene.index.FieldInfos finish()>();

        $r5.<org.apache.lucene.index.MergeState: org.apache.lucene.index.FieldInfos fieldInfos> = $r6;

        return;
    }

    private int mergeFields() throws java.io.IOException
    {
        java.lang.Throwable $r9;
        org.apache.lucene.codecs.StoredFieldsFormat $r2;
        org.apache.lucene.index.SegmentMerger r0;
        org.apache.lucene.index.SegmentInfo $r5;
        org.apache.lucene.index.MergeState $r3, $r8;
        org.apache.lucene.codecs.Codec $r1;
        org.apache.lucene.store.Directory $r6;
        int $i0;
        org.apache.lucene.codecs.StoredFieldsWriter $r7;
        org.apache.lucene.store.IOContext $r4;

        r0 := @this: org.apache.lucene.index.SegmentMerger;

        $r1 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.codecs.Codec codec>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.codecs.Codec: org.apache.lucene.codecs.StoredFieldsFormat storedFieldsFormat()>();

        $r6 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.store.Directory directory>;

        $r3 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r5 = $r3.<org.apache.lucene.index.MergeState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $r4 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.store.IOContext context>;

        $r7 = virtualinvoke $r2.<org.apache.lucene.codecs.StoredFieldsFormat: org.apache.lucene.codecs.StoredFieldsWriter fieldsWriter(org.apache.lucene.store.Directory,org.apache.lucene.index.SegmentInfo,org.apache.lucene.store.IOContext)>($r6, $r5, $r4);

     label1:
        $r8 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $i0 = virtualinvoke $r7.<org.apache.lucene.codecs.StoredFieldsWriter: int merge(org.apache.lucene.index.MergeState)>($r8);

     label2:
        virtualinvoke $r7.<org.apache.lucene.codecs.StoredFieldsWriter: void close()>();

        return $i0;

     label3:
        $r9 := @caughtexception;

     label4:
        virtualinvoke $r7.<org.apache.lucene.codecs.StoredFieldsWriter: void close()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private int mergeVectors() throws java.io.IOException
    {
        java.lang.Throwable $r9;
        org.apache.lucene.index.SegmentMerger r0;
        org.apache.lucene.codecs.TermVectorsFormat $r2;
        org.apache.lucene.index.SegmentInfo $r5;
        org.apache.lucene.index.MergeState $r3, $r8;
        org.apache.lucene.codecs.TermVectorsWriter $r7;
        org.apache.lucene.codecs.Codec $r1;
        org.apache.lucene.store.Directory $r6;
        int $i0;
        org.apache.lucene.store.IOContext $r4;

        r0 := @this: org.apache.lucene.index.SegmentMerger;

        $r1 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.codecs.Codec codec>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.codecs.Codec: org.apache.lucene.codecs.TermVectorsFormat termVectorsFormat()>();

        $r6 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.store.Directory directory>;

        $r3 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r5 = $r3.<org.apache.lucene.index.MergeState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $r4 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.store.IOContext context>;

        $r7 = virtualinvoke $r2.<org.apache.lucene.codecs.TermVectorsFormat: org.apache.lucene.codecs.TermVectorsWriter vectorsWriter(org.apache.lucene.store.Directory,org.apache.lucene.index.SegmentInfo,org.apache.lucene.store.IOContext)>($r6, $r5, $r4);

     label1:
        $r8 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $i0 = virtualinvoke $r7.<org.apache.lucene.codecs.TermVectorsWriter: int merge(org.apache.lucene.index.MergeState)>($r8);

     label2:
        virtualinvoke $r7.<org.apache.lucene.codecs.TermVectorsWriter: void close()>();

        return $i0;

     label3:
        $r9 := @caughtexception;

     label4:
        virtualinvoke $r7.<org.apache.lucene.codecs.TermVectorsWriter: void close()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private int setDocMaps() throws java.io.IOException
    {
        org.apache.lucene.index.MergeState$DocMap $r15;
        org.apache.lucene.index.MergeState $r1, $r4, $r6, $r7, $r9, $r13, $r16;
        int[] $r5, $r14;
        int $i0, $i1, $i2, i3, i4;
        org.apache.lucene.index.MergeState$DocMap[] $r3, $r17;
        org.apache.lucene.index.SegmentMerger r0;
        java.util.List $r2, $r8, $r10;
        java.lang.Object $r11;
        org.apache.lucene.index.AtomicReader r12;

        r0 := @this: org.apache.lucene.index.SegmentMerger;

        $r1 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r2 = $r1.<org.apache.lucene.index.MergeState: java.util.List readers>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r4 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r3 = newarray (org.apache.lucene.index.MergeState$DocMap)[$i0];

        $r4.<org.apache.lucene.index.MergeState: org.apache.lucene.index.MergeState$DocMap[] docMaps> = $r3;

        $r6 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r5 = newarray (int)[$i0];

        $r6.<org.apache.lucene.index.MergeState: int[] docBase> = $r5;

        i3 = 0;

        i4 = 0;

     label1:
        $r7 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r8 = $r7.<org.apache.lucene.index.MergeState: java.util.List readers>;

        $i1 = interfaceinvoke $r8.<java.util.List: int size()>();

        if i4 >= $i1 goto label2;

        $r9 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r10 = $r9.<org.apache.lucene.index.MergeState: java.util.List readers>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i4);

        r12 = (org.apache.lucene.index.AtomicReader) $r11;

        $r13 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r14 = $r13.<org.apache.lucene.index.MergeState: int[] docBase>;

        $r14[i4] = i3;

        $r15 = staticinvoke <org.apache.lucene.index.MergeState$DocMap: org.apache.lucene.index.MergeState$DocMap build(org.apache.lucene.index.AtomicReader)>(r12);

        $r16 = r0.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r17 = $r16.<org.apache.lucene.index.MergeState: org.apache.lucene.index.MergeState$DocMap[] docMaps>;

        $r17[i4] = $r15;

        $i2 = virtualinvoke $r15.<org.apache.lucene.index.MergeState$DocMap: int numDocs()>();

        i3 = i3 + $i2;

        i4 = i4 + 1;

        goto label1;

     label2:
        return i3;
    }

    private void mergeTerms(org.apache.lucene.index.SegmentWriteState) throws java.io.IOException
    {
        org.apache.lucene.index.Fields $r22;
        org.apache.lucene.codecs.FieldsConsumer $r8;
        org.apache.lucene.index.MergeState $r3, $r11, $r19;
        java.io.Closeable[] $r17, $r18, $r25, $r26;
        org.apache.lucene.index.ReaderSlice[] $r13, $r16;
        java.util.List $r4, $r20;
        org.apache.lucene.index.Fields[] $r10, $r14;
        org.apache.lucene.codecs.PostingsFormat $r6;
        org.apache.lucene.index.AtomicReader r27;
        java.lang.Throwable $r24;
        java.lang.Object[] $r12, $r15;
        org.apache.lucene.index.MultiFields $r9;
        org.apache.lucene.index.ReaderSlice $r23;
        java.util.ArrayList $r0, $r1;
        int $i0, $i1, i2, i3;
        org.apache.lucene.index.SegmentWriteState r7;
        org.apache.lucene.index.SegmentMerger r2;
        org.apache.lucene.codecs.Codec $r5;
        java.lang.Object $r21;

        r2 := @this: org.apache.lucene.index.SegmentMerger;

        r7 := @parameter0: org.apache.lucene.index.SegmentWriteState;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        i2 = 0;

        i3 = 0;

     label01:
        $r3 = r2.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r4 = $r3.<org.apache.lucene.index.MergeState: java.util.List readers>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i3 >= $i0 goto label03;

        $r19 = r2.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r20 = $r19.<org.apache.lucene.index.MergeState: java.util.List readers>;

        $r21 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(i3);

        r27 = (org.apache.lucene.index.AtomicReader) $r21;

        $r22 = virtualinvoke r27.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.Fields fields()>();

        $i1 = virtualinvoke r27.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        if $r22 == null goto label02;

        $r23 = new org.apache.lucene.index.ReaderSlice;

        specialinvoke $r23.<org.apache.lucene.index.ReaderSlice: void <init>(int,int,int)>(i2, $i1, i3);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r23);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r22);

     label02:
        i2 = i2 + $i1;

        i3 = i3 + 1;

        goto label01;

     label03:
        $r5 = r2.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.codecs.Codec codec>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.codecs.Codec: org.apache.lucene.codecs.PostingsFormat postingsFormat()>();

        $r8 = virtualinvoke $r6.<org.apache.lucene.codecs.PostingsFormat: org.apache.lucene.codecs.FieldsConsumer fieldsConsumer(org.apache.lucene.index.SegmentWriteState)>(r7);

     label04:
        $r11 = r2.<org.apache.lucene.index.SegmentMerger: org.apache.lucene.index.MergeState mergeState>;

        $r9 = new org.apache.lucene.index.MultiFields;

        $r10 = <org.apache.lucene.index.Fields: org.apache.lucene.index.Fields[] EMPTY_ARRAY>;

        $r12 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        $r14 = (org.apache.lucene.index.Fields[]) $r12;

        $r13 = <org.apache.lucene.index.ReaderSlice: org.apache.lucene.index.ReaderSlice[] EMPTY_ARRAY>;

        $r15 = interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r13);

        $r16 = (org.apache.lucene.index.ReaderSlice[]) $r15;

        specialinvoke $r9.<org.apache.lucene.index.MultiFields: void <init>(org.apache.lucene.index.Fields[],org.apache.lucene.index.ReaderSlice[])>($r14, $r16);

        virtualinvoke $r8.<org.apache.lucene.codecs.FieldsConsumer: void merge(org.apache.lucene.index.MergeState,org.apache.lucene.index.Fields)>($r11, $r9);

     label05:
        if 1 == 0 goto label06;

        $r18 = newarray (java.io.Closeable)[1];

        $r18[0] = $r8;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r18);

        goto label11;

     label06:
        $r17 = newarray (java.io.Closeable)[1];

        $r17[0] = $r8;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r17);

        goto label11;

     label07:
        $r24 := @caughtexception;

     label08:
        if 0 == 0 goto label09;

        $r26 = newarray (java.io.Closeable)[1];

        $r26[0] = $r8;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r26);

        goto label10;

     label09:
        $r25 = newarray (java.io.Closeable)[1];

        $r25[0] = $r8;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r25);

     label10:
        throw $r24;

     label11:
        return;

        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/SegmentMerger;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.SegmentMerger: boolean $assertionsDisabled> = $z1;

        return;
    }
}
