public class org.eclipse.jdt.internal.compiler.ast.IntLiteral extends org.eclipse.jdt.internal.compiler.ast.NumberLiteral
{
    public int value;
    public static final org.eclipse.jdt.internal.compiler.ast.IntLiteral One;
    static final org.eclipse.jdt.internal.compiler.impl.Constant FORMAT_ERROR;

    static void <clinit>()
    {
        org.eclipse.jdt.internal.compiler.ast.IntLiteral $r0;
        char[] $r1;
        org.eclipse.jdt.internal.compiler.impl.Constant $r2;

        $r0 = new org.eclipse.jdt.internal.compiler.ast.IntLiteral;

        $r1 = newarray (char)[1];

        $r1[0] = 49;

        specialinvoke $r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: void <init>(char[],int,int,int)>($r1, 0, 0, 1);

        <org.eclipse.jdt.internal.compiler.ast.IntLiteral: org.eclipse.jdt.internal.compiler.ast.IntLiteral One> = $r0;

        $r2 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.DoubleConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(double)>(#Infinity);

        <org.eclipse.jdt.internal.compiler.ast.IntLiteral: org.eclipse.jdt.internal.compiler.impl.Constant FORMAT_ERROR> = $r2;

        return;
    }

    public void <init>(char[], int, int)
    {
        org.eclipse.jdt.internal.compiler.ast.IntLiteral r0;
        int i0, i1;
        char[] r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.IntLiteral;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.NumberLiteral: void <init>(char[],int,int)>(r1, i0, i1);

        return;
    }

    public void <init>(char[], int, int, int)
    {
        org.eclipse.jdt.internal.compiler.ast.IntLiteral r0;
        int i0, i1, i2;
        char[] r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.IntLiteral;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: void <init>(char[],int,int)>(r1, i0, i1);

        r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: int value> = i2;

        return;
    }

    public void <init>(int)
    {
        org.eclipse.jdt.internal.compiler.ast.IntLiteral r0;
        int i0;
        org.eclipse.jdt.internal.compiler.impl.Constant $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.IntLiteral;

        i0 := @parameter0: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.NumberLiteral: void <init>(char[],int,int)>(null, 0, 0);

        $r1 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.IntConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(int)>(i0);

        r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r1;

        r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: int value> = i0;

        return;
    }

    public void computeConstant()
    {
        org.eclipse.jdt.internal.compiler.ast.IntLiteral r0, $r1;
        byte $b6, $b15, b18, b20;
        org.eclipse.jdt.internal.compiler.impl.Constant $r5, $r6, $r8, $r10, $r12, $r13;
        long $l4, $l5, $l13, $l14, l17;
        int i0, $i3, $i7, $i9, $i10, $i12, i19, i22, $i23, $i24, $i25, $i26, $i27, $i28;
        char $c1, $c2, $c8, $c11, $c16, $c21;
        char[] $r2, $r3, $r4, $r7, $r9, $r11, $r14;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.IntLiteral;

        $r1 = <org.eclipse.jdt.internal.compiler.ast.IntLiteral: org.eclipse.jdt.internal.compiler.ast.IntLiteral One>;

        if r0 != $r1 goto label01;

        $r13 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.IntConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(int)>(1);

        r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r13;

        return;

     label01:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: char[] source>;

        i0 = lengthof $r2;

        l17 = 0L;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: char[] source>;

        $c1 = $r3[0];

        $i23 = (int) $c1;

        if $i23 != 48 goto label10;

        if i0 != 1 goto label02;

        $r12 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.IntConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(int)>(0);

        r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r12;

        return;

     label02:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: char[] source>;

        $c8 = $r7[1];

        $i24 = (int) $c8;

        if $i24 == 120 goto label03;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: char[] source>;

        $c16 = $r11[1];

        $i25 = (int) $c16;

        if $i25 != 88 goto label04;

     label03:
        b18 = 4;

        i19 = 2;

        b20 = 16;

        goto label06;

     label04:
        b18 = 3;

        i19 = 1;

        b20 = 8;

        goto label06;

     label05:
        i19 = i19 + 1;

        if i19 != i0 goto label06;

        $i9 = (int) 0L;

        r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: int value> = $i9;

        $r8 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.IntConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(int)>($i9);

        r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r8;

        return;

     label06:
        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: char[] source>;

        $c21 = $r14[i19];

        $i26 = (int) $c21;

        if $i26 == 48 goto label05;

        goto label09;

     label07:
        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: char[] source>;

        $i10 = i19;

        i19 = i19 + 1;

        $c11 = $r9[$i10];

        $i12 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int digit(char,int)>($c11, b20);

        if $i12 >= 0 goto label08;

        $r10 = <org.eclipse.jdt.internal.compiler.ast.IntLiteral: org.eclipse.jdt.internal.compiler.impl.Constant FORMAT_ERROR>;

        r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r10;

        return;

     label08:
        $l14 = l17 << b18;

        $l13 = (long) $i12;

        l17 = $l14 | $l13;

        $b15 = l17 cmp 4294967295L;

        $i27 = (int) $b15;

        if $i27 <= 0 goto label09;

        return;

     label09:
        if i19 < i0 goto label07;

        goto label15;

     label10:
        i22 = 0;

        goto label14;

     label11:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: char[] source>;

        $c2 = $r4[i22];

        $i3 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int digit(char,int)>($c2, 10);

        if $i3 >= 0 goto label12;

        $r5 = <org.eclipse.jdt.internal.compiler.ast.IntLiteral: org.eclipse.jdt.internal.compiler.impl.Constant FORMAT_ERROR>;

        r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r5;

        return;

     label12:
        $l5 = 10L * l17;

        $l4 = (long) $i3;

        l17 = $l5 + $l4;

        $b6 = l17 cmp 2147483647L;

        $i28 = (int) $b6;

        if $i28 <= 0 goto label13;

        return;

     label13:
        i22 = i22 + 1;

     label14:
        if i22 < i0 goto label11;

     label15:
        $i7 = (int) l17;

        r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: int value> = $i7;

        $r6 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.IntConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(int)>($i7);

        r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r6;

        return;
    }

    public void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream, boolean)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r3;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.ast.IntLiteral r1;
        org.eclipse.jdt.internal.compiler.impl.Constant $r2;
        int i0, $i1, $i2;
        boolean z0;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.IntLiteral;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        z0 := @parameter2: boolean;

        i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        if z0 == 0 goto label1;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: int implicitConversion>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateConstant(org.eclipse.jdt.internal.compiler.impl.Constant,int)>($r2, $i2);

     label1:
        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: int sourceStart>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i0, $i1);

        return;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding literalType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.IntLiteral r1;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.IntLiteral;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $r0 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding INT>;

        return $r0;
    }

    public final boolean mayRepresentMIN_VALUE()
    {
        org.eclipse.jdt.internal.compiler.ast.IntLiteral r0;
        int $i0, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        char $c1, $c2, $c3, $c4, $c5, $c6, $c7, $c8, $c9, $c10;
        char[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.IntLiteral;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: char[] source>;

        $i0 = lengthof $r1;

        if $i0 != 10 goto label1;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: char[] source>;

        $c1 = $r2[0];

        $i14 = (int) $c1;

        if $i14 != 50 goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: char[] source>;

        $c2 = $r3[1];

        $i15 = (int) $c2;

        if $i15 != 49 goto label1;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: char[] source>;

        $c3 = $r4[2];

        $i16 = (int) $c3;

        if $i16 != 52 goto label1;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: char[] source>;

        $c4 = $r5[3];

        $i17 = (int) $c4;

        if $i17 != 55 goto label1;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: char[] source>;

        $c5 = $r6[4];

        $i18 = (int) $c5;

        if $i18 != 52 goto label1;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: char[] source>;

        $c6 = $r7[5];

        $i19 = (int) $c6;

        if $i19 != 56 goto label1;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: char[] source>;

        $c7 = $r8[6];

        $i20 = (int) $c7;

        if $i20 != 51 goto label1;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: char[] source>;

        $c8 = $r9[7];

        $i21 = (int) $c8;

        if $i21 != 54 goto label1;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: char[] source>;

        $c9 = $r10[8];

        $i22 = (int) $c9;

        if $i22 != 52 goto label1;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: char[] source>;

        $c10 = $r11[9];

        $i23 = (int) $c10;

        if $i23 != 56 goto label1;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: int bits>;

        $i12 = $i11 & 534773760;

        $i13 = $i12 >> 21;

        if $i13 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.IntLiteral r0;
        org.eclipse.jdt.internal.compiler.impl.Constant $r3, $r4, $r5;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r6;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.IntLiteral;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $r2 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.NumberLiteral: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1);

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r3 = <org.eclipse.jdt.internal.compiler.ast.IntLiteral: org.eclipse.jdt.internal.compiler.impl.Constant FORMAT_ERROR>;

        if $r4 != $r3 goto label1;

        $r5 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r5;

        $r6 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void constantOutOfFormat(org.eclipse.jdt.internal.compiler.ast.NumberLiteral)>(r0);

        r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = null;

        return null;

     label1:
        return $r2;
    }

    public java.lang.StringBuffer printExpression(int, java.lang.StringBuffer)
    {
        org.eclipse.jdt.internal.compiler.ast.IntLiteral r0;
        java.lang.StringBuffer r2, $r3, $r5;
        int i0, $i1;
        char[] $r1;
        java.lang.String $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.IntLiteral;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.StringBuffer;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: char[] source>;

        if $r1 != null goto label1;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.ast.IntLiteral: int value>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        $r5 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        return $r5;

     label1:
        $r3 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.NumberLiteral: java.lang.StringBuffer printExpression(int,java.lang.StringBuffer)>(i0, r2);

        return $r3;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.IntLiteral r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.IntLiteral;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.IntLiteral,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.IntLiteral,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        return;
    }
}
