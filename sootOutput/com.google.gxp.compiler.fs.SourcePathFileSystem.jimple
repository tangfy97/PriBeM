public class com.google.gxp.compiler.fs.SourcePathFileSystem extends java.lang.Object implements com.google.gxp.compiler.fs.FileSystem
{
    private final com.google.gxp.com.google.common.collect.BiMap spFsToWrappedFsSourceFileRef;
    private final com.google.gxp.com.google.common.collect.BiMap wrappedFsToSpFsSourceFileRef;
    private final com.google.gxp.compiler.fs.FileRef outDir;
    private final com.google.gxp.compiler.fs.FileSystem wrappedFs;
    private static final java.util.Comparator FILEREF_LENGTH_COMPARATOR;
    private final com.google.gxp.compiler.fs.FileStore store;
    private final com.google.gxp.com.google.common.base.Function FROM_WRAPPED_FS_FILEREF;

    public void <init>(com.google.gxp.compiler.fs.FileSystem, java.lang.Iterable, java.lang.Iterable, com.google.gxp.compiler.fs.FileRef)
    {
        com.google.gxp.compiler.fs.SourcePathFileSystem$3 $r5;
        com.google.gxp.compiler.fs.SourcePathFileSystem$2 $r4;
        java.lang.Iterable r8, r11;
        com.google.gxp.compiler.fs.SourcePathFileSystem r0;
        com.google.gxp.com.google.common.collect.HashBiMap $r1;
        java.lang.String $r20, $r23;
        com.google.gxp.compiler.fs.FileRef r6, r14, $r15, $r17;
        boolean $z0;
        java.util.Iterator $r12;
        java.lang.IllegalArgumentException $r18;
        com.google.gxp.com.google.common.collect.BiMap $r2, $r3, $r16;
        java.util.List $r10;
        com.google.gxp.compiler.fs.FileSystem r7;
        java.lang.Object $r13;
        java.lang.StringBuilder $r19, $r21, $r22;
        java.util.Comparator $r9;

        r0 := @this: com.google.gxp.compiler.fs.SourcePathFileSystem;

        r7 := @parameter0: com.google.gxp.compiler.fs.FileSystem;

        r8 := @parameter1: java.lang.Iterable;

        r11 := @parameter2: java.lang.Iterable;

        r6 := @parameter3: com.google.gxp.compiler.fs.FileRef;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.gxp.com.google.common.collect.Maps: com.google.gxp.com.google.common.collect.HashBiMap newHashBiMap()>();

        r0.<com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.com.google.common.collect.BiMap spFsToWrappedFsSourceFileRef> = $r1;

        $r2 = r0.<com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.com.google.common.collect.BiMap spFsToWrappedFsSourceFileRef>;

        $r3 = interfaceinvoke $r2.<com.google.gxp.com.google.common.collect.BiMap: com.google.gxp.com.google.common.collect.BiMap inverse()>();

        r0.<com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.com.google.common.collect.BiMap wrappedFsToSpFsSourceFileRef> = $r3;

        $r4 = new com.google.gxp.compiler.fs.SourcePathFileSystem$2;

        specialinvoke $r4.<com.google.gxp.compiler.fs.SourcePathFileSystem$2: void <init>(com.google.gxp.compiler.fs.SourcePathFileSystem)>(r0);

        r0.<com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.compiler.fs.FileStore store> = $r4;

        $r5 = new com.google.gxp.compiler.fs.SourcePathFileSystem$3;

        specialinvoke $r5.<com.google.gxp.compiler.fs.SourcePathFileSystem$3: void <init>(com.google.gxp.compiler.fs.SourcePathFileSystem)>(r0);

        r0.<com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.com.google.common.base.Function FROM_WRAPPED_FS_FILEREF> = $r5;

        r0.<com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.compiler.fs.FileRef outDir> = r6;

        r0.<com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.compiler.fs.FileSystem wrappedFs> = r7;

        $r9 = <com.google.gxp.compiler.fs.SourcePathFileSystem: java.util.Comparator FILEREF_LENGTH_COMPARATOR>;

        $r10 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.List sortedCopy(java.lang.Iterable,java.util.Comparator)>(r8, $r9);

        $r12 = interfaceinvoke r11.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.google.gxp.compiler.fs.FileRef) $r13;

        $r15 = staticinvoke <com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.compiler.fs.FileRef findBaseDir(com.google.gxp.compiler.fs.FileRef,java.util.List)>(r14, $r10);

        if $r15 != null goto label2;

        $r18 = new java.lang.IllegalArgumentException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke r14.<com.google.gxp.compiler.fs.FileRef: java.lang.String toFilename()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not in source path");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw $r18;

     label2:
        $r16 = r0.<com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.com.google.common.collect.BiMap spFsToWrappedFsSourceFileRef>;

        $r17 = specialinvoke r0.<com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.compiler.fs.FileRef chop(com.google.gxp.compiler.fs.FileRef,com.google.gxp.compiler.fs.FileRef)>($r15, r14);

        interfaceinvoke $r16.<com.google.gxp.com.google.common.collect.BiMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, r14);

        goto label1;

     label3:
        return;
    }

    private static com.google.gxp.compiler.fs.FileRef findBaseDir(com.google.gxp.compiler.fs.FileRef, java.util.List)
    {
        java.util.List r0;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        com.google.gxp.compiler.fs.FileRef r3, r4;
        boolean $z0, $z1;

        r4 := @parameter0: com.google.gxp.compiler.fs.FileRef;

        r0 := @parameter1: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.google.gxp.compiler.fs.FileRef) $r2;

        $z1 = virtualinvoke r3.<com.google.gxp.compiler.fs.FileRef: boolean isAncestorOf(com.google.gxp.compiler.fs.FileRef)>(r4);

        if $z1 == 0 goto label2;

        return r3;

     label2:
        goto label1;

     label3:
        return null;
    }

    private com.google.gxp.compiler.fs.FileRef chop(com.google.gxp.compiler.fs.FileRef, com.google.gxp.compiler.fs.FileRef)
    {
        com.google.gxp.compiler.fs.SourcePathFileSystem r1;
        int $i0;
        java.lang.String $r4, $r6, $r7;
        com.google.gxp.compiler.fs.FileRef $r0, r2, r5;
        com.google.gxp.compiler.fs.FileStore $r3;

        r1 := @this: com.google.gxp.compiler.fs.SourcePathFileSystem;

        r5 := @parameter0: com.google.gxp.compiler.fs.FileRef;

        r2 := @parameter1: com.google.gxp.compiler.fs.FileRef;

        $r0 = new com.google.gxp.compiler.fs.FileRef;

        $r3 = r1.<com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.compiler.fs.FileStore store>;

        $r4 = virtualinvoke r2.<com.google.gxp.compiler.fs.FileRef: java.lang.String getName()>();

        $r6 = virtualinvoke r5.<com.google.gxp.compiler.fs.FileRef: java.lang.String getName()>();

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        $r7 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int)>($i0);

        specialinvoke $r0.<com.google.gxp.compiler.fs.FileRef: void <init>(com.google.gxp.compiler.fs.FileStore,java.lang.String)>($r3, $r7);

        return $r0;
    }

    public com.google.gxp.compiler.fs.FileRef getRoot()
    {
        com.google.gxp.compiler.fs.SourcePathFileSystem r1;
        com.google.gxp.compiler.fs.FileRef $r0;
        com.google.gxp.compiler.fs.FileStore $r2;

        r1 := @this: com.google.gxp.compiler.fs.SourcePathFileSystem;

        $r0 = new com.google.gxp.compiler.fs.FileRef;

        $r2 = r1.<com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.compiler.fs.FileStore store>;

        specialinvoke $r0.<com.google.gxp.compiler.fs.FileRef: void <init>(com.google.gxp.compiler.fs.FileStore,java.lang.String)>($r2, "/");

        return $r0;
    }

    public com.google.gxp.compiler.fs.FileRef parseFilename(java.lang.String)
    {
        com.google.gxp.compiler.fs.SourcePathFileSystem r0;
        com.google.gxp.com.google.common.base.Function $r3;
        com.google.gxp.compiler.fs.FileSystem $r2;
        java.lang.Object $r5;
        java.lang.String r1;
        com.google.gxp.compiler.fs.FileRef $r4, $r6;

        r0 := @this: com.google.gxp.compiler.fs.SourcePathFileSystem;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.com.google.common.base.Function FROM_WRAPPED_FS_FILEREF>;

        $r2 = r0.<com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.compiler.fs.FileSystem wrappedFs>;

        $r4 = interfaceinvoke $r2.<com.google.gxp.compiler.fs.FileSystem: com.google.gxp.compiler.fs.FileRef parseFilename(java.lang.String)>(r1);

        $r5 = interfaceinvoke $r3.<com.google.gxp.com.google.common.base.Function: java.lang.Object apply(java.lang.Object)>($r4);

        $r6 = (com.google.gxp.compiler.fs.FileRef) $r5;

        return $r6;
    }

    public java.util.List parseFilenameList(java.lang.String)
    {
        com.google.gxp.compiler.fs.SourcePathFileSystem r0;
        java.util.List $r3, $r5;
        com.google.gxp.com.google.common.base.Function $r4;
        com.google.gxp.compiler.fs.FileSystem $r2;
        java.lang.String r1;

        r0 := @this: com.google.gxp.compiler.fs.SourcePathFileSystem;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.compiler.fs.FileSystem wrappedFs>;

        $r3 = interfaceinvoke $r2.<com.google.gxp.compiler.fs.FileSystem: java.util.List parseFilenameList(java.lang.String)>(r1);

        $r4 = r0.<com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.com.google.common.base.Function FROM_WRAPPED_FS_FILEREF>;

        $r5 = staticinvoke <com.google.gxp.com.google.common.collect.Lists: java.util.List transform(java.util.List,com.google.gxp.com.google.common.base.Function)>($r3, $r4);

        return $r5;
    }

    public java.nio.charset.Charset getDefaultCharset()
    {
        com.google.gxp.compiler.fs.SourcePathFileSystem r0;
        com.google.gxp.compiler.fs.FileSystem $r1;
        java.nio.charset.Charset $r2;

        r0 := @this: com.google.gxp.compiler.fs.SourcePathFileSystem;

        $r1 = r0.<com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.compiler.fs.FileSystem wrappedFs>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.compiler.fs.FileSystem: java.nio.charset.Charset getDefaultCharset()>();

        return $r2;
    }

    public java.util.Set getSourceFileRefs()
    {
        com.google.gxp.compiler.fs.SourcePathFileSystem r0;
        java.util.Set $r2, $r3;
        com.google.gxp.com.google.common.collect.BiMap $r1;

        r0 := @this: com.google.gxp.compiler.fs.SourcePathFileSystem;

        $r1 = r0.<com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.com.google.common.collect.BiMap spFsToWrappedFsSourceFileRef>;

        $r2 = interfaceinvoke $r1.<com.google.gxp.com.google.common.collect.BiMap: java.util.Set keySet()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r2);

        return $r3;
    }

    private com.google.gxp.compiler.fs.FileRef toWrappedFsFileRef(com.google.gxp.compiler.fs.FileRef, boolean)
    {
        com.google.gxp.com.google.common.collect.BiMap $r2;
        com.google.gxp.compiler.fs.SourcePathFileSystem r0;
        java.lang.Object $r3;
        java.lang.String $r5;
        com.google.gxp.compiler.fs.FileRef r1, $r4, r6;
        boolean z0;

        r0 := @this: com.google.gxp.compiler.fs.SourcePathFileSystem;

        r1 := @parameter0: com.google.gxp.compiler.fs.FileRef;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.com.google.common.collect.BiMap spFsToWrappedFsSourceFileRef>;

        $r3 = interfaceinvoke $r2.<com.google.gxp.com.google.common.collect.BiMap: java.lang.Object get(java.lang.Object)>(r1);

        r6 = (com.google.gxp.compiler.fs.FileRef) $r3;

        if r6 != null goto label1;

        $r4 = r0.<com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.compiler.fs.FileRef outDir>;

        $r5 = virtualinvoke r1.<com.google.gxp.compiler.fs.FileRef: java.lang.String getName()>();

        r6 = virtualinvoke $r4.<com.google.gxp.compiler.fs.FileRef: com.google.gxp.compiler.fs.FileRef join(java.lang.String)>($r5);

        goto label2;

     label1:
        if z0 == 0 goto label2;

        return null;

     label2:
        return r6;
    }

    static com.google.gxp.compiler.fs.FileRef access$000(com.google.gxp.compiler.fs.SourcePathFileSystem, com.google.gxp.compiler.fs.FileRef, boolean)
    {
        com.google.gxp.compiler.fs.SourcePathFileSystem r0;
        com.google.gxp.compiler.fs.FileRef r1, $r2;
        boolean z0;

        r0 := @parameter0: com.google.gxp.compiler.fs.SourcePathFileSystem;

        r1 := @parameter1: com.google.gxp.compiler.fs.FileRef;

        z0 := @parameter2: boolean;

        $r2 = specialinvoke r0.<com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.compiler.fs.FileRef toWrappedFsFileRef(com.google.gxp.compiler.fs.FileRef,boolean)>(r1, z0);

        return $r2;
    }

    static com.google.gxp.com.google.common.collect.BiMap access$100(com.google.gxp.compiler.fs.SourcePathFileSystem)
    {
        com.google.gxp.compiler.fs.SourcePathFileSystem r0;
        com.google.gxp.com.google.common.collect.BiMap $r1;

        r0 := @parameter0: com.google.gxp.compiler.fs.SourcePathFileSystem;

        $r1 = r0.<com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.com.google.common.collect.BiMap wrappedFsToSpFsSourceFileRef>;

        return $r1;
    }

    static com.google.gxp.compiler.fs.FileRef access$200(com.google.gxp.compiler.fs.SourcePathFileSystem)
    {
        com.google.gxp.compiler.fs.SourcePathFileSystem r0;
        com.google.gxp.compiler.fs.FileRef $r1;

        r0 := @parameter0: com.google.gxp.compiler.fs.SourcePathFileSystem;

        $r1 = r0.<com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.compiler.fs.FileRef outDir>;

        return $r1;
    }

    static com.google.gxp.compiler.fs.FileRef access$300(com.google.gxp.compiler.fs.SourcePathFileSystem, com.google.gxp.compiler.fs.FileRef, com.google.gxp.compiler.fs.FileRef)
    {
        com.google.gxp.compiler.fs.SourcePathFileSystem r0;
        com.google.gxp.compiler.fs.FileRef r1, r2, $r3;

        r0 := @parameter0: com.google.gxp.compiler.fs.SourcePathFileSystem;

        r1 := @parameter1: com.google.gxp.compiler.fs.FileRef;

        r2 := @parameter2: com.google.gxp.compiler.fs.FileRef;

        $r3 = specialinvoke r0.<com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.compiler.fs.FileRef chop(com.google.gxp.compiler.fs.FileRef,com.google.gxp.compiler.fs.FileRef)>(r1, r2);

        return $r3;
    }

    static void <clinit>()
    {
        com.google.gxp.compiler.fs.SourcePathFileSystem$1 $r0;

        $r0 = new com.google.gxp.compiler.fs.SourcePathFileSystem$1;

        specialinvoke $r0.<com.google.gxp.compiler.fs.SourcePathFileSystem$1: void <init>()>();

        <com.google.gxp.compiler.fs.SourcePathFileSystem: java.util.Comparator FILEREF_LENGTH_COMPARATOR> = $r0;

        return;
    }
}
