class org.jdesktop.swingx.AbstractPatternPanel$4 extends javax.swing.JTextField
{
    final org.jdesktop.swingx.AbstractPatternPanel this$0;

    void <init>(org.jdesktop.swingx.AbstractPatternPanel, int)
    {
        int i0;
        org.jdesktop.swingx.AbstractPatternPanel r1;
        org.jdesktop.swingx.AbstractPatternPanel$4 r0;

        r0 := @this: org.jdesktop.swingx.AbstractPatternPanel$4;

        r1 := @parameter0: org.jdesktop.swingx.AbstractPatternPanel;

        i0 := @parameter1: int;

        r0.<org.jdesktop.swingx.AbstractPatternPanel$4: org.jdesktop.swingx.AbstractPatternPanel this$0> = r1;

        specialinvoke r0.<javax.swing.JTextField: void <init>(int)>(i0);

        return;
    }

    public java.awt.Dimension getMaximumSize()
    {
        java.awt.Dimension $r1, $r2;
        int $i0;
        org.jdesktop.swingx.AbstractPatternPanel$4 r0;

        r0 := @this: org.jdesktop.swingx.AbstractPatternPanel$4;

        $r1 = specialinvoke r0.<javax.swing.JTextField: java.awt.Dimension getMaximumSize()>();

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.AbstractPatternPanel$4: java.awt.Dimension getPreferredSize()>();

        $i0 = $r2.<java.awt.Dimension: int height>;

        $r1.<java.awt.Dimension: int height> = $i0;

        return $r1;
    }
}
