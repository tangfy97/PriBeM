public final class org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream extends org.apache.batik.ext.awt.image.codec.util.SeekableStream
{
    private java.io.InputStream src;
    private long pointer;
    private static final int SECTOR_SHIFT;
    private static final int SECTOR_SIZE;
    private static final int SECTOR_MASK;
    private java.util.List data;
    int sectors;
    int length;
    boolean foundEOS;

    public void <init>(java.io.InputStream)
    {
        org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream r0;
        java.util.ArrayList $r1;
        java.io.InputStream r2;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream;

        r2 := @parameter0: java.io.InputStream;

        specialinvoke r0.<org.apache.batik.ext.awt.image.codec.util.SeekableStream: void <init>()>();

        r0.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: long pointer> = 0L;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: java.util.List data> = $r1;

        r0.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: int sectors> = 0;

        r0.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: int length> = 0;

        r0.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: boolean foundEOS> = 0;

        r0.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: java.io.InputStream src> = r2;

        return;
    }

    private long readUntil(long) throws java.io.IOException
    {
        byte[] r1;
        long l0, $l2, $l4, $l12, $l14, $l16;
        byte $b3;
        int $i1, i5, $i6, i7, $i8, $i9, $i10, $i11, $i13, $i15, i17, i18, i19, $i20, $i22;
        org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream r0;
        boolean $z0;
        java.util.List $r2;
        java.io.InputStream $r3;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream;

        l0 := @parameter0: long;

        $i1 = r0.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: int length>;

        $l2 = (long) $i1;

        $b3 = l0 cmp $l2;

        $i20 = (int) $b3;

        if $i20 >= 0 goto label1;

        return l0;

     label1:
        $z0 = r0.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: boolean foundEOS>;

        if $z0 == 0 goto label2;

        $i15 = r0.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: int length>;

        $l16 = (long) $i15;

        return $l16;

     label2:
        $l4 = l0 >> 9;

        i5 = (int) $l4;

        $i6 = r0.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: int length>;

        i7 = $i6 >> 9;

        i17 = i7;

        goto label7;

     label3:
        r1 = newarray (byte)[512];

        $r2 = r0.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: java.util.List data>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        i18 = 512;

        i19 = 0;

        goto label6;

     label4:
        $r3 = r0.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: java.io.InputStream src>;

        $i8 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>(r1, i19, i18);

        $i22 = (int) -1;

        if $i8 != $i22 goto label5;

        r0.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: boolean foundEOS> = 1;

        $i11 = r0.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: int length>;

        $l12 = (long) $i11;

        return $l12;

     label5:
        i19 = i19 + $i8;

        i18 = i18 - $i8;

        $i9 = r0.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: int length>;

        $i10 = $i9 + $i8;

        r0.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: int length> = $i10;

     label6:
        if i18 > 0 goto label4;

        i17 = i17 + 1;

     label7:
        if i17 <= i5 goto label3;

        $i13 = r0.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: int length>;

        $l14 = (long) $i13;

        return $l14;
    }

    public boolean canSeekBackwards()
    {
        org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream;

        return 1;
    }

    public long getFilePointer()
    {
        long $l0;
        org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream;

        $l0 = r0.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: long pointer>;

        return $l0;
    }

    public void seek(long) throws java.io.IOException
    {
        byte $b1;
        int $i2;
        long l0;
        java.io.IOException $r3;
        java.lang.String $r2;
        org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label1;

        $r3 = new java.io.IOException;

        $r2 = staticinvoke <org.apache.batik.ext.awt.image.codec.util.PropertyUtil: java.lang.String getString(java.lang.String)>("MemoryCacheSeekableStream0");

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r2);

        throw $r3;

     label1:
        r0.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: long pointer> = l0;

        return;
    }

    public int read() throws java.io.IOException
    {
        byte[] r3;
        long $l0, l1, $l2, $l4, $l5, $l7, $l8, $l9;
        short $s12, $s14;
        byte $b3, $b11;
        int $i6, $i10, $i13, $i15, $i17;
        org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream r0;
        java.util.List $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream;

        $l0 = r0.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: long pointer>;

        l1 = $l0 + 1L;

        $l2 = specialinvoke r0.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: long readUntil(long)>(l1);

        $b3 = $l2 cmp l1;

        $i13 = (int) $b3;

        if $i13 < 0 goto label1;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: java.util.List data>;

        $l4 = r0.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: long pointer>;

        $l5 = $l4 >> 9;

        $i6 = (int) $l5;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i6);

        r3 = (byte[]) $r2;

        $l7 = r0.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: long pointer>;

        $l8 = $l7 + 1L;

        r0.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: long pointer> = $l8;

        $l9 = $l7 & 511L;

        $i10 = (int) $l9;

        $b11 = r3[$i10];

        $s14 = (short) $b11;

        $s12 = $s14 & 255;

        $i15 = (int) $s12;

        return $i15;

     label1:
        $i17 = (int) -1;

        return $i17;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        byte[] r0, r4;
        java.lang.IndexOutOfBoundsException $r8;
        java.lang.NullPointerException $r7;
        byte $b9;
        org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream r1;
        java.util.List $r2;
        long $l4, $l5, $l6, $l7, $l8, $l10, $l11, $l13, $l14, $l18, $l19, $l21, $l22, $l23;
        int i0, i1, $i2, $i3, $i12, $i15, $i16, $i17, $i20, $i24, $i26;
        java.lang.Object $r3;

        r1 := @this: org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r0 != null goto label1;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>()>();

        throw $r7;

     label1:
        if i0 < 0 goto label2;

        if i1 < 0 goto label2;

        $i3 = i0 + i1;

        $i2 = lengthof r0;

        if $i3 <= $i2 goto label3;

     label2:
        $r8 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r8.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r8;

     label3:
        if i1 != 0 goto label4;

        return 0;

     label4:
        $l5 = r1.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: long pointer>;

        $l4 = (long) i1;

        $l6 = $l5 + $l4;

        $l7 = specialinvoke r1.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: long readUntil(long)>($l6);

        $l8 = r1.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: long pointer>;

        $b9 = $l7 cmp $l8;

        $i24 = (int) $b9;

        if $i24 > 0 goto label5;

        $i26 = (int) -1;

        return $i26;

     label5:
        $r2 = r1.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: java.util.List data>;

        $l10 = r1.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: long pointer>;

        $l11 = $l10 >> 9;

        $i12 = (int) $l11;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i12);

        r4 = (byte[]) $r3;

        $l13 = r1.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: long pointer>;

        $l14 = $l13 & 511L;

        $i15 = (int) $l14;

        $i16 = 512 - $i15;

        $i17 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i16);

        $l18 = r1.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: long pointer>;

        $l19 = $l18 & 511L;

        $i20 = (int) $l19;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, $i20, r0, i0, $i17);

        $l22 = r1.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: long pointer>;

        $l21 = (long) $i17;

        $l23 = $l22 + $l21;

        r1.<org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: long pointer> = $l23;

        return $i17;
    }

    public static void <clinit>()
    {
        <org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: int SECTOR_MASK> = 511;

        <org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: int SECTOR_SIZE> = 512;

        <org.apache.batik.ext.awt.image.codec.util.MemoryCacheSeekableStream: int SECTOR_SHIFT> = 9;

        return;
    }
}
