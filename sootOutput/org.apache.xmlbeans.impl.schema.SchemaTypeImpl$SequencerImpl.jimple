class org.apache.xmlbeans.impl.schema.SchemaTypeImpl$SequencerImpl extends java.lang.Object implements org.apache.xmlbeans.SchemaTypeElementSequencer
{
    private org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl _visitor;

    private void <init>(org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl$SequencerImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeImpl$SequencerImpl;

        r1 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl$SequencerImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl _visitor> = r1;

        return;
    }

    public boolean next(javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl$SequencerImpl r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl $r1, $r3;
        javax.xml.namespace.QName r2;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeImpl$SequencerImpl;

        r2 := @parameter0: javax.xml.namespace.QName;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl$SequencerImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl _visitor>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl$SequencerImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl _visitor>;

        $z0 = virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: boolean visit(javax.xml.namespace.QName)>(r2);

        return $z0;
    }

    public boolean peek(javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl$SequencerImpl r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl $r1, $r3;
        javax.xml.namespace.QName r2;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeImpl$SequencerImpl;

        r2 := @parameter0: javax.xml.namespace.QName;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl$SequencerImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl _visitor>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl$SequencerImpl: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl _visitor>;

        $z0 = virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: boolean testValid(javax.xml.namespace.QName)>(r2);

        return $z0;
    }

    void <init>(org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl, org.apache.xmlbeans.impl.schema.SchemaTypeImpl$1)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl$SequencerImpl r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl$1 r2;

        r0 := @this: org.apache.xmlbeans.impl.schema.SchemaTypeImpl$SequencerImpl;

        r1 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl;

        r2 := @parameter1: org.apache.xmlbeans.impl.schema.SchemaTypeImpl$1;

        specialinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl$SequencerImpl: void <init>(org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl)>(r1);

        return;
    }
}
