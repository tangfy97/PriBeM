public class org.apache.solr.client.solrj.response.LukeResponse$FieldInfo extends java.lang.Object implements java.io.Serializable
{
    java.lang.String name;
    java.lang.String type;
    java.lang.String schema;
    int docs;
    int distinct;
    java.util.EnumSet flags;
    boolean cacheableFaceting;
    org.apache.solr.common.util.NamedList topTerms;

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.apache.solr.client.solrj.response.LukeResponse$FieldInfo r0;

        r0 := @this: org.apache.solr.client.solrj.response.LukeResponse$FieldInfo;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.solr.client.solrj.response.LukeResponse$FieldInfo: java.lang.String name> = r1;

        return;
    }

    public void read(org.apache.solr.common.util.NamedList)
    {
        java.lang.Integer $r24, $r26;
        java.util.EnumSet $r31;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.apache.solr.client.solrj.response.LukeResponse$FieldInfo r18;
        int $i0, $i1;
        java.lang.Boolean $r22;
        java.lang.String $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r28, $r30, $r33;
        java.util.Map$Entry r3;
        java.util.Iterator $r1;
        org.apache.solr.common.util.NamedList r0, $r20;
        java.lang.Object $r2, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r32;

        r18 := @this: org.apache.solr.client.solrj.response.LukeResponse$FieldInfo;

        r0 := @parameter0: org.apache.solr.common.util.NamedList;

        $r1 = virtualinvoke r0.<org.apache.solr.common.util.NamedList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r2;

        $r4 = "type";

        $r5 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label2;

        $r32 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r33 = (java.lang.String) $r32;

        r18.<org.apache.solr.client.solrj.response.LukeResponse$FieldInfo: java.lang.String type> = $r33;

     label2:
        $r6 = "flags";

        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label3;

        $r29 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r30 = (java.lang.String) $r29;

        $r31 = staticinvoke <org.apache.solr.client.solrj.response.LukeResponse$FieldInfo: java.util.EnumSet parseFlags(java.lang.String)>($r30);

        r18.<org.apache.solr.client.solrj.response.LukeResponse$FieldInfo: java.util.EnumSet flags> = $r31;

        goto label8;

     label3:
        $r8 = "schema";

        $r9 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z3 == 0 goto label4;

        $r27 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r28 = (java.lang.String) $r27;

        r18.<org.apache.solr.client.solrj.response.LukeResponse$FieldInfo: java.lang.String schema> = $r28;

        goto label8;

     label4:
        $r10 = "docs";

        $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z4 == 0 goto label5;

        $r25 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r26 = (java.lang.Integer) $r25;

        $i1 = virtualinvoke $r26.<java.lang.Integer: int intValue()>();

        r18.<org.apache.solr.client.solrj.response.LukeResponse$FieldInfo: int docs> = $i1;

        goto label8;

     label5:
        $r12 = "distinct";

        $r13 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z5 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z5 == 0 goto label6;

        $r23 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r24 = (java.lang.Integer) $r23;

        $i0 = virtualinvoke $r24.<java.lang.Integer: int intValue()>();

        r18.<org.apache.solr.client.solrj.response.LukeResponse$FieldInfo: int distinct> = $i0;

        goto label8;

     label6:
        $r14 = "cacheableFaceting";

        $r15 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z6 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z6 == 0 goto label7;

        $r21 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r22 = (java.lang.Boolean) $r21;

        $z8 = virtualinvoke $r22.<java.lang.Boolean: boolean booleanValue()>();

        r18.<org.apache.solr.client.solrj.response.LukeResponse$FieldInfo: boolean cacheableFaceting> = $z8;

        goto label8;

     label7:
        $r16 = "topTerms";

        $r17 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z7 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z7 == 0 goto label8;

        $r19 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r20 = (org.apache.solr.common.util.NamedList) $r19;

        r18.<org.apache.solr.client.solrj.response.LukeResponse$FieldInfo: org.apache.solr.common.util.NamedList topTerms> = $r20;

     label8:
        goto label1;

     label9:
        return;
    }

    public static java.util.EnumSet parseFlags(java.lang.String)
    {
        char $c1, $c2;
        int $i0, i3, $i4;
        char[] $r2;
        org.apache.solr.common.luke.FieldFlag $r3;
        java.lang.String r1;
        java.util.EnumSet $r0;

        r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>(class "Lorg/apache/solr/common/luke/FieldFlag;");

        $r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        i3 = 0;

     label1:
        $i0 = lengthof $r2;

        if i3 >= $i0 goto label3;

        $c1 = $r2[i3];

        $i4 = (int) $c1;

        if $i4 == 45 goto label2;

        $c2 = $r2[i3];

        $r3 = staticinvoke <org.apache.solr.common.luke.FieldFlag: org.apache.solr.common.luke.FieldFlag getFlag(char)>($c2);

        virtualinvoke $r0.<java.util.EnumSet: boolean add(java.lang.Object)>($r3);

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return $r0;
    }

    public java.util.EnumSet getFlags()
    {
        org.apache.solr.client.solrj.response.LukeResponse$FieldInfo r0;
        java.util.EnumSet $r1;

        r0 := @this: org.apache.solr.client.solrj.response.LukeResponse$FieldInfo;

        $r1 = r0.<org.apache.solr.client.solrj.response.LukeResponse$FieldInfo: java.util.EnumSet flags>;

        return $r1;
    }

    public boolean isCacheableFaceting()
    {
        org.apache.solr.client.solrj.response.LukeResponse$FieldInfo r0;
        boolean $z0;

        r0 := @this: org.apache.solr.client.solrj.response.LukeResponse$FieldInfo;

        $z0 = r0.<org.apache.solr.client.solrj.response.LukeResponse$FieldInfo: boolean cacheableFaceting>;

        return $z0;
    }

    public java.lang.String getType()
    {
        java.lang.String $r1;
        org.apache.solr.client.solrj.response.LukeResponse$FieldInfo r0;

        r0 := @this: org.apache.solr.client.solrj.response.LukeResponse$FieldInfo;

        $r1 = r0.<org.apache.solr.client.solrj.response.LukeResponse$FieldInfo: java.lang.String type>;

        return $r1;
    }

    public int getDistinct()
    {
        int $i0;
        org.apache.solr.client.solrj.response.LukeResponse$FieldInfo r0;

        r0 := @this: org.apache.solr.client.solrj.response.LukeResponse$FieldInfo;

        $i0 = r0.<org.apache.solr.client.solrj.response.LukeResponse$FieldInfo: int distinct>;

        return $i0;
    }

    public int getDocs()
    {
        int $i0;
        org.apache.solr.client.solrj.response.LukeResponse$FieldInfo r0;

        r0 := @this: org.apache.solr.client.solrj.response.LukeResponse$FieldInfo;

        $i0 = r0.<org.apache.solr.client.solrj.response.LukeResponse$FieldInfo: int docs>;

        return $i0;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        org.apache.solr.client.solrj.response.LukeResponse$FieldInfo r0;

        r0 := @this: org.apache.solr.client.solrj.response.LukeResponse$FieldInfo;

        $r1 = r0.<org.apache.solr.client.solrj.response.LukeResponse$FieldInfo: java.lang.String name>;

        return $r1;
    }

    public java.lang.String getSchema()
    {
        java.lang.String $r1;
        org.apache.solr.client.solrj.response.LukeResponse$FieldInfo r0;

        r0 := @this: org.apache.solr.client.solrj.response.LukeResponse$FieldInfo;

        $r1 = r0.<org.apache.solr.client.solrj.response.LukeResponse$FieldInfo: java.lang.String schema>;

        return $r1;
    }

    public org.apache.solr.common.util.NamedList getTopTerms()
    {
        org.apache.solr.client.solrj.response.LukeResponse$FieldInfo r0;
        org.apache.solr.common.util.NamedList $r1;

        r0 := @this: org.apache.solr.client.solrj.response.LukeResponse$FieldInfo;

        $r1 = r0.<org.apache.solr.client.solrj.response.LukeResponse$FieldInfo: org.apache.solr.common.util.NamedList topTerms>;

        return $r1;
    }
}
