class org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor extends javax.swing.JFormattedTextField implements javax.swing.plaf.UIResource
{
    final org.jdesktop.swingx.plaf.basic.BasicDatePickerUI this$0;

    public void <init>(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI, javax.swing.JFormattedTextField$AbstractFormatter)
    {
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI r1;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor r0;
        javax.swing.JFormattedTextField$AbstractFormatter r2;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor;

        r1 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI;

        r2 := @parameter1: javax.swing.JFormattedTextField$AbstractFormatter;

        r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI this$0> = r1;

        specialinvoke r0.<javax.swing.JFormattedTextField: void <init>(javax.swing.JFormattedTextField$AbstractFormatter)>(r2);

        return;
    }

    public java.awt.Dimension getPreferredSize()
    {
        java.awt.Dimension $r1, $r2;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor r0;
        int $i0, $i1, $i2;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor;

        $r1 = specialinvoke r0.<javax.swing.JFormattedTextField: java.awt.Dimension getPreferredSize()>();

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor: int getColumns()>();

        if $i0 > 0 goto label1;

        $r2 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor: java.awt.Dimension getCompareMinimumSize()>();

        $i2 = $r1.<java.awt.Dimension: int width>;

        $i1 = $r2.<java.awt.Dimension: int width>;

        if $i2 >= $i1 goto label1;

        return $r2;

     label1:
        return $r1;
    }

    public java.awt.Dimension getMinimumSize()
    {
        java.awt.Dimension $r1;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor: java.awt.Dimension getPreferredSize()>();

        return $r1;
    }

    private java.awt.Dimension getCompareMinimumSize()
    {
        java.awt.Insets $r3;
        javax.swing.JFormattedTextField $r0;
        org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor r1;
        java.awt.Font $r5;
        java.util.Date $r6;
        javax.swing.border.Border $r4;
        java.awt.Dimension $r7, $r8;
        javax.swing.JFormattedTextField$AbstractFormatter $r2;
        int $i0, $i1, $i2, $i3;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor;

        $r0 = new javax.swing.JFormattedTextField;

        $r2 = virtualinvoke r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor: javax.swing.JFormattedTextField$AbstractFormatter getFormatter()>();

        specialinvoke $r0.<javax.swing.JFormattedTextField: void <init>(javax.swing.JFormattedTextField$AbstractFormatter)>($r2);

        $r3 = virtualinvoke r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor: java.awt.Insets getMargin()>();

        virtualinvoke $r0.<javax.swing.JFormattedTextField: void setMargin(java.awt.Insets)>($r3);

        $r4 = virtualinvoke r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor: javax.swing.border.Border getBorder()>();

        virtualinvoke $r0.<javax.swing.JFormattedTextField: void setBorder(javax.swing.border.Border)>($r4);

        $r5 = virtualinvoke r1.<org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor: java.awt.Font getFont()>();

        virtualinvoke $r0.<javax.swing.JFormattedTextField: void setFont(java.awt.Font)>($r5);

        $r6 = new java.util.Date;

        specialinvoke $r6.<java.util.Date: void <init>()>();

        virtualinvoke $r0.<javax.swing.JFormattedTextField: void setValue(java.lang.Object)>($r6);

        $r7 = virtualinvoke $r0.<javax.swing.JFormattedTextField: java.awt.Dimension getPreferredSize()>();

        virtualinvoke $r0.<javax.swing.JFormattedTextField: void setValue(java.lang.Object)>(null);

        $i0 = $r7.<java.awt.Dimension: int width>;

        $r8 = virtualinvoke $r0.<javax.swing.JFormattedTextField: java.awt.Dimension getPreferredSize()>();

        $i1 = $r8.<java.awt.Dimension: int width>;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i1, 4);

        $i3 = $i0 + $i2;

        $r7.<java.awt.Dimension: int width> = $i3;

        return $r7;
    }
}
