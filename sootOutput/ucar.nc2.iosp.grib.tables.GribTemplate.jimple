public class ucar.nc2.iosp.grib.tables.GribTemplate extends java.lang.Object implements java.lang.Comparable
{
    static java.util.Map convertMap;
    static java.util.Map gribCodes;
    public java.lang.String name;
    public java.lang.String desc;
    public int m1;
    public int m2;
    public java.util.List flds;
    static java.lang.String resourceName;

    static java.lang.String convert(java.lang.String, int)
    {
        ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry $r4;
        java.util.Map $r0, $r2, $r17;
        int i0;
        java.lang.String r1, $r11, $r12, $r16;
        ucar.nc2.iosp.grib.tables.GribCodeTable $r18;
        java.io.IOException $r19;
        java.lang.Object $r3;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r13, $r14, $r15;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = <ucar.nc2.iosp.grib.tables.GribTemplate: java.util.Map gribCodes>;

        if $r0 != null goto label4;

     label1:
        $r17 = staticinvoke <ucar.nc2.iosp.grib.tables.GribCodeTable: java.util.Map readGribCodes()>();

        <ucar.nc2.iosp.grib.tables.GribTemplate: java.util.Map gribCodes> = $r17;

     label2:
        goto label4;

     label3:
        $r19 := @caughtexception;

        return "Read GridCodes failed";

     label4:
        $r2 = <ucar.nc2.iosp.grib.tables.GribTemplate: java.util.Map gribCodes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r18 = (ucar.nc2.iosp.grib.tables.GribCodeTable) $r3;

        if $r18 != null goto label5;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;

     label5:
        $r4 = virtualinvoke $r18.<ucar.nc2.iosp.grib.tables.GribCodeTable: ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry get(int)>(i0);

        if $r4 == null goto label6;

        $r12 = $r4.<ucar.nc2.iosp.grib.tables.GribCodeTable$TableEntry: java.lang.String meaning>;

        return $r12;

     label6:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Table ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" code ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;

        catch java.io.IOException from label1 to label2 with label3;
    }

    void <init>(java.lang.String)
    {
        java.lang.String[] $r3, $r7;
        ucar.nc2.iosp.grib.tables.GribTemplate r0;
        java.util.ArrayList $r1;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String r2, $r4, $r5, $r6, $r11, $r13, $r14, $r15;
        boolean $z0;
        java.io.PrintStream $r9;
        java.lang.StringBuilder $r8, $r10, $r12;

        r0 := @this: ucar.nc2.iosp.grib.tables.GribTemplate;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.iosp.grib.tables.GribTemplate: java.util.List flds> = $r1;

        r0.<ucar.nc2.iosp.grib.tables.GribTemplate: java.lang.String desc> = r2;

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        i5 = 0;

     label1:
        $i0 = lengthof $r3;

        if i5 >= $i0 goto label4;

        $r4 = $r3[i5];

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("template");

        if $z0 == 0 goto label3;

        $i1 = i5 + 1;

        $r5 = $r3[$i1];

        r0.<ucar.nc2.iosp.grib.tables.GribTemplate: java.lang.String name> = $r5;

        $r6 = r0.<ucar.nc2.iosp.grib.tables.GribTemplate: java.lang.String name>;

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        $i2 = lengthof $r7;

        if $i2 != 2 goto label2;

        $r14 = $r7[0];

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r14);

        r0.<ucar.nc2.iosp.grib.tables.GribTemplate: int m1> = $i3;

        $r15 = $r7[1];

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r15);

        r0.<ucar.nc2.iosp.grib.tables.GribTemplate: int m2> = $i4;

        goto label4;

     label2:
        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HEY bad= %s%n");

        $r11 = r0.<ucar.nc2.iosp.grib.tables.GribTemplate: java.lang.String name>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r13);

        goto label4;

     label3:
        i5 = i5 + 1;

        goto label1;

     label4:
        return;
    }

    void add(java.lang.String, java.lang.String)
    {
        ucar.nc2.iosp.grib.tables.GribTemplate$Field $r1;
        java.util.List $r4;
        ucar.nc2.iosp.grib.tables.GribTemplate r0;
        java.lang.String r2, r3;

        r0 := @this: ucar.nc2.iosp.grib.tables.GribTemplate;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r4 = r0.<ucar.nc2.iosp.grib.tables.GribTemplate: java.util.List flds>;

        $r1 = new ucar.nc2.iosp.grib.tables.GribTemplate$Field;

        specialinvoke $r1.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: void <init>(ucar.nc2.iosp.grib.tables.GribTemplate,java.lang.String,java.lang.String)>(r0, r2, r3);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    void add(int, int, java.lang.String)
    {
        ucar.nc2.iosp.grib.tables.GribTemplate$Field $r1;
        java.util.List $r3;
        int i0, i1;
        ucar.nc2.iosp.grib.tables.GribTemplate r0;
        java.lang.String r2;

        r0 := @this: ucar.nc2.iosp.grib.tables.GribTemplate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r3 = r0.<ucar.nc2.iosp.grib.tables.GribTemplate: java.util.List flds>;

        $r1 = new ucar.nc2.iosp.grib.tables.GribTemplate$Field;

        specialinvoke $r1.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: void <init>(ucar.nc2.iosp.grib.tables.GribTemplate,int,int,java.lang.String)>(r0, i0, i1, r2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public int compareTo(ucar.nc2.iosp.grib.tables.GribTemplate)
    {
        ucar.nc2.iosp.grib.tables.GribTemplate r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: ucar.nc2.iosp.grib.tables.GribTemplate;

        r1 := @parameter0: ucar.nc2.iosp.grib.tables.GribTemplate;

        $i1 = r0.<ucar.nc2.iosp.grib.tables.GribTemplate: int m1>;

        $i0 = r1.<ucar.nc2.iosp.grib.tables.GribTemplate: int m1>;

        if $i1 != $i0 goto label1;

        $i6 = r0.<ucar.nc2.iosp.grib.tables.GribTemplate: int m2>;

        $i5 = r1.<ucar.nc2.iosp.grib.tables.GribTemplate: int m2>;

        $i7 = $i6 - $i5;

        return $i7;

     label1:
        $i3 = r0.<ucar.nc2.iosp.grib.tables.GribTemplate: int m1>;

        $i2 = r1.<ucar.nc2.iosp.grib.tables.GribTemplate: int m1>;

        $i4 = $i3 - $i2;

        return $i4;
    }

    public void showInfo(byte[], java.util.Formatter)
    {
        byte[] r13;
        ucar.nc2.iosp.grib.tables.GribTemplate r2;
        java.lang.Integer $r16, $r18, $r20, $r22, $r25, $r27;
        java.util.Formatter r0;
        java.util.Map $r10;
        boolean $z0;
        java.util.List $r5;
        java.lang.Object[] $r1, $r15, $r19, $r24;
        ucar.nc2.iosp.grib.tables.GribTemplate$Field r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String $r3, $r4, $r9, r12, $r14, $r17, $r21, $r23, $r26;
        java.util.Iterator $r6;
        java.lang.Object $r7, $r11;

        r2 := @this: ucar.nc2.iosp.grib.tables.GribTemplate;

        r13 := @parameter0: byte[];

        r0 := @parameter1: java.util.Formatter;

        $r1 = newarray (java.lang.Object)[2];

        $r3 = r2.<ucar.nc2.iosp.grib.tables.GribTemplate: java.lang.String name>;

        $r1[0] = $r3;

        $r4 = r2.<ucar.nc2.iosp.grib.tables.GribTemplate: java.lang.String desc>;

        $r1[1] = $r4;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%n(%s) %s %n", $r1);

        $r5 = r2.<ucar.nc2.iosp.grib.tables.GribTemplate: java.util.List flds>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (ucar.nc2.iosp.grib.tables.GribTemplate$Field) $r7;

        $i0 = r8.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int start>;

        if $i0 >= 0 goto label2;

        goto label1;

     label2:
        $r10 = <ucar.nc2.iosp.grib.tables.GribTemplate: java.util.Map convertMap>;

        $r9 = r8.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: java.lang.String content>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        r12 = (java.lang.String) $r11;

        if r12 != null goto label3;

        $r24 = newarray (java.lang.Object)[3];

        $i7 = r8.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int start>;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r24[0] = $r25;

        $r26 = r8.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: java.lang.String content>;

        $r24[1] = $r26;

        $i8 = virtualinvoke r8.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int value(byte[])>(r13);

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r24[2] = $r27;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%3d: %90s == %d %n", $r24);

        goto label5;

     label3:
        $i1 = virtualinvoke r8.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int value(byte[])>(r13);

        $r14 = staticinvoke <ucar.nc2.iosp.grib.tables.GribTemplate: java.lang.String convert(java.lang.String,int)>(r12, $i1);

        if $r14 != null goto label4;

        $r19 = newarray (java.lang.Object)[4];

        $i4 = r8.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int start>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r19[0] = $r20;

        $r21 = r8.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: java.lang.String content>;

        $r19[1] = $r21;

        $i5 = virtualinvoke r8.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int value(byte[])>(r13);

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r19[2] = $r22;

        $i6 = virtualinvoke r8.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int value(byte[])>(r13);

        $r23 = staticinvoke <ucar.nc2.iosp.grib.tables.GribTemplate: java.lang.String convert(java.lang.String,int)>(r12, $i6);

        $r19[3] = $r23;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%3d: %90s == %d (%s) %n", $r19);

        goto label5;

     label4:
        $r15 = newarray (java.lang.Object)[5];

        $i2 = r8.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int start>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r15[0] = $r16;

        $r17 = r8.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: java.lang.String content>;

        $r15[1] = $r17;

        $i3 = virtualinvoke r8.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int value(byte[])>(r13);

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r15[2] = $r18;

        $r15[3] = r12;

        $r15[4] = $r14;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%3d: %90s == %d (table %s: %s) %n", $r15);

     label5:
        goto label1;

     label6:
        return;
    }

    public static java.util.List readXml(java.io.InputStream) throws java.io.IOException
    {
        org.jdom.input.SAXBuilder $r0;
        java.util.HashMap $r3;
        ucar.nc2.iosp.grib.tables.GribTemplate $r16, r21, r22;
        java.util.ArrayList $r7;
        org.jdom.Document $r2;
        org.jdom.JDOMException $r17;
        int $i0, $i1;
        java.lang.String $r12, $r13, $r14, $r19;
        boolean $z0, $z1;
        java.util.Iterator $r6, $r9;
        java.util.Collection $r8;
        java.io.IOException $r18;
        java.util.List $r5, $r23;
        java.lang.Object $r10, $r11, $r15;
        org.jdom.Element $r4, r20;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

     label01:
        $r0 = new org.jdom.input.SAXBuilder;

        specialinvoke $r0.<org.jdom.input.SAXBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<org.jdom.input.SAXBuilder: org.jdom.Document build(java.io.InputStream)>(r1);

     label02:
        goto label04;

     label03:
        $r17 := @caughtexception;

        $r18 = new java.io.IOException;

        $r19 = virtualinvoke $r17.<org.jdom.JDOMException: java.lang.String getMessage()>();

        specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>($r19);

        throw $r18;

     label04:
        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r4 = virtualinvoke $r2.<org.jdom.Document: org.jdom.Element getRootElement()>();

        $r5 = virtualinvoke $r4.<org.jdom.Element: java.util.List getChildren(java.lang.String)>("ForExport_Templates_E");

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r11 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r20 = (org.jdom.Element) $r11;

        $r12 = virtualinvoke r20.<org.jdom.Element: java.lang.String getChildTextNormalize(java.lang.String)>("TemplateName_E");

        $r13 = virtualinvoke r20.<org.jdom.Element: java.lang.String getChildTextNormalize(java.lang.String)>("OctetNo");

        $r14 = virtualinvoke r20.<org.jdom.Element: java.lang.String getChildTextNormalize(java.lang.String)>("Contents_E");

        $r15 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r12);

        r21 = (ucar.nc2.iosp.grib.tables.GribTemplate) $r15;

        if r21 != null goto label06;

        $r16 = new ucar.nc2.iosp.grib.tables.GribTemplate;

        specialinvoke $r16.<ucar.nc2.iosp.grib.tables.GribTemplate: void <init>(java.lang.String)>($r12);

        r21 = $r16;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r16);

     label06:
        virtualinvoke r21.<ucar.nc2.iosp.grib.tables.GribTemplate: void add(java.lang.String,java.lang.String)>($r13, $r14);

        goto label05;

     label07:
        virtualinvoke r1.<java.io.InputStream: void close()>();

        $r7 = new java.util.ArrayList;

        $r8 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r7.<java.util.ArrayList: void <init>(java.util.Collection)>($r8);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r7);

        $r9 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r22 = (ucar.nc2.iosp.grib.tables.GribTemplate) $r10;

        $i0 = r22.<ucar.nc2.iosp.grib.tables.GribTemplate: int m1>;

        if $i0 != 3 goto label09;

        virtualinvoke r22.<ucar.nc2.iosp.grib.tables.GribTemplate: void add(int,int,java.lang.String)>(1, 4, "GDS length");

        virtualinvoke r22.<ucar.nc2.iosp.grib.tables.GribTemplate: void add(int,int,java.lang.String)>(5, 1, "Section");

        virtualinvoke r22.<ucar.nc2.iosp.grib.tables.GribTemplate: void add(int,int,java.lang.String)>(6, 1, "Source of Grid Definition (see code table 3.0)");

        virtualinvoke r22.<ucar.nc2.iosp.grib.tables.GribTemplate: void add(int,int,java.lang.String)>(7, 4, "Number of data points");

        virtualinvoke r22.<ucar.nc2.iosp.grib.tables.GribTemplate: void add(int,int,java.lang.String)>(11, 1, "Number of octects for optional list of numbers");

        virtualinvoke r22.<ucar.nc2.iosp.grib.tables.GribTemplate: void add(int,int,java.lang.String)>(12, 1, "Interpretation of list of numbers");

        virtualinvoke r22.<ucar.nc2.iosp.grib.tables.GribTemplate: void add(int,int,java.lang.String)>(13, 2, "Grid Definition Template Number");

        goto label10;

     label09:
        $i1 = r22.<ucar.nc2.iosp.grib.tables.GribTemplate: int m1>;

        if $i1 != 4 goto label10;

        virtualinvoke r22.<ucar.nc2.iosp.grib.tables.GribTemplate: void add(int,int,java.lang.String)>(1, 4, "PDS length");

        virtualinvoke r22.<ucar.nc2.iosp.grib.tables.GribTemplate: void add(int,int,java.lang.String)>(5, 1, "Section");

        virtualinvoke r22.<ucar.nc2.iosp.grib.tables.GribTemplate: void add(int,int,java.lang.String)>(6, 2, "Number of coordinates values after Template");

        virtualinvoke r22.<ucar.nc2.iosp.grib.tables.GribTemplate: void add(int,int,java.lang.String)>(8, 2, "Product Definition Template Number");

     label10:
        $r23 = r22.<ucar.nc2.iosp.grib.tables.GribTemplate: java.util.List flds>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r23);

        goto label08;

     label11:
        return $r7;

        catch org.jdom.JDOMException from label01 to label02 with label03;
    }

    public static java.util.Map getParameterTemplates() throws java.io.IOException
    {
        java.lang.Object[] $r13;
        java.util.HashMap $r4;
        ucar.nc2.iosp.grib.tables.GribTemplate r7;
        int $i0, $i1;
        java.lang.String $r1, $r12, $r14;
        boolean $z0;
        java.io.PrintStream $r15;
        java.util.Iterator $r5;
        java.util.List $r3;
        java.lang.Class r0;
        java.lang.Object $r6;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;
        java.io.InputStream $r2;

        r0 = class "Lucar/nc2/iosp/grib/tables/GribCodeTable;";

        $r1 = <ucar.nc2.iosp.grib.tables.GribTemplate: java.lang.String resourceName>;

        $r2 = virtualinvoke r0.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r1);

        if $r2 != null goto label1;

        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r13 = newarray (java.lang.Object)[1];

        $r14 = <ucar.nc2.iosp.grib.tables.GribTemplate: java.lang.String resourceName>;

        $r13[0] = $r14;

        virtualinvoke $r15.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("cant open %s%n", $r13);

        return null;

     label1:
        $r3 = staticinvoke <ucar.nc2.iosp.grib.tables.GribTemplate: java.util.List readXml(java.io.InputStream)>($r2);

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>(int)>(100);

        $r5 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (ucar.nc2.iosp.grib.tables.GribTemplate) $r6;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $i0 = r7.<ucar.nc2.iosp.grib.tables.GribTemplate: int m1>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $i1 = r7.<ucar.nc2.iosp.grib.tables.GribTemplate: int m2>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, r7);

        goto label2;

     label3:
        return $r4;
    }

    public static java.util.List getWmoStandard() throws java.io.IOException
    {
        java.io.PrintStream $r6;
        java.lang.Throwable $r7;
        java.lang.Object[] $r4;
        java.util.List $r3;
        java.lang.Class r0;
        java.lang.String $r1, $r5;
        java.io.InputStream $r2;

        r0 = class "Lucar/nc2/iosp/grib/tables/GribCodeTable;";

        $r1 = <ucar.nc2.iosp.grib.tables.GribTemplate: java.lang.String resourceName>;

        $r2 = virtualinvoke r0.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r1);

        if $r2 != null goto label1;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r4 = newarray (java.lang.Object)[1];

        $r5 = <ucar.nc2.iosp.grib.tables.GribTemplate: java.lang.String resourceName>;

        $r4[0] = $r5;

        virtualinvoke $r6.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("cant open %s%n", $r4);

        return null;

     label1:
        $r3 = staticinvoke <ucar.nc2.iosp.grib.tables.GribTemplate: java.util.List readXml(java.io.InputStream)>($r2);

     label2:
        virtualinvoke $r2.<java.io.InputStream: void close()>();

        return $r3;

     label3:
        $r7 := @caughtexception;

     label4:
        virtualinvoke $r2.<java.io.InputStream: void close()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        ucar.nc2.iosp.grib.tables.GribTemplate r41, r43;
        java.lang.Integer $r15, $r16, $r21, $r22, $r33, $r34;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r3, $r11, $r28;
        java.lang.Object[] $r7, $r13, $r19, $r24, $r31, $r37;
        java.lang.String[] r40;
        ucar.nc2.iosp.grib.tables.GribTemplate$Field r18, r42;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, $i10;
        java.lang.String $r1, $r8, $r9, $r25, $r26, $r35, $r36, $r38;
        java.io.PrintStream $r10, $r14, $r20, $r27, $r32, $r39;
        java.util.Iterator $r4, $r5, $r12, $r29;
        java.lang.Class r0;
        java.lang.Object $r6, $r17, $r23, $r30;
        java.io.InputStream $r2;

        r40 := @parameter0: java.lang.String[];

        r0 = class "Lucar/nc2/iosp/grib/tables/GribCodeTable;";

        $r1 = <ucar.nc2.iosp.grib.tables.GribTemplate: java.lang.String resourceName>;

        $r2 = virtualinvoke r0.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r1);

        if $r2 != null goto label01;

        $r39 = <java.lang.System: java.io.PrintStream out>;

        $r37 = newarray (java.lang.Object)[1];

        $r38 = <ucar.nc2.iosp.grib.tables.GribTemplate: java.lang.String resourceName>;

        $r37[0] = $r38;

        virtualinvoke $r39.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("cant open %s%n", $r37);

        return;

     label01:
        $r3 = staticinvoke <ucar.nc2.iosp.grib.tables.GribTemplate: java.util.List readXml(java.io.InputStream)>($r2);

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r23 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r41 = (ucar.nc2.iosp.grib.tables.GribTemplate) $r23;

        $r27 = <java.lang.System: java.io.PrintStream out>;

        $r24 = newarray (java.lang.Object)[2];

        $r25 = r41.<ucar.nc2.iosp.grib.tables.GribTemplate: java.lang.String name>;

        $r24[0] = $r25;

        $r26 = r41.<ucar.nc2.iosp.grib.tables.GribTemplate: java.lang.String desc>;

        $r24[1] = $r26;

        virtualinvoke $r27.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%n(%s) %s %n", $r24);

        $r28 = r41.<ucar.nc2.iosp.grib.tables.GribTemplate: java.util.List flds>;

        $r29 = interfaceinvoke $r28.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label04;

        $r30 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

        r42 = (ucar.nc2.iosp.grib.tables.GribTemplate$Field) $r30;

        $r32 = <java.lang.System: java.io.PrintStream out>;

        $r31 = newarray (java.lang.Object)[4];

        $i5 = r42.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int start>;

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r31[0] = $r33;

        $i6 = r42.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int nbytes>;

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r31[1] = $r34;

        $r35 = r42.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: java.lang.String octet>;

        $r31[2] = $r35;

        $r36 = r42.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: java.lang.String content>;

        $r31[3] = $r36;

        virtualinvoke $r32.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(" (%d,%d) %10s : %s %n", $r31);

        goto label03;

     label04:
        goto label02;

     label05:
        $r5 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r43 = (ucar.nc2.iosp.grib.tables.GribTemplate) $r6;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r7 = newarray (java.lang.Object)[2];

        $r8 = r43.<ucar.nc2.iosp.grib.tables.GribTemplate: java.lang.String name>;

        $r7[0] = $r8;

        $r9 = r43.<ucar.nc2.iosp.grib.tables.GribTemplate: java.lang.String desc>;

        $r7[1] = $r9;

        virtualinvoke $r10.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%n(%s) %s %n", $r7);

        $i10 = (int) -1;

        i7 = $i10;

        i8 = 0;

        $r11 = r43.<ucar.nc2.iosp.grib.tables.GribTemplate: java.util.List flds>;

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z3 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label12;

        $r17 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r18 = (ucar.nc2.iosp.grib.tables.GribTemplate$Field) $r17;

        $i0 = r18.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int start>;

        if $i0 >= 0 goto label08;

        goto label07;

     label08:
        if i7 >= 0 goto label09;

        i7 = r18.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int start>;

        $i4 = r18.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int nbytes>;

        i8 = i7 + $i4;

        goto label11;

     label09:
        $i1 = r18.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int start>;

        if $i1 == i8 goto label10;

        $r20 = <java.lang.System: java.io.PrintStream out>;

        $r19 = newarray (java.lang.Object)[2];

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);

        $r19[0] = $r21;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);

        $r19[1] = $r22;

        virtualinvoke $r20.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(" missing %d to %d %n", $r19);

     label10:
        $i3 = r18.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int start>;

        $i2 = r18.<ucar.nc2.iosp.grib.tables.GribTemplate$Field: int nbytes>;

        i8 = $i3 + $i2;

     label11:
        goto label07;

     label12:
        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r13 = newarray (java.lang.Object)[2];

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);

        $r13[0] = $r15;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);

        $r13[1] = $r16;

        virtualinvoke $r14.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(" range %d-%d %n", $r13);

        goto label06;

     label13:
        return;
    }

    public volatile int compareTo(java.lang.Object)
    {
        int $i0;
        java.lang.Object r1;
        ucar.nc2.iosp.grib.tables.GribTemplate r0, $r2;

        r0 := @this: ucar.nc2.iosp.grib.tables.GribTemplate;

        r1 := @parameter0: java.lang.Object;

        $r2 = (ucar.nc2.iosp.grib.tables.GribTemplate) r1;

        $i0 = virtualinvoke r0.<ucar.nc2.iosp.grib.tables.GribTemplate: int compareTo(ucar.nc2.iosp.grib.tables.GribTemplate)>($r2);

        return $i0;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.util.Map $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <ucar.nc2.iosp.grib.tables.GribTemplate: java.util.Map convertMap> = $r0;

        $r1 = <ucar.nc2.iosp.grib.tables.GribTemplate: java.util.Map convertMap>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Type of generating process", "4.3");

        $r2 = <ucar.nc2.iosp.grib.tables.GribTemplate: java.util.Map convertMap>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Indicator of unit of time range", "4.4");

        $r3 = <ucar.nc2.iosp.grib.tables.GribTemplate: java.util.Map convertMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Indicator of unit of time for time range over which statistical processing is done", "4.4");

        $r4 = <ucar.nc2.iosp.grib.tables.GribTemplate: java.util.Map convertMap>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Indicator of unit of time for the increment between the successive fields used", "4.4");

        $r5 = <ucar.nc2.iosp.grib.tables.GribTemplate: java.util.Map convertMap>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Type of first fixed surface", "4.5");

        $r6 = <ucar.nc2.iosp.grib.tables.GribTemplate: java.util.Map convertMap>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Type of second fixed surface", "4.5");

        $r7 = <ucar.nc2.iosp.grib.tables.GribTemplate: java.util.Map convertMap>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Type of ensemble forecast", "4.6");

        $r8 = <ucar.nc2.iosp.grib.tables.GribTemplate: java.util.Map convertMap>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Derived forecast", "4.7");

        $r9 = <ucar.nc2.iosp.grib.tables.GribTemplate: java.util.Map convertMap>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Probability type", "4.9");

        $r10 = <ucar.nc2.iosp.grib.tables.GribTemplate: java.util.Map convertMap>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Statistical process used to calculate the processed field from the field at each time increment during the time range", "4.10");

        $r11 = <ucar.nc2.iosp.grib.tables.GribTemplate: java.util.Map convertMap>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Type of time increment between successive fields used in the statistical processing", "4.11");

        <ucar.nc2.iosp.grib.tables.GribTemplate: java.lang.String resourceName> = "/resources/grib/wmo/GRIB2_5_2_0_Templates_E.xml";

        return;
    }
}
