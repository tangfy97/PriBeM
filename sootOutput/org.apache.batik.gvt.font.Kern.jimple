public class org.apache.batik.gvt.font.Kern extends java.lang.Object
{
    private int[] firstGlyphCodes;
    private int[] secondGlyphCodes;
    private org.apache.batik.gvt.font.UnicodeRange[] firstUnicodeRanges;
    private org.apache.batik.gvt.font.UnicodeRange[] secondUnicodeRanges;
    private float kerningAdjust;

    public void <init>(int[], int[], org.apache.batik.gvt.font.UnicodeRange[], org.apache.batik.gvt.font.UnicodeRange[], float)
    {
        org.apache.batik.gvt.font.Kern r0;
        int[] r1, r2, $r5, $r6;
        org.apache.batik.gvt.font.UnicodeRange[] r3, r4;
        float f0;

        r0 := @this: org.apache.batik.gvt.font.Kern;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        r3 := @parameter2: org.apache.batik.gvt.font.UnicodeRange[];

        r4 := @parameter3: org.apache.batik.gvt.font.UnicodeRange[];

        f0 := @parameter4: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.gvt.font.Kern: int[] firstGlyphCodes> = r1;

        r0.<org.apache.batik.gvt.font.Kern: int[] secondGlyphCodes> = r2;

        r0.<org.apache.batik.gvt.font.Kern: org.apache.batik.gvt.font.UnicodeRange[] firstUnicodeRanges> = r3;

        r0.<org.apache.batik.gvt.font.Kern: org.apache.batik.gvt.font.UnicodeRange[] secondUnicodeRanges> = r4;

        r0.<org.apache.batik.gvt.font.Kern: float kerningAdjust> = f0;

        if r1 == null goto label1;

        $r6 = r0.<org.apache.batik.gvt.font.Kern: int[] firstGlyphCodes>;

        staticinvoke <java.util.Arrays: void sort(int[])>($r6);

     label1:
        if r2 == null goto label2;

        $r5 = r0.<org.apache.batik.gvt.font.Kern: int[] secondGlyphCodes>;

        staticinvoke <java.util.Arrays: void sort(int[])>($r5);

     label2:
        return;
    }

    public boolean matchesFirstGlyph(int, java.lang.String)
    {
        org.apache.batik.gvt.font.Kern r0;
        org.apache.batik.gvt.font.UnicodeRange $r5;
        char $c1;
        int[] $r1, $r6;
        org.apache.batik.gvt.font.UnicodeRange[] $r3, $r4;
        int $i0, $i2, i3, $i4, i5, $i6;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.font.Kern;

        i3 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.batik.gvt.font.Kern: int[] firstGlyphCodes>;

        if $r1 == null goto label1;

        $r6 = r0.<org.apache.batik.gvt.font.Kern: int[] firstGlyphCodes>;

        $i4 = staticinvoke <java.util.Arrays: int binarySearch(int[],int)>($r6, i3);

        if $i4 < 0 goto label1;

        return 1;

     label1:
        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 >= 1 goto label2;

        return 0;

     label2:
        $c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);

        i5 = 0;

        goto label5;

     label3:
        $r4 = r0.<org.apache.batik.gvt.font.Kern: org.apache.batik.gvt.font.UnicodeRange[] firstUnicodeRanges>;

        $r5 = $r4[i5];

        $i6 = (int) $c1;

        $z0 = virtualinvoke $r5.<org.apache.batik.gvt.font.UnicodeRange: boolean contains(int)>($i6);

        if $z0 == 0 goto label4;

        return 1;

     label4:
        i5 = i5 + 1;

     label5:
        $r3 = r0.<org.apache.batik.gvt.font.Kern: org.apache.batik.gvt.font.UnicodeRange[] firstUnicodeRanges>;

        $i2 = lengthof $r3;

        if i5 < $i2 goto label3;

        return 0;
    }

    public boolean matchesFirstGlyph(int, char)
    {
        org.apache.batik.gvt.font.Kern r0;
        org.apache.batik.gvt.font.UnicodeRange $r4;
        char c1;
        int[] $r1, $r5;
        org.apache.batik.gvt.font.UnicodeRange[] $r2, $r3;
        int $i0, i2, $i3, i4, $i5;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.font.Kern;

        i2 := @parameter0: int;

        c1 := @parameter1: char;

        $r1 = r0.<org.apache.batik.gvt.font.Kern: int[] firstGlyphCodes>;

        if $r1 == null goto label1;

        $r5 = r0.<org.apache.batik.gvt.font.Kern: int[] firstGlyphCodes>;

        $i3 = staticinvoke <java.util.Arrays: int binarySearch(int[],int)>($r5, i2);

        if $i3 < 0 goto label1;

        return 1;

     label1:
        i4 = 0;

        goto label4;

     label2:
        $r3 = r0.<org.apache.batik.gvt.font.Kern: org.apache.batik.gvt.font.UnicodeRange[] firstUnicodeRanges>;

        $r4 = $r3[i4];

        $i5 = (int) c1;

        $z0 = virtualinvoke $r4.<org.apache.batik.gvt.font.UnicodeRange: boolean contains(int)>($i5);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i4 = i4 + 1;

     label4:
        $r2 = r0.<org.apache.batik.gvt.font.Kern: org.apache.batik.gvt.font.UnicodeRange[] firstUnicodeRanges>;

        $i0 = lengthof $r2;

        if i4 < $i0 goto label2;

        return 0;
    }

    public boolean matchesSecondGlyph(int, java.lang.String)
    {
        org.apache.batik.gvt.font.Kern r0;
        org.apache.batik.gvt.font.UnicodeRange $r5;
        char $c1;
        int[] $r1, $r6;
        org.apache.batik.gvt.font.UnicodeRange[] $r3, $r4;
        int $i0, $i2, i3, $i4, i5, $i6;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.font.Kern;

        i3 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.batik.gvt.font.Kern: int[] secondGlyphCodes>;

        if $r1 == null goto label1;

        $r6 = r0.<org.apache.batik.gvt.font.Kern: int[] secondGlyphCodes>;

        $i4 = staticinvoke <java.util.Arrays: int binarySearch(int[],int)>($r6, i3);

        if $i4 < 0 goto label1;

        return 1;

     label1:
        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 >= 1 goto label2;

        return 0;

     label2:
        $c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);

        i5 = 0;

        goto label5;

     label3:
        $r4 = r0.<org.apache.batik.gvt.font.Kern: org.apache.batik.gvt.font.UnicodeRange[] secondUnicodeRanges>;

        $r5 = $r4[i5];

        $i6 = (int) $c1;

        $z0 = virtualinvoke $r5.<org.apache.batik.gvt.font.UnicodeRange: boolean contains(int)>($i6);

        if $z0 == 0 goto label4;

        return 1;

     label4:
        i5 = i5 + 1;

     label5:
        $r3 = r0.<org.apache.batik.gvt.font.Kern: org.apache.batik.gvt.font.UnicodeRange[] secondUnicodeRanges>;

        $i2 = lengthof $r3;

        if i5 < $i2 goto label3;

        return 0;
    }

    public boolean matchesSecondGlyph(int, char)
    {
        org.apache.batik.gvt.font.Kern r0;
        org.apache.batik.gvt.font.UnicodeRange $r4;
        char c1;
        int[] $r1, $r5;
        org.apache.batik.gvt.font.UnicodeRange[] $r2, $r3;
        int $i0, i2, $i3, i4, $i5;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.font.Kern;

        i2 := @parameter0: int;

        c1 := @parameter1: char;

        $r1 = r0.<org.apache.batik.gvt.font.Kern: int[] secondGlyphCodes>;

        if $r1 == null goto label1;

        $r5 = r0.<org.apache.batik.gvt.font.Kern: int[] secondGlyphCodes>;

        $i3 = staticinvoke <java.util.Arrays: int binarySearch(int[],int)>($r5, i2);

        if $i3 < 0 goto label1;

        return 1;

     label1:
        i4 = 0;

        goto label4;

     label2:
        $r3 = r0.<org.apache.batik.gvt.font.Kern: org.apache.batik.gvt.font.UnicodeRange[] secondUnicodeRanges>;

        $r4 = $r3[i4];

        $i5 = (int) c1;

        $z0 = virtualinvoke $r4.<org.apache.batik.gvt.font.UnicodeRange: boolean contains(int)>($i5);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i4 = i4 + 1;

     label4:
        $r2 = r0.<org.apache.batik.gvt.font.Kern: org.apache.batik.gvt.font.UnicodeRange[] secondUnicodeRanges>;

        $i0 = lengthof $r2;

        if i4 < $i0 goto label2;

        return 0;
    }

    public float getAdjustValue()
    {
        float $f0;
        org.apache.batik.gvt.font.Kern r0;

        r0 := @this: org.apache.batik.gvt.font.Kern;

        $f0 = r0.<org.apache.batik.gvt.font.Kern: float kerningAdjust>;

        return $f0;
    }
}
