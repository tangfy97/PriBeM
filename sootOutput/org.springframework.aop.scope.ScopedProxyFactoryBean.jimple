public class org.springframework.aop.scope.ScopedProxyFactoryBean extends org.springframework.aop.framework.ProxyConfig implements org.springframework.beans.factory.FactoryBean, org.springframework.beans.factory.BeanFactoryAware
{
    private final org.springframework.aop.target.SimpleBeanTargetSource scopedTargetSource;
    private java.lang.String targetBeanName;
    private java.lang.Object proxy;

    public void <init>()
    {
        org.springframework.aop.target.SimpleBeanTargetSource $r1;
        org.springframework.aop.scope.ScopedProxyFactoryBean r0;

        r0 := @this: org.springframework.aop.scope.ScopedProxyFactoryBean;

        specialinvoke r0.<org.springframework.aop.framework.ProxyConfig: void <init>()>();

        $r1 = new org.springframework.aop.target.SimpleBeanTargetSource;

        specialinvoke $r1.<org.springframework.aop.target.SimpleBeanTargetSource: void <init>()>();

        r0.<org.springframework.aop.scope.ScopedProxyFactoryBean: org.springframework.aop.target.SimpleBeanTargetSource scopedTargetSource> = $r1;

        virtualinvoke r0.<org.springframework.aop.scope.ScopedProxyFactoryBean: void setProxyTargetClass(boolean)>(1);

        return;
    }

    public void setTargetBeanName(java.lang.String)
    {
        org.springframework.aop.target.SimpleBeanTargetSource $r2;
        java.lang.String r1;
        org.springframework.aop.scope.ScopedProxyFactoryBean r0;

        r0 := @this: org.springframework.aop.scope.ScopedProxyFactoryBean;

        r1 := @parameter0: java.lang.String;

        r0.<org.springframework.aop.scope.ScopedProxyFactoryBean: java.lang.String targetBeanName> = r1;

        $r2 = r0.<org.springframework.aop.scope.ScopedProxyFactoryBean: org.springframework.aop.target.SimpleBeanTargetSource scopedTargetSource>;

        virtualinvoke $r2.<org.springframework.aop.target.SimpleBeanTargetSource: void setTargetBeanName(java.lang.String)>(r1);

        return;
    }

    public void setBeanFactory(org.springframework.beans.factory.BeanFactory)
    {
        java.lang.IllegalStateException $r8, $r14;
        org.springframework.aop.support.DelegatingIntroductionInterceptor $r23;
        int $i0;
        java.lang.String $r6, $r10, $r13, $r17, $r22;
        boolean $z0, $z1, $z2, $z3;
        org.springframework.aop.scope.DefaultScopedObject $r20;
        org.springframework.aop.target.SimpleBeanTargetSource $r3, $r5, $r21;
        java.lang.Class[] $r19;
        org.springframework.beans.factory.BeanFactory r0;
        org.springframework.aop.scope.ScopedProxyFactoryBean r2;
        org.springframework.aop.framework.ProxyFactory $r4;
        java.lang.Class $r7;
        java.lang.StringBuilder $r9, $r11, $r12, $r15, $r16;
        java.lang.Object $r25;
        java.lang.ClassLoader $r18, $r24;
        org.springframework.beans.factory.config.ConfigurableBeanFactory r1;

        r2 := @this: org.springframework.aop.scope.ScopedProxyFactoryBean;

        r0 := @parameter0: org.springframework.beans.factory.BeanFactory;

        $z0 = r0 instanceof org.springframework.beans.factory.config.ConfigurableBeanFactory;

        if $z0 != 0 goto label1;

        $r14 = new java.lang.IllegalStateException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("Not running in a ConfigurableBeanFactory: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17);

        throw $r14;

     label1:
        r1 = (org.springframework.beans.factory.config.ConfigurableBeanFactory) r0;

        $r3 = r2.<org.springframework.aop.scope.ScopedProxyFactoryBean: org.springframework.aop.target.SimpleBeanTargetSource scopedTargetSource>;

        virtualinvoke $r3.<org.springframework.aop.target.SimpleBeanTargetSource: void setBeanFactory(org.springframework.beans.factory.BeanFactory)>(r0);

        $r4 = new org.springframework.aop.framework.ProxyFactory;

        specialinvoke $r4.<org.springframework.aop.framework.ProxyFactory: void <init>()>();

        virtualinvoke $r4.<org.springframework.aop.framework.ProxyFactory: void copyFrom(org.springframework.aop.framework.ProxyConfig)>(r2);

        $r5 = r2.<org.springframework.aop.scope.ScopedProxyFactoryBean: org.springframework.aop.target.SimpleBeanTargetSource scopedTargetSource>;

        virtualinvoke $r4.<org.springframework.aop.framework.ProxyFactory: void setTargetSource(org.springframework.aop.TargetSource)>($r5);

        $r6 = r2.<org.springframework.aop.scope.ScopedProxyFactoryBean: java.lang.String targetBeanName>;

        $r7 = interfaceinvoke r0.<org.springframework.beans.factory.BeanFactory: java.lang.Class getType(java.lang.String)>($r6);

        if $r7 != null goto label2;

        $r8 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot create scoped proxy for bean \'");

        $r10 = r2.<org.springframework.aop.scope.ScopedProxyFactoryBean: java.lang.String targetBeanName>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': Target type could not be determined at the time of proxy creation.");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label2:
        $z1 = virtualinvoke r2.<org.springframework.aop.scope.ScopedProxyFactoryBean: boolean isProxyTargetClass()>();

        if $z1 == 0 goto label3;

        $z2 = virtualinvoke $r7.<java.lang.Class: boolean isInterface()>();

        if $z2 != 0 goto label3;

        $i0 = virtualinvoke $r7.<java.lang.Class: int getModifiers()>();

        $z3 = staticinvoke <java.lang.reflect.Modifier: boolean isPrivate(int)>($i0);

        if $z3 == 0 goto label4;

     label3:
        $r18 = interfaceinvoke r1.<org.springframework.beans.factory.config.ConfigurableBeanFactory: java.lang.ClassLoader getBeanClassLoader()>();

        $r19 = staticinvoke <org.springframework.util.ClassUtils: java.lang.Class[] getAllInterfacesForClass(java.lang.Class,java.lang.ClassLoader)>($r7, $r18);

        virtualinvoke $r4.<org.springframework.aop.framework.ProxyFactory: void setInterfaces(java.lang.Class[])>($r19);

     label4:
        $r20 = new org.springframework.aop.scope.DefaultScopedObject;

        $r21 = r2.<org.springframework.aop.scope.ScopedProxyFactoryBean: org.springframework.aop.target.SimpleBeanTargetSource scopedTargetSource>;

        $r22 = virtualinvoke $r21.<org.springframework.aop.target.SimpleBeanTargetSource: java.lang.String getTargetBeanName()>();

        specialinvoke $r20.<org.springframework.aop.scope.DefaultScopedObject: void <init>(org.springframework.beans.factory.config.ConfigurableBeanFactory,java.lang.String)>(r1, $r22);

        $r23 = new org.springframework.aop.support.DelegatingIntroductionInterceptor;

        specialinvoke $r23.<org.springframework.aop.support.DelegatingIntroductionInterceptor: void <init>(java.lang.Object)>($r20);

        virtualinvoke $r4.<org.springframework.aop.framework.ProxyFactory: void addAdvice(org.aopalliance.aop.Advice)>($r23);

        virtualinvoke $r4.<org.springframework.aop.framework.ProxyFactory: void addInterface(java.lang.Class)>(class "Lorg/springframework/aop/framework/AopInfrastructureBean;");

        $r24 = interfaceinvoke r1.<org.springframework.beans.factory.config.ConfigurableBeanFactory: java.lang.ClassLoader getBeanClassLoader()>();

        $r25 = virtualinvoke $r4.<org.springframework.aop.framework.ProxyFactory: java.lang.Object getProxy(java.lang.ClassLoader)>($r24);

        r2.<org.springframework.aop.scope.ScopedProxyFactoryBean: java.lang.Object proxy> = $r25;

        return;
    }

    public java.lang.Object getObject()
    {
        org.springframework.aop.scope.ScopedProxyFactoryBean r0;
        org.springframework.beans.factory.FactoryBeanNotInitializedException $r3;
        java.lang.Object $r1, $r2;

        r0 := @this: org.springframework.aop.scope.ScopedProxyFactoryBean;

        $r1 = r0.<org.springframework.aop.scope.ScopedProxyFactoryBean: java.lang.Object proxy>;

        if $r1 != null goto label1;

        $r3 = new org.springframework.beans.factory.FactoryBeanNotInitializedException;

        specialinvoke $r3.<org.springframework.beans.factory.FactoryBeanNotInitializedException: void <init>()>();

        throw $r3;

     label1:
        $r2 = r0.<org.springframework.aop.scope.ScopedProxyFactoryBean: java.lang.Object proxy>;

        return $r2;
    }

    public java.lang.Class getObjectType()
    {
        org.springframework.aop.target.SimpleBeanTargetSource $r2, $r3;
        org.springframework.aop.scope.ScopedProxyFactoryBean r0;
        java.lang.Object $r1, $r5;
        java.lang.Class $r4, $r6;

        r0 := @this: org.springframework.aop.scope.ScopedProxyFactoryBean;

        $r1 = r0.<org.springframework.aop.scope.ScopedProxyFactoryBean: java.lang.Object proxy>;

        if $r1 == null goto label1;

        $r5 = r0.<org.springframework.aop.scope.ScopedProxyFactoryBean: java.lang.Object proxy>;

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        return $r6;

     label1:
        $r2 = r0.<org.springframework.aop.scope.ScopedProxyFactoryBean: org.springframework.aop.target.SimpleBeanTargetSource scopedTargetSource>;

        if $r2 == null goto label2;

        $r3 = r0.<org.springframework.aop.scope.ScopedProxyFactoryBean: org.springframework.aop.target.SimpleBeanTargetSource scopedTargetSource>;

        $r4 = virtualinvoke $r3.<org.springframework.aop.target.SimpleBeanTargetSource: java.lang.Class getTargetClass()>();

        return $r4;

     label2:
        return null;
    }

    public boolean isSingleton()
    {
        org.springframework.aop.scope.ScopedProxyFactoryBean r0;

        r0 := @this: org.springframework.aop.scope.ScopedProxyFactoryBean;

        return 1;
    }
}
