public class org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp extends java.lang.Object implements org.apache.commons.compress.archivers.zip.ZipExtraField, java.lang.Cloneable, java.io.Serializable
{
    private static final org.apache.commons.compress.archivers.zip.ZipShort HEADER_ID;
    private static final long serialVersionUID;
    public static final byte MODIFY_TIME_BIT;
    public static final byte ACCESS_TIME_BIT;
    public static final byte CREATE_TIME_BIT;
    private byte flags;
    private boolean bit0_modifyTimePresent;
    private boolean bit1_accessTimePresent;
    private boolean bit2_createTimePresent;
    private org.apache.commons.compress.archivers.zip.ZipLong modifyTime;
    private org.apache.commons.compress.archivers.zip.ZipLong accessTime;
    private org.apache.commons.compress.archivers.zip.ZipLong createTime;

    public void <init>()
    {
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.commons.compress.archivers.zip.ZipShort getHeaderId()
    {
        org.apache.commons.compress.archivers.zip.ZipShort $r0;
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r1;

        r1 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        $r0 = <org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipShort HEADER_ID>;

        return $r0;
    }

    public org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength()
    {
        org.apache.commons.compress.archivers.zip.ZipLong $r1, $r2;
        org.apache.commons.compress.archivers.zip.ZipShort $r3;
        byte $b0, $b2, $b4;
        int $i1, $i3, $i5;
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        $r3 = new org.apache.commons.compress.archivers.zip.ZipShort;

        $z0 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: boolean bit0_modifyTimePresent>;

        if $z0 == 0 goto label1;

        $b0 = 4;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        $i1 = 1 + $b0;

        $z1 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: boolean bit1_accessTimePresent>;

        if $z1 == 0 goto label3;

        $r2 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong accessTime>;

        if $r2 == null goto label3;

        $b2 = 4;

        goto label4;

     label3:
        $b2 = 0;

     label4:
        $i3 = $i1 + $b2;

        $z2 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: boolean bit2_createTimePresent>;

        if $z2 == 0 goto label5;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong createTime>;

        if $r1 == null goto label5;

        $b4 = 4;

        goto label6;

     label5:
        $b4 = 0;

     label6:
        $i5 = $i3 + $b4;

        specialinvoke $r3.<org.apache.commons.compress.archivers.zip.ZipShort: void <init>(int)>($i5);

        return $r3;
    }

    public org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength()
    {
        org.apache.commons.compress.archivers.zip.ZipShort $r0;
        byte $b1;
        int $i0;
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r1;
        boolean $z0;

        r1 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        $r0 = new org.apache.commons.compress.archivers.zip.ZipShort;

        $z0 = r1.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: boolean bit0_modifyTimePresent>;

        if $z0 == 0 goto label1;

        $b1 = 4;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        $i0 = 1 + $b1;

        specialinvoke $r0.<org.apache.commons.compress.archivers.zip.ZipShort: void <init>(int)>($i0);

        return $r0;
    }

    public byte[] getLocalFileDataData()
    {
        byte[] r2, $r5, $r8, $r10;
        byte $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, b11, b12;
        int $i0, i10;
        boolean $z0, $z1, $z2;
        org.apache.commons.compress.archivers.zip.ZipLong $r3, $r4, $r6, $r7, $r9;
        org.apache.commons.compress.archivers.zip.ZipShort $r1;
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        $r1 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength()>();

        $i0 = virtualinvoke $r1.<org.apache.commons.compress.archivers.zip.ZipShort: int getValue()>();

        r2 = newarray (byte)[$i0];

        i10 = 1;

        b12 = 1;

        b11 = 1;

        r2[0] = 0;

        $z0 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: boolean bit0_modifyTimePresent>;

        if $z0 == 0 goto label1;

        $b7 = r2[0];

        $b8 = $b7 | 1;

        $b9 = (byte) $b8;

        r2[0] = $b9;

        $r9 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong modifyTime>;

        $r10 = virtualinvoke $r9.<org.apache.commons.compress.archivers.zip.ZipLong: byte[] getBytes()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, r2, 1, 4);

        i10 = 5;

        b12 = 5;

        b11 = 5;

     label1:
        $z1 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: boolean bit1_accessTimePresent>;

        if $z1 == 0 goto label2;

        $r6 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong accessTime>;

        if $r6 == null goto label2;

        $b4 = r2[0];

        $b5 = $b4 | 2;

        $b6 = (byte) $b5;

        r2[0] = $b6;

        $r7 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong accessTime>;

        $r8 = virtualinvoke $r7.<org.apache.commons.compress.archivers.zip.ZipLong: byte[] getBytes()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, r2, b12, 4);

        i10 = b11 + 4;

     label2:
        $z2 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: boolean bit2_createTimePresent>;

        if $z2 == 0 goto label3;

        $r3 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong createTime>;

        if $r3 == null goto label3;

        $b1 = r2[0];

        $b2 = $b1 | 4;

        $b3 = (byte) $b2;

        r2[0] = $b3;

        $r4 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong createTime>;

        $r5 = virtualinvoke $r4.<org.apache.commons.compress.archivers.zip.ZipLong: byte[] getBytes()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r2, i10, 4);

     label3:
        return r2;
    }

    public byte[] getCentralDirectoryData()
    {
        byte[] r2, $r3;
        org.apache.commons.compress.archivers.zip.ZipShort $r1;
        int $i0, $i1;
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        $r1 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength()>();

        $i0 = virtualinvoke $r1.<org.apache.commons.compress.archivers.zip.ZipShort: int getValue()>();

        r2 = newarray (byte)[$i0];

        $r3 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: byte[] getLocalFileDataData()>();

        $i1 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r2, 0, $i1);

        return r2;
    }

    public void parseFromLocalFileData(byte[], int, int) throws java.util.zip.ZipException
    {
        byte[] r1;
        org.apache.commons.compress.archivers.zip.ZipLong $r2, $r3, $r4;
        byte $b2;
        int i0, i1, $i3, $i4, i5, i6;
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        r1 := @parameter0: byte[];

        i5 := @parameter1: int;

        i0 := @parameter2: int;

        specialinvoke r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: void reset()>();

        i1 = i5 + i0;

        i6 = i5 + 1;

        $b2 = r1[i5];

        virtualinvoke r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: void setFlags(byte)>($b2);

        $z0 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: boolean bit0_modifyTimePresent>;

        if $z0 == 0 goto label1;

        $r4 = new org.apache.commons.compress.archivers.zip.ZipLong;

        specialinvoke $r4.<org.apache.commons.compress.archivers.zip.ZipLong: void <init>(byte[],int)>(r1, i6);

        r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong modifyTime> = $r4;

        i6 = i6 + 4;

     label1:
        $z1 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: boolean bit1_accessTimePresent>;

        if $z1 == 0 goto label2;

        $i4 = i6 + 4;

        if $i4 > i1 goto label2;

        $r3 = new org.apache.commons.compress.archivers.zip.ZipLong;

        specialinvoke $r3.<org.apache.commons.compress.archivers.zip.ZipLong: void <init>(byte[],int)>(r1, i6);

        r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong accessTime> = $r3;

        i6 = i6 + 4;

     label2:
        $z2 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: boolean bit2_createTimePresent>;

        if $z2 == 0 goto label3;

        $i3 = i6 + 4;

        if $i3 > i1 goto label3;

        $r2 = new org.apache.commons.compress.archivers.zip.ZipLong;

        specialinvoke $r2.<org.apache.commons.compress.archivers.zip.ZipLong: void <init>(byte[],int)>(r1, i6);

        r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong createTime> = $r2;

     label3:
        return;
    }

    public void parseFromCentralDirectoryData(byte[], int, int) throws java.util.zip.ZipException
    {
        byte[] r1;
        int i0, i1;
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: void reset()>();

        virtualinvoke r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: void parseFromLocalFileData(byte[],int,int)>(r1, i0, i1);

        return;
    }

    private void reset()
    {
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        virtualinvoke r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: void setFlags(byte)>(0);

        r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong modifyTime> = null;

        r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong accessTime> = null;

        r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong createTime> = null;

        return;
    }

    public void setFlags(byte)
    {
        byte b0, $b1, $b2, $b3;
        int $i4, $i5;
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        b0 := @parameter0: byte;

        r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: byte flags> = b0;

        $b1 = b0 & 1;

        if $b1 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: boolean bit0_modifyTimePresent> = $z0;

        $b2 = b0 & 2;

        $i4 = (int) $b2;

        if $i4 != 2 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: boolean bit1_accessTimePresent> = $z1;

        $b3 = b0 & 4;

        $i5 = (int) $b3;

        if $i5 != 4 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: boolean bit2_createTimePresent> = $z2;

        return;
    }

    public byte getFlags()
    {
        byte $b0;
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        $b0 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: byte flags>;

        return $b0;
    }

    public boolean isBit0_modifyTimePresent()
    {
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r0;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        $z0 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: boolean bit0_modifyTimePresent>;

        return $z0;
    }

    public boolean isBit1_accessTimePresent()
    {
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r0;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        $z0 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: boolean bit1_accessTimePresent>;

        return $z0;
    }

    public boolean isBit2_createTimePresent()
    {
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r0;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        $z0 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: boolean bit2_createTimePresent>;

        return $z0;
    }

    public org.apache.commons.compress.archivers.zip.ZipLong getModifyTime()
    {
        org.apache.commons.compress.archivers.zip.ZipLong $r1;
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong modifyTime>;

        return $r1;
    }

    public org.apache.commons.compress.archivers.zip.ZipLong getAccessTime()
    {
        org.apache.commons.compress.archivers.zip.ZipLong $r1;
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong accessTime>;

        return $r1;
    }

    public org.apache.commons.compress.archivers.zip.ZipLong getCreateTime()
    {
        org.apache.commons.compress.archivers.zip.ZipLong $r1;
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong createTime>;

        return $r1;
    }

    public java.util.Date getModifyJavaTime()
    {
        java.util.Date $r3;
        org.apache.commons.compress.archivers.zip.ZipLong $r1, $r2;
        long $l0, $l1;
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong modifyTime>;

        if $r1 == null goto label1;

        $r3 = new java.util.Date;

        $r2 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong modifyTime>;

        $l0 = virtualinvoke $r2.<org.apache.commons.compress.archivers.zip.ZipLong: long getValue()>();

        $l1 = $l0 * 1000L;

        specialinvoke $r3.<java.util.Date: void <init>(long)>($l1);

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public java.util.Date getAccessJavaTime()
    {
        java.util.Date $r3;
        org.apache.commons.compress.archivers.zip.ZipLong $r1, $r2;
        long $l0, $l1;
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong accessTime>;

        if $r1 == null goto label1;

        $r3 = new java.util.Date;

        $r2 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong accessTime>;

        $l0 = virtualinvoke $r2.<org.apache.commons.compress.archivers.zip.ZipLong: long getValue()>();

        $l1 = $l0 * 1000L;

        specialinvoke $r3.<java.util.Date: void <init>(long)>($l1);

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public java.util.Date getCreateJavaTime()
    {
        java.util.Date $r3;
        org.apache.commons.compress.archivers.zip.ZipLong $r1, $r2;
        long $l0, $l1;
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong createTime>;

        if $r1 == null goto label1;

        $r3 = new java.util.Date;

        $r2 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong createTime>;

        $l0 = virtualinvoke $r2.<org.apache.commons.compress.archivers.zip.ZipLong: long getValue()>();

        $l1 = $l0 * 1000L;

        specialinvoke $r3.<java.util.Date: void <init>(long)>($l1);

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public void setModifyTime(org.apache.commons.compress.archivers.zip.ZipLong)
    {
        byte $b0, $b1, $b2, $b3;
        org.apache.commons.compress.archivers.zip.ZipLong r1;
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r0;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        r1 := @parameter0: org.apache.commons.compress.archivers.zip.ZipLong;

        if r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: boolean bit0_modifyTimePresent> = $z0;

        if r1 == null goto label3;

        $b2 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: byte flags>;

        $b3 = $b2 | 1;

        goto label4;

     label3:
        $b0 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: byte flags>;

        $b3 = $b0 & -2;

     label4:
        $b1 = (byte) $b3;

        r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: byte flags> = $b1;

        r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong modifyTime> = r1;

        return;
    }

    public void setAccessTime(org.apache.commons.compress.archivers.zip.ZipLong)
    {
        byte $b0, $b1, $b2, $b3;
        org.apache.commons.compress.archivers.zip.ZipLong r1;
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r0;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        r1 := @parameter0: org.apache.commons.compress.archivers.zip.ZipLong;

        if r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: boolean bit1_accessTimePresent> = $z0;

        if r1 == null goto label3;

        $b2 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: byte flags>;

        $b3 = $b2 | 2;

        goto label4;

     label3:
        $b0 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: byte flags>;

        $b3 = $b0 & -3;

     label4:
        $b1 = (byte) $b3;

        r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: byte flags> = $b1;

        r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong accessTime> = r1;

        return;
    }

    public void setCreateTime(org.apache.commons.compress.archivers.zip.ZipLong)
    {
        byte $b0, $b1, $b2, $b3;
        org.apache.commons.compress.archivers.zip.ZipLong r1;
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r0;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        r1 := @parameter0: org.apache.commons.compress.archivers.zip.ZipLong;

        if r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: boolean bit2_createTimePresent> = $z0;

        if r1 == null goto label3;

        $b2 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: byte flags>;

        $b3 = $b2 | 4;

        goto label4;

     label3:
        $b0 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: byte flags>;

        $b3 = $b0 & -5;

     label4:
        $b1 = (byte) $b3;

        r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: byte flags> = $b1;

        r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong createTime> = r1;

        return;
    }

    public void setModifyJavaTime(java.util.Date)
    {
        org.apache.commons.compress.archivers.zip.ZipLong $r2;
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r0;
        java.util.Date r1;

        r0 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        r1 := @parameter0: java.util.Date;

        $r2 = staticinvoke <org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong dateToZipLong(java.util.Date)>(r1);

        virtualinvoke r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: void setModifyTime(org.apache.commons.compress.archivers.zip.ZipLong)>($r2);

        return;
    }

    public void setAccessJavaTime(java.util.Date)
    {
        org.apache.commons.compress.archivers.zip.ZipLong $r2;
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r0;
        java.util.Date r1;

        r0 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        r1 := @parameter0: java.util.Date;

        $r2 = staticinvoke <org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong dateToZipLong(java.util.Date)>(r1);

        virtualinvoke r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: void setAccessTime(org.apache.commons.compress.archivers.zip.ZipLong)>($r2);

        return;
    }

    public void setCreateJavaTime(java.util.Date)
    {
        org.apache.commons.compress.archivers.zip.ZipLong $r2;
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r0;
        java.util.Date r1;

        r0 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        r1 := @parameter0: java.util.Date;

        $r2 = staticinvoke <org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong dateToZipLong(java.util.Date)>(r1);

        virtualinvoke r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: void setCreateTime(org.apache.commons.compress.archivers.zip.ZipLong)>($r2);

        return;
    }

    private static org.apache.commons.compress.archivers.zip.ZipLong dateToZipLong(java.util.Date)
    {
        java.util.Date r0;
        org.apache.commons.compress.archivers.zip.ZipLong $r9;
        long $l0, l1;
        java.lang.IllegalArgumentException $r8;
        byte $b2;
        int $i3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6;

        r0 := @parameter0: java.util.Date;

        if r0 != null goto label1;

        return null;

     label1:
        $l0 = virtualinvoke r0.<java.util.Date: long getTime()>();

        l1 = $l0 / 1000L;

        $b2 = l1 cmp 4294967296L;

        $i3 = (int) $b2;

        if $i3 < 0 goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot set an X5455 timestamp larger than 2^32: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r8;

     label2:
        $r9 = new org.apache.commons.compress.archivers.zip.ZipLong;

        specialinvoke $r9.<org.apache.commons.compress.archivers.zip.ZipLong: void <init>(long)>(l1);

        return $r9;
    }

    public java.lang.String toString()
    {
        java.util.Date $r5, $r9, $r13;
        byte $b0, $b1;
        int $i2, $i3;
        java.lang.String $r2, $r16;
        boolean $z0, $z1, $z2;
        org.apache.commons.compress.archivers.zip.ZipLong $r4, $r8, $r12;
        java.lang.StringBuilder $r3, $r6, $r7, $r10, $r11, $r14, $r15, $r17;
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r1;

        r1 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x5455 Zip Extra Field: Flags=");

        $b0 = r1.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: byte flags>;

        $i2 = (int) $b0;

        $b1 = staticinvoke <org.apache.commons.compress.archivers.zip.ZipUtil: byte unsignedIntToSignedByte(int)>($i2);

        $i3 = (int) $b1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toBinaryString(int)>($i3);

        $r3 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $z0 = r1.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: boolean bit0_modifyTimePresent>;

        if $z0 == 0 goto label1;

        $r12 = r1.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong modifyTime>;

        if $r12 == null goto label1;

        $r13 = virtualinvoke r1.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: java.util.Date getModifyJavaTime()>();

        $r14 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Modify:[");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

     label1:
        $z1 = r1.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: boolean bit1_accessTimePresent>;

        if $z1 == 0 goto label2;

        $r8 = r1.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong accessTime>;

        if $r8 == null goto label2;

        $r9 = virtualinvoke r1.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: java.util.Date getAccessJavaTime()>();

        $r10 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Access:[");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

     label2:
        $z2 = r1.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: boolean bit2_createTimePresent>;

        if $z2 == 0 goto label3;

        $r4 = r1.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong createTime>;

        if $r4 == null goto label3;

        $r5 = virtualinvoke r1.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: java.util.Date getCreateJavaTime()>();

        $r6 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Create:[");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

     label3:
        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        java.lang.Object $r1;
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        byte $b0, $b1, $b2, $b3;
        int $i4, $i5;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.commons.compress.archivers.zip.ZipLong $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        java.lang.Object r0;
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r1, r2;

        r2 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        if $z0 == 0 goto label6;

        r1 = (org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp) r0;

        $b0 = r2.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: byte flags>;

        $b3 = $b0 & 7;

        $b1 = r1.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: byte flags>;

        $b2 = $b1 & 7;

        $i4 = (int) $b3;

        $i5 = (int) $b2;

        if $i4 != $i5 goto label4;

        $r4 = r2.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong modifyTime>;

        $r3 = r1.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong modifyTime>;

        if $r4 == $r3 goto label1;

        $r15 = r2.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong modifyTime>;

        if $r15 == null goto label4;

        $r17 = r2.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong modifyTime>;

        $r16 = r1.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong modifyTime>;

        $z3 = virtualinvoke $r17.<org.apache.commons.compress.archivers.zip.ZipLong: boolean equals(java.lang.Object)>($r16);

        if $z3 == 0 goto label4;

     label1:
        $r6 = r2.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong accessTime>;

        $r5 = r1.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong accessTime>;

        if $r6 == $r5 goto label2;

        $r12 = r2.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong accessTime>;

        if $r12 == null goto label4;

        $r14 = r2.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong accessTime>;

        $r13 = r1.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong accessTime>;

        $z2 = virtualinvoke $r14.<org.apache.commons.compress.archivers.zip.ZipLong: boolean equals(java.lang.Object)>($r13);

        if $z2 == 0 goto label4;

     label2:
        $r8 = r2.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong createTime>;

        $r7 = r1.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong createTime>;

        if $r8 == $r7 goto label3;

        $r9 = r2.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong createTime>;

        if $r9 == null goto label4;

        $r11 = r2.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong createTime>;

        $r10 = r1.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong createTime>;

        $z1 = virtualinvoke $r11.<org.apache.commons.compress.archivers.zip.ZipLong: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label4;

     label3:
        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        return $z4;

     label6:
        return 0;
    }

    public int hashCode()
    {
        byte $b0, $b1;
        int $i2, $i3, $i4, $i5, $i6, i7, $i9, $i10;
        org.apache.commons.compress.archivers.zip.ZipLong $r1, $r2, $r3, $r4, $r5, $r6;
        org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;

        $b0 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: byte flags>;

        $b1 = $b0 & 7;

        $i9 = (int) -123;

        $i10 = (int) $b1;

        i7 = $i9 * $i10;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong modifyTime>;

        if $r1 == null goto label1;

        $r6 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong modifyTime>;

        $i6 = virtualinvoke $r6.<org.apache.commons.compress.archivers.zip.ZipLong: int hashCode()>();

        i7 = i7 ^ $i6;

     label1:
        $r2 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong accessTime>;

        if $r2 == null goto label2;

        $r5 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong accessTime>;

        $i4 = virtualinvoke $r5.<org.apache.commons.compress.archivers.zip.ZipLong: int hashCode()>();

        $i5 = staticinvoke <java.lang.Integer: int rotateLeft(int,int)>($i4, 11);

        i7 = i7 ^ $i5;

     label2:
        $r3 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong createTime>;

        if $r3 == null goto label3;

        $r4 = r0.<org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipLong createTime>;

        $i2 = virtualinvoke $r4.<org.apache.commons.compress.archivers.zip.ZipLong: int hashCode()>();

        $i3 = staticinvoke <java.lang.Integer: int rotateLeft(int,int)>($i2, 22);

        i7 = i7 ^ $i3;

     label3:
        return i7;
    }

    static void <clinit>()
    {
        org.apache.commons.compress.archivers.zip.ZipShort $r0;

        <org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: byte CREATE_TIME_BIT> = 4;

        <org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: byte ACCESS_TIME_BIT> = 2;

        <org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: byte MODIFY_TIME_BIT> = 1;

        <org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: long serialVersionUID> = 1L;

        $r0 = new org.apache.commons.compress.archivers.zip.ZipShort;

        specialinvoke $r0.<org.apache.commons.compress.archivers.zip.ZipShort: void <init>(int)>(21589);

        <org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp: org.apache.commons.compress.archivers.zip.ZipShort HEADER_ID> = $r0;

        return;
    }
}
