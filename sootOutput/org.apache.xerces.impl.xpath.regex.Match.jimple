public class org.apache.xerces.impl.xpath.regex.Match extends java.lang.Object implements java.lang.Cloneable
{
    int[] beginpos;
    int[] endpos;
    int nofgroups;
    java.text.CharacterIterator ciSource;
    java.lang.String strSource;
    char[] charSource;

    public void <init>()
    {
        org.apache.xerces.impl.xpath.regex.Match r0;

        r0 := @this: org.apache.xerces.impl.xpath.regex.Match;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xerces.impl.xpath.regex.Match: int[] beginpos> = null;

        r0.<org.apache.xerces.impl.xpath.regex.Match: int[] endpos> = null;

        r0.<org.apache.xerces.impl.xpath.regex.Match: int nofgroups> = 0;

        r0.<org.apache.xerces.impl.xpath.regex.Match: java.text.CharacterIterator ciSource> = null;

        r0.<org.apache.xerces.impl.xpath.regex.Match: java.lang.String strSource> = null;

        r0.<org.apache.xerces.impl.xpath.regex.Match: char[] charSource> = null;

        return;
    }

    public synchronized java.lang.Object clone()
    {
        java.text.CharacterIterator $r2, $r5;
        org.apache.xerces.impl.xpath.regex.Match $r0, r1;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r3, $r4;

        r1 := @this: org.apache.xerces.impl.xpath.regex.Match;

        $r0 = new org.apache.xerces.impl.xpath.regex.Match;

        specialinvoke $r0.<org.apache.xerces.impl.xpath.regex.Match: void <init>()>();

        $i0 = r1.<org.apache.xerces.impl.xpath.regex.Match: int nofgroups>;

        if $i0 <= 0 goto label5;

        $i1 = r1.<org.apache.xerces.impl.xpath.regex.Match: int nofgroups>;

        virtualinvoke $r0.<org.apache.xerces.impl.xpath.regex.Match: void setNumberOfGroups(int)>($i1);

        $r2 = r1.<org.apache.xerces.impl.xpath.regex.Match: java.text.CharacterIterator ciSource>;

        if $r2 == null goto label1;

        $r5 = r1.<org.apache.xerces.impl.xpath.regex.Match: java.text.CharacterIterator ciSource>;

        virtualinvoke $r0.<org.apache.xerces.impl.xpath.regex.Match: void setSource(java.text.CharacterIterator)>($r5);

     label1:
        $r3 = r1.<org.apache.xerces.impl.xpath.regex.Match: java.lang.String strSource>;

        if $r3 == null goto label2;

        $r4 = r1.<org.apache.xerces.impl.xpath.regex.Match: java.lang.String strSource>;

        virtualinvoke $r0.<org.apache.xerces.impl.xpath.regex.Match: void setSource(java.lang.String)>($r4);

     label2:
        i5 = 0;

        goto label4;

     label3:
        $i3 = virtualinvoke r1.<org.apache.xerces.impl.xpath.regex.Match: int getBeginning(int)>(i5);

        virtualinvoke $r0.<org.apache.xerces.impl.xpath.regex.Match: void setBeginning(int,int)>(i5, $i3);

        $i4 = virtualinvoke r1.<org.apache.xerces.impl.xpath.regex.Match: int getEnd(int)>(i5);

        virtualinvoke $r0.<org.apache.xerces.impl.xpath.regex.Match: void setEnd(int,int)>(i5, $i4);

        i5 = i5 + 1;

     label4:
        $i2 = r1.<org.apache.xerces.impl.xpath.regex.Match: int nofgroups>;

        if i5 < $i2 goto label3;

     label5:
        return $r0;
    }

    protected void setNumberOfGroups(int)
    {
        org.apache.xerces.impl.xpath.regex.Match r0;
        int[] $r1, $r2, $r3, $r4;
        int i0, i1, $i2, i3, $i5, $i7;

        r0 := @this: org.apache.xerces.impl.xpath.regex.Match;

        i1 := @parameter0: int;

        i0 = r0.<org.apache.xerces.impl.xpath.regex.Match: int nofgroups>;

        r0.<org.apache.xerces.impl.xpath.regex.Match: int nofgroups> = i1;

        if i0 <= 0 goto label1;

        if i0 < i1 goto label1;

        $i2 = i1 * 2;

        if $i2 >= i0 goto label2;

     label1:
        $r3 = newarray (int)[i1];

        r0.<org.apache.xerces.impl.xpath.regex.Match: int[] beginpos> = $r3;

        $r4 = newarray (int)[i1];

        r0.<org.apache.xerces.impl.xpath.regex.Match: int[] endpos> = $r4;

     label2:
        i3 = 0;

        goto label4;

     label3:
        $r1 = r0.<org.apache.xerces.impl.xpath.regex.Match: int[] beginpos>;

        $i5 = (int) -1;

        $r1[i3] = $i5;

        $r2 = r0.<org.apache.xerces.impl.xpath.regex.Match: int[] endpos>;

        $i7 = (int) -1;

        $r2[i3] = $i7;

        i3 = i3 + 1;

     label4:
        if i3 < i1 goto label3;

        return;
    }

    protected void setSource(java.text.CharacterIterator)
    {
        org.apache.xerces.impl.xpath.regex.Match r0;
        java.text.CharacterIterator r1;

        r0 := @this: org.apache.xerces.impl.xpath.regex.Match;

        r1 := @parameter0: java.text.CharacterIterator;

        r0.<org.apache.xerces.impl.xpath.regex.Match: java.text.CharacterIterator ciSource> = r1;

        r0.<org.apache.xerces.impl.xpath.regex.Match: java.lang.String strSource> = null;

        r0.<org.apache.xerces.impl.xpath.regex.Match: char[] charSource> = null;

        return;
    }

    protected void setSource(java.lang.String)
    {
        org.apache.xerces.impl.xpath.regex.Match r0;
        java.lang.String r1;

        r0 := @this: org.apache.xerces.impl.xpath.regex.Match;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xerces.impl.xpath.regex.Match: java.text.CharacterIterator ciSource> = null;

        r0.<org.apache.xerces.impl.xpath.regex.Match: java.lang.String strSource> = r1;

        r0.<org.apache.xerces.impl.xpath.regex.Match: char[] charSource> = null;

        return;
    }

    protected void setSource(char[])
    {
        char[] r1;
        org.apache.xerces.impl.xpath.regex.Match r0;

        r0 := @this: org.apache.xerces.impl.xpath.regex.Match;

        r1 := @parameter0: char[];

        r0.<org.apache.xerces.impl.xpath.regex.Match: java.text.CharacterIterator ciSource> = null;

        r0.<org.apache.xerces.impl.xpath.regex.Match: java.lang.String strSource> = null;

        r0.<org.apache.xerces.impl.xpath.regex.Match: char[] charSource> = r1;

        return;
    }

    protected void setBeginning(int, int)
    {
        int[] $r1;
        int i0, i1;
        org.apache.xerces.impl.xpath.regex.Match r0;

        r0 := @this: org.apache.xerces.impl.xpath.regex.Match;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.xerces.impl.xpath.regex.Match: int[] beginpos>;

        $r1[i0] = i1;

        return;
    }

    protected void setEnd(int, int)
    {
        int[] $r1;
        int i0, i1;
        org.apache.xerces.impl.xpath.regex.Match r0;

        r0 := @this: org.apache.xerces.impl.xpath.regex.Match;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.xerces.impl.xpath.regex.Match: int[] endpos>;

        $r1[i0] = i1;

        return;
    }

    public int getNumberOfGroups()
    {
        java.lang.IllegalStateException $r1;
        int $i0, $i1;
        org.apache.xerces.impl.xpath.regex.Match r0;

        r0 := @this: org.apache.xerces.impl.xpath.regex.Match;

        $i0 = r0.<org.apache.xerces.impl.xpath.regex.Match: int nofgroups>;

        if $i0 > 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("A result is not set.");

        throw $r1;

     label1:
        $i1 = r0.<org.apache.xerces.impl.xpath.regex.Match: int nofgroups>;

        return $i1;
    }

    public int getBeginning(int)
    {
        java.lang.IllegalStateException $r10;
        org.apache.xerces.impl.xpath.regex.Match r0;
        java.lang.IllegalArgumentException $r2;
        int[] $r1, $r9;
        java.lang.StringBuffer $r3, $r4, $r5, $r6, $r7;
        int i0, $i1, $i2, $i3;
        java.lang.String $r8;

        r0 := @this: org.apache.xerces.impl.xpath.regex.Match;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xerces.impl.xpath.regex.Match: int[] beginpos>;

        if $r1 != null goto label1;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("A result is not set.");

        throw $r10;

     label1:
        if i0 < 0 goto label2;

        $i2 = r0.<org.apache.xerces.impl.xpath.regex.Match: int nofgroups>;

        if $i2 > i0 goto label3;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The parameter must be less than ");

        $i1 = r0.<org.apache.xerces.impl.xpath.regex.Match: int nofgroups>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label3:
        $r9 = r0.<org.apache.xerces.impl.xpath.regex.Match: int[] beginpos>;

        $i3 = $r9[i0];

        return $i3;
    }

    public int getEnd(int)
    {
        java.lang.IllegalStateException $r10;
        org.apache.xerces.impl.xpath.regex.Match r0;
        java.lang.IllegalArgumentException $r2;
        int[] $r1, $r9;
        java.lang.StringBuffer $r3, $r4, $r5, $r6, $r7;
        int i0, $i1, $i2, $i3;
        java.lang.String $r8;

        r0 := @this: org.apache.xerces.impl.xpath.regex.Match;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xerces.impl.xpath.regex.Match: int[] endpos>;

        if $r1 != null goto label1;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("A result is not set.");

        throw $r10;

     label1:
        if i0 < 0 goto label2;

        $i2 = r0.<org.apache.xerces.impl.xpath.regex.Match: int nofgroups>;

        if $i2 > i0 goto label3;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The parameter must be less than ");

        $i1 = r0.<org.apache.xerces.impl.xpath.regex.Match: int nofgroups>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label3:
        $r9 = r0.<org.apache.xerces.impl.xpath.regex.Match: int[] endpos>;

        $i3 = $r9[i0];

        return $i3;
    }

    public java.lang.String getCapturedText(int)
    {
        java.lang.IllegalStateException $r17;
        org.apache.xerces.impl.xpath.regex.Match r0;
        int[] $r1, $r9, $r10;
        java.lang.StringBuffer $r3, $r4, $r5, $r6, $r7;
        int i0, $i1, $i2, i3, i4, $i5;
        java.lang.String $r8, $r12, $r13, $r15, r18;
        java.text.CharacterIterator $r11, $r16;
        java.lang.IllegalArgumentException $r2;
        char[] $r14;

        r0 := @this: org.apache.xerces.impl.xpath.regex.Match;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xerces.impl.xpath.regex.Match: int[] beginpos>;

        if $r1 != null goto label1;

        $r17 = new java.lang.IllegalStateException;

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>("match() has never been called.");

        throw $r17;

     label1:
        if i0 < 0 goto label2;

        $i2 = r0.<org.apache.xerces.impl.xpath.regex.Match: int nofgroups>;

        if $i2 > i0 goto label3;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The parameter must be less than ");

        $i1 = r0.<org.apache.xerces.impl.xpath.regex.Match: int nofgroups>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label3:
        $r9 = r0.<org.apache.xerces.impl.xpath.regex.Match: int[] beginpos>;

        i3 = $r9[i0];

        $r10 = r0.<org.apache.xerces.impl.xpath.regex.Match: int[] endpos>;

        i4 = $r10[i0];

        if i3 < 0 goto label4;

        if i4 >= 0 goto label5;

     label4:
        return null;

     label5:
        $r11 = r0.<org.apache.xerces.impl.xpath.regex.Match: java.text.CharacterIterator ciSource>;

        if $r11 == null goto label6;

        $r16 = r0.<org.apache.xerces.impl.xpath.regex.Match: java.text.CharacterIterator ciSource>;

        r18 = staticinvoke <org.apache.xerces.impl.xpath.regex.REUtil: java.lang.String substring(java.text.CharacterIterator,int,int)>($r16, i3, i4);

        goto label8;

     label6:
        $r12 = r0.<org.apache.xerces.impl.xpath.regex.Match: java.lang.String strSource>;

        if $r12 == null goto label7;

        $r15 = r0.<org.apache.xerces.impl.xpath.regex.Match: java.lang.String strSource>;

        r18 = virtualinvoke $r15.<java.lang.String: java.lang.String substring(int,int)>(i3, i4);

        goto label8;

     label7:
        $r13 = new java.lang.String;

        $r14 = r0.<org.apache.xerces.impl.xpath.regex.Match: char[] charSource>;

        $i5 = i4 - i3;

        specialinvoke $r13.<java.lang.String: void <init>(char[],int,int)>($r14, i3, $i5);

        r18 = $r13;

     label8:
        return r18;
    }
}
