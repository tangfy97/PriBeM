public class com.coremedia.iso.boxes.SubSampleInformationBox extends com.googlecode.mp4parser.AbstractFullBox
{
    public static final java.lang.String TYPE;
    private long entryCount;
    private java.util.List entries;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2;

    public void <init>()
    {
        com.coremedia.iso.boxes.SubSampleInformationBox r0;
        java.util.ArrayList $r1;

        r0 := @this: com.coremedia.iso.boxes.SubSampleInformationBox;

        specialinvoke r0.<com.googlecode.mp4parser.AbstractFullBox: void <init>(java.lang.String)>("subs");

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.coremedia.iso.boxes.SubSampleInformationBox: java.util.List entries> = $r1;

        return;
    }

    public java.util.List getEntries()
    {
        java.util.List $r4;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        com.coremedia.iso.boxes.SubSampleInformationBox r0;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.SubSampleInformationBox;

        $r1 = <com.coremedia.iso.boxes.SubSampleInformationBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $r4 = r0.<com.coremedia.iso.boxes.SubSampleInformationBox: java.util.List entries>;

        return $r4;
    }

    public void setEntries(java.util.List)
    {
        java.util.List r0;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        org.aspectj.lang.JoinPoint$StaticPart $r2;
        int $i0;
        com.coremedia.iso.boxes.SubSampleInformationBox r1;
        long $l1;
        org.aspectj.lang.JoinPoint $r3;

        r1 := @this: com.coremedia.iso.boxes.SubSampleInformationBox;

        r0 := @parameter0: java.util.List;

        $r2 = <com.coremedia.iso.boxes.SubSampleInformationBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1>;

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, r1, r1, r0);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        r1.<com.coremedia.iso.boxes.SubSampleInformationBox: java.util.List entries> = r0;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $l1 = (long) $i0;

        r1.<com.coremedia.iso.boxes.SubSampleInformationBox: long entryCount> = $l1;

        return;
    }

    protected long getContentSize()
    {
        com.coremedia.iso.boxes.SubSampleInformationBox r0;
        long $l0, $l1, l2, $l10, $l11;
        byte $b13;
        int $i3, $i4, $i5, $i6, $i7, $i8, $i9, i12;
        boolean $z0;
        java.util.Iterator $r2;
        java.util.List $r1;
        com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry r4;
        java.lang.Object $r3;

        r0 := @this: com.coremedia.iso.boxes.SubSampleInformationBox;

        $l0 = r0.<com.coremedia.iso.boxes.SubSampleInformationBox: long entryCount>;

        $l1 = 6L * $l0;

        l2 = 8L + $l1;

        i12 = 0;

        $r1 = r0.<com.coremedia.iso.boxes.SubSampleInformationBox: java.util.List entries>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        goto label4;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry) $r3;

        $i9 = i12;

        $i3 = virtualinvoke r4.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry: int getSubsampleCount()>();

        $i4 = virtualinvoke r0.<com.coremedia.iso.boxes.SubSampleInformationBox: int getVersion()>();

        if $i4 != 1 goto label2;

        $b13 = 4;

        goto label3;

     label2:
        $b13 = 2;

     label3:
        $i5 = $b13 + 1;

        $i6 = $i5 + 1;

        $i7 = $i6 + 4;

        $i8 = $i3 * $i7;

        i12 = $i9 + $i8;

     label4:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $l10 = (long) i12;

        $l11 = l2 + $l10;

        return $l11;
    }

    public void _parseDetails(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.SubSampleInformationBox r0;
        long $l0, $l1, $l2, $l4, $l10, $l13;
        java.nio.ByteBuffer r1;
        byte $b3;
        int $i5, $i6, $i7, $i8, $i9, i11, i12, $i14;
        java.util.List $r4;
        com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry $r5;
        com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry $r6;

        r0 := @this: com.coremedia.iso.boxes.SubSampleInformationBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.SubSampleInformationBox: long parseVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $l0 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.SubSampleInformationBox: long entryCount> = $l0;

        i11 = 0;

        goto label6;

     label1:
        $r5 = new com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry;

        specialinvoke $r5.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry: void <init>()>();

        $l4 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        virtualinvoke $r5.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry: void setSampleDelta(long)>($l4);

        $i5 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt16(java.nio.ByteBuffer)>(r1);

        i12 = 0;

        goto label5;

     label2:
        $r6 = new com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry;

        specialinvoke $r6.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry: void <init>()>();

        $i6 = virtualinvoke r0.<com.coremedia.iso.boxes.SubSampleInformationBox: int getVersion()>();

        if $i6 != 1 goto label3;

        $l13 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        goto label4;

     label3:
        $i7 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt16(java.nio.ByteBuffer)>(r1);

        $l13 = (long) $i7;

     label4:
        virtualinvoke $r6.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry: void setSubsampleSize(long)>($l13);

        $i8 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt8(java.nio.ByteBuffer)>(r1);

        virtualinvoke $r6.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry: void setSubsamplePriority(int)>($i8);

        $i9 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt8(java.nio.ByteBuffer)>(r1);

        virtualinvoke $r6.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry: void setDiscardable(int)>($i9);

        $l10 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        virtualinvoke $r6.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry: void setReserved(long)>($l10);

        virtualinvoke $r5.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry: void addSubsampleEntry(com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry)>($r6);

        i12 = i12 + 1;

     label5:
        if i12 < $i5 goto label2;

        $r4 = r0.<com.coremedia.iso.boxes.SubSampleInformationBox: java.util.List entries>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        i11 = i11 + 1;

     label6:
        $l2 = (long) i11;

        $l1 = r0.<com.coremedia.iso.boxes.SubSampleInformationBox: long entryCount>;

        $b3 = $l2 cmp $l1;

        $i14 = (int) $b3;

        if $i14 < 0 goto label1;

        return;
    }

    protected void getContent(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.SubSampleInformationBox r0;
        long $l1, $l2, $l5, $l9, $l10;
        java.nio.ByteBuffer r1;
        int $i0, $i3, $i4, $i6, $i7, $i8;
        boolean $z0, $z1;
        java.util.Iterator $r4, $r8;
        java.util.List $r2, $r3, $r7;
        com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry r6;
        com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry r10;
        java.lang.Object $r5, $r9;

        r0 := @this: com.coremedia.iso.boxes.SubSampleInformationBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.SubSampleInformationBox: void writeVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $r2 = r0.<com.coremedia.iso.boxes.SubSampleInformationBox: java.util.List entries>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $l1 = (long) $i0;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l1);

        $r3 = r0.<com.coremedia.iso.boxes.SubSampleInformationBox: java.util.List entries>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        goto label6;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry) $r5;

        $l2 = virtualinvoke r6.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry: long getSampleDelta()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l2);

        $i3 = virtualinvoke r6.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry: int getSubsampleCount()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16(java.nio.ByteBuffer,int)>(r1, $i3);

        $r7 = virtualinvoke r6.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry: java.util.List getSubsampleEntries()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

        goto label5;

     label2:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry) $r9;

        $i4 = virtualinvoke r0.<com.coremedia.iso.boxes.SubSampleInformationBox: int getVersion()>();

        if $i4 != 1 goto label3;

        $l10 = virtualinvoke r10.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry: long getSubsampleSize()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l10);

        goto label4;

     label3:
        $l5 = virtualinvoke r10.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry: long getSubsampleSize()>();

        $i6 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l5);

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt16(java.nio.ByteBuffer,int)>(r1, $i6);

     label4:
        $i7 = virtualinvoke r10.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry: int getSubsamplePriority()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt8(java.nio.ByteBuffer,int)>(r1, $i7);

        $i8 = virtualinvoke r10.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry: int getDiscardable()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt8(java.nio.ByteBuffer,int)>(r1, $i8);

        $l9 = virtualinvoke r10.<com.coremedia.iso.boxes.SubSampleInformationBox$SampleEntry$SubsampleEntry: long getReserved()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l9);

     label5:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label2;

     label6:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return;
    }

    public java.lang.String toString()
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        com.coremedia.iso.boxes.SubSampleInformationBox r0;
        long $l0;
        java.util.List $r7;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r9;
        java.lang.String $r10;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.SubSampleInformationBox;

        $r1 = <com.coremedia.iso.boxes.SubSampleInformationBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("SubSampleInformationBox{entryCount=");

        $l0 = r0.<com.coremedia.iso.boxes.SubSampleInformationBox: long entryCount>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", entries=");

        $r7 = r0.<com.coremedia.iso.boxes.SubSampleInformationBox: java.util.List entries>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    static void <clinit>()
    {
        <com.coremedia.iso.boxes.SubSampleInformationBox: java.lang.String TYPE> = "subs";

        staticinvoke <com.coremedia.iso.boxes.SubSampleInformationBox: void ajc$preClinit()>();

        return;
    }

    private static void ajc$preClinit()
    {
        org.aspectj.runtime.reflect.Factory $r0;
        org.aspectj.lang.JoinPoint$StaticPart $r2, $r4, $r6;
        org.aspectj.lang.reflect.MethodSignature $r1, $r3, $r5;

        $r0 = new org.aspectj.runtime.reflect.Factory;

        specialinvoke $r0.<org.aspectj.runtime.reflect.Factory: void <init>(java.lang.String,java.lang.Class)>("SubSampleInformationBox.java", class "Lcom/coremedia/iso/boxes/SubSampleInformationBox;");

        $r1 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getEntries", "com.coremedia.iso.boxes.SubSampleInformationBox", "", "", "", "java.util.List");

        $r2 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r1, 51);

        <com.coremedia.iso.boxes.SubSampleInformationBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0> = $r2;

        $r3 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setEntries", "com.coremedia.iso.boxes.SubSampleInformationBox", "java.util.List", "entries", "", "void");

        $r4 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r3, 55);

        <com.coremedia.iso.boxes.SubSampleInformationBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1> = $r4;

        $r5 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "toString", "com.coremedia.iso.boxes.SubSampleInformationBox", "", "", "", "java.lang.String");

        $r6 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r5, 115);

        <com.coremedia.iso.boxes.SubSampleInformationBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2> = $r6;

        return;
    }
}
