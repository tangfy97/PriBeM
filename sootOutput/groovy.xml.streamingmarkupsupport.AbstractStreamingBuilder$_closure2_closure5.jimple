class groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5 extends groovy.lang.Closure implements org.codehaus.groovy.runtime.GeneratedClosure
{
    private groovy.lang.Reference pendingNamespaces;
    private groovy.lang.Reference namespaceSpecificTags;
    private groovy.lang.Reference namespaces;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder;

    public void <init>(java.lang.Object, java.lang.Object, groovy.lang.Reference, groovy.lang.Reference, groovy.lang.Reference)
    {
        groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5 r2;
        groovy.lang.Reference r5, $r6, r7, $r8, r9, $r10;
        java.lang.Class $r0, $r1, $r11, $r12;
        java.lang.Object r3, r4;

        r2 := @this: groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        r5 := @parameter2: groovy.lang.Reference;

        r7 := @parameter3: groovy.lang.Reference;

        r9 := @parameter4: groovy.lang.Reference;

        $r0 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r11 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$(java.lang.String)>("groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$0> = $r11;

        goto label2;

     label1:
        $r11 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r12 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$lang$MetaClass> = $r12;

        goto label4;

     label3:
        $r12 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        specialinvoke r2.<groovy.lang.Closure: void <init>(java.lang.Object,java.lang.Object)>(r3, r4);

        $r6 = (groovy.lang.Reference) r5;

        r2.<groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: groovy.lang.Reference pendingNamespaces> = $r6;

        $r8 = (groovy.lang.Reference) r7;

        r2.<groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: groovy.lang.Reference namespaceSpecificTags> = $r8;

        $r10 = (groovy.lang.Reference) r9;

        r2.<groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: groovy.lang.Reference namespaces> = $r10;

        return;
    }

    public java.lang.Object doCall(java.lang.Object, java.lang.Object)
    {
        java.lang.Integer $r49, $r55;
        java.util.Map $r58;
        java.lang.Object[] $r15, $r22, $r28, $r36, $r45, $r48, $r54, $r57, $r63;
        groovy.lang.Reference $r1, $r3, $r13, $r20, $r26, $r34, $r61;
        groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5 r12;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r59;
        java.lang.Object r0, r2, $r7, $r9, $r10, $r14, $r16, $r17, $r18, $r21, $r23, $r24, $r27, $r29, $r33, $r35, $r37, $r50, $r56, $r60, $r62, $r64;
        java.lang.Class $r4, r5, $r6, $r8, $r11, $r19, $r25, $r30, $r31, $r32, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r46, $r47, $r51, $r52, $r53;

        r12 := @this: groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r1 = new groovy.lang.Reference;

        specialinvoke $r1.<groovy.lang.Reference: void <init>(java.lang.Object)>(r0);

        $r3 = new groovy.lang.Reference;

        specialinvoke $r3.<groovy.lang.Reference: void <init>(java.lang.Object)>(r2);

        $r4 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$0>;

        if $r4 != null goto label01;

        $r38 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$(java.lang.String)>("groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$0> = $r38;

        goto label02;

     label01:
        $r38 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$0>;

     label02:
        r5 = $r38;

        $r6 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$lang$MetaClass>;

        if $r6 != null goto label03;

        $r39 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$lang$MetaClass> = $r39;

        goto label04;

     label03:
        $r39 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r7 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r7, "");

        if $z0 == 0 goto label05;

        virtualinvoke $r1.<groovy.lang.Reference: void set(java.lang.Object)>(":");

        goto label05;

     label05:
        $r8 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder>;

        if $r8 != null goto label06;

        $r40 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$(java.lang.String)>("groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder> = $r40;

        goto label07;

     label06:
        $r40 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder>;

     label07:
        $r9 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>($r40, $r9, "toString");

        virtualinvoke $r3.<groovy.lang.Reference: void set(java.lang.Object)>($r10);

        $r11 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder>;

        if $r11 != null goto label08;

        $r41 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$(java.lang.String)>("groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder> = $r41;

        goto label09;

     label08:
        $r41 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder>;

     label09:
        $r13 = r12.<groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: groovy.lang.Reference namespaces>;

        $r14 = virtualinvoke $r13.<groovy.lang.Reference: java.lang.Object get()>();

        $r15 = newarray (java.lang.Object)[1];

        $r16 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r15[0] = $r16;

        $r17 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r41, $r14, "getAt", $r15);

        $r18 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $z1 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>($r17, $r18);

        if $z1 == 0 goto label10;

        $r33 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r34 = r12.<groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: groovy.lang.Reference pendingNamespaces>;

        $r35 = virtualinvoke $r34.<groovy.lang.Reference: java.lang.Object get()>();

        $r36 = newarray (java.lang.Object)[2];

        $r37 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r36[0] = $r37;

        $r36[1] = $r33;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r5, $r35, "putAt", $r36);

        goto label10;

     label10:
        $r19 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder>;

        if $r19 != null goto label11;

        $r42 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$(java.lang.String)>("groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder> = $r42;

        goto label12;

     label11:
        $r42 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder>;

     label12:
        $r20 = r12.<groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: groovy.lang.Reference namespaceSpecificTags>;

        $r21 = virtualinvoke $r20.<groovy.lang.Reference: java.lang.Object get()>();

        $r22 = newarray (java.lang.Object)[1];

        $r23 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r22[0] = $r23;

        $r24 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r42, $r21, "containsKey", $r22);

        $z2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r24);

        if $z2 != 0 goto label13;

        $z3 = 1;

        goto label14;

     label13:
        $z3 = 0;

     label14:
        if $z3 == 0 goto label23;

        $r25 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder>;

        if $r25 != null goto label15;

        $r43 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$(java.lang.String)>("groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder> = $r43;

        goto label16;

     label15:
        $r43 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder>;

     label16:
        $r26 = r12.<groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: groovy.lang.Reference namespaceSpecificTags>;

        $r27 = virtualinvoke $r26.<groovy.lang.Reference: java.lang.Object get()>();

        $r28 = newarray (java.lang.Object)[1];

        $r28[0] = ":";

        $r29 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r43, $r27, "getAt", $r28);

        $r30 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder>;

        if $r30 != null goto label17;

        $r32 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$(java.lang.String)>("groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder");

        $r44 = $r32;

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder> = $r32;

        goto label18;

     label17:
        $r44 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder>;

     label18:
        $r45 = newarray (java.lang.Object)[3];

        $r31 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder>;

        if $r31 != null goto label19;

        $r46 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$(java.lang.String)>("groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder");

        $r47 = $r46;

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder> = $r46;

        goto label20;

     label19:
        $r47 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder>;

     label20:
        $r48 = newarray (java.lang.Object)[1];

        $r49 = new java.lang.Integer;

        specialinvoke $r49.<java.lang.Integer: void <init>(int)>(0);

        $r48[0] = $r49;

        $r50 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r47, $r29, "getAt", $r48);

        $r45[0] = $r50;

        $r51 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder>;

        if $r51 != null goto label21;

        $r52 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$(java.lang.String)>("groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder");

        $r53 = $r52;

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder> = $r52;

        goto label22;

     label21:
        $r53 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$xml$streamingmarkupsupport$AbstractStreamingBuilder>;

     label22:
        $r54 = newarray (java.lang.Object)[1];

        $r55 = new java.lang.Integer;

        specialinvoke $r55.<java.lang.Integer: void <init>(int)>(1);

        $r54[0] = $r55;

        $r56 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r53, $r29, "getAt", $r54);

        $r45[1] = $r56;

        $r57 = newarray (java.lang.Object)[0];

        $r58 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.Map createMap(java.lang.Object[])>($r57);

        $r45[2] = $r58;

        $r59 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.List createList(java.lang.Object[])>($r45);

        $r60 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>($r44, $r59, "toArray");

        $r61 = r12.<groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: groovy.lang.Reference namespaceSpecificTags>;

        $r62 = virtualinvoke $r61.<groovy.lang.Reference: java.lang.Object get()>();

        $r63 = newarray (java.lang.Object)[2];

        $r64 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r63[0] = $r64;

        $r63[1] = $r60;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r5, $r62, "putAt", $r63);

        goto label23;

     label23:
        return null;
    }

    public java.lang.Object call(java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r8;
        groovy.lang.Reference $r1, $r3;
        groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5 r7;
        java.lang.Object r0, r2, $r9, $r10, $r11;
        java.lang.Class $r4, r5, $r6, $r12, $r13;

        r7 := @this: groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r1 = new groovy.lang.Reference;

        specialinvoke $r1.<groovy.lang.Reference: void <init>(java.lang.Object)>(r0);

        $r3 = new groovy.lang.Reference;

        specialinvoke $r3.<groovy.lang.Reference: void <init>(java.lang.Object)>(r2);

        $r4 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$0>;

        if $r4 != null goto label1;

        $r12 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$(java.lang.String)>("groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$0> = $r12;

        goto label2;

     label1:
        $r12 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$0>;

     label2:
        r5 = $r12;

        $r6 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$lang$MetaClass>;

        if $r6 != null goto label3;

        $r13 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$lang$MetaClass> = $r13;

        goto label4;

     label3:
        $r13 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r8 = newarray (java.lang.Object)[2];

        $r9 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r8[0] = $r9;

        $r10 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        $r8[1] = $r10;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r5, r7, "doCall", $r8);

        return $r11;
    }

    public java.lang.Object getPendingNamespaces()
    {
        groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5 r2;
        groovy.lang.Reference $r3;
        java.lang.Class $r0, $r1, $r5, $r6;
        java.lang.Object $r4;

        r2 := @this: groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5;

        $r0 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r5 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$(java.lang.String)>("groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$0> = $r5;

        goto label2;

     label1:
        $r5 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r6 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$lang$MetaClass> = $r6;

        goto label4;

     label3:
        $r6 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = r2.<groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: groovy.lang.Reference pendingNamespaces>;

        $r4 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        return $r4;
    }

    public java.lang.Object getNamespaceSpecificTags()
    {
        groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5 r2;
        groovy.lang.Reference $r3;
        java.lang.Class $r0, $r1, $r5, $r6;
        java.lang.Object $r4;

        r2 := @this: groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5;

        $r0 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r5 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$(java.lang.String)>("groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$0> = $r5;

        goto label2;

     label1:
        $r5 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r6 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$lang$MetaClass> = $r6;

        goto label4;

     label3:
        $r6 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = r2.<groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: groovy.lang.Reference namespaceSpecificTags>;

        $r4 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        return $r4;
    }

    public java.lang.Object getNamespaces()
    {
        groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5 r2;
        groovy.lang.Reference $r3;
        java.lang.Class $r0, $r1, $r5, $r6;
        java.lang.Object $r4;

        r2 := @this: groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5;

        $r0 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r5 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$(java.lang.String)>("groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$0> = $r5;

        goto label2;

     label1:
        $r5 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r6 = staticinvoke <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$lang$MetaClass> = $r6;

        goto label4;

     label3:
        $r6 = <groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = r2.<groovy.xml.streamingmarkupsupport.AbstractStreamingBuilder$_closure2_closure5: groovy.lang.Reference namespaces>;

        $r4 = virtualinvoke $r3.<groovy.lang.Reference: java.lang.Object get()>();

        return $r4;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
