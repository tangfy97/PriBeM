public class org.codehaus.groovy.tools.LoaderConfiguration extends java.lang.Object
{
    private static final java.lang.String MAIN_PREFIX;
    private static final java.lang.String LOAD_PREFIX;
    private java.util.List classPath;
    private java.lang.String main;
    private boolean requireMain;
    private static final char WILDCARD;
    private static final java.lang.String ALL_WILDCARD;
    private static final java.lang.String MATCH_FILE_NAME;
    private static final java.lang.String MATCH_ALL;

    public void <init>()
    {
        org.codehaus.groovy.tools.LoaderConfiguration r0;
        java.util.ArrayList $r1;

        r0 := @this: org.codehaus.groovy.tools.LoaderConfiguration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.codehaus.groovy.tools.LoaderConfiguration: java.util.List classPath> = $r1;

        r0.<org.codehaus.groovy.tools.LoaderConfiguration: boolean requireMain> = 1;

        return;
    }

    public void configure(java.io.InputStream) throws java.io.IOException
    {
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuffer $r5, $r6, $r7, $r8, $r9, $r17, $r18, $r19, $r20, $r21;
        int $i0, $i1, $i2, i3;
        java.lang.String $r3, $r10, $r12, $r13, $r14, $r15, $r22, $r23, $r24, $r25, $r26, $r27, $r29;
        java.io.IOException $r4, $r16, $r28;
        java.io.InputStreamReader $r1;
        org.codehaus.groovy.tools.LoaderConfiguration r11;
        java.io.BufferedReader $r0;
        java.io.InputStream r2;

        r11 := @this: org.codehaus.groovy.tools.LoaderConfiguration;

        r2 := @parameter0: java.io.InputStream;

        $r0 = new java.io.BufferedReader;

        $r1 = new java.io.InputStreamReader;

        specialinvoke $r1.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r2);

        specialinvoke $r0.<java.io.BufferedReader: void <init>(java.io.Reader)>($r1);

        i3 = 0;

     label1:
        $r29 = virtualinvoke $r0.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r29 != null goto label2;

        goto label8;

     label2:
        $r3 = virtualinvoke $r29.<java.lang.String: java.lang.String trim()>();

        i3 = i3 + 1;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

        goto label1;

     label3:
        $z1 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("load");

        if $z1 == 0 goto label4;

        $r23 = "load";

        $i2 = virtualinvoke $r23.<java.lang.String: int length()>();

        $r24 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i2);

        $r25 = virtualinvoke $r24.<java.lang.String: java.lang.String trim()>();

        $r26 = specialinvoke r11.<org.codehaus.groovy.tools.LoaderConfiguration: java.lang.String assignProperties(java.lang.String)>($r25);

        specialinvoke r11.<org.codehaus.groovy.tools.LoaderConfiguration: void loadFilteredPath(java.lang.String)>($r26);

        goto label7;

     label4:
        $z2 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("main is");

        if $z2 == 0 goto label6;

        $r12 = r11.<org.codehaus.groovy.tools.LoaderConfiguration: java.lang.String main>;

        if $r12 == null goto label5;

        $r16 = new java.io.IOException;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("duplicate definition of main in line ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" : ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r16.<java.io.IOException: void <init>(java.lang.String)>($r22);

        throw $r16;

     label5:
        $r13 = "main is";

        $i1 = virtualinvoke $r13.<java.lang.String: int length()>();

        $r14 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i1);

        $r15 = virtualinvoke $r14.<java.lang.String: java.lang.String trim()>();

        r11.<org.codehaus.groovy.tools.LoaderConfiguration: java.lang.String main> = $r15;

        goto label7;

     label6:
        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("unexpected line in ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" : ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r4;

     label7:
        goto label1;

     label8:
        $z3 = r11.<org.codehaus.groovy.tools.LoaderConfiguration: boolean requireMain>;

        if $z3 == 0 goto label9;

        $r27 = r11.<org.codehaus.groovy.tools.LoaderConfiguration: java.lang.String main>;

        if $r27 != null goto label9;

        $r28 = new java.io.IOException;

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>("missing main class definition in config file");

        throw $r28;

     label9:
        return;
    }

    private java.lang.String assignProperties(java.lang.String)
    {
        boolean $z0;
        java.lang.StringBuffer $r2, $r4, $r6, $r8, $r10, $r12, $r19, $r20, $r23, $r24, $r25, $r26, $r27, $r30, $r31, $r33, $r34, $r35;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i9, $i11, $i13, $i15, $i17, $i19;
        java.lang.String r0, $r3, $r7, $r11, $r13, $r14, $r15, $r17, $r28, r29;
        java.lang.IllegalArgumentException $r32;
        org.codehaus.groovy.tools.LoaderConfiguration r16;

        r16 := @this: org.codehaus.groovy.tools.LoaderConfiguration;

        r0 := @parameter0: java.lang.String;

        i6 = 0;

        i7 = 0;

        r29 = "";

     label01:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i6 >= $i0 goto label11;

        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("${", i6);

        $i3 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("!{", i6);

        $i9 = (int) -1;

        if $i2 != $i9 goto label02;

        i6 = $i3;

        goto label04;

     label02:
        $i11 = (int) -1;

        if $i3 != $i11 goto label03;

        i6 = $i2;

        goto label04;

     label03:
        i6 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3);

     label04:
        if i6 != $i3 goto label05;

        $z0 = 1;

        goto label06;

     label05:
        $z0 = 0;

     label06:
        $i13 = (int) -1;

        if i6 != $i13 goto label07;

        goto label11;

     label07:
        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r29);

        $r11 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i7, i6);

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        r29 = $r13;

        $i4 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("}", i6);

        i7 = $i4;

        $i15 = (int) -1;

        if $i4 != $i15 goto label08;

        goto label11;

     label08:
        $i5 = i6 + 2;

        $r14 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i5, $i4);

        $r15 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>($r14);

        if $r15 != null goto label10;

        if $z0 == 0 goto label09;

        $r32 = new java.lang.IllegalArgumentException;

        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        $r23 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Variable ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" in groovy-starter.conf references a non-existent System property! Try passing the property to the VM using -D");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=myValue in JAVA_OPTS");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r28);

        throw $r32;

     label09:
        return null;

     label10:
        $r17 = specialinvoke r16.<org.codehaus.groovy.tools.LoaderConfiguration: java.lang.String getSlashyPath(java.lang.String)>($r15);

        $r33 = new java.lang.StringBuffer;

        specialinvoke $r33.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        r29 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        i7 = $i4 + 1;

        i6 = i7;

        goto label01;

     label11:
        $i17 = (int) -1;

        if i6 == $i17 goto label12;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i6 < $i1 goto label13;

     label12:
        $r34 = new java.lang.StringBuffer;

        specialinvoke $r34.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r29);

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i7);

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        r29 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label14;

     label13:
        $i19 = (int) -1;

        if i7 != $i19 goto label14;

        $r35 = new java.lang.StringBuffer;

        specialinvoke $r35.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r29);

        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i6);

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        r29 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

     label14:
        return r29;
    }

    private void loadFilteredPath(java.lang.String)
    {
        int $i0, $i1, $i2, $i3, $i4, i5, $i7, $i9;
        java.lang.String $r1, $r2, $r4, $r5, $r6, r10;
        boolean z0, $z1;
        java.io.File $r11, $r12;
        org.codehaus.groovy.tools.LoaderConfiguration r0;
        java.util.regex.Pattern $r7;
        java.io.File[] $r8;

        r0 := @this: org.codehaus.groovy.tools.LoaderConfiguration;

        r10 := @parameter0: java.lang.String;

        if r10 != null goto label1;

        return;

     label1:
        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.LoaderConfiguration: java.lang.String getSlashyPath(java.lang.String)>(r10);

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(42);

        i5 = $i0;

        $i7 = (int) -1;

        if $i0 != $i7 goto label2;

        $r11 = new java.io.File;

        specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>($r1);

        virtualinvoke r0.<org.codehaus.groovy.tools.LoaderConfiguration: void addFile(java.io.File)>($r11);

        return;

     label2:
        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("**");

        $i9 = (int) -1;

        if $i1 == $i9 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        z0 = $z1;

        $i2 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>(47);

        if $i2 >= $i0 goto label5;

        $i4 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>(47);

        i5 = $i4 + 1;

     label5:
        $i3 = i5 - 1;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        $r12 = new java.io.File;

        specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>($r2);

        $r4 = staticinvoke <groovy.text.RegexUtils: java.lang.String quote(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\*\\*", "\\\\E.+?\\\\Q");

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\*", "\\\\E[^/]+?\\\\Q");

        $r7 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r6);

        $r8 = virtualinvoke $r12.<java.io.File: java.io.File[] listFiles()>();

        if $r8 == null goto label6;

        specialinvoke r0.<org.codehaus.groovy.tools.LoaderConfiguration: void findMatchingFiles(java.io.File[],java.util.regex.Pattern,boolean)>($r8, $r7, z0);

     label6:
        return;
    }

    private void findMatchingFiles(java.io.File[], java.util.regex.Pattern, boolean)
    {
        java.io.File r1;
        java.util.regex.Matcher $r6;
        org.codehaus.groovy.tools.LoaderConfiguration r2;
        int $i0, i1;
        java.lang.String $r3, $r4;
        java.util.regex.Pattern r5;
        java.io.File[] r0, $r7;
        boolean $z0, z1, $z2, $z3;

        r2 := @this: org.codehaus.groovy.tools.LoaderConfiguration;

        r0 := @parameter0: java.io.File[];

        r5 := @parameter1: java.util.regex.Pattern;

        z1 := @parameter2: boolean;

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label4;

        r1 = r0[i1];

        $r3 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $r4 = specialinvoke r2.<org.codehaus.groovy.tools.LoaderConfiguration: java.lang.String getSlashyPath(java.lang.String)>($r3);

        $r6 = virtualinvoke r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r4);

        $z0 = virtualinvoke $r6.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label2;

        $z2 = virtualinvoke r1.<java.io.File: boolean isFile()>();

        if $z2 == 0 goto label2;

        virtualinvoke r2.<org.codehaus.groovy.tools.LoaderConfiguration: void addFile(java.io.File)>(r1);

     label2:
        $z3 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z3 == 0 goto label3;

        if z1 == 0 goto label3;

        $r7 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>();

        if $r7 == null goto label3;

        specialinvoke r2.<org.codehaus.groovy.tools.LoaderConfiguration: void findMatchingFiles(java.io.File[],java.util.regex.Pattern,boolean)>($r7, r5, 1);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    private java.lang.String getSlashyPath(java.lang.String)
    {
        org.codehaus.groovy.tools.LoaderConfiguration r1;
        int $i2;
        char $c0, $c1;
        java.lang.String r0, r2;

        r1 := @this: org.codehaus.groovy.tools.LoaderConfiguration;

        r0 := @parameter0: java.lang.String;

        r2 = r0;

        $c0 = <java.io.File: char separatorChar>;

        $i2 = (int) $c0;

        if $i2 == 47 goto label1;

        $c1 = <java.io.File: char separatorChar>;

        r2 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>($c1, 47);

     label1:
        return r2;
    }

    private boolean parentPathDoesExist(java.lang.String)
    {
        org.codehaus.groovy.tools.LoaderConfiguration r3;
        java.lang.String r1;
        java.io.File $r0, $r2;
        boolean $z0;

        r3 := @this: org.codehaus.groovy.tools.LoaderConfiguration;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        $r2 = virtualinvoke $r0.<java.io.File: java.io.File getParentFile()>();

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        return $z0;
    }

    private java.lang.String getParentPath(java.lang.String)
    {
        org.codehaus.groovy.tools.LoaderConfiguration r2;
        int $i0, $i1, $i3;
        java.lang.String r0, $r1;

        r2 := @this: org.codehaus.groovy.tools.LoaderConfiguration;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(47);

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        return "";

     label1:
        $i1 = $i0 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        return $r1;
    }

    public void addFile(java.io.File)
    {
        java.net.MalformedURLException $r5;
        java.net.URL $r4;
        java.lang.AssertionError $r6;
        java.io.File r0;
        java.util.List $r2;
        org.codehaus.groovy.tools.LoaderConfiguration r1;
        java.net.URI $r3;
        boolean $z0;

        r1 := @this: org.codehaus.groovy.tools.LoaderConfiguration;

        r0 := @parameter0: java.io.File;

        if r0 == null goto label4;

        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label4;

     label1:
        $r2 = r1.<org.codehaus.groovy.tools.LoaderConfiguration: java.util.List classPath>;

        $r3 = virtualinvoke r0.<java.io.File: java.net.URI toURI()>();

        $r4 = virtualinvoke $r3.<java.net.URI: java.net.URL toURL()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>("converting an existing file to an url should have never thrown an exception!");

        throw $r6;

     label4:
        return;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    public void addFile(java.lang.String)
    {
        java.lang.String r0;
        org.codehaus.groovy.tools.LoaderConfiguration r1;
        java.io.File $r2;

        r1 := @this: org.codehaus.groovy.tools.LoaderConfiguration;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r0);

        virtualinvoke r1.<org.codehaus.groovy.tools.LoaderConfiguration: void addFile(java.io.File)>($r2);

     label1:
        return;
    }

    public void addClassPath(java.lang.String)
    {
        java.lang.String[] $r2;
        java.io.File $r4;
        org.codehaus.groovy.tools.LoaderConfiguration r3;
        int $i0, i1;
        java.lang.String r0, $r1, $r5;

        r3 := @this: org.codehaus.groovy.tools.LoaderConfiguration;

        r0 := @parameter0: java.lang.String;

        $r1 = <java.io.File: java.lang.String pathSeparator>;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>($r1);

        i1 = 0;

     label1:
        $i0 = lengthof $r2;

        if i1 >= $i0 goto label2;

        $r4 = new java.io.File;

        $r5 = $r2[i1];

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r5);

        virtualinvoke r3.<org.codehaus.groovy.tools.LoaderConfiguration: void addFile(java.io.File)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public java.net.URL[] getClassPathUrls()
    {
        java.lang.Object[] $r4;
        java.net.URL[] $r3, $r5, $r6;
        java.util.List $r1, $r2;
        org.codehaus.groovy.tools.LoaderConfiguration r0;
        int $i0;

        r0 := @this: org.codehaus.groovy.tools.LoaderConfiguration;

        $r2 = r0.<org.codehaus.groovy.tools.LoaderConfiguration: java.util.List classPath>;

        $r1 = r0.<org.codehaus.groovy.tools.LoaderConfiguration: java.util.List classPath>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r3 = newarray (java.net.URL)[$i0];

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (java.net.URL[]) $r4;

        $r6 = (java.net.URL[]) $r5;

        return $r6;
    }

    public java.lang.String getMainClass()
    {
        java.lang.String $r1;
        org.codehaus.groovy.tools.LoaderConfiguration r0;

        r0 := @this: org.codehaus.groovy.tools.LoaderConfiguration;

        $r1 = r0.<org.codehaus.groovy.tools.LoaderConfiguration: java.lang.String main>;

        return $r1;
    }

    public void setMainClass(java.lang.String)
    {
        java.lang.String r1;
        org.codehaus.groovy.tools.LoaderConfiguration r0;

        r0 := @this: org.codehaus.groovy.tools.LoaderConfiguration;

        r1 := @parameter0: java.lang.String;

        r0.<org.codehaus.groovy.tools.LoaderConfiguration: java.lang.String main> = r1;

        r0.<org.codehaus.groovy.tools.LoaderConfiguration: boolean requireMain> = 0;

        return;
    }

    public void setRequireMain(boolean)
    {
        org.codehaus.groovy.tools.LoaderConfiguration r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.tools.LoaderConfiguration;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.tools.LoaderConfiguration: boolean requireMain> = z0;

        return;
    }

    public static void <clinit>()
    {
        <org.codehaus.groovy.tools.LoaderConfiguration: java.lang.String MATCH_ALL> = "\\\\E.+?\\\\Q";

        <org.codehaus.groovy.tools.LoaderConfiguration: java.lang.String MATCH_FILE_NAME> = "\\\\E[^/]+?\\\\Q";

        <org.codehaus.groovy.tools.LoaderConfiguration: java.lang.String ALL_WILDCARD> = "**";

        <org.codehaus.groovy.tools.LoaderConfiguration: char WILDCARD> = 42;

        <org.codehaus.groovy.tools.LoaderConfiguration: java.lang.String LOAD_PREFIX> = "load";

        <org.codehaus.groovy.tools.LoaderConfiguration: java.lang.String MAIN_PREFIX> = "main is";

        return;
    }
}
