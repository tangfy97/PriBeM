final class kodkod.util.collections.CacheSet$SetIterator extends java.lang.Object implements java.util.Iterator
{
    kodkod.util.collections.CacheSet$Entry next;
    int index;
    kodkod.util.collections.CacheSet$Entry current;
    final kodkod.util.collections.CacheSet this$0;

    void <init>(kodkod.util.collections.CacheSet)
    {
        kodkod.util.collections.CacheSet$Entry $r4;
        kodkod.util.collections.CacheSet r1;
        kodkod.util.collections.CacheSet$SetIterator r0;
        kodkod.util.collections.CacheSet$Entry[] $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: kodkod.util.collections.CacheSet$SetIterator;

        r1 := @parameter0: kodkod.util.collections.CacheSet;

        r0.<kodkod.util.collections.CacheSet$SetIterator: kodkod.util.collections.CacheSet this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <kodkod.util.collections.CacheSet: kodkod.util.collections.CacheSet$Entry[] access$0(kodkod.util.collections.CacheSet)>(r1);

        $i0 = lengthof $r2;

        r0.<kodkod.util.collections.CacheSet$SetIterator: int index> = $i0;

        r0.<kodkod.util.collections.CacheSet$SetIterator: kodkod.util.collections.CacheSet$Entry next> = null;

        $i1 = staticinvoke <kodkod.util.collections.CacheSet: int access$1(kodkod.util.collections.CacheSet)>(r1);

        if $i1 == 0 goto label2;

     label1:
        $i2 = r0.<kodkod.util.collections.CacheSet$SetIterator: int index>;

        if $i2 <= 0 goto label2;

        $r3 = staticinvoke <kodkod.util.collections.CacheSet: kodkod.util.collections.CacheSet$Entry[] access$0(kodkod.util.collections.CacheSet)>(r1);

        $i3 = r0.<kodkod.util.collections.CacheSet$SetIterator: int index>;

        $i4 = $i3 - 1;

        r0.<kodkod.util.collections.CacheSet$SetIterator: int index> = $i4;

        $r4 = $r3[$i4];

        r0.<kodkod.util.collections.CacheSet$SetIterator: kodkod.util.collections.CacheSet$Entry next> = $r4;

        if $r4 == null goto label1;

     label2:
        return;
    }

    public boolean hasNext()
    {
        kodkod.util.collections.CacheSet$Entry $r1;
        kodkod.util.collections.CacheSet$SetIterator r0;

        r0 := @this: kodkod.util.collections.CacheSet$SetIterator;

        $r1 = r0.<kodkod.util.collections.CacheSet$SetIterator: kodkod.util.collections.CacheSet$Entry next>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object next()
    {
        kodkod.util.collections.CacheSet$Entry r1, r6;
        kodkod.util.collections.CacheSet $r3;
        kodkod.util.collections.CacheSet$SetIterator r0;
        kodkod.util.collections.CacheSet$Entry[] $r4;
        int $i0, $i1, $i2;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r5;

        r0 := @this: kodkod.util.collections.CacheSet$SetIterator;

        r1 = r0.<kodkod.util.collections.CacheSet$SetIterator: kodkod.util.collections.CacheSet$Entry next>;

        if r1 != null goto label1;

        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        throw $r5;

     label1:
        r6 = r1.<kodkod.util.collections.CacheSet$Entry: kodkod.util.collections.CacheSet$Entry next>;

        goto label3;

     label2:
        $r3 = r0.<kodkod.util.collections.CacheSet$SetIterator: kodkod.util.collections.CacheSet this$0>;

        $r4 = staticinvoke <kodkod.util.collections.CacheSet: kodkod.util.collections.CacheSet$Entry[] access$0(kodkod.util.collections.CacheSet)>($r3);

        $i1 = r0.<kodkod.util.collections.CacheSet$SetIterator: int index>;

        $i2 = $i1 - 1;

        r0.<kodkod.util.collections.CacheSet$SetIterator: int index> = $i2;

        r6 = $r4[$i2];

     label3:
        if r6 != null goto label4;

        $i0 = r0.<kodkod.util.collections.CacheSet$SetIterator: int index>;

        if $i0 > 0 goto label2;

     label4:
        r0.<kodkod.util.collections.CacheSet$SetIterator: kodkod.util.collections.CacheSet$Entry next> = r6;

        r0.<kodkod.util.collections.CacheSet$SetIterator: kodkod.util.collections.CacheSet$Entry current> = r1;

        $r2 = r1.<kodkod.util.collections.CacheSet$Entry: java.lang.Object val>;

        return $r2;
    }

    public void remove()
    {
        java.lang.IllegalStateException $r5;
        kodkod.util.collections.CacheSet$Entry $r1, $r2;
        java.lang.Object $r3;
        kodkod.util.collections.CacheSet $r4;
        kodkod.util.collections.CacheSet$SetIterator r0;

        r0 := @this: kodkod.util.collections.CacheSet$SetIterator;

        $r1 = r0.<kodkod.util.collections.CacheSet$SetIterator: kodkod.util.collections.CacheSet$Entry current>;

        if $r1 != null goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        throw $r5;

     label1:
        $r4 = r0.<kodkod.util.collections.CacheSet$SetIterator: kodkod.util.collections.CacheSet this$0>;

        $r2 = r0.<kodkod.util.collections.CacheSet$SetIterator: kodkod.util.collections.CacheSet$Entry current>;

        $r3 = $r2.<kodkod.util.collections.CacheSet$Entry: java.lang.Object val>;

        virtualinvoke $r4.<kodkod.util.collections.CacheSet: boolean remove(java.lang.Object)>($r3);

        r0.<kodkod.util.collections.CacheSet$SetIterator: kodkod.util.collections.CacheSet$Entry current> = null;

        return;
    }
}
