final class org.springframework.core.type.classreading.MethodMetadataReadingVisitor extends org.springframework.asm.MethodAdapter implements org.springframework.core.type.MethodMetadata
{
    private final java.lang.String name;
    private final int access;
    private java.lang.String declaringClassName;
    private final java.lang.ClassLoader classLoader;
    private final org.springframework.util.MultiValueMap methodMetadataMap;
    private final java.util.Map attributeMap;

    public void <init>(java.lang.String, int, java.lang.String, java.lang.ClassLoader, org.springframework.util.MultiValueMap)
    {
        org.springframework.asm.commons.EmptyVisitor $r1;
        org.springframework.util.MultiValueMap r6;
        java.util.LinkedHashMap $r2;
        org.springframework.core.type.classreading.MethodMetadataReadingVisitor r0;
        int i0;
        java.lang.String r3, r4;
        java.lang.ClassLoader r5;

        r0 := @this: org.springframework.core.type.classreading.MethodMetadataReadingVisitor;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.ClassLoader;

        r6 := @parameter4: org.springframework.util.MultiValueMap;

        $r1 = new org.springframework.asm.commons.EmptyVisitor;

        specialinvoke $r1.<org.springframework.asm.commons.EmptyVisitor: void <init>()>();

        specialinvoke r0.<org.springframework.asm.MethodAdapter: void <init>(org.springframework.asm.MethodVisitor)>($r1);

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>(int)>(2);

        r0.<org.springframework.core.type.classreading.MethodMetadataReadingVisitor: java.util.Map attributeMap> = $r2;

        r0.<org.springframework.core.type.classreading.MethodMetadataReadingVisitor: java.lang.String name> = r3;

        r0.<org.springframework.core.type.classreading.MethodMetadataReadingVisitor: int access> = i0;

        r0.<org.springframework.core.type.classreading.MethodMetadataReadingVisitor: java.lang.String declaringClassName> = r4;

        r0.<org.springframework.core.type.classreading.MethodMetadataReadingVisitor: java.lang.ClassLoader classLoader> = r5;

        r0.<org.springframework.core.type.classreading.MethodMetadataReadingVisitor: org.springframework.util.MultiValueMap methodMetadataMap> = r6;

        return;
    }

    public org.springframework.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)
    {
        org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor $r5;
        org.springframework.util.MultiValueMap $r4;
        org.springframework.core.type.classreading.MethodMetadataReadingVisitor r3;
        java.util.Map $r7;
        java.lang.String r0, $r2;
        java.lang.ClassLoader $r6;
        org.springframework.asm.Type $r1;
        boolean z0;

        r3 := @this: org.springframework.core.type.classreading.MethodMetadataReadingVisitor;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = staticinvoke <org.springframework.asm.Type: org.springframework.asm.Type getType(java.lang.String)>(r0);

        $r2 = virtualinvoke $r1.<org.springframework.asm.Type: java.lang.String getClassName()>();

        $r4 = r3.<org.springframework.core.type.classreading.MethodMetadataReadingVisitor: org.springframework.util.MultiValueMap methodMetadataMap>;

        interfaceinvoke $r4.<org.springframework.util.MultiValueMap: void add(java.lang.Object,java.lang.Object)>($r2, r3);

        $r5 = new org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor;

        $r7 = r3.<org.springframework.core.type.classreading.MethodMetadataReadingVisitor: java.util.Map attributeMap>;

        $r6 = r3.<org.springframework.core.type.classreading.MethodMetadataReadingVisitor: java.lang.ClassLoader classLoader>;

        specialinvoke $r5.<org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor: void <init>(java.lang.String,java.util.Map,java.util.Map,java.lang.ClassLoader)>($r2, $r7, null, $r6);

        return $r5;
    }

    public java.lang.String getMethodName()
    {
        org.springframework.core.type.classreading.MethodMetadataReadingVisitor r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.core.type.classreading.MethodMetadataReadingVisitor;

        $r1 = r0.<org.springframework.core.type.classreading.MethodMetadataReadingVisitor: java.lang.String name>;

        return $r1;
    }

    public boolean isStatic()
    {
        int $i0, $i1;
        org.springframework.core.type.classreading.MethodMetadataReadingVisitor r0;

        r0 := @this: org.springframework.core.type.classreading.MethodMetadataReadingVisitor;

        $i0 = r0.<org.springframework.core.type.classreading.MethodMetadataReadingVisitor: int access>;

        $i1 = $i0 & 8;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isFinal()
    {
        int $i0, $i1;
        org.springframework.core.type.classreading.MethodMetadataReadingVisitor r0;

        r0 := @this: org.springframework.core.type.classreading.MethodMetadataReadingVisitor;

        $i0 = r0.<org.springframework.core.type.classreading.MethodMetadataReadingVisitor: int access>;

        $i1 = $i0 & 16;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isOverridable()
    {
        org.springframework.core.type.classreading.MethodMetadataReadingVisitor r0;
        int $i0, $i1;
        boolean $z0, $z1;

        r0 := @this: org.springframework.core.type.classreading.MethodMetadataReadingVisitor;

        $z0 = virtualinvoke r0.<org.springframework.core.type.classreading.MethodMetadataReadingVisitor: boolean isStatic()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.springframework.core.type.classreading.MethodMetadataReadingVisitor: boolean isFinal()>();

        if $z1 != 0 goto label1;

        $i0 = r0.<org.springframework.core.type.classreading.MethodMetadataReadingVisitor: int access>;

        $i1 = $i0 & 2;

        if $i1 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isAnnotated(java.lang.String)
    {
        org.springframework.core.type.classreading.MethodMetadataReadingVisitor r0;
        java.util.Map $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.springframework.core.type.classreading.MethodMetadataReadingVisitor;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.core.type.classreading.MethodMetadataReadingVisitor: java.util.Map attributeMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public java.util.Map getAnnotationAttributes(java.lang.String)
    {
        org.springframework.core.type.classreading.MethodMetadataReadingVisitor r0;
        java.util.Map $r2, $r4;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: org.springframework.core.type.classreading.MethodMetadataReadingVisitor;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.core.type.classreading.MethodMetadataReadingVisitor: java.util.Map attributeMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.util.Map) $r3;

        return $r4;
    }

    public java.lang.String getDeclaringClassName()
    {
        org.springframework.core.type.classreading.MethodMetadataReadingVisitor r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.core.type.classreading.MethodMetadataReadingVisitor;

        $r1 = r0.<org.springframework.core.type.classreading.MethodMetadataReadingVisitor: java.lang.String declaringClassName>;

        return $r1;
    }
}
