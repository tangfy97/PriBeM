public class org.xmlpull.v1.builder.xpath.jaxen.function.ext.MatrixConcatFunction$MatrixEnum extends java.lang.Object implements java.util.Enumeration
{
    private java.util.ArrayList m_source;
    private int m_maxSize;
    private int m_currIdx;

    public void <init>(java.util.ArrayList)
    {
        org.xmlpull.v1.builder.xpath.jaxen.function.ext.MatrixConcatFunction$MatrixEnum r0;
        java.util.Iterator $r3;
        java.util.ArrayList r1, $r2, r5;
        int $i0, $i1, $i3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.function.ext.MatrixConcatFunction$MatrixEnum;

        r1 := @parameter0: java.util.ArrayList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.xmlpull.v1.builder.xpath.jaxen.function.ext.MatrixConcatFunction$MatrixEnum: int m_maxSize> = 0;

        $i3 = (int) -1;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.function.ext.MatrixConcatFunction$MatrixEnum: int m_currIdx> = $i3;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.function.ext.MatrixConcatFunction$MatrixEnum: java.util.ArrayList m_source> = r1;

        $r2 = r0.<org.xmlpull.v1.builder.xpath.jaxen.function.ext.MatrixConcatFunction$MatrixEnum: java.util.ArrayList m_source>;

        $r3 = virtualinvoke $r2.<java.util.AbstractList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.ArrayList) $r4;

        $i0 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        $i1 = r0.<org.xmlpull.v1.builder.xpath.jaxen.function.ext.MatrixConcatFunction$MatrixEnum: int m_maxSize>;

        if $i0 <= $i1 goto label2;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.function.ext.MatrixConcatFunction$MatrixEnum: int m_maxSize> = $i0;

     label2:
        goto label1;

     label3:
        return;
    }

    public void <init>(java.util.ArrayList, int)
    {
        org.xmlpull.v1.builder.xpath.jaxen.function.ext.MatrixConcatFunction$MatrixEnum r0;
        int i0, $i2;
        java.util.ArrayList r1;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.function.ext.MatrixConcatFunction$MatrixEnum;

        r1 := @parameter0: java.util.ArrayList;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.xmlpull.v1.builder.xpath.jaxen.function.ext.MatrixConcatFunction$MatrixEnum: int m_maxSize> = 0;

        $i2 = (int) -1;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.function.ext.MatrixConcatFunction$MatrixEnum: int m_currIdx> = $i2;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.function.ext.MatrixConcatFunction$MatrixEnum: java.util.ArrayList m_source> = r1;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.function.ext.MatrixConcatFunction$MatrixEnum: int m_maxSize> = i0;

        return;
    }

    public boolean hasMoreElements()
    {
        org.xmlpull.v1.builder.xpath.jaxen.function.ext.MatrixConcatFunction$MatrixEnum r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.function.ext.MatrixConcatFunction$MatrixEnum;

        $i0 = r0.<org.xmlpull.v1.builder.xpath.jaxen.function.ext.MatrixConcatFunction$MatrixEnum: int m_maxSize>;

        if $i0 == 0 goto label1;

        $i1 = r0.<org.xmlpull.v1.builder.xpath.jaxen.function.ext.MatrixConcatFunction$MatrixEnum: int m_currIdx>;

        $i2 = $i1 + 1;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.function.ext.MatrixConcatFunction$MatrixEnum: int m_currIdx> = $i2;

        $i3 = r0.<org.xmlpull.v1.builder.xpath.jaxen.function.ext.MatrixConcatFunction$MatrixEnum: int m_maxSize>;

        if $i2 >= $i3 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object nextElement()
    {
        org.xmlpull.v1.builder.xpath.jaxen.function.ext.MatrixConcatFunction$MatrixEnum r1;
        java.util.Iterator $r3;
        java.util.ArrayList $r0, $r2, r5;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r4, $r6, $r7;
        boolean $z0;

        r1 := @this: org.xmlpull.v1.builder.xpath.jaxen.function.ext.MatrixConcatFunction$MatrixEnum;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.xmlpull.v1.builder.xpath.jaxen.function.ext.MatrixConcatFunction$MatrixEnum: java.util.ArrayList m_source>;

        $r3 = virtualinvoke $r2.<java.util.AbstractList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.ArrayList) $r4;

        $i0 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        $i1 = r1.<org.xmlpull.v1.builder.xpath.jaxen.function.ext.MatrixConcatFunction$MatrixEnum: int m_currIdx>;

        if $i1 >= $i0 goto label2;

        $i3 = r1.<org.xmlpull.v1.builder.xpath.jaxen.function.ext.MatrixConcatFunction$MatrixEnum: int m_currIdx>;

        $r7 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label4;

     label2:
        if $i0 <= 0 goto label3;

        $i2 = $i0 - 1;

        $r6 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        goto label4;

     label3:
        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>("");

     label4:
        goto label1;

     label5:
        return $r0;
    }
}
