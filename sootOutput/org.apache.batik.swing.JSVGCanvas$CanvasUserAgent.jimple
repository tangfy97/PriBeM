public class org.apache.batik.swing.JSVGCanvas$CanvasUserAgent extends org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent implements org.apache.batik.util.XMLConstants
{
    final java.lang.String TOOLTIP_TITLE_ONLY;
    final java.lang.String TOOLTIP_DESC_ONLY;
    final java.lang.String TOOLTIP_TITLE_AND_TEXT;
    private final org.apache.batik.swing.JSVGCanvas this$0;

    protected void <init>(org.apache.batik.swing.JSVGCanvas)
    {
        org.apache.batik.swing.JSVGCanvas$CanvasUserAgent r0;
        org.apache.batik.swing.JSVGCanvas r1;

        r0 := @this: org.apache.batik.swing.JSVGCanvas$CanvasUserAgent;

        r1 := @parameter0: org.apache.batik.swing.JSVGCanvas;

        specialinvoke r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent: void <init>(org.apache.batik.swing.svg.AbstractJSVGComponent)>(r1);

        r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: java.lang.String TOOLTIP_TITLE_AND_TEXT> = "JSVGCanvas.CanvasUserAgent.ToolTip.titleAndDesc";

        r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: java.lang.String TOOLTIP_DESC_ONLY> = "JSVGCanvas.CanvasUserAgent.ToolTip.descOnly";

        r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: java.lang.String TOOLTIP_TITLE_ONLY> = "JSVGCanvas.CanvasUserAgent.ToolTip.titleOnly";

        r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.apache.batik.swing.JSVGCanvas this$0> = r1;

        r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: java.lang.String TOOLTIP_TITLE_ONLY> = "JSVGCanvas.CanvasUserAgent.ToolTip.titleOnly";

        r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: java.lang.String TOOLTIP_DESC_ONLY> = "JSVGCanvas.CanvasUserAgent.ToolTip.descOnly";

        r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: java.lang.String TOOLTIP_TITLE_AND_TEXT> = "JSVGCanvas.CanvasUserAgent.ToolTip.titleAndDesc";

        return;
    }

    public void handleElement(org.w3c.dom.Element, java.lang.Object)
    {
        org.apache.batik.swing.JSVGCanvas$CanvasUserAgent r0;
        org.w3c.dom.events.EventTarget $r13;
        org.apache.batik.swing.JSVGCanvas $r3, $r12, $r14, $r17, $r19, $r21;
        org.w3c.dom.Document $r7;
        java.util.Map $r15, $r20, $r22;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.batik.swing.JSVGCanvas$ToolTipRunnable $r16;
        java.lang.Object[] $r23, $r25, $r27;
        org.w3c.dom.Node $r6, $r9, $r30, $r31, $r32, $r33;
        int $i0, $i1, $i2;
        java.lang.Boolean $r34, $r35;
        java.lang.String $r4, $r5, $r10, $r11, $r24, $r26, $r28, $r29, r39, r40, r41;
        org.w3c.dom.Element r1, $r8, r36, r37, r38;
        java.lang.Object r2, r42;
        org.apache.batik.swing.JSVGCanvas$7 $r18;

        r0 := @this: org.apache.batik.swing.JSVGCanvas$CanvasUserAgent;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent: void handleElement(org.w3c.dom.Element,java.lang.Object)>(r1, r2);

        $r3 = r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.apache.batik.swing.JSVGCanvas this$0>;

        $z0 = virtualinvoke $r3.<org.apache.batik.swing.svg.AbstractJSVGComponent: boolean isInteractive()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        $r4 = "http://www.w3.org/2000/svg";

        $r5 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label02;

        return;

     label02:
        $r6 = interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        $r7 = interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        $r8 = interfaceinvoke $r7.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        if $r6 != $r8 goto label03;

        return;

     label03:
        $z2 = r2 instanceof org.w3c.dom.Element;

        if $z2 == 0 goto label04;

        r36 = (org.w3c.dom.Element) r2;

        goto label05;

     label04:
        $r9 = interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        r36 = (org.w3c.dom.Element) $r9;

     label05:
        r37 = null;

        r38 = null;

        $r10 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("title");

        if $z3 == 0 goto label07;

        $r35 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        if r2 != $r35 goto label06;

        r38 = r1;

     label06:
        r37 = virtualinvoke r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.w3c.dom.Element getPeerWithTag(org.w3c.dom.Element,java.lang.String,java.lang.String)>(r36, "http://www.w3.org/2000/svg", "desc");

        goto label09;

     label07:
        $r11 = interfaceinvoke r1.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z4 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("desc");

        if $z4 == 0 goto label09;

        $r34 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        if r2 != $r34 goto label08;

        r37 = r1;

     label08:
        r38 = virtualinvoke r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.w3c.dom.Element getPeerWithTag(org.w3c.dom.Element,java.lang.String,java.lang.String)>(r36, "http://www.w3.org/2000/svg", "title");

     label09:
        r39 = null;

        if r38 == null goto label10;

        interfaceinvoke r38.<org.w3c.dom.Node: void normalize()>();

        $r32 = interfaceinvoke r38.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        if $r32 == null goto label10;

        $r33 = interfaceinvoke r38.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        r39 = interfaceinvoke $r33.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

     label10:
        r40 = null;

        if r37 == null goto label11;

        interfaceinvoke r37.<org.w3c.dom.Node: void normalize()>();

        $r30 = interfaceinvoke r37.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        if $r30 == null goto label11;

        $r31 = interfaceinvoke r37.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        r40 = interfaceinvoke $r31.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

     label11:
        if r39 == null goto label13;

        $i1 = virtualinvoke r39.<java.lang.String: int length()>();

        if $i1 == 0 goto label13;

        if r40 == null goto label12;

        $i2 = virtualinvoke r40.<java.lang.String: int length()>();

        if $i2 == 0 goto label12;

        $r27 = newarray (java.lang.Object)[2];

        $r28 = virtualinvoke r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: java.lang.String toFormattedHTML(java.lang.String)>(r39);

        $r27[0] = $r28;

        $r29 = virtualinvoke r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: java.lang.String toFormattedHTML(java.lang.String)>(r40);

        $r27[1] = $r29;

        r41 = staticinvoke <org.apache.batik.swing.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("JSVGCanvas.CanvasUserAgent.ToolTip.titleAndDesc", $r27);

        goto label15;

     label12:
        $r25 = newarray (java.lang.Object)[1];

        $r26 = virtualinvoke r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: java.lang.String toFormattedHTML(java.lang.String)>(r39);

        $r25[0] = $r26;

        r41 = staticinvoke <org.apache.batik.swing.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("JSVGCanvas.CanvasUserAgent.ToolTip.titleOnly", $r25);

        goto label15;

     label13:
        if r40 == null goto label14;

        $i0 = virtualinvoke r40.<java.lang.String: int length()>();

        if $i0 == 0 goto label14;

        $r23 = newarray (java.lang.Object)[1];

        $r24 = virtualinvoke r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: java.lang.String toFormattedHTML(java.lang.String)>(r40);

        $r23[0] = $r24;

        r41 = staticinvoke <org.apache.batik.swing.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("JSVGCanvas.CanvasUserAgent.ToolTip.descOnly", $r23);

        goto label15;

     label14:
        r41 = null;

     label15:
        if r41 != null goto label16;

        virtualinvoke r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: void removeToolTip(org.w3c.dom.Element)>(r36);

        return;

     label16:
        $r12 = r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.apache.batik.swing.JSVGCanvas this$0>;

        $r13 = $r12.<org.apache.batik.swing.JSVGCanvas: org.w3c.dom.events.EventTarget lastTarget>;

        if $r13 == r36 goto label17;

        virtualinvoke r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: void setToolTip(org.w3c.dom.Element,java.lang.String)>(r36, r41);

        goto label20;

     label17:
        r42 = null;

        $r14 = r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.apache.batik.swing.JSVGCanvas this$0>;

        $r15 = $r14.<org.apache.batik.swing.JSVGCanvas: java.util.Map toolTipMap>;

        if $r15 == null goto label18;

        $r19 = r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.apache.batik.swing.JSVGCanvas this$0>;

        $r20 = $r19.<org.apache.batik.swing.JSVGCanvas: java.util.Map toolTipMap>;

        r42 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(r36);

        $r21 = r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.apache.batik.swing.JSVGCanvas this$0>;

        $r22 = $r21.<org.apache.batik.swing.JSVGCanvas: java.util.Map toolTipMap>;

        interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r36, r41);

     label18:
        if r42 == null goto label19;

        $r18 = new org.apache.batik.swing.JSVGCanvas$7;

        specialinvoke $r18.<org.apache.batik.swing.JSVGCanvas$7: void <init>(org.apache.batik.swing.JSVGCanvas$CanvasUserAgent,java.lang.String)>(r0, r41);

        staticinvoke <java.awt.EventQueue: void invokeLater(java.lang.Runnable)>($r18);

        goto label20;

     label19:
        $r16 = new org.apache.batik.swing.JSVGCanvas$ToolTipRunnable;

        $r17 = r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.apache.batik.swing.JSVGCanvas this$0>;

        specialinvoke $r16.<org.apache.batik.swing.JSVGCanvas$ToolTipRunnable: void <init>(org.apache.batik.swing.JSVGCanvas,java.lang.String)>($r17, r41);

        staticinvoke <java.awt.EventQueue: void invokeLater(java.lang.Runnable)>($r16);

     label20:
        return;
    }

    public java.lang.String toFormattedHTML(java.lang.String)
    {
        org.apache.batik.swing.JSVGCanvas$CanvasUserAgent r2;
        java.lang.StringBuffer $r0;
        java.lang.String r1, $r3;

        r2 := @this: org.apache.batik.swing.JSVGCanvas$CanvasUserAgent;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>(r1);

        virtualinvoke r2.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: void replace(java.lang.StringBuffer,char,java.lang.String)>($r0, 38, "&amp;");

        virtualinvoke r2.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: void replace(java.lang.StringBuffer,char,java.lang.String)>($r0, 60, "&lt;");

        virtualinvoke r2.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: void replace(java.lang.StringBuffer,char,java.lang.String)>($r0, 62, "&gt;");

        virtualinvoke r2.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: void replace(java.lang.StringBuffer,char,java.lang.String)>($r0, 34, "&quot;");

        virtualinvoke r2.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: void replace(java.lang.StringBuffer,char,java.lang.String)>($r0, 10, "<br>");

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    protected void replace(java.lang.StringBuffer, char, java.lang.String)
    {
        org.apache.batik.swing.JSVGCanvas$CanvasUserAgent r3;
        char c0;
        java.lang.StringBuffer r0;
        int $i1, $i2, i3, $i4, $i6;
        java.lang.String $r1, r2;

        r3 := @this: org.apache.batik.swing.JSVGCanvas$CanvasUserAgent;

        r0 := @parameter0: java.lang.StringBuffer;

        c0 := @parameter1: char;

        r2 := @parameter2: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.String toString()>();

        i3 = virtualinvoke $r1.<java.lang.String: int length()>();

        goto label2;

     label1:
        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>($i2);

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>($i2, r2);

     label2:
        $i1 = i3 - 1;

        $i4 = (int) c0;

        $i2 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int,int)>($i4, $i1);

        i3 = $i2;

        $i6 = (int) -1;

        if $i2 != $i6 goto label1;

        return;
    }

    public org.w3c.dom.Element getPeerWithTag(org.w3c.dom.Element, java.lang.String, java.lang.String)
    {
        org.apache.batik.swing.JSVGCanvas$CanvasUserAgent r6;
        short $s0;
        org.w3c.dom.Element r0, $r5;
        org.w3c.dom.Node r7;
        java.lang.String r1, $r2, r3, $r4;
        boolean $z0, $z1;

        r6 := @this: org.apache.batik.swing.JSVGCanvas$CanvasUserAgent;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        r7 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label6;

     label2:
        $r2 = interfaceinvoke r7.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label3;

        goto label5;

     label3:
        $r4 = interfaceinvoke r7.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label4;

        goto label5;

     label4:
        $s0 = interfaceinvoke r7.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label5;

        $r5 = (org.w3c.dom.Element) r7;

        return $r5;

     label5:
        r7 = interfaceinvoke r7.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label6:
        if r7 != null goto label2;

        return null;
    }

    public boolean hasPeerWithTag(org.w3c.dom.Element, java.lang.String, java.lang.String)
    {
        org.apache.batik.swing.JSVGCanvas$CanvasUserAgent r0;
        org.w3c.dom.Element r1, $r4;
        java.lang.String r2, r3;
        boolean $z0;

        r0 := @this: org.apache.batik.swing.JSVGCanvas$CanvasUserAgent;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = virtualinvoke r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.w3c.dom.Element getPeerWithTag(org.w3c.dom.Element,java.lang.String,java.lang.String)>(r1, r2, r3);

        if $r4 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setToolTip(org.w3c.dom.Element, java.lang.String)
    {
        org.apache.batik.swing.JSVGCanvas$CanvasUserAgent r0;
        org.w3c.dom.svg.SVGDocument $r26;
        org.w3c.dom.events.EventTarget $r15;
        org.apache.batik.swing.JSVGCanvas $r1, $r3, $r7, $r11, $r14, $r17, $r20, $r22, $r25, $r28;
        org.w3c.dom.Document $r6;
        java.util.Map $r2, $r4, $r9, $r13;
        java.lang.String r12;
        java.util.WeakHashMap $r24, $r27;
        org.w3c.dom.svg.SVGSVGElement $r18;
        org.apache.batik.swing.JSVGCanvas$ToolTipRunnable $r16;
        org.apache.batik.dom.events.NodeEventTarget r19;
        org.w3c.dom.Element r5;
        org.w3c.dom.events.EventListener $r21, $r23;
        java.lang.Object $r8, $r10;

        r0 := @this: org.apache.batik.swing.JSVGCanvas$CanvasUserAgent;

        r5 := @parameter0: org.w3c.dom.Element;

        r12 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.apache.batik.swing.JSVGCanvas this$0>;

        $r2 = $r1.<org.apache.batik.swing.JSVGCanvas: java.util.Map toolTipMap>;

        if $r2 != null goto label1;

        $r28 = r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.apache.batik.swing.JSVGCanvas this$0>;

        $r27 = new java.util.WeakHashMap;

        specialinvoke $r27.<java.util.WeakHashMap: void <init>()>();

        $r28.<org.apache.batik.swing.JSVGCanvas: java.util.Map toolTipMap> = $r27;

     label1:
        $r3 = r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.apache.batik.swing.JSVGCanvas this$0>;

        $r4 = $r3.<org.apache.batik.swing.JSVGCanvas: java.util.Map toolTipDocs>;

        if $r4 != null goto label2;

        $r25 = r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.apache.batik.swing.JSVGCanvas this$0>;

        $r24 = new java.util.WeakHashMap;

        specialinvoke $r24.<java.util.WeakHashMap: void <init>()>();

        $r25.<org.apache.batik.swing.JSVGCanvas: java.util.Map toolTipDocs> = $r24;

     label2:
        $r6 = interfaceinvoke r5.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        $r26 = (org.w3c.dom.svg.SVGDocument) $r6;

        $r7 = r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.apache.batik.swing.JSVGCanvas this$0>;

        $r9 = $r7.<org.apache.batik.swing.JSVGCanvas: java.util.Map toolTipDocs>;

        $r8 = <org.apache.batik.swing.JSVGCanvas: java.lang.Object MAP_TOKEN>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, $r8);

        if $r10 != null goto label3;

        $r18 = interfaceinvoke $r26.<org.w3c.dom.svg.SVGDocument: org.w3c.dom.svg.SVGSVGElement getRootElement()>();

        r19 = (org.apache.batik.dom.events.NodeEventTarget) $r18;

        $r20 = r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.apache.batik.swing.JSVGCanvas this$0>;

        $r21 = $r20.<org.apache.batik.swing.JSVGCanvas: org.w3c.dom.events.EventListener toolTipListener>;

        interfaceinvoke r19.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "mouseover", $r21, 0, null);

        $r22 = r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.apache.batik.swing.JSVGCanvas this$0>;

        $r23 = $r22.<org.apache.batik.swing.JSVGCanvas: org.w3c.dom.events.EventListener toolTipListener>;

        interfaceinvoke r19.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "mouseout", $r23, 0, null);

     label3:
        $r11 = r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.apache.batik.swing.JSVGCanvas this$0>;

        $r13 = $r11.<org.apache.batik.swing.JSVGCanvas: java.util.Map toolTipMap>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r12);

        $r14 = r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.apache.batik.swing.JSVGCanvas this$0>;

        $r15 = $r14.<org.apache.batik.swing.JSVGCanvas: org.w3c.dom.events.EventTarget lastTarget>;

        if r5 != $r15 goto label4;

        $r16 = new org.apache.batik.swing.JSVGCanvas$ToolTipRunnable;

        $r17 = r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.apache.batik.swing.JSVGCanvas this$0>;

        specialinvoke $r16.<org.apache.batik.swing.JSVGCanvas$ToolTipRunnable: void <init>(org.apache.batik.swing.JSVGCanvas,java.lang.String)>($r17, r12);

        staticinvoke <java.awt.EventQueue: void invokeLater(java.lang.Runnable)>($r16);

     label4:
        return;
    }

    public void removeToolTip(org.w3c.dom.Element)
    {
        org.apache.batik.swing.JSVGCanvas$CanvasUserAgent r0;
        org.apache.batik.swing.JSVGCanvas$ToolTipRunnable $r6;
        org.w3c.dom.Element r4;
        org.w3c.dom.events.EventTarget $r5;
        org.apache.batik.swing.JSVGCanvas $r1, $r3, $r7, $r8;
        java.util.Map $r2, $r9;

        r0 := @this: org.apache.batik.swing.JSVGCanvas$CanvasUserAgent;

        r4 := @parameter0: org.w3c.dom.Element;

        $r1 = r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.apache.batik.swing.JSVGCanvas this$0>;

        $r2 = $r1.<org.apache.batik.swing.JSVGCanvas: java.util.Map toolTipMap>;

        if $r2 == null goto label1;

        $r8 = r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.apache.batik.swing.JSVGCanvas this$0>;

        $r9 = $r8.<org.apache.batik.swing.JSVGCanvas: java.util.Map toolTipMap>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r4);

     label1:
        $r3 = r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.apache.batik.swing.JSVGCanvas this$0>;

        $r5 = $r3.<org.apache.batik.swing.JSVGCanvas: org.w3c.dom.events.EventTarget lastTarget>;

        if $r5 != r4 goto label2;

        $r6 = new org.apache.batik.swing.JSVGCanvas$ToolTipRunnable;

        $r7 = r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.apache.batik.swing.JSVGCanvas this$0>;

        specialinvoke $r6.<org.apache.batik.swing.JSVGCanvas$ToolTipRunnable: void <init>(org.apache.batik.swing.JSVGCanvas,java.lang.String)>($r7, null);

        staticinvoke <java.awt.EventQueue: void invokeLater(java.lang.Runnable)>($r6);

     label2:
        return;
    }

    public void displayError(java.lang.String)
    {
        org.apache.batik.swing.JSVGCanvas$CanvasUserAgent r0;
        javax.swing.JDialog $r6;
        org.apache.batik.swing.JSVGCanvas $r1, $r5;
        java.lang.String r4;
        javax.swing.JOptionPane $r3;
        org.apache.batik.swing.svg.SVGUserAgent $r2;

        r0 := @this: org.apache.batik.swing.JSVGCanvas$CanvasUserAgent;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.apache.batik.swing.JSVGCanvas this$0>;

        $r2 = staticinvoke <org.apache.batik.swing.JSVGCanvas: org.apache.batik.swing.svg.SVGUserAgent access$301(org.apache.batik.swing.JSVGCanvas)>($r1);

        if $r2 == null goto label1;

        specialinvoke r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent: void displayError(java.lang.String)>(r4);

        goto label2;

     label1:
        $r3 = new javax.swing.JOptionPane;

        specialinvoke $r3.<javax.swing.JOptionPane: void <init>(java.lang.Object,int)>(r4, 0);

        $r5 = r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.apache.batik.swing.JSVGCanvas this$0>;

        $r6 = virtualinvoke $r3.<javax.swing.JOptionPane: javax.swing.JDialog createDialog(java.awt.Component,java.lang.String)>($r5, "ERROR");

        virtualinvoke $r6.<java.awt.Dialog: void setModal(boolean)>(0);

        virtualinvoke $r6.<java.awt.Component: void setVisible(boolean)>(1);

     label2:
        return;
    }

    public void displayError(java.lang.Exception)
    {
        org.apache.batik.swing.JSVGCanvas$CanvasUserAgent r0;
        org.apache.batik.util.gui.JErrorPane $r3;
        javax.swing.JDialog $r6;
        org.apache.batik.swing.JSVGCanvas $r1, $r5;
        org.apache.batik.swing.svg.SVGUserAgent $r2;
        java.lang.Exception r4;

        r0 := @this: org.apache.batik.swing.JSVGCanvas$CanvasUserAgent;

        r4 := @parameter0: java.lang.Exception;

        $r1 = r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.apache.batik.swing.JSVGCanvas this$0>;

        $r2 = staticinvoke <org.apache.batik.swing.JSVGCanvas: org.apache.batik.swing.svg.SVGUserAgent access$401(org.apache.batik.swing.JSVGCanvas)>($r1);

        if $r2 == null goto label1;

        specialinvoke r0.<org.apache.batik.swing.svg.AbstractJSVGComponent$BridgeUserAgent: void displayError(java.lang.Exception)>(r4);

        goto label2;

     label1:
        $r3 = new org.apache.batik.util.gui.JErrorPane;

        specialinvoke $r3.<org.apache.batik.util.gui.JErrorPane: void <init>(java.lang.Throwable,int)>(r4, 0);

        $r5 = r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.apache.batik.swing.JSVGCanvas this$0>;

        $r6 = virtualinvoke $r3.<org.apache.batik.util.gui.JErrorPane: javax.swing.JDialog createDialog(java.awt.Component,java.lang.String)>($r5, "ERROR");

        virtualinvoke $r6.<java.awt.Dialog: void setModal(boolean)>(0);

        virtualinvoke $r6.<java.awt.Component: void setVisible(boolean)>(1);

     label2:
        return;
    }

    static org.apache.batik.swing.JSVGCanvas access$200(org.apache.batik.swing.JSVGCanvas$CanvasUserAgent)
    {
        org.apache.batik.swing.JSVGCanvas$CanvasUserAgent r0;
        org.apache.batik.swing.JSVGCanvas $r1;

        r0 := @parameter0: org.apache.batik.swing.JSVGCanvas$CanvasUserAgent;

        $r1 = r0.<org.apache.batik.swing.JSVGCanvas$CanvasUserAgent: org.apache.batik.swing.JSVGCanvas this$0>;

        return $r1;
    }
}
