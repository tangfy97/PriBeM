public class com.spatial4j.core.shape.jts.JtsPoint extends java.lang.Object implements com.spatial4j.core.shape.Point
{
    private final com.spatial4j.core.context.SpatialContext ctx;
    private com.vividsolutions.jts.geom.Point pointGeom;

    public void <init>(com.vividsolutions.jts.geom.Point, com.spatial4j.core.context.SpatialContext)
    {
        com.spatial4j.core.context.SpatialContext r1;
        com.spatial4j.core.shape.jts.JtsPoint r0;
        com.vividsolutions.jts.geom.Point r2;

        r0 := @this: com.spatial4j.core.shape.jts.JtsPoint;

        r2 := @parameter0: com.vividsolutions.jts.geom.Point;

        r1 := @parameter1: com.spatial4j.core.context.SpatialContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.spatial4j.core.shape.jts.JtsPoint: com.spatial4j.core.context.SpatialContext ctx> = r1;

        r0.<com.spatial4j.core.shape.jts.JtsPoint: com.vividsolutions.jts.geom.Point pointGeom> = r2;

        return;
    }

    public com.vividsolutions.jts.geom.Point getGeom()
    {
        com.spatial4j.core.shape.jts.JtsPoint r0;
        com.vividsolutions.jts.geom.Point $r1;

        r0 := @this: com.spatial4j.core.shape.jts.JtsPoint;

        $r1 = r0.<com.spatial4j.core.shape.jts.JtsPoint: com.vividsolutions.jts.geom.Point pointGeom>;

        return $r1;
    }

    public com.spatial4j.core.shape.Point getCenter()
    {
        com.spatial4j.core.shape.jts.JtsPoint r0;

        r0 := @this: com.spatial4j.core.shape.jts.JtsPoint;

        return r0;
    }

    public boolean hasArea()
    {
        com.spatial4j.core.shape.jts.JtsPoint r0;

        r0 := @this: com.spatial4j.core.shape.jts.JtsPoint;

        return 0;
    }

    public double getArea(com.spatial4j.core.context.SpatialContext)
    {
        com.spatial4j.core.context.SpatialContext r1;
        com.spatial4j.core.shape.jts.JtsPoint r0;

        r0 := @this: com.spatial4j.core.shape.jts.JtsPoint;

        r1 := @parameter0: com.spatial4j.core.context.SpatialContext;

        return 0.0;
    }

    public com.spatial4j.core.shape.Rectangle getBoundingBox()
    {
        com.spatial4j.core.context.SpatialContext $r1;
        com.spatial4j.core.shape.jts.JtsPoint r0;
        com.spatial4j.core.shape.Rectangle $r2;

        r0 := @this: com.spatial4j.core.shape.jts.JtsPoint;

        $r1 = r0.<com.spatial4j.core.shape.jts.JtsPoint: com.spatial4j.core.context.SpatialContext ctx>;

        $r2 = virtualinvoke $r1.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.shape.Rectangle makeRectangle(com.spatial4j.core.shape.Point,com.spatial4j.core.shape.Point)>(r0, r0);

        return $r2;
    }

    public com.spatial4j.core.shape.SpatialRelation relate(com.spatial4j.core.shape.Shape)
    {
        com.spatial4j.core.shape.Shape r0;
        com.spatial4j.core.shape.jts.JtsPoint r1;
        com.spatial4j.core.shape.SpatialRelation $r2, $r3, $r4;
        boolean $z0, $z1;

        r1 := @this: com.spatial4j.core.shape.jts.JtsPoint;

        r0 := @parameter0: com.spatial4j.core.shape.Shape;

        $z0 = r0 instanceof com.spatial4j.core.shape.Point;

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke r1.<com.spatial4j.core.shape.jts.JtsPoint: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label1;

        $r4 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation INTERSECTS>;

        goto label2;

     label1:
        $r4 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation DISJOINT>;

     label2:
        return $r4;

     label3:
        $r2 = interfaceinvoke r0.<com.spatial4j.core.shape.Shape: com.spatial4j.core.shape.SpatialRelation relate(com.spatial4j.core.shape.Shape)>(r1);

        $r3 = virtualinvoke $r2.<com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation transpose()>();

        return $r3;
    }

    public double getX()
    {
        com.spatial4j.core.shape.jts.JtsPoint r0;
        com.vividsolutions.jts.geom.Point $r1;
        double $d0;

        r0 := @this: com.spatial4j.core.shape.jts.JtsPoint;

        $r1 = r0.<com.spatial4j.core.shape.jts.JtsPoint: com.vividsolutions.jts.geom.Point pointGeom>;

        $d0 = virtualinvoke $r1.<com.vividsolutions.jts.geom.Point: double getX()>();

        return $d0;
    }

    public double getY()
    {
        com.spatial4j.core.shape.jts.JtsPoint r0;
        com.vividsolutions.jts.geom.Point $r1;
        double $d0;

        r0 := @this: com.spatial4j.core.shape.jts.JtsPoint;

        $r1 = r0.<com.spatial4j.core.shape.jts.JtsPoint: com.vividsolutions.jts.geom.Point pointGeom>;

        $d0 = virtualinvoke $r1.<com.vividsolutions.jts.geom.Point: double getY()>();

        return $d0;
    }

    public void reset(double, double)
    {
        com.spatial4j.core.shape.jts.JtsPoint r0;
        com.vividsolutions.jts.geom.CoordinateSequence $r2;
        com.vividsolutions.jts.geom.Point $r1;
        double d0, d1;

        r0 := @this: com.spatial4j.core.shape.jts.JtsPoint;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = r0.<com.spatial4j.core.shape.jts.JtsPoint: com.vividsolutions.jts.geom.Point pointGeom>;

        $r2 = virtualinvoke $r1.<com.vividsolutions.jts.geom.Point: com.vividsolutions.jts.geom.CoordinateSequence getCoordinateSequence()>();

        interfaceinvoke $r2.<com.vividsolutions.jts.geom.CoordinateSequence: void setOrdinate(int,int,double)>(0, 0, d0);

        interfaceinvoke $r2.<com.vividsolutions.jts.geom.CoordinateSequence: void setOrdinate(int,int,double)>(0, 1, d1);

        return;
    }

    public java.lang.String toString()
    {
        com.spatial4j.core.shape.jts.JtsPoint r2;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6;
        java.lang.String $r7;
        double $d0, $d1;

        r2 := @this: com.spatial4j.core.shape.jts.JtsPoint;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pt(x=");

        $d0 = virtualinvoke r2.<com.spatial4j.core.shape.jts.JtsPoint: double getX()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",y=");

        $d1 = virtualinvoke r2.<com.spatial4j.core.shape.jts.JtsPoint: double getY()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r1;
        com.spatial4j.core.shape.jts.JtsPoint r0;
        boolean $z0;

        r0 := @this: com.spatial4j.core.shape.jts.JtsPoint;

        r1 := @parameter0: java.lang.Object;

        $z0 = staticinvoke <com.spatial4j.core.shape.impl.PointImpl: boolean equals(com.spatial4j.core.shape.Point,java.lang.Object)>(r0, r1);

        return $z0;
    }

    public int hashCode()
    {
        int $i0;
        com.spatial4j.core.shape.jts.JtsPoint r0;

        r0 := @this: com.spatial4j.core.shape.jts.JtsPoint;

        $i0 = staticinvoke <com.spatial4j.core.shape.impl.PointImpl: int hashCode(com.spatial4j.core.shape.Point)>(r0);

        return $i0;
    }
}
