public class org.apache.pdfbox.filter.ASCIIHexFilter extends java.lang.Object implements org.apache.pdfbox.filter.Filter
{
    private static final org.apache.commons.logging.Log log;
    private static final int[] REVERSE_HEX;

    public void <init>()
    {
        org.apache.pdfbox.filter.ASCIIHexFilter r0;

        r0 := @this: org.apache.pdfbox.filter.ASCIIHexFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private boolean isWhitespace(int)
    {
        int i0;
        org.apache.pdfbox.filter.ASCIIHexFilter r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.filter.ASCIIHexFilter;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        if i0 == 9 goto label1;

        if i0 == 10 goto label1;

        if i0 == 12 goto label1;

        if i0 == 13 goto label1;

        if i0 != 32 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private boolean isEOD(int)
    {
        int i0;
        org.apache.pdfbox.filter.ASCIIHexFilter r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.filter.ASCIIHexFilter;

        i0 := @parameter0: int;

        if i0 != 62 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void decode(java.io.InputStream, java.io.OutputStream, org.apache.pdfbox.cos.COSDictionary, int) throws java.io.IOException
    {
        int[] $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2;
        org.apache.pdfbox.cos.COSDictionary r21;
        org.apache.pdfbox.filter.ASCIIHexFilter r2;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r16, $r17, $r18, $r19, $r22, $r23;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i8, i9, i10, i11, $i13, $i15, $i17, $i19, $i21;
        java.lang.String $r13, $r20;
        java.io.OutputStream r1;
        char $c6, $c7;
        org.apache.commons.logging.Log $r8, $r15;
        java.io.InputStream r0;

        r2 := @this: org.apache.pdfbox.filter.ASCIIHexFilter;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.io.OutputStream;

        r21 := @parameter2: org.apache.pdfbox.cos.COSDictionary;

        i9 := @parameter3: int;

     label01:
        $i0 = virtualinvoke r0.<java.io.InputStream: int read()>();

        i10 = $i0;

        $i13 = (int) -1;

        if $i0 == $i13 goto label10;

     label02:
        $z0 = specialinvoke r2.<org.apache.pdfbox.filter.ASCIIHexFilter: boolean isWhitespace(int)>(i10);

        if $z0 == 0 goto label03;

        i10 = virtualinvoke r0.<java.io.InputStream: int read()>();

        goto label02;

     label03:
        $i15 = (int) -1;

        if i10 == $i15 goto label10;

        $z1 = specialinvoke r2.<org.apache.pdfbox.filter.ASCIIHexFilter: boolean isEOD(int)>(i10);

        if $z1 == 0 goto label04;

        goto label10;

     label04:
        $r3 = <org.apache.pdfbox.filter.ASCIIHexFilter: int[] REVERSE_HEX>;

        $i1 = $r3[i10];

        $i17 = (int) -1;

        if $i1 != $i17 goto label05;

        $r15 = <org.apache.pdfbox.filter.ASCIIHexFilter: org.apache.commons.logging.Log log>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Hex Code; int: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" char: ");

        $c7 = (char) i10;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r20);

     label05:
        $r4 = <org.apache.pdfbox.filter.ASCIIHexFilter: int[] REVERSE_HEX>;

        $i2 = $r4[i10];

        $i8 = $i2 * 16;

        i11 = $i8;

        $i3 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i19 = (int) -1;

        if $i3 == $i19 goto label06;

        $z2 = specialinvoke r2.<org.apache.pdfbox.filter.ASCIIHexFilter: boolean isEOD(int)>($i3);

        if $z2 == 0 goto label07;

     label06:
        virtualinvoke r1.<java.io.OutputStream: void write(int)>($i8);

        goto label10;

     label07:
        if $i3 < 0 goto label09;

        $r5 = <org.apache.pdfbox.filter.ASCIIHexFilter: int[] REVERSE_HEX>;

        $i4 = $r5[$i3];

        $i21 = (int) -1;

        if $i4 != $i21 goto label08;

        $r8 = <org.apache.pdfbox.filter.ASCIIHexFilter: org.apache.commons.logging.Log log>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Hex Code; int: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" char: ");

        $c6 = (char) $i3;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r13);

     label08:
        $r6 = <org.apache.pdfbox.filter.ASCIIHexFilter: int[] REVERSE_HEX>;

        $i5 = $r6[$i3];

        i11 = $i8 + $i5;

     label09:
        virtualinvoke r1.<java.io.OutputStream: void write(int)>(i11);

        goto label01;

     label10:
        virtualinvoke r1.<java.io.OutputStream: void flush()>();

        return;
    }

    public void encode(java.io.InputStream, java.io.OutputStream, org.apache.pdfbox.cos.COSDictionary, int) throws java.io.IOException
    {
        java.io.OutputStream r1;
        byte[] $r3;
        org.apache.pdfbox.cos.COSDictionary r5;
        byte[][] $r2;
        org.apache.pdfbox.filter.ASCIIHexFilter r4;
        int $i0, $i1, i2, i3, $i5;
        java.io.InputStream r0;

        r4 := @this: org.apache.pdfbox.filter.ASCIIHexFilter;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.io.OutputStream;

        r5 := @parameter2: org.apache.pdfbox.cos.COSDictionary;

        i3 := @parameter3: int;

     label1:
        $i0 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i5 = (int) -1;

        if $i0 == $i5 goto label2;

        $i1 = $i0 + 256;

        i2 = $i1 % 256;

        $r2 = <org.apache.pdfbox.persistence.util.COSHEXTable: byte[][] TABLE>;

        $r3 = $r2[i2];

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r3);

        goto label1;

     label2:
        virtualinvoke r1.<java.io.OutputStream: void flush()>();

        return;
    }

    static void <clinit>()
    {
        int[] $r1;
        int $i1, $i3, $i5, $i7, $i9, $i11, $i13, $i15, $i17, $i19, $i21, $i23, $i25, $i27, $i29, $i31, $i33, $i35, $i37, $i39, $i41, $i43, $i45, $i47, $i49, $i51, $i53, $i55, $i57, $i59, $i61, $i63, $i65, $i67, $i69, $i71, $i73, $i75, $i77, $i79, $i81, $i83, $i85, $i87, $i89, $i91, $i93, $i95, $i97, $i99, $i101, $i103, $i105, $i107, $i109, $i111, $i113, $i115, $i117, $i119, $i121, $i123, $i125, $i127, $i129, $i131, $i133, $i135, $i137, $i139, $i141, $i143, $i145, $i147, $i149, $i151, $i153, $i155, $i157, $i159, $i161;
        org.apache.commons.logging.Log $r0;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/pdfbox/filter/ASCIIHexFilter;");

        <org.apache.pdfbox.filter.ASCIIHexFilter: org.apache.commons.logging.Log log> = $r0;

        $r1 = newarray (int)[103];

        $i1 = (int) -1;

        $r1[0] = $i1;

        $i3 = (int) -1;

        $r1[1] = $i3;

        $i5 = (int) -1;

        $r1[2] = $i5;

        $i7 = (int) -1;

        $r1[3] = $i7;

        $i9 = (int) -1;

        $r1[4] = $i9;

        $i11 = (int) -1;

        $r1[5] = $i11;

        $i13 = (int) -1;

        $r1[6] = $i13;

        $i15 = (int) -1;

        $r1[7] = $i15;

        $i17 = (int) -1;

        $r1[8] = $i17;

        $i19 = (int) -1;

        $r1[9] = $i19;

        $i21 = (int) -1;

        $r1[10] = $i21;

        $i23 = (int) -1;

        $r1[11] = $i23;

        $i25 = (int) -1;

        $r1[12] = $i25;

        $i27 = (int) -1;

        $r1[13] = $i27;

        $i29 = (int) -1;

        $r1[14] = $i29;

        $i31 = (int) -1;

        $r1[15] = $i31;

        $i33 = (int) -1;

        $r1[16] = $i33;

        $i35 = (int) -1;

        $r1[17] = $i35;

        $i37 = (int) -1;

        $r1[18] = $i37;

        $i39 = (int) -1;

        $r1[19] = $i39;

        $i41 = (int) -1;

        $r1[20] = $i41;

        $i43 = (int) -1;

        $r1[21] = $i43;

        $i45 = (int) -1;

        $r1[22] = $i45;

        $i47 = (int) -1;

        $r1[23] = $i47;

        $i49 = (int) -1;

        $r1[24] = $i49;

        $i51 = (int) -1;

        $r1[25] = $i51;

        $i53 = (int) -1;

        $r1[26] = $i53;

        $i55 = (int) -1;

        $r1[27] = $i55;

        $i57 = (int) -1;

        $r1[28] = $i57;

        $i59 = (int) -1;

        $r1[29] = $i59;

        $i61 = (int) -1;

        $r1[30] = $i61;

        $i63 = (int) -1;

        $r1[31] = $i63;

        $i65 = (int) -1;

        $r1[32] = $i65;

        $i67 = (int) -1;

        $r1[33] = $i67;

        $i69 = (int) -1;

        $r1[34] = $i69;

        $i71 = (int) -1;

        $r1[35] = $i71;

        $i73 = (int) -1;

        $r1[36] = $i73;

        $i75 = (int) -1;

        $r1[37] = $i75;

        $i77 = (int) -1;

        $r1[38] = $i77;

        $i79 = (int) -1;

        $r1[39] = $i79;

        $i81 = (int) -1;

        $r1[40] = $i81;

        $i83 = (int) -1;

        $r1[41] = $i83;

        $i85 = (int) -1;

        $r1[42] = $i85;

        $i87 = (int) -1;

        $r1[43] = $i87;

        $i89 = (int) -1;

        $r1[44] = $i89;

        $i91 = (int) -1;

        $r1[45] = $i91;

        $i93 = (int) -1;

        $r1[46] = $i93;

        $i95 = (int) -1;

        $r1[47] = $i95;

        $r1[48] = 0;

        $r1[49] = 1;

        $r1[50] = 2;

        $r1[51] = 3;

        $r1[52] = 4;

        $r1[53] = 5;

        $r1[54] = 6;

        $r1[55] = 7;

        $r1[56] = 8;

        $r1[57] = 9;

        $i97 = (int) -1;

        $r1[58] = $i97;

        $i99 = (int) -1;

        $r1[59] = $i99;

        $i101 = (int) -1;

        $r1[60] = $i101;

        $i103 = (int) -1;

        $r1[61] = $i103;

        $i105 = (int) -1;

        $r1[62] = $i105;

        $i107 = (int) -1;

        $r1[63] = $i107;

        $i109 = (int) -1;

        $r1[64] = $i109;

        $r1[65] = 10;

        $r1[66] = 11;

        $r1[67] = 12;

        $r1[68] = 13;

        $r1[69] = 14;

        $r1[70] = 15;

        $i111 = (int) -1;

        $r1[71] = $i111;

        $i113 = (int) -1;

        $r1[72] = $i113;

        $i115 = (int) -1;

        $r1[73] = $i115;

        $i117 = (int) -1;

        $r1[74] = $i117;

        $i119 = (int) -1;

        $r1[75] = $i119;

        $i121 = (int) -1;

        $r1[76] = $i121;

        $i123 = (int) -1;

        $r1[77] = $i123;

        $i125 = (int) -1;

        $r1[78] = $i125;

        $i127 = (int) -1;

        $r1[79] = $i127;

        $i129 = (int) -1;

        $r1[80] = $i129;

        $i131 = (int) -1;

        $r1[81] = $i131;

        $i133 = (int) -1;

        $r1[82] = $i133;

        $i135 = (int) -1;

        $r1[83] = $i135;

        $i137 = (int) -1;

        $r1[84] = $i137;

        $i139 = (int) -1;

        $r1[85] = $i139;

        $i141 = (int) -1;

        $r1[86] = $i141;

        $i143 = (int) -1;

        $r1[87] = $i143;

        $i145 = (int) -1;

        $r1[88] = $i145;

        $i147 = (int) -1;

        $r1[89] = $i147;

        $i149 = (int) -1;

        $r1[90] = $i149;

        $i151 = (int) -1;

        $r1[91] = $i151;

        $i153 = (int) -1;

        $r1[92] = $i153;

        $i155 = (int) -1;

        $r1[93] = $i155;

        $i157 = (int) -1;

        $r1[94] = $i157;

        $i159 = (int) -1;

        $r1[95] = $i159;

        $i161 = (int) -1;

        $r1[96] = $i161;

        $r1[97] = 10;

        $r1[98] = 11;

        $r1[99] = 12;

        $r1[100] = 13;

        $r1[101] = 14;

        $r1[102] = 15;

        <org.apache.pdfbox.filter.ASCIIHexFilter: int[] REVERSE_HEX> = $r1;

        return;
    }
}
