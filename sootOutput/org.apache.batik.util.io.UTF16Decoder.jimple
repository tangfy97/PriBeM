public class org.apache.batik.util.io.UTF16Decoder extends org.apache.batik.util.io.AbstractCharDecoder
{
    protected boolean bigEndian;

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        org.apache.batik.util.io.UTF16Decoder r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9;
        java.io.InputStream r1;

        r0 := @this: org.apache.batik.util.io.UTF16Decoder;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<org.apache.batik.util.io.AbstractCharDecoder: void <init>(java.io.InputStream)>(r1);

        $i0 = virtualinvoke r1.<java.io.InputStream: int read()>();

        $i7 = (int) -1;

        if $i0 != $i7 goto label1;

        virtualinvoke r0.<org.apache.batik.util.io.AbstractCharDecoder: void endOfStreamError(java.lang.String)>("UTF-16");

     label1:
        $i1 = virtualinvoke r1.<java.io.InputStream: int read()>();

        $i9 = (int) -1;

        if $i1 != $i9 goto label2;

        virtualinvoke r0.<org.apache.batik.util.io.AbstractCharDecoder: void endOfStreamError(java.lang.String)>("UTF-16");

     label2:
        $i2 = $i0 & 255;

        $i4 = $i2 << 8;

        $i3 = $i1 & 255;

        $i5 = $i4 | $i3;

        lookupswitch($i5)
        {
            case 65279: goto label3;
            case 65534: goto label4;
            default: goto label5;
        };

     label3:
        r0.<org.apache.batik.util.io.UTF16Decoder: boolean bigEndian> = 1;

        goto label6;

     label4:
        goto label6;

     label5:
        virtualinvoke r0.<org.apache.batik.util.io.AbstractCharDecoder: void charError(java.lang.String)>("UTF-16");

     label6:
        return;
    }

    public void <init>(java.io.InputStream, boolean)
    {
        org.apache.batik.util.io.UTF16Decoder r0;
        java.io.InputStream r1;
        boolean z0;

        r0 := @this: org.apache.batik.util.io.UTF16Decoder;

        r1 := @parameter0: java.io.InputStream;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.batik.util.io.AbstractCharDecoder: void <init>(java.io.InputStream)>(r1);

        r0.<org.apache.batik.util.io.UTF16Decoder: boolean bigEndian> = z0;

        return;
    }

    public int readChar() throws java.io.IOException
    {
        byte[] $r1, $r2;
        byte b5, $b18;
        boolean $z0;
        org.apache.batik.util.io.UTF16Decoder r0;
        short $s11, $s12, $s15, $s16, $s26, $s28, $s30, $s32;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i13, i14, $i17, $i19, $i21, $i23, $i25, $i27, $i29, $i31, $i33, $i35;

        r0 := @this: org.apache.batik.util.io.UTF16Decoder;

        $i1 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int position>;

        $i0 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int count>;

        if $i1 != $i0 goto label1;

        virtualinvoke r0.<org.apache.batik.util.io.AbstractCharDecoder: void fillBuffer()>();

     label1:
        $i2 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int count>;

        $i21 = (int) -1;

        if $i2 != $i21 goto label2;

        $i23 = (int) -1;

        return $i23;

     label2:
        $r1 = r0.<org.apache.batik.util.io.AbstractCharDecoder: byte[] buffer>;

        $i3 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int position>;

        $i4 = $i3 + 1;

        r0.<org.apache.batik.util.io.AbstractCharDecoder: int position> = $i4;

        b5 = $r1[$i3];

        $i7 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int position>;

        $i6 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int count>;

        if $i7 != $i6 goto label3;

        virtualinvoke r0.<org.apache.batik.util.io.AbstractCharDecoder: void fillBuffer()>();

     label3:
        $i8 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int count>;

        $i25 = (int) -1;

        if $i8 != $i25 goto label4;

        virtualinvoke r0.<org.apache.batik.util.io.AbstractCharDecoder: void endOfStreamError(java.lang.String)>("UTF-16");

     label4:
        $r2 = r0.<org.apache.batik.util.io.AbstractCharDecoder: byte[] buffer>;

        $i9 = r0.<org.apache.batik.util.io.AbstractCharDecoder: int position>;

        $i10 = $i9 + 1;

        r0.<org.apache.batik.util.io.AbstractCharDecoder: int position> = $i10;

        $b18 = $r2[$i9];

        $z0 = r0.<org.apache.batik.util.io.UTF16Decoder: boolean bigEndian>;

        if $z0 == 0 goto label5;

        $s26 = (short) b5;

        $s15 = $s26 & 255;

        $i27 = (int) $s15;

        $i17 = $i27 << 8;

        $s28 = (short) $b18;

        $s16 = $s28 & 255;

        $i29 = (int) $s16;

        $i19 = $i17 | $i29;

        goto label6;

     label5:
        $s30 = (short) $b18;

        $s11 = $s30 & 255;

        $i31 = (int) $s11;

        $i13 = $i31 << 8;

        $s32 = (short) b5;

        $s12 = $s32 & 255;

        $i33 = (int) $s12;

        $i19 = $i13 | $i33;

     label6:
        i14 = $i19;

        $i35 = (int) 65534;

        if $i19 != $i35 goto label7;

        virtualinvoke r0.<org.apache.batik.util.io.AbstractCharDecoder: void charError(java.lang.String)>("UTF-16");

     label7:
        return i14;
    }
}
