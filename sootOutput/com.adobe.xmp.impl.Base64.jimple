public class com.adobe.xmp.impl.Base64 extends java.lang.Object
{
    private static final byte INVALID;
    private static final byte WHITESPACE;
    private static final byte EQUAL;
    private static byte[] base64;
    private static byte[] ascii;

    public void <init>()
    {
        com.adobe.xmp.impl.Base64 r0;

        r0 := @this: com.adobe.xmp.impl.Base64;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final byte[] encode(byte[])
    {
        byte[] r0, $r1;

        r0 := @parameter0: byte[];

        $r1 = staticinvoke <com.adobe.xmp.impl.Base64: byte[] encode(byte[],int)>(r0, 0);

        return $r1;
    }

    public static final byte[] encode(byte[], int)
    {
        byte[] r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        byte $b8, $b11, $b13, $b14, $b17, $b21, $b23, $b25, $b26, $b28, $b31, $b35, $b37, $b39, $b40;
        short $s9, $s15, $s18, $s27, $s29, $s32, $s80, $s82, $s84, $s86, $s88, $s90;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i10, $i12, $i16, $i19, $i20, $i22, $i24, $i30, $i33, $i34, $i36, $i38, $i41, $i42, $i43, $i44, $i45, i46, i47, i48, i49, i50, i51, $i52, $i53, i54, i55, i56, i57, i58, i59, i60, i61, i62, i63, i64, i65, i66, i67, i68, i69, i70, i71, i72, i73, i74, i75, i76, i77, i78, i79, $i81, $i83, $i85, $i87, $i89, $i91;

        r0 := @parameter0: byte[];

        i46 := @parameter1: int;

        $i0 = i46 / 4;

        i47 = $i0 * 4;

        if i47 >= 0 goto label1;

        i47 = 0;

     label1:
        $i1 = lengthof r0;

        $i2 = $i1 + 2;

        $i3 = $i2 / 3;

        $i45 = $i3 * 4;

        i48 = $i45;

        if i47 <= 0 goto label2;

        $i43 = $i45 - 1;

        $i44 = $i43 / i47;

        i48 = $i45 + $i44;

     label2:
        $r10 = newarray (byte)[i48];

        i49 = 0;

        i50 = 0;

        i51 = 0;

     label3:
        $i52 = i50 + 3;

        $i53 = lengthof r0;

        if $i52 > $i53 goto label4;

        i54 = i50 + 1;

        $b26 = r0[i50];

        $s80 = (short) $b26;

        $s27 = $s80 & 255;

        $i81 = (int) $s27;

        i55 = $i81 << 16;

        i56 = i54 + 1;

        $b28 = r0[i54];

        $s82 = (short) $b28;

        $s29 = $s82 & 255;

        $i83 = (int) $s29;

        $i30 = $i83 << 8;

        i57 = i55 | $i30;

        i50 = i56 + 1;

        $b31 = r0[i56];

        $s84 = (short) $b31;

        $s32 = $s84 & 255;

        $i85 = (int) $s32;

        $i33 = $i85 << 0;

        i58 = i57 | $i33;

        $i34 = i58 & 16515072;

        i59 = $i34 >> 18;

        i60 = i49 + 1;

        $r6 = <com.adobe.xmp.impl.Base64: byte[] base64>;

        $b35 = $r6[i59];

        $r10[i49] = $b35;

        $i36 = i58 & 258048;

        i61 = $i36 >> 12;

        i62 = i60 + 1;

        $r7 = <com.adobe.xmp.impl.Base64: byte[] base64>;

        $b37 = $r7[i61];

        $r10[i60] = $b37;

        $i38 = i58 & 4032;

        i63 = $i38 >> 6;

        i64 = i62 + 1;

        $r8 = <com.adobe.xmp.impl.Base64: byte[] base64>;

        $b39 = $r8[i63];

        $r10[i62] = $b39;

        i65 = i58 & 63;

        i49 = i64 + 1;

        $r9 = <com.adobe.xmp.impl.Base64: byte[] base64>;

        $b40 = $r9[i65];

        $r10[i64] = $b40;

        i51 = i51 + 4;

        if i49 >= i48 goto label3;

        if i47 <= 0 goto label3;

        $i41 = i51 % i47;

        if $i41 != 0 goto label3;

        $i42 = i49;

        i49 = i49 + 1;

        $r10[$i42] = 10;

        goto label3;

     label4:
        $i4 = lengthof r0;

        $i5 = $i4 - i50;

        if $i5 != 2 goto label5;

        $b14 = r0[i50];

        $s86 = (short) $b14;

        $s15 = $s86 & 255;

        $i87 = (int) $s15;

        i66 = $i87 << 16;

        $i16 = i50 + 1;

        $b17 = r0[$i16];

        $s88 = (short) $b17;

        $s18 = $s88 & 255;

        $i89 = (int) $s18;

        $i19 = $i89 << 8;

        i67 = i66 | $i19;

        $i20 = i67 & 16515072;

        i68 = $i20 >> 18;

        i69 = i49 + 1;

        $r3 = <com.adobe.xmp.impl.Base64: byte[] base64>;

        $b21 = $r3[i68];

        $r10[i49] = $b21;

        $i22 = i67 & 258048;

        i70 = $i22 >> 12;

        i71 = i69 + 1;

        $r4 = <com.adobe.xmp.impl.Base64: byte[] base64>;

        $b23 = $r4[i70];

        $r10[i69] = $b23;

        $i24 = i67 & 4032;

        i72 = $i24 >> 6;

        i73 = i71 + 1;

        $r5 = <com.adobe.xmp.impl.Base64: byte[] base64>;

        $b25 = $r5[i72];

        $r10[i71] = $b25;

        $r10[i73] = 61;

        goto label6;

     label5:
        $i6 = lengthof r0;

        $i7 = $i6 - i50;

        if $i7 != 1 goto label6;

        $b8 = r0[i50];

        $s90 = (short) $b8;

        $s9 = $s90 & 255;

        $i91 = (int) $s9;

        i74 = $i91 << 16;

        $i10 = i74 & 16515072;

        i75 = $i10 >> 18;

        i76 = i49 + 1;

        $r1 = <com.adobe.xmp.impl.Base64: byte[] base64>;

        $b11 = $r1[i75];

        $r10[i49] = $b11;

        $i12 = i74 & 258048;

        i77 = $i12 >> 12;

        i78 = i76 + 1;

        $r2 = <com.adobe.xmp.impl.Base64: byte[] base64>;

        $b13 = $r2[i77];

        $r10[i76] = $b13;

        i79 = i78 + 1;

        $r10[i78] = 61;

        $r10[i79] = 61;

     label6:
        return $r10;
    }

    public static final java.lang.String encode(java.lang.String)
    {
        byte[] $r2, $r3;
        java.lang.String $r0, r1;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.String;

        $r2 = virtualinvoke r1.<java.lang.String: byte[] getBytes()>();

        $r3 = staticinvoke <com.adobe.xmp.impl.Base64: byte[] encode(byte[])>($r2);

        specialinvoke $r0.<java.lang.String: void <init>(byte[])>($r3);

        return $r0;
    }

    public static final byte[] decode(byte[]) throws java.lang.IllegalArgumentException
    {
        byte[] r0, $r1, $r2;
        byte $b6, $b9, $b14, $b15, $b18, $b23, $b24, $b27, $b32, $b34, $b37, $b42, $b45, $b48, $b49, $b52, $b55, $b56, b60;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i10, $i11, $i12, $i13, $i16, $i17, $i19, $i20, $i21, $i22, $i25, $i26, $i28, $i29, $i30, $i31, $i33, $i35, $i36, $i38, $i39, $i40, $i41, $i43, $i44, $i46, $i47, $i50, $i51, $i53, $i54, $i57, i58, i59, i61, i62, $i63, $i64, i65, $i66, $i67, $i68, $i70, $i71, $i73, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85;
        java.lang.IllegalArgumentException $r4;

        r0 := @parameter0: byte[];

        i58 = 0;

        i59 = 0;

     label1:
        $i0 = lengthof r0;

        if i59 >= $i0 goto label4;

        $r2 = <com.adobe.xmp.impl.Base64: byte[] ascii>;

        $b56 = r0[i59];

        $i66 = (int) $b56;

        b60 = $r2[$i66];

        $i67 = (int) b60;

        if $i67 < 0 goto label2;

        $i57 = i58;

        i58 = i58 + 1;

        r0[$i57] = b60;

        goto label3;

     label2:
        $i68 = (int) b60;

        $i70 = (int) -1;

        if $i68 != $i70 goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid base 64 string");

        throw $r4;

     label3:
        i59 = i59 + 1;

        goto label1;

     label4:
        if i58 <= 0 goto label5;

        $i54 = i58 - 1;

        $b55 = r0[$i54];

        $i71 = (int) $b55;

        $i73 = (int) -3;

        if $i71 != $i73 goto label5;

        $i75 = (int) -1;

        i58 = i58 + $i75;

        goto label4;

     label5:
        $i1 = i58 * 3;

        $i2 = $i1 / 4;

        $r1 = newarray (byte)[$i2];

        i61 = 0;

        i62 = 0;

     label6:
        $i63 = lengthof $r1;

        $i64 = $i63 - 2;

        if i62 >= $i64 goto label7;

        $b24 = r0[i61];

        $i76 = (int) $b24;

        $i25 = $i76 << 2;

        $i30 = $i25 & 255;

        $i26 = i61 + 1;

        $b27 = r0[$i26];

        $i77 = (int) $b27;

        $i28 = $i77 >>> 4;

        $i29 = $i28 & 3;

        $i31 = $i30 | $i29;

        $b32 = (byte) $i31;

        $r1[i62] = $b32;

        $i43 = i62 + 1;

        $i33 = i61 + 1;

        $b34 = r0[$i33];

        $i78 = (int) $b34;

        $i35 = $i78 << 4;

        $i40 = $i35 & 255;

        $i36 = i61 + 2;

        $b37 = r0[$i36];

        $i79 = (int) $b37;

        $i38 = $i79 >>> 2;

        $i39 = $i38 & 15;

        $i41 = $i40 | $i39;

        $b42 = (byte) $i41;

        $r1[$i43] = $b42;

        $i53 = i62 + 2;

        $i44 = i61 + 2;

        $b45 = r0[$i44];

        $i80 = (int) $b45;

        $i46 = $i80 << 6;

        $i50 = $i46 & 255;

        $i47 = i61 + 3;

        $b48 = r0[$i47];

        $b49 = $b48 & 63;

        $i81 = (int) $b49;

        $i51 = $i50 | $i81;

        $b52 = (byte) $i51;

        $r1[$i53] = $b52;

        i61 = i61 + 4;

        i62 = i62 + 3;

        goto label6;

     label7:
        $i3 = lengthof $r1;

        if i62 >= $i3 goto label8;

        $b15 = r0[i61];

        $i82 = (int) $b15;

        $i16 = $i82 << 2;

        $i21 = $i16 & 255;

        $i17 = i61 + 1;

        $b18 = r0[$i17];

        $i83 = (int) $b18;

        $i19 = $i83 >>> 4;

        $i20 = $i19 & 3;

        $i22 = $i21 | $i20;

        $b23 = (byte) $i22;

        $r1[i62] = $b23;

     label8:
        i65 = i62 + 1;

        $i4 = lengthof $r1;

        if i65 >= $i4 goto label9;

        $i5 = i61 + 1;

        $b6 = r0[$i5];

        $i84 = (int) $b6;

        $i7 = $i84 << 4;

        $i12 = $i7 & 255;

        $i8 = i61 + 2;

        $b9 = r0[$i8];

        $i85 = (int) $b9;

        $i10 = $i85 >>> 2;

        $i11 = $i10 & 15;

        $i13 = $i12 | $i11;

        $b14 = (byte) $i13;

        $r1[i65] = $b14;

     label9:
        return $r1;
    }

    public static final java.lang.String decode(java.lang.String)
    {
        byte[] $r2, $r3;
        java.lang.String $r0, r1;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.String;

        $r2 = virtualinvoke r1.<java.lang.String: byte[] getBytes()>();

        $r3 = staticinvoke <com.adobe.xmp.impl.Base64: byte[] decode(byte[])>($r2);

        specialinvoke $r0.<java.lang.String: void <init>(byte[])>($r3);

        return $r0;
    }

    static void <clinit>()
    {
        byte[] $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        byte $b1, $b2;
        int $i0, i3, i4, $i5;

        <com.adobe.xmp.impl.Base64: byte EQUAL> = -3;

        <com.adobe.xmp.impl.Base64: byte WHITESPACE> = -2;

        <com.adobe.xmp.impl.Base64: byte INVALID> = -1;

        $r0 = newarray (byte)[64];

        $r0[0] = 65;

        $r0[1] = 66;

        $r0[2] = 67;

        $r0[3] = 68;

        $r0[4] = 69;

        $r0[5] = 70;

        $r0[6] = 71;

        $r0[7] = 72;

        $r0[8] = 73;

        $r0[9] = 74;

        $r0[10] = 75;

        $r0[11] = 76;

        $r0[12] = 77;

        $r0[13] = 78;

        $r0[14] = 79;

        $r0[15] = 80;

        $r0[16] = 81;

        $r0[17] = 82;

        $r0[18] = 83;

        $r0[19] = 84;

        $r0[20] = 85;

        $r0[21] = 86;

        $r0[22] = 87;

        $r0[23] = 88;

        $r0[24] = 89;

        $r0[25] = 90;

        $r0[26] = 97;

        $r0[27] = 98;

        $r0[28] = 99;

        $r0[29] = 100;

        $r0[30] = 101;

        $r0[31] = 102;

        $r0[32] = 103;

        $r0[33] = 104;

        $r0[34] = 105;

        $r0[35] = 106;

        $r0[36] = 107;

        $r0[37] = 108;

        $r0[38] = 109;

        $r0[39] = 110;

        $r0[40] = 111;

        $r0[41] = 112;

        $r0[42] = 113;

        $r0[43] = 114;

        $r0[44] = 115;

        $r0[45] = 116;

        $r0[46] = 117;

        $r0[47] = 118;

        $r0[48] = 119;

        $r0[49] = 120;

        $r0[50] = 121;

        $r0[51] = 122;

        $r0[52] = 48;

        $r0[53] = 49;

        $r0[54] = 50;

        $r0[55] = 51;

        $r0[56] = 52;

        $r0[57] = 53;

        $r0[58] = 54;

        $r0[59] = 55;

        $r0[60] = 56;

        $r0[61] = 57;

        $r0[62] = 43;

        $r0[63] = 47;

        <com.adobe.xmp.impl.Base64: byte[] base64> = $r0;

        $r1 = newarray (byte)[255];

        <com.adobe.xmp.impl.Base64: byte[] ascii> = $r1;

        i3 = 0;

     label1:
        if i3 >= 255 goto label2;

        $r10 = <com.adobe.xmp.impl.Base64: byte[] ascii>;

        $r10[i3] = -1;

        i3 = i3 + 1;

        goto label1;

     label2:
        i4 = 0;

     label3:
        $r2 = <com.adobe.xmp.impl.Base64: byte[] base64>;

        $i0 = lengthof $r2;

        if i4 >= $i0 goto label4;

        $r9 = <com.adobe.xmp.impl.Base64: byte[] ascii>;

        $r8 = <com.adobe.xmp.impl.Base64: byte[] base64>;

        $b2 = $r8[i4];

        $b1 = (byte) i4;

        $i5 = (int) $b2;

        $r9[$i5] = $b1;

        i4 = i4 + 1;

        goto label3;

     label4:
        $r3 = <com.adobe.xmp.impl.Base64: byte[] ascii>;

        $r3[9] = -2;

        $r4 = <com.adobe.xmp.impl.Base64: byte[] ascii>;

        $r4[10] = -2;

        $r5 = <com.adobe.xmp.impl.Base64: byte[] ascii>;

        $r5[13] = -2;

        $r6 = <com.adobe.xmp.impl.Base64: byte[] ascii>;

        $r6[32] = -2;

        $r7 = <com.adobe.xmp.impl.Base64: byte[] ascii>;

        $r7[61] = -3;

        return;
    }
}
