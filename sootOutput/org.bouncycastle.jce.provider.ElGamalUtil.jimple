public class org.bouncycastle.jce.provider.ElGamalUtil extends java.lang.Object
{

    public void <init>()
    {
        org.bouncycastle.jce.provider.ElGamalUtil r0;

        r0 := @this: org.bouncycastle.jce.provider.ElGamalUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey) throws java.security.InvalidKeyException
    {
        org.bouncycastle.jce.interfaces.ElGamalPublicKey r16;
        org.bouncycastle.jce.spec.ElGamalParameterSpec $r12, $r14;
        java.math.BigInteger $r3, $r6, $r8, $r10, $r13, $r15;
        boolean $z0, $z1;
        java.security.PublicKey r0;
        javax.crypto.spec.DHParameterSpec $r5, $r7;
        javax.crypto.interfaces.DHPublicKey r17;
        org.bouncycastle.crypto.params.ElGamalParameters $r4, $r11;
        java.security.InvalidKeyException $r1;
        org.bouncycastle.crypto.params.ElGamalPublicKeyParameters $r2, $r9;

        r0 := @parameter0: java.security.PublicKey;

        $z0 = r0 instanceof org.bouncycastle.jce.interfaces.ElGamalPublicKey;

        if $z0 == 0 goto label1;

        r16 = (org.bouncycastle.jce.interfaces.ElGamalPublicKey) r0;

        $r9 = new org.bouncycastle.crypto.params.ElGamalPublicKeyParameters;

        $r10 = interfaceinvoke r16.<org.bouncycastle.jce.interfaces.ElGamalPublicKey: java.math.BigInteger getY()>();

        $r11 = new org.bouncycastle.crypto.params.ElGamalParameters;

        $r12 = interfaceinvoke r16.<org.bouncycastle.jce.interfaces.ElGamalPublicKey: org.bouncycastle.jce.spec.ElGamalParameterSpec getParameters()>();

        $r13 = virtualinvoke $r12.<org.bouncycastle.jce.spec.ElGamalParameterSpec: java.math.BigInteger getP()>();

        $r14 = interfaceinvoke r16.<org.bouncycastle.jce.interfaces.ElGamalPublicKey: org.bouncycastle.jce.spec.ElGamalParameterSpec getParameters()>();

        $r15 = virtualinvoke $r14.<org.bouncycastle.jce.spec.ElGamalParameterSpec: java.math.BigInteger getG()>();

        specialinvoke $r11.<org.bouncycastle.crypto.params.ElGamalParameters: void <init>(java.math.BigInteger,java.math.BigInteger)>($r13, $r15);

        specialinvoke $r9.<org.bouncycastle.crypto.params.ElGamalPublicKeyParameters: void <init>(java.math.BigInteger,org.bouncycastle.crypto.params.ElGamalParameters)>($r10, $r11);

        return $r9;

     label1:
        $z1 = r0 instanceof javax.crypto.interfaces.DHPublicKey;

        if $z1 == 0 goto label2;

        r17 = (javax.crypto.interfaces.DHPublicKey) r0;

        $r2 = new org.bouncycastle.crypto.params.ElGamalPublicKeyParameters;

        $r3 = interfaceinvoke r17.<javax.crypto.interfaces.DHPublicKey: java.math.BigInteger getY()>();

        $r4 = new org.bouncycastle.crypto.params.ElGamalParameters;

        $r5 = interfaceinvoke r17.<javax.crypto.interfaces.DHPublicKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r6 = virtualinvoke $r5.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>();

        $r7 = interfaceinvoke r17.<javax.crypto.interfaces.DHPublicKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r8 = virtualinvoke $r7.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getG()>();

        specialinvoke $r4.<org.bouncycastle.crypto.params.ElGamalParameters: void <init>(java.math.BigInteger,java.math.BigInteger)>($r6, $r8);

        specialinvoke $r2.<org.bouncycastle.crypto.params.ElGamalPublicKeyParameters: void <init>(java.math.BigInteger,org.bouncycastle.crypto.params.ElGamalParameters)>($r3, $r4);

        return $r2;

     label2:
        $r1 = new java.security.InvalidKeyException;

        specialinvoke $r1.<java.security.InvalidKeyException: void <init>(java.lang.String)>("can\'t identify public key for El Gamal.");

        throw $r1;
    }

    public static org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey) throws java.security.InvalidKeyException
    {
        org.bouncycastle.jce.spec.ElGamalParameterSpec $r12, $r14;
        javax.crypto.interfaces.DHPrivateKey r17;
        org.bouncycastle.jce.interfaces.ElGamalPrivateKey r16;
        java.math.BigInteger $r3, $r6, $r8, $r10, $r13, $r15;
        boolean $z0, $z1;
        org.bouncycastle.crypto.params.ElGamalPrivateKeyParameters $r2, $r9;
        javax.crypto.spec.DHParameterSpec $r5, $r7;
        java.security.PrivateKey r0;
        org.bouncycastle.crypto.params.ElGamalParameters $r4, $r11;
        java.security.InvalidKeyException $r1;

        r0 := @parameter0: java.security.PrivateKey;

        $z0 = r0 instanceof org.bouncycastle.jce.interfaces.ElGamalPrivateKey;

        if $z0 == 0 goto label1;

        r16 = (org.bouncycastle.jce.interfaces.ElGamalPrivateKey) r0;

        $r9 = new org.bouncycastle.crypto.params.ElGamalPrivateKeyParameters;

        $r10 = interfaceinvoke r16.<org.bouncycastle.jce.interfaces.ElGamalPrivateKey: java.math.BigInteger getX()>();

        $r11 = new org.bouncycastle.crypto.params.ElGamalParameters;

        $r12 = interfaceinvoke r16.<org.bouncycastle.jce.interfaces.ElGamalPrivateKey: org.bouncycastle.jce.spec.ElGamalParameterSpec getParameters()>();

        $r13 = virtualinvoke $r12.<org.bouncycastle.jce.spec.ElGamalParameterSpec: java.math.BigInteger getP()>();

        $r14 = interfaceinvoke r16.<org.bouncycastle.jce.interfaces.ElGamalPrivateKey: org.bouncycastle.jce.spec.ElGamalParameterSpec getParameters()>();

        $r15 = virtualinvoke $r14.<org.bouncycastle.jce.spec.ElGamalParameterSpec: java.math.BigInteger getG()>();

        specialinvoke $r11.<org.bouncycastle.crypto.params.ElGamalParameters: void <init>(java.math.BigInteger,java.math.BigInteger)>($r13, $r15);

        specialinvoke $r9.<org.bouncycastle.crypto.params.ElGamalPrivateKeyParameters: void <init>(java.math.BigInteger,org.bouncycastle.crypto.params.ElGamalParameters)>($r10, $r11);

        return $r9;

     label1:
        $z1 = r0 instanceof javax.crypto.interfaces.DHPrivateKey;

        if $z1 == 0 goto label2;

        r17 = (javax.crypto.interfaces.DHPrivateKey) r0;

        $r2 = new org.bouncycastle.crypto.params.ElGamalPrivateKeyParameters;

        $r3 = interfaceinvoke r17.<javax.crypto.interfaces.DHPrivateKey: java.math.BigInteger getX()>();

        $r4 = new org.bouncycastle.crypto.params.ElGamalParameters;

        $r5 = interfaceinvoke r17.<javax.crypto.interfaces.DHPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r6 = virtualinvoke $r5.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()>();

        $r7 = interfaceinvoke r17.<javax.crypto.interfaces.DHPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r8 = virtualinvoke $r7.<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getG()>();

        specialinvoke $r4.<org.bouncycastle.crypto.params.ElGamalParameters: void <init>(java.math.BigInteger,java.math.BigInteger)>($r6, $r8);

        specialinvoke $r2.<org.bouncycastle.crypto.params.ElGamalPrivateKeyParameters: void <init>(java.math.BigInteger,org.bouncycastle.crypto.params.ElGamalParameters)>($r3, $r4);

        return $r2;

     label2:
        $r1 = new java.security.InvalidKeyException;

        specialinvoke $r1.<java.security.InvalidKeyException: void <init>(java.lang.String)>("can\'t identify private key for El Gamal.");

        throw $r1;
    }
}
