public class org.apache.pdfbox.util.PDFMergerUtility extends java.lang.Object
{
    private static final java.lang.String STRUCTURETYPE_DOCUMENT;
    private java.util.List sources;
    private java.lang.String destinationFileName;
    private java.io.OutputStream destinationStream;
    private boolean ignoreAcroFormErrors;
    private int nextFieldNum;

    public void <init>()
    {
        org.apache.pdfbox.util.PDFMergerUtility r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.pdfbox.util.PDFMergerUtility;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.pdfbox.util.PDFMergerUtility: boolean ignoreAcroFormErrors> = 0;

        r0.<org.apache.pdfbox.util.PDFMergerUtility: int nextFieldNum> = 1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.pdfbox.util.PDFMergerUtility: java.util.List sources> = $r1;

        return;
    }

    public java.lang.String getDestinationFileName()
    {
        java.lang.String $r1;
        org.apache.pdfbox.util.PDFMergerUtility r0;

        r0 := @this: org.apache.pdfbox.util.PDFMergerUtility;

        $r1 = r0.<org.apache.pdfbox.util.PDFMergerUtility: java.lang.String destinationFileName>;

        return $r1;
    }

    public void setDestinationFileName(java.lang.String)
    {
        java.lang.String r1;
        org.apache.pdfbox.util.PDFMergerUtility r0;

        r0 := @this: org.apache.pdfbox.util.PDFMergerUtility;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.pdfbox.util.PDFMergerUtility: java.lang.String destinationFileName> = r1;

        return;
    }

    public java.io.OutputStream getDestinationStream()
    {
        java.io.OutputStream $r1;
        org.apache.pdfbox.util.PDFMergerUtility r0;

        r0 := @this: org.apache.pdfbox.util.PDFMergerUtility;

        $r1 = r0.<org.apache.pdfbox.util.PDFMergerUtility: java.io.OutputStream destinationStream>;

        return $r1;
    }

    public void setDestinationStream(java.io.OutputStream)
    {
        java.io.OutputStream r1;
        org.apache.pdfbox.util.PDFMergerUtility r0;

        r0 := @this: org.apache.pdfbox.util.PDFMergerUtility;

        r1 := @parameter0: java.io.OutputStream;

        r0.<org.apache.pdfbox.util.PDFMergerUtility: java.io.OutputStream destinationStream> = r1;

        return;
    }

    public void addSource(java.lang.String)
    {
        java.util.List $r4;
        java.io.FileInputStream $r1;
        java.lang.String r3;
        java.lang.RuntimeException $r6;
        java.io.File $r2;
        java.lang.Exception $r5;
        org.apache.pdfbox.util.PDFMergerUtility r0;

        r0 := @this: org.apache.pdfbox.util.PDFMergerUtility;

        r3 := @parameter0: java.lang.String;

     label1:
        $r4 = r0.<org.apache.pdfbox.util.PDFMergerUtility: java.util.List sources>;

        $r1 = new java.io.FileInputStream;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r3);

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void addSource(java.io.File)
    {
        java.util.List $r3;
        java.io.FileInputStream $r1;
        java.lang.RuntimeException $r5;
        java.io.File r2;
        java.lang.Exception $r4;
        org.apache.pdfbox.util.PDFMergerUtility r0;

        r0 := @this: org.apache.pdfbox.util.PDFMergerUtility;

        r2 := @parameter0: java.io.File;

     label1:
        $r3 = r0.<org.apache.pdfbox.util.PDFMergerUtility: java.util.List sources>;

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>(r2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void addSource(java.io.InputStream)
    {
        java.util.List $r2;
        org.apache.pdfbox.util.PDFMergerUtility r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.pdfbox.util.PDFMergerUtility;

        r1 := @parameter0: java.io.InputStream;

        $r2 = r0.<org.apache.pdfbox.util.PDFMergerUtility: java.util.List sources>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addSources(java.util.List)
    {
        java.util.List r1, $r2;
        org.apache.pdfbox.util.PDFMergerUtility r0;

        r0 := @this: org.apache.pdfbox.util.PDFMergerUtility;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<org.apache.pdfbox.util.PDFMergerUtility: java.util.List sources>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return;
    }

    public void mergeDocuments() throws java.io.IOException, org.apache.pdfbox.exceptions.COSVisitorException
    {
        org.apache.pdfbox.util.PDFMergerUtility r0;

        r0 := @this: org.apache.pdfbox.util.PDFMergerUtility;

        specialinvoke r0.<org.apache.pdfbox.util.PDFMergerUtility: void mergeDocuments(boolean,org.apache.pdfbox.io.RandomAccess)>(0, null);

        return;
    }

    public void mergeDocumentsNonSeq(org.apache.pdfbox.io.RandomAccess) throws java.io.IOException, org.apache.pdfbox.exceptions.COSVisitorException
    {
        org.apache.pdfbox.io.RandomAccess r1;
        org.apache.pdfbox.util.PDFMergerUtility r0;

        r0 := @this: org.apache.pdfbox.util.PDFMergerUtility;

        r1 := @parameter0: org.apache.pdfbox.io.RandomAccess;

        specialinvoke r0.<org.apache.pdfbox.util.PDFMergerUtility: void mergeDocuments(boolean,org.apache.pdfbox.io.RandomAccess)>(1, r1);

        return;
    }

    private void mergeDocuments(boolean, org.apache.pdfbox.io.RandomAccess) throws java.io.IOException, org.apache.pdfbox.exceptions.COSVisitorException
    {
        java.lang.Throwable $r14;
        java.util.Vector $r3;
        int $i0;
        org.apache.pdfbox.io.RandomAccess r13;
        java.lang.String $r11;
        boolean z0, $z1, $z2, $z3;
        java.io.OutputStream $r7, $r8;
        java.util.Iterator $r5, $r9, $r15;
        org.apache.pdfbox.pdmodel.PDDocument r17, r20, r21, r22;
        java.util.List $r1, $r2, $r4;
        java.lang.Object $r6, $r10, $r12, $r16;
        org.apache.pdfbox.util.PDFMergerUtility r0;
        java.io.InputStream r18, r19;

        r0 := @this: org.apache.pdfbox.util.PDFMergerUtility;

        z0 := @parameter0: boolean;

        r13 := @parameter1: org.apache.pdfbox.io.RandomAccess;

        r17 = null;

        $r1 = r0.<org.apache.pdfbox.util.PDFMergerUtility: java.util.List sources>;

        if $r1 == null goto label12;

        $r2 = r0.<org.apache.pdfbox.util.PDFMergerUtility: java.util.List sources>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 <= 0 goto label12;

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

     label01:
        $r4 = r0.<org.apache.pdfbox.util.PDFMergerUtility: java.util.List sources>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.io.InputStream) $r6;

        if z0 == 0 goto label02;

        r17 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument loadNonSeq(java.io.InputStream,org.apache.pdfbox.io.RandomAccess)>(r18, r13);

        goto label03;

     label02:
        r17 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream)>(r18);

     label03:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r12 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r19 = (java.io.InputStream) $r12;

        if z0 == 0 goto label04;

        r20 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument loadNonSeq(java.io.InputStream,org.apache.pdfbox.io.RandomAccess)>(r19, null);

        goto label05;

     label04:
        r20 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream)>(r19);

     label05:
        virtualinvoke $r3.<java.util.Vector: boolean add(java.lang.Object)>(r20);

        virtualinvoke r0.<org.apache.pdfbox.util.PDFMergerUtility: void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)>(r17, r20);

        goto label03;

     label06:
        $r7 = r0.<org.apache.pdfbox.util.PDFMergerUtility: java.io.OutputStream destinationStream>;

        if $r7 != null goto label07;

        $r11 = r0.<org.apache.pdfbox.util.PDFMergerUtility: java.lang.String destinationFileName>;

        virtualinvoke r17.<org.apache.pdfbox.pdmodel.PDDocument: void save(java.lang.String)>($r11);

        goto label08;

     label07:
        $r8 = r0.<org.apache.pdfbox.util.PDFMergerUtility: java.io.OutputStream destinationStream>;

        virtualinvoke r17.<org.apache.pdfbox.pdmodel.PDDocument: void save(java.io.OutputStream)>($r8);

     label08:
        goto label13;

     label09:
        goto label12;

     label10:
        $r14 := @caughtexception;

        goto label17;

     label11:
        throw $r14;

     label12:
        return;

     label13:
        if r17 == null goto label14;

        virtualinvoke r17.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label14:
        $r9 = virtualinvoke $r3.<java.util.Vector: java.util.Iterator iterator()>();

     label15:
        $z2 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label16;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r21 = (org.apache.pdfbox.pdmodel.PDDocument) $r10;

        virtualinvoke r21.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

        goto label15;

     label16:
        goto label09;

     label17:
        if r17 == null goto label18;

        virtualinvoke r17.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label18:
        $r15 = virtualinvoke $r3.<java.util.Vector: java.util.Iterator iterator()>();

     label19:
        $z3 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label20;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r22 = (org.apache.pdfbox.pdmodel.PDDocument) $r16;

        virtualinvoke r22.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

        goto label19;

     label20:
        goto label11;

        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void appendDocument(org.apache.pdfbox.pdmodel.PDDocument, org.apache.pdfbox.pdmodel.PDDocument) throws java.io.IOException
    {
        byte $b0;
        org.apache.pdfbox.pdmodel.PDDocument r0, r1;
        org.apache.pdfbox.cos.COSBase $r13, $r15, $r18, $r20, $r23, $r26, $r27, $r32, $r35, $r44, $r48, $r65, $r69, $r76, $r78, $r79, $r81, $r82, $r93, $r96, $r100, $r127, $r131;
        org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline $r119, $r120, $r150;
        long $l6, $l16, $l17, l20;
        org.apache.pdfbox.cos.COSString $r160;
        org.apache.pdfbox.cos.COSDocument $r8, $r9, $r109;
        org.apache.pdfbox.pdmodel.common.PDNumberTreeNode $r62, $r66, $r157;
        java.io.IOException $r115, $r147, $r148;
        org.apache.pdfbox.pdmodel.common.PDStream $r154;
        org.apache.pdfbox.cos.COSDictionary $r4, $r5, $r11, $r16, $r21, $r24, $r30, $r33, $r47, $r49, $r52, $r53, $r58, $r61, $r63, $r67, $r73, $r86, $r89, $r90, $r94, $r97, $r98, $r101, $r105, $r106, $r107, $r108, $r125, $r129, r133, $r152, $r158;
        org.apache.pdfbox.cos.COSArray $r41, $r42, $r88, $r113, $r114, r123, r134, r135, $r153, $r159;
        org.apache.pdfbox.pdmodel.PDDocumentNameDictionary $r28, $r29;
        int $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i18, i19, i21, i22, i23, i24, $i25, $i27;
        org.apache.pdfbox.cos.COSStream $r72, $r128, $r132;
        org.apache.pdfbox.cos.COSName $r12, $r14, $r17, $r19, $r22, $r25, $r31, $r34, $r37, $r64, $r68, $r74, $r75, $r77, $r85, $r87, $r99, $r102, $r103, $r126, $r130, $r143, $r144, $r145;
        org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot $r137, $r138;
        java.lang.Object $r45, $r56, $r59;
        org.apache.pdfbox.pdmodel.common.PDDestinationOrAction $r10, $r104;
        java.lang.Exception $r112;
        org.apache.pdfbox.pdmodel.PDPage r142, $r156;
        org.apache.pdfbox.util.PDFCloneUtility $r149;
        java.lang.String $r121, $r122;
        org.apache.pdfbox.pdmodel.PDDocumentCatalog $r6, $r7;
        org.apache.pdfbox.pdmodel.PDDocumentInformation $r2, $r3;
        org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation $r57, $r60;
        org.apache.pdfbox.util.PDFMergerUtility r36;
        org.apache.pdfbox.cos.COSNumber r124;
        boolean $z0, $z1, $z2, $z3, z4, $z5, z6, z7, z8, z9, z10;
        org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem $r91, $r151;
        java.util.List $r54, $r55, $r139;
        float $f0, $f1;
        java.util.HashMap $r155;
        org.apache.pdfbox.cos.COSInteger $r43, $r80;
        org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo $r136;
        java.util.Iterator $r140;
        org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm $r117, $r118;
        org.apache.pdfbox.pdmodel.common.PDRectangle $r50, $r51;
        java.io.InputStream $r71;

        r36 := @this: org.apache.pdfbox.util.PDFMergerUtility;

        r0 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        r1 := @parameter1: org.apache.pdfbox.pdmodel.PDDocument;

        $z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: boolean isEncrypted()>();

        if $z0 == 0 goto label01;

        $r147 = new java.io.IOException;

        specialinvoke $r147.<java.io.IOException: void <init>(java.lang.String)>("Error: destination PDF is encrypted, can\'t append encrypted PDF documents.");

        throw $r147;

     label01:
        $z1 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: boolean isEncrypted()>();

        if $z1 == 0 goto label02;

        $r148 = new java.io.IOException;

        specialinvoke $r148.<java.io.IOException: void <init>(java.lang.String)>("Error: source PDF is encrypted, can\'t append encrypted PDF documents.");

        throw $r148;

     label02:
        $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentInformation getDocumentInformation()>();

        $r3 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentInformation getDocumentInformation()>();

        $r4 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDDocumentInformation: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        $r5 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDDocumentInformation: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: void mergeInto(org.apache.pdfbox.cos.COSDictionary)>($r5);

        $r6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r7 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r8 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>();

        $f0 = virtualinvoke $r8.<org.apache.pdfbox.cos.COSDocument: float getVersion()>();

        $r9 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>();

        $f1 = virtualinvoke $r9.<org.apache.pdfbox.cos.COSDocument: float getVersion()>();

        $b0 = $f0 cmpg $f1;

        $i25 = (int) $b0;

        if $i25 >= 0 goto label03;

        $r109 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>();

        virtualinvoke $r109.<org.apache.pdfbox.cos.COSDocument: void setVersion(float)>($f1);

     label03:
        $r10 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.common.PDDestinationOrAction getOpenAction()>();

        if $r10 != null goto label04;

        $r104 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.common.PDDestinationOrAction getOpenAction()>();

        virtualinvoke $r6.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: void setOpenAction(org.apache.pdfbox.pdmodel.common.PDDestinationOrAction)>($r104);

     label04:
        $r11 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PAGES>;

        $r13 = virtualinvoke $r11.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r12);

        $r105 = (org.apache.pdfbox.cos.COSDictionary) $r13;

        $r14 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RESOURCES>;

        $r15 = virtualinvoke $r105.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r14);

        $r106 = (org.apache.pdfbox.cos.COSDictionary) $r15;

        $r16 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r17 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PAGES>;

        $r18 = virtualinvoke $r16.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r17);

        $r107 = (org.apache.pdfbox.cos.COSDictionary) $r18;

        $r19 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RESOURCES>;

        $r20 = virtualinvoke $r107.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r19);

        $r108 = (org.apache.pdfbox.cos.COSDictionary) $r20;

        if $r106 == null goto label06;

        if $r108 == null goto label05;

        virtualinvoke $r108.<org.apache.pdfbox.cos.COSDictionary: void mergeInto(org.apache.pdfbox.cos.COSDictionary)>($r106);

        goto label06;

     label05:
        $r103 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RESOURCES>;

        virtualinvoke $r107.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r103, $r106);

     label06:
        $r149 = new org.apache.pdfbox.util.PDFCloneUtility;

        specialinvoke $r149.<org.apache.pdfbox.util.PDFCloneUtility: void <init>(org.apache.pdfbox.pdmodel.PDDocument)>(r0);

     label07:
        $r117 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm getAcroForm()>();

        $r118 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm getAcroForm()>();

        if $r117 != null goto label08;

        virtualinvoke $r149.<org.apache.pdfbox.util.PDFCloneUtility: org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)>($r118);

        virtualinvoke $r6.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: void setAcroForm(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)>($r118);

        goto label09;

     label08:
        if $r118 == null goto label09;

        specialinvoke r36.<org.apache.pdfbox.util.PDFMergerUtility: void mergeAcroForm(org.apache.pdfbox.util.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)>($r149, $r117, $r118);

     label09:
        goto label11;

     label10:
        $r112 := @caughtexception;

        $z3 = r36.<org.apache.pdfbox.util.PDFMergerUtility: boolean ignoreAcroFormErrors>;

        if $z3 != 0 goto label11;

        $r115 = (java.io.IOException) $r112;

        throw $r115;

     label11:
        $r21 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r22 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName THREADS>;

        $r23 = virtualinvoke $r21.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r22);

        $r113 = (org.apache.pdfbox.cos.COSArray) $r23;

        $r24 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r25 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName THREADS>;

        $r26 = virtualinvoke $r24.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r25);

        $r27 = virtualinvoke $r149.<org.apache.pdfbox.util.PDFCloneUtility: org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)>($r26);

        $r114 = (org.apache.pdfbox.cos.COSArray) $r27;

        if $r113 != null goto label12;

        $r101 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r102 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName THREADS>;

        virtualinvoke $r101.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r102, $r114);

        goto label13;

     label12:
        virtualinvoke $r113.<org.apache.pdfbox.cos.COSArray: void addAll(org.apache.pdfbox.cos.COSArray)>($r114);

     label13:
        $r28 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDDocumentNameDictionary getNames()>();

        $r29 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDDocumentNameDictionary getNames()>();

        if $r29 == null goto label15;

        if $r28 != null goto label14;

        $r98 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r99 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NAMES>;

        $r100 = virtualinvoke $r149.<org.apache.pdfbox.util.PDFCloneUtility: org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)>($r29);

        virtualinvoke $r98.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r99, $r100);

        goto label15;

     label14:
        virtualinvoke $r149.<org.apache.pdfbox.util.PDFCloneUtility: void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r29, $r28);

     label15:
        $r119 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline getDocumentOutline()>();

        $r120 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline getDocumentOutline()>();

        if $r120 == null goto label17;

        if $r119 != null goto label16;

        $r150 = new org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline;

        $r96 = virtualinvoke $r149.<org.apache.pdfbox.util.PDFCloneUtility: org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)>($r120);

        $r97 = (org.apache.pdfbox.cos.COSDictionary) $r96;

        specialinvoke $r150.<org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline: void <init>(org.apache.pdfbox.cos.COSDictionary)>($r97);

        virtualinvoke $r6.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: void setDocumentOutline(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline)>($r150);

        goto label17;

     label16:
        $r91 = virtualinvoke $r120.<org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline: org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem getFirstChild()>();

        if $r91 == null goto label17;

        $r151 = new org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem;

        $r93 = virtualinvoke $r149.<org.apache.pdfbox.util.PDFCloneUtility: org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)>($r91);

        $r94 = (org.apache.pdfbox.cos.COSDictionary) $r93;

        specialinvoke $r151.<org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem: void <init>(org.apache.pdfbox.cos.COSDictionary)>($r94);

        virtualinvoke $r119.<org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline: void appendChild(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem)>($r151);

     label17:
        $r121 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: java.lang.String getPageMode()>();

        $r122 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: java.lang.String getPageMode()>();

        if $r121 != null goto label18;

        virtualinvoke $r6.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: void setPageMode(java.lang.String)>($r122);

     label18:
        $r30 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r31 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PAGE_LABELS>;

        $r32 = virtualinvoke $r30.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r31);

        $r89 = (org.apache.pdfbox.cos.COSDictionary) $r32;

        $r33 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r34 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PAGE_LABELS>;

        $r35 = virtualinvoke $r33.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r34);

        $r90 = (org.apache.pdfbox.cos.COSDictionary) $r35;

        if $r90 == null goto label22;

        $i13 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: int getNumberOfPages()>();

        if $r89 != null goto label19;

        $r152 = new org.apache.pdfbox.cos.COSDictionary;

        specialinvoke $r152.<org.apache.pdfbox.cos.COSDictionary: void <init>()>();

        $r153 = new org.apache.pdfbox.cos.COSArray;

        specialinvoke $r153.<org.apache.pdfbox.cos.COSArray: void <init>()>();

        r123 = $r153;

        $r85 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NUMS>;

        virtualinvoke $r152.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r85, $r153);

        $r86 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r87 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PAGE_LABELS>;

        virtualinvoke $r86.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r87, $r152);

        goto label20;

     label19:
        $r75 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NUMS>;

        $r76 = virtualinvoke $r89.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r75);

        r123 = (org.apache.pdfbox.cos.COSArray) $r76;

     label20:
        $r77 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NUMS>;

        $r78 = virtualinvoke $r90.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r77);

        $r88 = (org.apache.pdfbox.cos.COSArray) $r78;

        if $r88 == null goto label22;

        i19 = 0;

     label21:
        $i14 = virtualinvoke $r88.<org.apache.pdfbox.cos.COSArray: int size()>();

        if i19 >= $i14 goto label22;

        $r79 = virtualinvoke $r88.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i19);

        r124 = (org.apache.pdfbox.cos.COSNumber) $r79;

        $i15 = virtualinvoke r124.<org.apache.pdfbox.cos.COSNumber: int intValue()>();

        l20 = (long) $i15;

        $l16 = (long) $i13;

        $l17 = l20 + $l16;

        $r80 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l17);

        virtualinvoke r123.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r80);

        $i18 = i19 + 1;

        $r81 = virtualinvoke $r88.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>($i18);

        $r82 = virtualinvoke $r149.<org.apache.pdfbox.util.PDFCloneUtility: org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)>($r81);

        virtualinvoke r123.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r82);

        i19 = i19 + 2;

        goto label21;

     label22:
        $r125 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r126 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName METADATA>;

        $r127 = virtualinvoke $r125.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r126);

        $r128 = (org.apache.pdfbox.cos.COSStream) $r127;

        $r129 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r130 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName METADATA>;

        $r131 = virtualinvoke $r129.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r130);

        $r132 = (org.apache.pdfbox.cos.COSStream) $r131;

        if $r128 != null goto label23;

        if $r132 == null goto label23;

        $r154 = new org.apache.pdfbox.pdmodel.common.PDStream;

        $r71 = virtualinvoke $r132.<org.apache.pdfbox.cos.COSStream: java.io.InputStream getUnfilteredStream()>();

        specialinvoke $r154.<org.apache.pdfbox.pdmodel.common.PDStream: void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,boolean)>(r0, $r71, 0);

        $r72 = virtualinvoke $r154.<org.apache.pdfbox.pdmodel.common.PDStream: org.apache.pdfbox.cos.COSStream getStream()>();

        virtualinvoke $r72.<org.apache.pdfbox.cos.COSStream: void mergeInto(org.apache.pdfbox.cos.COSDictionary)>($r132);

        virtualinvoke $r154.<org.apache.pdfbox.pdmodel.common.PDStream: void addCompression()>();

        $r73 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r74 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName METADATA>;

        virtualinvoke $r73.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r74, $r154);

     label23:
        z4 = 0;

        z10 = 0;

        z9 = 0;

        z8 = 0;

        z7 = 0;

        z6 = 0;

        $i27 = (int) -1;

        i21 = $i27;

        r133 = null;

        r134 = null;

        r135 = null;

        $r136 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo getMarkInfo()>();

        $r137 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot getStructureTreeRoot()>();

        virtualinvoke $r7.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo getMarkInfo()>();

        $r138 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot getStructureTreeRoot()>();

        if $r137 == null goto label27;

        $r62 = virtualinvoke $r137.<org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot: org.apache.pdfbox.pdmodel.common.PDNumberTreeNode getParentTree()>();

        $i11 = virtualinvoke $r137.<org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot: int getParentTreeNextKey()>();

        i21 = $i11;

        if $r62 == null goto label25;

        $r63 = virtualinvoke $r62.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        r133 = $r63;

        $r64 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NUMS>;

        $r65 = virtualinvoke $r63.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r64);

        r134 = (org.apache.pdfbox.cos.COSArray) $r65;

        if r134 == null goto label25;

        if $i11 >= 0 goto label24;

        $i12 = virtualinvoke r134.<org.apache.pdfbox.cos.COSArray: int size()>();

        i21 = $i12 / 2;

     label24:
        if i21 <= 0 goto label25;

        if $r138 == null goto label25;

        $r66 = virtualinvoke $r138.<org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot: org.apache.pdfbox.pdmodel.common.PDNumberTreeNode getParentTree()>();

        if $r66 == null goto label25;

        $r67 = virtualinvoke $r66.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r68 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NUMS>;

        $r69 = virtualinvoke $r67.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r68);

        r135 = (org.apache.pdfbox.cos.COSArray) $r69;

        if r135 == null goto label25;

        z4 = 1;

        z10 = 1;

        z9 = 1;

        z8 = 1;

        z7 = 1;

        z6 = 1;

     label25:
        if $r136 == null goto label26;

        $z2 = virtualinvoke $r136.<org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo: boolean isMarked()>();

        if $z2 == 0 goto label26;

        if z6 != 0 goto label26;

        virtualinvoke $r136.<org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo: void setMarked(boolean)>(0);

     label26:
        if z9 != 0 goto label27;

        virtualinvoke $r6.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: void setStructureTreeRoot(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)>(null);

     label27:
        $r139 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: java.util.List getAllPages()>();

        $r140 = interfaceinvoke $r139.<java.util.List: java.util.Iterator iterator()>();

        $r155 = new java.util.HashMap;

        specialinvoke $r155.<java.util.HashMap: void <init>()>();

     label28:
        $z5 = interfaceinvoke $r140.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label31;

        $r45 = interfaceinvoke $r140.<java.util.Iterator: java.lang.Object next()>();

        r142 = (org.apache.pdfbox.pdmodel.PDPage) $r45;

        $r156 = new org.apache.pdfbox.pdmodel.PDPage;

        $r47 = virtualinvoke r142.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r48 = virtualinvoke $r149.<org.apache.pdfbox.util.PDFCloneUtility: org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)>($r47);

        $r49 = (org.apache.pdfbox.cos.COSDictionary) $r48;

        specialinvoke $r156.<org.apache.pdfbox.pdmodel.PDPage: void <init>(org.apache.pdfbox.cos.COSDictionary)>($r49);

        $r50 = virtualinvoke r142.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDRectangle findCropBox()>();

        virtualinvoke $r156.<org.apache.pdfbox.pdmodel.PDPage: void setCropBox(org.apache.pdfbox.pdmodel.common.PDRectangle)>($r50);

        $r51 = virtualinvoke r142.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDRectangle findMediaBox()>();

        virtualinvoke $r156.<org.apache.pdfbox.pdmodel.PDPage: void setMediaBox(org.apache.pdfbox.pdmodel.common.PDRectangle)>($r51);

        $i9 = virtualinvoke r142.<org.apache.pdfbox.pdmodel.PDPage: int findRotation()>();

        virtualinvoke $r156.<org.apache.pdfbox.pdmodel.PDPage: void setRotation(int)>($i9);

        if z7 == 0 goto label30;

        specialinvoke r36.<org.apache.pdfbox.util.PDFMergerUtility: void updateStructParentEntries(org.apache.pdfbox.pdmodel.PDPage,int)>($r156, i21);

        $r52 = virtualinvoke r142.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r53 = virtualinvoke $r156.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        virtualinvoke $r155.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r52, $r53);

        $r54 = virtualinvoke r142.<org.apache.pdfbox.pdmodel.PDPage: java.util.List getAnnotations()>();

        $r55 = virtualinvoke $r156.<org.apache.pdfbox.pdmodel.PDPage: java.util.List getAnnotations()>();

        i22 = 0;

     label29:
        $i10 = interfaceinvoke $r54.<java.util.List: int size()>();

        if i22 >= $i10 goto label30;

        $r56 = interfaceinvoke $r54.<java.util.List: java.lang.Object get(int)>(i22);

        $r57 = (org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation) $r56;

        $r58 = virtualinvoke $r57.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        $r59 = interfaceinvoke $r55.<java.util.List: java.lang.Object get(int)>(i22);

        $r60 = (org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation) $r59;

        $r61 = virtualinvoke $r60.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        virtualinvoke $r155.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r58, $r61);

        i22 = i22 + 1;

        goto label29;

     label30:
        virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: void addPage(org.apache.pdfbox.pdmodel.PDPage)>($r156);

        goto label28;

     label31:
        if z8 == 0 goto label36;

        specialinvoke r36.<org.apache.pdfbox.util.PDFMergerUtility: void updatePageReferences(org.apache.pdfbox.cos.COSArray,java.util.HashMap)>(r135, $r155);

        i23 = 0;

     label32:
        $i1 = virtualinvoke r135.<org.apache.pdfbox.cos.COSArray: int size()>();

        $i2 = $i1 / 2;

        if i23 >= $i2 goto label33;

        $i5 = i21 + i23;

        $l6 = (long) $i5;

        $r43 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l6);

        virtualinvoke r134.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r43);

        $i7 = i23 * 2;

        $i8 = $i7 + 1;

        $r44 = virtualinvoke r135.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>($i8);

        virtualinvoke r134.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r44);

        i23 = i23 + 1;

        goto label32;

     label33:
        $i3 = virtualinvoke r135.<org.apache.pdfbox.cos.COSArray: int size()>();

        $i4 = $i3 / 2;

        i24 = i21 + $i4;

        $r37 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName NUMS>;

        virtualinvoke r133.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r37, r134);

        $r157 = new org.apache.pdfbox.pdmodel.common.PDNumberTreeNode;

        specialinvoke $r157.<org.apache.pdfbox.pdmodel.common.PDNumberTreeNode: void <init>(org.apache.pdfbox.cos.COSDictionary,java.lang.Class)>(r133, class "Lorg/apache/pdfbox/cos/COSBase;");

        virtualinvoke $r137.<org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot: void setParentTree(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode)>($r157);

        virtualinvoke $r137.<org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot: void setParentTreeNextKey(int)>(i24);

        $r158 = new org.apache.pdfbox.cos.COSDictionary;

        specialinvoke $r158.<org.apache.pdfbox.cos.COSDictionary: void <init>()>();

        $r159 = new org.apache.pdfbox.cos.COSArray;

        specialinvoke $r159.<org.apache.pdfbox.cos.COSArray: void <init>()>();

        $r41 = virtualinvoke $r137.<org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot: org.apache.pdfbox.cos.COSArray getKArray()>();

        $r42 = virtualinvoke $r138.<org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot: org.apache.pdfbox.cos.COSArray getKArray()>();

        if $r41 == null goto label35;

        if $r42 == null goto label35;

        specialinvoke r36.<org.apache.pdfbox.util.PDFMergerUtility: void updateParentEntry(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.cos.COSDictionary)>($r41, $r158);

        virtualinvoke $r159.<org.apache.pdfbox.cos.COSArray: void addAll(org.apache.pdfbox.cos.COSArray)>($r41);

        if z10 == 0 goto label34;

        specialinvoke r36.<org.apache.pdfbox.util.PDFMergerUtility: void updateParentEntry(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.cos.COSDictionary)>($r42, $r158);

     label34:
        virtualinvoke $r159.<org.apache.pdfbox.cos.COSArray: void addAll(org.apache.pdfbox.cos.COSArray)>($r42);

     label35:
        $r143 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName K>;

        virtualinvoke $r158.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r143, $r159);

        $r144 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName P>;

        virtualinvoke $r158.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r144, $r137);

        $r145 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName S>;

        $r160 = new org.apache.pdfbox.cos.COSString;

        specialinvoke $r160.<org.apache.pdfbox.cos.COSString: void <init>(java.lang.String)>("Document");

        virtualinvoke $r158.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r145, $r160);

        virtualinvoke $r137.<org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot: void setK(org.apache.pdfbox.cos.COSBase)>($r158);

     label36:
        return;

        catch java.lang.Exception from label07 to label09 with label10;
    }

    private void mergeAcroForm(org.apache.pdfbox.util.PDFCloneUtility, org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm, org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.common.COSArrayList $r19;
        org.apache.pdfbox.pdmodel.interactive.form.PDField r6, $r11, $r13;
        org.apache.pdfbox.util.PDFCloneUtility r7;
        int $i0, $i1;
        java.lang.String $r12, $r18;
        boolean $z0;
        java.util.Iterator $r4;
        org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm r0, r2;
        org.apache.pdfbox.cos.COSDictionary $r8, $r10;
        java.util.List $r1, $r3, r20;
        org.apache.pdfbox.cos.COSBase $r9;
        java.lang.Object $r5;
        java.lang.StringBuilder $r14, $r15, $r17;
        org.apache.pdfbox.util.PDFMergerUtility r16;

        r16 := @this: org.apache.pdfbox.util.PDFMergerUtility;

        r7 := @parameter0: org.apache.pdfbox.util.PDFCloneUtility;

        r0 := @parameter1: org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm;

        r2 := @parameter2: org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: java.util.List getFields()>();

        r20 = $r1;

        $r3 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: java.util.List getFields()>();

        if $r3 == null goto label4;

        if $r1 != null goto label1;

        $r19 = new org.apache.pdfbox.pdmodel.common.COSArrayList;

        specialinvoke $r19.<org.apache.pdfbox.pdmodel.common.COSArrayList: void <init>()>();

        r20 = $r19;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: void setFields(java.util.List)>($r19);

     label1:
        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.pdfbox.pdmodel.interactive.form.PDField) $r5;

        $r8 = virtualinvoke r6.<org.apache.pdfbox.pdmodel.interactive.form.PDField: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        $r9 = virtualinvoke r7.<org.apache.pdfbox.util.PDFCloneUtility: org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)>($r8);

        $r10 = (org.apache.pdfbox.cos.COSDictionary) $r9;

        $r11 = staticinvoke <org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory: org.apache.pdfbox.pdmodel.interactive.form.PDField createField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary)>(r0, $r10);

        $r12 = virtualinvoke $r11.<org.apache.pdfbox.pdmodel.interactive.form.PDField: java.lang.String getFullyQualifiedName()>();

        $r13 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: org.apache.pdfbox.pdmodel.interactive.form.PDField getField(java.lang.String)>($r12);

        if $r13 == null goto label3;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dummyFieldName");

        $i0 = r16.<org.apache.pdfbox.util.PDFMergerUtility: int nextFieldNum>;

        $i1 = $i0 + 1;

        r16.<org.apache.pdfbox.util.PDFMergerUtility: int nextFieldNum> = $i1;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<org.apache.pdfbox.pdmodel.interactive.form.PDField: void setPartialName(java.lang.String)>($r18);

     label3:
        interfaceinvoke r20.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label2;

     label4:
        return;
    }

    public boolean isIgnoreAcroFormErrors()
    {
        org.apache.pdfbox.util.PDFMergerUtility r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.util.PDFMergerUtility;

        $z0 = r0.<org.apache.pdfbox.util.PDFMergerUtility: boolean ignoreAcroFormErrors>;

        return $z0;
    }

    public void setIgnoreAcroFormErrors(boolean)
    {
        org.apache.pdfbox.util.PDFMergerUtility r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.util.PDFMergerUtility;

        z0 := @parameter0: boolean;

        r0.<org.apache.pdfbox.util.PDFMergerUtility: boolean ignoreAcroFormErrors> = z0;

        return;
    }

    private void updatePageReferences(org.apache.pdfbox.cos.COSDictionary, java.util.HashMap)
    {
        org.apache.pdfbox.cos.COSArray $r6;
        java.util.HashMap r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.pdfbox.cos.COSName $r1, $r7, $r10, $r13, $r15;
        org.apache.pdfbox.cos.COSDictionary r0, $r5;
        org.apache.pdfbox.cos.COSBase $r2, $r9, $r12, $r14, $r16;
        java.lang.Object $r8, $r11;
        org.apache.pdfbox.util.PDFMergerUtility r3;

        r3 := @this: org.apache.pdfbox.util.PDFMergerUtility;

        r0 := @parameter0: org.apache.pdfbox.cos.COSDictionary;

        r4 := @parameter1: java.util.HashMap;

        $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PG>;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1);

        $z0 = $r2 instanceof org.apache.pdfbox.cos.COSDictionary;

        if $z0 == 0 goto label1;

        $z3 = virtualinvoke r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r2);

        if $z3 == 0 goto label1;

        $r10 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PG>;

        $r11 = virtualinvoke r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r12 = (org.apache.pdfbox.cos.COSBase) $r11;

        virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r10, $r12);

     label1:
        $r13 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OBJ>;

        $r14 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r13);

        $z4 = $r14 instanceof org.apache.pdfbox.cos.COSDictionary;

        if $z4 == 0 goto label2;

        $z2 = virtualinvoke r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r14);

        if $z2 == 0 goto label2;

        $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName OBJ>;

        $r8 = virtualinvoke r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r14);

        $r9 = (org.apache.pdfbox.cos.COSBase) $r8;

        virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r7, $r9);

     label2:
        $r15 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName K>;

        $r16 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r15);

        $z5 = $r16 instanceof org.apache.pdfbox.cos.COSArray;

        if $z5 == 0 goto label3;

        $r6 = (org.apache.pdfbox.cos.COSArray) $r16;

        specialinvoke r3.<org.apache.pdfbox.util.PDFMergerUtility: void updatePageReferences(org.apache.pdfbox.cos.COSArray,java.util.HashMap)>($r6, r4);

        goto label4;

     label3:
        $z1 = $r16 instanceof org.apache.pdfbox.cos.COSDictionary;

        if $z1 == 0 goto label4;

        $r5 = (org.apache.pdfbox.cos.COSDictionary) $r16;

        specialinvoke r3.<org.apache.pdfbox.util.PDFMergerUtility: void updatePageReferences(org.apache.pdfbox.cos.COSDictionary,java.util.HashMap)>($r5, r4);

     label4:
        return;
    }

    private void updatePageReferences(org.apache.pdfbox.cos.COSArray, java.util.HashMap)
    {
        org.apache.pdfbox.cos.COSArray r0, $r5;
        java.util.HashMap r3;
        org.apache.pdfbox.cos.COSDictionary $r4;
        org.apache.pdfbox.cos.COSBase $r1;
        int $i0, i1;
        boolean $z0, $z1;
        org.apache.pdfbox.util.PDFMergerUtility r2;

        r2 := @this: org.apache.pdfbox.util.PDFMergerUtility;

        r0 := @parameter0: org.apache.pdfbox.cos.COSArray;

        r3 := @parameter1: java.util.HashMap;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: int size()>();

        if i1 >= $i0 goto label4;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i1);

        $z0 = $r1 instanceof org.apache.pdfbox.cos.COSArray;

        if $z0 == 0 goto label2;

        $r5 = (org.apache.pdfbox.cos.COSArray) $r1;

        specialinvoke r2.<org.apache.pdfbox.util.PDFMergerUtility: void updatePageReferences(org.apache.pdfbox.cos.COSArray,java.util.HashMap)>($r5, r3);

        goto label3;

     label2:
        $z1 = $r1 instanceof org.apache.pdfbox.cos.COSDictionary;

        if $z1 == 0 goto label3;

        $r4 = (org.apache.pdfbox.cos.COSDictionary) $r1;

        specialinvoke r2.<org.apache.pdfbox.util.PDFMergerUtility: void updatePageReferences(org.apache.pdfbox.cos.COSDictionary,java.util.HashMap)>($r4, r3);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    private void updateParentEntry(org.apache.pdfbox.cos.COSArray, org.apache.pdfbox.cos.COSDictionary)
    {
        org.apache.pdfbox.cos.COSName $r3, $r6;
        org.apache.pdfbox.cos.COSArray r0;
        org.apache.pdfbox.cos.COSDictionary r2, r5;
        org.apache.pdfbox.cos.COSBase $r1, $r4;
        int $i0, i1;
        boolean $z0;
        org.apache.pdfbox.util.PDFMergerUtility r7;

        r7 := @this: org.apache.pdfbox.util.PDFMergerUtility;

        r0 := @parameter0: org.apache.pdfbox.cos.COSArray;

        r5 := @parameter1: org.apache.pdfbox.cos.COSDictionary;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: int size()>();

        if i1 >= $i0 goto label3;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i1);

        $z0 = $r1 instanceof org.apache.pdfbox.cos.COSDictionary;

        if $z0 == 0 goto label2;

        r2 = (org.apache.pdfbox.cos.COSDictionary) $r1;

        $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName P>;

        $r4 = virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r3);

        if $r4 == null goto label2;

        $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName P>;

        virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r6, r5);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private void updateStructParentEntries(org.apache.pdfbox.pdmodel.PDPage, int) throws java.io.IOException
    {
        java.util.Iterator $r3;
        java.util.ArrayList $r2;
        java.util.List $r1;
        int $i0, i1, $i2, $i3, $i4;
        org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation r5;
        org.apache.pdfbox.pdmodel.PDPage r0;
        java.lang.Object $r4;
        boolean $z0;
        org.apache.pdfbox.util.PDFMergerUtility r6;

        r6 := @this: org.apache.pdfbox.util.PDFMergerUtility;

        r0 := @parameter0: org.apache.pdfbox.pdmodel.PDPage;

        i1 := @parameter1: int;

        $i0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDPage: int getStructParents()>();

        $i2 = $i0 + i1;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDPage: void setStructParents(int)>($i2);

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDPage: java.util.List getAnnotations()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation) $r4;

        $i3 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: int getStructParent()>();

        $i4 = $i3 + i1;

        virtualinvoke r5.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation: void setStructParent(int)>($i4);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r5);

        goto label1;

     label2:
        virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDPage: void setAnnotations(java.util.List)>($r2);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.pdfbox.util.PDFMergerUtility: java.lang.String STRUCTURETYPE_DOCUMENT> = "Document";

        return;
    }
}
