public class org.apache.cxf.jaxrs.provider.XSLTJaxbProvider extends org.apache.cxf.jaxrs.provider.JAXBElementProvider
{
    private static final java.util.logging.Logger LOG;
    private static final java.lang.String ABSOLUTE_PATH_PARAMETER;
    private static final java.lang.String BASE_PATH_PARAMETER;
    private static final java.lang.String RELATIVE_PATH_PARAMETER;
    private javax.xml.transform.sax.SAXTransformerFactory factory;
    private javax.xml.transform.Templates inTemplates;
    private javax.xml.transform.Templates outTemplates;
    private java.util.Map inMediaTemplates;
    private java.util.Map outMediaTemplates;
    private java.util.List inClassesToHandle;
    private java.util.List outClassesToHandle;
    private java.util.Map inParamsMap;
    private java.util.Map outParamsMap;
    private java.util.Map inProperties;
    private java.util.Map outProperties;
    private javax.xml.transform.URIResolver uriResolver;
    private java.lang.String systemId;
    private boolean supportJaxbOnly;

    public void <init>()
    {
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: void <init>()>();

        return;
    }

    public void setSupportJaxbOnly(boolean)
    {
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r0;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: boolean supportJaxbOnly> = z0;

        return;
    }

    public boolean isReadable(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r0;
        java.lang.'annotation'.Annotation[] r3;
        javax.ws.rs.core.MediaType r4;
        java.util.List $r6;
        java.lang.reflect.Type r2;
        java.lang.Class r1;
        java.lang.String $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.reflect.Type;

        r3 := @parameter2: java.lang.'annotation'.Annotation[];

        r4 := @parameter3: javax.ws.rs.core.MediaType;

        $z0 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: boolean isReadable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)>(r1, r2, r3, r4);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: boolean isSupportedCollectionOrArray(java.lang.Class)>(r1);

        if $z1 == 0 goto label2;

        $z6 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: boolean supportJaxbOnly>;

        return $z6;

     label2:
        $r5 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $z2 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: boolean inClassCanBeHandled(java.lang.String)>($r5);

        if $z2 != 0 goto label3;

        $r6 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.List inClassesToHandle>;

        if $r6 != null goto label4;

        $z5 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: boolean supportJaxbOnly>;

        if $z5 != 0 goto label4;

     label3:
        $z3 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: boolean inTemplatesAvailable(javax.ws.rs.core.MediaType)>(r4);

        return $z3;

     label4:
        $z4 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: boolean supportJaxbOnly>;

        return $z4;
    }

    public boolean isWriteable(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r0;
        java.lang.'annotation'.Annotation[] r3;
        javax.ws.rs.core.MediaType r4;
        java.util.List $r6;
        java.lang.reflect.Type r2;
        java.lang.Class r1;
        java.lang.String $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.reflect.Type;

        r3 := @parameter2: java.lang.'annotation'.Annotation[];

        r4 := @parameter3: javax.ws.rs.core.MediaType;

        $z0 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)>(r1, r2, r3, r4);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: boolean isSupportedCollectionOrArray(java.lang.Class)>(r1);

        if $z1 == 0 goto label2;

        $z6 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: boolean supportJaxbOnly>;

        return $z6;

     label2:
        $r5 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $z2 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: boolean outClassCanBeHandled(java.lang.String)>($r5);

        if $z2 != 0 goto label3;

        $r6 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.List outClassesToHandle>;

        if $r6 != null goto label4;

        $z5 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: boolean supportJaxbOnly>;

        if $z5 != 0 goto label4;

     label3:
        $z3 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: boolean outTemplatesAvailable(javax.ws.rs.core.MediaType)>(r4);

        return $z3;

     label4:
        $z4 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: boolean supportJaxbOnly>;

        return $z4;
    }

    protected boolean inTemplatesAvailable(javax.ws.rs.core.MediaType)
    {
        javax.xml.transform.Templates $r1;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r0;
        javax.ws.rs.core.MediaType r5;
        java.util.Map $r2, $r4;
        java.lang.StringBuilder $r3, $r7, $r8, $r10;
        java.lang.String $r6, $r9, $r11;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r5 := @parameter0: javax.ws.rs.core.MediaType;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.Templates inTemplates>;

        if $r1 != null goto label1;

        $r2 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.Map inMediaTemplates>;

        if $r2 == null goto label2;

        $r4 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.Map inMediaTemplates>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r5.<javax.ws.rs.core.MediaType: java.lang.String getType()>();

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r9 = virtualinvoke r5.<javax.ws.rs.core.MediaType: java.lang.String getSubtype()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r11);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    protected boolean outTemplatesAvailable(javax.ws.rs.core.MediaType)
    {
        javax.xml.transform.Templates $r1;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r0;
        javax.ws.rs.core.MediaType r5;
        java.util.Map $r2, $r4;
        java.lang.StringBuilder $r3, $r7, $r8, $r10;
        java.lang.String $r6, $r9, $r11;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r5 := @parameter0: javax.ws.rs.core.MediaType;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.Templates outTemplates>;

        if $r1 != null goto label1;

        $r2 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.Map outMediaTemplates>;

        if $r2 == null goto label2;

        $r4 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.Map outMediaTemplates>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r5.<javax.ws.rs.core.MediaType: java.lang.String getType()>();

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r9 = virtualinvoke r5.<javax.ws.rs.core.MediaType: java.lang.String getSubtype()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r11);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    protected javax.xml.transform.Templates getInTemplates(javax.ws.rs.core.MediaType)
    {
        javax.xml.transform.Templates $r1, $r13;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r0;
        javax.ws.rs.core.MediaType r5;
        java.util.Map $r2, $r4;
        java.lang.StringBuilder $r3, $r7, $r8, $r10;
        java.lang.Object $r12;
        java.lang.String $r6, $r9, $r11;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r5 := @parameter0: javax.ws.rs.core.MediaType;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.Templates inTemplates>;

        if $r1 == null goto label1;

        $r13 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.Templates inTemplates>;

        goto label3;

     label1:
        $r2 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.Map inMediaTemplates>;

        if $r2 == null goto label2;

        $r4 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.Map inMediaTemplates>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r5.<javax.ws.rs.core.MediaType: java.lang.String getType()>();

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r9 = virtualinvoke r5.<javax.ws.rs.core.MediaType: java.lang.String getSubtype()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        $r13 = (javax.xml.transform.Templates) $r12;

        goto label3;

     label2:
        $r13 = null;

     label3:
        return $r13;
    }

    protected javax.xml.transform.Templates getOutTemplates(javax.ws.rs.core.MediaType)
    {
        javax.xml.transform.Templates $r1, $r13;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r0;
        javax.ws.rs.core.MediaType r5;
        java.util.Map $r2, $r4;
        java.lang.StringBuilder $r3, $r7, $r8, $r10;
        java.lang.Object $r12;
        java.lang.String $r6, $r9, $r11;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r5 := @parameter0: javax.ws.rs.core.MediaType;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.Templates outTemplates>;

        if $r1 == null goto label1;

        $r13 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.Templates outTemplates>;

        goto label3;

     label1:
        $r2 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.Map outMediaTemplates>;

        if $r2 == null goto label2;

        $r4 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.Map outMediaTemplates>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r5.<javax.ws.rs.core.MediaType: java.lang.String getType()>();

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r9 = virtualinvoke r5.<javax.ws.rs.core.MediaType: java.lang.String getSubtype()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        $r13 = (javax.xml.transform.Templates) $r12;

        goto label3;

     label2:
        $r13 = null;

     label3:
        return $r13;
    }

    protected java.lang.Object unmarshalFromInputStream(javax.xml.bind.Unmarshaller, java.io.InputStream, javax.ws.rs.core.MediaType) throws javax.xml.bind.JAXBException
    {
        javax.xml.transform.Templates $r2, $r5, $r26;
        org.xml.sax.XMLFilter $r27, r28;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl r24;
        javax.xml.transform.sax.SAXTransformerFactory $r6, $r25;
        javax.ws.rs.core.MediaType r1;
        java.util.Map $r3, $r4;
        java.lang.String $r10, $r13, $r19, $r21;
        boolean $z0;
        org.xml.sax.InputSource $r8;
        javax.xml.bind.Unmarshaller r11;
        javax.xml.transform.TransformerConfigurationException $r15, $r23;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r0;
        javax.ws.rs.InternalServerErrorException $r22;
        java.util.logging.Logger $r17;
        javax.xml.transform.sax.SAXSource $r7;
        java.lang.Object $r12, $r14;
        java.lang.StringBuilder $r16, $r18, $r20;
        java.io.InputStream r9;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r11 := @parameter0: javax.xml.bind.Unmarshaller;

        r9 := @parameter1: java.io.InputStream;

        r1 := @parameter2: javax.ws.rs.core.MediaType;

     label1:
        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.Templates getInTemplates(javax.ws.rs.core.MediaType)>(r1);

        $r4 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.Map inParamsMap>;

        $r3 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.Map inProperties>;

        $r5 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)>($r2, $r4, $r3);

        if $r5 != null goto label3;

        $z0 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: boolean supportJaxbOnly>;

        if $z0 == 0 goto label3;

        $r14 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: java.lang.Object unmarshalFromInputStream(javax.xml.bind.Unmarshaller,java.io.InputStream,javax.ws.rs.core.MediaType)>(r11, r9, r1);

     label2:
        return $r14;

     label3:
        $r6 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.sax.SAXTransformerFactory factory>;

        r28 = virtualinvoke $r6.<javax.xml.transform.sax.SAXTransformerFactory: org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates)>($r5);

     label4:
        goto label6;

     label5:
        $r23 := @caughtexception;

        r24 = (org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl) $r5;

        $r25 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.sax.SAXTransformerFactory factory>;

        $r26 = virtualinvoke r24.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: javax.xml.transform.Templates getTemplates()>();

        $r27 = virtualinvoke $r25.<javax.xml.transform.sax.SAXTransformerFactory: org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates)>($r26);

        r28 = $r27;

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: void trySettingProperties(java.lang.Object,org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl)>($r27, r24);

     label6:
        $r7 = new javax.xml.transform.sax.SAXSource;

        $r8 = new org.xml.sax.InputSource;

        specialinvoke $r8.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r9);

        specialinvoke $r7.<javax.xml.transform.sax.SAXSource: void <init>(org.xml.sax.XMLReader,org.xml.sax.InputSource)>(r28, $r8);

        $r10 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.lang.String systemId>;

        if $r10 == null goto label7;

        $r13 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.lang.String systemId>;

        virtualinvoke $r7.<javax.xml.transform.sax.SAXSource: void setSystemId(java.lang.String)>($r13);

     label7:
        $r12 = interfaceinvoke r11.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(javax.xml.transform.Source)>($r7);

     label8:
        return $r12;

     label9:
        $r15 := @caughtexception;

        $r17 = <org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.logging.Logger LOG>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Transformation exception : ");

        $r19 = virtualinvoke $r15.<javax.xml.transform.TransformerConfigurationException: java.lang.String getMessage()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.util.logging.Logger: void warning(java.lang.String)>($r21);

        $r22 = new javax.ws.rs.InternalServerErrorException;

        specialinvoke $r22.<javax.ws.rs.InternalServerErrorException: void <init>(java.lang.Throwable)>($r15);

        throw $r22;

        catch javax.xml.transform.TransformerConfigurationException from label3 to label4 with label5;
        catch javax.xml.transform.TransformerConfigurationException from label1 to label2 with label9;
        catch javax.xml.transform.TransformerConfigurationException from label3 to label8 with label9;
    }

    private void trySettingProperties(java.lang.Object, org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl)
    {
        javax.xml.transform.Transformer r27;
        java.util.Map $r8, $r11;
        java.lang.reflect.Method $r3;
        boolean $z0, $z1;
        java.util.Set $r9, $r12;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r26;
        java.util.logging.Logger $r25;
        java.lang.Exception $r23;
        java.lang.Object[] $r4;
        javax.xml.transform.URIResolver $r7;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl r6;
        java.util.logging.Level $r24;
        java.lang.String $r16, $r18, $r21;
        java.util.Map$Entry r28, r29;
        java.util.Iterator $r10, $r13;
        java.lang.Class[] $r2;
        java.lang.Object r0, $r5, $r14, $r15, $r17, $r19, $r20, $r22;
        java.lang.Class $r1;

        r26 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r0 := @parameter0: java.lang.Object;

        r6 := @parameter1: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = newarray (java.lang.Class)[0];

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getTransformer", $r2);

        $r4 = newarray (java.lang.Object)[0];

        $r5 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r4);

        r27 = (javax.xml.transform.Transformer) $r5;

        $r7 = staticinvoke <org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: javax.xml.transform.URIResolver access$000(org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl)>(r6);

        virtualinvoke r27.<javax.xml.transform.Transformer: void setURIResolver(javax.xml.transform.URIResolver)>($r7);

        $r8 = staticinvoke <org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: java.util.Map access$100(org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl)>(r6);

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>();

        $r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r19 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r28 = (java.util.Map$Entry) $r19;

        $r20 = interfaceinvoke r28.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r21 = (java.lang.String) $r20;

        $r22 = interfaceinvoke r28.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r27.<javax.xml.transform.Transformer: void setParameter(java.lang.String,java.lang.Object)>($r21, $r22);

        goto label2;

     label3:
        $r11 = staticinvoke <org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: java.util.Map access$200(org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl)>(r6);

        $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Set entrySet()>();

        $r13 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r29 = (java.util.Map$Entry) $r14;

        $r15 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r16 = (java.lang.String) $r15;

        $r17 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18 = (java.lang.String) $r17;

        virtualinvoke r27.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>($r16, $r18);

        goto label4;

     label5:
        goto label7;

     label6:
        $r23 := @caughtexception;

        $r25 = <org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.logging.Logger LOG>;

        $r24 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r25.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r24, "Could not set properties for transfomer", $r23);

     label7:
        return;

        catch java.lang.Exception from label1 to label5 with label6;
    }

    protected java.lang.Object unmarshalFromReader(javax.xml.bind.Unmarshaller, javax.xml.stream.XMLStreamReader, javax.ws.rs.core.MediaType) throws javax.xml.bind.JAXBException
    {
        javax.xml.bind.Unmarshaller r5;
        org.apache.cxf.staxutils.StaxSource $r2;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r4;
        java.lang.Exception $r9;
        javax.ws.rs.core.MediaType r7;
        javax.xml.stream.XMLStreamReader r3;
        javax.xml.stream.XMLStreamWriter $r1;
        java.lang.Object $r8;
        javax.ws.rs.BadRequestException $r10;
        org.apache.cxf.io.CachedOutputStream $r0;
        java.io.InputStream $r6;

        r4 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r5 := @parameter0: javax.xml.bind.Unmarshaller;

        r3 := @parameter1: javax.xml.stream.XMLStreamReader;

        r7 := @parameter2: javax.ws.rs.core.MediaType;

        $r0 = new org.apache.cxf.io.CachedOutputStream;

        specialinvoke $r0.<org.apache.cxf.io.CachedOutputStream: void <init>()>();

     label1:
        $r1 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream)>($r0);

        $r2 = new org.apache.cxf.staxutils.StaxSource;

        specialinvoke $r2.<org.apache.cxf.staxutils.StaxSource: void <init>(javax.xml.stream.XMLStreamReader)>(r3);

        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void copy(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)>($r2, $r1);

        interfaceinvoke $r1.<javax.xml.stream.XMLStreamWriter: void writeEndDocument()>();

        interfaceinvoke $r1.<javax.xml.stream.XMLStreamWriter: void flush()>();

        interfaceinvoke $r1.<javax.xml.stream.XMLStreamWriter: void close()>();

        $r6 = virtualinvoke $r0.<org.apache.cxf.io.CachedOutputStream: java.io.InputStream getInputStream()>();

        $r8 = virtualinvoke r4.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.lang.Object unmarshalFromInputStream(javax.xml.bind.Unmarshaller,java.io.InputStream,javax.ws.rs.core.MediaType)>(r5, $r6, r7);

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        $r10 = new javax.ws.rs.BadRequestException;

        specialinvoke $r10.<javax.ws.rs.BadRequestException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void marshalToWriter(javax.xml.bind.Marshaller, java.lang.Object, javax.xml.stream.XMLStreamWriter, javax.ws.rs.core.MediaType) throws java.lang.Exception
    {
        javax.xml.bind.Marshaller r2;
        javax.xml.transform.stream.StreamSource $r5;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r1;
        javax.ws.rs.core.MediaType r4;
        java.lang.Object r3;
        javax.xml.stream.XMLStreamWriter r7;
        org.apache.cxf.io.CachedOutputStream $r0;
        java.io.InputStream $r6;

        r1 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r2 := @parameter0: javax.xml.bind.Marshaller;

        r3 := @parameter1: java.lang.Object;

        r7 := @parameter2: javax.xml.stream.XMLStreamWriter;

        r4 := @parameter3: javax.ws.rs.core.MediaType;

        $r0 = new org.apache.cxf.io.CachedOutputStream;

        specialinvoke $r0.<org.apache.cxf.io.CachedOutputStream: void <init>()>();

        virtualinvoke r1.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: void marshalToOutputStream(javax.xml.bind.Marshaller,java.lang.Object,java.io.OutputStream,javax.ws.rs.core.MediaType)>(r2, r3, $r0, r4);

        $r5 = new javax.xml.transform.stream.StreamSource;

        $r6 = virtualinvoke $r0.<org.apache.cxf.io.CachedOutputStream: java.io.InputStream getInputStream()>();

        specialinvoke $r5.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream)>($r6);

        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void copy(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)>($r5, r7);

        return;
    }

    protected void addAttachmentMarshaller(javax.xml.bind.Marshaller)
    {
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r0;
        javax.xml.bind.Marshaller r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r1 := @parameter0: javax.xml.bind.Marshaller;

        return;
    }

    protected void marshalToOutputStream(javax.xml.bind.Marshaller, java.lang.Object, java.io.OutputStream, javax.ws.rs.core.MediaType) throws java.lang.Exception
    {
        javax.xml.transform.Templates $r2, $r5, $r18;
        javax.xml.transform.stream.StreamResult $r7;
        javax.xml.bind.Marshaller r11;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl r16;
        javax.xml.transform.sax.SAXTransformerFactory $r6, $r17;
        javax.ws.rs.core.MediaType r1;
        org.apache.cxf.jaxrs.ext.MessageContext $r10, $r13;
        java.util.Map $r3, $r4;
        java.lang.String $r9, $r14;
        boolean $z0;
        java.io.OutputStream r8;
        javax.xml.transform.TransformerConfigurationException $r15;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r0;
        java.lang.Object r12;
        javax.xml.transform.sax.TransformerHandler $r19, r20;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r11 := @parameter0: javax.xml.bind.Marshaller;

        r12 := @parameter1: java.lang.Object;

        r8 := @parameter2: java.io.OutputStream;

        r1 := @parameter3: javax.ws.rs.core.MediaType;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.Templates getOutTemplates(javax.ws.rs.core.MediaType)>(r1);

        $r4 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.Map outParamsMap>;

        $r3 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.Map outProperties>;

        $r5 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)>($r2, $r4, $r3);

        if $r5 != null goto label1;

        $z0 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: boolean supportJaxbOnly>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: void marshalToOutputStream(javax.xml.bind.Marshaller,java.lang.Object,java.io.OutputStream,javax.ws.rs.core.MediaType)>(r11, r12, r8, r1);

        return;

     label1:
        $r6 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.sax.SAXTransformerFactory factory>;

        r20 = virtualinvoke $r6.<javax.xml.transform.sax.SAXTransformerFactory: javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates)>($r5);

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;

        r16 = (org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl) $r5;

        $r17 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.sax.SAXTransformerFactory factory>;

        $r18 = virtualinvoke r16.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: javax.xml.transform.Templates getTemplates()>();

        $r19 = virtualinvoke $r17.<javax.xml.transform.sax.SAXTransformerFactory: javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates)>($r18);

        r20 = $r19;

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: void trySettingProperties(java.lang.Object,org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl)>($r19, r16);

     label4:
        $r7 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r7.<javax.xml.transform.stream.StreamResult: void <init>(java.io.OutputStream)>(r8);

        $r9 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.lang.String systemId>;

        if $r9 == null goto label5;

        $r14 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.lang.String systemId>;

        interfaceinvoke $r7.<javax.xml.transform.Result: void setSystemId(java.lang.String)>($r14);

     label5:
        interfaceinvoke r20.<javax.xml.transform.sax.TransformerHandler: void setResult(javax.xml.transform.Result)>($r7);

        $r10 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: org.apache.cxf.jaxrs.ext.MessageContext getContext()>();

        if $r10 != null goto label6;

        interfaceinvoke r20.<javax.xml.transform.sax.TransformerHandler: void startDocument()>();

     label6:
        interfaceinvoke r11.<javax.xml.bind.Marshaller: void marshal(java.lang.Object,org.xml.sax.ContentHandler)>(r12, r20);

        $r13 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: org.apache.cxf.jaxrs.ext.MessageContext getContext()>();

        if $r13 != null goto label7;

        interfaceinvoke r20.<javax.xml.transform.sax.TransformerHandler: void endDocument()>();

     label7:
        return;

        catch javax.xml.transform.TransformerConfigurationException from label1 to label2 with label3;
    }

    public void setOutTemplate(java.lang.String)
    {
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r0;
        javax.xml.transform.Templates $r2;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.Templates createTemplates(java.lang.String)>(r1);

        r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.Templates outTemplates> = $r2;

        return;
    }

    public void setInTemplate(java.lang.String)
    {
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r0;
        javax.xml.transform.Templates $r2;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.Templates createTemplates(java.lang.String)>(r1);

        r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.Templates inTemplates> = $r2;

        return;
    }

    public void setInMediaTemplates(java.util.Map)
    {
        java.util.Map$Entry r6;
        javax.xml.transform.Templates $r11;
        java.util.Iterator $r4;
        java.util.Set $r3;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r0;
        java.util.HashMap $r1;
        java.util.Map r2, $r7;
        java.lang.Object $r5, $r8, $r9;
        java.lang.String $r10;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r2 := @parameter0: java.util.Map;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.Map inMediaTemplates> = $r1;

        $r3 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.Map inMediaTemplates>;

        $r8 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (java.lang.String) $r9;

        $r11 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.Templates createTemplates(java.lang.String)>($r10);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r11);

        goto label1;

     label2:
        return;
    }

    public void setOutMediaTemplates(java.util.Map)
    {
        java.util.Map$Entry r6;
        javax.xml.transform.Templates $r11;
        java.util.Iterator $r4;
        java.util.Set $r3;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r0;
        java.util.HashMap $r1;
        java.util.Map r2, $r7;
        java.lang.Object $r5, $r8, $r9;
        java.lang.String $r10;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r2 := @parameter0: java.util.Map;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.Map outMediaTemplates> = $r1;

        $r3 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.Map outMediaTemplates>;

        $r8 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (java.lang.String) $r9;

        $r11 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.Templates createTemplates(java.lang.String)>($r10);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r11);

        goto label1;

     label2:
        return;
    }

    public void setResolver(javax.xml.transform.URIResolver)
    {
        javax.xml.transform.URIResolver r1, $r3;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r0;
        javax.xml.transform.sax.SAXTransformerFactory $r2, $r4;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r1 := @parameter0: javax.xml.transform.URIResolver;

        r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.URIResolver uriResolver> = r1;

        $r2 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.sax.SAXTransformerFactory factory>;

        if $r2 == null goto label1;

        $r4 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.sax.SAXTransformerFactory factory>;

        $r3 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.URIResolver uriResolver>;

        virtualinvoke $r4.<javax.xml.transform.sax.SAXTransformerFactory: void setURIResolver(javax.xml.transform.URIResolver)>($r3);

     label1:
        return;
    }

    public void setSystemId(java.lang.String)
    {
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.lang.String systemId> = r1;

        return;
    }

    public void setInParameters(java.util.Map)
    {
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r1 := @parameter0: java.util.Map;

        r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.Map inParamsMap> = r1;

        return;
    }

    public void setOutParameters(java.util.Map)
    {
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r1 := @parameter0: java.util.Map;

        r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.Map outParamsMap> = r1;

        return;
    }

    public void setInProperties(java.util.Map)
    {
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r1 := @parameter0: java.util.Map;

        r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.Map inProperties> = r1;

        return;
    }

    public void setOutProperties(java.util.Map)
    {
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r1 := @parameter0: java.util.Map;

        r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.Map outProperties> = r1;

        return;
    }

    public void setInClassNames(java.util.List)
    {
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r0;
        java.util.List r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.List inClassesToHandle> = r1;

        return;
    }

    public boolean inClassCanBeHandled(java.lang.String)
    {
        java.util.List $r1, $r3;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r0;
        java.lang.String r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.List inClassesToHandle>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.List inClassesToHandle>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void setOutClassNames(java.util.List)
    {
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r0;
        java.util.List r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.List outClassesToHandle> = r1;

        return;
    }

    public boolean outClassCanBeHandled(java.lang.String)
    {
        java.util.List $r1, $r3;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r0;
        java.lang.String r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.List outClassesToHandle>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.List outClassesToHandle>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    protected javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates, java.util.Map, java.util.Map)
    {
        javax.xml.transform.Templates r0;
        java.util.Map r5, r17;
        java.net.URI $r12, $r15;
        boolean $z0, $z1, $z2;
        java.util.Set $r8, $r18;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r2;
        javax.ws.rs.InternalServerErrorException $r34;
        java.util.logging.Logger $r33;
        java.util.List $r10, $r29;
        javax.ws.rs.core.UriInfo $r6;
        javax.xml.transform.URIResolver $r3;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl $r1;
        org.apache.cxf.jaxrs.ext.MessageContext $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r13, $r14, $r16, $r22, $r32, r36;
        java.util.Map$Entry r35, r37;
        java.util.Iterator $r9, $r19;
        javax.ws.rs.core.PathSegment $r25;
        javax.ws.rs.core.MultivaluedMap $r7, $r11, $r26;
        java.lang.Object $r20, $r21, $r23, $r24, $r27, $r28, $r30, $r31;

        r2 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r0 := @parameter0: javax.xml.transform.Templates;

        r17 := @parameter1: java.util.Map;

        r5 := @parameter2: java.util.Map;

        if r0 != null goto label2;

        $z2 = r2.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: boolean supportJaxbOnly>;

        if $z2 == 0 goto label1;

        return null;

     label1:
        $r33 = <org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.logging.Logger LOG>;

        virtualinvoke $r33.<java.util.logging.Logger: void severe(java.lang.String)>("No template is available");

        $r34 = new javax.ws.rs.InternalServerErrorException;

        specialinvoke $r34.<javax.ws.rs.InternalServerErrorException: void <init>()>();

        throw $r34;

     label2:
        $r1 = new org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl;

        $r3 = r2.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.URIResolver uriResolver>;

        specialinvoke $r1.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: void <init>(javax.xml.transform.Templates,javax.xml.transform.URIResolver)>(r0, $r3);

        $r4 = virtualinvoke r2.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: org.apache.cxf.jaxrs.ext.MessageContext getContext()>();

        if $r4 == null goto label8;

        $r6 = interfaceinvoke $r4.<org.apache.cxf.jaxrs.ext.MessageContext: javax.ws.rs.core.UriInfo getUriInfo()>();

        $r7 = interfaceinvoke $r6.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getPathParameters()>();

        $r8 = interfaceinvoke $r7.<javax.ws.rs.core.MultivaluedMap: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r27 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r35 = (java.util.Map$Entry) $r27;

        $r28 = interfaceinvoke r35.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r29 = (java.util.List) $r28;

        $r30 = interfaceinvoke $r29.<java.util.List: java.lang.Object get(int)>(0);

        r36 = (java.lang.String) $r30;

        $i3 = virtualinvoke r36.<java.lang.String: int indexOf(java.lang.String)>(";");

        if $i3 <= 0 goto label4;

        r36 = virtualinvoke r36.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

     label4:
        $r31 = interfaceinvoke r35.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r32 = (java.lang.String) $r31;

        virtualinvoke $r1.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: void setTransformerParameter(java.lang.String,java.lang.Object)>($r32, r36);

        goto label3;

     label5:
        $r10 = interfaceinvoke $r6.<javax.ws.rs.core.UriInfo: java.util.List getPathSegments()>();

        $i0 = interfaceinvoke $r10.<java.util.List: int size()>();

        if $i0 <= 0 goto label6;

        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        $r24 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>($i2);

        $r25 = (javax.ws.rs.core.PathSegment) $r24;

        $r26 = interfaceinvoke $r25.<javax.ws.rs.core.PathSegment: javax.ws.rs.core.MultivaluedMap getMatrixParameters()>();

        specialinvoke r2.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: void setTransformParameters(org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl,javax.ws.rs.core.MultivaluedMap)>($r1, $r26);

     label6:
        $r11 = interfaceinvoke $r6.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>();

        specialinvoke r2.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: void setTransformParameters(org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl,javax.ws.rs.core.MultivaluedMap)>($r1, $r11);

        $r12 = interfaceinvoke $r6.<javax.ws.rs.core.UriInfo: java.net.URI getAbsolutePath()>();

        $r13 = virtualinvoke $r12.<java.net.URI: java.lang.String toString()>();

        virtualinvoke $r1.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: void setTransformerParameter(java.lang.String,java.lang.Object)>("absolute.path", $r13);

        $r14 = interfaceinvoke $r6.<javax.ws.rs.core.UriInfo: java.lang.String getPath()>();

        virtualinvoke $r1.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: void setTransformerParameter(java.lang.String,java.lang.Object)>("relative.path", $r14);

        $r15 = interfaceinvoke $r6.<javax.ws.rs.core.UriInfo: java.net.URI getBaseUri()>();

        $r16 = virtualinvoke $r15.<java.net.URI: java.lang.String toString()>();

        virtualinvoke $r1.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: void setTransformerParameter(java.lang.String,java.lang.Object)>("base.path", $r16);

        if r17 == null goto label8;

        $r18 = interfaceinvoke r17.<java.util.Map: java.util.Set entrySet()>();

        $r19 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label7:
        $z1 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r37 = (java.util.Map$Entry) $r20;

        $r21 = interfaceinvoke r37.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r22 = (java.lang.String) $r21;

        $r23 = interfaceinvoke r37.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r1.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: void setTransformerParameter(java.lang.String,java.lang.Object)>($r22, $r23);

        goto label7;

     label8:
        if r5 == null goto label9;

        virtualinvoke $r1.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: void setOutProperties(java.util.Map)>(r5);

     label9:
        return $r1;
    }

    private void setTransformParameters(org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl, javax.ws.rs.core.MultivaluedMap)
    {
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.util.Set $r1;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r11;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl r5;
        javax.ws.rs.core.MultivaluedMap r0;
        java.util.List $r9;
        java.lang.Object $r3, $r6, $r8, $r10;
        java.lang.String $r7;
        boolean $z0;

        r11 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r5 := @parameter0: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl;

        r0 := @parameter1: javax.ws.rs.core.MultivaluedMap;

        $r1 = interfaceinvoke r0.<javax.ws.rs.core.MultivaluedMap: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.String) $r6;

        $r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (java.util.List) $r8;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0);

        virtualinvoke r5.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: void setTransformerParameter(java.lang.String,java.lang.Object)>($r7, $r10);

        goto label1;

     label2:
        return;
    }

    protected javax.xml.transform.Templates createTemplates(java.lang.String)
    {
        org.apache.cxf.Bus $r2;
        javax.xml.transform.Templates $r21;
        javax.xml.transform.stream.StreamSource $r6;
        javax.xml.transform.URIResolver $r10, $r11;
        javax.xml.transform.sax.SAXTransformerFactory $r7, $r9, $r12, $r20;
        java.lang.String r0, $r17, $r19;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider r1;
        java.util.logging.Logger $r15;
        java.io.InputStreamReader $r5;
        java.lang.Exception $r13;
        java.lang.StringBuilder $r14, $r16, $r18;
        java.io.BufferedReader $r4;
        javax.xml.transform.TransformerFactory $r8;
        java.io.InputStream $r3;

        r1 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = virtualinvoke r1.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: org.apache.cxf.Bus getBus()>();

        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: java.io.InputStream getResourceStream(java.lang.String,org.apache.cxf.Bus)>(r0, $r2);

        if $r3 != null goto label3;

     label2:
        return null;

     label3:
        $r4 = new java.io.BufferedReader;

        $r5 = new java.io.InputStreamReader;

        specialinvoke $r5.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r3, "UTF-8");

        specialinvoke $r4.<java.io.BufferedReader: void <init>(java.io.Reader)>($r5);

        $r6 = new javax.xml.transform.stream.StreamSource;

        specialinvoke $r6.<javax.xml.transform.stream.StreamSource: void <init>(java.io.Reader)>($r4);

        $r7 = r1.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.sax.SAXTransformerFactory factory>;

        if $r7 != null goto label4;

        $r8 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

        $r9 = (javax.xml.transform.sax.SAXTransformerFactory) $r8;

        r1.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.sax.SAXTransformerFactory factory> = $r9;

        $r10 = r1.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.URIResolver uriResolver>;

        if $r10 == null goto label4;

        $r12 = r1.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.sax.SAXTransformerFactory factory>;

        $r11 = r1.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.URIResolver uriResolver>;

        virtualinvoke $r12.<javax.xml.transform.sax.SAXTransformerFactory: void setURIResolver(javax.xml.transform.URIResolver)>($r11);

     label4:
        $r20 = r1.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: javax.xml.transform.sax.SAXTransformerFactory factory>;

        $r21 = virtualinvoke $r20.<javax.xml.transform.sax.SAXTransformerFactory: javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)>($r6);

     label5:
        return $r21;

     label6:
        $r13 := @caughtexception;

        $r15 = <org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.logging.Logger LOG>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No template can be created : ");

        $r17 = virtualinvoke $r13.<java.lang.Exception: java.lang.String getMessage()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.util.logging.Logger: void warning(java.lang.String)>($r19);

        return null;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label3 to label5 with label6;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        <org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.lang.String RELATIVE_PATH_PARAMETER> = "relative.path";

        <org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.lang.String BASE_PATH_PARAMETER> = "base.path";

        <org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.lang.String ABSOLUTE_PATH_PARAMETER> = "absolute.path";

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/provider/XSLTJaxbProvider;");

        <org.apache.cxf.jaxrs.provider.XSLTJaxbProvider: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
