public class org.apache.http.impl.client.BasicResponseHandler extends java.lang.Object implements org.apache.http.client.ResponseHandler
{

    public void <init>()
    {
        org.apache.http.impl.client.BasicResponseHandler r0;

        r0 := @this: org.apache.http.impl.client.BasicResponseHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String handleResponse(org.apache.http.HttpResponse) throws org.apache.http.client.HttpResponseException, java.io.IOException
    {
        org.apache.http.HttpEntity $r2;
        org.apache.http.client.HttpResponseException $r3;
        org.apache.http.StatusLine $r1;
        org.apache.http.impl.client.BasicResponseHandler r5;
        int $i0, $i1;
        org.apache.http.HttpResponse r0;
        java.lang.String $r4, $r6;

        r5 := @this: org.apache.http.impl.client.BasicResponseHandler;

        r0 := @parameter0: org.apache.http.HttpResponse;

        $r1 = interfaceinvoke r0.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $r2 = interfaceinvoke r0.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $i0 = interfaceinvoke $r1.<org.apache.http.StatusLine: int getStatusCode()>();

        if $i0 < 300 goto label1;

        staticinvoke <org.apache.http.util.EntityUtils: void consume(org.apache.http.HttpEntity)>($r2);

        $r3 = new org.apache.http.client.HttpResponseException;

        $i1 = interfaceinvoke $r1.<org.apache.http.StatusLine: int getStatusCode()>();

        $r4 = interfaceinvoke $r1.<org.apache.http.StatusLine: java.lang.String getReasonPhrase()>();

        specialinvoke $r3.<org.apache.http.client.HttpResponseException: void <init>(int,java.lang.String)>($i1, $r4);

        throw $r3;

     label1:
        if $r2 != null goto label2;

        $r6 = null;

        goto label3;

     label2:
        $r6 = staticinvoke <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>($r2);

     label3:
        return $r6;
    }

    public volatile java.lang.Object handleResponse(org.apache.http.HttpResponse) throws org.apache.http.client.ClientProtocolException, java.io.IOException
    {
        org.apache.http.HttpResponse r1;
        java.lang.String $r2;
        org.apache.http.impl.client.BasicResponseHandler r0;

        r0 := @this: org.apache.http.impl.client.BasicResponseHandler;

        r1 := @parameter0: org.apache.http.HttpResponse;

        $r2 = virtualinvoke r0.<org.apache.http.impl.client.BasicResponseHandler: java.lang.String handleResponse(org.apache.http.HttpResponse)>(r1);

        return $r2;
    }
}
