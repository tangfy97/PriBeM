public abstract class org.apache.poi.ss.util.CellRangeAddressBase extends java.lang.Object
{
    private int _firstRow;
    private int _firstCol;
    private int _lastRow;
    private int _lastCol;

    protected void <init>(int, int, int, int)
    {
        int i0, i1, i2, i3;
        org.apache.poi.ss.util.CellRangeAddressBase r0;

        r0 := @this: org.apache.poi.ss.util.CellRangeAddressBase;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _firstRow> = i0;

        r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _lastRow> = i1;

        r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _firstCol> = i2;

        r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _lastCol> = i3;

        return;
    }

    public void validate(org.apache.poi.ss.SpreadsheetVersion)
    {
        org.apache.poi.ss.SpreadsheetVersion r1;
        int $i0, $i1, $i2, $i3;
        org.apache.poi.ss.util.CellRangeAddressBase r0;

        r0 := @this: org.apache.poi.ss.util.CellRangeAddressBase;

        r1 := @parameter0: org.apache.poi.ss.SpreadsheetVersion;

        $i0 = r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _firstRow>;

        staticinvoke <org.apache.poi.ss.util.CellRangeAddressBase: void validateRow(int,org.apache.poi.ss.SpreadsheetVersion)>($i0, r1);

        $i1 = r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _lastRow>;

        staticinvoke <org.apache.poi.ss.util.CellRangeAddressBase: void validateRow(int,org.apache.poi.ss.SpreadsheetVersion)>($i1, r1);

        $i2 = r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _firstCol>;

        staticinvoke <org.apache.poi.ss.util.CellRangeAddressBase: void validateColumn(int,org.apache.poi.ss.SpreadsheetVersion)>($i2, r1);

        $i3 = r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _lastCol>;

        staticinvoke <org.apache.poi.ss.util.CellRangeAddressBase: void validateColumn(int,org.apache.poi.ss.SpreadsheetVersion)>($i3, r1);

        return;
    }

    private static void validateRow(int, org.apache.poi.ss.SpreadsheetVersion)
    {
        java.lang.IllegalArgumentException $r1, $r2;
        org.apache.poi.ss.SpreadsheetVersion r0;
        int $i0, i1;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        i1 := @parameter0: int;

        r0 := @parameter1: org.apache.poi.ss.SpreadsheetVersion;

        $i0 = virtualinvoke r0.<org.apache.poi.ss.SpreadsheetVersion: int getLastRowIndex()>();

        if i1 <= $i0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Maximum row number is ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        if i1 >= 0 goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Minumum row number is 0");

        throw $r1;

     label2:
        return;
    }

    private static void validateColumn(int, org.apache.poi.ss.SpreadsheetVersion)
    {
        java.lang.IllegalArgumentException $r1, $r2;
        org.apache.poi.ss.SpreadsheetVersion r0;
        int $i0, i1;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        i1 := @parameter0: int;

        r0 := @parameter1: org.apache.poi.ss.SpreadsheetVersion;

        $i0 = virtualinvoke r0.<org.apache.poi.ss.SpreadsheetVersion: int getLastColumnIndex()>();

        if i1 <= $i0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Maximum column number is ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        if i1 >= 0 goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Minimum column number is 0");

        throw $r1;

     label2:
        return;
    }

    public final boolean isFullColumnRange()
    {
        org.apache.poi.ss.util.CellRangeAddressBase r0;
        org.apache.poi.ss.SpreadsheetVersion $r1;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i8;
        boolean $z0;

        r0 := @this: org.apache.poi.ss.util.CellRangeAddressBase;

        $i0 = r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _firstRow>;

        if $i0 != 0 goto label1;

        $i3 = r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _lastRow>;

        $r1 = <org.apache.poi.ss.SpreadsheetVersion: org.apache.poi.ss.SpreadsheetVersion EXCEL97>;

        $i4 = virtualinvoke $r1.<org.apache.poi.ss.SpreadsheetVersion: int getLastRowIndex()>();

        if $i3 == $i4 goto label2;

     label1:
        $i1 = r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _firstRow>;

        $i6 = (int) -1;

        if $i1 != $i6 goto label3;

        $i2 = r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _lastRow>;

        $i8 = (int) -1;

        if $i2 != $i8 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public final boolean isFullRowRange()
    {
        org.apache.poi.ss.util.CellRangeAddressBase r0;
        org.apache.poi.ss.SpreadsheetVersion $r1;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i8;
        boolean $z0;

        r0 := @this: org.apache.poi.ss.util.CellRangeAddressBase;

        $i0 = r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _firstCol>;

        if $i0 != 0 goto label1;

        $i3 = r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _lastCol>;

        $r1 = <org.apache.poi.ss.SpreadsheetVersion: org.apache.poi.ss.SpreadsheetVersion EXCEL97>;

        $i4 = virtualinvoke $r1.<org.apache.poi.ss.SpreadsheetVersion: int getLastColumnIndex()>();

        if $i3 == $i4 goto label2;

     label1:
        $i1 = r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _firstCol>;

        $i6 = (int) -1;

        if $i1 != $i6 goto label3;

        $i2 = r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _lastCol>;

        $i8 = (int) -1;

        if $i2 != $i8 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public final int getFirstColumn()
    {
        int $i0;
        org.apache.poi.ss.util.CellRangeAddressBase r0;

        r0 := @this: org.apache.poi.ss.util.CellRangeAddressBase;

        $i0 = r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _firstCol>;

        return $i0;
    }

    public final int getFirstRow()
    {
        int $i0;
        org.apache.poi.ss.util.CellRangeAddressBase r0;

        r0 := @this: org.apache.poi.ss.util.CellRangeAddressBase;

        $i0 = r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _firstRow>;

        return $i0;
    }

    public final int getLastColumn()
    {
        int $i0;
        org.apache.poi.ss.util.CellRangeAddressBase r0;

        r0 := @this: org.apache.poi.ss.util.CellRangeAddressBase;

        $i0 = r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _lastCol>;

        return $i0;
    }

    public final int getLastRow()
    {
        int $i0;
        org.apache.poi.ss.util.CellRangeAddressBase r0;

        r0 := @this: org.apache.poi.ss.util.CellRangeAddressBase;

        $i0 = r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _lastRow>;

        return $i0;
    }

    public boolean isInRange(int, int)
    {
        org.apache.poi.ss.util.CellRangeAddressBase r0;
        int i0, $i1, $i2, i3, $i4, $i5;
        boolean $z0;

        r0 := @this: org.apache.poi.ss.util.CellRangeAddressBase;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        $i1 = r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _firstRow>;

        if $i1 > i0 goto label1;

        $i2 = r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _lastRow>;

        if i0 > $i2 goto label1;

        $i4 = r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _firstCol>;

        if $i4 > i3 goto label1;

        $i5 = r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _lastCol>;

        if i3 > $i5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final void setFirstColumn(int)
    {
        int i0;
        org.apache.poi.ss.util.CellRangeAddressBase r0;

        r0 := @this: org.apache.poi.ss.util.CellRangeAddressBase;

        i0 := @parameter0: int;

        r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _firstCol> = i0;

        return;
    }

    public final void setFirstRow(int)
    {
        int i0;
        org.apache.poi.ss.util.CellRangeAddressBase r0;

        r0 := @this: org.apache.poi.ss.util.CellRangeAddressBase;

        i0 := @parameter0: int;

        r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _firstRow> = i0;

        return;
    }

    public final void setLastColumn(int)
    {
        int i0;
        org.apache.poi.ss.util.CellRangeAddressBase r0;

        r0 := @this: org.apache.poi.ss.util.CellRangeAddressBase;

        i0 := @parameter0: int;

        r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _lastCol> = i0;

        return;
    }

    public final void setLastRow(int)
    {
        int i0;
        org.apache.poi.ss.util.CellRangeAddressBase r0;

        r0 := @this: org.apache.poi.ss.util.CellRangeAddressBase;

        i0 := @parameter0: int;

        r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _lastRow> = i0;

        return;
    }

    public int getNumberOfCells()
    {
        org.apache.poi.ss.util.CellRangeAddressBase r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.apache.poi.ss.util.CellRangeAddressBase;

        $i1 = r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _lastRow>;

        $i0 = r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _firstRow>;

        $i2 = $i1 - $i0;

        $i7 = $i2 + 1;

        $i4 = r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _lastCol>;

        $i3 = r0.<org.apache.poi.ss.util.CellRangeAddressBase: int _firstCol>;

        $i5 = $i4 - $i3;

        $i6 = $i5 + 1;

        $i8 = $i7 * $i6;

        return $i8;
    }

    public final java.lang.String toString()
    {
        org.apache.poi.ss.util.CellReference $r0, $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r5, $r8, $r11, $r14;
        org.apache.poi.ss.util.CellRangeAddressBase r1;
        java.lang.StringBuilder $r3, $r6, $r7, $r9, $r10, $r12, $r13;
        java.lang.Class $r4;

        r1 := @this: org.apache.poi.ss.util.CellRangeAddressBase;

        $r0 = new org.apache.poi.ss.util.CellReference;

        $i1 = r1.<org.apache.poi.ss.util.CellRangeAddressBase: int _firstRow>;

        $i0 = r1.<org.apache.poi.ss.util.CellRangeAddressBase: int _firstCol>;

        specialinvoke $r0.<org.apache.poi.ss.util.CellReference: void <init>(int,int)>($i1, $i0);

        $r2 = new org.apache.poi.ss.util.CellReference;

        $i3 = r1.<org.apache.poi.ss.util.CellRangeAddressBase: int _lastRow>;

        $i2 = r1.<org.apache.poi.ss.util.CellRangeAddressBase: int _lastCol>;

        specialinvoke $r2.<org.apache.poi.ss.util.CellReference: void <init>(int,int)>($i3, $i2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r8 = virtualinvoke $r0.<org.apache.poi.ss.util.CellReference: java.lang.String formatAsString()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r11 = virtualinvoke $r2.<org.apache.poi.ss.util.CellReference: java.lang.String formatAsString()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }
}
