public class com.jhlabs.image.BoxBlurFilter extends com.jhlabs.image.AbstractBufferedImageOp
{
    private int hRadius;
    private int vRadius;
    private int iterations;

    public void <init>()
    {
        com.jhlabs.image.BoxBlurFilter r0;

        r0 := @this: com.jhlabs.image.BoxBlurFilter;

        specialinvoke r0.<com.jhlabs.image.AbstractBufferedImageOp: void <init>()>();

        r0.<com.jhlabs.image.BoxBlurFilter: int iterations> = 1;

        return;
    }

    public void <init>(int, int, int)
    {
        com.jhlabs.image.BoxBlurFilter r0;
        int i0, i1, i2;

        r0 := @this: com.jhlabs.image.BoxBlurFilter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<com.jhlabs.image.AbstractBufferedImageOp: void <init>()>();

        r0.<com.jhlabs.image.BoxBlurFilter: int iterations> = 1;

        r0.<com.jhlabs.image.BoxBlurFilter: int hRadius> = i0;

        r0.<com.jhlabs.image.BoxBlurFilter: int vRadius> = i1;

        r0.<com.jhlabs.image.BoxBlurFilter: int iterations> = i2;

        return;
    }

    public java.awt.image.BufferedImage filter(java.awt.image.BufferedImage, java.awt.image.BufferedImage)
    {
        java.awt.image.BufferedImage r0, r4;
        int[] $r2, $r3;
        com.jhlabs.image.BoxBlurFilter r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7;

        r1 := @this: com.jhlabs.image.BoxBlurFilter;

        r0 := @parameter0: java.awt.image.BufferedImage;

        r4 := @parameter1: java.awt.image.BufferedImage;

        $i0 = virtualinvoke r0.<java.awt.image.BufferedImage: int getWidth()>();

        $i1 = virtualinvoke r0.<java.awt.image.BufferedImage: int getHeight()>();

        if r4 != null goto label1;

        r4 = virtualinvoke r1.<com.jhlabs.image.AbstractBufferedImageOp: java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage,java.awt.image.ColorModel)>(r0, null);

     label1:
        $i2 = $i0 * $i1;

        $r2 = newarray (int)[$i2];

        $i3 = $i0 * $i1;

        $r3 = newarray (int)[$i3];

        virtualinvoke r1.<com.jhlabs.image.AbstractBufferedImageOp: int[] getRGB(java.awt.image.BufferedImage,int,int,int,int,int[])>(r0, 0, 0, $i0, $i1, $r2);

        i6 = 0;

     label2:
        $i7 = r1.<com.jhlabs.image.BoxBlurFilter: int iterations>;

        if i6 >= $i7 goto label3;

        $i4 = r1.<com.jhlabs.image.BoxBlurFilter: int hRadius>;

        staticinvoke <com.jhlabs.image.BoxBlurFilter: void blur(int[],int[],int,int,int)>($r2, $r3, $i0, $i1, $i4);

        $i5 = r1.<com.jhlabs.image.BoxBlurFilter: int vRadius>;

        staticinvoke <com.jhlabs.image.BoxBlurFilter: void blur(int[],int[],int,int,int)>($r3, $r2, $i1, $i0, $i5);

        i6 = i6 + 1;

        goto label2;

     label3:
        virtualinvoke r1.<com.jhlabs.image.AbstractBufferedImageOp: void setRGB(java.awt.image.BufferedImage,int,int,int,int,int[])>(r4, 0, 0, $i0, $i1, $r2);

        return r4;
    }

    public static void blur(int[], int[], int, int, int)
    {
        int[] r0, r1, r2;
        int i0, i1, i2, $i3, i4, $i5, $i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, i51, i52, i53, i54, i55, i56, i57, i58, i59, i60, i61, i62, i63, $i65, $i67;

        r2 := @parameter0: int[];

        r1 := @parameter1: int[];

        i0 := @parameter2: int;

        i7 := @parameter3: int;

        i2 := @parameter4: int;

        i1 = i0 - 1;

        $i3 = 2 * i2;

        i4 = $i3 + 1;

        $i5 = 256 * i4;

        r0 = newarray (int)[$i5];

        i51 = 0;

     label01:
        $i6 = 256 * i4;

        if i51 >= $i6 goto label02;

        $i50 = i51 / i4;

        r0[i51] = $i50;

        i51 = i51 + 1;

        goto label01;

     label02:
        i52 = 0;

        i53 = 0;

     label03:
        if i53 >= i7 goto label10;

        i54 = i53;

        i55 = 0;

        i56 = 0;

        i57 = 0;

        i58 = 0;

        i59 = neg i2;

     label04:
        if i59 > i2 goto label05;

        $i40 = i0 - 1;

        $i41 = staticinvoke <com.jhlabs.image.ImageMath: int clamp(int,int,int)>(i59, 0, $i40);

        $i42 = i52 + $i41;

        i60 = r2[$i42];

        $i43 = i60 >> 24;

        $i44 = $i43 & 255;

        i55 = i55 + $i44;

        $i45 = i60 >> 16;

        $i46 = $i45 & 255;

        i56 = i56 + $i46;

        $i47 = i60 >> 8;

        $i48 = $i47 & 255;

        i57 = i57 + $i48;

        $i49 = i60 & 255;

        i58 = i58 + $i49;

        i59 = i59 + 1;

        goto label04;

     label05:
        i61 = 0;

     label06:
        if i61 >= i0 goto label09;

        $i8 = r0[i55];

        $i11 = $i8 << 24;

        $i9 = r0[i56];

        $i10 = $i9 << 16;

        $i14 = $i11 | $i10;

        $i12 = r0[i57];

        $i13 = $i12 << 8;

        $i16 = $i14 | $i13;

        $i15 = r0[i58];

        $i17 = $i16 | $i15;

        r1[i54] = $i17;

        $i18 = i61 + i2;

        i62 = $i18 + 1;

        if i62 <= i1 goto label07;

        i62 = i1;

     label07:
        $i39 = i61 - i2;

        i63 = $i39;

        if $i39 >= 0 goto label08;

        i63 = 0;

     label08:
        $i19 = i52 + i62;

        $i37 = r2[$i19];

        $i20 = i52 + i63;

        $i38 = r2[$i20];

        $i21 = $i37 >> 24;

        $i24 = $i21 & 255;

        $i22 = $i38 >> 24;

        $i23 = $i22 & 255;

        $i25 = $i24 - $i23;

        i55 = i55 + $i25;

        $i27 = $i37 & 16711680;

        $i26 = $i38 & 16711680;

        $i28 = $i27 - $i26;

        $i29 = $i28 >> 16;

        i56 = i56 + $i29;

        $i65 = (int) 65280;

        $i31 = $i37 & $i65;

        $i67 = (int) 65280;

        $i30 = $i38 & $i67;

        $i32 = $i31 - $i30;

        $i33 = $i32 >> 8;

        i57 = i57 + $i33;

        $i35 = $i37 & 255;

        $i34 = $i38 & 255;

        $i36 = $i35 - $i34;

        i58 = i58 + $i36;

        i54 = i54 + i7;

        i61 = i61 + 1;

        goto label06;

     label09:
        i52 = i52 + i0;

        i53 = i53 + 1;

        goto label03;

     label10:
        return;
    }

    public void setHRadius(int)
    {
        int i0;
        com.jhlabs.image.BoxBlurFilter r0;

        r0 := @this: com.jhlabs.image.BoxBlurFilter;

        i0 := @parameter0: int;

        r0.<com.jhlabs.image.BoxBlurFilter: int hRadius> = i0;

        return;
    }

    public int getHRadius()
    {
        int $i0;
        com.jhlabs.image.BoxBlurFilter r0;

        r0 := @this: com.jhlabs.image.BoxBlurFilter;

        $i0 = r0.<com.jhlabs.image.BoxBlurFilter: int hRadius>;

        return $i0;
    }

    public void setVRadius(int)
    {
        int i0;
        com.jhlabs.image.BoxBlurFilter r0;

        r0 := @this: com.jhlabs.image.BoxBlurFilter;

        i0 := @parameter0: int;

        r0.<com.jhlabs.image.BoxBlurFilter: int vRadius> = i0;

        return;
    }

    public int getVRadius()
    {
        int $i0;
        com.jhlabs.image.BoxBlurFilter r0;

        r0 := @this: com.jhlabs.image.BoxBlurFilter;

        $i0 = r0.<com.jhlabs.image.BoxBlurFilter: int vRadius>;

        return $i0;
    }

    public void setRadius(int)
    {
        int i0;
        com.jhlabs.image.BoxBlurFilter r0;

        r0 := @this: com.jhlabs.image.BoxBlurFilter;

        i0 := @parameter0: int;

        r0.<com.jhlabs.image.BoxBlurFilter: int vRadius> = i0;

        r0.<com.jhlabs.image.BoxBlurFilter: int hRadius> = i0;

        return;
    }

    public int getRadius()
    {
        int $i0;
        com.jhlabs.image.BoxBlurFilter r0;

        r0 := @this: com.jhlabs.image.BoxBlurFilter;

        $i0 = r0.<com.jhlabs.image.BoxBlurFilter: int hRadius>;

        return $i0;
    }

    public void setIterations(int)
    {
        int i0;
        com.jhlabs.image.BoxBlurFilter r0;

        r0 := @this: com.jhlabs.image.BoxBlurFilter;

        i0 := @parameter0: int;

        r0.<com.jhlabs.image.BoxBlurFilter: int iterations> = i0;

        return;
    }

    public int getIterations()
    {
        int $i0;
        com.jhlabs.image.BoxBlurFilter r0;

        r0 := @this: com.jhlabs.image.BoxBlurFilter;

        $i0 = r0.<com.jhlabs.image.BoxBlurFilter: int iterations>;

        return $i0;
    }

    public java.lang.String toString()
    {
        com.jhlabs.image.BoxBlurFilter r0;

        r0 := @this: com.jhlabs.image.BoxBlurFilter;

        return "Blur/Box Blur...";
    }
}
