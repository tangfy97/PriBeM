class com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne extends com.hp.hpl.jena.sparql.algebra.OpVisitorByType
{
    private final com.hp.hpl.jena.sparql.algebra.Transform transform;
    com.hp.hpl.jena.sparql.algebra.Op result;

    void <init>(com.hp.hpl.jena.sparql.algebra.Transform)
    {
        com.hp.hpl.jena.sparql.algebra.Transform r1;
        com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne r0;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.Transform;

        specialinvoke r0.<com.hp.hpl.jena.sparql.algebra.OpVisitorByType: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne: com.hp.hpl.jena.sparql.algebra.Transform transform> = r1;

        return;
    }

    protected void visitN(com.hp.hpl.jena.sparql.algebra.op.OpN)
    {
        java.util.List $r3;
        com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne r0;
        com.hp.hpl.jena.sparql.algebra.op.OpN r1;
        com.hp.hpl.jena.sparql.algebra.Transform $r2;
        com.hp.hpl.jena.sparql.algebra.Op $r4;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpN;

        $r2 = r0.<com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne: com.hp.hpl.jena.sparql.algebra.Transform transform>;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpN: java.util.List getElements()>();

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpN: com.hp.hpl.jena.sparql.algebra.Op apply(com.hp.hpl.jena.sparql.algebra.Transform,java.util.List)>($r2, $r3);

        r0.<com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne: com.hp.hpl.jena.sparql.algebra.Op result> = $r4;

        return;
    }

    protected void visit2(com.hp.hpl.jena.sparql.algebra.op.Op2)
    {
        com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne r0;
        com.hp.hpl.jena.sparql.algebra.op.Op2 r1;
        com.hp.hpl.jena.sparql.algebra.Transform $r2;
        com.hp.hpl.jena.sparql.algebra.Op $r3, $r4, $r5;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.Op2;

        $r2 = r0.<com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne: com.hp.hpl.jena.sparql.algebra.Transform transform>;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.Op2: com.hp.hpl.jena.sparql.algebra.Op getLeft()>();

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.Op2: com.hp.hpl.jena.sparql.algebra.Op getRight()>();

        $r5 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.Op2: com.hp.hpl.jena.sparql.algebra.Op apply(com.hp.hpl.jena.sparql.algebra.Transform,com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.algebra.Op)>($r2, $r3, $r4);

        r0.<com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne: com.hp.hpl.jena.sparql.algebra.Op result> = $r5;

        return;
    }

    protected void visit1(com.hp.hpl.jena.sparql.algebra.op.Op1)
    {
        com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne r0;
        com.hp.hpl.jena.sparql.algebra.op.Op1 r1;
        com.hp.hpl.jena.sparql.algebra.Transform $r2;
        com.hp.hpl.jena.sparql.algebra.Op $r3, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.Op1;

        $r2 = r0.<com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne: com.hp.hpl.jena.sparql.algebra.Transform transform>;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.Op1: com.hp.hpl.jena.sparql.algebra.Op getSubOp()>();

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.Op1: com.hp.hpl.jena.sparql.algebra.Op apply(com.hp.hpl.jena.sparql.algebra.Transform,com.hp.hpl.jena.sparql.algebra.Op)>($r2, $r3);

        r0.<com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne: com.hp.hpl.jena.sparql.algebra.Op result> = $r4;

        return;
    }

    protected void visit0(com.hp.hpl.jena.sparql.algebra.op.Op0)
    {
        com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne r0;
        com.hp.hpl.jena.sparql.algebra.op.Op0 r1;
        com.hp.hpl.jena.sparql.algebra.Transform $r2;
        com.hp.hpl.jena.sparql.algebra.Op $r3;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.Op0;

        $r2 = r0.<com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne: com.hp.hpl.jena.sparql.algebra.Transform transform>;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.Op0: com.hp.hpl.jena.sparql.algebra.Op apply(com.hp.hpl.jena.sparql.algebra.Transform)>($r2);

        r0.<com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne: com.hp.hpl.jena.sparql.algebra.Op result> = $r3;

        return;
    }

    protected void visitFilter(com.hp.hpl.jena.sparql.algebra.op.OpFilter)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpFilter r1;
        com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne r0;
        com.hp.hpl.jena.sparql.algebra.Transform $r2;
        com.hp.hpl.jena.sparql.algebra.Op $r3, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpFilter;

        $r2 = r0.<com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne: com.hp.hpl.jena.sparql.algebra.Transform transform>;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpFilter: com.hp.hpl.jena.sparql.algebra.Op getSubOp()>();

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpFilter: com.hp.hpl.jena.sparql.algebra.Op apply(com.hp.hpl.jena.sparql.algebra.Transform,com.hp.hpl.jena.sparql.algebra.Op)>($r2, $r3);

        r0.<com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne: com.hp.hpl.jena.sparql.algebra.Op result> = $r4;

        return;
    }

    protected void visitExt(com.hp.hpl.jena.sparql.algebra.op.OpExt)
    {
        com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne r0;
        com.hp.hpl.jena.sparql.algebra.op.OpExt r1;
        com.hp.hpl.jena.sparql.algebra.Transform $r2;
        com.hp.hpl.jena.sparql.algebra.Op $r3;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpExt;

        $r2 = r0.<com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne: com.hp.hpl.jena.sparql.algebra.Transform transform>;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpExt: com.hp.hpl.jena.sparql.algebra.Op apply(com.hp.hpl.jena.sparql.algebra.Transform)>($r2);

        r0.<com.hp.hpl.jena.sparql.algebra.Transformer$OpTransformApplyOne: com.hp.hpl.jena.sparql.algebra.Op result> = $r3;

        return;
    }
}
