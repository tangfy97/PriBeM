class org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses extends java.util.WeakHashMap
{
    int version;
    public static final int CACHE_SIZE;
    final groovy.lang.MetaClass[] cache;
    int nextCacheEntry;
    private final org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl this$0;

    private void <init>(org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl)
    {
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl r1;
        groovy.lang.MetaClass[] $r2;
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses r0;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses;

        r1 := @parameter0: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl;

        r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl this$0> = r1;

        specialinvoke r0.<java.util.WeakHashMap: void <init>()>();

        $r2 = newarray (groovy.lang.MetaClass)[5];

        r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses: groovy.lang.MetaClass[] cache> = $r2;

        return;
    }

    public groovy.lang.MetaClass getMetaClass(java.lang.Class)
    {
        groovy.lang.MetaClass $r4, $r5, $r6;
        java.lang.Integer $r2;
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses r0;
        int $i0, $i1;
        java.lang.Class r3;
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl $r1;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses;

        r3 := @parameter0: java.lang.Class;

        $r1 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl this$0>;

        $r2 = staticinvoke <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: java.lang.Integer access$000(org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl)>($r1);

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $i1 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses: int version>;

        if $i1 == $i0 goto label1;

        virtualinvoke r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses: void clear()>();

        goto label3;

     label1:
        $r4 = specialinvoke r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses: groovy.lang.MetaClass checkCache(java.lang.Class)>(r3);

        if $r4 == null goto label2;

        return $r4;

     label2:
        $r5 = specialinvoke r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses: groovy.lang.MetaClass checkMap(java.lang.Class)>(r3);

        if $r5 == null goto label3;

        return $r5;

     label3:
        $r6 = specialinvoke r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses: groovy.lang.MetaClass getFromGlobal(java.lang.Class)>(r3);

        return $r6;
    }

    private groovy.lang.MetaClass checkCache(java.lang.Class)
    {
        groovy.lang.MetaClass r2;
        groovy.lang.MetaClass[] $r1;
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses r0;
        int i0;
        java.lang.Class $r3, r4;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses;

        r4 := @parameter0: java.lang.Class;

        i0 = 0;

     label1:
        if i0 == 5 goto label3;

        $r1 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses: groovy.lang.MetaClass[] cache>;

        r2 = $r1[i0];

        if r2 == null goto label2;

        $r3 = interfaceinvoke r2.<groovy.lang.MetaClass: java.lang.Class getTheClass()>();

        if $r3 != r4 goto label2;

        return r2;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return null;
    }

    private groovy.lang.MetaClass checkMap(java.lang.Class)
    {
        groovy.lang.MetaClass $r5;
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses r0;
        java.lang.Class r1;
        java.lang.Object $r2, $r4;
        java.lang.ref.SoftReference r3;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.lang.ref.SoftReference) $r2;

        if r3 == null goto label1;

        $r4 = virtualinvoke r3.<java.lang.ref.SoftReference: java.lang.Object get()>();

        $r5 = (groovy.lang.MetaClass) $r4;

        if $r5 == null goto label1;

        specialinvoke r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses: void putToCache(groovy.lang.MetaClass)>($r5);

        return $r5;

     label1:
        return null;
    }

    private groovy.lang.MetaClass getFromGlobal(java.lang.Class)
    {
        groovy.lang.MetaClass $r3;
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses r0;
        int $i0;
        java.lang.Class r1;
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl $r2, $r4;
        java.lang.Integer $r5;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl this$0>;

        $r3 = staticinvoke <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: groovy.lang.MetaClass access$100(org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl,java.lang.Class)>($r2, r1);

        virtualinvoke r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        $r4 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl this$0>;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl: java.lang.Integer access$000(org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl)>($r4);

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses: int version> = $i0;

        return $r3;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        groovy.lang.MetaClass $r2;
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses r0;
        java.lang.Object r1, r3, $r5;
        java.lang.ref.SoftReference $r4;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses;

        r3 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r2 = (groovy.lang.MetaClass) r1;

        specialinvoke r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses: void putToCache(groovy.lang.MetaClass)>($r2);

        $r4 = new java.lang.ref.SoftReference;

        specialinvoke $r4.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>(r1);

        $r5 = specialinvoke r0.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r4);

        return $r5;
    }

    private void putToCache(groovy.lang.MetaClass)
    {
        groovy.lang.MetaClass r2;
        groovy.lang.MetaClass[] $r1;
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses r0;
        int $i0, $i1, $i2;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses;

        r2 := @parameter0: groovy.lang.MetaClass;

        $r1 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses: groovy.lang.MetaClass[] cache>;

        $i0 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses: int nextCacheEntry>;

        $i1 = $i0 + 1;

        r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses: int nextCacheEntry> = $i1;

        $r1[$i0] = r2;

        $i2 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses: int nextCacheEntry>;

        if $i2 != 5 goto label1;

        r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses: int nextCacheEntry> = 0;

     label1:
        return;
    }

    public void clear()
    {
        groovy.lang.MetaClass[] $r1, $r2;
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses r0;
        int $i0, i1;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses;

        i1 = 0;

     label1:
        $r1 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses: groovy.lang.MetaClass[] cache>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r2 = r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses: groovy.lang.MetaClass[] cache>;

        $r2[i1] = null;

        i1 = i1 + 1;

        goto label1;

     label2:
        specialinvoke r0.<java.util.WeakHashMap: void clear()>();

        return;
    }

    void <init>(org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl, org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$1)
    {
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl r1;
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses r0;
        org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$1 r2;

        r0 := @this: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses;

        r1 := @parameter0: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl;

        r2 := @parameter1: org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$1;

        specialinvoke r0.<org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses: void <init>(org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl$LocallyKnownClasses: int CACHE_SIZE> = 5;

        return;
    }
}
