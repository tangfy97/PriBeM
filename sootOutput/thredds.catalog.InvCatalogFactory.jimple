public class thredds.catalog.InvCatalogFactory extends java.lang.Object
{
    private static org.slf4j.Logger log;
    public static boolean debugURL;
    public static boolean debugOpen;
    public static boolean debugVersion;
    public static boolean showParsedXML;
    public static boolean showStackTrace;
    public static boolean debugXML;
    public static boolean debugDBurl;
    public static boolean debugXMLopen;
    public static boolean showCatalogXML;
    private java.lang.String name;
    private thredds.catalog.InvCatalogConvertIF defaultConverter;
    private org.jdom.input.SAXBuilder saxBuilder;
    private java.lang.StringBuilder warnMessages;
    private java.lang.StringBuilder errMessages;
    private java.lang.StringBuilder fatalMessages;
    private java.util.Map converters;
    private java.util.Map metadataConverters;
    private java.util.List dataRootLocAliasExpanders;

    public static thredds.catalog.InvCatalogFactory getDefaultFactory(boolean)
    {
        thredds.catalog.InvCatalogFactory $r0;
        boolean z0;

        z0 := @parameter0: boolean;

        $r0 = new thredds.catalog.InvCatalogFactory;

        specialinvoke $r0.<thredds.catalog.InvCatalogFactory: void <init>(java.lang.String,boolean)>("default", z0);

        return $r0;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        thredds.catalog.InvCatalogFactory r0;

        r0 := @this: thredds.catalog.InvCatalogFactory;

        $r1 = r0.<thredds.catalog.InvCatalogFactory: java.lang.String name>;

        return $r1;
    }

    public void <init>(java.lang.String, boolean)
    {
        org.jdom.input.SAXBuilder $r6;
        java.util.HashMap $r1, $r2;
        thredds.catalog.XMLEntityResolver $r5;
        java.util.List $r3;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String r4;
        thredds.catalog.InvCatalogFactory r0;
        boolean z0;

        r0 := @this: thredds.catalog.InvCatalogFactory;

        r4 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>(10);

        r0.<thredds.catalog.InvCatalogFactory: java.util.Map converters> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(10);

        r0.<thredds.catalog.InvCatalogFactory: java.util.Map metadataConverters> = $r2;

        $r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<thredds.catalog.InvCatalogFactory: java.util.List dataRootLocAliasExpanders> = $r3;

        r0.<thredds.catalog.InvCatalogFactory: java.lang.String name> = r4;

        $r5 = new thredds.catalog.XMLEntityResolver;

        specialinvoke $r5.<thredds.catalog.XMLEntityResolver: void <init>(boolean)>(z0);

        $r6 = virtualinvoke $r5.<thredds.catalog.XMLEntityResolver: org.jdom.input.SAXBuilder getSAXBuilder()>();

        r0.<thredds.catalog.InvCatalogFactory: org.jdom.input.SAXBuilder saxBuilder> = $r6;

        $r7 = virtualinvoke $r5.<thredds.catalog.XMLEntityResolver: java.lang.StringBuilder getWarningMessages()>();

        r0.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder warnMessages> = $r7;

        $r8 = virtualinvoke $r5.<thredds.catalog.XMLEntityResolver: java.lang.StringBuilder getErrorMessages()>();

        r0.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder errMessages> = $r8;

        $r9 = virtualinvoke $r5.<thredds.catalog.XMLEntityResolver: java.lang.StringBuilder getFatalMessages()>();

        r0.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder fatalMessages> = $r9;

        specialinvoke r0.<thredds.catalog.InvCatalogFactory: void setDefaults()>();

        return;
    }

    public void setDataRootLocationAliasExpanders(java.util.List)
    {
        java.util.Iterator $r5;
        java.util.Collection $r4;
        java.util.ArrayList $r2;
        java.util.List r0, $r8, $r10;
        java.util.Map $r3;
        thredds.catalog.InvCatalogConvertIF r7;
        java.lang.Object $r6;
        thredds.catalog.parser.jdom.InvCatalogFactory10 $r9;
        thredds.catalog.InvCatalogFactory r1;
        boolean $z0, $z1;

        r1 := @this: thredds.catalog.InvCatalogFactory;

        r0 := @parameter0: java.util.List;

        if r0 != null goto label1;

        $r10 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r1.<thredds.catalog.InvCatalogFactory: java.util.List dataRootLocAliasExpanders> = $r10;

        goto label2;

     label1:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>(r0);

        r1.<thredds.catalog.InvCatalogFactory: java.util.List dataRootLocAliasExpanders> = $r2;

     label2:
        $r3 = r1.<thredds.catalog.InvCatalogFactory: java.util.Map converters>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (thredds.catalog.InvCatalogConvertIF) $r6;

        $z0 = r7 instanceof thredds.catalog.parser.jdom.InvCatalogFactory10;

        if $z0 == 0 goto label4;

        $r9 = (thredds.catalog.parser.jdom.InvCatalogFactory10) r7;

        $r8 = r1.<thredds.catalog.InvCatalogFactory: java.util.List dataRootLocAliasExpanders>;

        virtualinvoke $r9.<thredds.catalog.parser.jdom.InvCatalogFactory10: void setDataRootLocationAliasExpanders(java.util.List)>($r8);

     label4:
        goto label3;

     label5:
        return;
    }

    public java.util.List getDataRootLocationAliasExpanders()
    {
        java.util.List $r1, $r2;
        thredds.catalog.InvCatalogFactory r0;

        r0 := @this: thredds.catalog.InvCatalogFactory;

        $r1 = r0.<thredds.catalog.InvCatalogFactory: java.util.List dataRootLocAliasExpanders>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    private void setDefaults()
    {
        thredds.catalog.InvCatalogConvertIF $r3, $r4;
        java.lang.InstantiationException $r12;
        java.lang.String $r9, $r11, $r16, $r18, $r23, $r25;
        thredds.catalog.InvCatalogFactory r2;
        java.lang.IllegalAccessException $r5;
        java.lang.RuntimeException $r6, $r13, $r20;
        java.lang.Class $r0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r7, $r8, $r10, $r14, $r15, $r17, $r21, $r22, $r24;
        java.lang.ClassNotFoundException $r19;

        r2 := @this: thredds.catalog.InvCatalogFactory;

     label1:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("thredds.catalog.parser.jdom.InvCatalogFactory10");

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>();

        $r3 = (thredds.catalog.InvCatalogConvertIF) $r1;

        r2.<thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogConvertIF defaultConverter> = $r3;

        $r4 = (thredds.catalog.InvCatalogConvertIF) $r1;

        virtualinvoke r2.<thredds.catalog.InvCatalogFactory: void registerCatalogConverter(java.lang.String,thredds.catalog.InvCatalogConvertIF)>("http://www.unidata.ucar.edu/namespaces/thredds/InvCatalog/v1.0", $r4);

     label2:
        goto label6;

     label3:
        $r19 := @caughtexception;

        $r20 = new java.lang.RuntimeException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InvCatalogFactory: no implementing class found: ");

        $r23 = virtualinvoke $r19.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>($r25);

        throw $r20;

     label4:
        $r12 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InvCatalogFactory: instantition failed: ");

        $r16 = virtualinvoke $r12.<java.lang.InstantiationException: java.lang.String getMessage()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InvCatalogFactory: access failed: ");

        $r9 = virtualinvoke $r5.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label6:
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.InstantiationException from label1 to label2 with label4;
        catch java.lang.IllegalAccessException from label1 to label2 with label5;
    }

    public void registerCatalogConverter(java.lang.String, thredds.catalog.InvCatalogConvertIF)
    {
        java.util.Map $r3;
        thredds.catalog.InvCatalogConvertIF r2;
        java.lang.String r1;
        thredds.catalog.InvCatalogFactory r0;

        r0 := @this: thredds.catalog.InvCatalogFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: thredds.catalog.InvCatalogConvertIF;

        $r3 = r0.<thredds.catalog.InvCatalogFactory: java.util.Map converters>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public thredds.catalog.InvCatalogConvertIF getCatalogConverter(java.lang.String)
    {
        java.util.Map $r2;
        thredds.catalog.InvCatalogConvertIF $r4;
        java.lang.Object $r3;
        java.lang.String r1;
        thredds.catalog.InvCatalogFactory r0;

        r0 := @this: thredds.catalog.InvCatalogFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<thredds.catalog.InvCatalogFactory: java.util.Map converters>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (thredds.catalog.InvCatalogConvertIF) $r3;

        return $r4;
    }

    public void setCatalogConverter(thredds.catalog.InvCatalogImpl, java.lang.String)
    {
        thredds.catalog.InvCatalogImpl r0;
        thredds.catalog.InvCatalogConvertIF $r3;
        java.lang.String r2;
        thredds.catalog.InvCatalogFactory r1;

        r1 := @this: thredds.catalog.InvCatalogFactory;

        r0 := @parameter0: thredds.catalog.InvCatalogImpl;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r1.<thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogConvertIF getCatalogConverter(java.lang.String)>(r2);

        virtualinvoke r0.<thredds.catalog.InvCatalogImpl: void setCatalogConverter(thredds.catalog.InvCatalogConvertIF)>($r3);

        return;
    }

    public void registerMetadataConverter(java.lang.String, thredds.catalog.MetadataConverterIF)
    {
        java.util.Map $r3;
        thredds.catalog.MetadataConverterIF r2;
        java.lang.String r1;
        thredds.catalog.InvCatalogFactory r0;

        r0 := @this: thredds.catalog.InvCatalogFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: thredds.catalog.MetadataConverterIF;

        $r3 = r0.<thredds.catalog.InvCatalogFactory: java.util.Map metadataConverters>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void readXMLasynch(java.lang.String, thredds.catalog.CatalogSetCallback)
    {
        thredds.catalog.InvCatalogImpl $r2;
        thredds.catalog.CatalogSetCallback r3;
        java.lang.String r1;
        thredds.catalog.InvCatalogFactory r0;

        r0 := @this: thredds.catalog.InvCatalogFactory;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: thredds.catalog.CatalogSetCallback;

        $r2 = virtualinvoke r0.<thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogImpl readXML(java.lang.String)>(r1);

        interfaceinvoke r3.<thredds.catalog.CatalogSetCallback: void setCatalog(thredds.catalog.InvCatalogImpl)>($r2);

        return;
    }

    public thredds.catalog.InvCatalogImpl readXML(java.lang.String)
    {
        java.net.URISyntaxException $r4;
        thredds.catalog.InvCatalogImpl $r3, $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r11, $r12;
        java.net.URI $r0;
        java.lang.String r1, $r10, $r13;
        thredds.catalog.InvCatalogFactory r2;

        r2 := @this: thredds.catalog.InvCatalogFactory;

        r1 := @parameter0: java.lang.String;

     label1:
        $r0 = new java.net.URI;

        specialinvoke $r0.<java.net.URI: void <init>(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new thredds.catalog.InvCatalogImpl;

        specialinvoke $r5.<thredds.catalog.InvCatalogImpl: void <init>(java.lang.String,java.lang.String,java.net.URI)>(r1, null, null);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("**Fatal:  InvCatalogFactory.readXML URISyntaxException on URL (");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r10 = virtualinvoke $r4.<java.net.URISyntaxException: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<thredds.catalog.InvCatalogImpl: void appendErrorMessage(java.lang.String,boolean)>($r13, 1);

        return $r5;

     label4:
        $r3 = virtualinvoke r2.<thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogImpl readXML(java.net.URI)>($r0);

        return $r3;

        catch java.net.URISyntaxException from label1 to label2 with label3;
    }

    public thredds.catalog.InvCatalogImpl readXML(java.net.URI)
    {
        org.jdom.Document $r7;
        thredds.catalog.InvCatalogFactory r0;
        java.lang.Exception $r35;
        thredds.catalog.InvCatalogImpl $r8, $r9, $r36;
        java.lang.StringBuilder $r1, $r2, $r3, $r11, $r12, $r13, $r15, $r16, $r19, $r21, $r23, $r24, $r28, $r30, $r32, $r33, $r38, $r39, $r42, $r43, $r45, $r46, $r47, $r49, $r50, $r51, $r53, $r54, $r55, $r57, $r58, $r61, $r63, $r65, $r66, $r68;
        java.lang.Throwable $r26;
        java.lang.String $r10, $r14, $r17, $r22, $r25, $r31, $r34, $r37, $r41, $r44, $r48, $r52, $r56, $r59, $r64, $r67;
        java.io.IOException $r18, $r27, $r60;
        java.net.URL $r6;
        java.lang.NullPointerException r69, r70, r71;
        java.net.URI r4;
        org.jdom.input.SAXBuilder $r5;
        int $i0;
        org.slf4j.Logger $r20, $r29, $r62;
        java.lang.Class $r40;

        r0 := @this: thredds.catalog.InvCatalogFactory;

        r4 := @parameter0: java.net.URI;

        $r1 = r0.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder warnMessages>;

        virtualinvoke $r1.<java.lang.StringBuilder: void setLength(int)>(0);

        $r2 = r0.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder errMessages>;

        virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>(0);

        $r3 = r0.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder fatalMessages>;

        virtualinvoke $r3.<java.lang.StringBuilder: void setLength(int)>(0);

     label01:
        $r5 = r0.<thredds.catalog.InvCatalogFactory: org.jdom.input.SAXBuilder saxBuilder>;

        $r6 = virtualinvoke r4.<java.net.URI: java.net.URL toURL()>();

        $r7 = virtualinvoke $r5.<org.jdom.input.SAXBuilder: org.jdom.Document build(java.net.URL)>($r6);

     label02:
        if null == null goto label15;

     label03:
        r69 = new java.lang.NullPointerException;

        specialinvoke r69.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: virtualinvoke is_1.<java.io.InputStream: void close()>()");

        throw r69;

     label04:
        $r60 := @caughtexception;

        $r62 = <thredds.catalog.InvCatalogFactory: org.slf4j.Logger log>;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to close input stream [");

        $r64 = virtualinvoke r4.<java.net.URI: java.lang.String toString()>();

        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r62.<org.slf4j.Logger: void warn(java.lang.String)>($r67);

        goto label15;

     label05:
        $r35 := @caughtexception;

        $r36 = new thredds.catalog.InvCatalogImpl;

        $r37 = virtualinvoke r4.<java.net.URI: java.lang.String toString()>();

        specialinvoke $r36.<thredds.catalog.InvCatalogImpl: void <init>(java.lang.String,java.lang.String,java.net.URI)>($r37, null, null);

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("**Fatal:  InvCatalogFactory.readXML failed\n Exception= ");

        $r40 = virtualinvoke $r35.<java.lang.Object: java.lang.Class getClass()>();

        $r41 = virtualinvoke $r40.<java.lang.Class: java.lang.String getName()>();

        $r42 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r44 = virtualinvoke $r35.<java.lang.Exception: java.lang.String getMessage()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n fatalMessages= ");

        $r47 = r0.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder fatalMessages>;

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        $r49 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n errMessages= ");

        $r51 = r0.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder errMessages>;

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        $r53 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n warnMessages= ");

        $r55 = r0.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder warnMessages>;

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        $r57 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r36.<thredds.catalog.InvCatalogImpl: void appendErrorMessage(java.lang.String,boolean)>($r59, 1);

     label06:
        if null == null goto label09;

     label07:
        r70 = new java.lang.NullPointerException;

        specialinvoke r70.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: virtualinvoke is_2.<java.io.InputStream: void close()>()");

        throw r70;

     label08:
        $r27 := @caughtexception;

        $r29 = <thredds.catalog.InvCatalogFactory: org.slf4j.Logger log>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to close input stream [");

        $r31 = virtualinvoke r4.<java.net.URI: java.lang.String toString()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r29.<org.slf4j.Logger: void warn(java.lang.String)>($r34);

     label09:
        return $r36;

     label10:
        $r26 := @caughtexception;

     label11:
        if null == null goto label14;

     label12:
        r71 = new java.lang.NullPointerException;

        specialinvoke r71.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: virtualinvoke is_3.<java.io.InputStream: void close()>()");

        throw r71;

     label13:
        $r18 := @caughtexception;

        $r20 = <thredds.catalog.InvCatalogFactory: org.slf4j.Logger log>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to close input stream [");

        $r22 = virtualinvoke r4.<java.net.URI: java.lang.String toString()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<org.slf4j.Logger: void warn(java.lang.String)>($r25);

     label14:
        throw $r26;

     label15:
        $r68 = r0.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder fatalMessages>;

        $i0 = virtualinvoke $r68.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label16;

        $r9 = new thredds.catalog.InvCatalogImpl;

        $r10 = virtualinvoke r4.<java.net.URI: java.lang.String toString()>();

        specialinvoke $r9.<thredds.catalog.InvCatalogImpl: void <init>(java.lang.String,java.lang.String,java.net.URI)>($r10, null, null);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("**Fatal:  InvCatalogFactory.readXML XML Fatal error(s) =\n");

        $r13 = r0.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder fatalMessages>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<thredds.catalog.InvCatalogImpl: void appendErrorMessage(java.lang.String,boolean)>($r17, 1);

        return $r9;

     label16:
        $r8 = virtualinvoke r0.<thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogImpl readXML(org.jdom.Document,java.net.URI)>($r7, r4);

        return $r8;

        catch java.io.IOException from label03 to label04 with label04;
        catch java.lang.Exception from label01 to label02 with label05;
        catch java.io.IOException from label07 to label08 with label08;
        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.io.IOException from label12 to label13 with label13;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public thredds.catalog.InvCatalogImpl readXML(java.lang.String, java.net.URI)
    {
        thredds.catalog.InvCatalogImpl $r4;
        java.io.StringReader $r1;
        java.lang.String r2;
        java.net.URI r3;
        thredds.catalog.InvCatalogFactory r0;

        r0 := @this: thredds.catalog.InvCatalogFactory;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.net.URI;

        $r1 = new java.io.StringReader;

        specialinvoke $r1.<java.io.StringReader: void <init>(java.lang.String)>(r2);

        $r4 = virtualinvoke r0.<thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogImpl readXML(java.io.StringReader,java.net.URI)>($r1, r3);

        return $r4;
    }

    public thredds.catalog.InvCatalogImpl readXML(java.io.StringReader, java.net.URI)
    {
        thredds.catalog.XMLEntityResolver $r0;
        org.jdom.Document $r3;
        java.net.URI r5;
        thredds.catalog.InvCatalogFactory r4;
        java.lang.Exception $r7;
        thredds.catalog.InvCatalogImpl $r6, $r8;
        java.lang.StringBuilder $r10, $r11, $r14, $r15, $r17, $r18, $r19, $r21, $r22, $r23, $r25, $r26, $r27, $r29, $r30;
        org.jdom.input.SAXBuilder $r1;
        java.lang.String $r9, $r13, $r16, $r20, $r24, $r28, $r31;
        java.io.StringReader r2;
        java.lang.Class $r12;

        r4 := @this: thredds.catalog.InvCatalogFactory;

        r2 := @parameter0: java.io.StringReader;

        r5 := @parameter1: java.net.URI;

        $r0 = new thredds.catalog.XMLEntityResolver;

        specialinvoke $r0.<thredds.catalog.XMLEntityResolver: void <init>(boolean)>(0);

        $r1 = virtualinvoke $r0.<thredds.catalog.XMLEntityResolver: org.jdom.input.SAXBuilder getSAXBuilder()>();

     label1:
        $r3 = virtualinvoke $r1.<org.jdom.input.SAXBuilder: org.jdom.Document build(java.io.Reader)>(r2);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new thredds.catalog.InvCatalogImpl;

        $r9 = virtualinvoke r5.<java.net.URI: java.lang.String toString()>();

        specialinvoke $r8.<thredds.catalog.InvCatalogImpl: void <init>(java.lang.String,java.lang.String,java.net.URI)>($r9, null, null);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("**Fatal:  InvCatalogFactory.readXML(String catAsString, URI uri) failed:\n  Exception= ");

        $r12 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r16 = virtualinvoke $r7.<java.lang.Exception: java.lang.String getMessage()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  fatalMessages= ");

        $r19 = r4.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder fatalMessages>;

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  errMessages= ");

        $r23 = r4.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder errMessages>;

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  warnMessages= ");

        $r27 = r4.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder warnMessages>;

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<thredds.catalog.InvCatalogImpl: void appendErrorMessage(java.lang.String,boolean)>($r31, 1);

        return $r8;

     label4:
        $r6 = virtualinvoke r4.<thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogImpl readXML(org.jdom.Document,java.net.URI)>($r3, r5);

        return $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public thredds.catalog.InvCatalogImpl readXML(java.io.InputStream, java.net.URI)
    {
        org.jdom.Document $r6;
        java.net.URI r8;
        thredds.catalog.InvCatalogFactory r0;
        java.lang.Exception $r19;
        thredds.catalog.InvCatalogImpl $r9, $r10, $r20;
        java.lang.StringBuilder $r1, $r2, $r3, $r7, $r12, $r13, $r14, $r16, $r17, $r22, $r23, $r26, $r27, $r29, $r30, $r31, $r33, $r34, $r35, $r37, $r38, $r39, $r41, $r42;
        org.jdom.input.SAXBuilder $r5;
        int $i0;
        java.lang.String $r11, $r15, $r18, $r21, $r25, $r28, $r32, $r36, $r40, $r43;
        java.lang.Class $r24;
        java.io.InputStream r4;

        r0 := @this: thredds.catalog.InvCatalogFactory;

        r4 := @parameter0: java.io.InputStream;

        r8 := @parameter1: java.net.URI;

        $r1 = r0.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder warnMessages>;

        virtualinvoke $r1.<java.lang.StringBuilder: void setLength(int)>(0);

        $r2 = r0.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder errMessages>;

        virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>(0);

        $r3 = r0.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder fatalMessages>;

        virtualinvoke $r3.<java.lang.StringBuilder: void setLength(int)>(0);

     label1:
        $r5 = r0.<thredds.catalog.InvCatalogFactory: org.jdom.input.SAXBuilder saxBuilder>;

        $r6 = virtualinvoke $r5.<org.jdom.input.SAXBuilder: org.jdom.Document build(java.io.InputStream)>(r4);

     label2:
        goto label4;

     label3:
        $r19 := @caughtexception;

        $r20 = new thredds.catalog.InvCatalogImpl;

        $r21 = virtualinvoke r8.<java.net.URI: java.lang.String toString()>();

        specialinvoke $r20.<thredds.catalog.InvCatalogImpl: void <init>(java.lang.String,java.lang.String,java.net.URI)>($r21, null, r8);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("**Fatal:  InvCatalogFactory.readXML failed\n Exception= ");

        $r24 = virtualinvoke $r19.<java.lang.Object: java.lang.Class getClass()>();

        $r25 = virtualinvoke $r24.<java.lang.Class: java.lang.String getName()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r28 = virtualinvoke $r19.<java.lang.Exception: java.lang.String getMessage()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n fatalMessages= ");

        $r31 = r0.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder fatalMessages>;

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n errMessages= ");

        $r35 = r0.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder errMessages>;

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        $r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n warnMessages= ");

        $r39 = r0.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder warnMessages>;

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        $r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<thredds.catalog.InvCatalogImpl: void appendErrorMessage(java.lang.String,boolean)>($r43, 1);

        return $r20;

     label4:
        $r7 = r0.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder fatalMessages>;

        $i0 = virtualinvoke $r7.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label5;

        $r10 = new thredds.catalog.InvCatalogImpl;

        $r11 = virtualinvoke r8.<java.net.URI: java.lang.String toString()>();

        specialinvoke $r10.<thredds.catalog.InvCatalogImpl: void <init>(java.lang.String,java.lang.String,java.net.URI)>($r11, null, r8);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("**Fatal:  InvCatalogFactory.readXML XML Fatal error(s) =\n");

        $r14 = r0.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder fatalMessages>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<thredds.catalog.InvCatalogImpl: void appendErrorMessage(java.lang.String,boolean)>($r18, 1);

        return $r10;

     label5:
        $r9 = virtualinvoke r0.<thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogImpl readXML(org.jdom.Document,java.net.URI)>($r6, r8);

        return $r9;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public thredds.catalog.InvCatalogImpl readXML(org.jdom.Document, java.net.URI)
    {
        org.jdom.Document r0;
        java.util.Map $r5;
        thredds.catalog.InvCatalogConvertIF r39;
        java.net.URI r7;
        thredds.catalog.InvCatalogFactory r4;
        boolean $z0, $z1, $z2, $z3;
        thredds.catalog.InvCatalogImpl $r40;
        java.lang.StringBuilder $r8, $r9, $r10, $r12, $r14, $r18, $r20, $r23, $r24, $r25, $r27, $r29, $r32, $r33, $r34, $r42;
        int $i0, $i1, $i2;
        java.lang.String $r2, $r3, $r11, $r13, $r15, $r22, $r26, $r31, $r35, $r41;
        java.io.PrintStream $r16, $r17, $r19, $r28;
        org.slf4j.Logger $r38;
        java.io.IOException $r37;
        java.lang.IllegalArgumentException $r36;
        java.lang.Object $r6;
        java.lang.Class $r21, $r30;
        org.jdom.Element $r1;

        r4 := @this: thredds.catalog.InvCatalogFactory;

        r0 := @parameter0: org.jdom.Document;

        r7 := @parameter1: java.net.URI;

        $r1 = virtualinvoke r0.<org.jdom.Document: org.jdom.Element getRootElement()>();

        $r2 = virtualinvoke $r1.<org.jdom.Element: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("catalog");

        if $z0 != 0 goto label01;

        $r36 = new java.lang.IllegalArgumentException;

        specialinvoke $r36.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("not a catalog");

        throw $r36;

     label01:
        $r3 = virtualinvoke $r1.<org.jdom.Element: java.lang.String getNamespaceURI()>();

        $r5 = r4.<thredds.catalog.InvCatalogFactory: java.util.Map converters>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r39 = (thredds.catalog.InvCatalogConvertIF) $r6;

        if r39 != null goto label02;

        r39 = r4.<thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogConvertIF defaultConverter>;

        $z2 = <thredds.catalog.InvCatalogFactory: boolean debugVersion>;

        if $z2 == 0 goto label03;

        $r28 = <java.lang.System: java.io.PrintStream out>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("use default converter ");

        $r30 = virtualinvoke r39.<java.lang.Object: java.lang.Class getClass()>();

        $r31 = virtualinvoke $r30.<java.lang.Class: java.lang.String getName()>();

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; no namespace ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r35);

        goto label03;

     label02:
        $z1 = <thredds.catalog.InvCatalogFactory: boolean debugVersion>;

        if $z1 == 0 goto label03;

        $r19 = <java.lang.System: java.io.PrintStream out>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("use converter ");

        $r21 = virtualinvoke r39.<java.lang.Object: java.lang.Class getClass()>();

        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.String getName()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" based on namespace ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r26);

     label03:
        $r40 = interfaceinvoke r39.<thredds.catalog.InvCatalogConvertIF: thredds.catalog.InvCatalogImpl parseXML(thredds.catalog.InvCatalogFactory,org.jdom.Document,java.net.URI)>(r4, r0, r7);

        $r41 = virtualinvoke r7.<java.net.URI: java.lang.String toString()>();

        virtualinvoke $r40.<thredds.catalog.InvCatalogImpl: void setCreateFrom(java.lang.String)>($r41);

        virtualinvoke $r40.<thredds.catalog.InvCatalogImpl: void setCatalogFactory(thredds.catalog.InvCatalogFactory)>(r4);

        virtualinvoke $r40.<thredds.catalog.InvCatalogImpl: void setCatalogConverter(thredds.catalog.InvCatalogConvertIF)>(r39);

        virtualinvoke $r40.<thredds.catalog.InvCatalogImpl: boolean finish()>();

        $z3 = <thredds.catalog.InvCatalogFactory: boolean showCatalogXML>;

        if $z3 == 0 goto label07;

        $r16 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>("*** catalog/showCatalogXML");

     label04:
        $r17 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke r4.<thredds.catalog.InvCatalogFactory: void writeXML(thredds.catalog.InvCatalogImpl,java.io.OutputStream)>($r40, $r17);

     label05:
        goto label07;

     label06:
        $r37 := @caughtexception;

        $r38 = <thredds.catalog.InvCatalogFactory: org.slf4j.Logger log>;

        interfaceinvoke $r38.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Error writing catalog for debugging", $r37);

     label07:
        $r42 = r4.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder fatalMessages>;

        $i2 = virtualinvoke $r42.<java.lang.StringBuilder: int length()>();

        if $i2 <= 0 goto label08;

        $r14 = r4.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder fatalMessages>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r40.<thredds.catalog.InvCatalogImpl: void appendErrorMessage(java.lang.String,boolean)>($r15, 1);

     label08:
        $r8 = r4.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder errMessages>;

        $i0 = virtualinvoke $r8.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label09;

        $r12 = r4.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder errMessages>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r40.<thredds.catalog.InvCatalogImpl: void appendErrorMessage(java.lang.String,boolean)>($r13, 0);

     label09:
        $r9 = r4.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder warnMessages>;

        $i1 = virtualinvoke $r9.<java.lang.StringBuilder: int length()>();

        if $i1 <= 0 goto label10;

        $r10 = r4.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder warnMessages>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r40.<thredds.catalog.InvCatalogImpl: void appendErrorMessage(java.lang.String,boolean)>($r11, 0);

     label10:
        return $r40;

        catch java.io.IOException from label04 to label05 with label06;
    }

    public java.lang.String writeXML(thredds.catalog.InvCatalogImpl) throws java.io.IOException
    {
        thredds.catalog.InvCatalogImpl r2;
        java.io.ByteArrayOutputStream $r0;
        java.lang.String $r3;
        thredds.catalog.InvCatalogFactory r1;

        r1 := @this: thredds.catalog.InvCatalogFactory;

        r2 := @parameter0: thredds.catalog.InvCatalogImpl;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>(int)>(10000);

        virtualinvoke r1.<thredds.catalog.InvCatalogFactory: void writeXML(thredds.catalog.InvCatalogImpl,java.io.OutputStream)>(r2, $r0);

        $r3 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        return $r3;
    }

    public void writeXML(thredds.catalog.InvCatalogImpl, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r2;
        thredds.catalog.InvCatalogImpl r0;
        thredds.catalog.InvCatalogConvertIF $r1, r4;
        thredds.catalog.InvCatalogFactory r3;

        r3 := @this: thredds.catalog.InvCatalogFactory;

        r0 := @parameter0: thredds.catalog.InvCatalogImpl;

        r2 := @parameter1: java.io.OutputStream;

        $r1 = virtualinvoke r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvCatalogConvertIF getCatalogConverter()>();

        r4 = $r1;

        if $r1 != null goto label1;

        r4 = r3.<thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogConvertIF defaultConverter>;

     label1:
        interfaceinvoke r4.<thredds.catalog.InvCatalogConvertIF: void writeXML(thredds.catalog.InvCatalogImpl,java.io.OutputStream)>(r0, r2);

        return;
    }

    public void writeXML(thredds.catalog.InvCatalogImpl, java.io.OutputStream, boolean) throws java.io.IOException
    {
        java.io.OutputStream r2;
        thredds.catalog.InvCatalogImpl r0;
        thredds.catalog.InvCatalogConvertIF $r1, r4;
        thredds.catalog.InvCatalogFactory r3;
        boolean z0;

        r3 := @this: thredds.catalog.InvCatalogFactory;

        r0 := @parameter0: thredds.catalog.InvCatalogImpl;

        r2 := @parameter1: java.io.OutputStream;

        z0 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<thredds.catalog.InvCatalogImpl: thredds.catalog.InvCatalogConvertIF getCatalogConverter()>();

        r4 = $r1;

        if $r1 != null goto label1;

        r4 = r3.<thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogConvertIF defaultConverter>;

     label1:
        interfaceinvoke r4.<thredds.catalog.InvCatalogConvertIF: void writeXML(thredds.catalog.InvCatalogImpl,java.io.OutputStream,boolean)>(r0, r2, z0);

        return;
    }

    public void writeXML(thredds.catalog.InvCatalogImpl, java.lang.String) throws java.io.IOException
    {
        thredds.catalog.InvCatalogImpl r4;
        java.io.FileOutputStream $r1;
        java.lang.String r2;
        thredds.catalog.InvCatalogFactory r3;
        java.io.BufferedOutputStream $r0;

        r3 := @this: thredds.catalog.InvCatalogFactory;

        r4 := @parameter0: thredds.catalog.InvCatalogImpl;

        r2 := @parameter1: java.lang.String;

        $r0 = new java.io.BufferedOutputStream;

        $r1 = new java.io.FileOutputStream;

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.lang.String)>(r2);

        specialinvoke $r0.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r1);

        virtualinvoke r3.<thredds.catalog.InvCatalogFactory: void writeXML(thredds.catalog.InvCatalogImpl,java.io.OutputStream)>(r4, $r0);

        virtualinvoke $r0.<java.io.BufferedOutputStream: void close()>();

        return;
    }

    public java.lang.String writeXML_1_0(thredds.catalog.InvCatalogImpl) throws java.io.IOException
    {
        thredds.catalog.InvCatalogImpl r2;
        java.io.ByteArrayOutputStream $r0;
        java.lang.String $r3;
        thredds.catalog.InvCatalogFactory r1;

        r1 := @this: thredds.catalog.InvCatalogFactory;

        r2 := @parameter0: thredds.catalog.InvCatalogImpl;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>(int)>(10000);

        virtualinvoke r1.<thredds.catalog.InvCatalogFactory: void writeXML_1_0(thredds.catalog.InvCatalogImpl,java.io.OutputStream)>(r2, $r0);

        $r3 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.String writeXML_0_6(thredds.catalog.InvCatalogImpl) throws java.io.IOException
    {
        thredds.catalog.InvCatalogImpl r2;
        java.io.ByteArrayOutputStream $r0;
        java.lang.String $r3;
        thredds.catalog.InvCatalogFactory r1;

        r1 := @this: thredds.catalog.InvCatalogFactory;

        r2 := @parameter0: thredds.catalog.InvCatalogImpl;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>(int)>(10000);

        virtualinvoke r1.<thredds.catalog.InvCatalogFactory: void writeXML_0_6(thredds.catalog.InvCatalogImpl,java.io.OutputStream)>(r2, $r0);

        $r3 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        return $r3;
    }

    public void writeXML_1_0(thredds.catalog.InvCatalogImpl, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r2;
        thredds.catalog.InvCatalogImpl r1;
        thredds.catalog.InvCatalogFactory r0;

        r0 := @this: thredds.catalog.InvCatalogFactory;

        r1 := @parameter0: thredds.catalog.InvCatalogImpl;

        r2 := @parameter1: java.io.OutputStream;

        specialinvoke r0.<thredds.catalog.InvCatalogFactory: void writeXML_ver(java.lang.String,thredds.catalog.InvCatalogImpl,java.io.OutputStream)>("http://www.unidata.ucar.edu/namespaces/thredds/InvCatalog/v1.0", r1, r2);

        return;
    }

    public void writeXML_0_6(thredds.catalog.InvCatalogImpl, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r2;
        thredds.catalog.InvCatalogImpl r1;
        thredds.catalog.InvCatalogFactory r0;

        r0 := @this: thredds.catalog.InvCatalogFactory;

        r1 := @parameter0: thredds.catalog.InvCatalogImpl;

        r2 := @parameter1: java.io.OutputStream;

        specialinvoke r0.<thredds.catalog.InvCatalogFactory: void writeXML_ver(java.lang.String,thredds.catalog.InvCatalogImpl,java.io.OutputStream)>("http://www.unidata.ucar.edu/thredds", r1, r2);

        return;
    }

    private void writeXML_ver(java.lang.String, thredds.catalog.InvCatalogImpl, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r4;
        java.lang.IllegalStateException $r13;
        thredds.catalog.InvCatalogImpl r3;
        thredds.catalog.InvCatalogConvertIF $r2;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r10, $r11;
        java.lang.String r1, $r7, $r12;
        thredds.catalog.InvCatalogFactory r0;

        r0 := @this: thredds.catalog.InvCatalogFactory;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: thredds.catalog.InvCatalogImpl;

        r4 := @parameter2: java.io.OutputStream;

        $r2 = virtualinvoke r0.<thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogConvertIF getCatalogConverter(java.lang.String)>(r1);

        if $r2 != null goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This Factory <");

        $r7 = virtualinvoke r0.<thredds.catalog.InvCatalogFactory: java.lang.String getName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> does not have a converter for the requested namespace <");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r13;

     label1:
        interfaceinvoke $r2.<thredds.catalog.InvCatalogConvertIF: void writeXML(thredds.catalog.InvCatalogImpl,java.io.OutputStream)>(r3, r4);

        return;
    }

    public void appendErr(java.lang.String)
    {
        java.lang.StringBuilder $r2;
        java.lang.String r1;
        thredds.catalog.InvCatalogFactory r0;

        r0 := @this: thredds.catalog.InvCatalogFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder errMessages>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        return;
    }

    public void appendFatalErr(java.lang.String)
    {
        java.lang.StringBuilder $r2;
        java.lang.String r1;
        thredds.catalog.InvCatalogFactory r0;

        r0 := @this: thredds.catalog.InvCatalogFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder fatalMessages>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        return;
    }

    public void appendWarning(java.lang.String)
    {
        java.lang.StringBuilder $r2;
        java.lang.String r1;
        thredds.catalog.InvCatalogFactory r0;

        r0 := @this: thredds.catalog.InvCatalogFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<thredds.catalog.InvCatalogFactory: java.lang.StringBuilder warnMessages>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        return;
    }

    public thredds.catalog.MetadataConverterIF getMetadataConverter(java.lang.String)
    {
        java.util.Map $r2;
        thredds.catalog.MetadataConverterIF $r4;
        java.lang.Object $r3;
        java.lang.String r0;
        thredds.catalog.InvCatalogFactory r1;

        r1 := @this: thredds.catalog.InvCatalogFactory;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = r1.<thredds.catalog.InvCatalogFactory: java.util.Map metadataConverters>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r4 = (thredds.catalog.MetadataConverterIF) $r3;

        return $r4;
    }

    private static thredds.catalog.InvCatalogImpl doOne(thredds.catalog.InvCatalogFactory, java.lang.String, boolean)
    {
        java.net.URI $r7;
        thredds.catalog.InvCatalogFactory r6;
        boolean z0, $z1;
        java.lang.Exception $r36;
        thredds.catalog.InvCatalogImpl $r8;
        java.lang.StringBuilder $r0, $r2, $r4, $r9, $r10, $r12, $r14, $r15, $r16, $r17, $r19, $r21, $r22, $r24, $r26, $r28, $r30, $r32, $r34;
        java.lang.String r3, $r5, $r13, $r18, $r23, $r27, $r29, $r33, $r35, $r37;
        java.io.PrintStream $r1, $r11, $r20, $r25, $r31;

        r6 := @parameter0: thredds.catalog.InvCatalogFactory;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("***read ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);

        if z0 == 0 goto label1;

        $r31 = <java.lang.System: java.io.PrintStream out>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" original catalog=\n");

        $r33 = staticinvoke <ucar.nc2.util.IO: java.lang.String readURLcontents(java.lang.String)>(r3);

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r35);

     label1:
        $r7 = new java.net.URI;

        specialinvoke $r7.<java.net.URI: void <init>(java.lang.String)>(r3);

        $r8 = virtualinvoke r6.<thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogImpl readXML(java.net.URI)>($r7);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $z1 = virtualinvoke $r8.<thredds.catalog.InvCatalogImpl: boolean check(java.lang.StringBuilder,boolean)>($r9, 0);

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("catalog <");

        $r13 = virtualinvoke $r8.<thredds.catalog.InvCatalogImpl: java.lang.String getName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        if $z1 == 0 goto label2;

        $r37 = "is";

        goto label3;

     label2:
        $r37 = "is not";

     label3:
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" valid");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r18);

        $r20 = <java.lang.System: java.io.PrintStream out>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" validation output=\n");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r23);

        if z0 == 0 goto label4;

        $r25 = <java.lang.System: java.io.PrintStream out>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" parsed catalog=\n");

        $r27 = virtualinvoke r6.<thredds.catalog.InvCatalogFactory: java.lang.String writeXML(thredds.catalog.InvCatalogImpl)>($r8);

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r29);

     label4:
        return $r8;

     label5:
        $r36 := @caughtexception;

        virtualinvoke $r36.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] r1;
        thredds.catalog.InvCatalogFactory $r0;

        r1 := @parameter0: java.lang.String[];

        $r0 = staticinvoke <thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogFactory getDefaultFactory(boolean)>(0);

        staticinvoke <thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogImpl doOne(thredds.catalog.InvCatalogFactory,java.lang.String,boolean)>($r0, "file:C:/data/work/maurer/atm_mod.xml", 1);

        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lthredds/catalog/InvCatalogFactory;");

        <thredds.catalog.InvCatalogFactory: org.slf4j.Logger log> = $r0;

        <thredds.catalog.InvCatalogFactory: boolean debugURL> = 0;

        <thredds.catalog.InvCatalogFactory: boolean debugOpen> = 0;

        <thredds.catalog.InvCatalogFactory: boolean debugVersion> = 0;

        <thredds.catalog.InvCatalogFactory: boolean showParsedXML> = 0;

        <thredds.catalog.InvCatalogFactory: boolean showStackTrace> = 0;

        <thredds.catalog.InvCatalogFactory: boolean debugXML> = 0;

        <thredds.catalog.InvCatalogFactory: boolean debugDBurl> = 0;

        <thredds.catalog.InvCatalogFactory: boolean debugXMLopen> = 0;

        <thredds.catalog.InvCatalogFactory: boolean showCatalogXML> = 0;

        return;
    }
}
