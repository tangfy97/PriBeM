class org.apache.jena.atlas.lib.Trie$TrieNode extends java.lang.Object
{
    private java.util.Map children;
    private java.lang.Character singletonChildChar;
    private org.apache.jena.atlas.lib.Trie$TrieNode singletonChild;
    private java.lang.Object value;

    public void <init>(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.jena.atlas.lib.Trie$TrieNode r0;

        r0 := @this: org.apache.jena.atlas.lib.Trie$TrieNode;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jena.atlas.lib.Trie$TrieNode: java.util.Map children> = null;

        r0.<org.apache.jena.atlas.lib.Trie$TrieNode: java.lang.Character singletonChildChar> = null;

        r0.<org.apache.jena.atlas.lib.Trie$TrieNode: org.apache.jena.atlas.lib.Trie$TrieNode singletonChild> = null;

        r0.<org.apache.jena.atlas.lib.Trie$TrieNode: java.lang.Object value> = r1;

        return;
    }

    public java.lang.Object getValue()
    {
        java.lang.Object $r1;
        org.apache.jena.atlas.lib.Trie$TrieNode r0;

        r0 := @this: org.apache.jena.atlas.lib.Trie$TrieNode;

        $r1 = r0.<org.apache.jena.atlas.lib.Trie$TrieNode: java.lang.Object value>;

        return $r1;
    }

    public void setValue(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.jena.atlas.lib.Trie$TrieNode r0;

        r0 := @this: org.apache.jena.atlas.lib.Trie$TrieNode;

        r1 := @parameter0: java.lang.Object;

        r0.<org.apache.jena.atlas.lib.Trie$TrieNode: java.lang.Object value> = r1;

        return;
    }

    public boolean hasValue()
    {
        java.lang.Object $r1;
        org.apache.jena.atlas.lib.Trie$TrieNode r0;
        boolean $z0;

        r0 := @this: org.apache.jena.atlas.lib.Trie$TrieNode;

        $r1 = r0.<org.apache.jena.atlas.lib.Trie$TrieNode: java.lang.Object value>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.jena.atlas.lib.Trie$TrieNode getChild(java.lang.Character)
    {
        java.lang.Character r2, $r3;
        java.util.Map $r1, $r5;
        java.lang.Object $r6;
        org.apache.jena.atlas.lib.Trie$TrieNode r0, $r4, $r7;
        boolean $z0;

        r0 := @this: org.apache.jena.atlas.lib.Trie$TrieNode;

        r2 := @parameter0: java.lang.Character;

        $r1 = r0.<org.apache.jena.atlas.lib.Trie$TrieNode: java.util.Map children>;

        if $r1 == null goto label1;

        $r5 = r0.<org.apache.jena.atlas.lib.Trie$TrieNode: java.util.Map children>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r7 = (org.apache.jena.atlas.lib.Trie$TrieNode) $r6;

        return $r7;

     label1:
        $r3 = r0.<org.apache.jena.atlas.lib.Trie$TrieNode: java.lang.Character singletonChildChar>;

        $z0 = virtualinvoke r2.<java.lang.Character: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r4 = r0.<org.apache.jena.atlas.lib.Trie$TrieNode: org.apache.jena.atlas.lib.Trie$TrieNode singletonChild>;

        return $r4;

     label2:
        return null;
    }

    public org.apache.jena.atlas.lib.Trie$TrieNode moveToChild(java.lang.Character)
    {
        java.util.HashMap $r6;
        java.lang.Character r1, $r5, $r8;
        java.util.Map $r4, $r9, $r10, $r11;
        org.apache.jena.atlas.lib.Trie$TrieNode r0, $r2, $r3, $r7, r12;

        r0 := @this: org.apache.jena.atlas.lib.Trie$TrieNode;

        r1 := @parameter0: java.lang.Character;

        $r2 = virtualinvoke r0.<org.apache.jena.atlas.lib.Trie$TrieNode: org.apache.jena.atlas.lib.Trie$TrieNode getChild(java.lang.Character)>(r1);

        r12 = $r2;

        if $r2 != null goto label3;

        $r3 = new org.apache.jena.atlas.lib.Trie$TrieNode;

        specialinvoke $r3.<org.apache.jena.atlas.lib.Trie$TrieNode: void <init>(java.lang.Object)>(null);

        r12 = $r3;

        $r4 = r0.<org.apache.jena.atlas.lib.Trie$TrieNode: java.util.Map children>;

        if $r4 == null goto label1;

        $r11 = r0.<org.apache.jena.atlas.lib.Trie$TrieNode: java.util.Map children>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        goto label3;

     label1:
        $r5 = r0.<org.apache.jena.atlas.lib.Trie$TrieNode: java.lang.Character singletonChildChar>;

        if $r5 == null goto label2;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<org.apache.jena.atlas.lib.Trie$TrieNode: java.util.Map children> = $r6;

        $r9 = r0.<org.apache.jena.atlas.lib.Trie$TrieNode: java.util.Map children>;

        $r8 = r0.<org.apache.jena.atlas.lib.Trie$TrieNode: java.lang.Character singletonChildChar>;

        $r7 = r0.<org.apache.jena.atlas.lib.Trie$TrieNode: org.apache.jena.atlas.lib.Trie$TrieNode singletonChild>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r7);

        $r10 = r0.<org.apache.jena.atlas.lib.Trie$TrieNode: java.util.Map children>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        goto label3;

     label2:
        r0.<org.apache.jena.atlas.lib.Trie$TrieNode: java.lang.Character singletonChildChar> = r1;

        r0.<org.apache.jena.atlas.lib.Trie$TrieNode: org.apache.jena.atlas.lib.Trie$TrieNode singletonChild> = $r3;

     label3:
        return r12;
    }

    public java.util.List getValues()
    {
        java.util.Iterator $r8;
        java.util.Collection $r7;
        java.util.ArrayList $r0;
        java.util.List $r5, $r11;
        java.util.Map $r2, $r6;
        java.lang.Object $r9, $r12;
        org.apache.jena.atlas.lib.Trie$TrieNode r1, $r3, $r4, r10;
        boolean $z0, $z1;

        r1 := @this: org.apache.jena.atlas.lib.Trie$TrieNode;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $z0 = virtualinvoke r1.<org.apache.jena.atlas.lib.Trie$TrieNode: boolean hasValue()>();

        if $z0 == 0 goto label1;

        $r12 = r1.<org.apache.jena.atlas.lib.Trie$TrieNode: java.lang.Object value>;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r12);

     label1:
        $r2 = r1.<org.apache.jena.atlas.lib.Trie$TrieNode: java.util.Map children>;

        if $r2 == null goto label4;

        $r6 = r1.<org.apache.jena.atlas.lib.Trie$TrieNode: java.util.Map children>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Collection values()>();

        $r8 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.jena.atlas.lib.Trie$TrieNode) $r9;

        $r11 = virtualinvoke r10.<org.apache.jena.atlas.lib.Trie$TrieNode: java.util.List getValues()>();

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r11);

        goto label2;

     label3:
        goto label5;

     label4:
        $r3 = r1.<org.apache.jena.atlas.lib.Trie$TrieNode: org.apache.jena.atlas.lib.Trie$TrieNode singletonChild>;

        if $r3 == null goto label5;

        $r4 = r1.<org.apache.jena.atlas.lib.Trie$TrieNode: org.apache.jena.atlas.lib.Trie$TrieNode singletonChild>;

        $r5 = virtualinvoke $r4.<org.apache.jena.atlas.lib.Trie$TrieNode: java.util.List getValues()>();

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r5);

     label5:
        return $r0;
    }
}
