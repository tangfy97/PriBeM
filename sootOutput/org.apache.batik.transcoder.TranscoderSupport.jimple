public class org.apache.batik.transcoder.TranscoderSupport extends java.lang.Object
{
    static final org.apache.batik.transcoder.ErrorHandler defaultErrorHandler;
    protected org.apache.batik.transcoder.TranscodingHints hints;
    protected org.apache.batik.transcoder.ErrorHandler handler;

    public void <init>()
    {
        org.apache.batik.transcoder.TranscodingHints $r1;
        org.apache.batik.transcoder.ErrorHandler $r2;
        org.apache.batik.transcoder.TranscoderSupport r0;

        r0 := @this: org.apache.batik.transcoder.TranscoderSupport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.batik.transcoder.TranscodingHints;

        specialinvoke $r1.<org.apache.batik.transcoder.TranscodingHints: void <init>()>();

        r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints> = $r1;

        $r2 = <org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.ErrorHandler defaultErrorHandler>;

        r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.ErrorHandler handler> = $r2;

        return;
    }

    public org.apache.batik.transcoder.TranscodingHints getTranscodingHints()
    {
        org.apache.batik.transcoder.TranscodingHints $r0, $r2;
        org.apache.batik.transcoder.TranscoderSupport r1;

        r1 := @this: org.apache.batik.transcoder.TranscoderSupport;

        $r0 = new org.apache.batik.transcoder.TranscodingHints;

        $r2 = r1.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        specialinvoke $r0.<org.apache.batik.transcoder.TranscodingHints: void <init>(java.util.Map)>($r2);

        return $r0;
    }

    public void addTranscodingHint(org.apache.batik.transcoder.TranscodingHints$Key, java.lang.Object)
    {
        org.apache.batik.transcoder.TranscodingHints $r3;
        java.lang.Object r2;
        org.apache.batik.transcoder.TranscodingHints$Key r1;
        org.apache.batik.transcoder.TranscoderSupport r0;

        r0 := @this: org.apache.batik.transcoder.TranscoderSupport;

        r1 := @parameter0: org.apache.batik.transcoder.TranscodingHints$Key;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        virtualinvoke $r3.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void removeTranscodingHint(org.apache.batik.transcoder.TranscodingHints$Key)
    {
        org.apache.batik.transcoder.TranscodingHints $r2;
        org.apache.batik.transcoder.TranscodingHints$Key r1;
        org.apache.batik.transcoder.TranscoderSupport r0;

        r0 := @this: org.apache.batik.transcoder.TranscoderSupport;

        r1 := @parameter0: org.apache.batik.transcoder.TranscodingHints$Key;

        $r2 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        virtualinvoke $r2.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public void setTranscodingHints(java.util.Map)
    {
        org.apache.batik.transcoder.TranscodingHints $r2;
        org.apache.batik.transcoder.TranscoderSupport r0;
        java.util.Map r1;

        r0 := @this: org.apache.batik.transcoder.TranscoderSupport;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        virtualinvoke $r2.<org.apache.batik.transcoder.TranscodingHints: void putAll(java.util.Map)>(r1);

        return;
    }

    public void setTranscodingHints(org.apache.batik.transcoder.TranscodingHints)
    {
        org.apache.batik.transcoder.TranscodingHints r1;
        org.apache.batik.transcoder.TranscoderSupport r0;

        r0 := @this: org.apache.batik.transcoder.TranscoderSupport;

        r1 := @parameter0: org.apache.batik.transcoder.TranscodingHints;

        r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints> = r1;

        return;
    }

    public void setErrorHandler(org.apache.batik.transcoder.ErrorHandler)
    {
        org.apache.batik.transcoder.ErrorHandler r1;
        org.apache.batik.transcoder.TranscoderSupport r0;

        r0 := @this: org.apache.batik.transcoder.TranscoderSupport;

        r1 := @parameter0: org.apache.batik.transcoder.ErrorHandler;

        r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.ErrorHandler handler> = r1;

        return;
    }

    public org.apache.batik.transcoder.ErrorHandler getErrorHandler()
    {
        org.apache.batik.transcoder.ErrorHandler $r1;
        org.apache.batik.transcoder.TranscoderSupport r0;

        r0 := @this: org.apache.batik.transcoder.TranscoderSupport;

        $r1 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.ErrorHandler handler>;

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.batik.transcoder.DefaultErrorHandler $r0;

        $r0 = new org.apache.batik.transcoder.DefaultErrorHandler;

        specialinvoke $r0.<org.apache.batik.transcoder.DefaultErrorHandler: void <init>()>();

        <org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.ErrorHandler defaultErrorHandler> = $r0;

        return;
    }
}
