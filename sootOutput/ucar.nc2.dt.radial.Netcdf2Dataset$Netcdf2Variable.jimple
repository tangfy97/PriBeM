class ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable extends ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter implements ucar.nc2.dt.RadialDatasetSweep$RadialVariable
{
    java.util.ArrayList sweeps;
    int nsweeps;
    java.lang.String name;
    final ucar.nc2.dt.radial.Netcdf2Dataset this$0;

    private void <init>(ucar.nc2.dt.radial.Netcdf2Dataset, ucar.nc2.dataset.NetcdfDataset, ucar.nc2.VariableSimpleIF, ucar.nc2.Variable)
    {
        java.util.ArrayList $r10, $r12;
        int[] $r8;
        int $i0, i1, i2, $i3, $i4, i5, i6, i7, i8, $i9, $i11, $i13;
        ucar.nc2.dt.radial.Netcdf2Dataset r1;
        ucar.nc2.Variable r4;
        java.lang.String $r3, $r7;
        ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable$Netcdf2Sweep $r13;
        java.util.List $r5;
        ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable r0;
        ucar.nc2.VariableSimpleIF r2;
        ucar.nc2.dataset.NetcdfDataset r11;

        r0 := @this: ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable;

        r1 := @parameter0: ucar.nc2.dt.radial.Netcdf2Dataset;

        r11 := @parameter1: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter2: ucar.nc2.VariableSimpleIF;

        r4 := @parameter3: ucar.nc2.Variable;

        r0.<ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable: ucar.nc2.dt.radial.Netcdf2Dataset this$0> = r1;

        $r3 = interfaceinvoke r2.<ucar.nc2.VariableSimpleIF: java.lang.String getName()>();

        $r5 = virtualinvoke r4.<ucar.nc2.Variable: java.util.List getAttributes()>();

        specialinvoke r0.<ucar.nc2.dt.radial.RadialDatasetSweepAdapter$MyRadialVariableAdapter: void <init>(ucar.nc2.dt.radial.RadialDatasetSweepAdapter,java.lang.String,java.util.List)>(r1, $r3, $r5);

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable: java.util.ArrayList sweeps> = $r12;

        r0.<ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable: int nsweeps> = 0;

        $r7 = interfaceinvoke r2.<ucar.nc2.VariableSimpleIF: java.lang.String getName()>();

        r0.<ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable: java.lang.String name> = $r7;

        $r8 = virtualinvoke r4.<ucar.nc2.Variable: int[] getShape()>();

        $i0 = virtualinvoke r4.<ucar.nc2.Variable: int getRank()>();

        i5 = $i0 - 1;

        i1 = $r8[i5];

        $i11 = (int) -1;

        i6 = i5 + $i11;

        i2 = $r8[i6];

        $i13 = (int) -1;

        i7 = i6 + $i13;

        $i3 = lengthof $r8;

        if $i3 != 3 goto label1;

        $i4 = $r8[i7];

        r0.<ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable: int nsweeps> = $i4;

        goto label2;

     label1:
        r0.<ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable: int nsweeps> = 1;

     label2:
        i8 = 0;

     label3:
        $i9 = r0.<ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable: int nsweeps>;

        if i8 >= $i9 goto label4;

        $r10 = r0.<ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable: java.util.ArrayList sweeps>;

        $r13 = new ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable$Netcdf2Sweep;

        specialinvoke $r13.<ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable$Netcdf2Sweep: void <init>(ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable,ucar.nc2.Variable,int,int,int)>(r0, r4, i8, i2, i1);

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

        i8 = i8 + 1;

        goto label3;

     label4:
        return;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable r0;

        r0 := @this: ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable;

        $r1 = r0.<ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable: java.lang.String name>;

        return $r1;
    }

    public float[] readAllData() throws java.io.IOException
    {
        ucar.nc2.dt.RadialDatasetSweep$Sweep r3;
        float[] $r8, $r9;
        java.io.IOException $r10, $r11;
        ucar.ma2.Array $r5;
        java.util.ArrayList $r1;
        ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable r0;
        java.lang.Object $r2, $r7;
        ucar.nc2.Variable $r4;
        java.lang.Class $r6;
        java.lang.String $r12;

        r0 := @this: ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable;

        $r1 = r0.<ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable: java.util.ArrayList sweeps>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r3 = (ucar.nc2.dt.RadialDatasetSweep$Sweep) $r2;

        $r4 = interfaceinvoke r3.<ucar.nc2.dt.RadialDatasetSweep$Sweep: ucar.nc2.Variable getsweepVar()>();

     label1:
        $r5 = virtualinvoke $r4.<ucar.nc2.Variable: ucar.ma2.Array read()>();

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = new java.io.IOException;

        $r12 = virtualinvoke $r10.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label4:
        $r6 = <java.lang.Float: java.lang.Class TYPE>;

        $r7 = virtualinvoke $r5.<ucar.ma2.Array: java.lang.Object get1DJavaArray(java.lang.Class)>($r6);

        $r8 = (float[]) $r7;

        $r9 = (float[]) $r8;

        return $r9;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public int getNumSweeps()
    {
        int $i0;
        ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable r0;

        r0 := @this: ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable;

        $i0 = r0.<ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable: int nsweeps>;

        return $i0;
    }

    public ucar.nc2.dt.RadialDatasetSweep$Sweep getSweep(int)
    {
        ucar.nc2.dt.RadialDatasetSweep$Sweep $r3;
        ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable r0;
        int i0;
        java.lang.Object $r2;
        java.util.ArrayList $r1;

        r0 := @this: ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable: java.util.ArrayList sweeps>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r3 = (ucar.nc2.dt.RadialDatasetSweep$Sweep) $r2;

        return $r3;
    }

    public void clearVariableMemory()
    {
        ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable r0;

        r0 := @this: ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable;

        return;
    }

    void <init>(ucar.nc2.dt.radial.Netcdf2Dataset, ucar.nc2.dataset.NetcdfDataset, ucar.nc2.VariableSimpleIF, ucar.nc2.Variable, ucar.nc2.dt.radial.Netcdf2Dataset$1)
    {
        ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable r0;
        ucar.nc2.VariableSimpleIF r3;
        ucar.nc2.dt.radial.Netcdf2Dataset$1 r5;
        ucar.nc2.dt.radial.Netcdf2Dataset r1;
        ucar.nc2.Variable r4;
        ucar.nc2.dataset.NetcdfDataset r2;

        r0 := @this: ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable;

        r1 := @parameter0: ucar.nc2.dt.radial.Netcdf2Dataset;

        r2 := @parameter1: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter2: ucar.nc2.VariableSimpleIF;

        r4 := @parameter3: ucar.nc2.Variable;

        r5 := @parameter4: ucar.nc2.dt.radial.Netcdf2Dataset$1;

        specialinvoke r0.<ucar.nc2.dt.radial.Netcdf2Dataset$Netcdf2Variable: void <init>(ucar.nc2.dt.radial.Netcdf2Dataset,ucar.nc2.dataset.NetcdfDataset,ucar.nc2.VariableSimpleIF,ucar.nc2.Variable)>(r1, r2, r3, r4);

        return;
    }
}
