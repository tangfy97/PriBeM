public class com.hp.hpl.jena.sparql.resultset.PlainFormat extends java.lang.Object implements com.hp.hpl.jena.sparql.resultset.ResultSetProcessor
{
    java.io.PrintWriter out;
    int count;
    boolean lineNumbers;
    boolean first;
    com.hp.hpl.jena.sparql.serializer.SerializationContext context;

    public void <init>(java.io.OutputStream, com.hp.hpl.jena.sparql.serializer.SerializationContext)
    {
        java.io.OutputStream r1;
        java.io.PrintWriter $r2;
        com.hp.hpl.jena.sparql.serializer.SerializationContext r3;
        com.hp.hpl.jena.sparql.resultset.PlainFormat r0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.PlainFormat;

        r1 := @parameter0: java.io.OutputStream;

        r3 := @parameter1: com.hp.hpl.jena.sparql.serializer.SerializationContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.resultset.PlainFormat: int count> = 0;

        r0.<com.hp.hpl.jena.sparql.resultset.PlainFormat: boolean lineNumbers> = 1;

        r0.<com.hp.hpl.jena.sparql.resultset.PlainFormat: boolean first> = 1;

        $r2 = staticinvoke <com.hp.hpl.jena.util.FileUtils: java.io.PrintWriter asPrintWriterUTF8(java.io.OutputStream)>(r1);

        r0.<com.hp.hpl.jena.sparql.resultset.PlainFormat: java.io.PrintWriter out> = $r2;

        r0.<com.hp.hpl.jena.sparql.resultset.PlainFormat: com.hp.hpl.jena.sparql.serializer.SerializationContext context> = r3;

        return;
    }

    public void <init>(java.io.OutputStream, com.hp.hpl.jena.sparql.core.Prologue)
    {
        java.io.OutputStream r1;
        com.hp.hpl.jena.sparql.core.Prologue r3;
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r2;
        com.hp.hpl.jena.sparql.resultset.PlainFormat r0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.PlainFormat;

        r1 := @parameter0: java.io.OutputStream;

        r3 := @parameter1: com.hp.hpl.jena.sparql.core.Prologue;

        $r2 = new com.hp.hpl.jena.sparql.serializer.SerializationContext;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.serializer.SerializationContext: void <init>(com.hp.hpl.jena.sparql.core.Prologue)>(r3);

        specialinvoke r0.<com.hp.hpl.jena.sparql.resultset.PlainFormat: void <init>(java.io.OutputStream,com.hp.hpl.jena.sparql.serializer.SerializationContext)>(r1, $r2);

        return;
    }

    public void start(com.hp.hpl.jena.query.ResultSet)
    {
        com.hp.hpl.jena.sparql.resultset.PlainFormat r0;
        com.hp.hpl.jena.query.ResultSet r1;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.PlainFormat;

        r1 := @parameter0: com.hp.hpl.jena.query.ResultSet;

        return;
    }

    public void finish(com.hp.hpl.jena.query.ResultSet)
    {
        com.hp.hpl.jena.sparql.resultset.PlainFormat r0;
        java.io.PrintWriter $r1;
        com.hp.hpl.jena.query.ResultSet r2;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.PlainFormat;

        r2 := @parameter0: com.hp.hpl.jena.query.ResultSet;

        $r1 = r0.<com.hp.hpl.jena.sparql.resultset.PlainFormat: java.io.PrintWriter out>;

        virtualinvoke $r1.<java.io.PrintWriter: void flush()>();

        return;
    }

    public void start(com.hp.hpl.jena.query.QuerySolution)
    {
        com.hp.hpl.jena.query.QuerySolution r1;
        com.hp.hpl.jena.sparql.resultset.PlainFormat r0;
        int $i0, $i1;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.PlainFormat;

        r1 := @parameter0: com.hp.hpl.jena.query.QuerySolution;

        $i0 = r0.<com.hp.hpl.jena.sparql.resultset.PlainFormat: int count>;

        $i1 = $i0 + 1;

        r0.<com.hp.hpl.jena.sparql.resultset.PlainFormat: int count> = $i1;

        r0.<com.hp.hpl.jena.sparql.resultset.PlainFormat: boolean first> = 1;

        return;
    }

    public void finish(com.hp.hpl.jena.query.QuerySolution)
    {
        com.hp.hpl.jena.sparql.resultset.PlainFormat r0;
        java.io.PrintWriter $r1;
        com.hp.hpl.jena.query.QuerySolution r2;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.PlainFormat;

        r2 := @parameter0: com.hp.hpl.jena.query.QuerySolution;

        $r1 = r0.<com.hp.hpl.jena.sparql.resultset.PlainFormat: java.io.PrintWriter out>;

        virtualinvoke $r1.<java.io.PrintWriter: void println()>();

        return;
    }

    public void binding(java.lang.String, com.hp.hpl.jena.rdf.model.RDFNode)
    {
        java.io.PrintWriter $r5, $r13;
        com.hp.hpl.jena.rdf.model.RDFNode r0;
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r2;
        com.hp.hpl.jena.sparql.resultset.PlainFormat r1;
        java.lang.StringBuilder $r4, $r6, $r8, $r9, $r10, $r11;
        java.lang.String $r3, r7, $r12;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.sparql.resultset.PlainFormat;

        r7 := @parameter0: java.lang.String;

        r0 := @parameter1: com.hp.hpl.jena.rdf.model.RDFNode;

        if r0 != null goto label1;

        return;

     label1:
        $z0 = r1.<com.hp.hpl.jena.sparql.resultset.PlainFormat: boolean first>;

        if $z0 != 0 goto label2;

        $r13 = r1.<com.hp.hpl.jena.sparql.resultset.PlainFormat: java.io.PrintWriter out>;

        virtualinvoke $r13.<java.io.PrintWriter: void print(java.lang.String)>(" ");

     label2:
        $r2 = r1.<com.hp.hpl.jena.sparql.resultset.PlainFormat: com.hp.hpl.jena.sparql.serializer.SerializationContext context>;

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.util.FmtUtils: java.lang.String stringForRDFNode(com.hp.hpl.jena.rdf.model.RDFNode,com.hp.hpl.jena.sparql.serializer.SerializationContext)>(r0, $r2);

        $r5 = r1.<com.hp.hpl.jena.sparql.resultset.PlainFormat: java.io.PrintWriter out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("( ?");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintWriter: void print(java.lang.String)>($r12);

        r1.<com.hp.hpl.jena.sparql.resultset.PlainFormat: boolean first> = 0;

        return;
    }

    void insertLineNumber()
    {
        java.io.PrintWriter $r2, $r3, $r4;
        com.hp.hpl.jena.sparql.resultset.PlainFormat r0;
        int $i0, $i1, $i2, i3;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.PlainFormat;

        $z0 = r0.<com.hp.hpl.jena.sparql.resultset.PlainFormat: boolean lineNumbers>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $i0 = r0.<com.hp.hpl.jena.sparql.resultset.PlainFormat: int count>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        i3 = 0;

     label2:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i2 = 3 - $i1;

        if i3 >= $i2 goto label3;

        $r4 = r0.<com.hp.hpl.jena.sparql.resultset.PlainFormat: java.io.PrintWriter out>;

        virtualinvoke $r4.<java.io.PrintWriter: void print(char)>(32);

        i3 = i3 + 1;

        goto label2;

     label3:
        $r2 = r0.<com.hp.hpl.jena.sparql.resultset.PlainFormat: java.io.PrintWriter out>;

        virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        $r3 = r0.<com.hp.hpl.jena.sparql.resultset.PlainFormat: java.io.PrintWriter out>;

        virtualinvoke $r3.<java.io.PrintWriter: void print(char)>(32);

        return;
    }
}
