public abstract class org.apache.lucene.queries.function.docvalues.IntDocValues extends org.apache.lucene.queries.function.FunctionValues
{
    protected final org.apache.lucene.queries.function.ValueSource vs;

    public void <init>(org.apache.lucene.queries.function.ValueSource)
    {
        org.apache.lucene.queries.function.ValueSource r1;
        org.apache.lucene.queries.function.docvalues.IntDocValues r0;

        r0 := @this: org.apache.lucene.queries.function.docvalues.IntDocValues;

        r1 := @parameter0: org.apache.lucene.queries.function.ValueSource;

        specialinvoke r0.<org.apache.lucene.queries.function.FunctionValues: void <init>()>();

        r0.<org.apache.lucene.queries.function.docvalues.IntDocValues: org.apache.lucene.queries.function.ValueSource vs> = r1;

        return;
    }

    public byte byteVal(int)
    {
        byte $b2;
        int i0, $i1;
        org.apache.lucene.queries.function.docvalues.IntDocValues r0;

        r0 := @this: org.apache.lucene.queries.function.docvalues.IntDocValues;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.apache.lucene.queries.function.docvalues.IntDocValues: int intVal(int)>(i0);

        $b2 = (byte) $i1;

        return $b2;
    }

    public short shortVal(int)
    {
        short $s2;
        int i0, $i1;
        org.apache.lucene.queries.function.docvalues.IntDocValues r0;

        r0 := @this: org.apache.lucene.queries.function.docvalues.IntDocValues;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.apache.lucene.queries.function.docvalues.IntDocValues: int intVal(int)>(i0);

        $s2 = (short) $i1;

        return $s2;
    }

    public float floatVal(int)
    {
        int i0, $i1;
        float $f0;
        org.apache.lucene.queries.function.docvalues.IntDocValues r0;

        r0 := @this: org.apache.lucene.queries.function.docvalues.IntDocValues;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.apache.lucene.queries.function.docvalues.IntDocValues: int intVal(int)>(i0);

        $f0 = (float) $i1;

        return $f0;
    }

    public abstract int intVal(int);

    public long longVal(int)
    {
        int i0, $i1;
        long $l2;
        org.apache.lucene.queries.function.docvalues.IntDocValues r0;

        r0 := @this: org.apache.lucene.queries.function.docvalues.IntDocValues;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.apache.lucene.queries.function.docvalues.IntDocValues: int intVal(int)>(i0);

        $l2 = (long) $i1;

        return $l2;
    }

    public double doubleVal(int)
    {
        int i0, $i1;
        org.apache.lucene.queries.function.docvalues.IntDocValues r0;
        double $d0;

        r0 := @this: org.apache.lucene.queries.function.docvalues.IntDocValues;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.apache.lucene.queries.function.docvalues.IntDocValues: int intVal(int)>(i0);

        $d0 = (double) $i1;

        return $d0;
    }

    public java.lang.String strVal(int)
    {
        int i0, $i1;
        java.lang.String $r1;
        org.apache.lucene.queries.function.docvalues.IntDocValues r0;

        r0 := @this: org.apache.lucene.queries.function.docvalues.IntDocValues;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.apache.lucene.queries.function.docvalues.IntDocValues: int intVal(int)>(i0);

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        return $r1;
    }

    public java.lang.Object objectVal(int)
    {
        int i0, $i1;
        org.apache.lucene.queries.function.docvalues.IntDocValues r0;
        java.lang.Integer $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.queries.function.docvalues.IntDocValues;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<org.apache.lucene.queries.function.docvalues.IntDocValues: boolean exists(int)>(i0);

        if $z0 == 0 goto label1;

        $i1 = virtualinvoke r0.<org.apache.lucene.queries.function.docvalues.IntDocValues: int intVal(int)>(i0);

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        goto label2;

     label1:
        $r1 = null;

     label2:
        return $r1;
    }

    public java.lang.String toString(int)
    {
        org.apache.lucene.queries.function.docvalues.IntDocValues r1;
        org.apache.lucene.queries.function.ValueSource $r2;
        int i0;
        java.lang.StringBuilder $r0, $r4, $r5, $r7;
        java.lang.String $r3, $r6, $r8;

        r1 := @this: org.apache.lucene.queries.function.docvalues.IntDocValues;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.lucene.queries.function.docvalues.IntDocValues: org.apache.lucene.queries.function.ValueSource vs>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.queries.function.ValueSource: java.lang.String description()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r6 = virtualinvoke r1.<org.apache.lucene.queries.function.docvalues.IntDocValues: java.lang.String strVal(int)>(i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public org.apache.lucene.queries.function.FunctionValues$ValueFiller getValueFiller()
    {
        org.apache.lucene.queries.function.docvalues.IntDocValues$1 $r0;
        org.apache.lucene.queries.function.docvalues.IntDocValues r1;

        r1 := @this: org.apache.lucene.queries.function.docvalues.IntDocValues;

        $r0 = new org.apache.lucene.queries.function.docvalues.IntDocValues$1;

        specialinvoke $r0.<org.apache.lucene.queries.function.docvalues.IntDocValues$1: void <init>(org.apache.lucene.queries.function.docvalues.IntDocValues)>(r1);

        return $r0;
    }
}
