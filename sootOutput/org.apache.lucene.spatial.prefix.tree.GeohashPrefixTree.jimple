public class org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree extends org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree
{

    public void <init>(com.spatial4j.core.context.SpatialContext, int)
    {
        org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree r0;
        byte $b1;
        int i0, $i2;
        java.lang.String $r9, $r14;
        double $d0;
        com.spatial4j.core.shape.Rectangle $r2;
        com.spatial4j.core.context.SpatialContext r1;
        java.lang.IllegalArgumentException $r3, $r10;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r11, $r12, $r13;

        r0 := @this: org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree;

        r1 := @parameter0: com.spatial4j.core.context.SpatialContext;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree: void <init>(com.spatial4j.core.context.SpatialContext,int)>(r1, i0);

        $r2 = virtualinvoke r1.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.shape.Rectangle getWorldBounds()>();

        $d0 = interfaceinvoke $r2.<com.spatial4j.core.shape.Rectangle: double getMinX()>();

        $b1 = $d0 cmpl -180.0;

        if $b1 == 0 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Geohash only supports lat-lon world bounds. Got ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r10;

     label1:
        $i2 = staticinvoke <org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree: int getMaxLevelsPossible()>();

        if i0 <= 0 goto label2;

        if i0 <= $i2 goto label3;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maxLen must be [1-");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] but got ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label3:
        return;
    }

    public static int getMaxLevelsPossible()
    {
        return 24;
    }

    public int getLevelForDistance(double)
    {
        org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree r0;
        byte $b0;
        int $i1, $i2, $i3, $i4, $i5;
        double d0;

        r0 := @this: org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree;

        d0 := @parameter0: double;

        $b0 = d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $i5 = r0.<org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree: int maxLevels>;

        return $i5;

     label1:
        $i1 = staticinvoke <com.spatial4j.core.io.GeohashUtils: int lookupHashLenForWidthHeight(double,double)>(d0, d0);

        $i2 = r0.<org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree: int maxLevels>;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i3, 1);

        return $i4;
    }

    public org.apache.lucene.spatial.prefix.tree.Cell getCell(com.spatial4j.core.shape.Point, int)
    {
        com.spatial4j.core.shape.Point r2;
        int i0;
        java.lang.String $r3;
        org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree r1;
        org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree$GhCell $r0;
        double $d0, $d1;

        r1 := @this: org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree;

        r2 := @parameter0: com.spatial4j.core.shape.Point;

        i0 := @parameter1: int;

        $r0 = new org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree$GhCell;

        $d0 = interfaceinvoke r2.<com.spatial4j.core.shape.Point: double getY()>();

        $d1 = interfaceinvoke r2.<com.spatial4j.core.shape.Point: double getX()>();

        $r3 = staticinvoke <com.spatial4j.core.io.GeohashUtils: java.lang.String encodeLatLon(double,double,int)>($d0, $d1, i0);

        specialinvoke $r0.<org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree$GhCell: void <init>(org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree,java.lang.String)>(r1, $r3);

        return $r0;
    }

    public org.apache.lucene.spatial.prefix.tree.Cell getCell(java.lang.String)
    {
        java.lang.String r2;
        org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree r1;
        org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree$GhCell $r0;

        r1 := @this: org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree$GhCell;

        specialinvoke $r0.<org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree$GhCell: void <init>(org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree,java.lang.String)>(r1, r2);

        return $r0;
    }

    public org.apache.lucene.spatial.prefix.tree.Cell getCell(byte[], int, int)
    {
        byte[] r2;
        int i0, i1;
        org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree r1;
        org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree$GhCell $r0;

        r1 := @this: org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = new org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree$GhCell;

        specialinvoke $r0.<org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree$GhCell: void <init>(org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree,byte[],int,int)>(r1, r2, i0, i1);

        return $r0;
    }
}
