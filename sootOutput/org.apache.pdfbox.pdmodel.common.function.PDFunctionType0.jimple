public class org.apache.pdfbox.pdmodel.common.function.PDFunctionType0 extends org.apache.pdfbox.pdmodel.common.function.PDFunction
{
    private static final org.apache.commons.logging.Log LOG;
    private org.apache.pdfbox.cos.COSArray encode;
    private org.apache.pdfbox.cos.COSArray decode;
    private org.apache.pdfbox.cos.COSArray size;
    private int[][] samples;

    public void <init>(org.apache.pdfbox.cos.COSBase)
    {
        int[][] $r2;
        org.apache.pdfbox.cos.COSBase r1;
        org.apache.pdfbox.pdmodel.common.function.PDFunctionType0 r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.PDFunctionType0;

        r1 := @parameter0: org.apache.pdfbox.cos.COSBase;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunction: void <init>(org.apache.pdfbox.cos.COSBase)>(r1);

        r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray encode> = null;

        r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray decode> = null;

        r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray size> = null;

        $r2 = (int[][]) null;

        r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: int[][] samples> = $r2;

        return;
    }

    public int getFunctionType()
    {
        org.apache.pdfbox.pdmodel.common.function.PDFunctionType0 r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.PDFunctionType0;

        return 0;
    }

    public org.apache.pdfbox.cos.COSArray getSize()
    {
        org.apache.pdfbox.cos.COSDictionary $r3;
        org.apache.pdfbox.cos.COSName $r4;
        org.apache.pdfbox.cos.COSArray $r1, $r2, $r6;
        org.apache.pdfbox.cos.COSBase $r5;
        org.apache.pdfbox.pdmodel.common.function.PDFunctionType0 r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.PDFunctionType0;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray size>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SIZE>;

        $r5 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r4);

        $r6 = (org.apache.pdfbox.cos.COSArray) $r5;

        r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray size> = $r6;

     label1:
        $r2 = r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray size>;

        return $r2;
    }

    public int[][] getSamples()
    {
        int[][] $r1, $r3, $r7, $r11;
        org.apache.pdfbox.cos.COSArray $r2;
        long $l3;
        javax.imageio.stream.MemoryCacheImageInputStream $r4;
        int[] $r8;
        int $i0, $i1, $i2, $i4, $i5, i6, i7, i8, i9, i10;
        org.apache.pdfbox.pdmodel.common.function.PDFunctionType0 r0;
        java.io.IOException $r9;
        org.apache.pdfbox.pdmodel.common.PDStream $r5;
        org.apache.commons.logging.Log $r10;
        java.io.InputStream $r6;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.PDFunctionType0;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: int[][] samples>;

        if $r1 != null goto label10;

        i6 = 1;

        $i0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: int getNumberOfInputParameters()>();

        $i1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: int getNumberOfOutputParameters()>();

        $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray getSize()>();

        i7 = 0;

     label01:
        if i7 >= $i0 goto label02;

        $i5 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSArray: int getInt(int)>(i7);

        i6 = i6 * $i5;

        i7 = i7 + 1;

        goto label01;

     label02:
        $r3 = newmultiarray (int)[i6][$i1];

        r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: int[][] samples> = $r3;

        $i2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: int getBitsPerSample()>();

        i8 = 0;

     label03:
        $r4 = new javax.imageio.stream.MemoryCacheImageInputStream;

        $r5 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.pdmodel.common.PDStream getPDStream()>();

        $r6 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.common.PDStream: java.io.InputStream createInputStream()>();

        specialinvoke $r4.<javax.imageio.stream.MemoryCacheImageInputStream: void <init>(java.io.InputStream)>($r6);

        i9 = 0;

     label04:
        if i9 >= i6 goto label07;

        i10 = 0;

     label05:
        if i10 >= $i1 goto label06;

        $r7 = r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: int[][] samples>;

        $r8 = $r7[i8];

        $l3 = interfaceinvoke $r4.<javax.imageio.stream.ImageInputStream: long readBits(int)>($i2);

        $i4 = (int) $l3;

        $r8[i10] = $i4;

        i10 = i10 + 1;

        goto label05;

     label06:
        i8 = i8 + 1;

        i9 = i9 + 1;

        goto label04;

     label07:
        interfaceinvoke $r4.<javax.imageio.stream.ImageInputStream: void close()>();

     label08:
        goto label10;

     label09:
        $r9 := @caughtexception;

        $r10 = <org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r10.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("IOException while reading the sample values of this function.", $r9);

     label10:
        $r11 = r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: int[][] samples>;

        return $r11;

        catch java.io.IOException from label03 to label08 with label09;
    }

    public int getBitsPerSample()
    {
        org.apache.pdfbox.cos.COSDictionary $r1;
        org.apache.pdfbox.cos.COSName $r2;
        org.apache.pdfbox.pdmodel.common.function.PDFunctionType0 r0;
        int $i0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.PDFunctionType0;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BITS_PER_SAMPLE>;

        $i0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName)>($r2);

        return $i0;
    }

    public int getOrder()
    {
        org.apache.pdfbox.cos.COSDictionary $r1;
        org.apache.pdfbox.cos.COSName $r2;
        org.apache.pdfbox.pdmodel.common.function.PDFunctionType0 r0;
        int $i0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.PDFunctionType0;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ORDER>;

        $i0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>($r2, 1);

        return $i0;
    }

    public void setBitsPerSample(int)
    {
        org.apache.pdfbox.cos.COSDictionary $r1;
        org.apache.pdfbox.cos.COSName $r2;
        org.apache.pdfbox.pdmodel.common.function.PDFunctionType0 r0;
        int i0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.PDFunctionType0;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BITS_PER_SAMPLE>;

        virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r2, i0);

        return;
    }

    private org.apache.pdfbox.cos.COSArray getEncodeValues()
    {
        org.apache.pdfbox.cos.COSArray $r1, $r5, $r6, $r7, $r8, $r10, $r11, $r13;
        long $l3;
        org.apache.pdfbox.cos.COSInteger $r9, $r12;
        int $i0, $i1, $i2, i4;
        org.apache.pdfbox.cos.COSName $r3;
        org.apache.pdfbox.pdmodel.common.function.PDFunctionType0 r0;
        org.apache.pdfbox.cos.COSDictionary $r2;
        org.apache.pdfbox.cos.COSBase $r4;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.PDFunctionType0;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray encode>;

        if $r1 != null goto label2;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ENCODE>;

        $r4 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r3);

        $r5 = (org.apache.pdfbox.cos.COSArray) $r4;

        r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray encode> = $r5;

        $r6 = r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray encode>;

        if $r6 != null goto label2;

        $r7 = new org.apache.pdfbox.cos.COSArray;

        specialinvoke $r7.<org.apache.pdfbox.cos.COSArray: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray encode> = $r7;

        $r8 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray getSize()>();

        $i0 = virtualinvoke $r8.<org.apache.pdfbox.cos.COSArray: int size()>();

        i4 = 0;

     label1:
        if i4 >= $i0 goto label2;

        $r10 = r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray encode>;

        $r9 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger ZERO>;

        virtualinvoke $r10.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r9);

        $r11 = r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray encode>;

        $i1 = virtualinvoke $r8.<org.apache.pdfbox.cos.COSArray: int getInt(int)>(i4);

        $i2 = $i1 - 1;

        $l3 = (long) $i2;

        $r12 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l3);

        virtualinvoke $r11.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r12);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r13 = r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray encode>;

        return $r13;
    }

    private org.apache.pdfbox.cos.COSArray getDecodeValues()
    {
        org.apache.pdfbox.cos.COSName $r3;
        org.apache.pdfbox.cos.COSArray $r1, $r5, $r6, $r7, $r8;
        org.apache.pdfbox.pdmodel.common.function.PDFunctionType0 r0;
        org.apache.pdfbox.cos.COSDictionary $r2;
        org.apache.pdfbox.cos.COSBase $r4;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.PDFunctionType0;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray decode>;

        if $r1 != null goto label1;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DECODE>;

        $r4 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r3);

        $r5 = (org.apache.pdfbox.cos.COSArray) $r4;

        r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray decode> = $r5;

        $r6 = r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray decode>;

        if $r6 != null goto label1;

        $r7 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray getRangeValues()>();

        r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray decode> = $r7;

     label1:
        $r8 = r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray decode>;

        return $r8;
    }

    public org.apache.pdfbox.pdmodel.common.PDRange getEncodeForParameter(int)
    {
        org.apache.pdfbox.cos.COSArray $r1;
        org.apache.pdfbox.pdmodel.common.function.PDFunctionType0 r0;
        org.apache.pdfbox.pdmodel.common.PDRange $r2, r3;
        int $i0, i1, $i2, $i3;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.PDFunctionType0;

        i1 := @parameter0: int;

        r3 = null;

        $r1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray getEncodeValues()>();

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: int size()>();

        $i2 = i1 * 2;

        $i3 = $i2 + 1;

        if $i0 < $i3 goto label1;

        $r2 = new org.apache.pdfbox.pdmodel.common.PDRange;

        specialinvoke $r2.<org.apache.pdfbox.pdmodel.common.PDRange: void <init>(org.apache.pdfbox.cos.COSArray,int)>($r1, i1);

        r3 = $r2;

     label1:
        return r3;
    }

    public void setEncodeValues(org.apache.pdfbox.cos.COSArray)
    {
        org.apache.pdfbox.cos.COSDictionary $r2;
        org.apache.pdfbox.cos.COSName $r3;
        org.apache.pdfbox.cos.COSArray r1;
        org.apache.pdfbox.pdmodel.common.function.PDFunctionType0 r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.PDFunctionType0;

        r1 := @parameter0: org.apache.pdfbox.cos.COSArray;

        r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray encode> = r1;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ENCODE>;

        virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, r1);

        return;
    }

    public org.apache.pdfbox.pdmodel.common.PDRange getDecodeForParameter(int)
    {
        org.apache.pdfbox.cos.COSArray $r1;
        org.apache.pdfbox.pdmodel.common.function.PDFunctionType0 r0;
        org.apache.pdfbox.pdmodel.common.PDRange $r2, r3;
        int $i0, i1, $i2, $i3;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.PDFunctionType0;

        i1 := @parameter0: int;

        r3 = null;

        $r1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray getDecodeValues()>();

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: int size()>();

        $i2 = i1 * 2;

        $i3 = $i2 + 1;

        if $i0 < $i3 goto label1;

        $r2 = new org.apache.pdfbox.pdmodel.common.PDRange;

        specialinvoke $r2.<org.apache.pdfbox.pdmodel.common.PDRange: void <init>(org.apache.pdfbox.cos.COSArray,int)>($r1, i1);

        r3 = $r2;

     label1:
        return r3;
    }

    public void setDecodeValues(org.apache.pdfbox.cos.COSArray)
    {
        org.apache.pdfbox.cos.COSDictionary $r2;
        org.apache.pdfbox.cos.COSName $r3;
        org.apache.pdfbox.cos.COSArray r1;
        org.apache.pdfbox.pdmodel.common.function.PDFunctionType0 r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.PDFunctionType0;

        r1 := @parameter0: org.apache.pdfbox.cos.COSArray;

        r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray decode> = r1;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DECODE>;

        virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r3, r1);

        return;
    }

    private int calcSampleIndex(int[])
    {
        org.apache.pdfbox.cos.COSArray $r1;
        float[] $r2;
        int[] r3;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, $i10, $i12;
        org.apache.pdfbox.pdmodel.common.function.PDFunctionType0 r0;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.PDFunctionType0;

        r3 := @parameter0: int[];

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray getSize()>();

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: float[] toFloatArray()>();

        i5 = 0;

        i6 = 1;

        i0 = lengthof r3;

        i7 = i0 - 2;

     label1:
        if i7 < 0 goto label2;

        $f4 = (float) i6;

        $f3 = $r2[i7];

        $f5 = $f4 * $f3;

        i6 = (int) $f5;

        $i10 = (int) -1;

        i7 = i7 + $i10;

        goto label1;

     label2:
        i8 = i0 - 1;

     label3:
        if i8 < 0 goto label5;

        $i1 = r3[i8];

        $i2 = i6 * $i1;

        i5 = i5 + $i2;

        $i3 = i8 - 1;

        if $i3 < 0 goto label4;

        $f1 = (float) i6;

        $i4 = i8 - 1;

        $f0 = $r2[$i4];

        $f2 = $f1 / $f0;

        i6 = (int) $f2;

     label4:
        $i12 = (int) -1;

        i8 = i8 + $i12;

        goto label3;

     label5:
        return i5;
    }

    public float[] eval(float[]) throws java.io.IOException
    {
        int[] r4, r5;
        org.apache.pdfbox.pdmodel.common.function.PDFunctionType0 r0;
        org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol $r6;
        org.apache.pdfbox.pdmodel.common.PDRange $r8, $r9, $r10, $r11;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24;
        org.apache.pdfbox.cos.COSArray $r1;
        float[] $r2, r3, $r7;
        int $i0, i1, $i2, $i3, $i4, i5, i6;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.PDFunctionType0;

        r3 := @parameter0: float[];

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.cos.COSArray getSize()>();

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSArray: float[] toFloatArray()>();

        $i0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: int getBitsPerSample()>();

        $d0 = (double) $i0;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, $d0);

        $d2 = $d1 - 1.0;

        f0 = (float) $d2;

        i1 = lengthof r3;

        $i2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: int getNumberOfOutputParameters()>();

        r4 = newarray (int)[i1];

        r5 = newarray (int)[i1];

        i5 = 0;

     label1:
        if i5 >= i1 goto label2;

        $r10 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.pdmodel.common.PDRange getDomainForInput(int)>(i5);

        $r11 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.pdmodel.common.PDRange getEncodeForParameter(int)>(i5);

        $f9 = r3[i5];

        $f10 = virtualinvoke $r10.<org.apache.pdfbox.pdmodel.common.PDRange: float getMin()>();

        $f11 = virtualinvoke $r10.<org.apache.pdfbox.pdmodel.common.PDRange: float getMax()>();

        $f12 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: float clipToRange(float,float,float)>($f9, $f10, $f11);

        r3[i5] = $f12;

        $f13 = r3[i5];

        $f14 = virtualinvoke $r10.<org.apache.pdfbox.pdmodel.common.PDRange: float getMin()>();

        $f15 = virtualinvoke $r10.<org.apache.pdfbox.pdmodel.common.PDRange: float getMax()>();

        $f16 = virtualinvoke $r11.<org.apache.pdfbox.pdmodel.common.PDRange: float getMin()>();

        $f17 = virtualinvoke $r11.<org.apache.pdfbox.pdmodel.common.PDRange: float getMax()>();

        $f18 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: float interpolate(float,float,float,float,float)>($f13, $f14, $f15, $f16, $f17);

        r3[i5] = $f18;

        $f21 = r3[i5];

        $f19 = $r2[i5];

        $f20 = $f19 - 1.0F;

        $f22 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: float clipToRange(float,float,float)>($f21, 0.0F, $f20);

        r3[i5] = $f22;

        $f23 = r3[i5];

        $d3 = (double) $f23;

        $d4 = staticinvoke <java.lang.Math: double floor(double)>($d3);

        $i3 = (int) $d4;

        r4[i5] = $i3;

        $f24 = r3[i5];

        $d5 = (double) $f24;

        $d6 = staticinvoke <java.lang.Math: double ceil(double)>($d5);

        $i4 = (int) $d6;

        r5[i5] = $i4;

        i5 = i5 + 1;

        goto label1;

     label2:
        $r6 = new org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol;

        specialinvoke $r6.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol: void <init>(org.apache.pdfbox.pdmodel.common.function.PDFunctionType0,float[],int[],int[])>(r0, r3, r4, r5);

        $r7 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol: float[] rinterpolate()>();

        i6 = 0;

     label3:
        if i6 >= $i2 goto label4;

        $r8 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.pdmodel.common.PDRange getRangeForOutput(int)>(i6);

        $r9 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.pdfbox.pdmodel.common.PDRange getDecodeForParameter(int)>(i6);

        $f1 = $r7[i6];

        $f2 = virtualinvoke $r9.<org.apache.pdfbox.pdmodel.common.PDRange: float getMin()>();

        $f3 = virtualinvoke $r9.<org.apache.pdfbox.pdmodel.common.PDRange: float getMax()>();

        $f4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: float interpolate(float,float,float,float,float)>($f1, 0.0F, f0, $f2, $f3);

        $r7[i6] = $f4;

        $f5 = $r7[i6];

        $f6 = virtualinvoke $r8.<org.apache.pdfbox.pdmodel.common.PDRange: float getMin()>();

        $f7 = virtualinvoke $r8.<org.apache.pdfbox.pdmodel.common.PDRange: float getMax()>();

        $f8 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: float clipToRange(float,float,float)>($f5, $f6, $f7);

        $r7[i6] = $f8;

        i6 = i6 + 1;

        goto label3;

     label4:
        return $r7;
    }

    static int access$000(org.apache.pdfbox.pdmodel.common.function.PDFunctionType0, int[])
    {
        int $i0;
        int[] r1;
        org.apache.pdfbox.pdmodel.common.function.PDFunctionType0 r0;

        r0 := @parameter0: org.apache.pdfbox.pdmodel.common.function.PDFunctionType0;

        r1 := @parameter1: int[];

        $i0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: int calcSampleIndex(int[])>(r1);

        return $i0;
    }

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/pdfbox/pdmodel/common/function/PDFunctionType0;");

        <org.apache.pdfbox.pdmodel.common.function.PDFunctionType0: org.apache.commons.logging.Log LOG> = $r0;

        return;
    }
}
