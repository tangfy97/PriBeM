public abstract class org.apache.poi.hwpf.model.types.TBDAbstractType extends java.lang.Object
{
    protected byte field_1_value;
    private static org.apache.poi.util.BitField jc;
    private static org.apache.poi.util.BitField tlc;
    private static org.apache.poi.util.BitField reserved;

    protected void <init>()
    {
        org.apache.poi.hwpf.model.types.TBDAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.TBDAbstractType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected void fillFields(byte[], int)
    {
        byte[] r1;
        byte $b2;
        org.apache.poi.hwpf.model.types.TBDAbstractType r0;
        int i0, $i1;

        r0 := @this: org.apache.poi.hwpf.model.types.TBDAbstractType;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = 0 + i0;

        $b2 = r1[$i1];

        r0.<org.apache.poi.hwpf.model.types.TBDAbstractType: byte field_1_value> = $b2;

        return;
    }

    public void serialize(byte[], int)
    {
        byte[] r0;
        byte $b1;
        org.apache.poi.hwpf.model.types.TBDAbstractType r1;
        int i0, $i2;

        r1 := @this: org.apache.poi.hwpf.model.types.TBDAbstractType;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i2 = 0 + i0;

        $b1 = r1.<org.apache.poi.hwpf.model.types.TBDAbstractType: byte field_1_value>;

        r0[$i2] = $b1;

        return;
    }

    public static int getSize()
    {
        return 1;
    }

    public java.lang.String toString()
    {
        byte $b0, $b1, $b2, $b3;
        int $i4, $i5, $i6, $i7;
        java.lang.String $r10;
        org.apache.poi.hwpf.model.types.TBDAbstractType r2;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11;

        r2 := @this: org.apache.poi.hwpf.model.types.TBDAbstractType;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[TBD]\n");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .value                = ");

        $r1 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $b0 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.TBDAbstractType: byte getValue()>();

        $i4 = (int) $b0;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )\n");

        $r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .jc                       = ");

        $b1 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.TBDAbstractType: byte getJc()>();

        $i5 = (int) $b1;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r6 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .tlc                      = ");

        $b2 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.TBDAbstractType: byte getTlc()>();

        $i6 = (int) $b2;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("         .reserved                 = ");

        $b3 = virtualinvoke r2.<org.apache.poi.hwpf.model.types.TBDAbstractType: byte getReserved()>();

        $i7 = (int) $b3;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[/TBD]\n");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public byte getValue()
    {
        byte $b0;
        org.apache.poi.hwpf.model.types.TBDAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.TBDAbstractType;

        $b0 = r0.<org.apache.poi.hwpf.model.types.TBDAbstractType: byte field_1_value>;

        return $b0;
    }

    public void setValue(byte)
    {
        byte b0;
        org.apache.poi.hwpf.model.types.TBDAbstractType r0;

        r0 := @this: org.apache.poi.hwpf.model.types.TBDAbstractType;

        b0 := @parameter0: byte;

        r0.<org.apache.poi.hwpf.model.types.TBDAbstractType: byte field_1_value> = b0;

        return;
    }

    public void setJc(byte)
    {
        org.apache.poi.util.BitField $r1;
        byte b0, $b1, $b3;
        org.apache.poi.hwpf.model.types.TBDAbstractType r0;
        int $i2, $i4, $i5;

        r0 := @this: org.apache.poi.hwpf.model.types.TBDAbstractType;

        b0 := @parameter0: byte;

        $r1 = <org.apache.poi.hwpf.model.types.TBDAbstractType: org.apache.poi.util.BitField jc>;

        $b1 = r0.<org.apache.poi.hwpf.model.types.TBDAbstractType: byte field_1_value>;

        $i4 = (int) $b1;

        $i5 = (int) b0;

        $i2 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setValue(int,int)>($i4, $i5);

        $b3 = (byte) $i2;

        r0.<org.apache.poi.hwpf.model.types.TBDAbstractType: byte field_1_value> = $b3;

        return;
    }

    public byte getJc()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        org.apache.poi.hwpf.model.types.TBDAbstractType r0;
        int $i1, $i3;

        r0 := @this: org.apache.poi.hwpf.model.types.TBDAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.TBDAbstractType: org.apache.poi.util.BitField jc>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.TBDAbstractType: byte field_1_value>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int getValue(int)>($i3);

        $b2 = (byte) $i1;

        return $b2;
    }

    public void setTlc(byte)
    {
        org.apache.poi.util.BitField $r1;
        byte b0, $b1, $b3;
        org.apache.poi.hwpf.model.types.TBDAbstractType r0;
        int $i2, $i4, $i5;

        r0 := @this: org.apache.poi.hwpf.model.types.TBDAbstractType;

        b0 := @parameter0: byte;

        $r1 = <org.apache.poi.hwpf.model.types.TBDAbstractType: org.apache.poi.util.BitField tlc>;

        $b1 = r0.<org.apache.poi.hwpf.model.types.TBDAbstractType: byte field_1_value>;

        $i4 = (int) $b1;

        $i5 = (int) b0;

        $i2 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setValue(int,int)>($i4, $i5);

        $b3 = (byte) $i2;

        r0.<org.apache.poi.hwpf.model.types.TBDAbstractType: byte field_1_value> = $b3;

        return;
    }

    public byte getTlc()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        org.apache.poi.hwpf.model.types.TBDAbstractType r0;
        int $i1, $i3;

        r0 := @this: org.apache.poi.hwpf.model.types.TBDAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.TBDAbstractType: org.apache.poi.util.BitField tlc>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.TBDAbstractType: byte field_1_value>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int getValue(int)>($i3);

        $b2 = (byte) $i1;

        return $b2;
    }

    public void setReserved(byte)
    {
        org.apache.poi.util.BitField $r1;
        byte b0, $b1, $b3;
        org.apache.poi.hwpf.model.types.TBDAbstractType r0;
        int $i2, $i4, $i5;

        r0 := @this: org.apache.poi.hwpf.model.types.TBDAbstractType;

        b0 := @parameter0: byte;

        $r1 = <org.apache.poi.hwpf.model.types.TBDAbstractType: org.apache.poi.util.BitField reserved>;

        $b1 = r0.<org.apache.poi.hwpf.model.types.TBDAbstractType: byte field_1_value>;

        $i4 = (int) $b1;

        $i5 = (int) b0;

        $i2 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setValue(int,int)>($i4, $i5);

        $b3 = (byte) $i2;

        r0.<org.apache.poi.hwpf.model.types.TBDAbstractType: byte field_1_value> = $b3;

        return;
    }

    public byte getReserved()
    {
        org.apache.poi.util.BitField $r1;
        byte $b0, $b2;
        org.apache.poi.hwpf.model.types.TBDAbstractType r0;
        int $i1, $i3;

        r0 := @this: org.apache.poi.hwpf.model.types.TBDAbstractType;

        $r1 = <org.apache.poi.hwpf.model.types.TBDAbstractType: org.apache.poi.util.BitField reserved>;

        $b0 = r0.<org.apache.poi.hwpf.model.types.TBDAbstractType: byte field_1_value>;

        $i3 = (int) $b0;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int getValue(int)>($i3);

        $b2 = (byte) $i1;

        return $b2;
    }

    static void <clinit>()
    {
        org.apache.poi.util.BitField $r0, $r1, $r2;

        $r0 = new org.apache.poi.util.BitField;

        specialinvoke $r0.<org.apache.poi.util.BitField: void <init>(int)>(7);

        <org.apache.poi.hwpf.model.types.TBDAbstractType: org.apache.poi.util.BitField jc> = $r0;

        $r1 = new org.apache.poi.util.BitField;

        specialinvoke $r1.<org.apache.poi.util.BitField: void <init>(int)>(56);

        <org.apache.poi.hwpf.model.types.TBDAbstractType: org.apache.poi.util.BitField tlc> = $r1;

        $r2 = new org.apache.poi.util.BitField;

        specialinvoke $r2.<org.apache.poi.util.BitField: void <init>(int)>(192);

        <org.apache.poi.hwpf.model.types.TBDAbstractType: org.apache.poi.util.BitField reserved> = $r2;

        return;
    }
}
