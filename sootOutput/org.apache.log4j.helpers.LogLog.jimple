public class org.apache.log4j.helpers.LogLog extends java.lang.Object
{
    public static final java.lang.String DEBUG_KEY;
    public static final java.lang.String CONFIG_DEBUG_KEY;
    protected static boolean debugEnabled;
    private static boolean quietMode;
    private static final java.lang.String PREFIX;
    private static final java.lang.String ERR_PREFIX;
    private static final java.lang.String WARN_PREFIX;

    public void <init>()
    {
        org.apache.log4j.helpers.LogLog r0;

        r0 := @this: org.apache.log4j.helpers.LogLog;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void setInternalDebugging(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <org.apache.log4j.helpers.LogLog: boolean debugEnabled> = z0;

        return;
    }

    public static void debug(java.lang.String)
    {
        java.io.PrintStream $r1;
        java.lang.StringBuffer $r0, $r2, $r4;
        java.lang.String r3, $r5;
        boolean $z0, $z1;

        r3 := @parameter0: java.lang.String;

        $z0 = <org.apache.log4j.helpers.LogLog: boolean debugEnabled>;

        if $z0 == 0 goto label1;

        $z1 = <org.apache.log4j.helpers.LogLog: boolean quietMode>;

        if $z1 != 0 goto label1;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("log4j: ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);

     label1:
        return;
    }

    public static void debug(java.lang.String, java.lang.Throwable)
    {
        java.io.PrintStream $r1, $r7;
        java.lang.Throwable r6;
        java.lang.StringBuffer $r0, $r2, $r4;
        java.lang.String r3, $r5;
        boolean $z0, $z1;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.Throwable;

        $z0 = <org.apache.log4j.helpers.LogLog: boolean debugEnabled>;

        if $z0 == 0 goto label1;

        $z1 = <org.apache.log4j.helpers.LogLog: boolean quietMode>;

        if $z1 != 0 goto label1;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("log4j: ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);

        if r6 == null goto label1;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke r6.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r7);

     label1:
        return;
    }

    public static void error(java.lang.String)
    {
        java.io.PrintStream $r1;
        java.lang.StringBuffer $r0, $r2, $r4;
        java.lang.String r3, $r5;
        boolean $z0;

        r3 := @parameter0: java.lang.String;

        $z0 = <org.apache.log4j.helpers.LogLog: boolean quietMode>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = <java.lang.System: java.io.PrintStream err>;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("log4j:ERROR ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return;
    }

    public static void error(java.lang.String, java.lang.Throwable)
    {
        java.io.PrintStream $r1;
        java.lang.Throwable r6;
        java.lang.StringBuffer $r0, $r2, $r4;
        java.lang.String r3, $r5;
        boolean $z0;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.Throwable;

        $z0 = <org.apache.log4j.helpers.LogLog: boolean quietMode>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = <java.lang.System: java.io.PrintStream err>;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("log4j:ERROR ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);

        if r6 == null goto label2;

        virtualinvoke r6.<java.lang.Throwable: void printStackTrace()>();

     label2:
        return;
    }

    public static void setQuietMode(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <org.apache.log4j.helpers.LogLog: boolean quietMode> = z0;

        return;
    }

    public static void warn(java.lang.String)
    {
        java.io.PrintStream $r1;
        java.lang.StringBuffer $r0, $r2, $r4;
        java.lang.String r3, $r5;
        boolean $z0;

        r3 := @parameter0: java.lang.String;

        $z0 = <org.apache.log4j.helpers.LogLog: boolean quietMode>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = <java.lang.System: java.io.PrintStream err>;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("log4j:WARN ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return;
    }

    public static void warn(java.lang.String, java.lang.Throwable)
    {
        java.io.PrintStream $r1;
        java.lang.Throwable r6;
        java.lang.StringBuffer $r0, $r2, $r4;
        java.lang.String r3, $r5;
        boolean $z0;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.Throwable;

        $z0 = <org.apache.log4j.helpers.LogLog: boolean quietMode>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = <java.lang.System: java.io.PrintStream err>;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("log4j:WARN ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);

        if r6 == null goto label2;

        virtualinvoke r6.<java.lang.Throwable: void printStackTrace()>();

     label2:
        return;
    }

    static void <clinit>()
    {
        java.lang.String $r0, r1;
        boolean $z0;

        <org.apache.log4j.helpers.LogLog: java.lang.String WARN_PREFIX> = "log4j:WARN ";

        <org.apache.log4j.helpers.LogLog: java.lang.String ERR_PREFIX> = "log4j:ERROR ";

        <org.apache.log4j.helpers.LogLog: java.lang.String PREFIX> = "log4j: ";

        <org.apache.log4j.helpers.LogLog: java.lang.String CONFIG_DEBUG_KEY> = "log4j.configDebug";

        <org.apache.log4j.helpers.LogLog: java.lang.String DEBUG_KEY> = "log4j.debug";

        <org.apache.log4j.helpers.LogLog: boolean debugEnabled> = 0;

        <org.apache.log4j.helpers.LogLog: boolean quietMode> = 0;

        $r0 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("log4j.debug", null);

        r1 = $r0;

        if $r0 != null goto label1;

        r1 = staticinvoke <org.apache.log4j.helpers.OptionConverter: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("log4j.configDebug", null);

     label1:
        if r1 == null goto label2;

        $z0 = staticinvoke <org.apache.log4j.helpers.OptionConverter: boolean toBoolean(java.lang.String,boolean)>(r1, 1);

        <org.apache.log4j.helpers.LogLog: boolean debugEnabled> = $z0;

     label2:
        return;
    }
}
