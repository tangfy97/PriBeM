public class org.apache.lucene.spatial.util.CachingDoubleValueSource extends org.apache.lucene.queries.function.ValueSource
{
    final org.apache.lucene.queries.function.ValueSource source;
    final java.util.Map cache;

    public void <init>(org.apache.lucene.queries.function.ValueSource)
    {
        org.apache.lucene.queries.function.ValueSource r1;
        org.apache.lucene.spatial.util.CachingDoubleValueSource r0;
        java.util.HashMap $r2;

        r0 := @this: org.apache.lucene.spatial.util.CachingDoubleValueSource;

        r1 := @parameter0: org.apache.lucene.queries.function.ValueSource;

        specialinvoke r0.<org.apache.lucene.queries.function.ValueSource: void <init>()>();

        r0.<org.apache.lucene.spatial.util.CachingDoubleValueSource: org.apache.lucene.queries.function.ValueSource source> = r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.spatial.util.CachingDoubleValueSource: java.util.Map cache> = $r2;

        return;
    }

    public java.lang.String description()
    {
        org.apache.lucene.spatial.util.CachingDoubleValueSource r2;
        org.apache.lucene.queries.function.ValueSource $r3;
        java.lang.StringBuilder $r0, $r1, $r5, $r6;
        java.lang.String $r4, $r7;

        r2 := @this: org.apache.lucene.spatial.util.CachingDoubleValueSource;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cached[");

        $r3 = r2.<org.apache.lucene.spatial.util.CachingDoubleValueSource: org.apache.lucene.queries.function.ValueSource source>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.queries.function.ValueSource: java.lang.String description()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public org.apache.lucene.queries.function.FunctionValues getValues(java.util.Map, org.apache.lucene.index.AtomicReaderContext) throws java.io.IOException
    {
        org.apache.lucene.queries.function.ValueSource $r3;
        org.apache.lucene.spatial.util.CachingDoubleValueSource$1 $r5;
        org.apache.lucene.spatial.util.CachingDoubleValueSource r1;
        java.util.Map r2;
        int i0;
        org.apache.lucene.queries.function.FunctionValues $r4;
        org.apache.lucene.index.AtomicReaderContext r0;

        r1 := @this: org.apache.lucene.spatial.util.CachingDoubleValueSource;

        r2 := @parameter0: java.util.Map;

        r0 := @parameter1: org.apache.lucene.index.AtomicReaderContext;

        i0 = r0.<org.apache.lucene.index.AtomicReaderContext: int docBase>;

        $r3 = r1.<org.apache.lucene.spatial.util.CachingDoubleValueSource: org.apache.lucene.queries.function.ValueSource source>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.queries.function.ValueSource: org.apache.lucene.queries.function.FunctionValues getValues(java.util.Map,org.apache.lucene.index.AtomicReaderContext)>(r2, r0);

        $r5 = new org.apache.lucene.spatial.util.CachingDoubleValueSource$1;

        specialinvoke $r5.<org.apache.lucene.spatial.util.CachingDoubleValueSource$1: void <init>(org.apache.lucene.spatial.util.CachingDoubleValueSource,int,org.apache.lucene.queries.function.FunctionValues)>(r1, i0, $r4);

        return $r5;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.lucene.spatial.util.CachingDoubleValueSource r0, r4;
        org.apache.lucene.queries.function.ValueSource $r5, $r6, $r7, $r8;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.lucene.spatial.util.CachingDoubleValueSource;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

     label2:
        return 0;

     label3:
        r4 = (org.apache.lucene.spatial.util.CachingDoubleValueSource) r1;

        $r5 = r0.<org.apache.lucene.spatial.util.CachingDoubleValueSource: org.apache.lucene.queries.function.ValueSource source>;

        if $r5 == null goto label4;

        $r8 = r0.<org.apache.lucene.spatial.util.CachingDoubleValueSource: org.apache.lucene.queries.function.ValueSource source>;

        $r7 = r4.<org.apache.lucene.spatial.util.CachingDoubleValueSource: org.apache.lucene.queries.function.ValueSource source>;

        $z0 = virtualinvoke $r8.<org.apache.lucene.queries.function.ValueSource: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label6;

        goto label5;

     label4:
        $r6 = r4.<org.apache.lucene.spatial.util.CachingDoubleValueSource: org.apache.lucene.queries.function.ValueSource source>;

        if $r6 == null goto label6;

     label5:
        return 0;

     label6:
        return 1;
    }

    public int hashCode()
    {
        org.apache.lucene.queries.function.ValueSource $r1, $r2;
        org.apache.lucene.spatial.util.CachingDoubleValueSource r0;
        int $i0;

        r0 := @this: org.apache.lucene.spatial.util.CachingDoubleValueSource;

        $r1 = r0.<org.apache.lucene.spatial.util.CachingDoubleValueSource: org.apache.lucene.queries.function.ValueSource source>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.lucene.spatial.util.CachingDoubleValueSource: org.apache.lucene.queries.function.ValueSource source>;

        $i0 = virtualinvoke $r2.<org.apache.lucene.queries.function.ValueSource: int hashCode()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }
}
