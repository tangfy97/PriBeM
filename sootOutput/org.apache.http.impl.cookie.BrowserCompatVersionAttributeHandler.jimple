class org.apache.http.impl.cookie.BrowserCompatVersionAttributeHandler extends org.apache.http.impl.cookie.AbstractCookieAttributeHandler
{

    public void <init>()
    {
        org.apache.http.impl.cookie.BrowserCompatVersionAttributeHandler r0;

        r0 := @this: org.apache.http.impl.cookie.BrowserCompatVersionAttributeHandler;

        specialinvoke r0.<org.apache.http.impl.cookie.AbstractCookieAttributeHandler: void <init>()>();

        return;
    }

    public void parse(org.apache.http.cookie.SetCookie, java.lang.String) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.cookie.SetCookie r0;
        org.apache.http.cookie.MalformedCookieException $r2;
        org.apache.http.impl.cookie.BrowserCompatVersionAttributeHandler r5;
        int i0;
        java.lang.NumberFormatException $r4;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r3;

        r5 := @this: org.apache.http.impl.cookie.BrowserCompatVersionAttributeHandler;

        r0 := @parameter0: org.apache.http.cookie.SetCookie;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r3;

     label1:
        if r1 != null goto label2;

        $r2 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r2.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Missing value for version attribute");

        throw $r2;

     label2:
        i0 = 0;

     label3:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

     label6:
        interfaceinvoke r0.<org.apache.http.cookie.SetCookie: void setVersion(int)>(i0);

        return;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }
}
