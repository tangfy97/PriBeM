public class org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest extends org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest
{
    private java.lang.String prefix;
    private short nodeType;

    public void <init>(java.lang.String, short)
    {
        short s0;
        java.lang.String r1;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest;

        r1 := @parameter0: java.lang.String;

        s0 := @parameter1: short;

        specialinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest: void <init>()>();

        if r1 != null goto label1;

        r1 = "";

     label1:
        r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest: java.lang.String prefix> = r1;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest: short nodeType> = s0;

        return;
    }

    public boolean matches(java.lang.Object, org.xmlpull.v1.builder.xpath.jaxen.Context)
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest r2;
        short $s0, $s1;
        int $i2;
        java.lang.String $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.xmlpull.v1.builder.xpath.jaxen.Context r0;
        java.lang.Object r3;
        org.xmlpull.v1.builder.xpath.jaxen.Navigator $r1;

        r2 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest;

        r3 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.xmlpull.v1.builder.xpath.jaxen.Context;

        $r1 = virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.Context: org.xmlpull.v1.builder.xpath.jaxen.Navigator getNavigator()>();

        $r4 = virtualinvoke r2.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest: java.lang.String getURI(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Context)>(r3, r0);

        $s0 = r2.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest: short nodeType>;

        if $s0 != 1 goto label3;

        $z2 = interfaceinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: boolean isElement(java.lang.Object)>(r3);

        if $z2 == 0 goto label1;

        $r6 = interfaceinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: java.lang.String getElementNamespaceUri(java.lang.Object)>(r3);

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z3 == 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        return $z4;

     label3:
        $s1 = r2.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest: short nodeType>;

        $i2 = (int) $s1;

        if $i2 != 2 goto label6;

        $z0 = interfaceinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: boolean isAttribute(java.lang.Object)>(r3);

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: java.lang.String getAttributeNamespaceUri(java.lang.Object)>(r3);

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label4;

        $z5 = 1;

        goto label5;

     label4:
        $z5 = 0;

     label5:
        return $z5;

     label6:
        return 0;
    }

    public double getPriority()
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest;

        return -0.25;
    }

    public short getMatchType()
    {
        short $s0;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest;

        $s0 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest: short nodeType>;

        return $s0;
    }

    public java.lang.String getText()
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest r1;
        java.lang.StringBuffer $r0, $r3, $r4;
        java.lang.String $r2, $r5;

        r1 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest: java.lang.String prefix>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public java.lang.String toString()
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest r1;
        short $s0;
        java.lang.StringBuffer $r3, $r4, $r6, $r7, $r8, $r9, $r11;
        int $i1;
        java.lang.String $r2, $r5, $r10;

        r1 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[ prefix: ");

        $r5 = r1.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest: java.lang.String prefix>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" type: ");

        $s0 = r1.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest: short nodeType>;

        $i1 = (int) $s0;

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ]");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;
    }

    protected java.lang.String getURI(java.lang.Object, org.xmlpull.v1.builder.xpath.jaxen.Context)
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest r2;
        org.xmlpull.v1.builder.xpath.jaxen.Context r0;
        org.xmlpull.v1.builder.xpath.jaxen.ContextSupport $r6;
        java.lang.Object r3;
        java.lang.String $r4, $r5, $r7, r8;
        org.xmlpull.v1.builder.xpath.jaxen.Navigator $r1;

        r2 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest;

        r3 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.xmlpull.v1.builder.xpath.jaxen.Context;

        $r1 = virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.Context: org.xmlpull.v1.builder.xpath.jaxen.Navigator getNavigator()>();

        $r4 = r2.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest: java.lang.String prefix>;

        $r5 = interfaceinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: java.lang.String translateNamespacePrefixToUri(java.lang.String,java.lang.Object)>($r4, r3);

        r8 = $r5;

        if $r5 != null goto label1;

        $r6 = virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.Context: org.xmlpull.v1.builder.xpath.jaxen.ContextSupport getContextSupport()>();

        $r7 = r2.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NamespaceTest: java.lang.String prefix>;

        r8 = virtualinvoke $r6.<org.xmlpull.v1.builder.xpath.jaxen.ContextSupport: java.lang.String translateNamespacePrefixToUri(java.lang.String)>($r7);

     label1:
        if r8 != null goto label2;

        r8 = "";

     label2:
        return r8;
    }
}
