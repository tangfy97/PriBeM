class org.waveprotocol.box.server.waveserver.WaveServerImpl$4 extends java.lang.Object implements org.waveprotocol.wave.federation.WaveletFederationProvider$PostSignerInfoResponseListener
{
    final org.waveprotocol.wave.federation.Proto$ProtocolSignature val$sig;
    final java.lang.String val$domain;
    final java.util.concurrent.atomic.AtomicInteger val$successCount;
    final java.util.concurrent.atomic.AtomicInteger val$resultCount;
    final org.waveprotocol.box.server.waveserver.WaveServerImpl$PostSignerInfoCallback val$callback;
    final org.waveprotocol.box.server.waveserver.WaveServerImpl this$0;

    void <init>(org.waveprotocol.box.server.waveserver.WaveServerImpl, org.waveprotocol.wave.federation.Proto$ProtocolSignature, java.lang.String, java.util.concurrent.atomic.AtomicInteger, java.util.concurrent.atomic.AtomicInteger, org.waveprotocol.box.server.waveserver.WaveServerImpl$PostSignerInfoCallback)
    {
        org.waveprotocol.box.server.waveserver.WaveServerImpl$PostSignerInfoCallback r6;
        org.waveprotocol.box.server.waveserver.WaveServerImpl$4 r0;
        java.util.concurrent.atomic.AtomicInteger r4, r5;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature r2;
        java.lang.String r3;
        org.waveprotocol.box.server.waveserver.WaveServerImpl r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveServerImpl$4;

        r1 := @parameter0: org.waveprotocol.box.server.waveserver.WaveServerImpl;

        r2 := @parameter1: org.waveprotocol.wave.federation.Proto$ProtocolSignature;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.concurrent.atomic.AtomicInteger;

        r5 := @parameter4: java.util.concurrent.atomic.AtomicInteger;

        r6 := @parameter5: org.waveprotocol.box.server.waveserver.WaveServerImpl$PostSignerInfoCallback;

        r0.<org.waveprotocol.box.server.waveserver.WaveServerImpl$4: org.waveprotocol.box.server.waveserver.WaveServerImpl this$0> = r1;

        r0.<org.waveprotocol.box.server.waveserver.WaveServerImpl$4: org.waveprotocol.wave.federation.Proto$ProtocolSignature val$sig> = r2;

        r0.<org.waveprotocol.box.server.waveserver.WaveServerImpl$4: java.lang.String val$domain> = r3;

        r0.<org.waveprotocol.box.server.waveserver.WaveServerImpl$4: java.util.concurrent.atomic.AtomicInteger val$successCount> = r4;

        r0.<org.waveprotocol.box.server.waveserver.WaveServerImpl$4: java.util.concurrent.atomic.AtomicInteger val$resultCount> = r5;

        r0.<org.waveprotocol.box.server.waveserver.WaveServerImpl$4: org.waveprotocol.box.server.waveserver.WaveServerImpl$PostSignerInfoCallback val$callback> = r6;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onFailure(org.waveprotocol.wave.federation.FederationErrorProto$FederationError)
    {
        org.waveprotocol.box.server.waveserver.WaveServerImpl$4 r3;
        org.waveprotocol.wave.federation.FederationErrorProto$FederationError r10;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature $r4;
        org.waveprotocol.wave.util.logging.Log $r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r8, $r9, $r11;
        java.lang.String $r7, $r12;

        r3 := @this: org.waveprotocol.box.server.waveserver.WaveServerImpl$4;

        r10 := @parameter0: org.waveprotocol.wave.federation.FederationErrorProto$FederationError;

        $r0 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveServerImpl: org.waveprotocol.wave.util.logging.Log access$100()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to post ");

        $r4 = r3.<org.waveprotocol.box.server.waveserver.WaveServerImpl$4: org.waveprotocol.wave.federation.Proto$ProtocolSignature val$sig>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r7 = r3.<org.waveprotocol.box.server.waveserver.WaveServerImpl$4: java.lang.String val$domain>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<org.waveprotocol.wave.util.logging.Log: void warning(java.lang.String)>($r12);

        specialinvoke r3.<org.waveprotocol.box.server.waveserver.WaveServerImpl$4: void countDown()>();

        return;
    }

    public void onSuccess()
    {
        org.waveprotocol.box.server.waveserver.WaveServerImpl$4 r3;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature $r4;
        java.util.concurrent.atomic.AtomicInteger $r10;
        org.waveprotocol.wave.util.logging.Log $r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r8;
        java.lang.String $r7, $r9;

        r3 := @this: org.waveprotocol.box.server.waveserver.WaveServerImpl$4;

        $r0 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveServerImpl: org.waveprotocol.wave.util.logging.Log access$100()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Successfully broadcasted ");

        $r4 = r3.<org.waveprotocol.box.server.waveserver.WaveServerImpl$4: org.waveprotocol.wave.federation.Proto$ProtocolSignature val$sig>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r7 = r3.<org.waveprotocol.box.server.waveserver.WaveServerImpl$4: java.lang.String val$domain>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<org.waveprotocol.wave.util.logging.Log: void info(java.lang.String)>($r9);

        $r10 = r3.<org.waveprotocol.box.server.waveserver.WaveServerImpl$4: java.util.concurrent.atomic.AtomicInteger val$successCount>;

        virtualinvoke $r10.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        specialinvoke r3.<org.waveprotocol.box.server.waveserver.WaveServerImpl$4: void countDown()>();

        return;
    }

    private void countDown()
    {
        org.waveprotocol.box.server.waveserver.WaveServerImpl$PostSignerInfoCallback $r10;
        org.waveprotocol.box.server.waveserver.WaveServerImpl$4 r0;
        java.util.concurrent.atomic.AtomicInteger $r1, $r5, $r9;
        int $i0, $i1, $i2;
        org.waveprotocol.wave.util.logging.Log $r2;
        java.lang.StringBuilder $r3, $r4, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveServerImpl$4;

        $r1 = r0.<org.waveprotocol.box.server.waveserver.WaveServerImpl$4: java.util.concurrent.atomic.AtomicInteger val$resultCount>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        if $i0 != 0 goto label1;

        $r2 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveServerImpl: org.waveprotocol.wave.util.logging.Log access$100()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finished signature broadcast with ");

        $r5 = r0.<org.waveprotocol.box.server.waveserver.WaveServerImpl$4: java.util.concurrent.atomic.AtomicInteger val$successCount>;

        $i1 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" successful, running callback");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<org.waveprotocol.wave.util.logging.Log: void info(java.lang.String)>($r8);

        $r10 = r0.<org.waveprotocol.box.server.waveserver.WaveServerImpl$4: org.waveprotocol.box.server.waveserver.WaveServerImpl$PostSignerInfoCallback val$callback>;

        $r9 = r0.<org.waveprotocol.box.server.waveserver.WaveServerImpl$4: java.util.concurrent.atomic.AtomicInteger val$successCount>;

        $i2 = virtualinvoke $r9.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        interfaceinvoke $r10.<org.waveprotocol.box.server.waveserver.WaveServerImpl$PostSignerInfoCallback: void done(int)>($i2);

     label1:
        return;
    }
}
