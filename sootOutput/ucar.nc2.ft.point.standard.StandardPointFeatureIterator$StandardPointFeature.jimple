class ucar.nc2.ft.point.standard.StandardPointFeatureIterator$StandardPointFeature extends ucar.nc2.ft.point.PointFeatureImpl implements ucar.nc2.ft.point.StationPointFeature
{
    protected ucar.nc2.ft.point.standard.Cursor cursor;
    final ucar.nc2.ft.point.standard.StandardPointFeatureIterator this$0;

    void <init>(ucar.nc2.ft.point.standard.StandardPointFeatureIterator, ucar.nc2.ft.point.standard.Cursor, ucar.nc2.units.DateUnit, double)
    {
        ucar.nc2.ft.point.standard.StandardPointFeatureIterator r1;
        ucar.nc2.units.DateUnit r2;
        ucar.nc2.ft.point.standard.StandardPointFeatureIterator$StandardPointFeature r0;
        ucar.unidata.geoloc.EarthLocation $r8;
        ucar.nc2.ft.point.standard.Cursor r3, $r4, $r6;
        ucar.nc2.ft.point.standard.NestedTable $r5, $r7;
        double d0, $d1, $d2;
        boolean $z0;

        r0 := @this: ucar.nc2.ft.point.standard.StandardPointFeatureIterator$StandardPointFeature;

        r1 := @parameter0: ucar.nc2.ft.point.standard.StandardPointFeatureIterator;

        r3 := @parameter1: ucar.nc2.ft.point.standard.Cursor;

        r2 := @parameter2: ucar.nc2.units.DateUnit;

        d0 := @parameter3: double;

        r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator$StandardPointFeature: ucar.nc2.ft.point.standard.StandardPointFeatureIterator this$0> = r1;

        specialinvoke r0.<ucar.nc2.ft.point.PointFeatureImpl: void <init>(ucar.nc2.units.DateUnit)>(r2);

        r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator$StandardPointFeature: ucar.nc2.ft.point.standard.Cursor cursor> = r3;

        r3.<ucar.nc2.ft.point.standard.Cursor: int currentIndex> = 1;

        r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator$StandardPointFeature: double obsTime> = d0;

        $r5 = r1.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator: ucar.nc2.ft.point.standard.NestedTable ft>;

        $r4 = r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator$StandardPointFeature: ucar.nc2.ft.point.standard.Cursor cursor>;

        $d1 = virtualinvoke $r5.<ucar.nc2.ft.point.standard.NestedTable: double getNomTime(ucar.nc2.ft.point.standard.Cursor)>($r4);

        r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator$StandardPointFeature: double nomTime> = $d1;

        $d2 = r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator$StandardPointFeature: double nomTime>;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        if $z0 == 0 goto label1;

        r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator$StandardPointFeature: double nomTime> = d0;

     label1:
        $r7 = r1.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator: ucar.nc2.ft.point.standard.NestedTable ft>;

        $r6 = r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator$StandardPointFeature: ucar.nc2.ft.point.standard.Cursor cursor>;

        $r8 = virtualinvoke $r7.<ucar.nc2.ft.point.standard.NestedTable: ucar.unidata.geoloc.EarthLocation getEarthLocation(ucar.nc2.ft.point.standard.Cursor)>($r6);

        r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator$StandardPointFeature: ucar.unidata.geoloc.EarthLocation location> = $r8;

        return;
    }

    public ucar.ma2.StructureData getData()
    {
        ucar.ma2.StructureData $r4;
        ucar.nc2.ft.point.standard.StandardPointFeatureIterator $r1;
        ucar.nc2.ft.point.standard.StandardPointFeatureIterator$StandardPointFeature r0;
        ucar.nc2.ft.point.standard.Cursor $r2;
        ucar.nc2.ft.point.standard.NestedTable $r3;

        r0 := @this: ucar.nc2.ft.point.standard.StandardPointFeatureIterator$StandardPointFeature;

        $r1 = r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator$StandardPointFeature: ucar.nc2.ft.point.standard.StandardPointFeatureIterator this$0>;

        $r3 = $r1.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator: ucar.nc2.ft.point.standard.NestedTable ft>;

        $r2 = r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator$StandardPointFeature: ucar.nc2.ft.point.standard.Cursor cursor>;

        $r4 = virtualinvoke $r3.<ucar.nc2.ft.point.standard.NestedTable: ucar.ma2.StructureData makeObsStructureData(ucar.nc2.ft.point.standard.Cursor)>($r2);

        return $r4;
    }

    public ucar.unidata.geoloc.Station getStation()
    {
        ucar.ma2.StructureData $r4;
        ucar.nc2.ft.point.standard.StandardPointFeatureIterator $r1;
        ucar.nc2.ft.point.standard.StandardPointFeatureIterator$StandardPointFeature r0;
        ucar.unidata.geoloc.Station $r5;
        ucar.nc2.ft.point.standard.Cursor $r2;
        ucar.nc2.ft.point.standard.NestedTable $r3;

        r0 := @this: ucar.nc2.ft.point.standard.StandardPointFeatureIterator$StandardPointFeature;

        $r1 = r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator$StandardPointFeature: ucar.nc2.ft.point.standard.StandardPointFeatureIterator this$0>;

        $r3 = $r1.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator: ucar.nc2.ft.point.standard.NestedTable ft>;

        $r2 = r0.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator$StandardPointFeature: ucar.nc2.ft.point.standard.Cursor cursor>;

        $r4 = virtualinvoke $r2.<ucar.nc2.ft.point.standard.Cursor: ucar.ma2.StructureData getParentStructure()>();

        $r5 = virtualinvoke $r3.<ucar.nc2.ft.point.standard.NestedTable: ucar.unidata.geoloc.Station makeStation(ucar.ma2.StructureData)>($r4);

        return $r5;
    }
}
