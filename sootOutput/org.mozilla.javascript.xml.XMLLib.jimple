public abstract class org.mozilla.javascript.xml.XMLLib extends java.lang.Object
{
    private static final java.lang.Object XML_LIB_KEY;

    public void <init>()
    {
        org.mozilla.javascript.xml.XMLLib r0;

        r0 := @this: org.mozilla.javascript.xml.XMLLib;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.mozilla.javascript.xml.XMLLib extractFromScopeOrNull(org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.xml.XMLLib $r4;
        org.mozilla.javascript.Scriptable r0;
        org.mozilla.javascript.ScriptableObject $r1;
        java.lang.Object $r2, $r3;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.ScriptableObject getLibraryScopeOrNull(org.mozilla.javascript.Scriptable)>(r0);

        if $r1 != null goto label1;

        return null;

     label1:
        staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object getProperty(org.mozilla.javascript.Scriptable,java.lang.String)>($r1, "XML");

        $r2 = <org.mozilla.javascript.xml.XMLLib: java.lang.Object XML_LIB_KEY>;

        $r3 = virtualinvoke $r1.<org.mozilla.javascript.ScriptableObject: java.lang.Object getAssociatedValue(java.lang.Object)>($r2);

        $r4 = (org.mozilla.javascript.xml.XMLLib) $r3;

        return $r4;
    }

    public static org.mozilla.javascript.xml.XMLLib extractFromScope(org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.xml.XMLLib $r1;
        org.mozilla.javascript.Scriptable r0;
        org.mozilla.javascript.EvaluatorException $r3;
        java.lang.String $r2;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        $r1 = staticinvoke <org.mozilla.javascript.xml.XMLLib: org.mozilla.javascript.xml.XMLLib extractFromScopeOrNull(org.mozilla.javascript.Scriptable)>(r0);

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String getMessage0(java.lang.String)>("msg.XML.not.available");

        $r3 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError(java.lang.String)>($r2);

        throw $r3;
    }

    protected final org.mozilla.javascript.xml.XMLLib bindToScope(org.mozilla.javascript.Scriptable)
    {
        java.lang.IllegalStateException $r6;
        org.mozilla.javascript.xml.XMLLib r2, $r5;
        org.mozilla.javascript.Scriptable r0;
        org.mozilla.javascript.ScriptableObject $r1;
        java.lang.Object $r3, $r4;

        r2 := @this: org.mozilla.javascript.xml.XMLLib;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.ScriptableObject getLibraryScopeOrNull(org.mozilla.javascript.Scriptable)>(r0);

        if $r1 != null goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>()>();

        throw $r6;

     label1:
        $r3 = <org.mozilla.javascript.xml.XMLLib: java.lang.Object XML_LIB_KEY>;

        $r4 = virtualinvoke $r1.<org.mozilla.javascript.ScriptableObject: java.lang.Object associateValue(java.lang.Object,java.lang.Object)>($r3, r2);

        $r5 = (org.mozilla.javascript.xml.XMLLib) $r4;

        return $r5;
    }

    public abstract boolean isXMLName(org.mozilla.javascript.Context, java.lang.Object);

    public abstract org.mozilla.javascript.Ref nameRef(org.mozilla.javascript.Context, java.lang.Object, org.mozilla.javascript.Scriptable, int);

    public abstract org.mozilla.javascript.Ref nameRef(org.mozilla.javascript.Context, java.lang.Object, java.lang.Object, org.mozilla.javascript.Scriptable, int);

    public abstract java.lang.String escapeAttributeValue(java.lang.Object);

    public abstract java.lang.String escapeTextValue(java.lang.Object);

    public abstract java.lang.Object toDefaultXmlNamespace(org.mozilla.javascript.Context, java.lang.Object);

    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <org.mozilla.javascript.xml.XMLLib: java.lang.Object XML_LIB_KEY> = $r0;

        return;
    }
}
