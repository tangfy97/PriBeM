public class com.jhlabs.math.VLNoise extends java.lang.Object implements com.jhlabs.math.Function2D
{
    private float distortion;

    public void <init>()
    {
        com.jhlabs.math.VLNoise r0;

        r0 := @this: com.jhlabs.math.VLNoise;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jhlabs.math.VLNoise: float distortion> = 10.0F;

        return;
    }

    public void setDistortion(float)
    {
        float f0;
        com.jhlabs.math.VLNoise r0;

        r0 := @this: com.jhlabs.math.VLNoise;

        f0 := @parameter0: float;

        r0.<com.jhlabs.math.VLNoise: float distortion> = f0;

        return;
    }

    public float getDistortion()
    {
        float $f0;
        com.jhlabs.math.VLNoise r0;

        r0 := @this: com.jhlabs.math.VLNoise;

        $f0 = r0.<com.jhlabs.math.VLNoise: float distortion>;

        return $f0;
    }

    public float evaluate(float, float)
    {
        float f0, f1, $f2, $f3, $f4, f5, $f6, $f7, $f8, f9, $f10, $f11, $f12;
        com.jhlabs.math.VLNoise r0;

        r0 := @this: com.jhlabs.math.VLNoise;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f2 = f0 + 0.5F;

        $f3 = staticinvoke <com.jhlabs.math.Noise: float noise2(float,float)>($f2, f1);

        $f4 = r0.<com.jhlabs.math.VLNoise: float distortion>;

        f5 = $f3 * $f4;

        $f6 = f1 + 0.5F;

        $f7 = staticinvoke <com.jhlabs.math.Noise: float noise2(float,float)>(f0, $f6);

        $f8 = r0.<com.jhlabs.math.VLNoise: float distortion>;

        f9 = $f7 * $f8;

        $f11 = f0 + f5;

        $f10 = f1 + f9;

        $f12 = staticinvoke <com.jhlabs.math.Noise: float noise2(float,float)>($f11, $f10);

        return $f12;
    }
}
