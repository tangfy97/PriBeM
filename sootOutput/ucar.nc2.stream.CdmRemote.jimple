public class ucar.nc2.stream.CdmRemote extends ucar.nc2.NetcdfFile
{
    public static final java.lang.String SCHEME;
    private static org.slf4j.Logger logger;
    private static boolean showRequest;
    private opendap.dap.http.HTTPSession httpClient;
    private final java.lang.String remoteURI;
    static final boolean $assertionsDisabled;

    public static java.lang.String canonicalURL(java.lang.String)
    {
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String r0, $r3, $r5;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("http:");

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cdmremote:");

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(5);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label1:
        return r0;
    }

    public void <init>(java.lang.String) throws java.io.IOException
    {
        opendap.dap.http.HTTPSession $r2, $r8;
        java.lang.Long $r19;
        boolean $z0, $z1, $z2, $z3;
        opendap.dap.http.HTTPMethod $r9, r45;
        java.io.FileNotFoundException $r28;
        java.lang.Exception $r43;
        java.lang.StringBuilder $r3, $r5, $r6, $r12, $r13, $r15, $r21, $r23, $r24, $r26, $r29, $r31, $r32, $r34, $r38, $r39, $r40;
        java.lang.Throwable $r42;
        java.lang.Object[] $r17, $r36;
        long $l0, $l2, $l3;
        ucar.nc2.stream.NcStreamReader $r11;
        ucar.nc2.stream.CdmRemote r0;
        int $i1, $i4;
        java.lang.String r1, $r4, $r7, $r14, $r16, $r22, $r25, $r27, $r30, $r33, $r35, $r41, r44;
        java.io.PrintStream $r18, $r37;
        java.io.IOException $r20;
        java.io.InputStream $r10;

        r0 := @this: ucar.nc2.stream.CdmRemote;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<ucar.nc2.NetcdfFile: void <init>()>();

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r44 = r1;

     label01:
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("cdmremote:");

        if $z0 == 0 goto label02;

        $r41 = "cdmremote:";

        $i4 = virtualinvoke $r41.<java.lang.String: int length()>();

        r44 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i4);

     label02:
        $z1 = virtualinvoke r44.<java.lang.String: boolean startsWith(java.lang.String)>("http:");

        if $z1 != 0 goto label03;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http:");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r44);

        r44 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        goto label05;

     label04:
        $r43 := @caughtexception;

     label05:
        r0.<ucar.nc2.stream.CdmRemote: java.lang.String remoteURI> = r44;

        $r2 = new opendap.dap.http.HTTPSession;

        specialinvoke $r2.<opendap.dap.http.HTTPSession: void <init>()>();

        r0.<ucar.nc2.stream.CdmRemote: opendap.dap.http.HTTPSession httpClient> = $r2;

        r45 = null;

     label06:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<ucar.nc2.stream.CdmRemote: java.lang.String remoteURI>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?req=header");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = r0.<ucar.nc2.stream.CdmRemote: opendap.dap.http.HTTPSession httpClient>;

        $r9 = virtualinvoke $r8.<opendap.dap.http.HTTPSession: opendap.dap.http.HTTPMethod newMethodGet(java.lang.String)>($r7);

        r45 = $r9;

        virtualinvoke $r9.<opendap.dap.http.HTTPMethod: void setFollowRedirects(boolean)>(1);

        $z2 = <ucar.nc2.stream.CdmRemote: boolean showRequest>;

        if $z2 == 0 goto label07;

        $r37 = <java.lang.System: java.io.PrintStream out>;

        $r36 = newarray (java.lang.Object)[1];

        $r36[0] = $r7;

        virtualinvoke $r37.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("CdmRemote request %s %n", $r36);

     label07:
        $i1 = virtualinvoke $r9.<opendap.dap.http.HTTPMethod: int execute()>();

        if $i1 != 404 goto label08;

        $r28 = new java.io.FileNotFoundException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r9.<opendap.dap.http.HTTPMethod: java.lang.String getURI()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r33 = virtualinvoke $r9.<opendap.dap.http.HTTPMethod: java.lang.String getStatusLine()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r35);

        throw $r28;

     label08:
        if $i1 < 300 goto label09;

        $r20 = new java.io.IOException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r9.<opendap.dap.http.HTTPMethod: java.lang.String getURI()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r25 = virtualinvoke $r9.<opendap.dap.http.HTTPMethod: java.lang.String getStatusLine()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.io.IOException: void <init>(java.lang.String)>($r27);

        throw $r20;

     label09:
        $r10 = virtualinvoke $r9.<opendap.dap.http.HTTPMethod: java.io.InputStream getResponseAsStream()>();

        $r11 = new ucar.nc2.stream.NcStreamReader;

        specialinvoke $r11.<ucar.nc2.stream.NcStreamReader: void <init>()>();

        virtualinvoke $r11.<ucar.nc2.stream.NcStreamReader: ucar.nc2.NetcdfFile readStream(java.io.InputStream,ucar.nc2.NetcdfFile)>($r10, r0);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cdmremote:");

        $r14 = r0.<ucar.nc2.stream.CdmRemote: java.lang.String remoteURI>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<ucar.nc2.stream.CdmRemote: java.lang.String location> = $r16;

     label10:
        if $r9 == null goto label14;

        virtualinvoke $r9.<opendap.dap.http.HTTPMethod: void close()>();

        goto label14;

     label11:
        $r42 := @caughtexception;

     label12:
        if r45 == null goto label13;

        virtualinvoke r45.<opendap.dap.http.HTTPMethod: void close()>();

     label13:
        throw $r42;

     label14:
        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = $l2 - $l0;

        $z3 = <ucar.nc2.stream.CdmRemote: boolean showRequest>;

        if $z3 == 0 goto label15;

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r17 = newarray (java.lang.Object)[1];

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r17[0] = $r19;

        virtualinvoke $r18.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(" took %d msecs %n", $r17);

     label15:
        return;

        catch java.lang.Exception from label01 to label03 with label04;
        catch java.lang.Throwable from label06 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    protected ucar.ma2.Array readData(ucar.nc2.Variable, ucar.ma2.Section) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        opendap.dap.http.HTTPSession $r9;
        ucar.ma2.StructureDataIterator $r60;
        java.lang.Integer $r30;
        org.apache.commons.httpclient.Header $r12;
        ucar.ma2.StructureMembers $r62;
        java.lang.StringBuilder $r23, $r24, $r25, $r26, $r34, $r35, $r37, $r42, $r43, $r45, $r49, $r51, $r52, $r53, $r54, $r55, $r72, $r73, $r74, $r76, $r78;
        java.lang.Throwable $r64;
        java.lang.Object[] $r28;
        ucar.ma2.Section r8;
        long $l3, $l4, $l6;
        java.lang.AssertionError $r81;
        ucar.nc2.Structure r65;
        ucar.nc2.stream.CdmRemote r0;
        java.lang.String $r5, $r6, $r7, $r10, $r14, $r15, $r18, $r27, $r33, $r36, $r38, $r41, $r44, $r46, $r50, $r56, $r59;
        java.io.IOException $r77, $r79;
        ucar.ma2.Array $r13, $r16;
        java.lang.IllegalStateException $r70;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        opendap.dap.http.HTTPMethod $r11, r66;
        ucar.ma2.DataType $r2, $r3, $r19, $r20, $r57, $r58;
        java.io.FileNotFoundException $r75;
        ucar.nc2.stream.NcStreamReader $r80;
        int $i0, $i1, $i2, $i5, $i8, $i10;
        ucar.nc2.Variable r1;
        java.io.PrintStream $r29, $r48;
        ucar.ma2.ArraySequence $r71;
        ucar.nc2.stream.NcStreamReader$DataResult $r69;
        java.io.InputStream $r67;

        r0 := @this: ucar.nc2.stream.CdmRemote;

        r1 := @parameter0: ucar.nc2.Variable;

        r8 := @parameter1: ucar.ma2.Section;

        $z0 = r0.<ucar.nc2.stream.CdmRemote: boolean unlocked>;

        if $z0 == 0 goto label01;

        $r70 = new java.lang.IllegalStateException;

        specialinvoke $r70.<java.lang.IllegalStateException: void <init>(java.lang.String)>("File is unlocked - cannot use");

        throw $r70;

     label01:
        $r2 = virtualinvoke r1.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r3 = <ucar.ma2.DataType: ucar.ma2.DataType SEQUENCE>;

        if $r2 != $r3 goto label02;

        r65 = (ucar.nc2.Structure) r1;

        $i8 = (int) -1;

        $r60 = virtualinvoke r0.<ucar.nc2.stream.CdmRemote: ucar.ma2.StructureDataIterator getStructureIterator(ucar.nc2.Structure,int)>(r65, $i8);

        $r71 = new ucar.ma2.ArraySequence;

        $r62 = virtualinvoke r65.<ucar.nc2.Structure: ucar.ma2.StructureMembers makeStructureMembers()>();

        $i10 = (int) -1;

        specialinvoke $r71.<ucar.ma2.ArraySequence: void <init>(ucar.ma2.StructureMembers,ucar.ma2.StructureDataIterator,int)>($r62, $r60, $i10);

        return $r71;

     label02:
        $r72 = new java.lang.StringBuilder;

        $r5 = r0.<ucar.nc2.stream.CdmRemote: java.lang.String remoteURI>;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?var=");

        $r6 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r7 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8");

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        if r8 == null goto label03;

        $r57 = virtualinvoke r1.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r58 = <ucar.ma2.DataType: ucar.ma2.DataType SEQUENCE>;

        if $r57 == $r58 goto label03;

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r59 = virtualinvoke r8.<ucar.ma2.Section: java.lang.String toString()>();

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label03:
        $z4 = <ucar.nc2.stream.CdmRemote: boolean showRequest>;

        if $z4 == 0 goto label04;

        $r48 = <java.lang.System: java.io.PrintStream out>;

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" CdmRemote data request for variable: ");

        $r50 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" section= ");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" url=");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r72);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r48.<java.io.PrintStream: void println(java.lang.String)>($r56);

     label04:
        r66 = null;

     label05:
        $r9 = r0.<ucar.nc2.stream.CdmRemote: opendap.dap.http.HTTPSession httpClient>;

        $r10 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke $r9.<opendap.dap.http.HTTPSession: opendap.dap.http.HTTPMethod newMethodGet(java.lang.String)>($r10);

        r66 = $r11;

        $i0 = virtualinvoke $r11.<opendap.dap.http.HTTPMethod: int execute()>();

        if $i0 != 404 goto label06;

        $r75 = new java.io.FileNotFoundException;

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r11.<opendap.dap.http.HTTPMethod: java.lang.String getPath()>();

        $r42 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r44 = virtualinvoke $r11.<opendap.dap.http.HTTPMethod: java.lang.String getStatusLine()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r75.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r46);

        throw $r75;

     label06:
        if $i0 < 300 goto label07;

        $r77 = new java.io.IOException;

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r11.<opendap.dap.http.HTTPMethod: java.lang.String getPath()>();

        $r34 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r36 = virtualinvoke $r11.<opendap.dap.http.HTTPMethod: java.lang.String getStatusLine()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r77.<java.io.IOException: void <init>(java.lang.String)>($r38);

        throw $r77;

     label07:
        $r12 = virtualinvoke $r11.<opendap.dap.http.HTTPMethod: org.apache.commons.httpclient.Header getResponseHeader(java.lang.String)>("Content-Length");

        if $r12 == null goto label11;

        $r18 = virtualinvoke $r12.<org.apache.commons.httpclient.Header: java.lang.String getValue()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r18);

        $z3 = <ucar.nc2.stream.CdmRemote: boolean showRequest>;

        if $z3 == 0 goto label08;

        $r29 = <java.lang.System: java.io.PrintStream out>;

        $r28 = newarray (java.lang.Object)[1];

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r28[0] = $r30;

        virtualinvoke $r29.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(" content-length = %d%n", $r28);

     label08:
        $r19 = virtualinvoke r1.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r20 = <ucar.ma2.DataType: ucar.ma2.DataType SEQUENCE>;

        if $r19 == $r20 goto label11;

        $i2 = virtualinvoke r1.<ucar.nc2.Variable: int getElementSize()>();

        $l3 = (long) $i2;

        if r8 != null goto label09;

        $l6 = virtualinvoke r1.<ucar.nc2.Variable: long getSize()>();

        goto label10;

     label09:
        $l6 = virtualinvoke r8.<ucar.ma2.Section: long computeSize()>();

     label10:
        $l4 = $l3 * $l6;

        $i5 = (int) $l4;

        if $i1 == $i5 goto label11;

        $r79 = new java.io.IOException;

        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content-length= ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not equal expected Size= ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r79.<java.io.IOException: void <init>(java.lang.String)>($r27);

        throw $r79;

     label11:
        $r67 = virtualinvoke $r11.<opendap.dap.http.HTTPMethod: java.io.InputStream getResponseAsStream()>();

        $r80 = new ucar.nc2.stream.NcStreamReader;

        specialinvoke $r80.<ucar.nc2.stream.NcStreamReader: void <init>()>();

        $r69 = virtualinvoke $r80.<ucar.nc2.stream.NcStreamReader: ucar.nc2.stream.NcStreamReader$DataResult readData(java.io.InputStream,ucar.nc2.NetcdfFile)>($r67, r0);

        $z5 = <ucar.nc2.stream.CdmRemote: boolean $assertionsDisabled>;

        if $z5 != 0 goto label12;

        $r14 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $r15 = $r69.<ucar.nc2.stream.NcStreamReader$DataResult: java.lang.String varName>;

        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z2 != 0 goto label12;

        $r81 = new java.lang.AssertionError;

        specialinvoke $r81.<java.lang.AssertionError: void <init>()>();

        throw $r81;

     label12:
        $r13 = $r69.<ucar.nc2.stream.NcStreamReader$DataResult: ucar.ma2.Array data>;

        $z1 = virtualinvoke r1.<ucar.nc2.Variable: boolean isUnsigned()>();

        virtualinvoke $r13.<ucar.ma2.Array: void setUnsigned(boolean)>($z1);

        $r16 = $r69.<ucar.nc2.stream.NcStreamReader$DataResult: ucar.ma2.Array data>;

     label13:
        if $r11 == null goto label14;

        virtualinvoke $r11.<opendap.dap.http.HTTPMethod: void close()>();

     label14:
        return $r16;

     label15:
        $r64 := @caughtexception;

     label16:
        if r66 == null goto label17;

        virtualinvoke r66.<opendap.dap.http.HTTPMethod: void close()>();

     label17:
        throw $r64;

        catch java.lang.Throwable from label05 to label13 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    protected ucar.ma2.StructureDataIterator getStructureIterator(ucar.nc2.Structure, int) throws java.io.IOException
    {
        java.lang.Throwable $r7;
        java.lang.IllegalStateException $r8;
        ucar.ma2.StructureDataIterator $r6;
        ucar.nc2.Structure r1;
        ucar.nc2.stream.NcStreamReader $r5;
        ucar.nc2.stream.CdmRemote r0;
        int i0;
        java.lang.String $r2, $r3;
        java.io.InputStream $r4;

        r0 := @this: ucar.nc2.stream.CdmRemote;

        r1 := @parameter0: ucar.nc2.Structure;

        i0 := @parameter1: int;

     label1:
        $r2 = r0.<ucar.nc2.stream.CdmRemote: java.lang.String remoteURI>;

        $r3 = virtualinvoke r1.<ucar.nc2.Structure: java.lang.String getName()>();

        $r4 = staticinvoke <ucar.nc2.stream.CdmRemote: java.io.InputStream sendQuery(java.lang.String,java.lang.String)>($r2, $r3);

        $r5 = new ucar.nc2.stream.NcStreamReader;

        specialinvoke $r5.<ucar.nc2.stream.NcStreamReader: void <init>()>();

        $r6 = virtualinvoke $r5.<ucar.nc2.stream.NcStreamReader: ucar.ma2.StructureDataIterator getStructureIterator(java.io.InputStream,ucar.nc2.NetcdfFile)>($r4, r0);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.Throwable: void printStackTrace()>();

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static java.io.InputStream sendQuery(java.lang.String, java.lang.String) throws java.io.IOException
    {
        opendap.dap.http.HTTPSession r32, $r35;
        boolean $z0;
        opendap.dap.http.HTTPMethod $r5;
        java.io.FileNotFoundException $r38;
        java.lang.StringBuilder $r11, $r12, $r14, $r19, $r20, $r22, $r26, $r27, $r33, $r34, $r37, $r39;
        java.lang.Throwable $r30;
        opendap.dap.http.HTTPMethodStream $r41;
        int $i0;
        java.lang.String r1, r2, $r4, $r10, $r13, $r15, $r18, $r21, $r23, $r28;
        java.io.PrintStream $r25;
        java.io.IOException $r29, $r36, $r40;
        java.io.InputStream $r6, $r42;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r32 = null;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>(java.lang.String)>(r1);

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $z0 = <ucar.nc2.stream.CdmRemote: boolean showRequest>;

        if $z0 == 0 goto label1;

        $r25 = <java.lang.System: java.io.PrintStream out>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" CdmRemote sendQuery=");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r28);

     label1:
        $r35 = new opendap.dap.http.HTTPSession;

        specialinvoke $r35.<opendap.dap.http.HTTPSession: void <init>()>();

        r32 = $r35;

        $r4 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke $r35.<opendap.dap.http.HTTPSession: opendap.dap.http.HTTPMethod newMethodGet(java.lang.String)>($r4);

        $i0 = virtualinvoke $r5.<opendap.dap.http.HTTPMethod: int execute()>();

     label2:
        goto label4;

     label3:
        $r30 := @caughtexception;

        $r36 = new java.io.IOException;

        specialinvoke $r36.<java.io.IOException: void <init>(java.lang.Throwable)>($r30);

        throw $r36;

     label4:
        if $i0 != 404 goto label5;

        $r38 = new java.io.FileNotFoundException;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r5.<opendap.dap.http.HTTPMethod: java.lang.String getPath()>();

        $r19 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r21 = virtualinvoke $r5.<opendap.dap.http.HTTPMethod: java.lang.String getStatusLine()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r23);

        throw $r38;

     label5:
        if $i0 < 300 goto label6;

        $r40 = new java.io.IOException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r5.<opendap.dap.http.HTTPMethod: java.lang.String getPath()>();

        $r11 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = virtualinvoke $r5.<opendap.dap.http.HTTPMethod: java.lang.String getStatusLine()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<java.io.IOException: void <init>(java.lang.String)>($r15);

        throw $r40;

     label6:
        $r6 = virtualinvoke $r5.<opendap.dap.http.HTTPMethod: java.io.InputStream getResponseBodyAsStream()>();

        $r41 = new opendap.dap.http.HTTPMethodStream;

        specialinvoke $r41.<opendap.dap.http.HTTPMethodStream: void <init>(opendap.dap.http.HTTPSession,opendap.dap.http.HTTPMethod,java.io.InputStream)>($r35, $r5, $r6);

     label7:
        $r42 = (java.io.InputStream) $r41;

        return $r42;

     label8:
        $r29 := @caughtexception;

        if r32 == null goto label9;

        virtualinvoke r32.<opendap.dap.http.HTTPSession: void close()>();

     label9:
        throw $r29;

        catch opendap.dap.http.HTTPException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label7 with label8;
    }

    public java.lang.String getFileTypeId()
    {
        ucar.nc2.stream.CdmRemote r0;

        r0 := @this: ucar.nc2.stream.CdmRemote;

        return "ncstreamRemote";
    }

    public java.lang.String getFileTypeDescription()
    {
        ucar.nc2.stream.CdmRemote r0;

        r0 := @this: ucar.nc2.stream.CdmRemote;

        return "ncstreamRemote";
    }

    public void writeToFile(java.lang.String) throws java.io.IOException
    {
        byte[] $r3;
        opendap.dap.http.HTTPSession $r10, $r20;
        org.apache.commons.httpclient.Header $r23;
        java.lang.StringBuilder $r4, $r7, $r8, $r16, $r27, $r28, $r29, $r30, $r31, $r34, $r36, $r37, $r39, $r42, $r44, $r45, $r47, $r49, $r51, $r53, $r54, $r55, $r58, $r60, $r61, $r63, $r66, $r68, $r69, $r71;
        java.lang.Throwable $r75, $r76;
        java.lang.Object[] $r73;
        long $l3;
        ucar.nc2.stream.CdmRemote r5;
        java.lang.String r1, $r6, $r9, $r17, $r18, $r19, $r21, $r25, $r32, $r35, $r38, $r40, $r43, $r46, $r48, $r52, $r56, $r59, $r62, $r64, $r67, $r70, $r72;
        java.io.FileOutputStream $r2;
        java.io.IOException $r26, $r33, $r57;
        java.io.File $r0;
        boolean $z0, $z1, $z2;
        opendap.dap.http.HTTPMethod $r11, $r22, r77;
        java.io.FileNotFoundException $r41, $r65;
        java.util.List $r13;
        int $i0, $i1, $i2, i4, $i5, $i6;
        ucar.nc2.Variable r78;
        java.io.PrintStream $r50, $r74;
        java.util.Iterator $r14;
        java.lang.Object $r15;
        java.io.InputStream $r12, $r24;

        r5 := @this: ucar.nc2.stream.CdmRemote;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        $r2 = new java.io.FileOutputStream;

        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r0);

        virtualinvoke $r2.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>();

        $r3 = <ucar.nc2.stream.NcStream: byte[] MAGIC_START>;

        virtualinvoke $r2.<java.io.FileOutputStream: void write(byte[])>($r3);

        r77 = null;

     label01:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = r5.<ucar.nc2.stream.CdmRemote: java.lang.String remoteURI>;

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?req=header");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = r5.<ucar.nc2.stream.CdmRemote: opendap.dap.http.HTTPSession httpClient>;

        $r11 = virtualinvoke $r10.<opendap.dap.http.HTTPSession: opendap.dap.http.HTTPMethod newMethodGet(java.lang.String)>($r9);

        r77 = $r11;

        $z0 = <ucar.nc2.stream.CdmRemote: boolean showRequest>;

        if $z0 == 0 goto label02;

        $r74 = <java.lang.System: java.io.PrintStream out>;

        $r73 = newarray (java.lang.Object)[1];

        $r73[0] = $r9;

        virtualinvoke $r74.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("CdmRemote request %s %n", $r73);

     label02:
        $i0 = virtualinvoke $r11.<opendap.dap.http.HTTPMethod: int execute()>();

        if $i0 != 404 goto label03;

        $r65 = new java.io.FileNotFoundException;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r11.<opendap.dap.http.HTTPMethod: java.lang.String getURI()>();

        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r70 = virtualinvoke $r11.<opendap.dap.http.HTTPMethod: java.lang.String getStatusLine()>();

        $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r65.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r72);

        throw $r65;

     label03:
        if $i0 < 300 goto label04;

        $r57 = new java.io.IOException;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r11.<opendap.dap.http.HTTPMethod: java.lang.String getURI()>();

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r62 = virtualinvoke $r11.<opendap.dap.http.HTTPMethod: java.lang.String getStatusLine()>();

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r57.<java.io.IOException: void <init>(java.lang.String)>($r64);

        throw $r57;

     label04:
        $r12 = virtualinvoke $r11.<opendap.dap.http.HTTPMethod: java.io.InputStream getResponseBodyAsStream()>();

        $i1 = <ucar.nc2.util.IO: int default_socket_buffersize>;

        staticinvoke <ucar.nc2.util.IO: long copyB(java.io.InputStream,java.io.OutputStream,int)>($r12, $r2, $i1);

     label05:
        if $r11 == null goto label09;

        virtualinvoke $r11.<opendap.dap.http.HTTPMethod: void close()>();

        goto label09;

     label06:
        $r76 := @caughtexception;

     label07:
        if r77 == null goto label08;

        virtualinvoke r77.<opendap.dap.http.HTTPMethod: void close()>();

     label08:
        throw $r76;

     label09:
        $r13 = virtualinvoke r5.<ucar.nc2.stream.CdmRemote: java.util.List getVariables()>();

        $r14 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z2 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label20;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r78 = (ucar.nc2.Variable) $r15;

        $r16 = new java.lang.StringBuilder;

        $r17 = r5.<ucar.nc2.stream.CdmRemote: java.lang.String remoteURI>;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>($r17);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?var=");

        $r18 = virtualinvoke r78.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r19 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r18, "UTF-8");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $z1 = <ucar.nc2.stream.CdmRemote: boolean showRequest>;

        if $z1 == 0 goto label11;

        $r50 = <java.lang.System: java.io.PrintStream out>;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" CdmRemote data request for variable: ");

        $r52 = virtualinvoke r78.<ucar.nc2.Variable: java.lang.String getName()>();

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" url=");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r50.<java.io.PrintStream: void println(java.lang.String)>($r56);

     label11:
        $r20 = r5.<ucar.nc2.stream.CdmRemote: opendap.dap.http.HTTPSession httpClient>;

        $r21 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = virtualinvoke $r20.<opendap.dap.http.HTTPSession: opendap.dap.http.HTTPMethod newMethodGet(java.lang.String)>($r21);

        r77 = $r22;

        $i2 = virtualinvoke $r22.<opendap.dap.http.HTTPMethod: int execute()>();

        if $i2 != 404 goto label12;

        $r41 = new java.io.FileNotFoundException;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r22.<opendap.dap.http.HTTPMethod: java.lang.String getPath()>();

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r46 = virtualinvoke $r22.<opendap.dap.http.HTTPMethod: java.lang.String getStatusLine()>();

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r48);

        throw $r41;

     label12:
        if $i2 < 300 goto label13;

        $r33 = new java.io.IOException;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r22.<opendap.dap.http.HTTPMethod: java.lang.String getPath()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r38 = virtualinvoke $r22.<opendap.dap.http.HTTPMethod: java.lang.String getStatusLine()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.io.IOException: void <init>(java.lang.String)>($r40);

        throw $r33;

     label13:
        $l3 = virtualinvoke r78.<ucar.nc2.Variable: long getSize()>();

        i4 = (int) $l3;

        $r23 = virtualinvoke $r22.<opendap.dap.http.HTTPMethod: org.apache.commons.httpclient.Header getResponseHeader(java.lang.String)>("Content-Length");

        if $r23 == null goto label14;

        $r25 = virtualinvoke $r23.<org.apache.commons.httpclient.Header: java.lang.String getValue()>();

        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r25);

        if $i6 == i4 goto label14;

        $r26 = new java.io.IOException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content-length= ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not equal expected Size= ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.io.IOException: void <init>(java.lang.String)>($r32);

        throw $r26;

     label14:
        $r24 = virtualinvoke $r22.<opendap.dap.http.HTTPMethod: java.io.InputStream getResponseBodyAsStream()>();

        $i5 = <ucar.nc2.util.IO: int default_socket_buffersize>;

        staticinvoke <ucar.nc2.util.IO: long copyB(java.io.InputStream,java.io.OutputStream,int)>($r24, $r2, $i5);

     label15:
        if $r22 == null goto label19;

        virtualinvoke $r22.<opendap.dap.http.HTTPMethod: void close()>();

        goto label19;

     label16:
        $r75 := @caughtexception;

     label17:
        if r77 == null goto label18;

        virtualinvoke r77.<opendap.dap.http.HTTPMethod: void close()>();

     label18:
        throw $r75;

     label19:
        goto label10;

     label20:
        virtualinvoke $r2.<java.io.FileOutputStream: void flush()>();

        virtualinvoke $r2.<java.io.FileOutputStream: void close()>();

        return;

        catch java.lang.Throwable from label01 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label11 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    public synchronized void close() throws java.io.IOException
    {
        ucar.nc2.stream.CdmRemote r0;
        opendap.dap.http.HTTPSession $r1, $r2;

        r0 := @this: ucar.nc2.stream.CdmRemote;

        $r1 = r0.<ucar.nc2.stream.CdmRemote: opendap.dap.http.HTTPSession httpClient>;

        if $r1 == null goto label1;

        $r2 = r0.<ucar.nc2.stream.CdmRemote: opendap.dap.http.HTTPSession httpClient>;

        virtualinvoke $r2.<opendap.dap.http.HTTPSession: void close()>();

     label1:
        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r1;
        java.lang.Class $r0;
        boolean $z0, $z1;

        <ucar.nc2.stream.CdmRemote: java.lang.String SCHEME> = "cdmremote:";

        $r0 = class "Lucar/nc2/stream/CdmRemote;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <ucar.nc2.stream.CdmRemote: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/stream/CdmRemote;");

        <ucar.nc2.stream.CdmRemote: org.slf4j.Logger logger> = $r1;

        <ucar.nc2.stream.CdmRemote: boolean showRequest> = 1;

        return;
    }
}
