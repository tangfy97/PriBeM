public class org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint extends java.lang.Object implements org.aspectj.lang.ProceedingJoinPoint, org.aspectj.lang.JoinPoint$StaticPart
{
    private final org.springframework.aop.ProxyMethodInvocation methodInvocation;
    private java.lang.Object[] defensiveCopyOfArgs;
    private org.aspectj.lang.Signature signature;
    private org.aspectj.lang.reflect.SourceLocation sourceLocation;

    public void <init>(org.springframework.aop.ProxyMethodInvocation)
    {
        org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint r0;
        org.springframework.aop.ProxyMethodInvocation r1;

        r0 := @this: org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint;

        r1 := @parameter0: org.springframework.aop.ProxyMethodInvocation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "MethodInvocation must not be null");

        r0.<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: org.springframework.aop.ProxyMethodInvocation methodInvocation> = r1;

        return;
    }

    public void set$AroundClosure(org.aspectj.runtime.internal.AroundClosure)
    {
        java.lang.UnsupportedOperationException $r0;
        org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint r1;
        org.aspectj.runtime.internal.AroundClosure r2;

        r1 := @this: org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint;

        r2 := @parameter0: org.aspectj.runtime.internal.AroundClosure;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.lang.Object proceed() throws java.lang.Throwable
    {
        org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint r0;
        org.aopalliance.intercept.MethodInvocation $r2;
        java.lang.Object $r3;
        org.springframework.aop.ProxyMethodInvocation $r1;

        r0 := @this: org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint;

        $r1 = r0.<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: org.springframework.aop.ProxyMethodInvocation methodInvocation>;

        $r2 = interfaceinvoke $r1.<org.springframework.aop.ProxyMethodInvocation: org.aopalliance.intercept.MethodInvocation invocableClone()>();

        $r3 = interfaceinvoke $r2.<org.aopalliance.intercept.MethodInvocation: java.lang.Object proceed()>();

        return $r3;
    }

    public java.lang.Object proceed(java.lang.Object[]) throws java.lang.Throwable
    {
        java.lang.Object[] r0, $r3, $r11;
        org.aopalliance.intercept.MethodInvocation $r6;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r17;
        org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint r1;
        java.lang.IllegalArgumentException $r8;
        java.lang.Object $r7;
        java.lang.StringBuilder $r9, $r12, $r13, $r14, $r15, $r16;
        org.springframework.aop.ProxyMethodInvocation $r2, $r4, $r5, $r10;

        r1 := @this: org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint;

        r0 := @parameter0: java.lang.Object[];

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "Argument array passed to proceed cannot be null");

        $i0 = lengthof r0;

        $r2 = r1.<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: org.springframework.aop.ProxyMethodInvocation methodInvocation>;

        $r3 = interfaceinvoke $r2.<org.springframework.aop.ProxyMethodInvocation: java.lang.Object[] getArguments()>();

        $i1 = lengthof $r3;

        if $i0 == $i1 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expecting ");

        $r10 = r1.<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: org.springframework.aop.ProxyMethodInvocation methodInvocation>;

        $r11 = interfaceinvoke $r10.<org.springframework.aop.ProxyMethodInvocation: java.lang.Object[] getArguments()>();

        $i2 = lengthof $r11;

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" arguments to proceed, ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("but was passed ");

        $i3 = lengthof r0;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" arguments");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r8;

     label1:
        $r4 = r1.<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: org.springframework.aop.ProxyMethodInvocation methodInvocation>;

        interfaceinvoke $r4.<org.springframework.aop.ProxyMethodInvocation: void setArguments(java.lang.Object[])>(r0);

        $r5 = r1.<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: org.springframework.aop.ProxyMethodInvocation methodInvocation>;

        $r6 = interfaceinvoke $r5.<org.springframework.aop.ProxyMethodInvocation: org.aopalliance.intercept.MethodInvocation invocableClone(java.lang.Object[])>(r0);

        $r7 = interfaceinvoke $r6.<org.aopalliance.intercept.MethodInvocation: java.lang.Object proceed()>();

        return $r7;
    }

    public java.lang.Object getThis()
    {
        org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint r0;
        java.lang.Object $r2;
        org.springframework.aop.ProxyMethodInvocation $r1;

        r0 := @this: org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint;

        $r1 = r0.<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: org.springframework.aop.ProxyMethodInvocation methodInvocation>;

        $r2 = interfaceinvoke $r1.<org.springframework.aop.ProxyMethodInvocation: java.lang.Object getProxy()>();

        return $r2;
    }

    public java.lang.Object getTarget()
    {
        org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint r0;
        java.lang.Object $r2;
        org.springframework.aop.ProxyMethodInvocation $r1;

        r0 := @this: org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint;

        $r1 = r0.<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: org.springframework.aop.ProxyMethodInvocation methodInvocation>;

        $r2 = interfaceinvoke $r1.<org.springframework.aop.ProxyMethodInvocation: java.lang.Object getThis()>();

        return $r2;
    }

    public java.lang.Object[] getArgs()
    {
        org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint r0;
        java.lang.Object[] $r1, $r2, $r4, $r5, $r6;
        int $i0, $i1;
        org.springframework.aop.ProxyMethodInvocation $r3;

        r0 := @this: org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint;

        $r1 = r0.<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: java.lang.Object[] defensiveCopyOfArgs>;

        if $r1 != null goto label1;

        $r3 = r0.<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: org.springframework.aop.ProxyMethodInvocation methodInvocation>;

        $r4 = interfaceinvoke $r3.<org.springframework.aop.ProxyMethodInvocation: java.lang.Object[] getArguments()>();

        $i0 = lengthof $r4;

        $r5 = newarray (java.lang.Object)[$i0];

        r0.<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: java.lang.Object[] defensiveCopyOfArgs> = $r5;

        $r6 = r0.<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: java.lang.Object[] defensiveCopyOfArgs>;

        $i1 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r6, 0, $i1);

     label1:
        $r2 = r0.<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: java.lang.Object[] defensiveCopyOfArgs>;

        return $r2;
    }

    public org.aspectj.lang.Signature getSignature()
    {
        org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint r0;
        org.aspectj.lang.Signature $r1, $r2, $r5;
        org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint$MethodSignatureImpl $r4;

        r0 := @this: org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint;

        $r1 = r0.<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: org.aspectj.lang.Signature signature>;

        if $r1 != null goto label1;

        $r4 = new org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint$MethodSignatureImpl;

        specialinvoke $r4.<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint$MethodSignatureImpl: void <init>(org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint,org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint$MethodSignatureImpl)>(r0, null);

        $r5 = (org.aspectj.lang.Signature) $r4;

        r0.<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: org.aspectj.lang.Signature signature> = $r5;

     label1:
        $r2 = r0.<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: org.aspectj.lang.Signature signature>;

        return $r2;
    }

    public org.aspectj.lang.reflect.SourceLocation getSourceLocation()
    {
        org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint r0;
        org.aspectj.lang.reflect.SourceLocation $r1, $r2;
        org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint$SourceLocationImpl $r3;

        r0 := @this: org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint;

        $r1 = r0.<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: org.aspectj.lang.reflect.SourceLocation sourceLocation>;

        if $r1 != null goto label1;

        $r3 = new org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint$SourceLocationImpl;

        specialinvoke $r3.<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint$SourceLocationImpl: void <init>(org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint,org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint$SourceLocationImpl)>(r0, null);

        r0.<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: org.aspectj.lang.reflect.SourceLocation sourceLocation> = $r3;

     label1:
        $r2 = r0.<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: org.aspectj.lang.reflect.SourceLocation sourceLocation>;

        return $r2;
    }

    public java.lang.String getKind()
    {
        org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint r0;

        r0 := @this: org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint;

        return "method-execution";
    }

    public int getId()
    {
        org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint r0;

        r0 := @this: org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint;

        return 0;
    }

    public org.aspectj.lang.JoinPoint$StaticPart getStaticPart()
    {
        org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint r0;

        r0 := @this: org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint;

        return r0;
    }

    public java.lang.String toShortString()
    {
        org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint r1;
        org.aspectj.lang.Signature $r2;
        java.lang.StringBuilder $r0, $r4, $r5;
        java.lang.String $r3, $r6;

        r1 := @this: org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("execution(");

        $r2 = virtualinvoke r1.<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: org.aspectj.lang.Signature getSignature()>();

        $r3 = interfaceinvoke $r2.<org.aspectj.lang.Signature: java.lang.String toShortString()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public java.lang.String toLongString()
    {
        org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint r1;
        org.aspectj.lang.Signature $r2;
        java.lang.StringBuilder $r0, $r4, $r5;
        java.lang.String $r3, $r6;

        r1 := @this: org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("execution(");

        $r2 = virtualinvoke r1.<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: org.aspectj.lang.Signature getSignature()>();

        $r3 = interfaceinvoke $r2.<org.aspectj.lang.Signature: java.lang.String toLongString()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public java.lang.String toString()
    {
        org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint r1;
        org.aspectj.lang.Signature $r2;
        java.lang.StringBuilder $r0, $r4, $r5;
        java.lang.String $r3, $r6;

        r1 := @this: org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("execution(");

        $r2 = virtualinvoke r1.<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: org.aspectj.lang.Signature getSignature()>();

        $r3 = interfaceinvoke $r2.<org.aspectj.lang.Signature: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    static org.springframework.aop.ProxyMethodInvocation access$0(org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint)
    {
        org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint r0;
        org.springframework.aop.ProxyMethodInvocation $r1;

        r0 := @parameter0: org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint;

        $r1 = r0.<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: org.springframework.aop.ProxyMethodInvocation methodInvocation>;

        return $r1;
    }
}
