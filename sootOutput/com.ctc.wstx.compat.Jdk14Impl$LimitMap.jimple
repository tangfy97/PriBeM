final class com.ctc.wstx.compat.Jdk14Impl$LimitMap extends java.util.LinkedHashMap
{
    final int mMaxSize;

    public void <init>(int, int, float)
    {
        int i0, i1, $i2;
        float f0;
        com.ctc.wstx.compat.Jdk14Impl$LimitMap r0;

        r0 := @this: com.ctc.wstx.compat.Jdk14Impl$LimitMap;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        specialinvoke r0.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(i0, f0, 1);

        if i1 >= 4 goto label1;

        $i2 = 4;

        goto label2;

     label1:
        $i2 = i1;

     label2:
        r0.<com.ctc.wstx.compat.Jdk14Impl$LimitMap: int mMaxSize> = $i2;

        return;
    }

    public boolean removeEldestEntry(java.util.Map$Entry)
    {
        java.util.Map$Entry r1;
        int $i0, $i1;
        com.ctc.wstx.compat.Jdk14Impl$LimitMap r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.compat.Jdk14Impl$LimitMap;

        r1 := @parameter0: java.util.Map$Entry;

        $i0 = virtualinvoke r0.<com.ctc.wstx.compat.Jdk14Impl$LimitMap: int size()>();

        $i1 = r0.<com.ctc.wstx.compat.Jdk14Impl$LimitMap: int mMaxSize>;

        if $i0 < $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }
}
