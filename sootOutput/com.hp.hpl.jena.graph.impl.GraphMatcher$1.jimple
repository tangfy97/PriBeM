class com.hp.hpl.jena.graph.impl.GraphMatcher$1 extends com.hp.hpl.jena.util.iterator.Filter
{
    final com.hp.hpl.jena.graph.impl.GraphMatcher this$0;

    void <init>(com.hp.hpl.jena.graph.impl.GraphMatcher)
    {
        com.hp.hpl.jena.graph.impl.GraphMatcher r1;
        com.hp.hpl.jena.graph.impl.GraphMatcher$1 r0;

        r0 := @this: com.hp.hpl.jena.graph.impl.GraphMatcher$1;

        r1 := @parameter0: com.hp.hpl.jena.graph.impl.GraphMatcher;

        r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$1: com.hp.hpl.jena.graph.impl.GraphMatcher this$0> = r1;

        specialinvoke r0.<com.hp.hpl.jena.util.iterator.Filter: void <init>()>();

        return;
    }

    public boolean accept(com.hp.hpl.jena.graph.impl.GraphMatcher$Bucket)
    {
        java.util.Iterator $r3;
        java.util.Set $r6;
        com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource $r5;
        com.hp.hpl.jena.graph.impl.GraphMatcher$Bucket r0;
        com.hp.hpl.jena.graph.impl.GraphMatcher $r2, $r7;
        int $i0;
        com.hp.hpl.jena.graph.impl.GraphMatcher$1 r1;
        java.lang.Object $r4;
        boolean $z0, $z1, $z2;

        r1 := @this: com.hp.hpl.jena.graph.impl.GraphMatcher$1;

        r0 := @parameter0: com.hp.hpl.jena.graph.impl.GraphMatcher$Bucket;

        $i0 = virtualinvoke r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$Bucket: int size()>();

        if $i0 != 1 goto label1;

        return 1;

     label1:
        $r2 = r1.<com.hp.hpl.jena.graph.impl.GraphMatcher$1: com.hp.hpl.jena.graph.impl.GraphMatcher this$0>;

        $z0 = staticinvoke <com.hp.hpl.jena.graph.impl.GraphMatcher: boolean access$000(com.hp.hpl.jena.graph.impl.GraphMatcher)>($r2);

        if $z0 != 0 goto label3;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$Bucket: java.util.Iterator members()>();

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource) $r4;

        $r6 = $r5.<com.hp.hpl.jena.graph.impl.GraphMatcher$AnonResource: java.util.Set friends>;

        $z2 = interfaceinvoke $r6.<java.util.Set: boolean isEmpty()>();

        if $z2 != 0 goto label2;

        $r7 = r1.<com.hp.hpl.jena.graph.impl.GraphMatcher$1: com.hp.hpl.jena.graph.impl.GraphMatcher this$0>;

        staticinvoke <com.hp.hpl.jena.graph.impl.GraphMatcher: boolean access$002(com.hp.hpl.jena.graph.impl.GraphMatcher,boolean)>($r7, 1);

        goto label3;

     label3:
        return 0;
    }

    public volatile boolean accept(java.lang.Object)
    {
        com.hp.hpl.jena.graph.impl.GraphMatcher$1 r0;
        java.lang.Object r1;
        com.hp.hpl.jena.graph.impl.GraphMatcher$Bucket $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.impl.GraphMatcher$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.hp.hpl.jena.graph.impl.GraphMatcher$Bucket) r1;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.graph.impl.GraphMatcher$1: boolean accept(com.hp.hpl.jena.graph.impl.GraphMatcher$Bucket)>($r2);

        return $z0;
    }
}
