public class org.apache.tika.parser.html.DefaultHtmlMapper extends java.lang.Object implements org.apache.tika.parser.html.HtmlMapper
{
    private static final java.util.Map SAFE_ELEMENTS;
    private static final java.util.Set DISCARDABLE_ELEMENTS;
    private static final java.util.Map SAFE_ATTRIBUTES;
    public static final org.apache.tika.parser.html.HtmlMapper INSTANCE;

    public void <init>()
    {
        org.apache.tika.parser.html.DefaultHtmlMapper r0;

        r0 := @this: org.apache.tika.parser.html.DefaultHtmlMapper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static transient java.util.Set attrSet(java.lang.String[])
    {
        java.util.HashSet $r0;
        int i0, i1;
        java.lang.String[] r1;
        java.lang.String r2;

        r1 := @parameter0: java.lang.String[];

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r1[i1];

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>(r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public java.lang.String mapSafeElement(java.lang.String)
    {
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.String r0, $r3;
        org.apache.tika.parser.html.DefaultHtmlMapper r4;

        r4 := @this: org.apache.tika.parser.html.DefaultHtmlMapper;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.tika.parser.html.DefaultHtmlMapper: java.util.Map SAFE_ELEMENTS>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public java.lang.String mapSafeAttribute(java.lang.String, java.lang.String)
    {
        java.util.Map $r1;
        java.util.Set r3;
        java.lang.Object $r2;
        java.lang.String r0, r4;
        org.apache.tika.parser.html.DefaultHtmlMapper r5;
        boolean $z0;

        r5 := @this: org.apache.tika.parser.html.DefaultHtmlMapper;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r1 = <org.apache.tika.parser.html.DefaultHtmlMapper: java.util.Map SAFE_ATTRIBUTES>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (java.util.Set) $r2;

        if r3 == null goto label1;

        $z0 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>(r4);

        if $z0 == 0 goto label1;

        return r4;

     label1:
        return null;
    }

    public boolean isDiscardElement(java.lang.String)
    {
        java.util.Set $r1;
        java.lang.String r0;
        org.apache.tika.parser.html.DefaultHtmlMapper r2;
        boolean $z0;

        r2 := @this: org.apache.tika.parser.html.DefaultHtmlMapper;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.tika.parser.html.DefaultHtmlMapper: java.util.Set DISCARDABLE_ELEMENTS>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>(r0);

        return $z0;
    }

    static java.util.Set access$000(java.lang.String[])
    {
        java.util.Set $r1;
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        $r1 = staticinvoke <org.apache.tika.parser.html.DefaultHtmlMapper: java.util.Set attrSet(java.lang.String[])>(r0);

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.tika.parser.html.DefaultHtmlMapper$2 $r1;
        org.apache.tika.parser.html.DefaultHtmlMapper$3 $r2;
        org.apache.tika.parser.html.DefaultHtmlMapper$1 $r0;
        org.apache.tika.parser.html.DefaultHtmlMapper $r3;

        $r0 = new org.apache.tika.parser.html.DefaultHtmlMapper$1;

        specialinvoke $r0.<org.apache.tika.parser.html.DefaultHtmlMapper$1: void <init>()>();

        <org.apache.tika.parser.html.DefaultHtmlMapper: java.util.Map SAFE_ELEMENTS> = $r0;

        $r1 = new org.apache.tika.parser.html.DefaultHtmlMapper$2;

        specialinvoke $r1.<org.apache.tika.parser.html.DefaultHtmlMapper$2: void <init>()>();

        <org.apache.tika.parser.html.DefaultHtmlMapper: java.util.Set DISCARDABLE_ELEMENTS> = $r1;

        $r2 = new org.apache.tika.parser.html.DefaultHtmlMapper$3;

        specialinvoke $r2.<org.apache.tika.parser.html.DefaultHtmlMapper$3: void <init>()>();

        <org.apache.tika.parser.html.DefaultHtmlMapper: java.util.Map SAFE_ATTRIBUTES> = $r2;

        $r3 = new org.apache.tika.parser.html.DefaultHtmlMapper;

        specialinvoke $r3.<org.apache.tika.parser.html.DefaultHtmlMapper: void <init>()>();

        <org.apache.tika.parser.html.DefaultHtmlMapper: org.apache.tika.parser.html.HtmlMapper INSTANCE> = $r3;

        return;
    }
}
