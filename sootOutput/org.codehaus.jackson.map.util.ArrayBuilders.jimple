public final class org.codehaus.jackson.map.util.ArrayBuilders extends java.lang.Object
{
    org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder _booleanBuilder;
    org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder _byteBuilder;
    org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder _shortBuilder;
    org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder _intBuilder;
    org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder _longBuilder;
    org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder _floatBuilder;
    org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder _doubleBuilder;

    public void <init>()
    {
        org.codehaus.jackson.map.util.ArrayBuilders r0;

        r0 := @this: org.codehaus.jackson.map.util.ArrayBuilders;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder _booleanBuilder> = null;

        r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder _byteBuilder> = null;

        r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder _shortBuilder> = null;

        r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder _intBuilder> = null;

        r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder _longBuilder> = null;

        r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder _floatBuilder> = null;

        r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder _doubleBuilder> = null;

        return;
    }

    public org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder getBooleanBuilder()
    {
        org.codehaus.jackson.map.util.ArrayBuilders r0;
        org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder $r1, $r2, $r3;

        r0 := @this: org.codehaus.jackson.map.util.ArrayBuilders;

        $r1 = r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder _booleanBuilder>;

        if $r1 != null goto label1;

        $r3 = new org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder;

        specialinvoke $r3.<org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder: void <init>()>();

        r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder _booleanBuilder> = $r3;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder _booleanBuilder>;

        return $r2;
    }

    public org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder getByteBuilder()
    {
        org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder $r1, $r2, $r3;
        org.codehaus.jackson.map.util.ArrayBuilders r0;

        r0 := @this: org.codehaus.jackson.map.util.ArrayBuilders;

        $r1 = r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder _byteBuilder>;

        if $r1 != null goto label1;

        $r3 = new org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder;

        specialinvoke $r3.<org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder: void <init>()>();

        r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder _byteBuilder> = $r3;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder _byteBuilder>;

        return $r2;
    }

    public org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder getShortBuilder()
    {
        org.codehaus.jackson.map.util.ArrayBuilders r0;
        org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder $r1, $r2, $r3;

        r0 := @this: org.codehaus.jackson.map.util.ArrayBuilders;

        $r1 = r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder _shortBuilder>;

        if $r1 != null goto label1;

        $r3 = new org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder;

        specialinvoke $r3.<org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder: void <init>()>();

        r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder _shortBuilder> = $r3;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder _shortBuilder>;

        return $r2;
    }

    public org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder getIntBuilder()
    {
        org.codehaus.jackson.map.util.ArrayBuilders r0;
        org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder $r1, $r2, $r3;

        r0 := @this: org.codehaus.jackson.map.util.ArrayBuilders;

        $r1 = r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder _intBuilder>;

        if $r1 != null goto label1;

        $r3 = new org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder;

        specialinvoke $r3.<org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder: void <init>()>();

        r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder _intBuilder> = $r3;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder _intBuilder>;

        return $r2;
    }

    public org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder getLongBuilder()
    {
        org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder $r1, $r2, $r3;
        org.codehaus.jackson.map.util.ArrayBuilders r0;

        r0 := @this: org.codehaus.jackson.map.util.ArrayBuilders;

        $r1 = r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder _longBuilder>;

        if $r1 != null goto label1;

        $r3 = new org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder;

        specialinvoke $r3.<org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder: void <init>()>();

        r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder _longBuilder> = $r3;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder _longBuilder>;

        return $r2;
    }

    public org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder getFloatBuilder()
    {
        org.codehaus.jackson.map.util.ArrayBuilders r0;
        org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder $r1, $r2, $r3;

        r0 := @this: org.codehaus.jackson.map.util.ArrayBuilders;

        $r1 = r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder _floatBuilder>;

        if $r1 != null goto label1;

        $r3 = new org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder;

        specialinvoke $r3.<org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder: void <init>()>();

        r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder _floatBuilder> = $r3;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder _floatBuilder>;

        return $r2;
    }

    public org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder getDoubleBuilder()
    {
        org.codehaus.jackson.map.util.ArrayBuilders r0;
        org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder $r1, $r2, $r3;

        r0 := @this: org.codehaus.jackson.map.util.ArrayBuilders;

        $r1 = r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder _doubleBuilder>;

        if $r1 != null goto label1;

        $r3 = new org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder;

        specialinvoke $r3.<org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder: void <init>()>();

        r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder _doubleBuilder> = $r3;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder _doubleBuilder>;

        return $r2;
    }

    public static java.util.HashSet arrayToSet(java.lang.Object[])
    {
        java.util.HashSet $r0;
        java.lang.Object[] r1;
        int i0, i1;
        java.lang.Object r2;

        r1 := @parameter0: java.lang.Object[];

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        if r1 == null goto label2;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r1[i1];

        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>(r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public static java.util.List addToList(java.util.List, java.lang.Object)
    {
        java.lang.Object r0;
        java.util.List r2;
        java.util.ArrayList $r1;

        r2 := @parameter0: java.util.List;

        r0 := @parameter1: java.lang.Object;

        if r2 != null goto label1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r2 = $r1;

     label1:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r0);

        return r2;
    }

    public static java.lang.Object[] insertInList(java.lang.Object[], java.lang.Object)
    {
        java.lang.Object[] r0, $r4, r5;
        int i0, $i1;
        java.lang.Class $r1, $r2;
        java.lang.Object $r3, r6;

        r0 := @parameter0: java.lang.Object[];

        r6 := @parameter1: java.lang.Object;

        i0 = lengthof r0;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getComponentType()>();

        $i1 = i0 + 1;

        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r2, $i1);

        $r4 = (java.lang.Object[]) $r3;

        r5 = (java.lang.Object[]) $r4;

        if i0 <= 0 goto label1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r5, 1, i0);

     label1:
        r5[0] = r6;

        return r5;
    }

    public static java.lang.Object[] insertInListNoDup(java.lang.Object[], java.lang.Object)
    {
        java.lang.Object[] r0, $r4, $r10, r11, r12;
        int i0, $i1, i2;
        java.lang.Class $r1, $r2, $r7, $r8;
        java.lang.Object $r3, r5, $r6, $r9;

        r0 := @parameter0: java.lang.Object[];

        r5 := @parameter1: java.lang.Object;

        i0 = lengthof r0;

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        $r6 = r0[i2];

        if $r6 != r5 goto label3;

        if i2 != 0 goto label2;

        return r0;

     label2:
        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.Class getComponentType()>();

        $r9 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r8, i0);

        $r10 = (java.lang.Object[]) $r9;

        r11 = (java.lang.Object[]) $r10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r11, 1, i2);

        r0[0] = r5;

        return r11;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getComponentType()>();

        $i1 = i0 + 1;

        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r2, $i1);

        $r4 = (java.lang.Object[]) $r3;

        r12 = (java.lang.Object[]) $r4;

        if i0 <= 0 goto label5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r12, 1, i0);

     label5:
        r12[0] = r5;

        return r12;
    }

    public static java.util.Iterator arrayAsIterator(java.lang.Object[])
    {
        org.codehaus.jackson.map.util.ArrayBuilders$ArrayIterator $r0;
        java.lang.Object[] r1;

        r1 := @parameter0: java.lang.Object[];

        $r0 = new org.codehaus.jackson.map.util.ArrayBuilders$ArrayIterator;

        specialinvoke $r0.<org.codehaus.jackson.map.util.ArrayBuilders$ArrayIterator: void <init>(java.lang.Object[])>(r1);

        return $r0;
    }

    public static java.lang.Iterable arrayAsIterable(java.lang.Object[])
    {
        org.codehaus.jackson.map.util.ArrayBuilders$ArrayIterator $r0;
        java.lang.Object[] r1;

        r1 := @parameter0: java.lang.Object[];

        $r0 = new org.codehaus.jackson.map.util.ArrayBuilders$ArrayIterator;

        specialinvoke $r0.<org.codehaus.jackson.map.util.ArrayBuilders$ArrayIterator: void <init>(java.lang.Object[])>(r1);

        return $r0;
    }
}
