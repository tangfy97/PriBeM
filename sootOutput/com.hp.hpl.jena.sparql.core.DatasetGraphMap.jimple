public class com.hp.hpl.jena.sparql.core.DatasetGraphMap extends com.hp.hpl.jena.sparql.core.DatasetGraphCollection
{
    private java.util.Map graphs;
    private com.hp.hpl.jena.graph.Graph defaultGraph;

    public void <init>(com.hp.hpl.jena.graph.Graph)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphMap r0;
        java.util.HashMap $r1;
        com.hp.hpl.jena.graph.Graph r2;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphMap;

        r2 := @parameter0: com.hp.hpl.jena.graph.Graph;

        specialinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphCollection: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.core.DatasetGraphMap: java.util.Map graphs> = $r1;

        r0.<com.hp.hpl.jena.sparql.core.DatasetGraphMap: com.hp.hpl.jena.graph.Graph defaultGraph> = r2;

        return;
    }

    public void <init>(com.hp.hpl.jena.sparql.core.DatasetGraph)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphMap r0;
        java.util.Iterator $r3;
        com.hp.hpl.jena.graph.Node r5;
        com.hp.hpl.jena.sparql.core.DatasetGraph r1;
        java.lang.Object $r4;
        com.hp.hpl.jena.graph.Graph $r2, $r6;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphMap;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.DatasetGraph;

        $r2 = interfaceinvoke r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: com.hp.hpl.jena.graph.Graph getDefaultGraph()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphMap: void <init>(com.hp.hpl.jena.graph.Graph)>($r2);

        $r3 = interfaceinvoke r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: java.util.Iterator listGraphNodes()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.hp.hpl.jena.graph.Node) $r4;

        $r6 = interfaceinvoke r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: com.hp.hpl.jena.graph.Graph getGraph(com.hp.hpl.jena.graph.Node)>(r5);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphMap: void addGraph(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Graph)>(r5, $r6);

        goto label1;

     label2:
        return;
    }

    public boolean containsGraph(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphMap r0;
        java.util.Map $r2;
        com.hp.hpl.jena.graph.Node r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphMap;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphMap: java.util.Map graphs>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public com.hp.hpl.jena.graph.Graph getDefaultGraph()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphMap r0;
        com.hp.hpl.jena.graph.Graph $r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphMap;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphMap: com.hp.hpl.jena.graph.Graph defaultGraph>;

        return $r1;
    }

    public com.hp.hpl.jena.graph.Graph getGraph(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphMap r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.graph.Graph $r4, r5;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphMap;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphMap: java.util.Map graphs>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (com.hp.hpl.jena.graph.Graph) $r3;

        if r5 != null goto label1;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphMap: com.hp.hpl.jena.graph.Graph getGraphCreate()>();

        r5 = $r4;

        if $r4 == null goto label1;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphMap: void addGraph(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Graph)>(r1, $r4);

     label1:
        return r5;
    }

    protected com.hp.hpl.jena.graph.Graph getGraphCreate()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphMap r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphMap;

        return null;
    }

    public void addGraph(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Graph)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphMap r0;
        java.util.Map $r3;
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.graph.Graph r2;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphMap;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.graph.Graph;

        $r3 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphMap: java.util.Map graphs>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void removeGraph(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphMap r0;
        com.hp.hpl.jena.graph.Node r1;
        java.util.Map $r2;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphMap;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphMap: java.util.Map graphs>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public void setDefaultGraph(com.hp.hpl.jena.graph.Graph)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphMap r0;
        com.hp.hpl.jena.graph.Graph r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphMap;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r0.<com.hp.hpl.jena.sparql.core.DatasetGraphMap: com.hp.hpl.jena.graph.Graph defaultGraph> = r1;

        return;
    }

    public java.util.Iterator listGraphNodes()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphMap r0;
        java.util.Iterator $r3;
        java.util.Map $r1;
        java.util.Set $r2;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphMap;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphMap: java.util.Map graphs>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        return $r3;
    }

    public long size()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphMap r0;
        java.util.Map $r1;
        int $i0;
        long $l1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphMap;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphMap: java.util.Map graphs>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        $l1 = (long) $i0;

        return $l1;
    }

    public void close()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphMap r0;
        java.util.Iterator $r4;
        java.util.Collection $r3;
        java.util.Map $r2;
        java.lang.Object $r5;
        com.hp.hpl.jena.graph.Graph $r1, r6;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphMap;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphMap: com.hp.hpl.jena.graph.Graph defaultGraph>;

        interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: void close()>();

        $r2 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphMap: java.util.Map graphs>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.hp.hpl.jena.graph.Graph) $r5;

        interfaceinvoke r6.<com.hp.hpl.jena.graph.Graph: void close()>();

        goto label1;

     label2:
        specialinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphCollection: void close()>();

        return;
    }
}
