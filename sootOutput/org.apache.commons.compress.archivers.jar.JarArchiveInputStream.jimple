public class org.apache.commons.compress.archivers.jar.JarArchiveInputStream extends org.apache.commons.compress.archivers.zip.ZipArchiveInputStream
{

    public void <init>(java.io.InputStream)
    {
        org.apache.commons.compress.archivers.jar.JarArchiveInputStream r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.commons.compress.archivers.jar.JarArchiveInputStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream: void <init>(java.io.InputStream)>(r1);

        return;
    }

    public org.apache.commons.compress.archivers.jar.JarArchiveEntry getNextJarEntry() throws java.io.IOException
    {
        org.apache.commons.compress.archivers.zip.ZipArchiveEntry $r1;
        org.apache.commons.compress.archivers.jar.JarArchiveEntry $r2;
        org.apache.commons.compress.archivers.jar.JarArchiveInputStream r0;

        r0 := @this: org.apache.commons.compress.archivers.jar.JarArchiveInputStream;

        $r1 = virtualinvoke r0.<org.apache.commons.compress.archivers.jar.JarArchiveInputStream: org.apache.commons.compress.archivers.zip.ZipArchiveEntry getNextZipEntry()>();

        if $r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = new org.apache.commons.compress.archivers.jar.JarArchiveEntry;

        specialinvoke $r2.<org.apache.commons.compress.archivers.jar.JarArchiveEntry: void <init>(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)>($r1);

     label2:
        return $r2;
    }

    public org.apache.commons.compress.archivers.ArchiveEntry getNextEntry() throws java.io.IOException
    {
        org.apache.commons.compress.archivers.jar.JarArchiveEntry $r1;
        org.apache.commons.compress.archivers.jar.JarArchiveInputStream r0;

        r0 := @this: org.apache.commons.compress.archivers.jar.JarArchiveInputStream;

        $r1 = virtualinvoke r0.<org.apache.commons.compress.archivers.jar.JarArchiveInputStream: org.apache.commons.compress.archivers.jar.JarArchiveEntry getNextJarEntry()>();

        return $r1;
    }

    public static boolean matches(byte[], int)
    {
        int i0;
        byte[] r0;
        boolean $z0;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $z0 = staticinvoke <org.apache.commons.compress.archivers.zip.ZipArchiveInputStream: boolean matches(byte[],int)>(r0, i0);

        return $z0;
    }
}
