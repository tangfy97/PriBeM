public class org.apache.batik.bridge.BaseScriptingEnvironment$Window extends java.lang.Object implements org.apache.batik.script.Window
{
    protected org.apache.batik.script.Interpreter interpreter;
    protected java.lang.String language;
    private final org.apache.batik.bridge.BaseScriptingEnvironment this$0;

    public void <init>(org.apache.batik.bridge.BaseScriptingEnvironment, org.apache.batik.script.Interpreter, java.lang.String)
    {
        org.apache.batik.bridge.BaseScriptingEnvironment r1;
        org.apache.batik.script.Interpreter r2;
        org.apache.batik.bridge.BaseScriptingEnvironment$Window r0;
        java.lang.String r3;

        r0 := @this: org.apache.batik.bridge.BaseScriptingEnvironment$Window;

        r1 := @parameter0: org.apache.batik.bridge.BaseScriptingEnvironment;

        r2 := @parameter1: org.apache.batik.script.Interpreter;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.bridge.BaseScriptingEnvironment$Window: org.apache.batik.bridge.BaseScriptingEnvironment this$0> = r1;

        r0.<org.apache.batik.bridge.BaseScriptingEnvironment$Window: org.apache.batik.script.Interpreter interpreter> = r2;

        r0.<org.apache.batik.bridge.BaseScriptingEnvironment$Window: java.lang.String language> = r3;

        return;
    }

    public java.lang.Object setInterval(java.lang.String, long)
    {
        org.apache.batik.bridge.BaseScriptingEnvironment$Window r0;
        long l0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.bridge.BaseScriptingEnvironment$Window;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        return null;
    }

    public java.lang.Object setInterval(java.lang.Runnable, long)
    {
        org.apache.batik.bridge.BaseScriptingEnvironment$Window r0;
        long l0;
        java.lang.Runnable r1;

        r0 := @this: org.apache.batik.bridge.BaseScriptingEnvironment$Window;

        r1 := @parameter0: java.lang.Runnable;

        l0 := @parameter1: long;

        return null;
    }

    public void clearInterval(java.lang.Object)
    {
        org.apache.batik.bridge.BaseScriptingEnvironment$Window r0;
        java.lang.Object r1;

        r0 := @this: org.apache.batik.bridge.BaseScriptingEnvironment$Window;

        r1 := @parameter0: java.lang.Object;

        return;
    }

    public java.lang.Object setTimeout(java.lang.String, long)
    {
        org.apache.batik.bridge.BaseScriptingEnvironment$Window r0;
        long l0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.bridge.BaseScriptingEnvironment$Window;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        return null;
    }

    public java.lang.Object setTimeout(java.lang.Runnable, long)
    {
        org.apache.batik.bridge.BaseScriptingEnvironment$Window r0;
        long l0;
        java.lang.Runnable r1;

        r0 := @this: org.apache.batik.bridge.BaseScriptingEnvironment$Window;

        r1 := @parameter0: java.lang.Runnable;

        l0 := @parameter1: long;

        return null;
    }

    public void clearTimeout(java.lang.Object)
    {
        org.apache.batik.bridge.BaseScriptingEnvironment$Window r0;
        java.lang.Object r1;

        r0 := @this: org.apache.batik.bridge.BaseScriptingEnvironment$Window;

        r1 := @parameter0: java.lang.Object;

        return;
    }

    public org.w3c.dom.Node parseXML(java.lang.String, org.w3c.dom.Document)
    {
        org.apache.batik.bridge.BaseScriptingEnvironment$Window r0;
        java.lang.String r1;
        org.w3c.dom.Document r2;

        r0 := @this: org.apache.batik.bridge.BaseScriptingEnvironment$Window;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.w3c.dom.Document;

        return null;
    }

    public void getURL(java.lang.String, org.apache.batik.script.Window$URLResponseHandler)
    {
        org.apache.batik.bridge.BaseScriptingEnvironment$Window r0;
        org.apache.batik.script.Window$URLResponseHandler r2;
        java.lang.String r1;

        r0 := @this: org.apache.batik.bridge.BaseScriptingEnvironment$Window;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.batik.script.Window$URLResponseHandler;

        virtualinvoke r0.<org.apache.batik.bridge.BaseScriptingEnvironment$Window: void getURL(java.lang.String,org.apache.batik.script.Window$URLResponseHandler,java.lang.String)>(r1, r2, "UTF8");

        return;
    }

    public void getURL(java.lang.String, org.apache.batik.script.Window$URLResponseHandler, java.lang.String)
    {
        org.apache.batik.bridge.BaseScriptingEnvironment$Window r0;
        org.apache.batik.script.Window$URLResponseHandler r2;
        java.lang.String r1, r3;

        r0 := @this: org.apache.batik.bridge.BaseScriptingEnvironment$Window;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.batik.script.Window$URLResponseHandler;

        r3 := @parameter2: java.lang.String;

        return;
    }

    public void postURL(java.lang.String, java.lang.String, org.apache.batik.script.Window$URLResponseHandler)
    {
        org.apache.batik.bridge.BaseScriptingEnvironment$Window r0;
        org.apache.batik.script.Window$URLResponseHandler r3;
        java.lang.String r1, r2;

        r0 := @this: org.apache.batik.bridge.BaseScriptingEnvironment$Window;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.batik.script.Window$URLResponseHandler;

        virtualinvoke r0.<org.apache.batik.bridge.BaseScriptingEnvironment$Window: void postURL(java.lang.String,java.lang.String,org.apache.batik.script.Window$URLResponseHandler,java.lang.String,java.lang.String)>(r1, r2, r3, "text/plain", null);

        return;
    }

    public void postURL(java.lang.String, java.lang.String, org.apache.batik.script.Window$URLResponseHandler, java.lang.String)
    {
        org.apache.batik.bridge.BaseScriptingEnvironment$Window r0;
        org.apache.batik.script.Window$URLResponseHandler r3;
        java.lang.String r1, r2, r4;

        r0 := @this: org.apache.batik.bridge.BaseScriptingEnvironment$Window;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.batik.script.Window$URLResponseHandler;

        r4 := @parameter3: java.lang.String;

        virtualinvoke r0.<org.apache.batik.bridge.BaseScriptingEnvironment$Window: void postURL(java.lang.String,java.lang.String,org.apache.batik.script.Window$URLResponseHandler,java.lang.String,java.lang.String)>(r1, r2, r3, r4, null);

        return;
    }

    public void postURL(java.lang.String, java.lang.String, org.apache.batik.script.Window$URLResponseHandler, java.lang.String, java.lang.String)
    {
        org.apache.batik.bridge.BaseScriptingEnvironment$Window r0;
        org.apache.batik.script.Window$URLResponseHandler r3;
        java.lang.String r1, r2, r4, r5;

        r0 := @this: org.apache.batik.bridge.BaseScriptingEnvironment$Window;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.batik.script.Window$URLResponseHandler;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        return;
    }

    public void alert(java.lang.String)
    {
        org.apache.batik.bridge.BaseScriptingEnvironment$Window r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.bridge.BaseScriptingEnvironment$Window;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public boolean confirm(java.lang.String)
    {
        org.apache.batik.bridge.BaseScriptingEnvironment$Window r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.bridge.BaseScriptingEnvironment$Window;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public java.lang.String prompt(java.lang.String)
    {
        org.apache.batik.bridge.BaseScriptingEnvironment$Window r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.bridge.BaseScriptingEnvironment$Window;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public java.lang.String prompt(java.lang.String, java.lang.String)
    {
        org.apache.batik.bridge.BaseScriptingEnvironment$Window r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.batik.bridge.BaseScriptingEnvironment$Window;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return null;
    }

    public org.apache.batik.bridge.BridgeContext getBridgeContext()
    {
        org.apache.batik.bridge.BaseScriptingEnvironment$Window r0;
        org.apache.batik.bridge.BridgeContext $r2;
        org.apache.batik.bridge.BaseScriptingEnvironment $r1;

        r0 := @this: org.apache.batik.bridge.BaseScriptingEnvironment$Window;

        $r1 = r0.<org.apache.batik.bridge.BaseScriptingEnvironment$Window: org.apache.batik.bridge.BaseScriptingEnvironment this$0>;

        $r2 = $r1.<org.apache.batik.bridge.BaseScriptingEnvironment: org.apache.batik.bridge.BridgeContext bridgeContext>;

        return $r2;
    }

    public org.apache.batik.script.Interpreter getInterpreter()
    {
        org.apache.batik.bridge.BaseScriptingEnvironment$Window r0;
        org.apache.batik.script.Interpreter $r1;

        r0 := @this: org.apache.batik.bridge.BaseScriptingEnvironment$Window;

        $r1 = r0.<org.apache.batik.bridge.BaseScriptingEnvironment$Window: org.apache.batik.script.Interpreter interpreter>;

        return $r1;
    }
}
