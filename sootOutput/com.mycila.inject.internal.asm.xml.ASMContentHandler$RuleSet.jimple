final class com.mycila.inject.internal.asm.xml.ASMContentHandler$RuleSet extends java.lang.Object
{
    private final java.util.Map rules;
    private final java.util.List lpatterns;
    private final java.util.List rpatterns;

    void <init>()
    {
        java.util.HashMap $r1;
        com.mycila.inject.internal.asm.xml.ASMContentHandler$RuleSet r0;
        java.util.ArrayList $r2, $r3;

        r0 := @this: com.mycila.inject.internal.asm.xml.ASMContentHandler$RuleSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$RuleSet: java.util.Map rules> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$RuleSet: java.util.List lpatterns> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$RuleSet: java.util.List rpatterns> = $r3;

        return;
    }

    public void add(java.lang.String, java.lang.Object)
    {
        java.util.List $r4, $r6;
        java.util.Map $r8;
        int $i0, $i1;
        java.lang.Object r2;
        java.lang.String r0, $r3, $r5, r7;
        com.mycila.inject.internal.asm.xml.ASMContentHandler$RuleSet r1;
        boolean $z0, $z1;

        r1 := @this: com.mycila.inject.internal.asm.xml.ASMContentHandler$RuleSet;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r7 = r0;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("*/");

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        r7 = $r5;

        $r6 = r1.<com.mycila.inject.internal.asm.xml.ASMContentHandler$RuleSet: java.util.List lpatterns>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label2;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("/*");

        if $z1 == 0 goto label2;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        r7 = $r3;

        $r4 = r1.<com.mycila.inject.internal.asm.xml.ASMContentHandler$RuleSet: java.util.List rpatterns>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r3);

     label2:
        $r8 = r1.<com.mycila.inject.internal.asm.xml.ASMContentHandler$RuleSet: java.util.Map rules>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r2);

        return;
    }

    public java.lang.Object match(java.lang.String)
    {
        java.util.Map $r2, $r8, $r12, $r14;
        int $i0;
        java.lang.String r1, $r11, r16, r17;
        com.mycila.inject.internal.asm.xml.ASMContentHandler$RuleSet r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator $r4, $r6;
        java.util.List $r3, $r5;
        java.lang.Object $r7, $r9, $r10, $r13, $r15;

        r0 := @this: com.mycila.inject.internal.asm.xml.ASMContentHandler$RuleSet;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$RuleSet: java.util.Map rules>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r14 = r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$RuleSet: java.util.Map rules>;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        return $r15;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(47);

        $r3 = r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$RuleSet: java.util.List lpatterns>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r10 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.lang.String) $r10;

        $r11 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $z4 = virtualinvoke $r11.<java.lang.String: boolean endsWith(java.lang.String)>(r16);

        if $z4 == 0 goto label3;

        $r12 = r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$RuleSet: java.util.Map rules>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r16);

        return $r13;

     label3:
        goto label2;

     label4:
        $r5 = r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$RuleSet: java.util.List rpatterns>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.lang.String) $r7;

        $z3 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>(r17);

        if $z3 == 0 goto label6;

        $r8 = r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$RuleSet: java.util.Map rules>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r17);

        return $r9;

     label6:
        goto label5;

     label7:
        return null;
    }
}
