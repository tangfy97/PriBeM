public class org.apache.xalan.templates.StylesheetComposed extends org.apache.xalan.templates.Stylesheet
{
    private int m_importNumber;
    private int m_importCountComposed;
    private int m_endImportCountComposed;
    private transient java.util.Vector m_includesComposed;

    public void <init>(org.apache.xalan.templates.Stylesheet)
    {
        org.apache.xalan.templates.StylesheetComposed r0;
        int $i1;
        org.apache.xalan.templates.Stylesheet r1;

        r0 := @this: org.apache.xalan.templates.StylesheetComposed;

        r1 := @parameter0: org.apache.xalan.templates.Stylesheet;

        specialinvoke r0.<org.apache.xalan.templates.Stylesheet: void <init>(org.apache.xalan.templates.Stylesheet)>(r1);

        $i1 = (int) -1;

        r0.<org.apache.xalan.templates.StylesheetComposed: int m_importNumber> = $i1;

        return;
    }

    public boolean isAggregatedType()
    {
        org.apache.xalan.templates.StylesheetComposed r0;

        r0 := @this: org.apache.xalan.templates.StylesheetComposed;

        return 1;
    }

    public void recompose(java.util.Vector) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemAttributeSet $r4;
        org.apache.xalan.templates.StylesheetComposed r0;
        java.util.Vector r2;
        org.apache.xalan.templates.ElemTemplate $r8;
        org.apache.xalan.templates.OutputProperties $r3;
        org.apache.xalan.templates.DecimalFormatProperties $r5;
        org.apache.xalan.templates.NamespaceAlias $r7;
        org.apache.xalan.templates.ElemVariable $r9;
        org.apache.xalan.templates.KeyDeclaration $r6;
        org.apache.xalan.templates.Stylesheet $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, $i21;
        org.apache.xalan.templates.WhiteSpaceInfo $r10, $r11;

        r0 := @this: org.apache.xalan.templates.StylesheetComposed;

        r2 := @parameter0: java.util.Vector;

        $i0 = virtualinvoke r0.<org.apache.xalan.templates.StylesheetComposed: int getIncludeCountComposed()>();

        $i21 = (int) -1;

        i10 = $i21;

        goto label20;

     label01:
        $r1 = virtualinvoke r0.<org.apache.xalan.templates.StylesheetComposed: org.apache.xalan.templates.Stylesheet getIncludeComposed(int)>(i10);

        $i1 = virtualinvoke $r1.<org.apache.xalan.templates.Stylesheet: int getOutputCount()>();

        i11 = 0;

        goto label03;

     label02:
        $r3 = virtualinvoke $r1.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.OutputProperties getOutput(int)>(i11);

        virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>($r3);

        i11 = i11 + 1;

     label03:
        if i11 < $i1 goto label02;

        $i2 = virtualinvoke $r1.<org.apache.xalan.templates.Stylesheet: int getAttributeSetCount()>();

        i12 = 0;

        goto label05;

     label04:
        $r4 = virtualinvoke $r1.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemAttributeSet getAttributeSet(int)>(i12);

        virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        i12 = i12 + 1;

     label05:
        if i12 < $i2 goto label04;

        $i3 = virtualinvoke $r1.<org.apache.xalan.templates.Stylesheet: int getDecimalFormatCount()>();

        i13 = 0;

        goto label07;

     label06:
        $r5 = virtualinvoke $r1.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.DecimalFormatProperties getDecimalFormat(int)>(i13);

        virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        i13 = i13 + 1;

     label07:
        if i13 < $i3 goto label06;

        $i4 = virtualinvoke $r1.<org.apache.xalan.templates.Stylesheet: int getKeyCount()>();

        i14 = 0;

        goto label09;

     label08:
        $r6 = virtualinvoke $r1.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.KeyDeclaration getKey(int)>(i14);

        virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>($r6);

        i14 = i14 + 1;

     label09:
        if i14 < $i4 goto label08;

        $i5 = virtualinvoke $r1.<org.apache.xalan.templates.Stylesheet: int getNamespaceAliasCount()>();

        i15 = 0;

        goto label11;

     label10:
        $r7 = virtualinvoke $r1.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.NamespaceAlias getNamespaceAlias(int)>(i15);

        virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>($r7);

        i15 = i15 + 1;

     label11:
        if i15 < $i5 goto label10;

        $i6 = virtualinvoke $r1.<org.apache.xalan.templates.Stylesheet: int getTemplateCount()>();

        i16 = 0;

        goto label13;

     label12:
        $r8 = virtualinvoke $r1.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemTemplate getTemplate(int)>(i16);

        virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>($r8);

        i16 = i16 + 1;

     label13:
        if i16 < $i6 goto label12;

        $i7 = virtualinvoke $r1.<org.apache.xalan.templates.Stylesheet: int getVariableOrParamCount()>();

        i17 = 0;

        goto label15;

     label14:
        $r9 = virtualinvoke $r1.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemVariable getVariableOrParam(int)>(i17);

        virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>($r9);

        i17 = i17 + 1;

     label15:
        if i17 < $i7 goto label14;

        $i8 = virtualinvoke $r1.<org.apache.xalan.templates.Stylesheet: int getStripSpaceCount()>();

        i18 = 0;

        goto label17;

     label16:
        $r10 = virtualinvoke $r1.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.WhiteSpaceInfo getStripSpace(int)>(i18);

        virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>($r10);

        i18 = i18 + 1;

     label17:
        if i18 < $i8 goto label16;

        $i9 = virtualinvoke $r1.<org.apache.xalan.templates.Stylesheet: int getPreserveSpaceCount()>();

        i19 = 0;

        goto label19;

     label18:
        $r11 = virtualinvoke $r1.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.WhiteSpaceInfo getPreserveSpace(int)>(i19);

        virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>($r11);

        i19 = i19 + 1;

     label19:
        if i19 < $i9 goto label18;

        i10 = i10 + 1;

     label20:
        if i10 < $i0 goto label01;

        return;
    }

    void recomposeImports()
    {
        org.apache.xalan.templates.StylesheetComposed r0, $r5, $r6;
        org.apache.xalan.templates.Stylesheet $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19, $i21, $i23, $i25;
        org.apache.xalan.templates.StylesheetRoot $r1, $r2;

        r0 := @this: org.apache.xalan.templates.StylesheetComposed;

        $r1 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()>();

        $i0 = virtualinvoke $r1.<org.apache.xalan.templates.StylesheetRoot: int getImportNumber(org.apache.xalan.templates.StylesheetComposed)>(r0);

        r0.<org.apache.xalan.templates.StylesheetComposed: int m_importNumber> = $i0;

        $r2 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()>();

        $i1 = virtualinvoke $r2.<org.apache.xalan.templates.StylesheetRoot: int getGlobalImportCount()>();

        $i2 = r0.<org.apache.xalan.templates.StylesheetComposed: int m_importNumber>;

        $i3 = $i1 - $i2;

        $i4 = $i3 - 1;

        r0.<org.apache.xalan.templates.StylesheetComposed: int m_importCountComposed> = $i4;

        $i5 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: int getImportCount()>();

        i17 = $i5;

        if $i5 <= 0 goto label3;

        $i12 = r0.<org.apache.xalan.templates.StylesheetComposed: int m_endImportCountComposed>;

        $i13 = $i12 + $i5;

        r0.<org.apache.xalan.templates.StylesheetComposed: int m_endImportCountComposed> = $i13;

        goto label2;

     label1:
        $i14 = r0.<org.apache.xalan.templates.StylesheetComposed: int m_endImportCountComposed>;

        $i21 = (int) -1;

        i17 = i17 + $i21;

        $r6 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.StylesheetComposed getImport(int)>(i17);

        $i15 = virtualinvoke $r6.<org.apache.xalan.templates.StylesheetComposed: int getEndImportCountComposed()>();

        $i16 = $i14 + $i15;

        r0.<org.apache.xalan.templates.StylesheetComposed: int m_endImportCountComposed> = $i16;

     label2:
        if i17 > 0 goto label1;

     label3:
        i18 = virtualinvoke r0.<org.apache.xalan.templates.StylesheetComposed: int getIncludeCountComposed()>();

        goto label7;

     label4:
        $i23 = (int) -1;

        i18 = i18 + $i23;

        $r3 = virtualinvoke r0.<org.apache.xalan.templates.StylesheetComposed: org.apache.xalan.templates.Stylesheet getIncludeComposed(int)>(i18);

        $i6 = virtualinvoke $r3.<org.apache.xalan.templates.Stylesheet: int getImportCount()>();

        i19 = $i6;

        $i7 = r0.<org.apache.xalan.templates.StylesheetComposed: int m_endImportCountComposed>;

        $i8 = $i7 + $i6;

        r0.<org.apache.xalan.templates.StylesheetComposed: int m_endImportCountComposed> = $i8;

        goto label6;

     label5:
        $i9 = r0.<org.apache.xalan.templates.StylesheetComposed: int m_endImportCountComposed>;

        $r4 = virtualinvoke r0.<org.apache.xalan.templates.StylesheetComposed: org.apache.xalan.templates.Stylesheet getIncludeComposed(int)>(i18);

        $i25 = (int) -1;

        i19 = i19 + $i25;

        $r5 = virtualinvoke $r4.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.StylesheetComposed getImport(int)>(i19);

        $i10 = virtualinvoke $r5.<org.apache.xalan.templates.StylesheetComposed: int getEndImportCountComposed()>();

        $i11 = $i9 + $i10;

        r0.<org.apache.xalan.templates.StylesheetComposed: int m_endImportCountComposed> = $i11;

     label6:
        if i19 > 0 goto label5;

     label7:
        if i18 > 0 goto label4;

        return;
    }

    public org.apache.xalan.templates.StylesheetComposed getImportComposed(int) throws java.lang.ArrayIndexOutOfBoundsException
    {
        org.apache.xalan.templates.StylesheetRoot $r1;
        org.apache.xalan.templates.StylesheetComposed r0, $r2;
        int $i0, i1, $i2, $i3;

        r0 := @this: org.apache.xalan.templates.StylesheetComposed;

        i1 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()>();

        $i0 = r0.<org.apache.xalan.templates.StylesheetComposed: int m_importNumber>;

        $i2 = 1 + $i0;

        $i3 = $i2 + i1;

        $r2 = virtualinvoke $r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetComposed getGlobalImport(int)>($i3);

        return $r2;
    }

    public int getImportCountComposed()
    {
        org.apache.xalan.templates.StylesheetComposed r0;
        int $i0;

        r0 := @this: org.apache.xalan.templates.StylesheetComposed;

        $i0 = r0.<org.apache.xalan.templates.StylesheetComposed: int m_importCountComposed>;

        return $i0;
    }

    public int getEndImportCountComposed()
    {
        org.apache.xalan.templates.StylesheetComposed r0;
        int $i0;

        r0 := @this: org.apache.xalan.templates.StylesheetComposed;

        $i0 = r0.<org.apache.xalan.templates.StylesheetComposed: int m_endImportCountComposed>;

        return $i0;
    }

    void recomposeIncludes(org.apache.xalan.templates.Stylesheet)
    {
        org.apache.xalan.templates.StylesheetComposed r1;
        org.apache.xalan.templates.Stylesheet r0, $r3;
        java.util.Vector $r2, $r4, $r5;
        int $i0, i1;

        r1 := @this: org.apache.xalan.templates.StylesheetComposed;

        r0 := @parameter0: org.apache.xalan.templates.Stylesheet;

        $i0 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: int getIncludeCount()>();

        if $i0 <= 0 goto label4;

        $r2 = r1.<org.apache.xalan.templates.StylesheetComposed: java.util.Vector m_includesComposed>;

        if null != $r2 goto label1;

        $r5 = new java.util.Vector;

        specialinvoke $r5.<java.util.Vector: void <init>()>();

        r1.<org.apache.xalan.templates.StylesheetComposed: java.util.Vector m_includesComposed> = $r5;

     label1:
        i1 = 0;

        goto label3;

     label2:
        $r3 = virtualinvoke r0.<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.Stylesheet getInclude(int)>(i1);

        $r4 = r1.<org.apache.xalan.templates.StylesheetComposed: java.util.Vector m_includesComposed>;

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>($r3);

        virtualinvoke r1.<org.apache.xalan.templates.StylesheetComposed: void recomposeIncludes(org.apache.xalan.templates.Stylesheet)>($r3);

        i1 = i1 + 1;

     label3:
        if i1 < $i0 goto label2;

     label4:
        return;
    }

    public org.apache.xalan.templates.Stylesheet getIncludeComposed(int) throws java.lang.ArrayIndexOutOfBoundsException
    {
        org.apache.xalan.templates.StylesheetComposed r0;
        java.lang.ArrayIndexOutOfBoundsException $r6;
        org.apache.xalan.templates.Stylesheet $r4;
        java.util.Vector $r1, $r2;
        int i0, $i2;
        java.lang.Object $r3;

        r0 := @this: org.apache.xalan.templates.StylesheetComposed;

        i0 := @parameter0: int;

        $i2 = (int) -1;

        if $i2 != i0 goto label1;

        return r0;

     label1:
        $r1 = r0.<org.apache.xalan.templates.StylesheetComposed: java.util.Vector m_includesComposed>;

        if null != $r1 goto label2;

        $r6 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r6;

     label2:
        $r2 = r0.<org.apache.xalan.templates.StylesheetComposed: java.util.Vector m_includesComposed>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r4 = (org.apache.xalan.templates.Stylesheet) $r3;

        return $r4;
    }

    public int getIncludeCountComposed()
    {
        java.util.Vector $r1, $r2;
        org.apache.xalan.templates.StylesheetComposed r0;
        int $i0;

        r0 := @this: org.apache.xalan.templates.StylesheetComposed;

        $r1 = r0.<org.apache.xalan.templates.StylesheetComposed: java.util.Vector m_includesComposed>;

        if null == $r1 goto label1;

        $r2 = r0.<org.apache.xalan.templates.StylesheetComposed: java.util.Vector m_includesComposed>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public void recomposeTemplates(boolean) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.StylesheetComposed r0;
        boolean z0;

        r0 := @this: org.apache.xalan.templates.StylesheetComposed;

        z0 := @parameter0: boolean;

        return;
    }
}
