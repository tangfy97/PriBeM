public class org.jdesktop.swingx.color.GradientPreviewPanel extends org.jdesktop.swingx.JXPanel
{
    private java.awt.Paint checker_texture;
    private java.awt.geom.Point2D start;
    private java.awt.geom.Point2D end;
    public org.jdesktop.swingx.JXGradientChooser picker;
    boolean moving_start;
    boolean moving_end;
    private boolean radial;
    private boolean reversed;
    private boolean reflected;
    private boolean repeated;
    private java.awt.MultipleGradientPaint gradient;
    private org.jdesktop.swingx.multislider.MultiThumbModel model;
    private java.util.logging.Logger log;

    public void <init>()
    {
        org.jdesktop.swingx.color.GradientPreviewPanel r0;
        org.jdesktop.swingx.color.GradientPreviewPanel$GradientMouseHandler $r7;
        java.util.logging.Logger $r3;
        java.awt.geom.Point2D$Float $r4, $r5;
        java.awt.Paint $r6;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: org.jdesktop.swingx.color.GradientPreviewPanel;

        specialinvoke r0.<org.jdesktop.swingx.JXPanel: void <init>()>();

        r0.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.Paint checker_texture> = null;

        r0.<org.jdesktop.swingx.color.GradientPreviewPanel: boolean moving_start> = 0;

        r0.<org.jdesktop.swingx.color.GradientPreviewPanel: boolean moving_end> = 0;

        r0.<org.jdesktop.swingx.color.GradientPreviewPanel: boolean radial> = 0;

        r0.<org.jdesktop.swingx.color.GradientPreviewPanel: boolean reversed> = 0;

        r0.<org.jdesktop.swingx.color.GradientPreviewPanel: boolean reflected> = 0;

        r0.<org.jdesktop.swingx.color.GradientPreviewPanel: boolean repeated> = 0;

        $r1 = class "Lorg/jdesktop/swingx/color/GradientPreviewPanel;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r2);

        r0.<org.jdesktop.swingx.color.GradientPreviewPanel: java.util.logging.Logger log> = $r3;

        $r4 = new java.awt.geom.Point2D$Float;

        specialinvoke $r4.<java.awt.geom.Point2D$Float: void <init>(float,float)>(10.0F, 10.0F);

        r0.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D start> = $r4;

        $r5 = new java.awt.geom.Point2D$Float;

        specialinvoke $r5.<java.awt.geom.Point2D$Float: void <init>(float,float)>(80.0F, 10.0F);

        r0.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D end> = $r5;

        $r6 = staticinvoke <org.jdesktop.swingx.color.ColorUtil: java.awt.Paint getCheckerPaint()>();

        r0.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.Paint checker_texture> = $r6;

        $r7 = new org.jdesktop.swingx.color.GradientPreviewPanel$GradientMouseHandler;

        specialinvoke $r7.<org.jdesktop.swingx.color.GradientPreviewPanel$GradientMouseHandler: void <init>(org.jdesktop.swingx.color.GradientPreviewPanel,org.jdesktop.swingx.color.GradientPreviewPanel$1)>(r0, null);

        virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: void addMouseListener(java.awt.event.MouseListener)>($r7);

        virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: void addMouseMotionListener(java.awt.event.MouseMotionListener)>($r7);

        return;
    }

    public void setGradient()
    {
        org.jdesktop.swingx.color.GradientPreviewPanel r0;

        r0 := @this: org.jdesktop.swingx.color.GradientPreviewPanel;

        virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: void repaint()>();

        return;
    }

    public void setGradient(java.awt.MultipleGradientPaint)
    {
        java.awt.geom.Point2D $r3, $r5, $r6, $r8, $r9;
        java.awt.RadialGradientPaint r11;
        java.awt.geom.Point2D$Double $r4;
        java.awt.MultipleGradientPaint $r1, r2, $r7;
        boolean $z0;
        double $d0, $d1, $d2, $d3;
        org.jdesktop.swingx.color.GradientPreviewPanel r0;
        java.awt.LinearGradientPaint r10;
        float $f0;

        r0 := @this: org.jdesktop.swingx.color.GradientPreviewPanel;

        r2 := @parameter0: java.awt.MultipleGradientPaint;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.MultipleGradientPaint getGradient()>();

        $z0 = r2 instanceof java.awt.LinearGradientPaint;

        if $z0 == 0 goto label1;

        r10 = (java.awt.LinearGradientPaint) r2;

        $r8 = virtualinvoke r10.<java.awt.LinearGradientPaint: java.awt.geom.Point2D getStartPoint()>();

        r0.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D start> = $r8;

        $r9 = virtualinvoke r10.<java.awt.LinearGradientPaint: java.awt.geom.Point2D getEndPoint()>();

        r0.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D end> = $r9;

        goto label2;

     label1:
        r11 = (java.awt.RadialGradientPaint) r2;

        $r3 = virtualinvoke r11.<java.awt.RadialGradientPaint: java.awt.geom.Point2D getCenterPoint()>();

        r0.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D start> = $r3;

        $r4 = new java.awt.geom.Point2D$Double;

        $r5 = r0.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D start>;

        $d0 = virtualinvoke $r5.<java.awt.geom.Point2D: double getX()>();

        $r6 = r0.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D start>;

        $d1 = virtualinvoke $r6.<java.awt.geom.Point2D: double getY()>();

        $f0 = virtualinvoke r11.<java.awt.RadialGradientPaint: float getRadius()>();

        $d2 = (double) $f0;

        $d3 = $d1 + $d2;

        specialinvoke $r4.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d0, $d3);

        r0.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D end> = $r4;

     label2:
        r0.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.MultipleGradientPaint gradient> = r2;

        $r7 = virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.MultipleGradientPaint getGradient()>();

        virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("gradient", $r1, $r7);

        virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: void repaint()>();

        return;
    }

    public java.awt.MultipleGradientPaint getGradient()
    {
        org.jdesktop.swingx.color.GradientPreviewPanel r0;
        java.awt.MultipleGradientPaint $r1;

        r0 := @this: org.jdesktop.swingx.color.GradientPreviewPanel;

        $r1 = r0.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.MultipleGradientPaint gradient>;

        return $r1;
    }

    public java.awt.MultipleGradientPaint calculateGradient()
    {
        org.jdesktop.swingx.color.GradientPreviewPanel r0;
        java.awt.Color $r10;
        java.util.Iterator $r4;
        float[] r2;
        org.jdesktop.swingx.multislider.Thumb r8;
        java.util.List $r1;
        java.awt.MultipleGradientPaint $r5, $r6;
        int $i0, i1;
        float $f0;
        java.lang.Object $r7, $r9;
        java.awt.Color[] r3;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.color.GradientPreviewPanel;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: java.util.List getStops()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        r2 = newarray (float)[$i0];

        r3 = newarray (java.awt.Color)[$i0];

        i1 = 0;

        $r4 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.jdesktop.swingx.multislider.Thumb) $r7;

        $r9 = virtualinvoke r8.<org.jdesktop.swingx.multislider.Thumb: java.lang.Object getObject()>();

        $r10 = (java.awt.Color) $r9;

        r3[i1] = $r10;

        $f0 = virtualinvoke r8.<org.jdesktop.swingx.multislider.Thumb: float getPosition()>();

        r2[i1] = $f0;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r5 = specialinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.MultipleGradientPaint calculateGradient(float[],java.awt.Color[])>(r2, r3);

        virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: void setGradient(java.awt.MultipleGradientPaint)>($r5);

        $r6 = virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.MultipleGradientPaint getGradient()>();

        return $r6;
    }

    private java.util.List getStops()
    {
        org.jdesktop.swingx.color.GradientPreviewPanel r0;
        java.util.List $r3;
        org.jdesktop.swingx.multislider.MultiThumbModel $r1, $r2;

        r0 := @this: org.jdesktop.swingx.color.GradientPreviewPanel;

        $r1 = r0.<org.jdesktop.swingx.color.GradientPreviewPanel: org.jdesktop.swingx.multislider.MultiThumbModel model>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.jdesktop.swingx.color.GradientPreviewPanel: org.jdesktop.swingx.multislider.MultiThumbModel model>;

        $r3 = interfaceinvoke $r2.<org.jdesktop.swingx.multislider.MultiThumbModel: java.util.List getSortedThumbs()>();

     label2:
        return $r3;
    }

    public void setMultiThumbModel(org.jdesktop.swingx.multislider.MultiThumbModel)
    {
        org.jdesktop.swingx.color.GradientPreviewPanel r0;
        org.jdesktop.swingx.multislider.MultiThumbModel $r1, r2, $r3;

        r0 := @this: org.jdesktop.swingx.color.GradientPreviewPanel;

        r2 := @parameter0: org.jdesktop.swingx.multislider.MultiThumbModel;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: org.jdesktop.swingx.multislider.MultiThumbModel getMultiThumbModel()>();

        r0.<org.jdesktop.swingx.color.GradientPreviewPanel: org.jdesktop.swingx.multislider.MultiThumbModel model> = r2;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: org.jdesktop.swingx.multislider.MultiThumbModel getMultiThumbModel()>();

        virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("multiThumbModel", $r1, $r3);

        return;
    }

    public org.jdesktop.swingx.multislider.MultiThumbModel getMultiThumbModel()
    {
        org.jdesktop.swingx.color.GradientPreviewPanel r0;
        org.jdesktop.swingx.multislider.MultiThumbModel $r1;

        r0 := @this: org.jdesktop.swingx.color.GradientPreviewPanel;

        $r1 = r0.<org.jdesktop.swingx.color.GradientPreviewPanel: org.jdesktop.swingx.multislider.MultiThumbModel model>;

        return $r1;
    }

    protected void paintComponent(java.awt.Graphics)
    {
        java.awt.Color $r4;
        java.awt.Graphics2D r11;
        java.awt.MultipleGradientPaint $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r10;
        org.jdesktop.swingx.color.GradientPreviewPanel r1;
        java.util.logging.Logger $r7;
        java.lang.Exception $r5;
        java.awt.Paint $r2;
        java.awt.Graphics r0;
        java.lang.StringBuilder $r6, $r8, $r9;

        r1 := @this: org.jdesktop.swingx.color.GradientPreviewPanel;

        r0 := @parameter0: java.awt.Graphics;

     label1:
        r11 = (java.awt.Graphics2D) r0;

        $r2 = r1.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.Paint checker_texture>;

        virtualinvoke r11.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r2);

        $i0 = virtualinvoke r1.<org.jdesktop.swingx.color.GradientPreviewPanel: int getWidth()>();

        $i1 = virtualinvoke r1.<org.jdesktop.swingx.color.GradientPreviewPanel: int getHeight()>();

        virtualinvoke r0.<java.awt.Graphics: void fillRect(int,int,int,int)>(0, 0, $i0, $i1);

        $r3 = virtualinvoke r1.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.MultipleGradientPaint getGradient()>();

        if $r3 == null goto label2;

        virtualinvoke r11.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r3);

        goto label3;

     label2:
        $r4 = <java.awt.Color: java.awt.Color black>;

        virtualinvoke r11.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r4);

     label3:
        $i2 = virtualinvoke r1.<org.jdesktop.swingx.color.GradientPreviewPanel: int getWidth()>();

        $i3 = virtualinvoke r1.<org.jdesktop.swingx.color.GradientPreviewPanel: int getHeight()>();

        virtualinvoke r0.<java.awt.Graphics: void fillRect(int,int,int,int)>(0, 0, $i2, $i3);

        specialinvoke r1.<org.jdesktop.swingx.color.GradientPreviewPanel: void drawHandles(java.awt.Graphics2D)>(r11);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        $r7 = r1.<org.jdesktop.swingx.color.GradientPreviewPanel: java.util.logging.Logger log>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ex: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.util.logging.Logger: void severe(java.lang.String)>($r10);

     label6:
        return;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    private java.awt.MultipleGradientPaint calculateGradient(float[], java.awt.Color[])
    {
        java.awt.geom.Point2D r6, r7;
        java.awt.MultipleGradientPaint$ColorSpaceType $r5;
        float[] r2;
        java.awt.RadialGradientPaint $r4;
        java.awt.MultipleGradientPaint r9;
        boolean $z0, $z1, $z2, $z3;
        double $d0, $d1, $d2, $d3, $d4;
        org.jdesktop.swingx.color.GradientPreviewPanel r0;
        java.awt.LinearGradientPaint $r1;
        float $f0, $f1, $f2, $f3, $f4;
        java.awt.Color[] r3;
        java.awt.MultipleGradientPaint$CycleMethod r8;

        r0 := @this: org.jdesktop.swingx.color.GradientPreviewPanel;

        r2 := @parameter0: float[];

        r3 := @parameter1: java.awt.Color[];

        r6 = r0.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D start>;

        r7 = r0.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D end>;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: boolean isReversed()>();

        if $z0 == 0 goto label1;

        r6 = r0.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D end>;

        r7 = r0.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D start>;

     label1:
        r8 = <java.awt.MultipleGradientPaint$CycleMethod: java.awt.MultipleGradientPaint$CycleMethod NO_CYCLE>;

        $z1 = virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: boolean isRepeated()>();

        if $z1 == 0 goto label2;

        r8 = <java.awt.MultipleGradientPaint$CycleMethod: java.awt.MultipleGradientPaint$CycleMethod REPEAT>;

     label2:
        $z2 = virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: boolean isReflected()>();

        if $z2 == 0 goto label3;

        r8 = <java.awt.MultipleGradientPaint$CycleMethod: java.awt.MultipleGradientPaint$CycleMethod REFLECT>;

     label3:
        $z3 = virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: boolean isRadial()>();

        if $z3 == 0 goto label4;

        $r4 = new java.awt.RadialGradientPaint;

        $d4 = virtualinvoke r6.<java.awt.geom.Point2D: double distance(java.awt.geom.Point2D)>(r7);

        $f4 = (float) $d4;

        $r5 = <java.awt.MultipleGradientPaint$ColorSpaceType: java.awt.MultipleGradientPaint$ColorSpaceType SRGB>;

        specialinvoke $r4.<java.awt.RadialGradientPaint: void <init>(java.awt.geom.Point2D,float,java.awt.geom.Point2D,float[],java.awt.Color[],java.awt.MultipleGradientPaint$CycleMethod,java.awt.MultipleGradientPaint$ColorSpaceType,java.awt.geom.AffineTransform)>(r6, $f4, r6, r2, r3, r8, $r5, null);

        r9 = $r4;

        goto label5;

     label4:
        $r1 = new java.awt.LinearGradientPaint;

        $d0 = virtualinvoke r6.<java.awt.geom.Point2D: double getX()>();

        $f0 = (float) $d0;

        $d1 = virtualinvoke r6.<java.awt.geom.Point2D: double getY()>();

        $f1 = (float) $d1;

        $d2 = virtualinvoke r7.<java.awt.geom.Point2D: double getX()>();

        $f2 = (float) $d2;

        $d3 = virtualinvoke r7.<java.awt.geom.Point2D: double getY()>();

        $f3 = (float) $d3;

        specialinvoke $r1.<java.awt.LinearGradientPaint: void <init>(float,float,float,float,float[],java.awt.Color[],java.awt.MultipleGradientPaint$CycleMethod)>($f0, $f1, $f2, $f3, r2, r3, r8);

        r9 = $r1;

     label5:
        return r9;
    }

    private void drawHandles(java.awt.Graphics2D)
    {
        java.awt.Color $r3, $r7, $r10, $r13, $r16, $r21;
        java.awt.RenderingHints$Key $r2;
        java.awt.geom.Point2D $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r25;
        org.jdesktop.swingx.color.GradientPreviewPanel r4;
        java.awt.Graphics2D r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        java.lang.Object $r1;

        r4 := @this: org.jdesktop.swingx.color.GradientPreviewPanel;

        r0 := @parameter0: java.awt.Graphics2D;

        $r2 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_ANTIALIASING>;

        $r1 = <java.awt.RenderingHints: java.lang.Object VALUE_ANTIALIAS_ON>;

        virtualinvoke r0.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r2, $r1);

        $r3 = <java.awt.Color: java.awt.Color black>;

        virtualinvoke r0.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r3);

        $r5 = r4.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D start>;

        $d0 = virtualinvoke $r5.<java.awt.geom.Point2D: double getX()>();

        $i0 = (int) $d0;

        $i1 = $i0 - 5;

        $r6 = r4.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D start>;

        $d1 = virtualinvoke $r6.<java.awt.geom.Point2D: double getY()>();

        $i2 = (int) $d1;

        $i3 = $i2 - 5;

        virtualinvoke r0.<java.awt.Graphics2D: void drawOval(int,int,int,int)>($i1, $i3, 10, 10);

        $r7 = <java.awt.Color: java.awt.Color white>;

        virtualinvoke r0.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r7);

        $r8 = r4.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D start>;

        $d2 = virtualinvoke $r8.<java.awt.geom.Point2D: double getX()>();

        $i4 = (int) $d2;

        $i5 = $i4 - 4;

        $r9 = r4.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D start>;

        $d3 = virtualinvoke $r9.<java.awt.geom.Point2D: double getY()>();

        $i6 = (int) $d3;

        $i7 = $i6 - 4;

        virtualinvoke r0.<java.awt.Graphics2D: void drawOval(int,int,int,int)>($i5, $i7, 8, 8);

        $r10 = <java.awt.Color: java.awt.Color black>;

        virtualinvoke r0.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r10);

        $r11 = r4.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D end>;

        $d4 = virtualinvoke $r11.<java.awt.geom.Point2D: double getX()>();

        $i8 = (int) $d4;

        $i9 = $i8 - 5;

        $r12 = r4.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D end>;

        $d5 = virtualinvoke $r12.<java.awt.geom.Point2D: double getY()>();

        $i10 = (int) $d5;

        $i11 = $i10 - 5;

        virtualinvoke r0.<java.awt.Graphics2D: void drawOval(int,int,int,int)>($i9, $i11, 10, 10);

        $r13 = <java.awt.Color: java.awt.Color white>;

        virtualinvoke r0.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r13);

        $r14 = r4.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D end>;

        $d6 = virtualinvoke $r14.<java.awt.geom.Point2D: double getX()>();

        $i12 = (int) $d6;

        $i13 = $i12 - 4;

        $r15 = r4.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D end>;

        $d7 = virtualinvoke $r15.<java.awt.geom.Point2D: double getY()>();

        $i14 = (int) $d7;

        $i15 = $i14 - 4;

        virtualinvoke r0.<java.awt.Graphics2D: void drawOval(int,int,int,int)>($i13, $i15, 8, 8);

        $r16 = <java.awt.Color: java.awt.Color darkGray>;

        virtualinvoke r0.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r16);

        $r17 = r4.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D start>;

        $d8 = virtualinvoke $r17.<java.awt.geom.Point2D: double getX()>();

        $i16 = (int) $d8;

        $r18 = r4.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D start>;

        $d9 = virtualinvoke $r18.<java.awt.geom.Point2D: double getY()>();

        $i17 = (int) $d9;

        $r19 = r4.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D end>;

        $d10 = virtualinvoke $r19.<java.awt.geom.Point2D: double getX()>();

        $i18 = (int) $d10;

        $r20 = r4.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D end>;

        $d11 = virtualinvoke $r20.<java.awt.geom.Point2D: double getY()>();

        $i19 = (int) $d11;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i16, $i17, $i18, $i19);

        $r21 = <java.awt.Color: java.awt.Color gray>;

        virtualinvoke r0.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r21);

        $r22 = r4.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D start>;

        $d12 = virtualinvoke $r22.<java.awt.geom.Point2D: double getX()>();

        $i20 = (int) $d12;

        $i21 = $i20 - 1;

        $r23 = r4.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D start>;

        $d13 = virtualinvoke $r23.<java.awt.geom.Point2D: double getY()>();

        $i22 = (int) $d13;

        $i23 = $i22 - 1;

        $r24 = r4.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D end>;

        $d14 = virtualinvoke $r24.<java.awt.geom.Point2D: double getX()>();

        $i24 = (int) $d14;

        $i25 = $i24 - 1;

        $r25 = r4.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D end>;

        $d15 = virtualinvoke $r25.<java.awt.geom.Point2D: double getY()>();

        $i26 = (int) $d15;

        $i27 = $i26 - 1;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i21, $i23, $i25, $i27);

        return;
    }

    public boolean isRadial()
    {
        org.jdesktop.swingx.color.GradientPreviewPanel r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.color.GradientPreviewPanel;

        $z0 = r0.<org.jdesktop.swingx.color.GradientPreviewPanel: boolean radial>;

        return $z0;
    }

    public void setRadial(boolean)
    {
        org.jdesktop.swingx.color.GradientPreviewPanel r0;
        boolean $z0, z1, $z2;

        r0 := @this: org.jdesktop.swingx.color.GradientPreviewPanel;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: boolean isRadial()>();

        r0.<org.jdesktop.swingx.color.GradientPreviewPanel: boolean radial> = z1;

        $z2 = virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: boolean isRadial()>();

        virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: void firePropertyChange(java.lang.String,boolean,boolean)>("radial", $z0, $z2);

        return;
    }

    public boolean isReversed()
    {
        org.jdesktop.swingx.color.GradientPreviewPanel r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.color.GradientPreviewPanel;

        $z0 = r0.<org.jdesktop.swingx.color.GradientPreviewPanel: boolean reversed>;

        return $z0;
    }

    public void setReversed(boolean)
    {
        org.jdesktop.swingx.color.GradientPreviewPanel r0;
        boolean $z0, z1, $z2;

        r0 := @this: org.jdesktop.swingx.color.GradientPreviewPanel;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: boolean isReversed()>();

        r0.<org.jdesktop.swingx.color.GradientPreviewPanel: boolean reversed> = z1;

        $z2 = virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: boolean isReversed()>();

        virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: void firePropertyChange(java.lang.String,boolean,boolean)>("reversed", $z0, $z2);

        return;
    }

    public boolean isReflected()
    {
        org.jdesktop.swingx.color.GradientPreviewPanel r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.color.GradientPreviewPanel;

        $z0 = r0.<org.jdesktop.swingx.color.GradientPreviewPanel: boolean reflected>;

        return $z0;
    }

    public void setReflected(boolean)
    {
        org.jdesktop.swingx.color.GradientPreviewPanel r0;
        boolean $z0, z1, $z2;

        r0 := @this: org.jdesktop.swingx.color.GradientPreviewPanel;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: boolean isReflected()>();

        r0.<org.jdesktop.swingx.color.GradientPreviewPanel: boolean reflected> = z1;

        $z2 = virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: boolean isReflected()>();

        virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: void firePropertyChange(java.lang.String,boolean,boolean)>("reflected", $z0, $z2);

        return;
    }

    public boolean isRepeated()
    {
        org.jdesktop.swingx.color.GradientPreviewPanel r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.color.GradientPreviewPanel;

        $z0 = r0.<org.jdesktop.swingx.color.GradientPreviewPanel: boolean repeated>;

        return $z0;
    }

    public void setRepeated(boolean)
    {
        org.jdesktop.swingx.color.GradientPreviewPanel r0;
        boolean $z0, z1, $z2;

        r0 := @this: org.jdesktop.swingx.color.GradientPreviewPanel;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: boolean isRepeated()>();

        r0.<org.jdesktop.swingx.color.GradientPreviewPanel: boolean repeated> = z1;

        $z2 = virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: boolean isRepeated()>();

        virtualinvoke r0.<org.jdesktop.swingx.color.GradientPreviewPanel: void firePropertyChange(java.lang.String,boolean,boolean)>("repeated", $z0, $z2);

        return;
    }

    static java.awt.geom.Point2D access$100(org.jdesktop.swingx.color.GradientPreviewPanel)
    {
        org.jdesktop.swingx.color.GradientPreviewPanel r0;
        java.awt.geom.Point2D $r1;

        r0 := @parameter0: org.jdesktop.swingx.color.GradientPreviewPanel;

        $r1 = r0.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D start>;

        return $r1;
    }

    static java.awt.geom.Point2D access$102(org.jdesktop.swingx.color.GradientPreviewPanel, java.awt.geom.Point2D)
    {
        org.jdesktop.swingx.color.GradientPreviewPanel r0;
        java.awt.geom.Point2D r1;

        r0 := @parameter0: org.jdesktop.swingx.color.GradientPreviewPanel;

        r1 := @parameter1: java.awt.geom.Point2D;

        r0.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D start> = r1;

        return r1;
    }

    static java.awt.geom.Point2D access$200(org.jdesktop.swingx.color.GradientPreviewPanel)
    {
        org.jdesktop.swingx.color.GradientPreviewPanel r0;
        java.awt.geom.Point2D $r1;

        r0 := @parameter0: org.jdesktop.swingx.color.GradientPreviewPanel;

        $r1 = r0.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D end>;

        return $r1;
    }

    static java.awt.geom.Point2D access$202(org.jdesktop.swingx.color.GradientPreviewPanel, java.awt.geom.Point2D)
    {
        org.jdesktop.swingx.color.GradientPreviewPanel r0;
        java.awt.geom.Point2D r1;

        r0 := @parameter0: org.jdesktop.swingx.color.GradientPreviewPanel;

        r1 := @parameter1: java.awt.geom.Point2D;

        r0.<org.jdesktop.swingx.color.GradientPreviewPanel: java.awt.geom.Point2D end> = r1;

        return r1;
    }
}
