public class com.hp.hpl.jena.sparql.function.library.bnode extends com.hp.hpl.jena.sparql.function.FunctionBase1
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.function.library.bnode r0;

        r0 := @this: com.hp.hpl.jena.sparql.function.library.bnode;

        specialinvoke r0.<com.hp.hpl.jena.sparql.function.FunctionBase1: void <init>()>();

        return;
    }

    public com.hp.hpl.jena.sparql.expr.NodeValue exec(com.hp.hpl.jena.sparql.expr.NodeValue)
    {
        com.hp.hpl.jena.sparql.expr.NodeValue r0, $r4;
        com.hp.hpl.jena.sparql.function.library.bnode r6;
        com.hp.hpl.jena.graph.Node $r1;
        com.hp.hpl.jena.rdf.model.AnonId $r2;
        com.hp.hpl.jena.sparql.expr.ExprEvalException $r5;
        java.lang.String $r3;
        boolean $z0;

        r6 := @this: com.hp.hpl.jena.sparql.function.library.bnode;

        r0 := @parameter0: com.hp.hpl.jena.sparql.expr.NodeValue;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.NodeValue: com.hp.hpl.jena.graph.Node asNode()>();

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.graph.Node: boolean isBlank()>();

        if $z0 != 0 goto label1;

        $r5 = new com.hp.hpl.jena.sparql.expr.ExprEvalException;

        specialinvoke $r5.<com.hp.hpl.jena.sparql.expr.ExprEvalException: void <init>(java.lang.String)>("bnode: not a blank node");

        throw $r5;

     label1:
        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.rdf.model.AnonId getBlankNodeId()>();

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.rdf.model.AnonId: java.lang.String getLabelString()>();

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.expr.NodeValue: com.hp.hpl.jena.sparql.expr.NodeValue makeString(java.lang.String)>($r3);

        return $r4;
    }
}
