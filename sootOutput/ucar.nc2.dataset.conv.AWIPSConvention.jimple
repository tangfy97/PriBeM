public class ucar.nc2.dataset.conv.AWIPSConvention extends ucar.nc2.dataset.CoordSysBuilder
{
    private static final boolean debugProj;
    private static final boolean debugBreakup;
    private java.util.List mungedList;
    private ucar.nc2.dataset.ProjectionCT projCT;
    private double startx;
    private double starty;

    public static boolean isMine(ucar.nc2.NetcdfFile)
    {
        ucar.nc2.Attribute $r1;
        ucar.nc2.Dimension $r2, $r3, $r4;
        ucar.nc2.NetcdfFile r0;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        $r1 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("projName");

        if null == $r1 goto label1;

        $r2 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension findDimension(java.lang.String)>("charsPerLevel");

        if null == $r2 goto label1;

        $r3 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension findDimension(java.lang.String)>("x");

        if null == $r3 goto label1;

        $r4 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension findDimension(java.lang.String)>("y");

        if null == $r4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void <init>()
    {
        ucar.nc2.dataset.conv.AWIPSConvention r0;
        java.util.ArrayList $r1;

        r0 := @this: ucar.nc2.dataset.conv.AWIPSConvention;

        specialinvoke r0.<ucar.nc2.dataset.CoordSysBuilder: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.List mungedList> = $r1;

        r0.<ucar.nc2.dataset.conv.AWIPSConvention: ucar.nc2.dataset.ProjectionCT projCT> = null;

        r0.<ucar.nc2.dataset.conv.AWIPSConvention: java.lang.String conventionName> = "AWIPS";

        return;
    }

    public void augmentDataset(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask)
    {
        ucar.nc2.dataset.conv.AWIPSConvention r5;
        java.util.Formatter $r43, $r46;
        ucar.nc2.dataset.CoordinateAxis $r34, $r35, $r37, $r38, $r39, $r40, $r48;
        ucar.nc2.util.CancelTask r47;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        ucar.nc2.dataset.VariableDS $r15;
        ucar.ma2.DataType $r24, $r25;
        java.util.List $r7, $r26, $r49, $r52;
        ucar.nc2.Attribute $r10, $r12, $r16, $r31;
        java.lang.StringBuilder $r18, $r20, $r21;
        java.lang.Object[] $r42, $r45;
        int $i0, $i1, $i2;
        ucar.nc2.Variable $r1, $r23, r51, r53;
        java.lang.String $r4, $r11, $r13, $r19, $r22, $r29, $r30, $r32;
        java.util.Iterator $r8, $r50;
        ucar.nc2.dataset.ProjectionCT $r6, $r14, $r33, $r36;
        java.io.IOException $r41;
        ucar.ma2.InvalidRangeException $r44;
        ucar.nc2.Dimension $r2, $r3, $r27, $r28;
        java.lang.Object $r9, $r17;
        ucar.nc2.dataset.NetcdfDataset r0;

        r5 := @this: ucar.nc2.dataset.conv.AWIPSConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r47 := @parameter1: ucar.nc2.util.CancelTask;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("x");

        if null == $r1 goto label01;

        return;

     label01:
        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>("x");

        $i0 = virtualinvoke $r2.<ucar.nc2.Dimension: int getLength()>();

        $r3 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>("y");

        $i1 = virtualinvoke $r3.<ucar.nc2.Dimension: int getLength()>();

        $r4 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "projName", "none");

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("LATLON");

        if $z0 == 0 goto label02;

        $r39 = specialinvoke r5.<ucar.nc2.dataset.conv.AWIPSConvention: ucar.nc2.dataset.CoordinateAxis makeLonCoordAxis(ucar.nc2.dataset.NetcdfDataset,int,java.lang.String)>(r0, $i0, "x");

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r39);

        $r40 = specialinvoke r5.<ucar.nc2.dataset.conv.AWIPSConvention: ucar.nc2.dataset.CoordinateAxis makeLatCoordAxis(ucar.nc2.dataset.NetcdfDataset,int,java.lang.String)>(r0, $i1, "y");

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r40);

        goto label04;

     label02:
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("LAMBERT_CONFORMAL");

        if $z1 == 0 goto label03;

        $r36 = specialinvoke r5.<ucar.nc2.dataset.conv.AWIPSConvention: ucar.nc2.dataset.ProjectionCT makeLCProjection(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r0, $r4);

        r5.<ucar.nc2.dataset.conv.AWIPSConvention: ucar.nc2.dataset.ProjectionCT projCT> = $r36;

        $r37 = specialinvoke r5.<ucar.nc2.dataset.conv.AWIPSConvention: ucar.nc2.dataset.CoordinateAxis makeXCoordAxis(ucar.nc2.dataset.NetcdfDataset,int,java.lang.String)>(r0, $i0, "x");

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r37);

        $r38 = specialinvoke r5.<ucar.nc2.dataset.conv.AWIPSConvention: ucar.nc2.dataset.CoordinateAxis makeYCoordAxis(ucar.nc2.dataset.NetcdfDataset,int,java.lang.String)>(r0, $i1, "y");

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r38);

        goto label04;

     label03:
        $z2 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("STEREOGRAPHIC");

        if $z2 == 0 goto label04;

        $r33 = specialinvoke r5.<ucar.nc2.dataset.conv.AWIPSConvention: ucar.nc2.dataset.ProjectionCT makeStereoProjection(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r0, $r4);

        r5.<ucar.nc2.dataset.conv.AWIPSConvention: ucar.nc2.dataset.ProjectionCT projCT> = $r33;

        $r34 = specialinvoke r5.<ucar.nc2.dataset.conv.AWIPSConvention: ucar.nc2.dataset.CoordinateAxis makeXCoordAxis(ucar.nc2.dataset.NetcdfDataset,int,java.lang.String)>(r0, $i0, "x");

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r34);

        $r35 = specialinvoke r5.<ucar.nc2.dataset.conv.AWIPSConvention: ucar.nc2.dataset.CoordinateAxis makeYCoordAxis(ucar.nc2.dataset.NetcdfDataset,int,java.lang.String)>(r0, $i1, "y");

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r35);

     label04:
        $r48 = specialinvoke r5.<ucar.nc2.dataset.conv.AWIPSConvention: ucar.nc2.dataset.CoordinateAxis makeTimeCoordAxis(ucar.nc2.dataset.NetcdfDataset)>(r0);

        if $r48 == null goto label05;

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r48);

        $r28 = virtualinvoke $r48.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Dimension getDimension(int)>(0);

        $r29 = virtualinvoke $r28.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r30 = virtualinvoke $r48.<ucar.nc2.dataset.CoordinateAxis: java.lang.String getShortName()>();

        $z3 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>($r30);

        if $z3 != 0 goto label05;

        $r31 = new ucar.nc2.Attribute;

        $r32 = virtualinvoke $r28.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r31.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAliasForDimension", $r32);

        virtualinvoke $r48.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r31);

     label05:
        $r49 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.util.List getVariables()>();

        $r50 = interfaceinvoke $r49.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z4 = interfaceinvoke $r50.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label14;

        $r17 = interfaceinvoke $r50.<java.util.Iterator: java.lang.Object next()>();

        r51 = (ucar.nc2.Variable) $r17;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke r51.<ucar.nc2.Variable: java.lang.String getName()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Levels");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r23 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>($r22);

        if $r23 != null goto label07;

        goto label06;

     label07:
        $i2 = virtualinvoke $r23.<ucar.nc2.Variable: int getRank()>();

        if $i2 == 2 goto label08;

        goto label06;

     label08:
        $r24 = virtualinvoke $r23.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r25 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r24 == $r25 goto label09;

        goto label06;

     label09:
        $r26 = specialinvoke r5.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.List breakupLevels(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable)>(r0, $r23);

        $r27 = virtualinvoke $r23.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        specialinvoke r5.<ucar.nc2.dataset.conv.AWIPSConvention: void createNewVariables(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable,java.util.List,ucar.nc2.Dimension)>(r0, r51, $r26, $r27);

     label10:
        goto label13;

     label11:
        $r44 := @caughtexception;

        $r46 = r5.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        $r45 = newarray (java.lang.Object)[0];

        virtualinvoke $r46.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("createNewVariables InvalidRangeException\n", $r45);

        goto label13;

     label12:
        $r41 := @caughtexception;

        $r43 = r5.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        $r42 = newarray (java.lang.Object)[0];

        virtualinvoke $r43.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("createNewVariables IOException\n", $r42);

     label13:
        $r52 = r5.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.List mungedList>;

        interfaceinvoke $r52.<java.util.List: boolean add(java.lang.Object)>(r51);

        goto label06;

     label14:
        $r6 = r5.<ucar.nc2.dataset.conv.AWIPSConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        if $r6 == null goto label15;

        $r14 = r5.<ucar.nc2.dataset.conv.AWIPSConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        $r15 = virtualinvoke r5.<ucar.nc2.dataset.conv.AWIPSConvention: ucar.nc2.dataset.VariableDS makeCoordinateTransformVariable(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.CoordinateTransform)>(r0, $r14);

        $r16 = new ucar.nc2.Attribute;

        specialinvoke $r16.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxes", "x y");

        virtualinvoke $r15.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r16);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r15);

     label15:
        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        $r7 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.util.List getVariables()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label16:
        $z5 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label18;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r53 = (ucar.nc2.Variable) $r9;

        $r10 = virtualinvoke r53.<ucar.nc2.Variable: ucar.nc2.Attribute findAttributeIgnoreCase(java.lang.String)>("units");

        if $r10 == null goto label17;

        $r11 = virtualinvoke $r10.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $r12 = new ucar.nc2.Attribute;

        $r13 = specialinvoke r5.<ucar.nc2.dataset.conv.AWIPSConvention: java.lang.String normalize(java.lang.String)>($r11);

        specialinvoke $r12.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r13);

        virtualinvoke r53.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r12);

     label17:
        goto label16;

     label18:
        return;

        catch ucar.ma2.InvalidRangeException from label09 to label10 with label11;
        catch java.io.IOException from label09 to label10 with label12;
    }

    private java.lang.String normalize(java.lang.String)
    {
        ucar.nc2.dataset.conv.AWIPSConvention r2;
        java.lang.String $r0, $r1, r3, r4;
        boolean $z0, $z1;

        r2 := @this: ucar.nc2.dataset.conv.AWIPSConvention;

        r3 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("/second");

        if $z0 == 0 goto label1;

        r3 = "1/sec";

     label1:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("degrees K");

        if $z1 == 0 goto label2;

        r4 = "K";

        goto label3;

     label2:
        $r0 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String substitute(java.lang.String,java.lang.String,java.lang.String)>(r3, "**", "^");

        $r1 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String remove(java.lang.String,int)>($r0, 41);

        r4 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String remove(java.lang.String,int)>($r1, 40);

     label3:
        return r4;
    }

    private java.util.List breakupLevels(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Variable) throws java.io.IOException
    {
        ucar.nc2.dataset.conv.AWIPSConvention r5;
        java.util.ArrayList $r0, $r13, r16;
        ucar.ma2.ArrayChar r3;
        java.util.StringTokenizer $r9;
        ucar.nc2.Variable r1;
        java.lang.String $r8, $r10, $r11, $r12, r17;
        ucar.ma2.ArrayChar$StringIterator $r4;
        boolean $z0, $z1, $z2, $z3;
        java.io.IOException $r15;
        ucar.ma2.Array $r2;
        ucar.nc2.Dimension $r7, $r14;
        ucar.nc2.dataset.NetcdfDataset r6;

        r5 := @this: ucar.nc2.dataset.conv.AWIPSConvention;

        r6 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: ucar.nc2.Variable;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

     label01:
        $r2 = virtualinvoke r1.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        r3 = (ucar.ma2.ArrayChar) $r2;

     label02:
        goto label04;

     label03:
        $r15 := @caughtexception;

        return $r0;

     label04:
        r16 = null;

        r17 = null;

        $r4 = virtualinvoke r3.<ucar.ma2.ArrayChar: ucar.ma2.ArrayChar$StringIterator getStringIterator()>();

     label05:
        $z2 = virtualinvoke $r4.<ucar.ma2.ArrayChar$StringIterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r8 = virtualinvoke $r4.<ucar.ma2.ArrayChar$StringIterator: java.lang.String next()>();

        $r9 = new java.util.StringTokenizer;

        specialinvoke $r9.<java.util.StringTokenizer: void <init>(java.lang.String)>($r8);

        $z0 = virtualinvoke $r9.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 != 0 goto label06;

        goto label05;

     label06:
        $r10 = virtualinvoke $r9.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r17);

        if $z1 != 0 goto label08;

        if r16 == null goto label07;

        $r14 = specialinvoke r5.<ucar.nc2.dataset.conv.AWIPSConvention: ucar.nc2.Dimension makeZCoordAxis(ucar.nc2.dataset.NetcdfDataset,java.util.List,java.lang.String)>(r6, r16, r17);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r14);

     label07:
        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r16 = $r13;

        r17 = $r11;

     label08:
        $z3 = virtualinvoke $r9.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z3 == 0 goto label09;

        $r12 = virtualinvoke $r9.<java.util.StringTokenizer: java.lang.String nextToken()>();

        interfaceinvoke r16.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label10;

     label09:
        interfaceinvoke r16.<java.util.List: boolean add(java.lang.Object)>("0");

     label10:
        goto label05;

     label11:
        if r16 == null goto label12;

        $r7 = specialinvoke r5.<ucar.nc2.dataset.conv.AWIPSConvention: ucar.nc2.Dimension makeZCoordAxis(ucar.nc2.dataset.NetcdfDataset,java.util.List,java.lang.String)>(r6, r16, r17);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r7);

     label12:
        return $r0;

        catch java.io.IOException from label01 to label02 with label03;
    }

    private ucar.nc2.Dimension makeZCoordAxis(ucar.nc2.dataset.NetcdfDataset, java.util.List, java.lang.String) throws java.io.IOException
    {
        ucar.nc2.dataset.conv.AWIPSConvention r1;
        java.util.Formatter $r19, $r20, $r22;
        ucar.nc2.dataset.CoordinateAxis1D $r13;
        boolean $z0;
        ucar.ma2.DataType $r14, $r31;
        ucar.nc2.Group $r10, $r28, $r39;
        java.util.List r0;
        ucar.nc2.Attribute $r23;
        java.lang.StringBuilder $r4, $r5, $r8, $r24, $r25, $r26, $r27, $r33, $r34, $r36;
        java.lang.Object[] $r18, $r21;
        int $i0, $i1, i2;
        ucar.nc2.Variable $r29;
        java.lang.String r2, $r3, $r7, $r15, $r16, $r17, $r35, r37, r38;
        ucar.ma2.Array $r30, $r32;
        java.lang.Object $r6;
        ucar.nc2.Dimension $r11, $r12, $r40;
        ucar.nc2.dataset.NetcdfDataset r9;

        r1 := @this: ucar.nc2.dataset.conv.AWIPSConvention;

        r9 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r0 := @parameter1: java.util.List;

        r2 := @parameter2: java.lang.String;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $r3 = specialinvoke r1.<ucar.nc2.dataset.conv.AWIPSConvention: java.lang.String makeZCoordName(java.lang.String)>(r2);

        if $i0 <= 1 goto label1;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r35 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (java.lang.String) $r6;

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        r37 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,char,java.lang.String)>(r37, 32, "-");

        $r10 = virtualinvoke r9.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r11 = virtualinvoke $r10.<ucar.nc2.Group: ucar.nc2.Dimension findDimension(java.lang.String)>(r37);

        if null == $r11 goto label3;

        $i1 = virtualinvoke $r11.<ucar.nc2.Dimension: int getLength()>();

        if $i1 != $i0 goto label3;

        $r28 = virtualinvoke r9.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r29 = virtualinvoke $r28.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>(r37);

        $r30 = virtualinvoke $r29.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r31 = virtualinvoke $r29.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r32 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array makeArray(ucar.ma2.DataType,java.util.List)>($r31, r0);

        $z0 = staticinvoke <ucar.ma2.MAMath: boolean isEqual(ucar.ma2.Array,ucar.ma2.Array)>($r30, $r32);

        if $z0 == 0 goto label3;

        return $r11;

     label3:
        r38 = r37;

        i2 = 1;

     label4:
        $r39 = virtualinvoke r9.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r40 = virtualinvoke $r39.<ucar.nc2.Group: ucar.nc2.Dimension findDimension(java.lang.String)>(r37);

        if $r40 == null goto label5;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        r37 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        i2 = i2 + 1;

        goto label4;

     label5:
        $r12 = new ucar.nc2.Dimension;

        specialinvoke $r12.<ucar.nc2.Dimension: void <init>(java.lang.String,int)>(r37, $i0);

        virtualinvoke r9.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r12);

        $r13 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r14 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r15 = specialinvoke r1.<ucar.nc2.dataset.conv.AWIPSConvention: java.lang.String makeUnitsName(java.lang.String)>(r2);

        $r16 = specialinvoke r1.<ucar.nc2.dataset.conv.AWIPSConvention: java.lang.String makeLongName(java.lang.String)>(r37);

        specialinvoke $r13.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r9, null, r37, $r14, r37, $r15, $r16);

        $r17 = specialinvoke r1.<ucar.nc2.dataset.conv.AWIPSConvention: java.lang.String getZisPositive(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.CoordinateAxis)>(r9, $r13);

        if null == $r17 goto label6;

        $r23 = new ucar.nc2.Attribute;

        specialinvoke $r23.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateZisPositive", $r17);

        virtualinvoke $r13.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r23);

     label6:
        virtualinvoke r9.<ucar.nc2.dataset.NetcdfDataset: void setValues(ucar.nc2.Variable,java.util.List)>($r13, r0);

        virtualinvoke r9.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r13);

        $r19 = r1.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        $r18 = newarray (java.lang.Object)[0];

        virtualinvoke $r19.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Created Z Coordinate Axis = ", $r18);

        $r20 = r1.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        virtualinvoke $r13.<ucar.nc2.dataset.CoordinateAxis: void getNameAndDimensions(java.util.Formatter,boolean,boolean)>($r20, 1, 0);

        $r22 = r1.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        $r21 = newarray (java.lang.Object)[0];

        virtualinvoke $r22.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("\n", $r21);

        return $r12;
    }

    private java.lang.String makeZCoordName(java.lang.String)
    {
        ucar.nc2.dataset.conv.AWIPSConvention r1;
        java.lang.String r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;

        r1 := @this: ucar.nc2.dataset.conv.AWIPSConvention;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("MB");

        if $z0 == 0 goto label01;

        return "PressureLevels";

     label01:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("K");

        if $z1 == 0 goto label02;

        return "PotTempLevels";

     label02:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("BL");

        if $z2 == 0 goto label03;

        return "BoundaryLayers";

     label03:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("FHAG");

        if $z3 == 0 goto label04;

        return "FixedHeightAboveGround";

     label04:
        $z4 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("FH");

        if $z4 == 0 goto label05;

        return "FixedHeight";

     label05:
        $z5 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("SFC");

        if $z5 == 0 goto label06;

        return "Surface";

     label06:
        $z6 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("MSL");

        if $z6 == 0 goto label07;

        return "MeanSeaLevel";

     label07:
        $z7 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("FRZ");

        if $z7 == 0 goto label08;

        return "FreezingLevel";

     label08:
        $z8 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("TROP");

        if $z8 == 0 goto label09;

        return "Tropopause";

     label09:
        $z9 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("MAXW");

        if $z9 == 0 goto label10;

        return "MaxWindLevel";

     label10:
        return r0;
    }

    private java.lang.String makeUnitsName(java.lang.String)
    {
        ucar.nc2.dataset.conv.AWIPSConvention r1;
        java.lang.String r0;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: ucar.nc2.dataset.conv.AWIPSConvention;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("MB");

        if $z0 == 0 goto label1;

        return "hPa";

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("BL");

        if $z1 == 0 goto label2;

        return "hPa";

     label2:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("FHAG");

        if $z2 == 0 goto label3;

        return "m";

     label3:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("FH");

        if $z3 == 0 goto label4;

        return "m";

     label4:
        return "";
    }

    private java.lang.String makeLongName(java.lang.String)
    {
        ucar.nc2.dataset.conv.AWIPSConvention r1;
        java.lang.String r0;
        boolean $z0, $z1;

        r1 := @this: ucar.nc2.dataset.conv.AWIPSConvention;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("PotTempLevels");

        if $z0 == 0 goto label1;

        return "Potential Temperature Level";

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("BoundaryLayers");

        if $z1 == 0 goto label2;

        return "BoundaryLayer hectoPascals above ground";

     label2:
        return r0;
    }

    private void createNewVariables(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Variable, java.util.List, ucar.nc2.Dimension) throws ucar.ma2.InvalidRangeException
    {
        ucar.nc2.dataset.conv.AWIPSConvention r28;
        java.util.Formatter $r30, $r31, $r33;
        int[] r3, $r4;
        boolean $z0;
        java.util.List $r1, r5;
        ucar.nc2.Attribute $r27;
        java.lang.StringBuilder $r9, $r11, $r12, $r14, $r21, $r22, $r23, $r25;
        java.lang.Object[] $r29, $r32;
        ucar.ma2.Section $r16;
        int $i0, $i1, $i2, $i3, i4;
        ucar.nc2.Variable r0, $r17;
        java.lang.String $r10, $r13, $r15, $r19, $r20, $r24, $r26;
        java.util.Iterator $r6;
        ucar.nc2.Dimension r2, r8;
        java.lang.Object $r7;
        ucar.nc2.dataset.NetcdfDataset r18;

        r28 := @this: ucar.nc2.dataset.conv.AWIPSConvention;

        r18 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r0 := @parameter1: ucar.nc2.Variable;

        r5 := @parameter2: java.util.List;

        r2 := @parameter3: ucar.nc2.Dimension;

        $r1 = virtualinvoke r0.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int indexOf(java.lang.Object)>(r2);

        $i1 = virtualinvoke r0.<ucar.nc2.Variable: int getRank()>();

        r3 = newarray (int)[$i1];

        $r4 = virtualinvoke r0.<ucar.nc2.Variable: int[] getShape()>();

        i4 = 0;

        $r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (ucar.nc2.Dimension) $r7;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r0.<ucar.nc2.Variable: java.lang.String getName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r13 = virtualinvoke r8.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        r3[$i0] = i4;

        $i2 = virtualinvoke r8.<ucar.nc2.Dimension: int getLength()>();

        $r4[$i0] = $i2;

        $r16 = new ucar.ma2.Section;

        specialinvoke $r16.<ucar.ma2.Section: void <init>(int[],int[])>(r3, $r4);

        $r17 = virtualinvoke r0.<ucar.nc2.Variable: ucar.nc2.Variable section(ucar.ma2.Section)>($r16);

        virtualinvoke $r17.<ucar.nc2.Variable: void setName(java.lang.String)>($r15);

        virtualinvoke $r17.<ucar.nc2.Variable: void setDimension(int,ucar.nc2.Dimension)>($i0, r8);

        $r19 = virtualinvoke r0.<ucar.nc2.Variable: java.lang.String getName()>();

        $r20 = virtualinvoke r18.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r0, "long_name", $r19);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r24 = virtualinvoke r8.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = new ucar.nc2.Attribute;

        specialinvoke $r27.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", $r26);

        virtualinvoke r18.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute addVariableAttribute(ucar.nc2.Variable,ucar.nc2.Attribute)>($r17, $r27);

        virtualinvoke r18.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r17);

        $r30 = r28.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        $r29 = newarray (java.lang.Object)[0];

        virtualinvoke $r30.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Created New Variable as section = ", $r29);

        $r31 = r28.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        virtualinvoke $r17.<ucar.nc2.Variable: void getNameAndDimensions(java.util.Formatter,boolean,boolean)>($r31, 1, 0);

        $r33 = r28.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        $r32 = newarray (java.lang.Object)[0];

        virtualinvoke $r33.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("\n", $r32);

        $i3 = virtualinvoke r8.<ucar.nc2.Dimension: int getLength()>();

        i4 = i4 + $i3;

        goto label1;

     label2:
        return;
    }

    protected ucar.nc2.constants.AxisType getAxisType(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.dataset.VariableEnhanced)
    {
        ucar.nc2.dataset.conv.AWIPSConvention r15;
        ucar.nc2.constants.AxisType $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14;
        ucar.nc2.Variable r1;
        java.lang.String $r2, $r4, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        ucar.nc2.dataset.VariableEnhanced r0;
        ucar.nc2.Dimension $r3;
        ucar.nc2.dataset.NetcdfDataset r16;

        r15 := @this: ucar.nc2.dataset.conv.AWIPSConvention;

        r16 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r0 := @parameter1: ucar.nc2.dataset.VariableEnhanced;

        r1 = (ucar.nc2.Variable) r0;

        $r2 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("x");

        if $z0 == 0 goto label1;

        $r14 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoX>;

        return $r14;

     label1:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lon");

        if $z1 == 0 goto label2;

        $r13 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        return $r13;

     label2:
        $z2 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("y");

        if $z2 == 0 goto label3;

        $r12 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoY>;

        return $r12;

     label3:
        $z3 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lat");

        if $z3 == 0 goto label4;

        $r11 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        return $r11;

     label4:
        $z4 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("record");

        if $z4 == 0 goto label5;

        $r10 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        return $r10;

     label5:
        $r3 = virtualinvoke r1.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        if $r3 == null goto label6;

        $r8 = virtualinvoke $r3.<ucar.nc2.Dimension: java.lang.String getName()>();

        $z7 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("record");

        if $z7 == 0 goto label6;

        $r9 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        return $r9;

     label6:
        $r4 = interfaceinvoke r0.<ucar.nc2.dataset.VariableEnhanced: java.lang.String getUnitsString()>();

        if $r4 == null goto label8;

        $z5 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>("millibar", $r4);

        if $z5 == 0 goto label7;

        $r7 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Pressure>;

        return $r7;

     label7:
        $z6 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>("m", $r4);

        if $z6 == 0 goto label8;

        $r6 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        return $r6;

     label8:
        $r5 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoZ>;

        return $r5;
    }

    protected void makeCoordinateTransforms(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.ProjectionCT $r1, $r3, $r6;
        ucar.nc2.dataset.CoordSysBuilder$VarProcess $r5;
        ucar.nc2.dataset.conv.AWIPSConvention r0;
        java.lang.String $r4;
        ucar.nc2.dataset.NetcdfDataset r2;

        r0 := @this: ucar.nc2.dataset.conv.AWIPSConvention;

        r2 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r1 = r0.<ucar.nc2.dataset.conv.AWIPSConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        if $r1 == null goto label1;

        $r3 = r0.<ucar.nc2.dataset.conv.AWIPSConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        $r4 = virtualinvoke $r3.<ucar.nc2.dataset.ProjectionCT: java.lang.String getName()>();

        $r5 = virtualinvoke r0.<ucar.nc2.dataset.conv.AWIPSConvention: ucar.nc2.dataset.CoordSysBuilder$VarProcess findVarProcess(java.lang.String)>($r4);

        $r5.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: boolean isCoordinateTransform> = 1;

        $r6 = r0.<ucar.nc2.dataset.conv.AWIPSConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        $r5.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: ucar.nc2.dataset.CoordinateTransform ct> = $r6;

     label1:
        specialinvoke r0.<ucar.nc2.dataset.CoordSysBuilder: void makeCoordinateTransforms(ucar.nc2.dataset.NetcdfDataset)>(r2);

        return;
    }

    private java.lang.String getZisPositive(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.dataset.CoordinateAxis)
    {
        ucar.nc2.dataset.conv.AWIPSConvention r4;
        ucar.nc2.dataset.CoordinateAxis r1;
        java.lang.String $r2, $r3, $r5;
        ucar.nc2.dataset.NetcdfDataset r0;
        boolean $z0, $z1, $z2;

        r4 := @this: ucar.nc2.dataset.conv.AWIPSConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: ucar.nc2.dataset.CoordinateAxis;

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r1, "positive", null);

        if null == $r2 goto label3;

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("up");

        if $z2 == 0 goto label1;

        $r5 = "up";

        goto label2;

     label1:
        $r5 = "down";

     label2:
        return $r5;

     label3:
        $r3 = virtualinvoke r1.<ucar.nc2.dataset.CoordinateAxis: java.lang.String getUnitsString()>();

        if $r3 == null goto label4;

        $z1 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>("millibar", $r3);

        if $z1 == 0 goto label4;

        return "down";

     label4:
        if $r3 == null goto label5;

        $z0 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>("m", $r3);

        if $z0 == 0 goto label5;

        return "up";

     label5:
        return null;
    }

    private ucar.nc2.dataset.ProjectionCT makeLCProjection(ucar.nc2.dataset.NetcdfDataset, java.lang.String) throws java.util.NoSuchElementException
    {
        ucar.nc2.dataset.ProjectionCT $r6;
        ucar.nc2.dataset.conv.AWIPSConvention r0;
        ucar.unidata.geoloc.ProjectionPointImpl r5;
        ucar.unidata.geoloc.projection.LambertConformal $r2;
        ucar.unidata.geoloc.LatLonPointImpl $r3;
        java.lang.String r7;
        ucar.nc2.dataset.NetcdfDataset r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        ucar.unidata.geoloc.ProjectionPoint $r4;

        r0 := @this: ucar.nc2.dataset.conv.AWIPSConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r7 := @parameter1: java.lang.String;

        $d0 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "centralLat");

        $d1 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "centralLon");

        $d2 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "rotation");

        $r2 = new ucar.unidata.geoloc.projection.LambertConformal;

        specialinvoke $r2.<ucar.unidata.geoloc.projection.LambertConformal: void <init>(double,double,double,double)>($d2, $d1, $d0, $d0);

        $d3 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "lat00");

        $d4 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "lon00");

        $r3 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r3.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d3, $d4);

        $r4 = virtualinvoke $r2.<ucar.unidata.geoloc.projection.LambertConformal: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint)>($r3);

        r5 = (ucar.unidata.geoloc.ProjectionPointImpl) $r4;

        $d5 = virtualinvoke r5.<ucar.unidata.geoloc.ProjectionPointImpl: double getX()>();

        r0.<ucar.nc2.dataset.conv.AWIPSConvention: double startx> = $d5;

        $d6 = virtualinvoke r5.<ucar.unidata.geoloc.ProjectionPointImpl: double getY()>();

        r0.<ucar.nc2.dataset.conv.AWIPSConvention: double starty> = $d6;

        $r6 = new ucar.nc2.dataset.ProjectionCT;

        specialinvoke $r6.<ucar.nc2.dataset.ProjectionCT: void <init>(java.lang.String,java.lang.String,ucar.unidata.geoloc.ProjectionImpl)>(r7, "FGDC", $r2);

        return $r6;
    }

    private ucar.nc2.dataset.ProjectionCT makeStereoProjection(ucar.nc2.dataset.NetcdfDataset, java.lang.String) throws java.util.NoSuchElementException
    {
        ucar.nc2.dataset.conv.AWIPSConvention r0;
        java.util.Formatter $r7, $r12, $r14;
        ucar.unidata.geoloc.ProjectionPointImpl r5, r10;
        ucar.unidata.geoloc.projection.Stereographic $r2;
        java.lang.Object[] $r6, $r11, $r13;
        java.lang.Double $r15;
        java.lang.String r17;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, d7, $d8, $d9, $d10, $d11, $d12, $d13;
        ucar.unidata.geoloc.ProjectionPoint $r4, $r9;
        ucar.nc2.dataset.ProjectionCT $r16;
        ucar.unidata.geoloc.LatLonPointImpl $r3, $r8;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.dataset.conv.AWIPSConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r17 := @parameter1: java.lang.String;

        $d0 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "centralLat");

        $d1 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "centralLon");

        specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "rotation");

        $d2 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "latDxDy");

        $d3 = staticinvoke <java.lang.Math: double toRadians(double)>($d2);

        $d4 = staticinvoke <java.lang.Math: double sin(double)>($d3);

        $d5 = staticinvoke <java.lang.Math: double abs(double)>($d4);

        $d6 = 1.0 + $d5;

        d7 = $d6 / 2.0;

        $r2 = new ucar.unidata.geoloc.projection.Stereographic;

        specialinvoke $r2.<ucar.unidata.geoloc.projection.Stereographic: void <init>(double,double,double)>($d0, $d1, d7);

        $d8 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "lat00");

        $d9 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "lon00");

        $r3 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r3.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d8, $d9);

        $r4 = virtualinvoke $r2.<ucar.unidata.geoloc.projection.Stereographic: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint)>($r3);

        r5 = (ucar.unidata.geoloc.ProjectionPointImpl) $r4;

        $d10 = virtualinvoke r5.<ucar.unidata.geoloc.ProjectionPointImpl: double getX()>();

        r0.<ucar.nc2.dataset.conv.AWIPSConvention: double startx> = $d10;

        $d11 = virtualinvoke r5.<ucar.unidata.geoloc.ProjectionPointImpl: double getY()>();

        r0.<ucar.nc2.dataset.conv.AWIPSConvention: double starty> = $d11;

        $r7 = r0.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r5;

        virtualinvoke $r7.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("---makeStereoProjection start at proj coord %s\n", $r6);

        $d12 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "latNxNy");

        $d13 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "lonNxNy");

        $r8 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r8.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d12, $d13);

        $r9 = virtualinvoke $r2.<ucar.unidata.geoloc.projection.Stereographic: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint)>($r8);

        r10 = (ucar.unidata.geoloc.ProjectionPointImpl) $r9;

        $r12 = r0.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r10;

        virtualinvoke $r12.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("                        end at proj coord %s\n", $r11);

        $r14 = r0.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        $r13 = newarray (java.lang.Object)[1];

        $r15 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d7);

        $r13[0] = $r15;

        virtualinvoke $r14.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("                        scale= %f\n", $r13);

        $r16 = new ucar.nc2.dataset.ProjectionCT;

        specialinvoke $r16.<ucar.nc2.dataset.ProjectionCT: void <init>(java.lang.String,java.lang.String,ucar.unidata.geoloc.ProjectionImpl)>(r17, "FGDC", $r2);

        return $r16;
    }

    private ucar.nc2.dataset.CoordinateAxis makeXCoordAxis(ucar.nc2.dataset.NetcdfDataset, int, java.lang.String)
    {
        java.lang.Object[] $r5, $r8;
        ucar.nc2.dataset.conv.AWIPSConvention r0;
        ucar.ma2.DataType $r4;
        java.util.Formatter $r6, $r7, $r9;
        ucar.nc2.dataset.CoordinateAxis1D $r2;
        int i0;
        java.lang.String r3;
        ucar.nc2.dataset.NetcdfDataset r1;
        double $d0, $d1;

        r0 := @this: ucar.nc2.dataset.conv.AWIPSConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        i0 := @parameter1: int;

        r3 := @parameter2: java.lang.String;

        $d0 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "dxKm");

        $r2 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        specialinvoke $r2.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r1, null, r3, $r4, r3, "km", "x on projection");

        $d1 = r0.<ucar.nc2.dataset.conv.AWIPSConvention: double startx>;

        virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: void setValues(ucar.nc2.Variable,int,double,double)>($r2, i0, $d1, $d0);

        $r6 = r0.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        $r5 = newarray (java.lang.Object)[0];

        virtualinvoke $r6.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Created X Coordinate Axis = ", $r5);

        $r7 = r0.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        virtualinvoke $r2.<ucar.nc2.dataset.CoordinateAxis: void getNameAndDimensions(java.util.Formatter,boolean,boolean)>($r7, 1, 0);

        $r9 = r0.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        $r8 = newarray (java.lang.Object)[0];

        virtualinvoke $r9.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("\n", $r8);

        return $r2;
    }

    private ucar.nc2.dataset.CoordinateAxis makeYCoordAxis(ucar.nc2.dataset.NetcdfDataset, int, java.lang.String)
    {
        java.lang.Object[] $r5, $r8;
        ucar.nc2.dataset.conv.AWIPSConvention r0;
        ucar.ma2.DataType $r4;
        java.util.Formatter $r6, $r7, $r9;
        ucar.nc2.dataset.CoordinateAxis1D $r2;
        int i0;
        java.lang.String r3;
        ucar.nc2.dataset.NetcdfDataset r1;
        double $d0, $d1;

        r0 := @this: ucar.nc2.dataset.conv.AWIPSConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        i0 := @parameter1: int;

        r3 := @parameter2: java.lang.String;

        $d0 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "dyKm");

        $r2 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        specialinvoke $r2.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r1, null, r3, $r4, r3, "km", "y on projection");

        $d1 = r0.<ucar.nc2.dataset.conv.AWIPSConvention: double starty>;

        virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: void setValues(ucar.nc2.Variable,int,double,double)>($r2, i0, $d1, $d0);

        $r6 = r0.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        $r5 = newarray (java.lang.Object)[0];

        virtualinvoke $r6.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Created Y Coordinate Axis = ", $r5);

        $r7 = r0.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        virtualinvoke $r2.<ucar.nc2.dataset.CoordinateAxis: void getNameAndDimensions(java.util.Formatter,boolean,boolean)>($r7, 1, 0);

        $r9 = r0.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        $r8 = newarray (java.lang.Object)[0];

        virtualinvoke $r9.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("\n", $r8);

        return $r2;
    }

    private ucar.nc2.dataset.CoordinateAxis makeLonCoordAxis(ucar.nc2.dataset.NetcdfDataset, int, java.lang.String)
    {
        java.lang.Object[] $r8, $r13;
        java.lang.Double $r10, $r11;
        ucar.nc2.dataset.conv.AWIPSConvention r0;
        java.util.Formatter $r9, $r12, $r14;
        ucar.nc2.dataset.CoordinateAxis1D $r2;
        ucar.nc2.constants.AxisType $r6;
        int i0;
        java.lang.String r3, $r7;
        double $d0, $d1, $d2, $d3, $d4, d5;
        boolean $z0, $z1, $z2;
        ucar.ma2.DataType $r4;
        ucar.nc2.Attribute $r5;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.dataset.conv.AWIPSConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        i0 := @parameter1: int;

        r3 := @parameter2: java.lang.String;

        $d0 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "xMin");

        $d1 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "xMax");

        $d2 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "dx");

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        if $z1 != 0 goto label1;

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        if $z2 == 0 goto label2;

     label1:
        return null;

     label2:
        $r2 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        specialinvoke $r2.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r1, null, r3, $r4, r3, "degrees_east", "longitude");

        virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: void setValues(ucar.nc2.Variable,int,double,double)>($r2, i0, $d0, $d2);

        $r5 = new ucar.nc2.Attribute;

        $r6 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r7 = virtualinvoke $r6.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r5.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r7);

        virtualinvoke $r2.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r5);

        $d3 = (double) i0;

        $d4 = $d2 * $d3;

        d5 = $d0 + $d4;

        $r9 = r0.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        $r8 = newarray (java.lang.Object)[2];

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d5);

        $r8[0] = $r10;

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r8[1] = $r11;

        virtualinvoke $r9.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Created Lon Coordinate Axis (max calc= %f shoule be = %f)\n", $r8);

        $r12 = r0.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        virtualinvoke $r2.<ucar.nc2.dataset.CoordinateAxis: void getNameAndDimensions(java.util.Formatter,boolean,boolean)>($r12, 1, 0);

        $r14 = r0.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        $r13 = newarray (java.lang.Object)[0];

        virtualinvoke $r14.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("\n", $r13);

        return $r2;
    }

    private ucar.nc2.dataset.CoordinateAxis makeLatCoordAxis(ucar.nc2.dataset.NetcdfDataset, int, java.lang.String)
    {
        java.lang.Object[] $r8, $r13;
        java.lang.Double $r10, $r11;
        ucar.nc2.dataset.conv.AWIPSConvention r0;
        java.util.Formatter $r9, $r12, $r14;
        ucar.nc2.dataset.CoordinateAxis1D $r2;
        ucar.nc2.constants.AxisType $r6;
        int i0;
        java.lang.String r3, $r7;
        double $d0, $d1, $d2, $d3, $d4, d5;
        boolean $z0, $z1, $z2;
        ucar.ma2.DataType $r4;
        ucar.nc2.Attribute $r5;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.dataset.conv.AWIPSConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        i0 := @parameter1: int;

        r3 := @parameter2: java.lang.String;

        $d0 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "yMin");

        $d1 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "yMax");

        $d2 = specialinvoke r0.<ucar.nc2.dataset.conv.AWIPSConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r1, "dy");

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        if $z1 != 0 goto label1;

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        if $z2 == 0 goto label2;

     label1:
        return null;

     label2:
        $r2 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        specialinvoke $r2.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r1, null, r3, $r4, r3, "degrees_north", "latitude");

        virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: void setValues(ucar.nc2.Variable,int,double,double)>($r2, i0, $d0, $d2);

        $r5 = new ucar.nc2.Attribute;

        $r6 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r7 = virtualinvoke $r6.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r5.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r7);

        virtualinvoke $r2.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r5);

        $d3 = (double) i0;

        $d4 = $d2 * $d3;

        d5 = $d0 + $d4;

        $r9 = r0.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        $r8 = newarray (java.lang.Object)[2];

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d5);

        $r8[0] = $r10;

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r8[1] = $r11;

        virtualinvoke $r9.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Created Lat Coordinate Axis (max calc= %f should be = %f)\n", $r8);

        $r12 = r0.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        virtualinvoke $r2.<ucar.nc2.dataset.CoordinateAxis: void getNameAndDimensions(java.util.Formatter,boolean,boolean)>($r12, 1, 0);

        $r14 = r0.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        $r13 = newarray (java.lang.Object)[0];

        virtualinvoke $r14.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("\n", $r13);

        return $r2;
    }

    private ucar.nc2.dataset.CoordinateAxis makeTimeCoordAxis(ucar.nc2.dataset.NetcdfDataset)
    {
        java.lang.Object[] $r7, $r10, $r15, $r18;
        ucar.nc2.dataset.conv.AWIPSConvention r4;
        long $l1;
        java.util.Formatter $r8, $r9, $r11, $r16, $r19;
        ucar.nc2.dataset.CoordinateAxis $r12;
        ucar.nc2.dataset.CoordinateAxis1D $r5;
        int[] $r13, $r14;
        int $i0, i2, $i3;
        ucar.nc2.Variable $r1;
        java.lang.String $r22, $r23;
        ucar.ma2.DataType $r6;
        java.io.IOException $r20;
        ucar.ma2.Array $r3, r21;
        ucar.ma2.InvalidRangeException $r17;
        ucar.nc2.Dimension $r2;
        ucar.nc2.dataset.NetcdfDataset r0;

        r4 := @this: ucar.nc2.dataset.conv.AWIPSConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("valtimeMINUSreftime");

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>("record");

     label1:
        $r3 = virtualinvoke $r1.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        r21 = $r3;

     label2:
        goto label4;

     label3:
        $r20 := @caughtexception;

        return null;

     label4:
        $i0 = virtualinvoke $r2.<ucar.nc2.Dimension: int getLength()>();

        $l1 = virtualinvoke $r3.<ucar.ma2.Array: long getSize()>();

        i2 = (int) $l1;

        if $i0 == i2 goto label8;

     label5:
        $r13 = newarray (int)[1];

        $r13[0] = 0;

        $r14 = newarray (int)[1];

        $i3 = virtualinvoke $r2.<ucar.nc2.Dimension: int getLength()>();

        $r14[0] = $i3;

        r21 = virtualinvoke $r3.<ucar.ma2.Array: ucar.ma2.Array sectionNoReduce(int[],int[],int[])>($r13, $r14, null);

        $r16 = r4.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        $r15 = newarray (java.lang.Object)[0];

        virtualinvoke $r16.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" corrected the TimeCoordAxis length\n", $r15);

     label6:
        goto label8;

     label7:
        $r17 := @caughtexception;

        $r19 = r4.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        $r18 = newarray (java.lang.Object)[0];

        virtualinvoke $r19.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("makeTimeCoordAxis InvalidRangeException\n", $r18);

     label8:
        $r22 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String getLocation()>();

        $r23 = specialinvoke r4.<ucar.nc2.dataset.conv.AWIPSConvention: java.lang.String makeTimeUnitFromFilename(java.lang.String)>($r22);

        if $r23 != null goto label9;

        $r12 = specialinvoke r4.<ucar.nc2.dataset.conv.AWIPSConvention: ucar.nc2.dataset.CoordinateAxis makeTimeCoordAxisFromReference(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable,ucar.ma2.Array)>(r0, $r1, r21);

        return $r12;

     label9:
        $r5 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r6 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        specialinvoke $r5.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r0, null, "timeCoord", $r6, "record", $r23, "synthesized time coordinate from valtimeMINUSreftime and filename YYYYMMDD_HHMM");

        virtualinvoke $r5.<ucar.nc2.dataset.CoordinateAxis1D: void setCachedData(ucar.ma2.Array,boolean)>(r21, 1);

        $r8 = r4.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        $r7 = newarray (java.lang.Object)[0];

        virtualinvoke $r8.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Created Time Coordinate Axis = ", $r7);

        $r9 = r4.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        virtualinvoke $r5.<ucar.nc2.dataset.CoordinateAxis1D: void getNameAndDimensions(java.util.Formatter,boolean,boolean)>($r9, 1, 0);

        $r11 = r4.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        $r10 = newarray (java.lang.Object)[0];

        virtualinvoke $r11.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("\n", $r10);

        return $r5;

        catch java.io.IOException from label1 to label2 with label3;
        catch ucar.ma2.InvalidRangeException from label5 to label6 with label7;
    }

    private java.lang.String makeTimeUnitFromFilename(java.lang.String)
    {
        ucar.nc2.dataset.conv.AWIPSConvention r19;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r0, $r1, $r2, $r3, $r4, $r5, $r18, r20, r21;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;

        r19 := @this: ucar.nc2.dataset.conv.AWIPSConvention;

        r20 := @parameter0: java.lang.String;

        $r0 = virtualinvoke r20.<java.lang.String: java.lang.String replace(char,char)>(92, 47);

        $i0 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(int)>(47);

        i5 = $i0;

        if $i0 >= 0 goto label1;

        i5 = 0;

     label1:
        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(int,int)>(46, i5);

        if $i1 >= 0 goto label2;

        $i4 = i5 + 1;

        r21 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i4);

        goto label3;

     label2:
        $i2 = i5 + 1;

        r21 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i1);

     label3:
        $i3 = virtualinvoke r21.<java.lang.String: int length()>();

        if $i3 == 13 goto label4;

        return null;

     label4:
        $r1 = virtualinvoke r21.<java.lang.String: java.lang.String substring(int,int)>(0, 4);

        $r2 = virtualinvoke r21.<java.lang.String: java.lang.String substring(int,int)>(4, 6);

        $r3 = virtualinvoke r21.<java.lang.String: java.lang.String substring(int,int)>(6, 8);

        $r4 = virtualinvoke r21.<java.lang.String: java.lang.String substring(int,int)>(9, 11);

        $r5 = virtualinvoke r21.<java.lang.String: java.lang.String substring(int,int)>(11, 13);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("seconds since ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":0");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;
    }

    private ucar.nc2.dataset.CoordinateAxis makeTimeCoordAxisFromReference(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Variable, ucar.ma2.Array)
    {
        java.lang.Object[] $r15, $r18;
        ucar.nc2.dataset.conv.AWIPSConvention r11;
        java.util.Formatter $r16, $r17, $r19;
        int[] $r6;
        ucar.nc2.dataset.CoordinateAxis1D $r13;
        ucar.nc2.Variable $r1, r21;
        java.lang.String $r10, $r12;
        double $d0, $d1, $d2;
        boolean $z0;
        ucar.ma2.IndexIterator $r8, $r9;
        ucar.ma2.DataType $r14;
        java.io.IOException $r20;
        ucar.ma2.Array $r2, r4, $r7;
        ucar.ma2.Index $r3;
        java.lang.Class $r5;
        ucar.nc2.dataset.NetcdfDataset r0;

        r11 := @this: ucar.nc2.dataset.conv.AWIPSConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r21 := @parameter1: ucar.nc2.Variable;

        r4 := @parameter2: ucar.ma2.Array;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("reftime");

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r1.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r3 = virtualinvoke $r2.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $d0 = virtualinvoke $r2.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r3);

     label2:
        goto label4;

     label3:
        $r20 := @caughtexception;

        return null;

     label4:
        $r5 = <java.lang.Double: java.lang.Class TYPE>;

        $r6 = virtualinvoke r4.<ucar.ma2.Array: int[] getShape()>();

        $r7 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[])>($r5, $r6);

        $r8 = virtualinvoke $r7.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        $r9 = virtualinvoke r4.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

     label5:
        $z0 = interfaceinvoke $r9.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $d1 = interfaceinvoke $r9.<ucar.ma2.IndexIterator: double getDoubleNext()>();

        $d2 = $d1 + $d0;

        interfaceinvoke $r8.<ucar.ma2.IndexIterator: void setDoubleNext(double)>($d2);

        goto label5;

     label6:
        $r10 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>($r1, "units", "seconds since 1970-1-1 00:00:00");

        $r12 = specialinvoke r11.<ucar.nc2.dataset.conv.AWIPSConvention: java.lang.String normalize(java.lang.String)>($r10);

        $r13 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r14 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        specialinvoke $r13.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r0, null, "timeCoord", $r14, "record", $r12, "synthesized time coordinate from reftime, valtimeMINUSreftime");

        virtualinvoke $r13.<ucar.nc2.dataset.CoordinateAxis1D: void setCachedData(ucar.ma2.Array,boolean)>($r7, 1);

        $r16 = r11.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        $r15 = newarray (java.lang.Object)[0];

        virtualinvoke $r16.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Created Time Coordinate Axis From Reference = ", $r15);

        $r17 = r11.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        virtualinvoke $r13.<ucar.nc2.dataset.CoordinateAxis1D: void getNameAndDimensions(java.util.Formatter,boolean,boolean)>($r17, 1, 0);

        $r19 = r11.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        $r18 = newarray (java.lang.Object)[0];

        virtualinvoke $r19.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("\n", $r18);

        return $r13;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset, java.lang.String)
    {
        java.lang.Object[] $r5;
        ucar.nc2.dataset.conv.AWIPSConvention r4;
        java.util.Formatter $r6;
        ucar.nc2.Attribute $r2;
        java.lang.String r1;
        java.lang.Number $r3;
        ucar.nc2.dataset.NetcdfDataset r0;
        double $d0;

        r4 := @this: ucar.nc2.dataset.conv.AWIPSConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>(r1);

        if $r2 != null goto label1;

        $r6 = r4.<ucar.nc2.dataset.conv.AWIPSConvention: java.util.Formatter parseInfo>;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r1;

        virtualinvoke $r6.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("ERROR cant find attribute= %s\n", $r5);

        return #NaN;

     label1:
        $r3 = virtualinvoke $r2.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $d0 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        return $d0;
    }

    public static void <clinit>()
    {
        <ucar.nc2.dataset.conv.AWIPSConvention: boolean debugBreakup> = 0;

        <ucar.nc2.dataset.conv.AWIPSConvention: boolean debugProj> = 0;

        return;
    }
}
