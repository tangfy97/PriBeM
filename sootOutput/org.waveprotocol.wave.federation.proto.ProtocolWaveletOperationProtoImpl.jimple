public final class org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl extends java.lang.Object implements org.waveprotocol.wave.federation.ProtocolWaveletOperation, org.waveprotocol.wave.communication.gson.GsonSerializable, org.waveprotocol.wave.communication.proto.ProtoWrapper
{
    private org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation proto;
    private org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder protoBuilder;

    public void <init>()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder protoBuilder> = $r1;

        return;
    }

    public void <init>(org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation)
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation r2;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder protoBuilder> = $r1;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation proto> = r2;

        return;
    }

    public void <init>(org.waveprotocol.wave.federation.ProtocolWaveletOperation)
    {
        org.waveprotocol.wave.federation.ProtocolWaveletOperation r2;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolWaveletOperation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder protoBuilder> = $r1;

        virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void copyFrom(org.waveprotocol.wave.federation.ProtocolWaveletOperation)>(r2);

        return;
    }

    public org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation getPB()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation proto>;

        return $r1;
    }

    public void setPB(org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation)
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation proto> = r1;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder protoBuilder> = null;

        return;
    }

    public void copyFrom(org.waveprotocol.wave.federation.ProtocolWaveletOperation)
    {
        org.waveprotocol.wave.federation.ProtocolWaveletOperation r0;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r1;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl$MutateDocumentProtoImpl $r2;
        org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument $r3;
        java.lang.String $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4;

        r1 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        r0 := @parameter0: org.waveprotocol.wave.federation.ProtocolWaveletOperation;

        $z0 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: boolean hasAddParticipant()>();

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: java.lang.String getAddParticipant()>();

        virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void setAddParticipant(java.lang.String)>($r5);

        goto label2;

     label1:
        virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void clearAddParticipant()>();

     label2:
        $z1 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: boolean hasRemoveParticipant()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: java.lang.String getRemoveParticipant()>();

        virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void setRemoveParticipant(java.lang.String)>($r4);

        goto label4;

     label3:
        virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void clearRemoveParticipant()>();

     label4:
        $z2 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: boolean hasMutateDocument()>();

        if $z2 == 0 goto label5;

        $r2 = new org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl$MutateDocumentProtoImpl;

        $r3 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument getMutateDocument()>();

        specialinvoke $r2.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl$MutateDocumentProtoImpl: void <init>(org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument)>($r3);

        virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void setMutateDocument(org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument)>($r2);

        goto label6;

     label5:
        virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void clearMutateDocument()>();

     label6:
        $z3 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: boolean hasNoOp()>();

        if $z3 == 0 goto label7;

        $z4 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletOperation: boolean getNoOp()>();

        virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void setNoOp(boolean)>($z4);

        goto label8;

     label7:
        virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void clearNoOp()>();

     label8:
        return;
    }

    public boolean hasAddParticipant()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation proto>;

        $z0 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation: boolean hasAddParticipant()>();

        return $z0;
    }

    public void clearAddParticipant()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder clearAddParticipant()>();

        return;
    }

    public java.lang.String getAddParticipant()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        java.lang.String $r2;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation: java.lang.String getAddParticipant()>();

        return $r2;
    }

    public void setAddParticipant(java.lang.String)
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        java.lang.String r1;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder $r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder setAddParticipant(java.lang.String)>(r1);

        return;
    }

    public boolean hasRemoveParticipant()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation proto>;

        $z0 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation: boolean hasRemoveParticipant()>();

        return $z0;
    }

    public void clearRemoveParticipant()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder clearRemoveParticipant()>();

        return;
    }

    public java.lang.String getRemoveParticipant()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        java.lang.String $r2;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation: java.lang.String getRemoveParticipant()>();

        return $r2;
    }

    public void setRemoveParticipant(java.lang.String)
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        java.lang.String r1;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder $r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder setRemoveParticipant(java.lang.String)>(r1);

        return;
    }

    public boolean hasMutateDocument()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation proto>;

        $z0 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation: boolean hasMutateDocument()>();

        return $z0;
    }

    public void clearMutateDocument()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder clearMutateDocument()>();

        return;
    }

    public org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl$MutateDocumentProtoImpl getMutateDocument()
    {
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$MutateDocument $r3;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl$MutateDocumentProtoImpl $r1;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation $r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void switchToProto()>();

        $r1 = new org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl$MutateDocumentProtoImpl;

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation proto>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$MutateDocument getMutateDocument()>();

        specialinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl$MutateDocumentProtoImpl: void <init>(org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$MutateDocument)>($r3);

        return $r1;
    }

    public void setMutateDocument(org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$MutateDocument $r5;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument r2;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl$MutateDocumentProtoImpl $r4;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder $r1, $r3;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder clearMutateDocument()>();

        $r3 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder protoBuilder>;

        $r4 = specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl$MutateDocumentProtoImpl getOrCreateMutateDocumentProtoImpl(org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument)>(r2);

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl$MutateDocumentProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$MutateDocument getPB()>();

        virtualinvoke $r3.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder setMutateDocument(org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$MutateDocument)>($r5);

        return;
    }

    public boolean hasNoOp()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation proto>;

        $z0 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation: boolean hasNoOp()>();

        return $z0;
    }

    public void clearNoOp()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder clearNoOp()>();

        return;
    }

    public boolean getNoOp()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation proto>;

        $z0 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation: boolean getNoOp()>();

        return $z0;
    }

    public void setNoOp(boolean)
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder $r1;
        boolean z0;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder setNoOp(boolean)>(z0);

        return;
    }

    private org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl$MutateDocumentProtoImpl getOrCreateMutateDocumentProtoImpl(org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument)
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r3;
        org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument r0;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl$MutateDocumentProtoImpl $r1, $r2;
        boolean $z0;

        r3 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        r0 := @parameter0: org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument;

        $z0 = r0 instanceof org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl$MutateDocumentProtoImpl;

        if $z0 == 0 goto label1;

        $r2 = (org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl$MutateDocumentProtoImpl) r0;

        return $r2;

     label1:
        $r1 = new org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl$MutateDocumentProtoImpl;

        specialinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl$MutateDocumentProtoImpl: void <init>()>();

        virtualinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl$MutateDocumentProtoImpl: void copyFrom(org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument)>(r0);

        return $r1;
    }

    private org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl getOrCreateProtocolDocumentOperationProtoImpl(org.waveprotocol.wave.federation.ProtocolDocumentOperation)
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl $r1, $r2;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation r0;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r3;
        boolean $z0;

        r3 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        r0 := @parameter0: org.waveprotocol.wave.federation.ProtocolDocumentOperation;

        $z0 = r0 instanceof org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl;

        if $z0 == 0 goto label1;

        $r2 = (org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl) r0;

        return $r2;

     label1:
        $r1 = new org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl;

        specialinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl: void <init>()>();

        virtualinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl: void copyFrom(org.waveprotocol.wave.federation.ProtocolDocumentOperation)>(r0);

        return $r1;
    }

    private void switchToProto()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation $r1, $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder $r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation proto>;

        if $r1 != null goto label1;

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder protoBuilder>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation build()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation proto> = $r3;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder protoBuilder> = null;

     label1:
        return;
    }

    private void switchToProtoBuilder()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation $r2, $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder $r1, $r4;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder protoBuilder>;

        if $r1 != null goto label3;

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation proto>;

        if $r2 != null goto label1;

        $r4 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder newBuilder()>();

        goto label2;

     label1:
        $r3 = r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation proto>;

        $r4 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder newBuilder(org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation)>($r3);

     label2:
        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder protoBuilder> = $r4;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation proto> = null;

     label3:
        return;
    }

    private void invalidateAll()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation$Builder protoBuilder> = $r1;

        return;
    }

    public com.google.gson.JsonElement toGson(org.waveprotocol.wave.communication.json.RawStringData, com.google.gson.Gson)
    {
        com.google.gson.JsonObject $r0;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r1;
        com.google.gson.JsonElement $r7;
        com.google.gson.Gson r6;
        java.lang.Boolean $r3;
        com.google.gson.JsonPrimitive $r2, $r8, $r10;
        java.lang.String $r9, $r11;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl$MutateDocumentProtoImpl $r4;
        org.waveprotocol.wave.communication.json.RawStringData r5;

        r1 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        r5 := @parameter0: org.waveprotocol.wave.communication.json.RawStringData;

        r6 := @parameter1: com.google.gson.Gson;

        $r0 = new com.google.gson.JsonObject;

        specialinvoke $r0.<com.google.gson.JsonObject: void <init>()>();

        $z0 = virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: boolean hasAddParticipant()>();

        if $z0 == 0 goto label1;

        $r10 = new com.google.gson.JsonPrimitive;

        $r11 = virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: java.lang.String getAddParticipant()>();

        specialinvoke $r10.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>($r11);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("1", $r10);

     label1:
        $z1 = virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: boolean hasRemoveParticipant()>();

        if $z1 == 0 goto label2;

        $r8 = new com.google.gson.JsonPrimitive;

        $r9 = virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: java.lang.String getRemoveParticipant()>();

        specialinvoke $r8.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>($r9);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("2", $r8);

     label2:
        $z2 = virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: boolean hasMutateDocument()>();

        if $z2 == 0 goto label3;

        $r4 = virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl$MutateDocumentProtoImpl getMutateDocument()>();

        $r7 = interfaceinvoke $r4.<org.waveprotocol.wave.communication.gson.GsonSerializable: com.google.gson.JsonElement toGson(org.waveprotocol.wave.communication.json.RawStringData,com.google.gson.Gson)>(r5, r6);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("3", $r7);

     label3:
        $z3 = virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: boolean hasNoOp()>();

        if $z3 == 0 goto label4;

        $r2 = new com.google.gson.JsonPrimitive;

        $z4 = virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: boolean getNoOp()>();

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        specialinvoke $r2.<com.google.gson.JsonPrimitive: void <init>(java.lang.Boolean)>($r3);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("4", $r2);

     label4:
        return $r0;
    }

    public void fromGson(com.google.gson.JsonElement, com.google.gson.Gson, org.waveprotocol.wave.communication.json.RawStringData) throws org.waveprotocol.wave.communication.gson.GsonException
    {
        com.google.gson.JsonObject $r1;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r2;
        com.google.gson.JsonElement r0, $r3, $r4, $r8, $r10;
        com.google.gson.Gson r6;
        java.lang.String $r9, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl$MutateDocumentProtoImpl $r5;
        org.waveprotocol.wave.communication.json.RawStringData r7;

        r2 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        r0 := @parameter0: com.google.gson.JsonElement;

        r6 := @parameter1: com.google.gson.Gson;

        r7 := @parameter2: org.waveprotocol.wave.communication.json.RawStringData;

        $r1 = virtualinvoke r0.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>();

        specialinvoke r2.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void invalidateAll()>();

        $z0 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("1");

        if $z0 == 0 goto label1;

        $r10 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("1");

        $z5 = virtualinvoke $r10.<com.google.gson.JsonElement: boolean isJsonNull()>();

        if $z5 != 0 goto label1;

        $r11 = virtualinvoke $r10.<com.google.gson.JsonElement: java.lang.String getAsString()>();

        virtualinvoke r2.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void setAddParticipant(java.lang.String)>($r11);

     label1:
        $z6 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("2");

        if $z6 == 0 goto label2;

        $r8 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("2");

        $z4 = virtualinvoke $r8.<com.google.gson.JsonElement: boolean isJsonNull()>();

        if $z4 != 0 goto label2;

        $r9 = virtualinvoke $r8.<com.google.gson.JsonElement: java.lang.String getAsString()>();

        virtualinvoke r2.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void setRemoveParticipant(java.lang.String)>($r9);

     label2:
        $z7 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("3");

        if $z7 == 0 goto label3;

        $r4 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("3");

        $z3 = virtualinvoke $r4.<com.google.gson.JsonElement: boolean isJsonNull()>();

        if $z3 != 0 goto label3;

        $r5 = new org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl$MutateDocumentProtoImpl;

        specialinvoke $r5.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl$MutateDocumentProtoImpl: void <init>()>();

        staticinvoke <org.waveprotocol.wave.communication.gson.GsonUtil: void extractJsonObject(org.waveprotocol.wave.communication.gson.GsonSerializable,com.google.gson.JsonElement,com.google.gson.Gson,org.waveprotocol.wave.communication.json.RawStringData)>($r5, $r4, r6, r7);

        virtualinvoke r2.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void setMutateDocument(org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument)>($r5);

     label3:
        $z8 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("4");

        if $z8 == 0 goto label4;

        $r3 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("4");

        $z1 = virtualinvoke $r3.<com.google.gson.JsonElement: boolean isJsonNull()>();

        if $z1 != 0 goto label4;

        $z2 = virtualinvoke $r3.<com.google.gson.JsonElement: boolean getAsBoolean()>();

        virtualinvoke r2.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void setNoOp(boolean)>($z2);

     label4:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0, $r3;
        java.lang.Object r1;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation $r2, $r4;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation getPB()>();

        $r3 = (org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl) r1;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation getPB()>();

        $z1 = virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation: boolean equals(java.lang.Object)>($r4);

        return $z1;

     label2:
        return 0;
    }

    public boolean isEqualTo(java.lang.Object)
    {
        org.waveprotocol.wave.federation.ProtocolWaveletOperation $r2;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = r1 instanceof org.waveprotocol.wave.federation.ProtocolWaveletOperation;

        if $z1 == 0 goto label2;

        $r2 = (org.waveprotocol.wave.federation.ProtocolWaveletOperation) r1;

        $z2 = staticinvoke <org.waveprotocol.wave.federation.ProtocolWaveletOperationUtil: boolean isEqual(org.waveprotocol.wave.federation.ProtocolWaveletOperation,org.waveprotocol.wave.federation.ProtocolWaveletOperation)>(r0, $r2);

        return $z2;

     label2:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation getPB()>();

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        java.lang.String $r2;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation getPB()>();

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation: java.lang.String toString()>();

        return $r2;
    }

    public volatile org.waveprotocol.wave.federation.ProtocolWaveletOperation$MutateDocument getMutateDocument()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl$MutateDocumentProtoImpl $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl$MutateDocumentProtoImpl getMutateDocument()>();

        return $r1;
    }

    public volatile com.google.protobuf.MessageLite getPB()
    {
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation getPB()>();

        return $r1;
    }

    public volatile void setPB(com.google.protobuf.MessageLite)
    {
        com.google.protobuf.MessageLite r1;
        org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation $r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl;

        r1 := @parameter0: com.google.protobuf.MessageLite;

        $r2 = (org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation) r1;

        virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolWaveletOperationProtoImpl: void setPB(org.waveprotocol.wave.federation.Proto$ProtocolWaveletOperation)>($r2);

        return;
    }
}
