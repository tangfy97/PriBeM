class org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture extends java.lang.Object implements java.util.concurrent.Future
{
    final org.eclipse.jetty.websocket.WebSocket _websocket;
    final java.net.URI _uri;
    final org.eclipse.jetty.websocket.WebSocketClient _client;
    final java.util.concurrent.CountDownLatch _done;
    java.nio.channels.ByteChannel _channel;
    org.eclipse.jetty.websocket.WebSocketConnection _connection;
    java.lang.Throwable _exception;

    private void <init>(org.eclipse.jetty.websocket.WebSocket, java.net.URI, org.eclipse.jetty.websocket.WebSocketClient, java.nio.channels.ByteChannel)
    {
        java.util.concurrent.CountDownLatch $r1;
        org.eclipse.jetty.websocket.WebSocketClient r4;
        org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture r0;
        java.nio.channels.ByteChannel r5;
        java.net.URI r3;
        org.eclipse.jetty.websocket.WebSocket r2;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture;

        r2 := @parameter0: org.eclipse.jetty.websocket.WebSocket;

        r3 := @parameter1: java.net.URI;

        r4 := @parameter2: org.eclipse.jetty.websocket.WebSocketClient;

        r5 := @parameter3: java.nio.channels.ByteChannel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r1.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.util.concurrent.CountDownLatch _done> = $r1;

        r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocket _websocket> = r2;

        r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.net.URI _uri> = r3;

        r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocketClient _client> = r4;

        r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.nio.channels.ByteChannel _channel> = r5;

        return;
    }

    public void onConnection(org.eclipse.jetty.websocket.WebSocketConnection)
    {
        java.lang.Throwable $r17, $r19;
        org.eclipse.jetty.websocket.WebSocketClient $r1, $r5, $r7;
        int $i0, $i1;
        java.nio.channels.ByteChannel $r8;
        org.eclipse.jetty.websocket.WebSocket$FrameConnection $r15;
        boolean $z0;
        org.eclipse.jetty.websocket.WebSocket$OnFrame $r13;
        org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture r0;
        org.eclipse.jetty.websocket.WebSocket$Connection $r4, $r6, $r11, $r14;
        org.eclipse.jetty.websocket.WebSocketClientFactory $r2;
        java.util.concurrent.CountDownLatch $r18, $r20;
        org.eclipse.jetty.websocket.WebSocketConnection r3, $r16;
        org.eclipse.jetty.websocket.WebSocket $r9, $r10, $r12;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture;

        r3 := @parameter0: org.eclipse.jetty.websocket.WebSocketConnection;

     label01:
        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocketClient _client>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.websocket.WebSocketClient: org.eclipse.jetty.websocket.WebSocketClientFactory getFactory()>();

        virtualinvoke $r2.<org.eclipse.jetty.websocket.WebSocketClientFactory: boolean addConnection(org.eclipse.jetty.websocket.WebSocketConnection)>(r3);

        $r4 = interfaceinvoke r3.<org.eclipse.jetty.websocket.WebSocketConnection: org.eclipse.jetty.websocket.WebSocket$Connection getConnection()>();

        $r5 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocketClient _client>;

        $i0 = virtualinvoke $r5.<org.eclipse.jetty.websocket.WebSocketClient: int getMaxTextMessageSize()>();

        interfaceinvoke $r4.<org.eclipse.jetty.websocket.WebSocket$Connection: void setMaxTextMessageSize(int)>($i0);

        $r6 = interfaceinvoke r3.<org.eclipse.jetty.websocket.WebSocketConnection: org.eclipse.jetty.websocket.WebSocket$Connection getConnection()>();

        $r7 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocketClient _client>;

        $i1 = virtualinvoke $r7.<org.eclipse.jetty.websocket.WebSocketClient: int getMaxBinaryMessageSize()>();

        interfaceinvoke $r6.<org.eclipse.jetty.websocket.WebSocket$Connection: void setMaxBinaryMessageSize(int)>($i1);

        entermonitor r0;

     label02:
        $r8 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.nio.channels.ByteChannel _channel>;

        if $r8 == null goto label03;

        r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocketConnection _connection> = r3;

     label03:
        $r16 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocketConnection _connection>;

        exitmonitor r0;

     label04:
        goto label07;

     label05:
        $r19 := @caughtexception;

        exitmonitor r0;

     label06:
        throw $r19;

     label07:
        if $r16 == null goto label09;

        $r9 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocket _websocket>;

        $z0 = $r9 instanceof org.eclipse.jetty.websocket.WebSocket$OnFrame;

        if $z0 == 0 goto label08;

        $r12 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocket _websocket>;

        $r13 = (org.eclipse.jetty.websocket.WebSocket$OnFrame) $r12;

        $r14 = interfaceinvoke $r16.<org.eclipse.jetty.websocket.WebSocketConnection: org.eclipse.jetty.websocket.WebSocket$Connection getConnection()>();

        $r15 = (org.eclipse.jetty.websocket.WebSocket$FrameConnection) $r14;

        interfaceinvoke $r13.<org.eclipse.jetty.websocket.WebSocket$OnFrame: void onHandshake(org.eclipse.jetty.websocket.WebSocket$FrameConnection)>($r15);

     label08:
        $r10 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocket _websocket>;

        $r11 = interfaceinvoke $r16.<org.eclipse.jetty.websocket.WebSocketConnection: org.eclipse.jetty.websocket.WebSocket$Connection getConnection()>();

        interfaceinvoke $r10.<org.eclipse.jetty.websocket.WebSocket: void onOpen(org.eclipse.jetty.websocket.WebSocket$Connection)>($r11);

     label09:
        $r20 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.util.concurrent.CountDownLatch _done>;

        virtualinvoke $r20.<java.util.concurrent.CountDownLatch: void countDown()>();

        goto label12;

     label10:
        $r17 := @caughtexception;

     label11:
        $r18 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.util.concurrent.CountDownLatch _done>;

        virtualinvoke $r18.<java.util.concurrent.CountDownLatch: void countDown()>();

        throw $r17;

     label12:
        return;

        catch java.lang.Throwable from label02 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void handshakeFailed(java.lang.Throwable)
    {
        java.lang.Throwable r2, $r5, $r7;
        org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture r0;
        java.util.concurrent.CountDownLatch $r6, $r9;
        java.nio.channels.ByteChannel $r1, r8;
        java.lang.String $r3, $r4;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture;

        r2 := @parameter0: java.lang.Throwable;

     label01:
        r8 = null;

        entermonitor r0;

     label02:
        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.nio.channels.ByteChannel _channel>;

        if $r1 == null goto label03;

        r8 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.nio.channels.ByteChannel _channel>;

        r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.nio.channels.ByteChannel _channel> = null;

        r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.lang.Throwable _exception> = r2;

     label03:
        exitmonitor r0;

     label04:
        goto label07;

     label05:
        $r7 := @caughtexception;

        exitmonitor r0;

     label06:
        throw $r7;

     label07:
        if r8 == null goto label09;

        $z0 = r2 instanceof java.net.ProtocolException;

        if $z0 == 0 goto label08;

        $r4 = virtualinvoke r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: void closeChannel(java.nio.channels.ByteChannel,int,java.lang.String)>(r8, 1002, $r4);

        goto label09;

     label08:
        $r3 = virtualinvoke r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: void closeChannel(java.nio.channels.ByteChannel,int,java.lang.String)>(r8, 1006, $r3);

     label09:
        $r9 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.util.concurrent.CountDownLatch _done>;

        virtualinvoke $r9.<java.util.concurrent.CountDownLatch: void countDown()>();

        goto label12;

     label10:
        $r5 := @caughtexception;

     label11:
        $r6 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.util.concurrent.CountDownLatch _done>;

        virtualinvoke $r6.<java.util.concurrent.CountDownLatch: void countDown()>();

        throw $r5;

     label12:
        return;

        catch java.lang.Throwable from label02 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public java.util.Map getCookies()
    {
        org.eclipse.jetty.websocket.WebSocketClient $r1;
        org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture r0;
        java.util.Map $r2;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture;

        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocketClient _client>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.websocket.WebSocketClient: java.util.Map getCookies()>();

        return $r2;
    }

    public java.lang.String getProtocol()
    {
        org.eclipse.jetty.websocket.WebSocketClient $r1;
        java.lang.String $r2;
        org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture;

        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocketClient _client>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.websocket.WebSocketClient: java.lang.String getProtocol()>();

        return $r2;
    }

    public org.eclipse.jetty.websocket.WebSocket getWebSocket()
    {
        org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture r0;
        org.eclipse.jetty.websocket.WebSocket $r1;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture;

        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocket _websocket>;

        return $r1;
    }

    public java.net.URI getURI()
    {
        java.net.URI $r1;
        org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture;

        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.net.URI _uri>;

        return $r1;
    }

    public int getMaxIdleTime()
    {
        int $i0;
        org.eclipse.jetty.websocket.WebSocketClient $r1;
        org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture;

        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocketClient _client>;

        $i0 = virtualinvoke $r1.<org.eclipse.jetty.websocket.WebSocketClient: int getMaxIdleTime()>();

        return $i0;
    }

    public java.lang.String getOrigin()
    {
        org.eclipse.jetty.websocket.WebSocketClient $r1;
        java.lang.String $r2;
        org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture;

        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocketClient _client>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.websocket.WebSocketClient: java.lang.String getOrigin()>();

        return $r2;
    }

    public org.eclipse.jetty.websocket.MaskGen getMaskGen()
    {
        org.eclipse.jetty.websocket.WebSocketClient $r1;
        org.eclipse.jetty.websocket.MaskGen $r2;
        org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture;

        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocketClient _client>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.websocket.WebSocketClient: org.eclipse.jetty.websocket.MaskGen getMaskGen()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture r2;
        int $i0;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8, $r9;
        java.net.URI $r3;
        java.lang.String $r10;
        org.eclipse.jetty.websocket.WebSocket $r6;

        r2 := @this: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r3 = r2.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.net.URI _uri>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r6 = r2.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocket _websocket>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]@");

        $i0 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public boolean cancel(boolean)
    {
        java.lang.Throwable $r4, $r6, $r8;
        org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture r0;
        java.util.concurrent.CountDownLatch $r2, $r3, $r7;
        org.eclipse.jetty.websocket.WebSocketConnection $r1;
        java.nio.channels.ByteChannel $r5, r9;
        boolean z0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture;

        z0 := @parameter0: boolean;

     label01:
        r9 = null;

        entermonitor r0;

     label02:
        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocketConnection _connection>;

        if $r1 != null goto label03;

        $r4 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.lang.Throwable _exception>;

        if $r4 != null goto label03;

        $r5 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.nio.channels.ByteChannel _channel>;

        if $r5 == null goto label03;

        r9 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.nio.channels.ByteChannel _channel>;

        r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.nio.channels.ByteChannel _channel> = null;

     label03:
        exitmonitor r0;

     label04:
        goto label07;

     label05:
        $r8 := @caughtexception;

        exitmonitor r0;

     label06:
        throw $r8;

     label07:
        if r9 == null goto label09;

        specialinvoke r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: void closeChannel(java.nio.channels.ByteChannel,int,java.lang.String)>(r9, 1006, "cancelled");

     label08:
        $r3 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.util.concurrent.CountDownLatch _done>;

        virtualinvoke $r3.<java.util.concurrent.CountDownLatch: void countDown()>();

        return 1;

     label09:
        $r2 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.util.concurrent.CountDownLatch _done>;

        virtualinvoke $r2.<java.util.concurrent.CountDownLatch: void countDown()>();

        return 0;

     label10:
        $r6 := @caughtexception;

     label11:
        $r7 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.util.concurrent.CountDownLatch _done>;

        virtualinvoke $r7.<java.util.concurrent.CountDownLatch: void countDown()>();

        throw $r6;

        catch java.lang.Throwable from label02 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label01 to label08 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public boolean isCancelled()
    {
        java.lang.Throwable $r3;
        org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture r0;
        org.eclipse.jetty.websocket.WebSocketConnection $r2;
        java.nio.channels.ByteChannel $r1;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture;

        entermonitor r0;

     label1:
        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.nio.channels.ByteChannel _channel>;

        if $r1 != null goto label2;

        $r2 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocketConnection _connection>;

        if $r2 != null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor r0;

     label4:
        return $z0;

     label5:
        $r3 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isDone()
    {
        java.lang.Throwable $r2, $r3;
        org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture r0;
        org.eclipse.jetty.websocket.WebSocketConnection $r1;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture;

        entermonitor r0;

     label1:
        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocketConnection _connection>;

        if $r1 == null goto label2;

        $r2 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.lang.Throwable _exception>;

        if $r2 != null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor r0;

     label4:
        return $z0;

     label5:
        $r3 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public org.eclipse.jetty.websocket.WebSocket$Connection get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        java.util.concurrent.TimeUnit $r1;
        java.lang.IllegalStateException $r4;
        org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture r0;
        org.eclipse.jetty.websocket.WebSocket$Connection $r2;
        java.util.concurrent.TimeoutException $r3;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture;

     label1:
        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r2 = virtualinvoke r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocket$Connection get(long,java.util.concurrent.TimeUnit)>(9223372036854775807L, $r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("The universe has ended", $r3);

        throw $r4;

        catch java.util.concurrent.TimeoutException from label1 to label2 with label3;
    }

    public org.eclipse.jetty.websocket.WebSocket$Connection get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException
    {
        java.lang.Throwable $r7, r10;
        org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture r0;
        org.eclipse.jetty.websocket.WebSocket$Connection r9;
        java.util.concurrent.TimeoutException $r5;
        long l0;
        java.util.concurrent.TimeUnit r1;
        java.util.concurrent.ExecutionException $r6;
        java.util.concurrent.CountDownLatch $r2;
        org.eclipse.jetty.websocket.WebSocketConnection $r3, $r4;
        java.nio.channels.ByteChannel r8;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.util.concurrent.CountDownLatch _done>;

        virtualinvoke $r2.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(l0, r1);

        r8 = null;

        r9 = null;

        entermonitor r0;

     label01:
        r10 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.lang.Throwable _exception>;

        $r3 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocketConnection _connection>;

        if $r3 != null goto label02;

        r10 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.lang.Throwable _exception>;

        r8 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.nio.channels.ByteChannel _channel>;

        r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: java.nio.channels.ByteChannel _channel> = null;

        goto label03;

     label02:
        $r4 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocketConnection _connection>;

        r9 = interfaceinvoke $r4.<org.eclipse.jetty.websocket.WebSocketConnection: org.eclipse.jetty.websocket.WebSocket$Connection getConnection()>();

     label03:
        exitmonitor r0;

     label04:
        goto label07;

     label05:
        $r7 := @caughtexception;

        exitmonitor r0;

     label06:
        throw $r7;

     label07:
        if r8 == null goto label08;

        specialinvoke r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: void closeChannel(java.nio.channels.ByteChannel,int,java.lang.String)>(r8, 1006, "timeout");

     label08:
        if r10 == null goto label09;

        $r6 = new java.util.concurrent.ExecutionException;

        specialinvoke $r6.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>(r10);

        throw $r6;

     label09:
        if r9 == null goto label10;

        return r9;

     label10:
        $r5 = new java.util.concurrent.TimeoutException;

        specialinvoke $r5.<java.util.concurrent.TimeoutException: void <init>()>();

        throw $r5;

        catch java.lang.Throwable from label01 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
    }

    private void closeChannel(java.nio.channels.ByteChannel, int, java.lang.String)
    {
        org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture r0;
        java.io.IOException $r4;
        java.lang.Exception $r6;
        int i0;
        java.nio.channels.ByteChannel r3;
        java.lang.String r1;
        org.eclipse.jetty.util.log.Logger $r5, $r7;
        org.eclipse.jetty.websocket.WebSocket $r2;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture;

        r3 := @parameter0: java.nio.channels.ByteChannel;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

     label1:
        $r2 = r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocket _websocket>;

        interfaceinvoke $r2.<org.eclipse.jetty.websocket.WebSocket: void onClose(int,java.lang.String)>(i0, r1);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = staticinvoke <org.eclipse.jetty.websocket.WebSocketClient: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r7.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r6);

     label4:
        interfaceinvoke r3.<java.nio.channels.ByteChannel: void close()>();

     label5:
        goto label7;

     label6:
        $r4 := @caughtexception;

        $r5 = staticinvoke <org.eclipse.jetty.websocket.WebSocketClient: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r5.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r4);

     label7:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.io.IOException from label4 to label5 with label6;
    }

    public volatile java.lang.Object get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException
    {
        java.util.concurrent.TimeUnit r1;
        org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture r0;
        org.eclipse.jetty.websocket.WebSocket$Connection $r2;
        long l0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = virtualinvoke r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocket$Connection get(long,java.util.concurrent.TimeUnit)>(l0, r1);

        return $r2;
    }

    public volatile java.lang.Object get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture r0;
        org.eclipse.jetty.websocket.WebSocket$Connection $r1;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: org.eclipse.jetty.websocket.WebSocket$Connection get()>();

        return $r1;
    }

    void <init>(org.eclipse.jetty.websocket.WebSocket, java.net.URI, org.eclipse.jetty.websocket.WebSocketClient, java.nio.channels.ByteChannel, org.eclipse.jetty.websocket.WebSocketClient$1)
    {
        org.eclipse.jetty.websocket.WebSocketClient r3;
        org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture r0;
        java.nio.channels.ByteChannel r4;
        org.eclipse.jetty.websocket.WebSocketClient$1 r5;
        java.net.URI r2;
        org.eclipse.jetty.websocket.WebSocket r1;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture;

        r1 := @parameter0: org.eclipse.jetty.websocket.WebSocket;

        r2 := @parameter1: java.net.URI;

        r3 := @parameter2: org.eclipse.jetty.websocket.WebSocketClient;

        r4 := @parameter3: java.nio.channels.ByteChannel;

        r5 := @parameter4: org.eclipse.jetty.websocket.WebSocketClient$1;

        specialinvoke r0.<org.eclipse.jetty.websocket.WebSocketClient$WebSocketFuture: void <init>(org.eclipse.jetty.websocket.WebSocket,java.net.URI,org.eclipse.jetty.websocket.WebSocketClient,java.nio.channels.ByteChannel)>(r1, r2, r3, r4);

        return;
    }
}
