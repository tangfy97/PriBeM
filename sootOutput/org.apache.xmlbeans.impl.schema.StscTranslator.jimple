public class org.apache.xmlbeans.impl.schema.StscTranslator extends java.lang.Object
{
    private static final javax.xml.namespace.QName WSDL_ARRAYTYPE_NAME;
    private static final java.lang.String FORM_QUALIFIED;
    public static final org.apache.xmlbeans.impl.regex.RegularExpression XPATH_REGEXP;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$apache$xmlbeans$impl$schema$StscTranslator;
    static java.lang.Class class$org$apache$xmlbeans$SchemaBookmark;

    public void <init>()
    {
        org.apache.xmlbeans.impl.schema.StscTranslator r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscTranslator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void addAllDefinitions(org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess[])
    {
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType[] $r17;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement[] $r18;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement r110;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType $r67, $r72, r107, r109;
        org.apache.xmlbeans.impl.xb.xsdschema.AnnotationDocument$Annotation[] $r22;
        org.apache.xmlbeans.XmlDocumentProperties $r15;
        java.lang.Object[] $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.AnnotationDocument$Annotation $r24;
        org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine $r99;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType $r81, $r86, r104, r106;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType[] $r103;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r54, $r57, $r63, $r65, $r77, $r79, r105, r108;
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema $r11;
        org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl $r29, $r31, r116;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r23;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, $i27, i28, i29, i30, i31, i32, i33, i34, i35, i36, i37, i38, i39, i40, i41, i42, $i44, $i46, $i48, $i50;
        org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess[] r1;
        java.lang.Object $r8, $r30, $r44, $r64, $r78, $r96, $r98;
        org.apache.xmlbeans.impl.xb.xsdschema.NotationDocument$Notation $r88;
        org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup $r33, $r38, r115, r117;
        org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup[] $r21;
        org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup[] $r20;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute[] $r19;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute r111;
        javax.xml.namespace.QName $r56, $r59;
        java.lang.AssertionError $r119, $r123, $r124, $r125, $r126;
        org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess $r10, $r12, $r27, $r41, $r61, $r75, $r89, $r91, $r97;
        java.util.ArrayList $r118, $r122;
        java.lang.String $r13, $r14, $r16, $r26, $r32, $r34, $r37, $r40, $r46, $r48, $r51, $r55, $r58, $r60, $r66, $r68, $r71, $r74, $r80, $r82, $r85, r101;
        org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup $r47, $r52, r112, r114;
        org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl $r25;
        org.apache.xmlbeans.impl.schema.StscState $r7;
        org.apache.xmlbeans.impl.schema.StscTranslator$RedefinitionMaster $r121;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, z25, z26, z27, z28, z29, z30, z31, z32, z33, z34;
        org.apache.xmlbeans.impl.schema.StscTranslator$RedefinitionHolder $r9, $r35, $r36, $r49, $r50, $r69, $r70, $r83, $r84, $r120;
        java.util.List $r90, $r92;
        org.apache.xmlbeans.impl.schema.StscTranslator$RedefinitionHolder[] $r3, $r5, $r6, $r28, $r42, $r62, $r76;
        org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl $r43, $r45, r113;
        java.util.Iterator $r93, $r94;

        r1 := @parameter0: org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess[];

        $r118 = new java.util.ArrayList;

        specialinvoke $r118.<java.util.ArrayList: void <init>()>();

        i24 = 0;

     label01:
        $i0 = lengthof r1;

        if i24 >= $i0 goto label05;

        $r89 = r1[i24];

        $r90 = virtualinvoke $r89.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.List getRedefines()>();

        if $r90 == null goto label04;

        $r91 = r1[i24];

        $r92 = virtualinvoke $r91.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.util.List getRedefineObjects()>();

        $r93 = interfaceinvoke $r90.<java.util.List: java.util.Iterator iterator()>();

        $r94 = interfaceinvoke $r92.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z13 = interfaceinvoke $r93.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label04;

        $z14 = <org.apache.xmlbeans.impl.schema.StscTranslator: boolean $assertionsDisabled>;

        if $z14 != 0 goto label03;

        $z15 = interfaceinvoke $r94.<java.util.Iterator: boolean hasNext()>();

        if $z15 != 0 goto label03;

        $r119 = new java.lang.AssertionError;

        specialinvoke $r119.<java.lang.AssertionError: void <init>(java.lang.Object)>("The array of redefines and redefine objects have to have the same length");

        throw $r119;

     label03:
        $r120 = new org.apache.xmlbeans.impl.schema.StscTranslator$RedefinitionHolder;

        $r96 = interfaceinvoke $r93.<java.util.Iterator: java.lang.Object next()>();

        $r97 = (org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess) $r96;

        $r98 = interfaceinvoke $r94.<java.util.Iterator: java.lang.Object next()>();

        $r99 = (org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine) $r98;

        specialinvoke $r120.<org.apache.xmlbeans.impl.schema.StscTranslator$RedefinitionHolder: void <init>(org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess,org.apache.xmlbeans.impl.xb.xsdschema.RedefineDocument$Redefine)>($r97, $r99);

        interfaceinvoke $r118.<java.util.List: boolean add(java.lang.Object)>($r120);

        goto label02;

     label04:
        i24 = i24 + 1;

        goto label01;

     label05:
        $r121 = new org.apache.xmlbeans.impl.schema.StscTranslator$RedefinitionMaster;

        $i1 = interfaceinvoke $r118.<java.util.List: int size()>();

        $r3 = newarray (org.apache.xmlbeans.impl.schema.StscTranslator$RedefinitionHolder)[$i1];

        $r4 = interfaceinvoke $r118.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (org.apache.xmlbeans.impl.schema.StscTranslator$RedefinitionHolder[]) $r4;

        $r6 = (org.apache.xmlbeans.impl.schema.StscTranslator$RedefinitionHolder[]) $r5;

        specialinvoke $r121.<org.apache.xmlbeans.impl.schema.StscTranslator$RedefinitionMaster: void <init>(org.apache.xmlbeans.impl.schema.StscTranslator$RedefinitionHolder[])>($r6);

        $r7 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        i25 = 0;

     label06:
        $i2 = lengthof r1;

        if i25 >= $i2 goto label66;

        $r10 = r1[i25];

        $r11 = virtualinvoke $r10.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema getSchema()>();

        $r12 = r1[i25];

        $r13 = virtualinvoke $r12.<org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess: java.lang.String getChameleonNamespace()>();

        $i4 = interfaceinvoke $r11.<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema: int sizeOfNotationArray()>();

        if $i4 <= 0 goto label07;

        $r88 = interfaceinvoke $r11.<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema: org.apache.xmlbeans.impl.xb.xsdschema.NotationDocument$Notation getNotationArray(int)>(0);

        virtualinvoke $r7.<org.apache.xmlbeans.impl.schema.StscState: void warning(java.lang.String,int,org.apache.xmlbeans.XmlObject)>("Schema <notation> is not yet supported for this release.", 51, $r88);

     label07:
        $r14 = interfaceinvoke $r11.<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema: java.lang.String getTargetNamespace()>();

        r101 = $r14;

        z16 = 0;

        z34 = 0;

        z33 = 0;

        z32 = 0;

        z31 = 0;

        z30 = 0;

        z29 = 0;

        z28 = 0;

        z27 = 0;

        z26 = 0;

        z25 = 0;

        if $r13 == null goto label08;

        if $r14 != null goto label08;

        r101 = $r13;

        z16 = 1;

        z34 = 1;

        z33 = 1;

        z32 = 1;

        z31 = 1;

        z30 = 1;

        z29 = 1;

        z28 = 1;

        z27 = 1;

        z26 = 1;

        z25 = 1;

     label08:
        if r101 != null goto label09;

        r101 = "";

     label09:
        $i5 = virtualinvoke r101.<java.lang.String: int length()>();

        if $i5 > 0 goto label10;

        $z12 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: boolean isEmptySchema(org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema)>($r11);

        if $z12 != 0 goto label11;

     label10:
        $r15 = interfaceinvoke $r11.<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema: org.apache.xmlbeans.XmlDocumentProperties documentProperties()>();

        $r16 = virtualinvoke $r15.<org.apache.xmlbeans.XmlDocumentProperties: java.lang.String getSourceName()>();

        virtualinvoke $r7.<org.apache.xmlbeans.impl.schema.StscState: void registerContribution(java.lang.String,java.lang.String)>(r101, $r16);

        virtualinvoke $r7.<org.apache.xmlbeans.impl.schema.StscState: void addNewContainer(java.lang.String)>(r101);

     label11:
        $r122 = new java.util.ArrayList;

        specialinvoke $r122.<java.util.ArrayList: void <init>()>();

        $r103 = interfaceinvoke $r11.<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema: org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType[] getComplexTypeArray()>();

        i26 = 0;

     label12:
        $i27 = lengthof $r103;

        if i26 >= $i27 goto label23;

        r104 = $r103[i26];

        $r74 = interfaceinvoke r104.<org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType: java.lang.String getName()>();

        $r75 = r1[i25];

        $r76 = virtualinvoke $r121.<org.apache.xmlbeans.impl.schema.StscTranslator$RedefinitionMaster: org.apache.xmlbeans.impl.schema.StscTranslator$RedefinitionHolder[] getComplexTypeRedefinitions(java.lang.String,org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess)>($r74, $r75);

        i28 = 0;

     label13:
        $i21 = lengthof $r76;

        if i28 >= $i21 goto label16;

        $r83 = $r76[i28];

        if $r83 == null goto label15;

        $r84 = $r76[i28];

        $r85 = interfaceinvoke r104.<org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType: java.lang.String getName()>();

        $r86 = virtualinvoke $r84.<org.apache.xmlbeans.impl.schema.StscTranslator$RedefinitionHolder: org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType redefineComplexType(java.lang.String)>($r85);

        $z11 = <org.apache.xmlbeans.impl.schema.StscTranslator: boolean $assertionsDisabled>;

        if $z11 != 0 goto label14;

        if $r86 != null goto label14;

        $r123 = new java.lang.AssertionError;

        specialinvoke $r123.<java.lang.AssertionError: void <init>()>();

        throw $r123;

     label14:
        interfaceinvoke $r122.<java.util.List: boolean add(java.lang.Object)>(r104);

        r104 = $r86;

     label15:
        i28 = i28 + 1;

        goto label13;

     label16:
        $r81 = r104;

        $r82 = r101;

        $z10 = z25;

        $i22 = interfaceinvoke $r122.<java.util.List: int size()>();

        if $i22 <= 0 goto label17;

        $z17 = 1;

        goto label18;

     label17:
        $z17 = 0;

     label18:
        $r77 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: org.apache.xmlbeans.impl.schema.SchemaTypeImpl translateGlobalComplexType(org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType,java.lang.String,boolean,boolean)>($r81, $r82, $z10, $z17);

        r105 = $r77;

        virtualinvoke $r7.<org.apache.xmlbeans.impl.schema.StscState: void addGlobalType(org.apache.xmlbeans.impl.schema.SchemaTypeImpl,org.apache.xmlbeans.impl.schema.SchemaTypeImpl)>($r77, null);

        $i23 = interfaceinvoke $r122.<java.util.List: int size()>();

        i29 = $i23 - 1;

     label19:
        if i29 < 0 goto label22;

        $r78 = interfaceinvoke $r122.<java.util.List: java.lang.Object remove(int)>(i29);

        r106 = (org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType) $r78;

        $r80 = r101;

        $z9 = z26;

        if i29 <= 0 goto label20;

        $z18 = 1;

        goto label21;

     label20:
        $z18 = 0;

     label21:
        $r79 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: org.apache.xmlbeans.impl.schema.SchemaTypeImpl translateGlobalComplexType(org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType,java.lang.String,boolean,boolean)>(r106, $r80, $z9, $z18);

        virtualinvoke $r7.<org.apache.xmlbeans.impl.schema.StscState: void addGlobalType(org.apache.xmlbeans.impl.schema.SchemaTypeImpl,org.apache.xmlbeans.impl.schema.SchemaTypeImpl)>($r79, r105);

        r105 = $r79;

        $i44 = (int) -1;

        i29 = i29 + $i44;

        goto label19;

     label22:
        i26 = i26 + 1;

        goto label12;

     label23:
        $r17 = interfaceinvoke $r11.<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema: org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType[] getSimpleTypeArray()>();

        i30 = 0;

     label24:
        $i6 = lengthof $r17;

        if i30 >= $i6 goto label35;

        r107 = $r17[i30];

        $r60 = interfaceinvoke r107.<org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType: java.lang.String getName()>();

        $r61 = r1[i25];

        $r62 = virtualinvoke $r121.<org.apache.xmlbeans.impl.schema.StscTranslator$RedefinitionMaster: org.apache.xmlbeans.impl.schema.StscTranslator$RedefinitionHolder[] getSimpleTypeRedefinitions(java.lang.String,org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess)>($r60, $r61);

        i31 = 0;

     label25:
        $i18 = lengthof $r62;

        if i31 >= $i18 goto label28;

        $r69 = $r62[i31];

        if $r69 == null goto label27;

        $r70 = $r62[i31];

        $r71 = interfaceinvoke r107.<org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType: java.lang.String getName()>();

        $r72 = virtualinvoke $r70.<org.apache.xmlbeans.impl.schema.StscTranslator$RedefinitionHolder: org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType redefineSimpleType(java.lang.String)>($r71);

        $z8 = <org.apache.xmlbeans.impl.schema.StscTranslator: boolean $assertionsDisabled>;

        if $z8 != 0 goto label26;

        if $r72 != null goto label26;

        $r124 = new java.lang.AssertionError;

        specialinvoke $r124.<java.lang.AssertionError: void <init>()>();

        throw $r124;

     label26:
        interfaceinvoke $r122.<java.util.List: boolean add(java.lang.Object)>(r107);

        r107 = $r72;

     label27:
        i31 = i31 + 1;

        goto label25;

     label28:
        $r67 = r107;

        $r68 = r101;

        $z7 = z28;

        $i19 = interfaceinvoke $r122.<java.util.List: int size()>();

        if $i19 <= 0 goto label29;

        $z19 = 1;

        goto label30;

     label29:
        $z19 = 0;

     label30:
        $r63 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: org.apache.xmlbeans.impl.schema.SchemaTypeImpl translateGlobalSimpleType(org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType,java.lang.String,boolean,boolean)>($r67, $r68, $z7, $z19);

        r108 = $r63;

        virtualinvoke $r7.<org.apache.xmlbeans.impl.schema.StscState: void addGlobalType(org.apache.xmlbeans.impl.schema.SchemaTypeImpl,org.apache.xmlbeans.impl.schema.SchemaTypeImpl)>($r63, null);

        $i20 = interfaceinvoke $r122.<java.util.List: int size()>();

        i32 = $i20 - 1;

     label31:
        if i32 < 0 goto label34;

        $r64 = interfaceinvoke $r122.<java.util.List: java.lang.Object remove(int)>(i32);

        r109 = (org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType) $r64;

        $r66 = r101;

        $z6 = z29;

        if i32 <= 0 goto label32;

        $z20 = 1;

        goto label33;

     label32:
        $z20 = 0;

     label33:
        $r65 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: org.apache.xmlbeans.impl.schema.SchemaTypeImpl translateGlobalSimpleType(org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType,java.lang.String,boolean,boolean)>(r109, $r66, $z6, $z20);

        virtualinvoke $r7.<org.apache.xmlbeans.impl.schema.StscState: void addGlobalType(org.apache.xmlbeans.impl.schema.SchemaTypeImpl,org.apache.xmlbeans.impl.schema.SchemaTypeImpl)>($r65, r108);

        r108 = $r65;

        $i46 = (int) -1;

        i32 = i32 + $i46;

        goto label31;

     label34:
        i30 = i30 + 1;

        goto label24;

     label35:
        $r18 = interfaceinvoke $r11.<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema: org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement[] getElementArray()>();

        i33 = 0;

     label36:
        $i7 = lengthof $r18;

        if i33 >= $i7 goto label37;

        r110 = $r18[i33];

        $r57 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: org.apache.xmlbeans.impl.schema.SchemaTypeImpl translateDocumentType(org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement,java.lang.String,boolean)>(r110, r101, z27);

        $r58 = interfaceinvoke r110.<org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement: java.lang.String getName()>();

        $r59 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: javax.xml.namespace.QName forLNS(java.lang.String,java.lang.String)>($r58, r101);

        virtualinvoke $r7.<org.apache.xmlbeans.impl.schema.StscState: void addDocumentType(org.apache.xmlbeans.impl.schema.SchemaTypeImpl,javax.xml.namespace.QName)>($r57, $r59);

        i33 = i33 + 1;

        goto label36;

     label37:
        $r19 = interfaceinvoke $r11.<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema: org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute[] getAttributeArray()>();

        i34 = 0;

     label38:
        $i8 = lengthof $r19;

        if i34 >= $i8 goto label39;

        r111 = $r19[i34];

        $r54 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: org.apache.xmlbeans.impl.schema.SchemaTypeImpl translateAttributeType(org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute,java.lang.String,boolean)>(r111, r101, z33);

        $r55 = interfaceinvoke r111.<org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute: java.lang.String getName()>();

        $r56 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: javax.xml.namespace.QName forLNS(java.lang.String,java.lang.String)>($r55, r101);

        virtualinvoke $r7.<org.apache.xmlbeans.impl.schema.StscState: void addAttributeType(org.apache.xmlbeans.impl.schema.SchemaTypeImpl,javax.xml.namespace.QName)>($r54, $r56);

        i34 = i34 + 1;

        goto label38;

     label39:
        $r20 = interfaceinvoke $r11.<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema: org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup[] getGroupArray()>();

        i35 = 0;

     label40:
        $i9 = lengthof $r20;

        if i35 >= $i9 goto label51;

        r112 = $r20[i35];

        $r40 = interfaceinvoke r112.<org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup: java.lang.String getName()>();

        $r41 = r1[i25];

        $r42 = virtualinvoke $r121.<org.apache.xmlbeans.impl.schema.StscTranslator$RedefinitionMaster: org.apache.xmlbeans.impl.schema.StscTranslator$RedefinitionHolder[] getModelGroupRedefinitions(java.lang.String,org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess)>($r40, $r41);

        i36 = 0;

     label41:
        $i15 = lengthof $r42;

        if i36 >= $i15 goto label44;

        $r49 = $r42[i36];

        if $r49 == null goto label43;

        $r50 = $r42[i36];

        $r51 = interfaceinvoke r112.<org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup: java.lang.String getName()>();

        $r52 = virtualinvoke $r50.<org.apache.xmlbeans.impl.schema.StscTranslator$RedefinitionHolder: org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup redefineModelGroup(java.lang.String)>($r51);

        $z5 = <org.apache.xmlbeans.impl.schema.StscTranslator: boolean $assertionsDisabled>;

        if $z5 != 0 goto label42;

        if $r52 != null goto label42;

        $r125 = new java.lang.AssertionError;

        specialinvoke $r125.<java.lang.AssertionError: void <init>()>();

        throw $r125;

     label42:
        interfaceinvoke $r122.<java.util.List: boolean add(java.lang.Object)>(r112);

        r112 = $r52;

     label43:
        i36 = i36 + 1;

        goto label41;

     label44:
        $r47 = r112;

        $r48 = r101;

        $z4 = z32;

        $i16 = interfaceinvoke $r122.<java.util.List: int size()>();

        if $i16 <= 0 goto label45;

        $z21 = 1;

        goto label46;

     label45:
        $z21 = 0;

     label46:
        $r43 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl translateModelGroup(org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup,java.lang.String,boolean,boolean)>($r47, $r48, $z4, $z21);

        r113 = $r43;

        virtualinvoke $r7.<org.apache.xmlbeans.impl.schema.StscState: void addModelGroup(org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl,org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl)>($r43, null);

        $i17 = interfaceinvoke $r122.<java.util.List: int size()>();

        i37 = $i17 - 1;

     label47:
        if i37 < 0 goto label50;

        $r44 = interfaceinvoke $r122.<java.util.List: java.lang.Object remove(int)>(i37);

        r114 = (org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup) $r44;

        $r46 = r101;

        $z3 = z34;

        if i37 <= 0 goto label48;

        $z22 = 1;

        goto label49;

     label48:
        $z22 = 0;

     label49:
        $r45 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl translateModelGroup(org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup,java.lang.String,boolean,boolean)>(r114, $r46, $z3, $z22);

        virtualinvoke $r7.<org.apache.xmlbeans.impl.schema.StscState: void addModelGroup(org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl,org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl)>($r45, r113);

        r113 = $r45;

        $i48 = (int) -1;

        i37 = i37 + $i48;

        goto label47;

     label50:
        i35 = i35 + 1;

        goto label40;

     label51:
        $r21 = interfaceinvoke $r11.<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema: org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup[] getAttributeGroupArray()>();

        i38 = 0;

     label52:
        $i10 = lengthof $r21;

        if i38 >= $i10 goto label63;

        r115 = $r21[i38];

        $r26 = interfaceinvoke r115.<org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup: java.lang.String getName()>();

        $r27 = r1[i25];

        $r28 = virtualinvoke $r121.<org.apache.xmlbeans.impl.schema.StscTranslator$RedefinitionMaster: org.apache.xmlbeans.impl.schema.StscTranslator$RedefinitionHolder[] getAttributeGroupRedefinitions(java.lang.String,org.apache.xmlbeans.impl.schema.StscImporter$SchemaToProcess)>($r26, $r27);

        i39 = 0;

     label53:
        $i12 = lengthof $r28;

        if i39 >= $i12 goto label56;

        $r35 = $r28[i39];

        if $r35 == null goto label55;

        $r36 = $r28[i39];

        $r37 = interfaceinvoke r115.<org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup: java.lang.String getName()>();

        $r38 = virtualinvoke $r36.<org.apache.xmlbeans.impl.schema.StscTranslator$RedefinitionHolder: org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup redefineAttributeGroup(java.lang.String)>($r37);

        $z2 = <org.apache.xmlbeans.impl.schema.StscTranslator: boolean $assertionsDisabled>;

        if $z2 != 0 goto label54;

        if $r38 != null goto label54;

        $r126 = new java.lang.AssertionError;

        specialinvoke $r126.<java.lang.AssertionError: void <init>()>();

        throw $r126;

     label54:
        interfaceinvoke $r122.<java.util.List: boolean add(java.lang.Object)>(r115);

        r115 = $r38;

     label55:
        i39 = i39 + 1;

        goto label53;

     label56:
        $r33 = r115;

        $r34 = r101;

        $z1 = z31;

        $i13 = interfaceinvoke $r122.<java.util.List: int size()>();

        if $i13 <= 0 goto label57;

        $z23 = 1;

        goto label58;

     label57:
        $z23 = 0;

     label58:
        $r29 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl translateAttributeGroup(org.apache.xmlbeans.impl.xb.xsdschema.AttributeGroup,java.lang.String,boolean,boolean)>($r33, $r34, $z1, $z23);

        r116 = $r29;

        virtualinvoke $r7.<org.apache.xmlbeans.impl.schema.StscState: void addAttributeGroup(org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl,org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl)>($r29, null);

        $i14 = interfaceinvoke $r122.<java.util.List: int size()>();

        i40 = $i14 - 1;

     label59:
        if i40 < 0 goto label62;

        $r30 = interfaceinvoke $r122.<java.util.List: java.lang.Object remove(int)>(i40);

        r117 = (org.apache.xmlbeans.impl.xb.xsdschema.NamedAttributeGroup) $r30;

        $r32 = r101;

        $z0 = z30;

        if i40 <= 0 goto label60;

        $z24 = 1;

        goto label61;

     label60:
        $z24 = 0;

     label61:
        $r31 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl translateAttributeGroup(org.apache.xmlbeans.impl.xb.xsdschema.AttributeGroup,java.lang.String,boolean,boolean)>(r117, $r32, $z0, $z24);

        virtualinvoke $r7.<org.apache.xmlbeans.impl.schema.StscState: void addAttributeGroup(org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl,org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl)>($r31, r116);

        r116 = $r31;

        $i50 = (int) -1;

        i40 = i40 + $i50;

        goto label59;

     label62:
        i38 = i38 + 1;

        goto label52;

     label63:
        $r22 = interfaceinvoke $r11.<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema: org.apache.xmlbeans.impl.xb.xsdschema.AnnotationDocument$Annotation[] getAnnotationArray()>();

        i41 = 0;

     label64:
        $i11 = lengthof $r22;

        if i41 >= $i11 goto label65;

        $r23 = virtualinvoke $r7.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>(r101);

        $r24 = $r22[i41];

        $r25 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl: org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl getAnnotation(org.apache.xmlbeans.impl.schema.SchemaContainer,org.apache.xmlbeans.XmlObject,org.apache.xmlbeans.impl.xb.xsdschema.AnnotationDocument$Annotation)>($r23, $r11, $r24);

        virtualinvoke $r7.<org.apache.xmlbeans.impl.schema.StscState: void addAnnotation(org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl,java.lang.String)>($r25, r101);

        i41 = i41 + 1;

        goto label64;

     label65:
        i25 = i25 + 1;

        goto label06;

     label66:
        i42 = 0;

     label67:
        $i3 = interfaceinvoke $r118.<java.util.List: int size()>();

        if i42 >= $i3 goto label68;

        $r8 = interfaceinvoke $r118.<java.util.List: java.lang.Object get(int)>(i42);

        $r9 = (org.apache.xmlbeans.impl.schema.StscTranslator$RedefinitionHolder) $r8;

        virtualinvoke $r9.<org.apache.xmlbeans.impl.schema.StscTranslator$RedefinitionHolder: void complainAboutMissingDefinitions()>();

        i42 = i42 + 1;

        goto label67;

     label68:
        return;
    }

    private static java.lang.String findFilename(org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.impl.schema.StscState $r0;
        org.apache.xmlbeans.XmlDocumentProperties $r2;
        org.apache.xmlbeans.XmlObject r1;
        java.lang.String $r3, $r4;

        r1 := @parameter0: org.apache.xmlbeans.XmlObject;

        $r0 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlDocumentProperties documentProperties()>();

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.XmlDocumentProperties: java.lang.String getSourceName()>();

        $r4 = virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: java.lang.String sourceNameForUri(java.lang.String)>($r3);

        return $r4;
    }

    private static org.apache.xmlbeans.impl.schema.SchemaTypeImpl translateDocumentType(org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement, java.lang.String, boolean)
    {
        org.apache.xmlbeans.impl.schema.StscState $r1;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement r4;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r0;
        java.lang.String r2, $r5;
        boolean z0;

        r4 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.TopLevelElement;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r0 = new org.apache.xmlbeans.impl.schema.SchemaTypeImpl;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        $r3 = virtualinvoke $r1.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>(r2);

        specialinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void <init>(org.apache.xmlbeans.impl.schema.SchemaContainer)>($r3);

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setDocumentType(boolean)>(1);

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setParseContext(org.apache.xmlbeans.XmlObject,java.lang.String,boolean,java.lang.String,java.lang.String,boolean)>(r4, r2, z0, null, null, 0);

        $r5 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.String findFilename(org.apache.xmlbeans.XmlObject)>(r4);

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setFilename(java.lang.String)>($r5);

        return $r0;
    }

    private static org.apache.xmlbeans.impl.schema.SchemaTypeImpl translateAttributeType(org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute, java.lang.String, boolean)
    {
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute r4;
        org.apache.xmlbeans.impl.schema.StscState $r1;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r0;
        java.lang.String r2, $r5;
        boolean z0;

        r4 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.TopLevelAttribute;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r0 = new org.apache.xmlbeans.impl.schema.SchemaTypeImpl;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        $r3 = virtualinvoke $r1.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>(r2);

        specialinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void <init>(org.apache.xmlbeans.impl.schema.SchemaContainer)>($r3);

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setAttributeType(boolean)>(1);

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setParseContext(org.apache.xmlbeans.XmlObject,java.lang.String,boolean,java.lang.String,java.lang.String,boolean)>(r4, r2, z0, null, null, 0);

        $r5 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.String findFilename(org.apache.xmlbeans.XmlObject)>(r4);

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setFilename(java.lang.String)>($r5);

        return $r0;
    }

    private static org.apache.xmlbeans.impl.schema.SchemaTypeImpl translateGlobalComplexType(org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType, java.lang.String, boolean, boolean)
    {
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType r1;
        org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl $r10;
        java.lang.Object[] $r12, $r14, $r16;
        org.apache.xmlbeans.XmlNCName $r15;
        org.apache.xmlbeans.impl.schema.StscState $r0;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r6, $r9;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r5;
        java.lang.String $r2, r3, $r7, $r13;
        boolean $z0, $z1, z2, z3;
        java.lang.Object $r11;
        javax.xml.namespace.QName $r4, $r8;

        r1 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType;

        r3 := @parameter1: java.lang.String;

        z2 := @parameter2: boolean;

        z3 := @parameter3: boolean;

        $r0 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType: java.lang.String getName()>();

        if $r2 != null goto label1;

        $r16 = newarray (java.lang.Object)[1];

        $r16[0] = "global type";

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("missing-name", $r16, r1);

        return null;

     label1:
        $z0 = staticinvoke <org.apache.xmlbeans.impl.common.XMLChar: boolean isValidNCName(java.lang.String)>($r2);

        if $z0 != 0 goto label2;

        $r14 = newarray (java.lang.Object)[2];

        $r14[0] = $r2;

        $r14[1] = "name";

        $r15 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.TopLevelComplexType: org.apache.xmlbeans.XmlNCName xgetName()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("invalid-value", $r14, $r15);

     label2:
        $r4 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: javax.xml.namespace.QName forLNS(java.lang.String,java.lang.String)>($r2, r3);

        $z1 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: boolean isReservedTypeName(javax.xml.namespace.QName)>($r4);

        if $z1 == 0 goto label3;

        $r12 = newarray (java.lang.Object)[1];

        $r13 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r4);

        $r12[0] = $r13;

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void warning(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("reserved-type-name", $r12, r1);

        return null;

     label3:
        $r5 = new org.apache.xmlbeans.impl.schema.SchemaTypeImpl;

        $r6 = virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>(r3);

        specialinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void <init>(org.apache.xmlbeans.impl.schema.SchemaContainer)>($r6);

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setParseContext(org.apache.xmlbeans.XmlObject,java.lang.String,boolean,java.lang.String,java.lang.String,boolean)>(r1, r3, z2, null, null, z3);

        $r7 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.String findFilename(org.apache.xmlbeans.XmlObject)>(r1);

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setFilename(java.lang.String)>($r7);

        $r8 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: javax.xml.namespace.QName forLNS(java.lang.String,java.lang.String)>($r2, r3);

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setName(javax.xml.namespace.QName)>($r8);

        $r9 = virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>(r3);

        $r10 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl: org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl getAnnotation(org.apache.xmlbeans.impl.schema.SchemaContainer,org.apache.xmlbeans.impl.xb.xsdschema.Annotated)>($r9, r1);

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setAnnotation(org.apache.xmlbeans.SchemaAnnotation)>($r10);

        $r11 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.Object getUserData(org.apache.xmlbeans.XmlObject)>(r1);

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setUserData(java.lang.Object)>($r11);

        return $r5;
    }

    private static org.apache.xmlbeans.impl.schema.SchemaTypeImpl translateGlobalSimpleType(org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType, java.lang.String, boolean, boolean)
    {
        org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl $r9;
        java.lang.Object[] $r11, $r13, $r15;
        org.apache.xmlbeans.XmlNCName $r14;
        org.apache.xmlbeans.impl.schema.StscState $r0;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r6, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r5;
        java.lang.String $r2, r3, $r7, $r12;
        boolean $z0, $z1, z2, z3;
        java.lang.Object $r10;
        javax.xml.namespace.QName $r4;

        r1 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType;

        r3 := @parameter1: java.lang.String;

        z2 := @parameter2: boolean;

        z3 := @parameter3: boolean;

        $r0 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType: java.lang.String getName()>();

        if $r2 != null goto label1;

        $r15 = newarray (java.lang.Object)[1];

        $r15[0] = "global type";

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("missing-name", $r15, r1);

        return null;

     label1:
        $z0 = staticinvoke <org.apache.xmlbeans.impl.common.XMLChar: boolean isValidNCName(java.lang.String)>($r2);

        if $z0 != 0 goto label2;

        $r13 = newarray (java.lang.Object)[2];

        $r13[0] = $r2;

        $r13[1] = "name";

        $r14 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.TopLevelSimpleType: org.apache.xmlbeans.XmlNCName xgetName()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("invalid-value", $r13, $r14);

     label2:
        $r4 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: javax.xml.namespace.QName forLNS(java.lang.String,java.lang.String)>($r2, r3);

        $z1 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: boolean isReservedTypeName(javax.xml.namespace.QName)>($r4);

        if $z1 == 0 goto label3;

        $r11 = newarray (java.lang.Object)[1];

        $r12 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r4);

        $r11[0] = $r12;

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void warning(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("reserved-type-name", $r11, r1);

        return null;

     label3:
        $r5 = new org.apache.xmlbeans.impl.schema.SchemaTypeImpl;

        $r6 = virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>(r3);

        specialinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void <init>(org.apache.xmlbeans.impl.schema.SchemaContainer)>($r6);

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setSimpleType(boolean)>(1);

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setParseContext(org.apache.xmlbeans.XmlObject,java.lang.String,boolean,java.lang.String,java.lang.String,boolean)>(r1, r3, z2, null, null, z3);

        $r7 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.String findFilename(org.apache.xmlbeans.XmlObject)>(r1);

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setFilename(java.lang.String)>($r7);

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setName(javax.xml.namespace.QName)>($r4);

        $r8 = virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>(r3);

        $r9 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl: org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl getAnnotation(org.apache.xmlbeans.impl.schema.SchemaContainer,org.apache.xmlbeans.impl.xb.xsdschema.Annotated)>($r8, r1);

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setAnnotation(org.apache.xmlbeans.SchemaAnnotation)>($r9);

        $r10 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.Object getUserData(org.apache.xmlbeans.XmlObject)>(r1);

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setUserData(java.lang.Object)>($r10);

        return $r5;
    }

    static org.apache.xmlbeans.impl.schema.SchemaTypeImpl translateAnonymousSimpleType(org.apache.xmlbeans.impl.xb.xsdschema.SimpleType, java.lang.String, boolean, java.lang.String, java.lang.String, java.util.List, org.apache.xmlbeans.SchemaType)
    {
        org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl $r10;
        org.apache.xmlbeans.impl.xb.xsdschema.SimpleType r4;
        org.apache.xmlbeans.impl.schema.StscState $r0;
        java.util.List r12;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r3, $r9;
        org.apache.xmlbeans.SchemaType$Ref $r8;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r1;
        java.lang.Object $r11;
        java.lang.String r2, r5, r6;
        org.apache.xmlbeans.SchemaType r7;
        boolean z0;

        r4 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.SimpleType;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r5 := @parameter3: java.lang.String;

        r6 := @parameter4: java.lang.String;

        r12 := @parameter5: java.util.List;

        r7 := @parameter6: org.apache.xmlbeans.SchemaType;

        $r0 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        $r1 = new org.apache.xmlbeans.impl.schema.SchemaTypeImpl;

        $r3 = virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>(r2);

        specialinvoke $r1.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void <init>(org.apache.xmlbeans.impl.schema.SchemaContainer)>($r3);

        virtualinvoke $r1.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setSimpleType(boolean)>(1);

        virtualinvoke $r1.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setParseContext(org.apache.xmlbeans.XmlObject,java.lang.String,boolean,java.lang.String,java.lang.String,boolean)>(r4, r2, z0, r5, r6, 0);

        $r8 = interfaceinvoke r7.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType$Ref getRef()>();

        virtualinvoke $r1.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setOuterSchemaTypeRef(org.apache.xmlbeans.SchemaType$Ref)>($r8);

        $r9 = virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>(r2);

        $r10 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl: org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl getAnnotation(org.apache.xmlbeans.impl.schema.SchemaContainer,org.apache.xmlbeans.impl.xb.xsdschema.Annotated)>($r9, r4);

        virtualinvoke $r1.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setAnnotation(org.apache.xmlbeans.SchemaAnnotation)>($r10);

        $r11 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.Object getUserData(org.apache.xmlbeans.XmlObject)>(r4);

        virtualinvoke $r1.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setUserData(java.lang.Object)>($r11);

        interfaceinvoke r12.<java.util.List: boolean add(java.lang.Object)>($r1);

        return $r1;
    }

    static org.apache.xmlbeans.impl.xb.xsdschema.FormChoice findElementFormDefault(org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema $r6;
        org.apache.xmlbeans.XmlCursor $r1;
        org.apache.xmlbeans.impl.xb.xsdschema.FormChoice $r7;
        org.apache.xmlbeans.XmlObject r0, $r2, $r5;
        org.apache.xmlbeans.SchemaType $r3, $r4;
        boolean $z0;

        r0 := @parameter0: org.apache.xmlbeans.XmlObject;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

     label1:
        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.SchemaType schemaType()>();

        $r4 = <org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema: org.apache.xmlbeans.SchemaType type>;

        if $r3 == $r4 goto label2;

        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        if $z0 != 0 goto label1;

        return null;

     label2:
        $r5 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        $r6 = (org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema) $r5;

        $r7 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema: org.apache.xmlbeans.impl.xb.xsdschema.FormChoice xgetElementFormDefault()>();

        return $r7;
    }

    public static boolean uriMatch(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label4;

        if r1 == null goto label1;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;

     label4:
        if r1 != null goto label5;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("");

        return $z1;

     label5:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public static void copyGlobalElementToLocalElement(org.apache.xmlbeans.SchemaGlobalElement, org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl)
    {
        org.apache.xmlbeans.SchemaAnnotation $r13;
        org.apache.xmlbeans.SchemaParticle $r10, $r12;
        org.apache.xmlbeans.QNameSet $r11;
        org.apache.xmlbeans.SchemaType$Ref $r4;
        java.lang.String $r5;
        org.apache.xmlbeans.XmlObject $r7;
        org.apache.xmlbeans.SchemaType $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.xmlbeans.SchemaGlobalElement r1;
        org.apache.xmlbeans.SchemaIdentityConstraint$Ref[] $r9;
        org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl $r6;
        javax.xml.namespace.QName $r2;
        org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl r0, $r8;

        r1 := @parameter0: org.apache.xmlbeans.SchemaGlobalElement;

        r0 := @parameter1: org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl;

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaGlobalElement: javax.xml.namespace.QName getName()>();

        $r3 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaGlobalElement: org.apache.xmlbeans.SchemaType getType()>();

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType$Ref getRef()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setNameAndTypeRef(javax.xml.namespace.QName,org.apache.xmlbeans.SchemaType$Ref)>($r2, $r4);

        $z0 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaGlobalElement: boolean isNillable()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setNillable(boolean)>($z0);

        $r5 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaGlobalElement: java.lang.String getDefaultText()>();

        $z1 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaGlobalElement: boolean isFixed()>();

        $r6 = (org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl) r1;

        $r7 = virtualinvoke $r6.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: org.apache.xmlbeans.XmlObject getParseObject()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setDefault(java.lang.String,boolean,org.apache.xmlbeans.XmlObject)>($r5, $z1, $r7);

        $r8 = (org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl) r1;

        $r9 = virtualinvoke $r8.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: org.apache.xmlbeans.SchemaIdentityConstraint$Ref[] getIdentityConstraintRefs()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setIdentityConstraints(org.apache.xmlbeans.SchemaIdentityConstraint$Ref[])>($r9);

        $z2 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaGlobalElement: boolean blockExtension()>();

        $z3 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaGlobalElement: boolean blockRestriction()>();

        $z4 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaGlobalElement: boolean blockSubstitution()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setBlock(boolean,boolean,boolean)>($z2, $z3, $z4);

        $z5 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaGlobalElement: boolean isAbstract()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setAbstract(boolean)>($z5);

        $r10 = (org.apache.xmlbeans.SchemaParticle) r1;

        $r11 = interfaceinvoke $r10.<org.apache.xmlbeans.SchemaParticle: org.apache.xmlbeans.QNameSet acceptedStartNames()>();

        $r12 = (org.apache.xmlbeans.SchemaParticle) r1;

        $z6 = interfaceinvoke $r12.<org.apache.xmlbeans.SchemaParticle: boolean isSkippable()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setTransitionRules(org.apache.xmlbeans.QNameSet,boolean)>($r11, $z6);

        $r13 = interfaceinvoke r1.<org.apache.xmlbeans.SchemaGlobalElement: org.apache.xmlbeans.SchemaAnnotation getAnnotation()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setAnnotation(org.apache.xmlbeans.SchemaAnnotation)>($r13);

        return;
    }

    public static void copyGlobalAttributeToLocalAttribute(org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl, org.apache.xmlbeans.impl.schema.SchemaLocalAttributeImpl)
    {
        org.apache.xmlbeans.SchemaAnnotation $r8;
        org.apache.xmlbeans.impl.schema.SchemaLocalAttributeImpl r0;
        org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl r1;
        org.apache.xmlbeans.SchemaType$Ref $r3;
        int $i0;
        javax.xml.namespace.QName $r2;
        java.lang.String $r4;
        org.apache.xmlbeans.XmlObject $r5;
        org.apache.xmlbeans.impl.schema.XmlValueRef $r6;
        org.apache.xmlbeans.soap.SOAPArrayType $r7;
        boolean $z0;

        r1 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl;

        r0 := @parameter1: org.apache.xmlbeans.impl.schema.SchemaLocalAttributeImpl;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl: javax.xml.namespace.QName getName()>();

        $r3 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl: org.apache.xmlbeans.SchemaType$Ref getTypeRef()>();

        $i0 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl: int getUse()>();

        $r4 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl: java.lang.String getDefaultText()>();

        $r5 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl: org.apache.xmlbeans.XmlObject getParseObject()>();

        $r6 = r1.<org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl: org.apache.xmlbeans.impl.schema.XmlValueRef _defaultValue>;

        $z0 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl: boolean isFixed()>();

        $r7 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl: org.apache.xmlbeans.soap.SOAPArrayType getWSDLArrayType()>();

        $r8 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl: org.apache.xmlbeans.SchemaAnnotation getAnnotation()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaLocalAttributeImpl: void init(javax.xml.namespace.QName,org.apache.xmlbeans.SchemaType$Ref,int,java.lang.String,org.apache.xmlbeans.XmlObject,org.apache.xmlbeans.impl.schema.XmlValueRef,boolean,org.apache.xmlbeans.soap.SOAPArrayType,org.apache.xmlbeans.SchemaAnnotation,java.lang.Object)>($r2, $r3, $i0, $r4, $r5, $r6, $z0, $r7, $r8, null);

        return;
    }

    public static org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl translateElement(org.apache.xmlbeans.impl.xb.xsdschema.Element, java.lang.String, boolean, java.lang.String, java.lang.String, java.util.List, org.apache.xmlbeans.SchemaType)
    {
        org.apache.xmlbeans.impl.xb.xsdschema.KeyrefDocument$Keyref $r17;
        org.apache.xmlbeans.QNameSet $r6, $r7;
        org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl $r15, $r18, $r19, $r20, $r22, $r23, $r24, $r26, $r27, $r28;
        org.apache.xmlbeans.SchemaType r5, $r40, r112;
        org.apache.xmlbeans.impl.xb.xsdschema.FormChoice $r65, $r66, $r90;
        java.lang.Object[] $r38, $r78, $r80, $r82, $r84, $r86, $r87, $r88, $r89, $r91, $r93, $r95, $r97, $r99, $r106;
        org.apache.xmlbeans.XmlCursor $r9;
        org.apache.xmlbeans.soap.SOAPArrayType $r34, r132;
        org.apache.xmlbeans.impl.xb.xsdschema.KeyrefDocument$Keyref[] $r14;
        org.apache.xmlbeans.XmlString $r33, $r83, $r85;
        org.apache.xmlbeans.XmlQName $r56, $r76, $r96, $r100;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r39, $r41, $r54, $r102, $r104, r107, $r118;
        org.apache.xmlbeans.impl.values.NamespaceContext $r35;
        org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl $r2, $r37, $r62, $r73;
        org.apache.xmlbeans.impl.xb.xsdschema.Keybase[] $r13, $r136;
        org.apache.xmlbeans.QNameSetBuilder $r120;
        org.apache.xmlbeans.impl.xb.xsdschema.Keybase $r21, $r25;
        org.apache.xmlbeans.impl.xb.xsdschema.LocalComplexType $r71, $r92, $r127;
        javax.xml.namespace.QName[] $r119, r129;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r4, $r42, $r46, $r122;
        org.apache.xmlbeans.SchemaType$Ref $r130, $r133;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, i10, $i11, $i12, $i13, $i14, $i15, i16, i17, $i18, i19, i20, i21;
        org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl[] $r135;
        java.lang.Object $r8, $r12, $r48, $r49, $r50, $r75, $r124;
        org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum $r72;
        org.apache.xmlbeans.impl.xb.xsdschema.Element r1;
        org.apache.xmlbeans.SchemaGlobalElement$Ref $r63;
        org.apache.xmlbeans.XmlBoolean $r79;
        javax.xml.namespace.QName $r10, $r36, $r52, $r53, $r55, $r59, $r60, $r61, $r69, $r101, $r110, $r114, r115, $r117, $r125;
        org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl $r32, $r64, $r74, r113;
        org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType $r70, $r94;
        java.lang.AssertionError $r77;
        java.lang.String r3, $r11, r44, r45, $r67, $r68, $r103, $r108, r109, $r111, $r116, $r121, $r126, $r131, $r134;
        org.apache.xmlbeans.SchemaIdentityConstraint$Ref[] r137;
        org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl $r47, $r123;
        org.apache.xmlbeans.impl.schema.StscState $r0;
        org.apache.xmlbeans.impl.xb.xsdschema.BlockSet $r81;
        org.apache.xmlbeans.impl.xb.xsdschema.Annotated r128;
        boolean $z0, $z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, z23, $z24, z25, z26, $z27, z28, $z29, z30, $z31, $z32, z33, z34, z35, z36;
        java.util.List $r29, $r30, $r31, r43, $r57, $r58;
        org.apache.xmlbeans.SchemaIdentityConstraint$Ref $r16;
        org.apache.xmlbeans.XmlNCName $r98;
        org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException $r105;
        org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl $r51;

        r1 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.Element;

        r3 := @parameter1: java.lang.String;

        z2 := @parameter2: boolean;

        r44 := @parameter3: java.lang.String;

        r45 := @parameter4: java.lang.String;

        r43 := @parameter5: java.util.List;

        r5 := @parameter6: org.apache.xmlbeans.SchemaType;

        $r0 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        r107 = null;

        $z0 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: boolean isSetSubstitutionGroup()>();

        if $z0 == 0 goto label01;

        $r101 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: javax.xml.namespace.QName getSubstitutionGroup()>();

        $r102 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) r5;

        $r103 = virtualinvoke $r102.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: java.lang.String getChameleonNamespace()>();

        $r104 = virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaTypeImpl findDocumentType(javax.xml.namespace.QName,java.lang.String,java.lang.String)>($r101, $r103, r3);

        r107 = $r104;

        if $r104 == null goto label01;

        staticinvoke <org.apache.xmlbeans.impl.schema.StscResolver: boolean resolveType(org.apache.xmlbeans.impl.schema.SchemaTypeImpl)>($r104);

     label01:
        $r108 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: java.lang.String getName()>();

        r109 = $r108;

        $r110 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: javax.xml.namespace.QName getRef()>();

        if $r110 == null goto label02;

        if $r108 == null goto label02;

        $r99 = newarray (java.lang.Object)[1];

        $r99[0] = $r108;

        $r100 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: org.apache.xmlbeans.XmlQName xgetRef()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("src-element.2.1a", $r99, $r100);

        r109 = null;

     label02:
        if $r110 != null goto label03;

        if r109 != null goto label03;

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("src-element.2.1b", null, r1);

        return null;

     label03:
        if r109 == null goto label04;

        $z22 = staticinvoke <org.apache.xmlbeans.impl.common.XMLChar: boolean isValidNCName(java.lang.String)>(r109);

        if $z22 != 0 goto label04;

        $r97 = newarray (java.lang.Object)[2];

        $r97[0] = r109;

        $r97[1] = "name";

        $r98 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: org.apache.xmlbeans.XmlNCName xgetName()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("invalid-value", $r97, $r98);

     label04:
        if $r110 == null goto label20;

        $r69 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: javax.xml.namespace.QName getType()>();

        if $r69 == null goto label05;

        $r95 = newarray (java.lang.Object)[1];

        $r95[0] = "type";

        $r96 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: org.apache.xmlbeans.XmlQName xgetType()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("src-element.2.2", $r95, $r96);

     label05:
        $r70 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType getSimpleType()>();

        if $r70 == null goto label06;

        $r93 = newarray (java.lang.Object)[1];

        $r93[0] = "<simpleType>";

        $r94 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType getSimpleType()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("src-element.2.2", $r93, $r94);

     label06:
        $r71 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: org.apache.xmlbeans.impl.xb.xsdschema.LocalComplexType getComplexType()>();

        if $r71 == null goto label07;

        $r91 = newarray (java.lang.Object)[1];

        $r91[0] = "<complexType>";

        $r92 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: org.apache.xmlbeans.impl.xb.xsdschema.LocalComplexType getComplexType()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("src-element.2.2", $r91, $r92);

     label07:
        $r72 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum getForm()>();

        if $r72 == null goto label08;

        $r89 = newarray (java.lang.Object)[1];

        $r89[0] = "form";

        $r90 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: org.apache.xmlbeans.impl.xb.xsdschema.FormChoice xgetForm()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("src-element.2.2", $r89, $r90);

     label08:
        $i5 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: int sizeOfKeyArray()>();

        if $i5 <= 0 goto label09;

        $r88 = newarray (java.lang.Object)[1];

        $r88[0] = "<key>";

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void warning(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("src-element.2.2", $r88, r1);

     label09:
        $i6 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: int sizeOfKeyrefArray()>();

        if $i6 <= 0 goto label10;

        $r87 = newarray (java.lang.Object)[1];

        $r87[0] = "<keyref>";

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void warning(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("src-element.2.2", $r87, r1);

     label10:
        $i7 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: int sizeOfUniqueArray()>();

        if $i7 <= 0 goto label11;

        $r86 = newarray (java.lang.Object)[1];

        $r86[0] = "<unique>";

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void warning(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("src-element.2.2", $r86, r1);

     label11:
        $z16 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: boolean isSetDefault()>();

        if $z16 == 0 goto label12;

        $r84 = newarray (java.lang.Object)[1];

        $r84[0] = "default";

        $r85 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: org.apache.xmlbeans.XmlString xgetDefault()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void warning(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("src-element.2.2", $r84, $r85);

     label12:
        $z17 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: boolean isSetFixed()>();

        if $z17 == 0 goto label13;

        $r82 = newarray (java.lang.Object)[1];

        $r82[0] = "fixed";

        $r83 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: org.apache.xmlbeans.XmlString xgetFixed()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void warning(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("src-element.2.2", $r82, $r83);

     label13:
        $z18 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: boolean isSetBlock()>();

        if $z18 == 0 goto label14;

        $r80 = newarray (java.lang.Object)[1];

        $r80[0] = "block";

        $r81 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: org.apache.xmlbeans.impl.xb.xsdschema.BlockSet xgetBlock()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void warning(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("src-element.2.2", $r80, $r81);

     label14:
        $z19 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: boolean isSetNillable()>();

        if $z19 == 0 goto label15;

        $r78 = newarray (java.lang.Object)[1];

        $r78[0] = "nillable";

        $r79 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: org.apache.xmlbeans.XmlBoolean xgetNillable()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void warning(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("src-element.2.2", $r78, $r79);

     label15:
        $z20 = <org.apache.xmlbeans.impl.schema.StscTranslator: boolean $assertionsDisabled>;

        if $z20 != 0 goto label16;

        $z21 = r1 instanceof org.apache.xmlbeans.impl.xb.xsdschema.LocalElement;

        if $z21 != 0 goto label16;

        $r77 = new java.lang.AssertionError;

        specialinvoke $r77.<java.lang.AssertionError: void <init>()>();

        throw $r77;

     label16:
        if z2 == 0 goto label17;

        $r111 = r3;

        goto label18;

     label17:
        $r111 = null;

     label18:
        $r73 = virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl findGlobalElement(javax.xml.namespace.QName,java.lang.String,java.lang.String)>($r110, $r111, r3);

        if $r73 != null goto label19;

        $r76 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: org.apache.xmlbeans.XmlQName xgetRef()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void notFoundError(javax.xml.namespace.QName,int,org.apache.xmlbeans.XmlObject,boolean)>($r110, 1, $r76, 1);

        return null;

     label19:
        $r74 = new org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl;

        specialinvoke $r74.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void <init>()>();

        virtualinvoke $r74.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setParticleType(int)>(4);

        $r75 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.Object getUserData(org.apache.xmlbeans.XmlObject)>(r1);

        virtualinvoke $r74.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setUserData(java.lang.Object)>($r75);

        staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: void copyGlobalElementToLocalElement(org.apache.xmlbeans.SchemaGlobalElement,org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl)>($r73, $r74);

        return $r74;

     label20:
        r112 = null;

        $z1 = r1 instanceof org.apache.xmlbeans.impl.xb.xsdschema.LocalElement;

        if $z1 == 0 goto label28;

        $r64 = new org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl;

        specialinvoke $r64.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void <init>()>();

        r113 = $r64;

        $r65 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: org.apache.xmlbeans.impl.xb.xsdschema.FormChoice xgetForm()>();

        if $r65 == null goto label21;

        $r68 = interfaceinvoke $r65.<org.apache.xmlbeans.impl.xb.xsdschema.FormChoice: java.lang.String getStringValue()>();

        z23 = virtualinvoke $r68.<java.lang.String: boolean equals(java.lang.Object)>("qualified");

        goto label25;

     label21:
        if r44 == null goto label22;

        z23 = virtualinvoke r44.<java.lang.String: boolean equals(java.lang.Object)>("qualified");

        goto label25;

     label22:
        $r66 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: org.apache.xmlbeans.impl.xb.xsdschema.FormChoice findElementFormDefault(org.apache.xmlbeans.XmlObject)>(r1);

        if $r66 == null goto label23;

        $r67 = interfaceinvoke $r66.<org.apache.xmlbeans.impl.xb.xsdschema.FormChoice: java.lang.String getStringValue()>();

        $z15 = virtualinvoke $r67.<java.lang.String: boolean equals(java.lang.Object)>("qualified");

        if $z15 == 0 goto label23;

        $z24 = 1;

        goto label24;

     label23:
        $z24 = 0;

     label24:
        z23 = $z24;

     label25:
        if z23 == 0 goto label26;

        $r114 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: javax.xml.namespace.QName forLNS(java.lang.String,java.lang.String)>(r109, r3);

        goto label27;

     label26:
        $r114 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: javax.xml.namespace.QName forLN(java.lang.String)>(r109);

     label27:
        r115 = $r114;

        goto label37;

     label28:
        $r2 = new org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl;

        $r4 = virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>(r3);

        specialinvoke $r2.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: void <init>(org.apache.xmlbeans.impl.schema.SchemaContainer)>($r4);

        r113 = $r2;

        if r107 == null goto label31;

        $r61 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: javax.xml.namespace.QName getSubstitutionGroup()>();

        if z2 == 0 goto label29;

        $r116 = r3;

        goto label30;

     label29:
        $r116 = null;

     label30:
        $r62 = virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl findGlobalElement(javax.xml.namespace.QName,java.lang.String,java.lang.String)>($r61, $r116, r3);

        if $r62 == null goto label31;

        $r63 = virtualinvoke $r62.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: org.apache.xmlbeans.SchemaGlobalElement$Ref getRef()>();

        virtualinvoke $r2.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: void setSubstitutionGroup(org.apache.xmlbeans.SchemaGlobalElement$Ref)>($r63);

     label31:
        $r117 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: javax.xml.namespace.QName forLNS(java.lang.String,java.lang.String)>(r109, r3);

        r115 = $r117;

        $r118 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) r5;

        $r119 = virtualinvoke $r118.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: javax.xml.namespace.QName[] getSubstitutionGroupMembers()>();

        $r120 = new org.apache.xmlbeans.QNameSetBuilder;

        specialinvoke $r120.<org.apache.xmlbeans.QNameSetBuilder: void <init>()>();

        virtualinvoke $r120.<org.apache.xmlbeans.QNameSetBuilder: void add(javax.xml.namespace.QName)>($r117);

        i8 = 0;

     label32:
        $i9 = lengthof $r119;

        if i8 >= $i9 goto label33;

        $r59 = $r119[i8];

        virtualinvoke $r2.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: void addSubstitutionGroupMember(javax.xml.namespace.QName)>($r59);

        $r60 = $r119[i8];

        virtualinvoke $r120.<org.apache.xmlbeans.QNameSetBuilder: void add(javax.xml.namespace.QName)>($r60);

        i8 = i8 + 1;

        goto label32;

     label33:
        $r6 = staticinvoke <org.apache.xmlbeans.QNameSet: org.apache.xmlbeans.QNameSet forSpecification(org.apache.xmlbeans.QNameSetSpecification)>($r120);

        virtualinvoke $r2.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setTransitionRules(org.apache.xmlbeans.QNameSet,boolean)>($r6, 0);

        $r7 = <org.apache.xmlbeans.QNameSet: org.apache.xmlbeans.QNameSet EMPTY>;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setTransitionNotes(org.apache.xmlbeans.QNameSet,boolean)>($r7, 1);

        z25 = 0;

        z26 = 0;

        $r8 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: java.lang.Object getFinal()>();

        if $r8 == null goto label36;

        $z10 = $r8 instanceof java.lang.String;

        if $z10 == 0 goto label34;

        $z14 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>("#all");

        if $z14 == 0 goto label34;

        z26 = 1;

        z25 = 1;

        goto label36;

     label34:
        $z11 = $r8 instanceof java.util.List;

        if $z11 == 0 goto label36;

        $r57 = (java.util.List) $r8;

        $z12 = interfaceinvoke $r57.<java.util.List: boolean contains(java.lang.Object)>("extension");

        if $z12 == 0 goto label35;

        z25 = 1;

     label35:
        $r58 = (java.util.List) $r8;

        $z13 = interfaceinvoke $r58.<java.util.List: boolean contains(java.lang.Object)>("restriction");

        if $z13 == 0 goto label36;

        z26 = 1;

     label36:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: void setFinal(boolean,boolean)>(z25, z26);

        $z27 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: boolean getAbstract()>();

        virtualinvoke $r2.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: void setAbstract(boolean)>($z27);

        $r121 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.String findFilename(org.apache.xmlbeans.XmlObject)>(r1);

        virtualinvoke $r2.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: void setFilename(java.lang.String)>($r121);

        virtualinvoke $r2.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: void setParseContext(org.apache.xmlbeans.XmlObject,java.lang.String,boolean)>(r1, r3, z2);

     label37:
        $r122 = virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>(r3);

        $r123 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl: org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl getAnnotation(org.apache.xmlbeans.impl.schema.SchemaContainer,org.apache.xmlbeans.impl.xb.xsdschema.Annotated)>($r122, r1);

        virtualinvoke r113.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setAnnotation(org.apache.xmlbeans.SchemaAnnotation)>($r123);

        $r124 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.Object getUserData(org.apache.xmlbeans.XmlObject)>(r1);

        virtualinvoke r113.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setUserData(java.lang.Object)>($r124);

        $r125 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: javax.xml.namespace.QName getType()>();

        if $r125 == null goto label40;

        $r53 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: javax.xml.namespace.QName getType()>();

        if z2 == 0 goto label38;

        $r126 = r3;

        goto label39;

     label38:
        $r126 = null;

     label39:
        $r54 = virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaTypeImpl findGlobalType(javax.xml.namespace.QName,java.lang.String,java.lang.String)>($r53, $r126, r3);

        r112 = $r54;

        if $r54 != null goto label40;

        $r55 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: javax.xml.namespace.QName getType()>();

        $r56 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: org.apache.xmlbeans.XmlQName xgetType()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void notFoundError(javax.xml.namespace.QName,int,org.apache.xmlbeans.XmlObject,boolean)>($r55, 0, $r56, 1);

     label40:
        z28 = 0;

        $r127 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: org.apache.xmlbeans.impl.xb.xsdschema.LocalComplexType getComplexType()>();

        r128 = $r127;

        if $r127 != null goto label41;

        r128 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType getSimpleType()>();

        z28 = 1;

     label41:
        if r112 == null goto label42;

        if r128 == null goto label42;

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("src-element.3", null, r128);

        r128 = null;

     label42:
        if r128 == null goto label49;

        $r38 = virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: java.lang.Object[] getCurrentProcessing()>();

        $i3 = lengthof $r38;

        r129 = newarray (javax.xml.namespace.QName)[$i3];

        i10 = 0;

     label43:
        $i4 = lengthof r129;

        if i10 >= $i4 goto label45;

        $r49 = $r38[i10];

        $z9 = $r49 instanceof org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl;

        if $z9 == 0 goto label44;

        $r50 = $r38[i10];

        $r51 = (org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl) $r50;

        $r52 = virtualinvoke $r51.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: javax.xml.namespace.QName getName()>();

        r129[i10] = $r52;

     label44:
        i10 = i10 + 1;

        goto label43;

     label45:
        $r39 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) r5;

        $r40 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: org.apache.xmlbeans.SchemaType checkRecursiveGroupReference(javax.xml.namespace.QName[],javax.xml.namespace.QName,org.apache.xmlbeans.impl.schema.SchemaTypeImpl)>(r129, r115, $r39);

        if $r40 == null goto label46;

        r112 = $r40;

        goto label49;

     label46:
        $r41 = new org.apache.xmlbeans.impl.schema.SchemaTypeImpl;

        $r42 = virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>(r3);

        specialinvoke $r41.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void <init>(org.apache.xmlbeans.impl.schema.SchemaContainer)>($r42);

        r112 = $r41;

        virtualinvoke $r41.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setContainerField(org.apache.xmlbeans.SchemaField)>(r113);

        if r5 != null goto label47;

        $r130 = null;

        goto label48;

     label47:
        $r130 = interfaceinvoke r5.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType$Ref getRef()>();

     label48:
        virtualinvoke $r41.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setOuterSchemaTypeRef(org.apache.xmlbeans.SchemaType$Ref)>($r130);

        virtualinvoke $r41.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setGroupReferenceContext(javax.xml.namespace.QName[])>(r129);

        interfaceinvoke r43.<java.util.List: boolean add(java.lang.Object)>($r41);

        virtualinvoke $r41.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setSimpleType(boolean)>(z28);

        virtualinvoke $r41.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setParseContext(org.apache.xmlbeans.XmlObject,java.lang.String,boolean,java.lang.String,java.lang.String,boolean)>(r128, r3, z2, r44, r45, 0);

        $r46 = virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>(r3);

        $r47 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl: org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl getAnnotation(org.apache.xmlbeans.impl.schema.SchemaContainer,org.apache.xmlbeans.impl.xb.xsdschema.Annotated)>($r46, r128);

        virtualinvoke $r41.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setAnnotation(org.apache.xmlbeans.SchemaAnnotation)>($r47);

        $r48 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.Object getUserData(org.apache.xmlbeans.XmlObject)>(r128);

        virtualinvoke $r41.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setUserData(java.lang.Object)>($r48);

     label49:
        if r112 != null goto label52;

        if r107 == null goto label52;

        $r36 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: javax.xml.namespace.QName getSubstitutionGroup()>();

        if z2 == 0 goto label50;

        $r131 = r3;

        goto label51;

     label50:
        $r131 = null;

     label51:
        $r37 = virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl findGlobalElement(javax.xml.namespace.QName,java.lang.String,java.lang.String)>($r36, $r131, r3);

        if $r37 == null goto label52;

        r112 = interfaceinvoke $r37.<org.apache.xmlbeans.SchemaGlobalElement: org.apache.xmlbeans.SchemaType getType()>();

     label52:
        if r112 != null goto label53;

        r112 = <org.apache.xmlbeans.impl.schema.BuiltinSchemaTypeSystem: org.apache.xmlbeans.impl.schema.SchemaTypeImpl ST_ANY_TYPE>;

     label53:
        r132 = null;

        $r9 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: org.apache.xmlbeans.XmlCursor newCursor()>();

        $r10 = <org.apache.xmlbeans.impl.schema.StscTranslator: javax.xml.namespace.QName WSDL_ARRAYTYPE_NAME>;

        $r11 = interfaceinvoke $r9.<org.apache.xmlbeans.XmlCursor: java.lang.String getAttributeText(javax.xml.namespace.QName)>($r10);

        interfaceinvoke $r9.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        if $r11 == null goto label57;

     label54:
        $r34 = new org.apache.xmlbeans.soap.SOAPArrayType;

        $r35 = new org.apache.xmlbeans.impl.values.NamespaceContext;

        specialinvoke $r35.<org.apache.xmlbeans.impl.values.NamespaceContext: void <init>(org.apache.xmlbeans.XmlObject)>(r1);

        specialinvoke $r34.<org.apache.xmlbeans.soap.SOAPArrayType: void <init>(java.lang.String,org.apache.xmlbeans.impl.common.PrefixResolver)>($r11, $r35);

        r132 = $r34;

     label55:
        goto label57;

     label56:
        $r105 := @caughtexception;

        $r106 = newarray (java.lang.Object)[1];

        $r106[0] = $r11;

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("soaparray", $r106, r1);

     label57:
        virtualinvoke r113.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setWsdlArrayType(org.apache.xmlbeans.soap.SOAPArrayType)>(r132);

        $z29 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: boolean isSetFixed()>();

        z30 = $z29;

        $z31 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: boolean isSetDefault()>();

        if $z31 == 0 goto label58;

        if $z29 == 0 goto label58;

        $r33 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: org.apache.xmlbeans.XmlString xgetFixed()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("src-element.1", null, $r33);

        z30 = 0;

     label58:
        virtualinvoke r113.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setParticleType(int)>(4);

        $r133 = interfaceinvoke r112.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType$Ref getRef()>();

        virtualinvoke r113.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setNameAndTypeRef(javax.xml.namespace.QName,org.apache.xmlbeans.SchemaType$Ref)>(r115, $r133);

        $z32 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: boolean getNillable()>();

        virtualinvoke r113.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setNillable(boolean)>($z32);

        $r32 = r113;

        if z30 == 0 goto label59;

        $r134 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: java.lang.String getFixed()>();

        goto label60;

     label59:
        $r134 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: java.lang.String getDefault()>();

     label60:
        virtualinvoke $r32.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setDefault(java.lang.String,boolean,org.apache.xmlbeans.XmlObject)>($r134, z30, r1);

        $r12 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: java.lang.Object getBlock()>();

        z33 = 0;

        z34 = 0;

        z35 = 0;

        if $r12 == null goto label64;

        $z3 = $r12 instanceof java.lang.String;

        if $z3 == 0 goto label61;

        $z8 = virtualinvoke $r12.<java.lang.Object: boolean equals(java.lang.Object)>("#all");

        if $z8 == 0 goto label61;

        z35 = 1;

        z34 = 1;

        z33 = 1;

        goto label64;

     label61:
        $z4 = $r12 instanceof java.util.List;

        if $z4 == 0 goto label64;

        $r29 = (java.util.List) $r12;

        $z5 = interfaceinvoke $r29.<java.util.List: boolean contains(java.lang.Object)>("extension");

        if $z5 == 0 goto label62;

        z33 = 1;

     label62:
        $r30 = (java.util.List) $r12;

        $z6 = interfaceinvoke $r30.<java.util.List: boolean contains(java.lang.Object)>("restriction");

        if $z6 == 0 goto label63;

        z34 = 1;

     label63:
        $r31 = (java.util.List) $r12;

        $z7 = interfaceinvoke $r31.<java.util.List: boolean contains(java.lang.Object)>("substitution");

        if $z7 == 0 goto label64;

        z35 = 1;

     label64:
        virtualinvoke r113.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setBlock(boolean,boolean,boolean)>(z33, z34, z35);

        z36 = 0;

        $i11 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: int sizeOfKeyArray()>();

        $i12 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: int sizeOfKeyrefArray()>();

        $i13 = $i11 + $i12;

        $i14 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: int sizeOfUniqueArray()>();

        $i15 = $i13 + $i14;

        $r135 = newarray (org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl)[$i15];

        i16 = 0;

        $r136 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: org.apache.xmlbeans.impl.xb.xsdschema.Keybase[] getKeyArray()>();

        i17 = 0;

     label65:
        $i18 = lengthof $r136;

        if i17 >= $i18 goto label68;

        $r25 = $r136[i17];

        $r26 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl translateIdentityConstraint(org.apache.xmlbeans.impl.xb.xsdschema.Keybase,java.lang.String,boolean)>($r25, r3, z2);

        $r135[i16] = $r26;

        $r27 = $r135[i16];

        if $r27 == null goto label66;

        $r28 = $r135[i16];

        virtualinvoke $r28.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: void setConstraintCategory(int)>(1);

        goto label67;

     label66:
        z36 = 1;

     label67:
        i17 = i17 + 1;

        i16 = i16 + 1;

        goto label65;

     label68:
        $r13 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: org.apache.xmlbeans.impl.xb.xsdschema.Keybase[] getUniqueArray()>();

        i19 = 0;

     label69:
        $i0 = lengthof $r13;

        if i19 >= $i0 goto label72;

        $r21 = $r13[i19];

        $r22 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl translateIdentityConstraint(org.apache.xmlbeans.impl.xb.xsdschema.Keybase,java.lang.String,boolean)>($r21, r3, z2);

        $r135[i16] = $r22;

        $r23 = $r135[i16];

        if $r23 == null goto label70;

        $r24 = $r135[i16];

        virtualinvoke $r24.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: void setConstraintCategory(int)>(3);

        goto label71;

     label70:
        z36 = 1;

     label71:
        i19 = i19 + 1;

        i16 = i16 + 1;

        goto label69;

     label72:
        $r14 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Element: org.apache.xmlbeans.impl.xb.xsdschema.KeyrefDocument$Keyref[] getKeyrefArray()>();

        i20 = 0;

     label73:
        $i1 = lengthof $r14;

        if i20 >= $i1 goto label76;

        $r17 = $r14[i20];

        $r18 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl translateIdentityConstraint(org.apache.xmlbeans.impl.xb.xsdschema.Keybase,java.lang.String,boolean)>($r17, r3, z2);

        $r135[i16] = $r18;

        $r19 = $r135[i16];

        if $r19 == null goto label74;

        $r20 = $r135[i16];

        virtualinvoke $r20.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: void setConstraintCategory(int)>(2);

        goto label75;

     label74:
        z36 = 1;

     label75:
        i20 = i20 + 1;

        i16 = i16 + 1;

        goto label73;

     label76:
        if z36 != 0 goto label79;

        r137 = newarray (org.apache.xmlbeans.SchemaIdentityConstraint$Ref)[$i15];

        i21 = 0;

     label77:
        $i2 = lengthof r137;

        if i21 >= $i2 goto label78;

        $r15 = $r135[i21];

        $r16 = virtualinvoke $r15.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: org.apache.xmlbeans.SchemaIdentityConstraint$Ref getRef()>();

        r137[i21] = $r16;

        i21 = i21 + 1;

        goto label77;

     label78:
        virtualinvoke r113.<org.apache.xmlbeans.impl.schema.SchemaLocalElementImpl: void setIdentityConstraints(org.apache.xmlbeans.SchemaIdentityConstraint$Ref[])>(r137);

     label79:
        return r113;

        catch org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException from label54 to label55 with label56;
    }

    private static org.apache.xmlbeans.SchemaType checkRecursiveGroupReference(javax.xml.namespace.QName[], javax.xml.namespace.QName, org.apache.xmlbeans.impl.schema.SchemaTypeImpl)
    {
        org.apache.xmlbeans.SchemaField $r4;
        javax.xml.namespace.QName[] r0, $r6;
        int $i0, $i1, $i2, $i3, i4;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl r1, r12;
        org.apache.xmlbeans.SchemaType $r13;
        boolean $z0, $z1, $z2, z3;
        javax.xml.namespace.QName $r2, r3, $r5, $r7, $r8, $r9, $r10, $r11;

        r0 := @parameter0: javax.xml.namespace.QName[];

        r3 := @parameter1: javax.xml.namespace.QName;

        r1 := @parameter2: org.apache.xmlbeans.impl.schema.SchemaTypeImpl;

        $i0 = lengthof r0;

        if $i0 >= 1 goto label01;

        return null;

     label01:
        r12 = r1;

     label02:
        if r12 == null goto label11;

        $r2 = virtualinvoke r12.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: javax.xml.namespace.QName getName()>();

        if $r2 != null goto label03;

        $z0 = virtualinvoke r12.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: boolean isDocumentType()>();

        if $z0 == 0 goto label04;

     label03:
        return null;

     label04:
        $r4 = virtualinvoke r12.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.SchemaField getContainerField()>();

        $r5 = interfaceinvoke $r4.<org.apache.xmlbeans.SchemaField: javax.xml.namespace.QName getName()>();

        $z1 = virtualinvoke r3.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label10;

        $r6 = virtualinvoke r12.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: javax.xml.namespace.QName[] getGroupReferenceContext()>();

        if $r6 == null goto label10;

        $i2 = lengthof $r6;

        $i1 = lengthof r0;

        if $i2 != $i1 goto label10;

        z3 = 1;

        i4 = 0;

     label05:
        $i3 = lengthof r0;

        if i4 >= $i3 goto label09;

        $r7 = r0[i4];

        if $r7 != null goto label06;

        $r11 = $r6[i4];

        if $r11 == null goto label08;

     label06:
        $r8 = r0[i4];

        if $r8 == null goto label07;

        $r10 = r0[i4];

        $r9 = $r6[i4];

        $z2 = virtualinvoke $r10.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r9);

        if $z2 != 0 goto label08;

     label07:
        z3 = 0;

        goto label09;

     label08:
        i4 = i4 + 1;

        goto label05;

     label09:
        if z3 == 0 goto label10;

        return r12;

     label10:
        $r13 = virtualinvoke r12.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.SchemaType getOuterType()>();

        r12 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) $r13;

        goto label02;

     label11:
        return null;
    }

    private static java.lang.String removeWhitespace(java.lang.String)
    {
        char $c1;
        java.lang.StringBuffer $r3;
        int $i0, i2, $i3;
        java.lang.String r1, $r2;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        i2 = 0;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i2 >= $i0 goto label4;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        $i3 = (int) $c1;

        $z0 = staticinvoke <org.apache.xmlbeans.impl.common.XMLChar: boolean isSpace(int)>($i3);

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    private static boolean checkXPathSyntax(java.lang.String)
    {
        org.apache.xmlbeans.impl.regex.RegularExpression $r1, $r2;
        java.lang.Throwable $r3;
        java.lang.String $r0, r4;
        boolean $z0;

        r4 := @parameter0: java.lang.String;

        if r4 != null goto label1;

        return 0;

     label1:
        $r0 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.String removeWhitespace(java.lang.String)>(r4);

        $r1 = <org.apache.xmlbeans.impl.schema.StscTranslator: org.apache.xmlbeans.impl.regex.RegularExpression XPATH_REGEXP>;

        entermonitor $r1;

     label2:
        $r2 = <org.apache.xmlbeans.impl.schema.StscTranslator: org.apache.xmlbeans.impl.regex.RegularExpression XPATH_REGEXP>;

        $z0 = virtualinvoke $r2.<org.apache.xmlbeans.impl.regex.RegularExpression: boolean matches(java.lang.String)>($r0);

        exitmonitor $r1;

     label3:
        return $z0;

     label4:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private static org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl translateIdentityConstraint(org.apache.xmlbeans.impl.xb.xsdschema.Keybase, java.lang.String, boolean)
    {
        org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl $r13;
        org.apache.xmlbeans.impl.schema.StscState $r0;
        org.apache.xmlbeans.impl.xb.xsdschema.SelectorDocument$Selector$Xpath $r32;
        org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl $r5, $r20;
        org.apache.xmlbeans.impl.xb.xsdschema.FieldDocument$Field$Xpath $r29;
        boolean $z0, z1, $z2;
        javax.xml.namespace.QName $r9, $r19;
        org.apache.xmlbeans.impl.xb.xsdschema.Keybase r1;
        java.lang.Object[] $r25, $r30, $r34;
        org.apache.xmlbeans.XmlCursor $r15;
        org.apache.xmlbeans.impl.xb.xsdschema.SelectorDocument$Selector $r2, $r3, $r10, $r31;
        java.util.HashMap $r16;
        java.lang.String[] r17;
        org.apache.xmlbeans.impl.xb.xsdschema.FieldDocument$Field[] $r4;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r7, $r12;
        int $i0, $i1, $i2, i3, i4;
        org.apache.xmlbeans.impl.xb.xsdschema.FieldDocument$Field $r21, $r23, $r26, $r28;
        java.lang.String r6, $r8, $r11, $r18, $r22, $r24, $r27, $r35, $r36;
        org.apache.xmlbeans.impl.common.XPath$XPathCompileException $r33;
        java.lang.Object $r14;

        r1 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.Keybase;

        r6 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        $r0 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Keybase: org.apache.xmlbeans.impl.xb.xsdschema.SelectorDocument$Selector getSelector()>();

        if $r2 != null goto label01;

        $r36 = null;

        goto label02;

     label01:
        $r3 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Keybase: org.apache.xmlbeans.impl.xb.xsdschema.SelectorDocument$Selector getSelector()>();

        $r36 = interfaceinvoke $r3.<org.apache.xmlbeans.impl.xb.xsdschema.SelectorDocument$Selector: java.lang.String getXpath()>();

     label02:
        $z0 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: boolean checkXPathSyntax(java.lang.String)>($r36);

        if $z0 != 0 goto label03;

        $r30 = newarray (java.lang.Object)[1];

        $r30[0] = $r36;

        $r31 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Keybase: org.apache.xmlbeans.impl.xb.xsdschema.SelectorDocument$Selector getSelector()>();

        $r32 = interfaceinvoke $r31.<org.apache.xmlbeans.impl.xb.xsdschema.SelectorDocument$Selector: org.apache.xmlbeans.impl.xb.xsdschema.SelectorDocument$Selector$Xpath xgetXpath()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("c-selector-xpath", $r30, $r32);

        return null;

     label03:
        $r4 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Keybase: org.apache.xmlbeans.impl.xb.xsdschema.FieldDocument$Field[] getFieldArray()>();

        i3 = 0;

     label04:
        $i0 = lengthof $r4;

        if i3 >= $i0 goto label06;

        $r23 = $r4[i3];

        $r24 = interfaceinvoke $r23.<org.apache.xmlbeans.impl.xb.xsdschema.FieldDocument$Field: java.lang.String getXpath()>();

        $z2 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: boolean checkXPathSyntax(java.lang.String)>($r24);

        if $z2 != 0 goto label05;

        $r25 = newarray (java.lang.Object)[1];

        $r26 = $r4[i3];

        $r27 = interfaceinvoke $r26.<org.apache.xmlbeans.impl.xb.xsdschema.FieldDocument$Field: java.lang.String getXpath()>();

        $r25[0] = $r27;

        $r28 = $r4[i3];

        $r29 = interfaceinvoke $r28.<org.apache.xmlbeans.impl.xb.xsdschema.FieldDocument$Field: org.apache.xmlbeans.impl.xb.xsdschema.FieldDocument$Field$Xpath xgetXpath()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("c-fields-xpaths", $r25, $r29);

        return null;

     label05:
        i3 = i3 + 1;

        goto label04;

     label06:
        $r5 = new org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl;

        $r7 = virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>(r6);

        specialinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: void <init>(org.apache.xmlbeans.impl.schema.SchemaContainer)>($r7);

        $r8 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Keybase: java.lang.String getName()>();

        $r9 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: javax.xml.namespace.QName forLNS(java.lang.String,java.lang.String)>($r8, r6);

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: void setName(javax.xml.namespace.QName)>($r9);

        $r10 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Keybase: org.apache.xmlbeans.impl.xb.xsdschema.SelectorDocument$Selector getSelector()>();

        $r11 = interfaceinvoke $r10.<org.apache.xmlbeans.impl.xb.xsdschema.SelectorDocument$Selector: java.lang.String getXpath()>();

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: void setSelector(java.lang.String)>($r11);

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: void setParseContext(org.apache.xmlbeans.XmlObject,java.lang.String,boolean)>(r1, r6, z1);

        $r12 = virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>(r6);

        $r13 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl: org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl getAnnotation(org.apache.xmlbeans.impl.schema.SchemaContainer,org.apache.xmlbeans.impl.xb.xsdschema.Annotated)>($r12, r1);

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: void setAnnotation(org.apache.xmlbeans.SchemaAnnotation)>($r13);

        $r14 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.Object getUserData(org.apache.xmlbeans.XmlObject)>(r1);

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: void setUserData(java.lang.Object)>($r14);

        $r15 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Keybase: org.apache.xmlbeans.XmlCursor newCursor()>();

        $r16 = new java.util.HashMap;

        specialinvoke $r16.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r15.<org.apache.xmlbeans.XmlCursor: void getAllNamespaces(java.util.Map)>($r16);

        interfaceinvoke $r16.<java.util.Map: java.lang.Object remove(java.lang.Object)>("");

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: void setNSMap(java.util.Map)>($r16);

        interfaceinvoke $r15.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        $i1 = lengthof $r4;

        r17 = newarray (java.lang.String)[$i1];

        i4 = 0;

     label07:
        $i2 = lengthof r17;

        if i4 >= $i2 goto label08;

        $r21 = $r4[i4];

        $r22 = interfaceinvoke $r21.<org.apache.xmlbeans.impl.xb.xsdschema.FieldDocument$Field: java.lang.String getXpath()>();

        r17[i4] = $r22;

        i4 = i4 + 1;

        goto label07;

     label08:
        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: void setFields(java.lang.String[])>(r17);

     label09:
        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: void buildPaths()>();

     label10:
        goto label12;

     label11:
        $r33 := @caughtexception;

        $r34 = newarray (java.lang.Object)[1];

        $r35 = virtualinvoke $r33.<org.apache.xmlbeans.impl.common.XPath$XPathCompileException: java.lang.String getMessage()>();

        $r34[0] = $r35;

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("invalid-xpath", $r34, r1);

        return null;

     label12:
        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void addIdConstraint(org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl)>($r5);

        $r18 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.String findFilename(org.apache.xmlbeans.XmlObject)>(r1);

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: void setFilename(java.lang.String)>($r18);

        $r19 = virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: javax.xml.namespace.QName getName()>();

        $r20 = virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl findIdConstraint(javax.xml.namespace.QName,java.lang.String,java.lang.String)>($r19, r6, null);

        return $r20;

        catch org.apache.xmlbeans.impl.common.XPath$XPathCompileException from label09 to label10 with label11;
    }

    public static org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl translateModelGroup(org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup, java.lang.String, boolean, boolean)
    {
        org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl $r6;
        java.lang.Object[] $r10;
        org.apache.xmlbeans.impl.schema.StscState $r2, $r9;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r4;
        java.lang.String $r1, r3, $r12, $r13, $r15;
        boolean z0, z1;
        org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup r0;
        org.apache.xmlbeans.impl.xb.xsdschema.FormChoice $r7, $r8;
        java.lang.Object $r14;
        javax.xml.namespace.QName $r11;

        r0 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.NamedGroup: java.lang.String getName()>();

        if $r1 != null goto label1;

        $r9 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = "model group";

        virtualinvoke $r9.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("missing-name", $r10, r0);

        return null;

     label1:
        $r2 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        $r4 = virtualinvoke $r2.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>(r3);

        $r5 = new org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl;

        specialinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: void <init>(org.apache.xmlbeans.impl.schema.SchemaContainer)>($r4);

        $r6 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl: org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl getAnnotation(org.apache.xmlbeans.impl.schema.SchemaContainer,org.apache.xmlbeans.impl.xb.xsdschema.Annotated)>($r4, r0);

        $r7 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: org.apache.xmlbeans.impl.xb.xsdschema.FormChoice findElementFormDefault(org.apache.xmlbeans.XmlObject)>(r0);

        $r8 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: org.apache.xmlbeans.impl.xb.xsdschema.FormChoice findAttributeFormDefault(org.apache.xmlbeans.XmlObject)>(r0);

        $r11 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: javax.xml.namespace.QName forLNS(java.lang.String,java.lang.String)>($r1, r3);

        if $r7 != null goto label2;

        $r12 = null;

        goto label3;

     label2:
        $r12 = interfaceinvoke $r7.<org.apache.xmlbeans.impl.xb.xsdschema.FormChoice: java.lang.String getStringValue()>();

     label3:
        if $r8 != null goto label4;

        $r13 = null;

        goto label5;

     label4:
        $r13 = interfaceinvoke $r8.<org.apache.xmlbeans.impl.xb.xsdschema.FormChoice: java.lang.String getStringValue()>();

     label5:
        $r14 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.Object getUserData(org.apache.xmlbeans.XmlObject)>(r0);

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: void init(javax.xml.namespace.QName,java.lang.String,boolean,java.lang.String,java.lang.String,boolean,org.apache.xmlbeans.XmlObject,org.apache.xmlbeans.SchemaAnnotation,java.lang.Object)>($r11, r3, z0, $r12, $r13, z1, r0, $r6, $r14);

        $r15 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.String findFilename(org.apache.xmlbeans.XmlObject)>(r0);

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: void setFilename(java.lang.String)>($r15);

        return $r5;
    }

    public static org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl translateAttributeGroup(org.apache.xmlbeans.impl.xb.xsdschema.AttributeGroup, java.lang.String, boolean, boolean)
    {
        org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl $r6;
        java.lang.Object[] $r12;
        org.apache.xmlbeans.impl.schema.StscState $r2, $r11;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.AttributeGroup r0;
        java.lang.String $r1, r3, $r10, $r13;
        boolean z0, z1;
        org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.FormChoice $r7;
        java.lang.Object $r9;
        javax.xml.namespace.QName $r8;

        r0 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.AttributeGroup;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.AttributeGroup: java.lang.String getName()>();

        if $r1 != null goto label1;

        $r11 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = "attribute group";

        virtualinvoke $r11.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("missing-name", $r12, r0);

        return null;

     label1:
        $r2 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        $r4 = virtualinvoke $r2.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>(r3);

        $r5 = new org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl;

        specialinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl: void <init>(org.apache.xmlbeans.impl.schema.SchemaContainer)>($r4);

        $r6 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl: org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl getAnnotation(org.apache.xmlbeans.impl.schema.SchemaContainer,org.apache.xmlbeans.impl.xb.xsdschema.Annotated)>($r4, r0);

        $r7 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: org.apache.xmlbeans.impl.xb.xsdschema.FormChoice findAttributeFormDefault(org.apache.xmlbeans.XmlObject)>(r0);

        $r8 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: javax.xml.namespace.QName forLNS(java.lang.String,java.lang.String)>($r1, r3);

        if $r7 != null goto label2;

        $r13 = null;

        goto label3;

     label2:
        $r13 = interfaceinvoke $r7.<org.apache.xmlbeans.impl.xb.xsdschema.FormChoice: java.lang.String getStringValue()>();

     label3:
        $r9 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.Object getUserData(org.apache.xmlbeans.XmlObject)>(r0);

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl: void init(javax.xml.namespace.QName,java.lang.String,boolean,java.lang.String,boolean,org.apache.xmlbeans.XmlObject,org.apache.xmlbeans.SchemaAnnotation,java.lang.Object)>($r8, r3, z0, $r13, z1, r0, $r6, $r9);

        $r10 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.String findFilename(org.apache.xmlbeans.XmlObject)>(r0);

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl: void setFilename(java.lang.String)>($r10);

        return $r5;
    }

    static org.apache.xmlbeans.impl.xb.xsdschema.FormChoice findAttributeFormDefault(org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema $r6;
        org.apache.xmlbeans.XmlCursor $r1;
        org.apache.xmlbeans.impl.xb.xsdschema.FormChoice $r7;
        org.apache.xmlbeans.XmlObject r0, $r2, $r5;
        org.apache.xmlbeans.SchemaType $r3, $r4;
        boolean $z0;

        r0 := @parameter0: org.apache.xmlbeans.XmlObject;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

     label1:
        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.SchemaType schemaType()>();

        $r4 = <org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema: org.apache.xmlbeans.SchemaType type>;

        if $r3 == $r4 goto label2;

        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        if $z0 != 0 goto label1;

        return null;

     label2:
        $r5 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        $r6 = (org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema) $r5;

        $r7 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema: org.apache.xmlbeans.impl.xb.xsdschema.FormChoice xgetAttributeFormDefault()>();

        return $r7;
    }

    static org.apache.xmlbeans.impl.schema.SchemaLocalAttributeImpl translateAttribute(org.apache.xmlbeans.impl.xb.xsdschema.Attribute, java.lang.String, java.lang.String, boolean, java.util.List, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.SchemaAttributeModel, boolean)
    {
        org.apache.xmlbeans.impl.schema.SchemaLocalAttributeImpl $r57, r72;
        org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum $r47;
        org.apache.xmlbeans.SchemaType r27, r71;
        org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl $r4, $r8, $r16, $r48;
        org.apache.xmlbeans.impl.xb.xsdschema.FormChoice $r40, $r42, $r52;
        javax.xml.namespace.QName $r3, $r9, $r12, $r36, $r38, $r45, r74, $r75;
        org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType $r46, $r54, $r78, r79;
        java.lang.Object[] $r34, $r51, $r53, $r55, $r58, $r61, $r64, $r67;
        org.apache.xmlbeans.XmlCursor $r11;
        java.lang.String $r2, r6, $r10, $r13, $r17, $r32, r41, $r43, $r44, $r49, $r60, $r63, r68, r69, r70, $r73, $r76, $r77, $r81;
        org.apache.xmlbeans.soap.SOAPArrayType $r14, r82;
        org.apache.xmlbeans.impl.xb.xsdschema.Attribute r1;
        org.apache.xmlbeans.XmlString $r18, $r19, $r20;
        org.apache.xmlbeans.impl.xb.xsdschema.Attribute$Use $r21;
        org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl $r30, $r84;
        org.apache.xmlbeans.XmlQName $r39, $r50, $r56, $r62, $r65;
        org.apache.xmlbeans.impl.schema.StscState $r0, $r5;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r25, $r37;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13, z14, $z15, $z16, $z17, $z18, $z19;
        org.apache.xmlbeans.SchemaLocalAttribute $r23, $r24;
        org.apache.xmlbeans.impl.values.NamespaceContext $r15;
        java.util.List r28;
        org.apache.xmlbeans.XmlNCName $r33, $r35, $r59;
        org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException $r66;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r7, $r26, $r29, $r83;
        org.apache.xmlbeans.SchemaType$Ref $r80, $r85;
        int $i0, $i1, i2;
        org.apache.xmlbeans.SchemaAttributeModel r22;
        java.lang.Object $r31, $r86;

        r1 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.Attribute;

        r6 := @parameter1: java.lang.String;

        r41 := @parameter2: java.lang.String;

        z1 := @parameter3: boolean;

        r28 := @parameter4: java.util.List;

        r27 := @parameter5: org.apache.xmlbeans.SchemaType;

        r22 := @parameter6: org.apache.xmlbeans.SchemaAttributeModel;

        z0 := @parameter7: boolean;

        $r0 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: java.lang.String getName()>();

        r68 = $r2;

        $r3 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: javax.xml.namespace.QName getRef()>();

        if $r3 == null goto label03;

        if $r2 == null goto label03;

        $r60 = virtualinvoke $r3.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z11 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r60);

        if $z11 == 0 goto label01;

        $r63 = virtualinvoke $r3.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z12 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: boolean uriMatch(java.lang.String,java.lang.String)>(r6, $r63);

        if $z12 == 0 goto label01;

        $r64 = newarray (java.lang.Object)[1];

        $r64[0] = $r2;

        $r65 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: org.apache.xmlbeans.XmlQName xgetRef()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void warning(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("src-attribute.3.1a", $r64, $r65);

        goto label02;

     label01:
        $r61 = newarray (java.lang.Object)[1];

        $r61[0] = $r2;

        $r62 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: org.apache.xmlbeans.XmlQName xgetRef()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("src-attribute.3.1a", $r61, $r62);

     label02:
        r68 = null;

     label03:
        if $r3 != null goto label04;

        if r68 != null goto label04;

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("src-attribute.3.1b", null, r1);

        return null;

     label04:
        if r68 == null goto label05;

        $z10 = staticinvoke <org.apache.xmlbeans.impl.common.XMLChar: boolean isValidNCName(java.lang.String)>(r68);

        if $z10 != 0 goto label05;

        $r58 = newarray (java.lang.Object)[2];

        $r58[0] = r68;

        $r58[1] = "name";

        $r59 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: org.apache.xmlbeans.XmlNCName xgetName()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("invalid-value", $r58, $r59);

     label05:
        z13 = 0;

        r69 = null;

        r70 = null;

        r71 = null;

        i2 = 2;

        if z0 == 0 goto label06;

        $r57 = new org.apache.xmlbeans.impl.schema.SchemaLocalAttributeImpl;

        specialinvoke $r57.<org.apache.xmlbeans.impl.schema.SchemaLocalAttributeImpl: void <init>()>();

        r72 = $r57;

        goto label07;

     label06:
        $r4 = new org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl;

        $r5 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        $r7 = virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>(r6);

        specialinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl: void <init>(org.apache.xmlbeans.impl.schema.SchemaContainer)>($r7);

        r72 = $r4;

        $r8 = (org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl) $r4;

        virtualinvoke $r8.<org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl: void setParseContext(org.apache.xmlbeans.XmlObject,java.lang.String,boolean)>(r1, r6, z1);

     label07:
        if $r3 == null goto label15;

        $r45 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: javax.xml.namespace.QName getType()>();

        if $r45 == null goto label08;

        $r55 = newarray (java.lang.Object)[1];

        $r55[0] = "type";

        $r56 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: org.apache.xmlbeans.XmlQName xgetType()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("src-attribute.3.2", $r55, $r56);

     label08:
        $r46 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType getSimpleType()>();

        if $r46 == null goto label09;

        $r53 = newarray (java.lang.Object)[1];

        $r53[0] = "<simpleType>";

        $r54 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType getSimpleType()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("src-attribute.3.2", $r53, $r54);

     label09:
        $r47 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum getForm()>();

        if $r47 == null goto label10;

        $r51 = newarray (java.lang.Object)[1];

        $r51[0] = "form";

        $r52 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: org.apache.xmlbeans.impl.xb.xsdschema.FormChoice xgetForm()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("src-attribute.3.2", $r51, $r52);

     label10:
        if z1 == 0 goto label11;

        $r73 = r6;

        goto label12;

     label11:
        $r73 = null;

     label12:
        $r48 = virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl findGlobalAttribute(javax.xml.namespace.QName,java.lang.String,java.lang.String)>($r3, $r73, r6);

        if $r48 != null goto label13;

        $r50 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: org.apache.xmlbeans.XmlQName xgetRef()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void notFoundError(javax.xml.namespace.QName,int,org.apache.xmlbeans.XmlObject,boolean)>($r3, 3, $r50, 1);

        return null;

     label13:
        r74 = $r3;

        i2 = interfaceinvoke $r48.<org.apache.xmlbeans.SchemaGlobalAttribute: int getUse()>();

        r71 = interfaceinvoke $r48.<org.apache.xmlbeans.SchemaGlobalAttribute: org.apache.xmlbeans.SchemaType getType()>();

        $r49 = interfaceinvoke $r48.<org.apache.xmlbeans.SchemaGlobalAttribute: java.lang.String getDefaultText()>();

        r69 = $r49;

        if $r49 == null goto label14;

        $z9 = interfaceinvoke $r48.<org.apache.xmlbeans.SchemaGlobalAttribute: boolean isFixed()>();

        z13 = $z9;

        if $z9 == 0 goto label14;

        r70 = $r49;

     label14:
        goto label34;

     label15:
        if z0 == 0 goto label23;

        $r40 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: org.apache.xmlbeans.impl.xb.xsdschema.FormChoice xgetForm()>();

        if $r40 == null goto label16;

        $r44 = interfaceinvoke $r40.<org.apache.xmlbeans.impl.xb.xsdschema.FormChoice: java.lang.String getStringValue()>();

        z14 = virtualinvoke $r44.<java.lang.String: boolean equals(java.lang.Object)>("qualified");

        goto label20;

     label16:
        if r41 == null goto label17;

        z14 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("qualified");

        goto label20;

     label17:
        $r42 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: org.apache.xmlbeans.impl.xb.xsdschema.FormChoice findAttributeFormDefault(org.apache.xmlbeans.XmlObject)>(r1);

        if $r42 == null goto label18;

        $r43 = interfaceinvoke $r42.<org.apache.xmlbeans.impl.xb.xsdschema.FormChoice: java.lang.String getStringValue()>();

        $z8 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>("qualified");

        if $z8 == 0 goto label18;

        $z15 = 1;

        goto label19;

     label18:
        $z15 = 0;

     label19:
        z14 = $z15;

     label20:
        if z14 == 0 goto label21;

        $r75 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: javax.xml.namespace.QName forLNS(java.lang.String,java.lang.String)>(r68, r6);

        goto label22;

     label21:
        $r75 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: javax.xml.namespace.QName forLN(java.lang.String)>(r68);

     label22:
        r74 = $r75;

        goto label24;

     label23:
        r74 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: javax.xml.namespace.QName forLNS(java.lang.String,java.lang.String)>(r68, r6);

     label24:
        $r9 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: javax.xml.namespace.QName getType()>();

        if $r9 == null goto label27;

        $r36 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: javax.xml.namespace.QName getType()>();

        if z1 == 0 goto label25;

        $r76 = r6;

        goto label26;

     label25:
        $r76 = null;

     label26:
        $r37 = virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaTypeImpl findGlobalType(javax.xml.namespace.QName,java.lang.String,java.lang.String)>($r36, $r76, r6);

        r71 = $r37;

        if $r37 != null goto label27;

        $r38 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: javax.xml.namespace.QName getType()>();

        $r39 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: org.apache.xmlbeans.XmlQName xgetType()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void notFoundError(javax.xml.namespace.QName,int,org.apache.xmlbeans.XmlObject,boolean)>($r38, 0, $r39, 1);

     label27:
        $r77 = virtualinvoke r74.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z16 = virtualinvoke $r77.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2001/XMLSchema-instance");

        if $z16 == 0 goto label28;

        $r34 = newarray (java.lang.Object)[1];

        $r34[0] = "http://www.w3.org/2001/XMLSchema-instance";

        $r35 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: org.apache.xmlbeans.XmlNCName xgetName()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("no-xsi", $r34, $r35);

     label28:
        $r10 = virtualinvoke r74.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i0 != 0 goto label29;

        $r32 = virtualinvoke r74.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z7 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z7 == 0 goto label29;

        $r33 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: org.apache.xmlbeans.XmlNCName xgetName()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("no-xmlns", null, $r33);

     label29:
        $r78 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType getSimpleType()>();

        r79 = $r78;

        if r71 == null goto label30;

        if $r78 == null goto label30;

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("src-attribute.4", null, $r78);

        r79 = null;

     label30:
        if r79 == null goto label33;

        $r25 = new org.apache.xmlbeans.impl.schema.SchemaTypeImpl;

        $r26 = virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>(r6);

        specialinvoke $r25.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void <init>(org.apache.xmlbeans.impl.schema.SchemaContainer)>($r26);

        r71 = $r25;

        virtualinvoke $r25.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setContainerField(org.apache.xmlbeans.SchemaField)>(r72);

        if r27 != null goto label31;

        $r80 = null;

        goto label32;

     label31:
        $r80 = interfaceinvoke r27.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType$Ref getRef()>();

     label32:
        virtualinvoke $r25.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setOuterSchemaTypeRef(org.apache.xmlbeans.SchemaType$Ref)>($r80);

        interfaceinvoke r28.<java.util.List: boolean add(java.lang.Object)>($r25);

        virtualinvoke $r25.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setSimpleType(boolean)>(1);

        virtualinvoke $r25.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setParseContext(org.apache.xmlbeans.XmlObject,java.lang.String,boolean,java.lang.String,java.lang.String,boolean)>(r79, r6, z1, null, null, 0);

        $r29 = virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>(r6);

        $r30 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl: org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl getAnnotation(org.apache.xmlbeans.impl.schema.SchemaContainer,org.apache.xmlbeans.impl.xb.xsdschema.Annotated)>($r29, r79);

        virtualinvoke $r25.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setAnnotation(org.apache.xmlbeans.SchemaAnnotation)>($r30);

        $r31 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.Object getUserData(org.apache.xmlbeans.XmlObject)>(r79);

        virtualinvoke $r25.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: void setUserData(java.lang.Object)>($r31);

     label33:
        if r71 != null goto label34;

        if r22 == null goto label34;

        $r23 = interfaceinvoke r22.<org.apache.xmlbeans.SchemaAttributeModel: org.apache.xmlbeans.SchemaLocalAttribute getAttribute(javax.xml.namespace.QName)>(r74);

        if $r23 == null goto label34;

        $r24 = interfaceinvoke r22.<org.apache.xmlbeans.SchemaAttributeModel: org.apache.xmlbeans.SchemaLocalAttribute getAttribute(javax.xml.namespace.QName)>(r74);

        r71 = interfaceinvoke $r24.<org.apache.xmlbeans.SchemaLocalAttribute: org.apache.xmlbeans.SchemaType getType()>();

     label34:
        if r71 != null goto label35;

        r71 = <org.apache.xmlbeans.impl.schema.BuiltinSchemaTypeSystem: org.apache.xmlbeans.impl.schema.SchemaTypeImpl ST_ANY_SIMPLE>;

     label35:
        $z2 = interfaceinvoke r71.<org.apache.xmlbeans.SchemaType: boolean isSimpleType()>();

        if $z2 != 0 goto label36;

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,int,org.apache.xmlbeans.XmlObject)>("Attributes must have a simple type (not complex).", 46, r1);

        r71 = <org.apache.xmlbeans.impl.schema.BuiltinSchemaTypeSystem: org.apache.xmlbeans.impl.schema.SchemaTypeImpl ST_ANY_SIMPLE>;

     label36:
        $z3 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: boolean isSetUse()>();

        if $z3 == 0 goto label37;

        $r21 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: org.apache.xmlbeans.impl.xb.xsdschema.Attribute$Use xgetUse()>();

        $i1 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: int translateUseCode(org.apache.xmlbeans.impl.xb.xsdschema.Attribute$Use)>($r21);

        i2 = $i1;

        if $i1 == 2 goto label37;

        if z13 != 0 goto label37;

        r69 = null;

     label37:
        $z17 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: boolean isSetDefault()>();

        if $z17 != 0 goto label38;

        $z6 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: boolean isSetFixed()>();

        if $z6 == 0 goto label43;

     label38:
        if z13 == 0 goto label39;

        $z5 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: boolean isSetFixed()>();

        if $z5 != 0 goto label39;

        $r20 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: org.apache.xmlbeans.XmlString xgetFixed()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,int,org.apache.xmlbeans.XmlObject)>("A use of a fixed attribute definition must also be fixed", 9, $r20);

     label39:
        $z18 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: boolean isSetFixed()>();

        z13 = $z18;

        $z19 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: boolean isSetDefault()>();

        if $z19 == 0 goto label40;

        if $z18 == 0 goto label40;

        $r19 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: org.apache.xmlbeans.XmlString xgetFixed()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("src-attribute.1", null, $r19);

        z13 = 0;

     label40:
        if z13 == 0 goto label41;

        $r81 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: java.lang.String getFixed()>();

        goto label42;

     label41:
        $r81 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: java.lang.String getDefault()>();

     label42:
        r69 = $r81;

        if r70 == null goto label43;

        $z4 = virtualinvoke r70.<java.lang.String: boolean equals(java.lang.Object)>($r81);

        if $z4 != 0 goto label43;

        $r18 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: org.apache.xmlbeans.XmlString xgetFixed()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("au-value_constraint", null, $r18);

        r69 = r70;

     label43:
        if z0 != 0 goto label44;

        $r16 = (org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl) r72;

        $r17 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.String findFilename(org.apache.xmlbeans.XmlObject)>(r1);

        virtualinvoke $r16.<org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl: void setFilename(java.lang.String)>($r17);

     label44:
        r82 = null;

        $r11 = interfaceinvoke r1.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute: org.apache.xmlbeans.XmlCursor newCursor()>();

        $r12 = <org.apache.xmlbeans.impl.schema.StscTranslator: javax.xml.namespace.QName WSDL_ARRAYTYPE_NAME>;

        $r13 = interfaceinvoke $r11.<org.apache.xmlbeans.XmlCursor: java.lang.String getAttributeText(javax.xml.namespace.QName)>($r12);

        interfaceinvoke $r11.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        if $r13 == null goto label48;

     label45:
        $r14 = new org.apache.xmlbeans.soap.SOAPArrayType;

        $r15 = new org.apache.xmlbeans.impl.values.NamespaceContext;

        specialinvoke $r15.<org.apache.xmlbeans.impl.values.NamespaceContext: void <init>(org.apache.xmlbeans.XmlObject)>(r1);

        specialinvoke $r14.<org.apache.xmlbeans.soap.SOAPArrayType: void <init>(java.lang.String,org.apache.xmlbeans.impl.common.PrefixResolver)>($r13, $r15);

        r82 = $r14;

     label46:
        goto label48;

     label47:
        $r66 := @caughtexception;

        $r67 = newarray (java.lang.Object)[1];

        $r67[0] = $r13;

        virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("soaparray", $r67, r1);

     label48:
        $r83 = virtualinvoke $r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>(r6);

        $r84 = staticinvoke <org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl: org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl getAnnotation(org.apache.xmlbeans.impl.schema.SchemaContainer,org.apache.xmlbeans.impl.xb.xsdschema.Annotated)>($r83, r1);

        $r85 = interfaceinvoke r71.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaType$Ref getRef()>();

        $r86 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.Object getUserData(org.apache.xmlbeans.XmlObject)>(r1);

        virtualinvoke r72.<org.apache.xmlbeans.impl.schema.SchemaLocalAttributeImpl: void init(javax.xml.namespace.QName,org.apache.xmlbeans.SchemaType$Ref,int,java.lang.String,org.apache.xmlbeans.XmlObject,org.apache.xmlbeans.impl.schema.XmlValueRef,boolean,org.apache.xmlbeans.soap.SOAPArrayType,org.apache.xmlbeans.SchemaAnnotation,java.lang.Object)>(r74, $r85, i2, r69, r1, null, z13, r82, $r84, $r86);

        return r72;

        catch org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException from label45 to label46 with label47;
    }

    static int translateUseCode(org.apache.xmlbeans.impl.xb.xsdschema.Attribute$Use)
    {
        org.apache.xmlbeans.impl.xb.xsdschema.Attribute$Use r0;
        java.lang.String $r1;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.Attribute$Use;

        if r0 != null goto label1;

        return 2;

     label1:
        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.Attribute$Use: java.lang.String getStringValue()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("optional");

        if $z0 == 0 goto label2;

        return 2;

     label2:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("required");

        if $z1 == 0 goto label3;

        return 3;

     label3:
        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("prohibited");

        if $z2 == 0 goto label4;

        return 1;

     label4:
        return 2;
    }

    static java.math.BigInteger buildBigInt(org.apache.xmlbeans.XmlAnySimpleType)
    {
        org.apache.xmlbeans.XmlAnySimpleType r0;
        java.lang.Object[] $r4, $r7;
        java.lang.NumberFormatException $r5;
        org.apache.xmlbeans.impl.schema.StscState $r3, $r6;
        int $i0;
        java.math.BigInteger $r2;
        java.lang.String $r1, $r8;

        r0 := @parameter0: org.apache.xmlbeans.XmlAnySimpleType;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.XmlAnySimpleType: java.lang.String getStringValue()>();

     label2:
        $r2 = new java.math.BigInteger;

        specialinvoke $r2.<java.math.BigInteger: void <init>(java.lang.String)>($r1);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        $r6 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        $r7 = newarray (java.lang.Object)[3];

        $r7[0] = $r1;

        $r7[1] = "nonNegativeInteger";

        $r8 = virtualinvoke $r5.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        $r7[2] = $r8;

        virtualinvoke $r6.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("invalid-value-detail", $r7, r0);

        return null;

     label5:
        $i0 = virtualinvoke $r2.<java.math.BigInteger: int signum()>();

        if $i0 >= 0 goto label6;

        $r3 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = $r1;

        $r4[1] = "nonNegativeInteger";

        virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("invalid-value", $r4, r0);

        return null;

     label6:
        return $r2;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    static org.apache.xmlbeans.XmlNonNegativeInteger buildNnInteger(org.apache.xmlbeans.XmlAnySimpleType)
    {
        org.apache.xmlbeans.XmlAnySimpleType r0;
        org.apache.xmlbeans.impl.schema.StscState $r4;
        org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException $r3;
        java.math.BigInteger $r1;
        org.apache.xmlbeans.impl.values.XmlNonNegativeIntegerImpl $r2;

        r0 := @parameter0: org.apache.xmlbeans.XmlAnySimpleType;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: java.math.BigInteger buildBigInt(org.apache.xmlbeans.XmlAnySimpleType)>(r0);

     label1:
        $r2 = new org.apache.xmlbeans.impl.values.XmlNonNegativeIntegerImpl;

        specialinvoke $r2.<org.apache.xmlbeans.impl.values.XmlNonNegativeIntegerImpl: void <init>()>();

        virtualinvoke $r2.<org.apache.xmlbeans.impl.values.XmlNonNegativeIntegerImpl: void set(java.math.BigInteger)>($r1);

        virtualinvoke $r2.<org.apache.xmlbeans.impl.values.XmlNonNegativeIntegerImpl: void setImmutable()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,int,org.apache.xmlbeans.XmlObject)>("Internal error processing number", 21, r0);

        return null;

        catch org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException from label1 to label2 with label3;
    }

    static org.apache.xmlbeans.XmlPositiveInteger buildPosInteger(org.apache.xmlbeans.XmlAnySimpleType)
    {
        org.apache.xmlbeans.XmlAnySimpleType r0;
        org.apache.xmlbeans.impl.schema.StscState $r4;
        org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException $r3;
        java.math.BigInteger $r1;
        org.apache.xmlbeans.impl.values.XmlPositiveIntegerImpl $r2;

        r0 := @parameter0: org.apache.xmlbeans.XmlAnySimpleType;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: java.math.BigInteger buildBigInt(org.apache.xmlbeans.XmlAnySimpleType)>(r0);

     label1:
        $r2 = new org.apache.xmlbeans.impl.values.XmlPositiveIntegerImpl;

        specialinvoke $r2.<org.apache.xmlbeans.impl.values.XmlPositiveIntegerImpl: void <init>()>();

        virtualinvoke $r2.<org.apache.xmlbeans.impl.values.XmlPositiveIntegerImpl: void set(java.math.BigInteger)>($r1);

        virtualinvoke $r2.<org.apache.xmlbeans.impl.values.XmlPositiveIntegerImpl: void setImmutable()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.StscState get()>();

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,int,org.apache.xmlbeans.XmlObject)>("Internal error processing number", 21, r0);

        return null;

        catch org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException from label1 to label2 with label3;
    }

    private static java.lang.Object getUserData(org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.XmlCursor $r1;
        org.apache.xmlbeans.SchemaBookmark $r4;
        java.lang.Class $r2, $r6;
        java.lang.Object $r5;
        org.apache.xmlbeans.XmlObject r0;
        org.apache.xmlbeans.XmlCursor$XmlBookmark $r3;
        boolean $z0;

        r0 := @parameter0: org.apache.xmlbeans.XmlObject;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

        $r2 = <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.Class class$org$apache$xmlbeans$SchemaBookmark>;

        if $r2 != null goto label1;

        $r6 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.SchemaBookmark");

        <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.Class class$org$apache$xmlbeans$SchemaBookmark> = $r6;

        goto label2;

     label1:
        $r6 = <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.Class class$org$apache$xmlbeans$SchemaBookmark>;

     label2:
        $r3 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$XmlBookmark getBookmark(java.lang.Object)>($r6);

        if $r3 == null goto label3;

        $z0 = $r3 instanceof org.apache.xmlbeans.SchemaBookmark;

        if $z0 == 0 goto label3;

        $r4 = (org.apache.xmlbeans.SchemaBookmark) $r3;

        $r5 = virtualinvoke $r4.<org.apache.xmlbeans.SchemaBookmark: java.lang.Object getValue()>();

        return $r5;

     label3:
        return null;
    }

    private static boolean isEmptySchema(org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema)
    {
        org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema r0;
        org.apache.xmlbeans.XmlCursor $r1;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument$Schema: org.apache.xmlbeans.XmlCursor newCursor()>();

        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean toFirstChild()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return $z1;
    }

    private static boolean isReservedTypeName(javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.SchemaTypeSystem $r0;
        javax.xml.namespace.QName r1;
        org.apache.xmlbeans.SchemaType $r2;
        boolean $z0;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r0 = staticinvoke <org.apache.xmlbeans.impl.schema.BuiltinSchemaTypeSystem: org.apache.xmlbeans.SchemaTypeSystem get()>();

        $r2 = interfaceinvoke $r0.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaType findType(javax.xml.namespace.QName)>(r1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.apache.xmlbeans.impl.regex.RegularExpression $r2;
        java.lang.Class $r0, $r3;
        javax.xml.namespace.QName $r1;
        boolean $z0, $z1;

        <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.String FORM_QUALIFIED> = "qualified";

        $r0 = <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.Class class$org$apache$xmlbeans$impl$schema$StscTranslator>;

        if $r0 != null goto label1;

        $r3 = staticinvoke <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.schema.StscTranslator");

        <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.Class class$org$apache$xmlbeans$impl$schema$StscTranslator> = $r3;

        goto label2;

     label1:
        $r3 = <org.apache.xmlbeans.impl.schema.StscTranslator: java.lang.Class class$org$apache$xmlbeans$impl$schema$StscTranslator>;

     label2:
        $z0 = virtualinvoke $r3.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.schema.StscTranslator: boolean $assertionsDisabled> = $z1;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: javax.xml.namespace.QName forLNS(java.lang.String,java.lang.String)>("arrayType", "http://schemas.xmlsoap.org/wsdl/");

        <org.apache.xmlbeans.impl.schema.StscTranslator: javax.xml.namespace.QName WSDL_ARRAYTYPE_NAME> = $r1;

        $r2 = new org.apache.xmlbeans.impl.regex.RegularExpression;

        specialinvoke $r2.<org.apache.xmlbeans.impl.regex.RegularExpression: void <init>(java.lang.String,java.lang.String)>("(\\.//)?((((child::)?((\\i\\c*:)?(\\i\\c*|\\*)))|\\.)/)*((((child::)?((\\i\\c*:)?(\\i\\c*|\\*)))|\\.)|((attribute::|@)((\\i\\c*:)?(\\i\\c*|\\*))))(\\|(\\.//)?((((child::)?((\\i\\c*:)?(\\i\\c*|\\*)))|\\.)/)*((((child::)?((\\i\\c*:)?(\\i\\c*|\\*)))|\\.)|((attribute::|@)((\\i\\c*:)?(\\i\\c*|\\*)))))*", "X");

        <org.apache.xmlbeans.impl.schema.StscTranslator: org.apache.xmlbeans.impl.regex.RegularExpression XPATH_REGEXP> = $r2;

        return;
    }
}
