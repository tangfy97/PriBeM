public class org.apache.lucene.queryparser.analyzing.AnalyzingQueryParser extends org.apache.lucene.queryparser.classic.QueryParser
{

    public void <init>(org.apache.lucene.util.Version, java.lang.String, org.apache.lucene.analysis.Analyzer)
    {
        org.apache.lucene.queryparser.analyzing.AnalyzingQueryParser r0;
        org.apache.lucene.analysis.Analyzer r3;
        java.lang.String r2;
        org.apache.lucene.util.Version r1;

        r0 := @this: org.apache.lucene.queryparser.analyzing.AnalyzingQueryParser;

        r1 := @parameter0: org.apache.lucene.util.Version;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.lucene.analysis.Analyzer;

        specialinvoke r0.<org.apache.lucene.queryparser.classic.QueryParser: void <init>(org.apache.lucene.util.Version,java.lang.String,org.apache.lucene.analysis.Analyzer)>(r1, r2, r3);

        virtualinvoke r0.<org.apache.lucene.queryparser.analyzing.AnalyzingQueryParser: void setAnalyzeRangeTerms(boolean)>(1);

        return;
    }

    protected org.apache.lucene.search.Query getWildcardQuery(java.lang.String, java.lang.String) throws org.apache.lucene.queryparser.classic.ParseException
    {
        org.apache.lucene.search.Query $r14, $r29;
        java.lang.IndexOutOfBoundsException $r42;
        org.apache.lucene.queryparser.analyzing.AnalyzingQueryParser r4;
        java.lang.StringBuilder $r23, $r27, $r32, $r35, $r36, $r51, $r54, $r56, $r58;
        org.apache.lucene.util.Attribute $r9;
        org.apache.lucene.queryparser.classic.ParseException $r55;
        java.util.ArrayList $r49, $r50;
        java.lang.String r2, $r3, r6, $r10, $r11, $r13, $r16, $r18, $r22, $r25, $r26, $r28, $r37, $r38, $r39, $r40;
        org.apache.lucene.analysis.TokenStream $r8;
        org.apache.lucene.analysis.Analyzer $r5, $r33;
        java.io.IOException $r41, $r43, $r44;
        java.lang.RuntimeException $r53;
        java.io.StringReader $r52;
        char[] $r47;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i9, $i10, i12, i13, $i14, $i15, $i17;
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute r48;
        char $c7, $c8, $c11;
        java.lang.IllegalArgumentException $r57;
        java.lang.Object $r15, $r17, $r21, $r24;
        java.lang.Class $r34;

        r4 := @this: org.apache.lucene.queryparser.analyzing.AnalyzingQueryParser;

        r6 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r49 = new java.util.ArrayList;

        specialinvoke $r49.<java.util.ArrayList: void <init>()>();

        $r50 = new java.util.ArrayList;

        specialinvoke $r50.<java.util.ArrayList: void <init>()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("?");

        if $z0 != 0 goto label01;

        $z3 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("*");

        if $z3 != 0 goto label01;

        $z4 = 1;

        goto label02;

     label01:
        $z4 = 0;

     label02:
        z5 = $z4;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>();

        i9 = 0;

     label03:
        $i10 = virtualinvoke r2.<java.lang.String: int length()>();

        if i9 >= $i10 goto label09;

        $c7 = $r47[i9];

        $i14 = (int) $c7;

        if $i14 == 63 goto label04;

        $c8 = $r47[i9];

        $i15 = (int) $c8;

        if $i15 != 42 goto label06;

     label04:
        if z5 == 0 goto label05;

        $r39 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r49.<java.util.List: boolean add(java.lang.Object)>($r39);

        virtualinvoke $r51.<java.lang.StringBuilder: void setLength(int)>(0);

     label05:
        z5 = 0;

        goto label08;

     label06:
        if z5 != 0 goto label07;

        $r40 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r50.<java.util.List: boolean add(java.lang.Object)>($r40);

        virtualinvoke $r51.<java.lang.StringBuilder: void setLength(int)>(0);

     label07:
        z5 = 1;

     label08:
        $c11 = $r47[i9];

        virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c11);

        i9 = i9 + 1;

        goto label03;

     label09:
        if z5 == 0 goto label10;

        $r38 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r49.<java.util.List: boolean add(java.lang.Object)>($r38);

        goto label11;

     label10:
        $r3 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r50.<java.util.List: boolean add(java.lang.Object)>($r3);

     label11:
        i12 = 0;

     label12:
        $r5 = virtualinvoke r4.<org.apache.lucene.queryparser.analyzing.AnalyzingQueryParser: org.apache.lucene.analysis.Analyzer getAnalyzer()>();

        $r52 = new java.io.StringReader;

        specialinvoke $r52.<java.io.StringReader: void <init>(java.lang.String)>(r2);

        $r8 = virtualinvoke $r5.<org.apache.lucene.analysis.Analyzer: org.apache.lucene.analysis.TokenStream tokenStream(java.lang.String,java.io.Reader)>(r6, $r52);

        virtualinvoke $r8.<org.apache.lucene.analysis.TokenStream: void reset()>();

     label13:
        goto label15;

     label14:
        $r44 := @caughtexception;

        $r53 = new java.lang.RuntimeException;

        specialinvoke $r53.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r44);

        throw $r53;

     label15:
        $r9 = virtualinvoke $r8.<org.apache.lucene.analysis.TokenStream: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        r48 = (org.apache.lucene.analysis.tokenattributes.CharTermAttribute) $r9;

     label16:
        $z1 = virtualinvoke $r8.<org.apache.lucene.analysis.TokenStream: boolean incrementToken()>();

        if $z1 != 0 goto label18;

     label17:
        goto label25;

     label18:
        goto label20;

     label19:
        $r43 := @caughtexception;

        goto label25;

     label20:
        $r10 = virtualinvoke r48.<java.lang.Object: java.lang.String toString()>();

        $r11 = "";

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z2 != 0 goto label24;

     label21:
        $i0 = i12;

        i12 = i12 + 1;

        interfaceinvoke $r49.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i0, $r10);

     label22:
        goto label24;

     label23:
        $r42 := @caughtexception;

        $i17 = (int) -1;

        i12 = $i17;

     label24:
        goto label16;

     label25:
        virtualinvoke $r8.<org.apache.lucene.analysis.TokenStream: void end()>();

        virtualinvoke $r8.<org.apache.lucene.analysis.TokenStream: void close()>();

     label26:
        goto label28;

     label27:
        $r41 := @caughtexception;

     label28:
        $i1 = interfaceinvoke $r49.<java.util.List: int size()>();

        if i12 == $i1 goto label29;

        $r55 = new org.apache.lucene.queryparser.classic.ParseException;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot build WildcardQuery with analyzer ");

        $r33 = virtualinvoke r4.<org.apache.lucene.queryparser.analyzing.AnalyzingQueryParser: org.apache.lucene.analysis.Analyzer getAnalyzer()>();

        $r34 = virtualinvoke $r33.<java.lang.Object: java.lang.Class getClass()>();

        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - tokens added or lost");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r55.<org.apache.lucene.queryparser.classic.ParseException: void <init>(java.lang.String)>($r37);

        throw $r55;

     label29:
        $i2 = interfaceinvoke $r49.<java.util.List: int size()>();

        if $i2 != 0 goto label30;

        return null;

     label30:
        $i3 = interfaceinvoke $r49.<java.util.List: int size()>();

        if $i3 != 1 goto label32;

        if $r50 == null goto label31;

        $i6 = interfaceinvoke $r50.<java.util.List: int size()>();

        if $i6 != 1 goto label31;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r21 = interfaceinvoke $r49.<java.util.List: java.lang.Object get(int)>(0);

        $r22 = (java.lang.String) $r21;

        $r23 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = interfaceinvoke $r50.<java.util.List: java.lang.Object get(int)>(0);

        $r25 = (java.lang.String) $r24;

        $r26 = virtualinvoke $r25.<java.lang.String: java.lang.String toString()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r29 = specialinvoke r4.<org.apache.lucene.queryparser.classic.QueryParser: org.apache.lucene.search.Query getWildcardQuery(java.lang.String,java.lang.String)>(r6, $r28);

        return $r29;

     label31:
        $r57 = new java.lang.IllegalArgumentException;

        specialinvoke $r57.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("getWildcardQuery called without wildcard");

        throw $r57;

     label32:
        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        i13 = 0;

     label33:
        $i4 = interfaceinvoke $r49.<java.util.List: int size()>();

        if i13 >= $i4 goto label35;

        $r15 = interfaceinvoke $r49.<java.util.List: java.lang.Object get(int)>(i13);

        $r16 = (java.lang.String) $r15;

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        if $r50 == null goto label34;

        $i5 = interfaceinvoke $r50.<java.util.List: int size()>();

        if $i5 <= i13 goto label34;

        $r17 = interfaceinvoke $r50.<java.util.List: java.lang.Object get(int)>(i13);

        $r18 = (java.lang.String) $r17;

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

     label34:
        i13 = i13 + 1;

        goto label33;

     label35:
        $r13 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = specialinvoke r4.<org.apache.lucene.queryparser.classic.QueryParser: org.apache.lucene.search.Query getWildcardQuery(java.lang.String,java.lang.String)>(r6, $r13);

        return $r14;

        catch java.io.IOException from label12 to label13 with label14;
        catch java.io.IOException from label16 to label17 with label19;
        catch java.lang.IndexOutOfBoundsException from label21 to label22 with label23;
        catch java.io.IOException from label25 to label26 with label27;
    }

    protected org.apache.lucene.search.Query getPrefixQuery(java.lang.String, java.lang.String) throws org.apache.lucene.queryparser.classic.ParseException
    {
        org.apache.lucene.search.Query $r19;
        org.apache.lucene.queryparser.classic.ParseException $r9;
        java.util.ArrayList $r0;
        int $i0, $i1;
        java.lang.String r3, r5, $r8, $r16, $r18, $r25;
        boolean $z0;
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute r24;
        org.apache.lucene.analysis.TokenStream $r6;
        org.apache.lucene.analysis.Analyzer $r2, $r12;
        java.io.IOException $r20, $r21, $r22;
        java.lang.RuntimeException $r23;
        org.apache.lucene.queryparser.analyzing.AnalyzingQueryParser r1;
        java.io.StringReader $r4;
        java.lang.StringBuilder $r10, $r11, $r14, $r15;
        java.lang.Class $r13;
        java.lang.Object $r17;
        org.apache.lucene.util.Attribute $r7;

        r1 := @this: org.apache.lucene.queryparser.analyzing.AnalyzingQueryParser;

        r3 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

     label01:
        $r2 = virtualinvoke r1.<org.apache.lucene.queryparser.analyzing.AnalyzingQueryParser: org.apache.lucene.analysis.Analyzer getAnalyzer()>();

        $r4 = new java.io.StringReader;

        specialinvoke $r4.<java.io.StringReader: void <init>(java.lang.String)>(r5);

        $r6 = virtualinvoke $r2.<org.apache.lucene.analysis.Analyzer: org.apache.lucene.analysis.TokenStream tokenStream(java.lang.String,java.io.Reader)>(r3, $r4);

        virtualinvoke $r6.<org.apache.lucene.analysis.TokenStream: void reset()>();

     label02:
        goto label04;

     label03:
        $r22 := @caughtexception;

        $r23 = new java.lang.RuntimeException;

        specialinvoke $r23.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r22);

        throw $r23;

     label04:
        $r7 = virtualinvoke $r6.<org.apache.lucene.analysis.TokenStream: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        r24 = (org.apache.lucene.analysis.tokenattributes.CharTermAttribute) $r7;

     label05:
        $z0 = virtualinvoke $r6.<org.apache.lucene.analysis.TokenStream: boolean incrementToken()>();

        if $z0 != 0 goto label07;

     label06:
        goto label10;

     label07:
        goto label09;

     label08:
        $r21 := @caughtexception;

        goto label10;

     label09:
        $r8 = virtualinvoke r24.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label05;

     label10:
        virtualinvoke $r6.<org.apache.lucene.analysis.TokenStream: void end()>();

        virtualinvoke $r6.<org.apache.lucene.analysis.TokenStream: void close()>();

     label11:
        goto label13;

     label12:
        $r20 := @caughtexception;

     label13:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 != 1 goto label14;

        $r17 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(0);

        $r18 = (java.lang.String) $r17;

        $r19 = specialinvoke r1.<org.apache.lucene.queryparser.classic.QueryParser: org.apache.lucene.search.Query getPrefixQuery(java.lang.String,java.lang.String)>(r3, $r18);

        return $r19;

     label14:
        $r9 = new org.apache.lucene.queryparser.classic.ParseException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot build PrefixQuery with analyzer ");

        $r12 = virtualinvoke r1.<org.apache.lucene.queryparser.analyzing.AnalyzingQueryParser: org.apache.lucene.analysis.Analyzer getAnalyzer()>();

        $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i1 <= 1 goto label15;

        $r25 = " - token(s) added";

        goto label16;

     label15:
        $r25 = " - token consumed";

     label16:
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.apache.lucene.queryparser.classic.ParseException: void <init>(java.lang.String)>($r16);

        throw $r9;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.io.IOException from label05 to label06 with label08;
        catch java.io.IOException from label10 to label11 with label12;
    }

    protected org.apache.lucene.search.Query getFuzzyQuery(java.lang.String, java.lang.String, float) throws org.apache.lucene.queryparser.classic.ParseException
    {
        org.apache.lucene.search.Query $r20;
        org.apache.lucene.queryparser.classic.ParseException $r7;
        java.lang.String r2, r4, $r14, r18;
        boolean $z0, z1;
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute r19;
        org.apache.lucene.analysis.TokenStream $r5, r17;
        org.apache.lucene.analysis.Analyzer $r1, $r10;
        java.io.IOException $r15, $r16;
        org.apache.lucene.queryparser.analyzing.AnalyzingQueryParser r0;
        java.io.StringReader $r3;
        float f0;
        java.lang.StringBuilder $r8, $r9, $r12, $r13;
        java.lang.Class $r11;
        org.apache.lucene.util.Attribute $r6;

        r0 := @this: org.apache.lucene.queryparser.analyzing.AnalyzingQueryParser;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        r17 = null;

        r18 = null;

        z1 = 0;

     label01:
        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.analyzing.AnalyzingQueryParser: org.apache.lucene.analysis.Analyzer getAnalyzer()>();

        $r3 = new java.io.StringReader;

        specialinvoke $r3.<java.io.StringReader: void <init>(java.lang.String)>(r4);

        $r5 = virtualinvoke $r1.<org.apache.lucene.analysis.Analyzer: org.apache.lucene.analysis.TokenStream tokenStream(java.lang.String,java.io.Reader)>(r2, $r3);

        r17 = $r5;

        $r6 = virtualinvoke $r5.<org.apache.lucene.analysis.TokenStream: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        r19 = (org.apache.lucene.analysis.tokenattributes.CharTermAttribute) $r6;

        virtualinvoke $r5.<org.apache.lucene.analysis.TokenStream: void reset()>();

        $z0 = virtualinvoke $r5.<org.apache.lucene.analysis.TokenStream: boolean incrementToken()>();

        if $z0 == 0 goto label02;

        r18 = virtualinvoke r19.<java.lang.Object: java.lang.String toString()>();

     label02:
        z1 = virtualinvoke $r5.<org.apache.lucene.analysis.TokenStream: boolean incrementToken()>();

     label03:
        goto label05;

     label04:
        $r16 := @caughtexception;

        r18 = null;

     label05:
        virtualinvoke r17.<org.apache.lucene.analysis.TokenStream: void end()>();

        virtualinvoke r17.<org.apache.lucene.analysis.TokenStream: void close()>();

     label06:
        goto label08;

     label07:
        $r15 := @caughtexception;

     label08:
        if z1 == 0 goto label09;

        $r7 = new org.apache.lucene.queryparser.classic.ParseException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot build FuzzyQuery with analyzer ");

        $r10 = virtualinvoke r0.<org.apache.lucene.queryparser.analyzing.AnalyzingQueryParser: org.apache.lucene.analysis.Analyzer getAnalyzer()>();

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - tokens were added");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.apache.lucene.queryparser.classic.ParseException: void <init>(java.lang.String)>($r14);

        throw $r7;

     label09:
        if r18 != null goto label10;

        $r20 = null;

        goto label11;

     label10:
        $r20 = specialinvoke r0.<org.apache.lucene.queryparser.classic.QueryParser: org.apache.lucene.search.Query getFuzzyQuery(java.lang.String,java.lang.String,float)>(r2, r18, f0);

     label11:
        return $r20;

        catch java.io.IOException from label01 to label03 with label04;
        catch java.io.IOException from label05 to label06 with label07;
    }
}
