public final class com.sun.xml.bind.v2.runtime.XMLSerializer extends com.sun.xml.bind.v2.runtime.Coordinator
{
    public final com.sun.xml.bind.v2.runtime.JAXBContextImpl grammar;
    private com.sun.xml.bind.v2.runtime.output.XmlOutput out;
    public final com.sun.xml.bind.v2.runtime.NameList nameList;
    public final int[] knownUri2prefixIndexMap;
    private final com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext;
    private com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element nse;
    java.lang.ThreadLocal currentProperty;
    private boolean textHasAlreadyPrinted;
    private boolean seenRoot;
    private final com.sun.xml.bind.v2.runtime.MarshallerImpl marshaller;
    private final java.util.Set idReferencedObjects;
    private final java.util.Set objectsWithId;
    private final com.sun.xml.bind.v2.util.CollisionCheckStack cycleDetectionStack;
    private java.lang.String schemaLocation;
    private java.lang.String noNsSchemaLocation;
    private javax.xml.transform.Transformer identityTransformer;
    private com.sun.xml.bind.v2.runtime.ContentHandlerAdaptor contentHandlerAdapter;
    private boolean fragment;
    private com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data base64Data;
    private final com.sun.xml.bind.v2.runtime.unmarshaller.IntData intData;
    public javax.xml.bind.attachment.AttachmentMarshaller attachmentMarshaller;
    private javax.activation.MimeType expectedMimeType;
    private boolean inlineBinaryFlag;
    private javax.xml.namespace.QName schemaType;

    void <init>(com.sun.xml.bind.v2.runtime.MarshallerImpl)
    {
        java.lang.String[] $r14;
        java.util.HashSet $r2, $r3;
        int[] $r15;
        com.sun.xml.bind.v2.runtime.NameList $r12, $r13;
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl $r9;
        int $i0;
        com.sun.xml.bind.v2.util.CollisionCheckStack $r4;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r8, $r11;
        java.lang.ThreadLocal $r1;
        com.sun.xml.bind.v2.runtime.unmarshaller.IntData $r5;
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        com.sun.xml.bind.v2.runtime.MarshallerImpl r6, $r7, $r10;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r6 := @parameter0: com.sun.xml.bind.v2.runtime.MarshallerImpl;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.Coordinator: void <init>()>();

        $r1 = new java.lang.ThreadLocal;

        specialinvoke $r1.<java.lang.ThreadLocal: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.lang.ThreadLocal currentProperty> = $r1;

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean textHasAlreadyPrinted> = 0;

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean seenRoot> = 0;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.util.Set idReferencedObjects> = $r2;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.util.Set objectsWithId> = $r3;

        $r4 = new com.sun.xml.bind.v2.util.CollisionCheckStack;

        specialinvoke $r4.<com.sun.xml.bind.v2.util.CollisionCheckStack: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.util.CollisionCheckStack cycleDetectionStack> = $r4;

        $r5 = new com.sun.xml.bind.v2.runtime.unmarshaller.IntData;

        specialinvoke $r5.<com.sun.xml.bind.v2.runtime.unmarshaller.IntData: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.unmarshaller.IntData intData> = $r5;

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.MarshallerImpl marshaller> = r6;

        $r7 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.MarshallerImpl marshaller>;

        $r8 = $r7.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.JAXBContextImpl context>;

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.JAXBContextImpl grammar> = $r8;

        $r9 = new com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl;

        specialinvoke $r9.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: void <init>(com.sun.xml.bind.v2.runtime.XMLSerializer)>(r0);

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext> = $r9;

        $r10 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.MarshallerImpl marshaller>;

        $r11 = $r10.<com.sun.xml.bind.v2.runtime.MarshallerImpl: com.sun.xml.bind.v2.runtime.JAXBContextImpl context>;

        $r12 = $r11.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.NameList nameList>;

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.NameList nameList> = $r12;

        $r13 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.NameList nameList>;

        $r14 = $r13.<com.sun.xml.bind.v2.runtime.NameList: java.lang.String[] namespaceURIs>;

        $i0 = lengthof $r14;

        $r15 = newarray (int)[$i0];

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: int[] knownUri2prefixIndexMap> = $r15;

        return;
    }

    public com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data getCachedBase64DataInstance()
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data $r0;
        com.sun.xml.bind.v2.runtime.XMLSerializer r1;

        r1 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        $r0 = new com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data;

        specialinvoke $r0.<com.sun.xml.bind.v2.runtime.unmarshaller.Base64Data: void <init>()>();

        return $r0;
    }

    private java.lang.String getIdFromObject(java.lang.Object) throws org.xml.sax.SAXException, javax.xml.bind.JAXBException
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        java.lang.Object r1;
        java.lang.String $r4;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r3;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.JAXBContextImpl grammar>;

        $r3 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Object,boolean)>(r1, 1);

        $r4 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: java.lang.String getId(java.lang.Object,com.sun.xml.bind.v2.runtime.XMLSerializer)>(r1, r0);

        return $r4;
    }

    private void handleMissingObjectError(java.lang.String) throws org.xml.sax.SAXException, java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        java.lang.String r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void reportMissingObjectError(java.lang.String)>(r1);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endNamespaceDecls(java.lang.Object)>(null);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endAttributes()>();

        return;
    }

    public void reportError(javax.xml.bind.ValidationEvent) throws org.xml.sax.SAXException
    {
        java.lang.Throwable $r4, $r8;
        com.sun.istack.SAXException2 $r5, $r7, $r11;
        javax.xml.bind.JAXBException $r10;
        java.lang.Exception $r9;
        javax.xml.bind.ValidationEvent r3;
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        com.sun.xml.bind.v2.runtime.MarshallerImpl $r1;
        javax.xml.bind.ValidationEventHandler $r2;
        java.lang.String $r6;
        boolean $z0, $z1;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r3 := @parameter0: javax.xml.bind.ValidationEvent;

     label1:
        $r1 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.MarshallerImpl marshaller>;

        $r2 = virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: javax.xml.bind.ValidationEventHandler getEventHandler()>();

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = new com.sun.istack.SAXException2;

        specialinvoke $r11.<com.sun.istack.SAXException2: void <init>(java.lang.Exception)>($r10);

        throw $r11;

     label4:
        $z0 = interfaceinvoke $r2.<javax.xml.bind.ValidationEventHandler: boolean handleEvent(javax.xml.bind.ValidationEvent)>(r3);

        if $z0 != 0 goto label6;

        $r4 = interfaceinvoke r3.<javax.xml.bind.ValidationEvent: java.lang.Throwable getLinkedException()>();

        $z1 = $r4 instanceof java.lang.Exception;

        if $z1 == 0 goto label5;

        $r7 = new com.sun.istack.SAXException2;

        $r8 = interfaceinvoke r3.<javax.xml.bind.ValidationEvent: java.lang.Throwable getLinkedException()>();

        $r9 = (java.lang.Exception) $r8;

        specialinvoke $r7.<com.sun.istack.SAXException2: void <init>(java.lang.Exception)>($r9);

        throw $r7;

     label5:
        $r5 = new com.sun.istack.SAXException2;

        $r6 = interfaceinvoke r3.<javax.xml.bind.ValidationEvent: java.lang.String getMessage()>();

        specialinvoke $r5.<com.sun.istack.SAXException2: void <init>(java.lang.String)>($r6);

        throw $r5;

     label6:
        return;

        catch javax.xml.bind.JAXBException from label1 to label2 with label3;
    }

    public final void reportError(java.lang.String, java.lang.Throwable) throws org.xml.sax.SAXException
    {
        java.lang.Throwable r1;
        com.sun.xml.bind.v2.runtime.XMLSerializer r3;
        javax.xml.bind.ValidationEventLocator $r5;
        java.lang.String $r2, r4;
        javax.xml.bind.helpers.ValidationEventImpl $r0;

        r3 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Throwable;

        $r0 = new javax.xml.bind.helpers.ValidationEventImpl;

        $r2 = virtualinvoke r1.<java.lang.Throwable: java.lang.String getMessage()>();

        $r5 = virtualinvoke r3.<com.sun.xml.bind.v2.runtime.XMLSerializer: javax.xml.bind.ValidationEventLocator getCurrentLocation(java.lang.String)>(r4);

        specialinvoke $r0.<javax.xml.bind.helpers.ValidationEventImpl: void <init>(int,java.lang.String,javax.xml.bind.ValidationEventLocator,java.lang.Throwable)>(1, $r2, $r5, r1);

        virtualinvoke r3.<com.sun.xml.bind.v2.runtime.XMLSerializer: void reportError(javax.xml.bind.ValidationEvent)>($r0);

        return;
    }

    public void startElement(com.sun.xml.bind.v2.runtime.Name, java.lang.Object)
    {
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element $r3;
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        com.sun.xml.bind.v2.runtime.Name r1;
        java.lang.Object r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.Name;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void startElement()>();

        $r3 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element nse>;

        virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element: void setTagName(com.sun.xml.bind.v2.runtime.Name,java.lang.Object)>(r1, r2);

        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, java.lang.Object)
    {
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element $r6;
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl $r3;
        int $i0;
        java.lang.Object r5;
        java.lang.String r1, r2, r4;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.Object;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void startElement()>();

        $r3 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        $i0 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: int declareNsUri(java.lang.String,java.lang.String,boolean)>(r1, r2, 0);

        $r6 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element nse>;

        virtualinvoke $r6.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element: void setTagName(int,java.lang.String,java.lang.Object)>($i0, r4, r5);

        return;
    }

    public void startElementForce(java.lang.String, java.lang.String, java.lang.String, java.lang.Object)
    {
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element $r6;
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl $r3;
        int $i0;
        java.lang.Object r5;
        java.lang.String r1, r2, r4;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.Object;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void startElement()>();

        $r3 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        $i0 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: int force(java.lang.String,java.lang.String)>(r1, r2);

        $r6 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element nse>;

        virtualinvoke $r6.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element: void setTagName(int,java.lang.String,java.lang.Object)>($i0, r4, r5);

        return;
    }

    public void endNamespaceDecls(java.lang.Object) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element $r4;
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl $r1;
        com.sun.xml.bind.v2.runtime.output.XmlOutput $r3;
        java.lang.Object r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        $r1.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: boolean collectionMode> = 0;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element nse>;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.XmlOutput out>;

        virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element: void startElement(com.sun.xml.bind.v2.runtime.output.XmlOutput,java.lang.Object)>($r3, r2);

        return;
    }

    public void endAttributes() throws org.xml.sax.SAXException, java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl $r2;
        int $i0;
        com.sun.xml.bind.v2.runtime.output.XmlOutput $r6, $r8, $r10;
        java.lang.String $r1, $r3, $r4, $r5, $r7, $r9;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        $z0 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean seenRoot>;

        if $z0 != 0 goto label3;

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean seenRoot> = 1;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.lang.String schemaLocation>;

        if $r1 != null goto label1;

        $r9 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.lang.String noNsSchemaLocation>;

        if $r9 == null goto label3;

     label1:
        $r2 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        $i0 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: int getPrefixIndex(java.lang.String)>("http://www.w3.org/2001/XMLSchema-instance");

        $r3 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.lang.String schemaLocation>;

        if $r3 == null goto label2;

        $r8 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.XmlOutput out>;

        $r7 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.lang.String schemaLocation>;

        interfaceinvoke $r8.<com.sun.xml.bind.v2.runtime.output.XmlOutput: void attribute(int,java.lang.String,java.lang.String)>($i0, "schemaLocation", $r7);

     label2:
        $r4 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.lang.String noNsSchemaLocation>;

        if $r4 == null goto label3;

        $r6 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.XmlOutput out>;

        $r5 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.lang.String noNsSchemaLocation>;

        interfaceinvoke $r6.<com.sun.xml.bind.v2.runtime.output.XmlOutput: void attribute(int,java.lang.String,java.lang.String)>($i0, "noNamespaceSchemaLocation", $r5);

     label3:
        $r10 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.XmlOutput out>;

        interfaceinvoke $r10.<com.sun.xml.bind.v2.runtime.output.XmlOutput: void endStartTag()>();

        return;
    }

    public void endElement() throws org.xml.sax.SAXException, java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element $r2, $r3, $r4;
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        com.sun.xml.bind.v2.runtime.output.XmlOutput $r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element nse>;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.XmlOutput out>;

        virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element: void endElement(com.sun.xml.bind.v2.runtime.output.XmlOutput)>($r1);

        $r3 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element nse>;

        $r4 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element pop()>();

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element nse> = $r4;

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean textHasAlreadyPrinted> = 0;

        return;
    }

    public void leafElement(com.sun.xml.bind.v2.runtime.Name, java.lang.String, java.lang.String) throws org.xml.sax.SAXException, java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.Name r1;
        java.lang.Object[] $r14, $r21;
        com.sun.xml.bind.v2.runtime.output.XmlOutput $r3, $r6, $r7, $r8, $r11;
        com.sun.xml.bind.v2.runtime.Messages $r16, $r22;
        java.lang.String r2, r15, $r17, $r18, $r23, $r24;
        boolean $z0;
        java.lang.IllegalArgumentException $r12, $r13, $r19, $r20;
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element $r4, $r5, $r9, $r10;
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.Name;

        r2 := @parameter1: java.lang.String;

        r15 := @parameter2: java.lang.String;

        $z0 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean seenRoot>;

        if $z0 == 0 goto label05;

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean textHasAlreadyPrinted> = 0;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element nse>;

        $r5 = virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element push()>();

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element nse> = $r5;

        $r6 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.XmlOutput out>;

        interfaceinvoke $r6.<com.sun.xml.bind.v2.runtime.output.XmlOutput: void beginStartTag(com.sun.xml.bind.v2.runtime.Name)>(r1);

        $r7 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.XmlOutput out>;

        interfaceinvoke $r7.<com.sun.xml.bind.v2.runtime.output.XmlOutput: void endStartTag()>();

        if r2 == null goto label04;

     label01:
        $r11 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.XmlOutput out>;

        interfaceinvoke $r11.<com.sun.xml.bind.v2.runtime.output.XmlOutput: void text(java.lang.String,boolean)>(r2, 0);

     label02:
        goto label04;

     label03:
        $r19 := @caughtexception;

        $r20 = new java.lang.IllegalArgumentException;

        $r22 = <com.sun.xml.bind.v2.runtime.Messages: com.sun.xml.bind.v2.runtime.Messages ILLEGAL_CONTENT>;

        $r21 = newarray (java.lang.Object)[2];

        $r21[0] = r15;

        $r23 = virtualinvoke $r19.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r21[1] = $r23;

        $r24 = virtualinvoke $r22.<com.sun.xml.bind.v2.runtime.Messages: java.lang.String format(java.lang.Object[])>($r21);

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r24);

        throw $r20;

     label04:
        $r8 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.XmlOutput out>;

        interfaceinvoke $r8.<com.sun.xml.bind.v2.runtime.output.XmlOutput: void endTag(com.sun.xml.bind.v2.runtime.Name)>(r1);

        $r9 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element nse>;

        $r10 = virtualinvoke $r9.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element pop()>();

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element nse> = $r10;

        goto label10;

     label05:
        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void startElement(com.sun.xml.bind.v2.runtime.Name,java.lang.Object)>(r1, null);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endNamespaceDecls(java.lang.Object)>(null);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endAttributes()>();

     label06:
        $r3 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.XmlOutput out>;

        interfaceinvoke $r3.<com.sun.xml.bind.v2.runtime.output.XmlOutput: void text(java.lang.String,boolean)>(r2, 0);

     label07:
        goto label09;

     label08:
        $r12 := @caughtexception;

        $r13 = new java.lang.IllegalArgumentException;

        $r16 = <com.sun.xml.bind.v2.runtime.Messages: com.sun.xml.bind.v2.runtime.Messages ILLEGAL_CONTENT>;

        $r14 = newarray (java.lang.Object)[2];

        $r14[0] = r15;

        $r17 = virtualinvoke $r12.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r14[1] = $r17;

        $r18 = virtualinvoke $r16.<com.sun.xml.bind.v2.runtime.Messages: java.lang.String format(java.lang.Object[])>($r14);

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label09:
        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endElement()>();

     label10:
        return;

        catch java.lang.IllegalArgumentException from label01 to label02 with label03;
        catch java.lang.IllegalArgumentException from label06 to label07 with label08;
    }

    public void leafElement(com.sun.xml.bind.v2.runtime.Name, com.sun.xml.bind.v2.runtime.output.Pcdata, java.lang.String) throws org.xml.sax.SAXException, java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.Name r1;
        com.sun.xml.bind.v2.runtime.output.Pcdata r2;
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element $r4, $r5, $r9, $r10;
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        com.sun.xml.bind.v2.runtime.output.XmlOutput $r3, $r6, $r7, $r8, $r11;
        java.lang.String r12;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.Name;

        r2 := @parameter1: com.sun.xml.bind.v2.runtime.output.Pcdata;

        r12 := @parameter2: java.lang.String;

        $z0 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean seenRoot>;

        if $z0 == 0 goto label2;

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean textHasAlreadyPrinted> = 0;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element nse>;

        $r5 = virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element push()>();

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element nse> = $r5;

        $r6 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.XmlOutput out>;

        interfaceinvoke $r6.<com.sun.xml.bind.v2.runtime.output.XmlOutput: void beginStartTag(com.sun.xml.bind.v2.runtime.Name)>(r1);

        $r7 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.XmlOutput out>;

        interfaceinvoke $r7.<com.sun.xml.bind.v2.runtime.output.XmlOutput: void endStartTag()>();

        if r2 == null goto label1;

        $r11 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.XmlOutput out>;

        interfaceinvoke $r11.<com.sun.xml.bind.v2.runtime.output.XmlOutput: void text(com.sun.xml.bind.v2.runtime.output.Pcdata,boolean)>(r2, 0);

     label1:
        $r8 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.XmlOutput out>;

        interfaceinvoke $r8.<com.sun.xml.bind.v2.runtime.output.XmlOutput: void endTag(com.sun.xml.bind.v2.runtime.Name)>(r1);

        $r9 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element nse>;

        $r10 = virtualinvoke $r9.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element pop()>();

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element nse> = $r10;

        goto label3;

     label2:
        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void startElement(com.sun.xml.bind.v2.runtime.Name,java.lang.Object)>(r1, null);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endNamespaceDecls(java.lang.Object)>(null);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endAttributes()>();

        $r3 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.XmlOutput out>;

        interfaceinvoke $r3.<com.sun.xml.bind.v2.runtime.output.XmlOutput: void text(com.sun.xml.bind.v2.runtime.output.Pcdata,boolean)>(r2, 0);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endElement()>();

     label3:
        return;
    }

    public void leafElement(com.sun.xml.bind.v2.runtime.Name, int, java.lang.String) throws org.xml.sax.SAXException, java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.unmarshaller.IntData $r1, $r4;
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        com.sun.xml.bind.v2.runtime.Name r2;
        int i0;
        java.lang.String r3;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r2 := @parameter0: com.sun.xml.bind.v2.runtime.Name;

        i0 := @parameter1: int;

        r3 := @parameter2: java.lang.String;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.unmarshaller.IntData intData>;

        virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.unmarshaller.IntData: void reset(int)>(i0);

        $r4 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.unmarshaller.IntData intData>;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void leafElement(com.sun.xml.bind.v2.runtime.Name,com.sun.xml.bind.v2.runtime.output.Pcdata,java.lang.String)>(r2, $r4, r3);

        return;
    }

    public void text(java.lang.String, java.lang.String) throws org.xml.sax.SAXException, java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r1;
        com.sun.xml.bind.v2.runtime.output.XmlOutput $r2;
        java.lang.String r0, r3;
        boolean $z0;

        r1 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        specialinvoke r1.<com.sun.xml.bind.v2.runtime.XMLSerializer: void reportMissingObjectError(java.lang.String)>(r3);

        return;

     label1:
        $r2 = r1.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.XmlOutput out>;

        $z0 = r1.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean textHasAlreadyPrinted>;

        interfaceinvoke $r2.<com.sun.xml.bind.v2.runtime.output.XmlOutput: void text(java.lang.String,boolean)>(r0, $z0);

        r1.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean textHasAlreadyPrinted> = 1;

        return;
    }

    public void text(com.sun.xml.bind.v2.runtime.output.Pcdata, java.lang.String) throws org.xml.sax.SAXException, java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r1;
        com.sun.xml.bind.v2.runtime.output.Pcdata r0;
        com.sun.xml.bind.v2.runtime.output.XmlOutput $r2;
        java.lang.String r3;
        boolean $z0;

        r1 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.output.Pcdata;

        r3 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        specialinvoke r1.<com.sun.xml.bind.v2.runtime.XMLSerializer: void reportMissingObjectError(java.lang.String)>(r3);

        return;

     label1:
        $r2 = r1.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.XmlOutput out>;

        $z0 = r1.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean textHasAlreadyPrinted>;

        interfaceinvoke $r2.<com.sun.xml.bind.v2.runtime.output.XmlOutput: void text(com.sun.xml.bind.v2.runtime.output.Pcdata,boolean)>(r0, $z0);

        r1.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean textHasAlreadyPrinted> = 1;

        return;
    }

    public void attribute(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        com.sun.istack.SAXException2 $r10, $r11;
        java.io.IOException $r8;
        com.sun.xml.bind.v2.runtime.XMLSerializer r1;
        javax.xml.stream.XMLStreamException $r6;
        int $i0, i1, $i3;
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl $r2;
        com.sun.xml.bind.v2.runtime.output.XmlOutput $r5;
        java.lang.String r0, r3, r4;

        r1 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $i3 = (int) -1;

        i1 = $i3;

        goto label2;

     label1:
        $r2 = r1.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        i1 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: int getPrefixIndex(java.lang.String)>(r0);

     label2:
        $r5 = r1.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.XmlOutput out>;

        interfaceinvoke $r5.<com.sun.xml.bind.v2.runtime.output.XmlOutput: void attribute(int,java.lang.String,java.lang.String)>(i1, r3, r4);

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        $r10 = new com.sun.istack.SAXException2;

        specialinvoke $r10.<com.sun.istack.SAXException2: void <init>(java.lang.Exception)>($r8);

        throw $r10;

     label5:
        $r6 := @caughtexception;

        $r11 = new com.sun.istack.SAXException2;

        specialinvoke $r11.<com.sun.istack.SAXException2: void <init>(java.lang.Exception)>($r6);

        throw $r11;

     label6:
        return;

        catch java.io.IOException from label2 to label3 with label4;
        catch javax.xml.stream.XMLStreamException from label2 to label3 with label5;
    }

    public void attribute(com.sun.xml.bind.v2.runtime.Name, java.lang.CharSequence) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        com.sun.xml.bind.v2.runtime.Name r1;
        java.lang.CharSequence r2;
        com.sun.xml.bind.v2.runtime.output.XmlOutput $r3;
        java.lang.String $r4;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.Name;

        r2 := @parameter1: java.lang.CharSequence;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.XmlOutput out>;

        $r4 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r3.<com.sun.xml.bind.v2.runtime.output.XmlOutput: void attribute(com.sun.xml.bind.v2.runtime.Name,java.lang.String)>(r1, $r4);

        return;
    }

    public com.sun.xml.bind.v2.runtime.NamespaceContext2 getNamespaceContext()
    {
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl $r1;
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        return $r1;
    }

    public java.lang.String onID(java.lang.Object, java.lang.String)
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        java.util.Set $r2;
        java.lang.Object r1;
        java.lang.String r3;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.util.Set objectsWithId>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return r3;
    }

    public java.lang.String onIDREF(java.lang.Object) throws org.xml.sax.SAXException
    {
        java.lang.Object[] $r5;
        java.util.Set $r3;
        javax.xml.bind.JAXBException $r9;
        javax.xml.bind.helpers.ValidationEventLocatorImpl $r8;
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        java.lang.Object r1;
        com.sun.xml.bind.v2.runtime.Messages $r6;
        java.lang.String $r2, $r7;
        javax.xml.bind.helpers.NotIdentifiableEventImpl $r4;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r1 := @parameter0: java.lang.Object;

     label1:
        $r2 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.lang.String getIdFromObject(java.lang.Object)>(r1);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void reportError(java.lang.String,java.lang.Throwable)>(null, $r9);

        return null;

     label4:
        $r3 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.util.Set idReferencedObjects>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r1);

        if $r2 != null goto label5;

        $r4 = new javax.xml.bind.helpers.NotIdentifiableEventImpl;

        $r6 = <com.sun.xml.bind.v2.runtime.Messages: com.sun.xml.bind.v2.runtime.Messages NOT_IDENTIFIABLE>;

        $r5 = newarray (java.lang.Object)[0];

        $r7 = virtualinvoke $r6.<com.sun.xml.bind.v2.runtime.Messages: java.lang.String format(java.lang.Object[])>($r5);

        $r8 = new javax.xml.bind.helpers.ValidationEventLocatorImpl;

        specialinvoke $r8.<javax.xml.bind.helpers.ValidationEventLocatorImpl: void <init>(java.lang.Object)>(r1);

        specialinvoke $r4.<javax.xml.bind.helpers.NotIdentifiableEventImpl: void <init>(int,java.lang.String,javax.xml.bind.ValidationEventLocator)>(1, $r7, $r8);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void reportError(javax.xml.bind.ValidationEvent)>($r4);

     label5:
        return $r2;

        catch javax.xml.bind.JAXBException from label1 to label2 with label3;
    }

    public void childAsRoot(java.lang.Object) throws javax.xml.bind.JAXBException, java.io.IOException, org.xml.sax.SAXException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        java.lang.Object r1;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r3;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r2;
        com.sun.xml.bind.v2.util.CollisionCheckStack $r4, $r5;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.JAXBContextImpl grammar>;

        $r3 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Object,boolean)>(r1, 1);

        $r4 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.util.CollisionCheckStack cycleDetectionStack>;

        virtualinvoke $r4.<com.sun.xml.bind.v2.util.CollisionCheckStack: void pushNocheck(java.lang.Object)>(r1);

        $z0 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: boolean lookForLifecycleMethods()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void fireBeforeMarshalEvents(com.sun.xml.bind.v2.runtime.JaxBeanInfo,java.lang.Object)>($r3, r1);

     label1:
        virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: void serializeRoot(java.lang.Object,com.sun.xml.bind.v2.runtime.XMLSerializer)>(r1, r0);

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void fireAfterMarshalEvents(com.sun.xml.bind.v2.runtime.JaxBeanInfo,java.lang.Object)>($r3, r1);

     label2:
        $r5 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.util.CollisionCheckStack cycleDetectionStack>;

        virtualinvoke $r5.<com.sun.xml.bind.v2.util.CollisionCheckStack: java.lang.Object pop()>();

        return;
    }

    private java.lang.Object pushObject(java.lang.Object, java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.Object[] $r3;
        com.sun.xml.bind.v2.runtime.Messages $r5;
        java.lang.String $r6, $r7, r8;
        com.sun.xml.bind.v2.util.CollisionCheckStack $r1, $r4, $r13;
        boolean $z0, $z1;
        javax.xml.bind.ValidationEventLocator $r9;
        com.sun.xml.bind.v2.runtime.XMLSerializer$1 $r10;
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        com.sun.xml.bind.CycleRecoverable $r11;
        java.lang.Object $r12, $r14, r15;
        javax.xml.bind.helpers.ValidationEventImpl $r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r15 := @parameter0: java.lang.Object;

        r8 := @parameter1: java.lang.String;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.util.CollisionCheckStack cycleDetectionStack>;

        $z0 = virtualinvoke $r1.<com.sun.xml.bind.v2.util.CollisionCheckStack: boolean push(java.lang.Object)>(r15);

        if $z0 != 0 goto label1;

        return r15;

     label1:
        $z1 = r15 instanceof com.sun.xml.bind.CycleRecoverable;

        if $z1 == 0 goto label3;

        $r11 = (com.sun.xml.bind.CycleRecoverable) r15;

        $r10 = new com.sun.xml.bind.v2.runtime.XMLSerializer$1;

        specialinvoke $r10.<com.sun.xml.bind.v2.runtime.XMLSerializer$1: void <init>(com.sun.xml.bind.v2.runtime.XMLSerializer)>(r0);

        $r12 = interfaceinvoke $r11.<com.sun.xml.bind.CycleRecoverable: java.lang.Object onCycleDetected(com.sun.xml.bind.CycleRecoverable$Context)>($r10);

        if $r12 == null goto label2;

        $r13 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.util.CollisionCheckStack cycleDetectionStack>;

        virtualinvoke $r13.<com.sun.xml.bind.v2.util.CollisionCheckStack: java.lang.Object pop()>();

        $r14 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.lang.Object pushObject(java.lang.Object,java.lang.String)>($r12, r8);

        return $r14;

     label2:
        return null;

     label3:
        $r2 = new javax.xml.bind.helpers.ValidationEventImpl;

        $r5 = <com.sun.xml.bind.v2.runtime.Messages: com.sun.xml.bind.v2.runtime.Messages CYCLE_IN_MARSHALLER>;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.util.CollisionCheckStack cycleDetectionStack>;

        $r6 = virtualinvoke $r4.<com.sun.xml.bind.v2.util.CollisionCheckStack: java.lang.String getCycleString()>();

        $r3[0] = $r6;

        $r7 = virtualinvoke $r5.<com.sun.xml.bind.v2.runtime.Messages: java.lang.String format(java.lang.Object[])>($r3);

        $r9 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: javax.xml.bind.ValidationEventLocator getCurrentLocation(java.lang.String)>(r8);

        specialinvoke $r2.<javax.xml.bind.helpers.ValidationEventImpl: void <init>(int,java.lang.String,javax.xml.bind.ValidationEventLocator,java.lang.Throwable)>(1, $r7, $r9, null);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void reportError(javax.xml.bind.ValidationEvent)>($r2);

        return null;
    }

    public final void childAsSoleContent(java.lang.Object, java.lang.String) throws org.xml.sax.SAXException, java.io.IOException, javax.xml.stream.XMLStreamException
    {
        javax.xml.bind.JAXBException $r7;
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        java.lang.Object $r2, r9;
        java.lang.String r1;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo $r4;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r3;
        boolean $z0;
        com.sun.xml.bind.v2.util.CollisionCheckStack $r5, $r6, $r8;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r9 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        if r9 != null goto label1;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void handleMissingObjectError(java.lang.String)>(r1);

        goto label8;

     label1:
        $r2 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.lang.Object pushObject(java.lang.Object,java.lang.String)>(r9, r1);

        if $r2 != null goto label2;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endNamespaceDecls(java.lang.Object)>(null);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endAttributes()>();

        $r6 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.util.CollisionCheckStack cycleDetectionStack>;

        virtualinvoke $r6.<com.sun.xml.bind.v2.util.CollisionCheckStack: java.lang.Object pop()>();

     label2:
        $r3 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.JAXBContextImpl grammar>;

        $r4 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Object,boolean)>($r2, 1);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void reportError(java.lang.String,java.lang.Throwable)>(r1, $r7);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endNamespaceDecls(java.lang.Object)>(null);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endAttributes()>();

        $r8 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.util.CollisionCheckStack cycleDetectionStack>;

        virtualinvoke $r8.<com.sun.xml.bind.v2.util.CollisionCheckStack: java.lang.Object pop()>();

        return;

     label5:
        $z0 = virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: boolean lookForLifecycleMethods()>();

        if $z0 == 0 goto label6;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void fireBeforeMarshalEvents(com.sun.xml.bind.v2.runtime.JaxBeanInfo,java.lang.Object)>($r4, $r2);

     label6:
        virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: void serializeURIs(java.lang.Object,com.sun.xml.bind.v2.runtime.XMLSerializer)>($r2, r0);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endNamespaceDecls(java.lang.Object)>($r2);

        virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: void serializeAttributes(java.lang.Object,com.sun.xml.bind.v2.runtime.XMLSerializer)>($r2, r0);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endAttributes()>();

        virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: void serializeBody(java.lang.Object,com.sun.xml.bind.v2.runtime.XMLSerializer)>($r2, r0);

        if $z0 == 0 goto label7;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void fireAfterMarshalEvents(com.sun.xml.bind.v2.runtime.JaxBeanInfo,java.lang.Object)>($r4, $r2);

     label7:
        $r5 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.util.CollisionCheckStack cycleDetectionStack>;

        virtualinvoke $r5.<com.sun.xml.bind.v2.util.CollisionCheckStack: java.lang.Object pop()>();

     label8:
        return;

        catch javax.xml.bind.JAXBException from label2 to label3 with label4;
    }

    public final void childAsXsiType(java.lang.Object, java.lang.String, com.sun.xml.bind.v2.runtime.JaxBeanInfo, boolean) throws org.xml.sax.SAXException, java.io.IOException, javax.xml.stream.XMLStreamException
    {
        boolean z0, $z1, $z2, $z3, z5, $z6, $z7, $z8;
        com.sun.xml.bind.v2.util.CollisionCheckStack $r6;
        javax.xml.bind.JAXBException $r27;
        javax.xml.namespace.QName $r12, r30;
        javax.xml.bind.helpers.ValidationEventImpl $r16;
        java.lang.Object[] $r17;
        com.sun.xml.bind.v2.runtime.Messages $r19;
        java.lang.String r1, $r8, $r15, $r20, $r22, $r24, $r25;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r10;
        javax.xml.bind.ValidationEventLocator $r26;
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        java.lang.Object $r2, r28;
        java.lang.Class $r3, $r5, $r18, $r21, $r23;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo r4, $r11, r29;
        com.sun.xml.bind.v2.runtime.NamespaceContext2 $r7, $r9, $r13, $r14;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r28 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: com.sun.xml.bind.v2.runtime.JaxBeanInfo;

        z0 := @parameter3: boolean;

        if r28 != null goto label01;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void handleMissingObjectError(java.lang.String)>(r1);

        goto label17;

     label01:
        $r2 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.lang.Object pushObject(java.lang.Object,java.lang.String)>(r28, r1);

        if $r2 != null goto label02;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endNamespaceDecls(java.lang.Object)>(null);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endAttributes()>();

        return;

     label02:
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = r4.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: java.lang.Class jaxbType>;

        if $r3 != $r5 goto label03;

        $z8 = 1;

        $z7 = 1;

        goto label04;

     label03:
        $z8 = 0;

        $z7 = 0;

     label04:
        z5 = $z7;

        r29 = r4;

        r30 = null;

        if $z8 == 0 goto label05;

        $z3 = virtualinvoke r4.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: boolean lookForLifecycleMethods()>();

        if $z3 == 0 goto label05;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void fireBeforeMarshalEvents(com.sun.xml.bind.v2.runtime.JaxBeanInfo,java.lang.Object)>(r4, $r2);

     label05:
        if z5 != 0 goto label12;

     label06:
        $r10 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.JAXBContextImpl grammar>;

        $r11 = virtualinvoke $r10.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: com.sun.xml.bind.v2.runtime.JaxBeanInfo getBeanInfo(java.lang.Object,boolean)>($r2, 1);

        r29 = $r11;

        $z2 = virtualinvoke $r11.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: boolean lookForLifecycleMethods()>();

        if $z2 == 0 goto label07;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void fireBeforeMarshalEvents(com.sun.xml.bind.v2.runtime.JaxBeanInfo,java.lang.Object)>($r11, $r2);

     label07:
        goto label09;

     label08:
        $r27 := @caughtexception;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void reportError(java.lang.String,java.lang.Throwable)>(r1, $r27);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endNamespaceDecls(java.lang.Object)>(null);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endAttributes()>();

        return;

     label09:
        if $r11 != r4 goto label10;

        z5 = 1;

        goto label12;

     label10:
        $r12 = virtualinvoke $r11.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: javax.xml.namespace.QName getTypeName(java.lang.Object)>($r2);

        r30 = $r12;

        if $r12 != null goto label11;

        $r16 = new javax.xml.bind.helpers.ValidationEventImpl;

        $r19 = <com.sun.xml.bind.v2.runtime.Messages: com.sun.xml.bind.v2.runtime.Messages SUBSTITUTED_BY_ANONYMOUS_TYPE>;

        $r17 = newarray (java.lang.Object)[3];

        $r18 = r4.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: java.lang.Class jaxbType>;

        $r20 = virtualinvoke $r18.<java.lang.Class: java.lang.String getName()>();

        $r17[0] = $r20;

        $r21 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.String getName()>();

        $r17[1] = $r22;

        $r23 = $r11.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: java.lang.Class jaxbType>;

        $r24 = virtualinvoke $r23.<java.lang.Class: java.lang.String getName()>();

        $r17[2] = $r24;

        $r25 = virtualinvoke $r19.<com.sun.xml.bind.v2.runtime.Messages: java.lang.String format(java.lang.Object[])>($r17);

        $r26 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: javax.xml.bind.ValidationEventLocator getCurrentLocation(java.lang.String)>(r1);

        specialinvoke $r16.<javax.xml.bind.helpers.ValidationEventImpl: void <init>(int,java.lang.String,javax.xml.bind.ValidationEventLocator)>(1, $r25, $r26);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void reportError(javax.xml.bind.ValidationEvent)>($r16);

        goto label12;

     label11:
        $r13 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.NamespaceContext2 getNamespaceContext()>();

        interfaceinvoke $r13.<com.sun.xml.bind.v2.runtime.NamespaceContext2: java.lang.String declareNamespace(java.lang.String,java.lang.String,boolean)>("http://www.w3.org/2001/XMLSchema-instance", "xsi", 1);

        $r14 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.NamespaceContext2 getNamespaceContext()>();

        $r15 = virtualinvoke $r12.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        interfaceinvoke $r14.<com.sun.xml.bind.v2.runtime.NamespaceContext2: java.lang.String declareNamespace(java.lang.String,java.lang.String,boolean)>($r15, null, 0);

     label12:
        virtualinvoke r29.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: void serializeURIs(java.lang.Object,com.sun.xml.bind.v2.runtime.XMLSerializer)>($r2, r0);

        if z0 == 0 goto label13;

        $r9 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.NamespaceContext2 getNamespaceContext()>();

        interfaceinvoke $r9.<com.sun.xml.bind.v2.runtime.NamespaceContext2: java.lang.String declareNamespace(java.lang.String,java.lang.String,boolean)>("http://www.w3.org/2001/XMLSchema-instance", "xsi", 1);

     label13:
        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endNamespaceDecls(java.lang.Object)>($r2);

        if z5 != 0 goto label14;

        $r7 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.NamespaceContext2 getNamespaceContext()>();

        $r8 = staticinvoke <javax.xml.bind.DatatypeConverter: java.lang.String printQName(javax.xml.namespace.QName,javax.xml.namespace.NamespaceContext)>(r30, $r7);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void attribute(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema-instance", "type", $r8);

     label14:
        virtualinvoke r29.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: void serializeAttributes(java.lang.Object,com.sun.xml.bind.v2.runtime.XMLSerializer)>($r2, r0);

        $z1 = virtualinvoke r29.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: boolean isNilIncluded()>();

        if z0 == 0 goto label15;

        if $z1 != 0 goto label15;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void attribute(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema-instance", "nil", "true");

     label15:
        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endAttributes()>();

        virtualinvoke r29.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: void serializeBody(java.lang.Object,com.sun.xml.bind.v2.runtime.XMLSerializer)>($r2, r0);

        $z6 = virtualinvoke r29.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: boolean lookForLifecycleMethods()>();

        if $z6 == 0 goto label16;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void fireAfterMarshalEvents(com.sun.xml.bind.v2.runtime.JaxBeanInfo,java.lang.Object)>(r29, $r2);

     label16:
        $r6 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.util.CollisionCheckStack cycleDetectionStack>;

        virtualinvoke $r6.<com.sun.xml.bind.v2.util.CollisionCheckStack: java.lang.Object pop()>();

     label17:
        return;

        catch javax.xml.bind.JAXBException from label06 to label07 with label08;
    }

    private void fireAfterMarshalEvents(com.sun.xml.bind.v2.runtime.JaxBeanInfo, java.lang.Object)
    {
        com.sun.xml.bind.v2.runtime.LifecycleMethods $r5;
        javax.xml.bind.Marshaller$Listener $r3;
        com.sun.xml.bind.v2.runtime.XMLSerializer r1;
        com.sun.xml.bind.v2.runtime.MarshallerImpl $r2;
        java.lang.Object r4;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo r0;
        java.lang.reflect.Method r6;
        boolean $z0;

        r1 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.JaxBeanInfo;

        r4 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: boolean hasAfterMarshalMethod()>();

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: com.sun.xml.bind.v2.runtime.LifecycleMethods getLifecycleMethods()>();

        r6 = $r5.<com.sun.xml.bind.v2.runtime.LifecycleMethods: java.lang.reflect.Method afterMarshal>;

        specialinvoke r1.<com.sun.xml.bind.v2.runtime.XMLSerializer: void fireMarshalEvent(java.lang.Object,java.lang.reflect.Method)>(r4, r6);

     label1:
        $r2 = r1.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.MarshallerImpl marshaller>;

        $r3 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.MarshallerImpl: javax.xml.bind.Marshaller$Listener getListener()>();

        if $r3 == null goto label2;

        virtualinvoke $r3.<javax.xml.bind.Marshaller$Listener: void afterMarshal(java.lang.Object)>(r4);

     label2:
        return;
    }

    private void fireBeforeMarshalEvents(com.sun.xml.bind.v2.runtime.JaxBeanInfo, java.lang.Object)
    {
        com.sun.xml.bind.v2.runtime.LifecycleMethods $r5;
        javax.xml.bind.Marshaller$Listener $r3;
        com.sun.xml.bind.v2.runtime.XMLSerializer r1;
        com.sun.xml.bind.v2.runtime.MarshallerImpl $r2;
        java.lang.Object r4;
        com.sun.xml.bind.v2.runtime.JaxBeanInfo r0;
        java.lang.reflect.Method r6;
        boolean $z0;

        r1 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.JaxBeanInfo;

        r4 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: boolean hasBeforeMarshalMethod()>();

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.JaxBeanInfo: com.sun.xml.bind.v2.runtime.LifecycleMethods getLifecycleMethods()>();

        r6 = $r5.<com.sun.xml.bind.v2.runtime.LifecycleMethods: java.lang.reflect.Method beforeMarshal>;

        specialinvoke r1.<com.sun.xml.bind.v2.runtime.XMLSerializer: void fireMarshalEvent(java.lang.Object,java.lang.reflect.Method)>(r4, r6);

     label1:
        $r2 = r1.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.MarshallerImpl marshaller>;

        $r3 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.MarshallerImpl: javax.xml.bind.Marshaller$Listener getListener()>();

        if $r3 == null goto label2;

        virtualinvoke $r3.<javax.xml.bind.Marshaller$Listener: void beforeMarshal(java.lang.Object)>(r4);

     label2:
        return;
    }

    private void fireMarshalEvent(java.lang.Object, java.lang.reflect.Method)
    {
        java.lang.IllegalStateException $r6;
        java.lang.Object[] $r2;
        com.sun.xml.bind.v2.runtime.XMLSerializer r3;
        com.sun.xml.bind.v2.runtime.MarshallerImpl $r4;
        java.lang.Object r1;
        java.lang.reflect.Method r0;
        java.lang.Exception $r5;

        r3 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r1 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.reflect.Method;

     label1:
        $r2 = newarray (java.lang.Object)[1];

        $r4 = r3.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.MarshallerImpl marshaller>;

        $r2[0] = $r4;

        virtualinvoke r0.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void attWildcardAsURIs(java.util.Map, java.lang.String)
    {
        java.util.Map r0;
        int $i0, $i1;
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl $r10;
        java.lang.String $r7, $r8, r11, r12;
        boolean $z0;
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.util.Set $r1;
        com.sun.xml.bind.v2.runtime.XMLSerializer r9;
        java.lang.Object $r3, $r5;
        javax.xml.namespace.QName r6;

        r9 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r0 := @parameter0: java.util.Map;

        r11 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return;

     label1:
        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r5 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (javax.xml.namespace.QName) $r5;

        $r7 = virtualinvoke r6.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i0 <= 0 goto label4;

        $r8 = virtualinvoke r6.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        r12 = $r8;

        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i1 != 0 goto label3;

        r12 = null;

     label3:
        $r10 = r9.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        virtualinvoke $r10.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: int declareNsUri(java.lang.String,java.lang.String,boolean)>($r7, r12, 1);

     label4:
        goto label2;

     label5:
        return;
    }

    public void attWildcardAsAttributes(java.util.Map, java.lang.String) throws org.xml.sax.SAXException
    {
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.util.Set $r1;
        com.sun.xml.bind.v2.runtime.XMLSerializer r7;
        java.util.Map r0;
        java.lang.Object $r3, $r5, $r10;
        javax.xml.namespace.QName r6;
        java.lang.String $r8, $r9, $r11, r12;
        boolean $z0;

        r7 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r0 := @parameter0: java.util.Map;

        r12 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return;

     label1:
        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r5 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (javax.xml.namespace.QName) $r5;

        $r8 = virtualinvoke r6.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r9 = virtualinvoke r6.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r10 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (java.lang.String) $r10;

        virtualinvoke r7.<com.sun.xml.bind.v2.runtime.XMLSerializer: void attribute(java.lang.String,java.lang.String,java.lang.String)>($r8, $r9, $r11);

        goto label2;

     label3:
        return;
    }

    public final void writeXsiNilTrue() throws org.xml.sax.SAXException, java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        com.sun.xml.bind.v2.runtime.NamespaceContext2 $r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        $r1 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.NamespaceContext2 getNamespaceContext()>();

        interfaceinvoke $r1.<com.sun.xml.bind.v2.runtime.NamespaceContext2: java.lang.String declareNamespace(java.lang.String,java.lang.String,boolean)>("http://www.w3.org/2001/XMLSchema-instance", "xsi", 1);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endNamespaceDecls(java.lang.Object)>(null);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void attribute(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema-instance", "nil", "true");

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void endAttributes()>();

        return;
    }

    public void writeDom(java.lang.Object, javax.xml.bind.'annotation'.DomHandler, java.lang.Object, java.lang.String) throws org.xml.sax.SAXException
    {
        javax.xml.transform.Transformer $r5;
        javax.xml.transform.TransformerException $r9;
        javax.xml.transform.Source $r3;
        javax.xml.transform.sax.SAXResult $r6;
        com.sun.xml.bind.v2.runtime.XMLSerializer r2;
        com.sun.xml.bind.v2.runtime.ContentHandlerAdaptor $r4, $r7, $r8;
        javax.xml.bind.'annotation'.DomHandler r0;
        java.lang.Object r1, r11;
        java.lang.String r10;

        r2 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r1 := @parameter0: java.lang.Object;

        r0 := @parameter1: javax.xml.bind.'annotation'.DomHandler;

        r11 := @parameter2: java.lang.Object;

        r10 := @parameter3: java.lang.String;

        $r3 = interfaceinvoke r0.<javax.xml.bind.'annotation'.DomHandler: javax.xml.transform.Source marshal(java.lang.Object,javax.xml.bind.ValidationEventHandler)>(r1, r2);

        $r4 = r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.ContentHandlerAdaptor contentHandlerAdapter>;

        if $r4 != null goto label1;

        $r8 = new com.sun.xml.bind.v2.runtime.ContentHandlerAdaptor;

        specialinvoke $r8.<com.sun.xml.bind.v2.runtime.ContentHandlerAdaptor: void <init>(com.sun.xml.bind.v2.runtime.XMLSerializer)>(r2);

        r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.ContentHandlerAdaptor contentHandlerAdapter> = $r8;

     label1:
        $r5 = virtualinvoke r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: javax.xml.transform.Transformer getIdentityTransformer()>();

        $r6 = new javax.xml.transform.sax.SAXResult;

        $r7 = r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.ContentHandlerAdaptor contentHandlerAdapter>;

        specialinvoke $r6.<javax.xml.transform.sax.SAXResult: void <init>(org.xml.sax.ContentHandler)>($r7);

        virtualinvoke $r5.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r3, $r6);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        virtualinvoke r2.<com.sun.xml.bind.v2.runtime.XMLSerializer: void reportError(java.lang.String,java.lang.Throwable)>(r10, $r9);

     label4:
        return;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
    }

    public javax.xml.transform.Transformer getIdentityTransformer()
    {
        javax.xml.transform.Transformer $r1, $r2, $r4;
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r3;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: javax.xml.transform.Transformer identityTransformer>;

        if $r1 != null goto label1;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.JAXBContextImpl grammar>;

        $z0 = $r3.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: boolean disableSecurityProcessing>;

        $r4 = staticinvoke <com.sun.xml.bind.v2.runtime.JAXBContextImpl: javax.xml.transform.Transformer createTransformer(boolean)>($z0);

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: javax.xml.transform.Transformer identityTransformer> = $r4;

     label1:
        $r2 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: javax.xml.transform.Transformer identityTransformer>;

        return $r2;
    }

    public void setPrefixMapper(com.sun.xml.bind.marshaller.NamespacePrefixMapper)
    {
        com.sun.xml.bind.marshaller.NamespacePrefixMapper r1;
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl $r2;
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r1 := @parameter0: com.sun.xml.bind.marshaller.NamespacePrefixMapper;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: void setPrefixMapper(com.sun.xml.bind.marshaller.NamespacePrefixMapper)>(r1);

        return;
    }

    public void startDocument(com.sun.xml.bind.v2.runtime.output.XmlOutput, boolean, java.lang.String, java.lang.String) throws java.io.IOException, org.xml.sax.SAXException, javax.xml.stream.XMLStreamException
    {
        int[] $r13;
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl $r1, $r2, $r14;
        com.sun.xml.bind.v2.runtime.output.XmlOutput r9;
        java.lang.String r5, r6;
        javax.xml.bind.attachment.AttachmentMarshaller $r4, $r7;
        boolean z0, $z1;
        com.sun.xml.bind.v2.util.CollisionCheckStack $r12;
        java.util.Set $r10, $r11;
        com.sun.xml.bind.v2.runtime.output.MTOMXmlOutput $r8;
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element $r3;
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r9 := @parameter0: com.sun.xml.bind.v2.runtime.output.XmlOutput;

        z0 := @parameter1: boolean;

        r5 := @parameter2: java.lang.String;

        r6 := @parameter3: java.lang.String;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void setThreadAffinity()>();

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void pushCoordinator()>();

        $r1 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: void reset()>();

        $r2 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        $r3 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element getCurrent()>();

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element nse> = $r3;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: javax.xml.bind.attachment.AttachmentMarshaller attachmentMarshaller>;

        if $r4 == null goto label1;

        $r7 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: javax.xml.bind.attachment.AttachmentMarshaller attachmentMarshaller>;

        $z1 = virtualinvoke $r7.<javax.xml.bind.attachment.AttachmentMarshaller: boolean isXOPPackage()>();

        if $z1 == 0 goto label1;

        $r8 = new com.sun.xml.bind.v2.runtime.output.MTOMXmlOutput;

        specialinvoke $r8.<com.sun.xml.bind.v2.runtime.output.MTOMXmlOutput: void <init>(com.sun.xml.bind.v2.runtime.output.XmlOutput)>(r9);

        r9 = $r8;

     label1:
        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.XmlOutput out> = r9;

        $r10 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.util.Set objectsWithId>;

        interfaceinvoke $r10.<java.util.Set: void clear()>();

        $r11 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.util.Set idReferencedObjects>;

        interfaceinvoke $r11.<java.util.Set: void clear()>();

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean textHasAlreadyPrinted> = 0;

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean seenRoot> = 0;

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.lang.String schemaLocation> = r5;

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.lang.String noNsSchemaLocation> = r6;

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean fragment> = z0;

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean inlineBinaryFlag> = 0;

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: javax.activation.MimeType expectedMimeType> = null;

        $r12 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.util.CollisionCheckStack cycleDetectionStack>;

        virtualinvoke $r12.<com.sun.xml.bind.v2.util.CollisionCheckStack: void reset()>();

        $r13 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: int[] knownUri2prefixIndexMap>;

        $r14 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        interfaceinvoke r9.<com.sun.xml.bind.v2.runtime.output.XmlOutput: void startDocument(com.sun.xml.bind.v2.runtime.XMLSerializer,boolean,int[],com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl)>(r0, z0, $r13, $r14);

        return;
    }

    public void endDocument() throws java.io.IOException, org.xml.sax.SAXException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.output.XmlOutput $r1;
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.XmlOutput out>;

        $z0 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean fragment>;

        interfaceinvoke $r1.<com.sun.xml.bind.v2.runtime.output.XmlOutput: void endDocument(boolean)>($z0);

        return;
    }

    public void close()
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.XmlOutput out> = null;

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void clearCurrentProperty()>();

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void popCoordinator()>();

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void resetThreadAffinity()>();

        return;
    }

    public void addInscopeBinding(java.lang.String, java.lang.String)
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl $r3;
        java.lang.String r1, r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: int put(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public java.lang.String getXMIMEContentType()
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        javax.activation.MimeType $r5, $r6;
        java.lang.Object $r3;
        java.lang.String $r4, $r7;
        com.sun.xml.bind.v2.util.CollisionCheckStack $r1;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.JAXBContextImpl grammar>;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.util.CollisionCheckStack cycleDetectionStack>;

        $r3 = virtualinvoke $r1.<com.sun.xml.bind.v2.util.CollisionCheckStack: java.lang.Object peek()>();

        $r4 = virtualinvoke $r2.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.lang.String getXMIMEContentType(java.lang.Object)>($r3);

        if $r4 == null goto label1;

        return $r4;

     label1:
        $r5 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: javax.activation.MimeType expectedMimeType>;

        if $r5 == null goto label2;

        $r6 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: javax.activation.MimeType expectedMimeType>;

        $r7 = virtualinvoke $r6.<javax.activation.MimeType: java.lang.String toString()>();

        return $r7;

     label2:
        return null;
    }

    private void startElement()
    {
        int[] $r21;
        com.sun.xml.bind.v2.runtime.NameList $r5, $r17;
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl $r6, $r9, $r13, $r15, $r16, $r20, $r30, $r36;
        boolean $z0, $z1, $z2, $z3;
        java.util.Set $r4, $r23;
        com.sun.xml.bind.marshaller.NamespacePrefixMapper $r7, $r10;
        javax.xml.bind.'annotation'.XmlNs r29;
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element $r1, $r2;
        java.lang.String[] $r8, $r11, $r25;
        int $i0, $i1, $i2, i3, $i4, i5, i6, i7;
        java.lang.String $r12, $r14, $r19, $r27, $r28, $r31, $r32, r33, r34, r35;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl $r3, $r22;
        java.util.Iterator $r24;
        boolean[] $r18;
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        java.lang.Object $r26;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element nse>;

        $r2 = virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element push()>();

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element nse> = $r2;

        $z0 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean seenRoot>;

        if $z0 != 0 goto label16;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.JAXBContextImpl grammar>;

        $r4 = virtualinvoke $r3.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Set getXmlNsSet()>();

        if $r4 == null goto label06;

        $r22 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.JAXBContextImpl grammar>;

        $r23 = virtualinvoke $r22.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: java.util.Set getXmlNsSet()>();

        $r24 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke $r24.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label06;

        $r26 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();

        r29 = (javax.xml.bind.'annotation'.XmlNs) $r26;

        $r30 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        $r31 = interfaceinvoke r29.<javax.xml.bind.'annotation'.XmlNs: java.lang.String namespaceURI()>();

        $r27 = interfaceinvoke r29.<javax.xml.bind.'annotation'.XmlNs: java.lang.String prefix()>();

        if $r27 != null goto label02;

        $r32 = "";

        goto label03;

     label02:
        $r32 = interfaceinvoke r29.<javax.xml.bind.'annotation'.XmlNs: java.lang.String prefix()>();

     label03:
        $r28 = interfaceinvoke r29.<javax.xml.bind.'annotation'.XmlNs: java.lang.String prefix()>();

        if $r28 == null goto label04;

        $z3 = 1;

        goto label05;

     label04:
        $z3 = 0;

     label05:
        virtualinvoke $r30.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: int declareNsUri(java.lang.String,java.lang.String,boolean)>($r31, $r32, $z3);

        goto label01;

     label06:
        $r5 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.NameList nameList>;

        $r25 = $r5.<com.sun.xml.bind.v2.runtime.NameList: java.lang.String[] namespaceURIs>;

        i3 = 0;

     label07:
        $i4 = lengthof $r25;

        if i3 >= $i4 goto label08;

        $r21 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: int[] knownUri2prefixIndexMap>;

        $r20 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        $r19 = $r25[i3];

        $r17 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.NameList nameList>;

        $r18 = $r17.<com.sun.xml.bind.v2.runtime.NameList: boolean[] nsUriCannotBeDefaulted>;

        $z1 = $r18[i3];

        $i2 = virtualinvoke $r20.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: int declareNsUri(java.lang.String,java.lang.String,boolean)>($r19, null, $z1);

        $r21[i3] = $i2;

        i3 = i3 + 1;

        goto label07;

     label08:
        $r6 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        $r7 = virtualinvoke $r6.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: com.sun.xml.bind.marshaller.NamespacePrefixMapper getPrefixMapper()>();

        $r8 = virtualinvoke $r7.<com.sun.xml.bind.marshaller.NamespacePrefixMapper: java.lang.String[] getPreDeclaredNamespaceUris()>();

        if $r8 == null goto label11;

        i5 = lengthof $r8;

        i6 = 0;

     label09:
        if i6 >= i5 goto label11;

        r33 = $r8[i6];

        if r33 == null goto label10;

        $r16 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        virtualinvoke $r16.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: int declareNsUri(java.lang.String,java.lang.String,boolean)>(r33, null, 0);

     label10:
        i6 = i6 + 1;

        goto label09;

     label11:
        $r9 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        $r10 = virtualinvoke $r9.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: com.sun.xml.bind.marshaller.NamespacePrefixMapper getPrefixMapper()>();

        $r11 = virtualinvoke $r10.<com.sun.xml.bind.marshaller.NamespacePrefixMapper: java.lang.String[] getPreDeclaredNamespaceUris2()>();

        if $r11 == null goto label14;

        i7 = 0;

     label12:
        $i0 = lengthof $r11;

        if i7 >= $i0 goto label14;

        r34 = $r11[i7];

        $i1 = i7 + 1;

        r35 = $r11[$i1];

        if r34 == null goto label13;

        if r35 == null goto label13;

        $r15 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        virtualinvoke $r15.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: int put(java.lang.String,java.lang.String)>(r35, r34);

     label13:
        i7 = i7 + 2;

        goto label12;

     label14:
        $r12 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.lang.String schemaLocation>;

        if $r12 != null goto label15;

        $r14 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.lang.String noNsSchemaLocation>;

        if $r14 == null goto label16;

     label15:
        $r13 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        virtualinvoke $r13.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: int declareNsUri(java.lang.String,java.lang.String,boolean)>("http://www.w3.org/2001/XMLSchema-instance", "xsi", 1);

     label16:
        $r36 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        $r36.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: boolean collectionMode> = 1;

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean textHasAlreadyPrinted> = 0;

        return;
    }

    public javax.activation.MimeType setExpectedMimeType(javax.activation.MimeType)
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        javax.activation.MimeType r1, r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r2 := @parameter0: javax.activation.MimeType;

        r1 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: javax.activation.MimeType expectedMimeType>;

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: javax.activation.MimeType expectedMimeType> = r2;

        return r1;
    }

    public boolean setInlineBinaryFlag(boolean)
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        boolean z0, z1;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        z1 := @parameter0: boolean;

        z0 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean inlineBinaryFlag>;

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean inlineBinaryFlag> = z1;

        return z0;
    }

    public boolean getInlineBinaryFlag()
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        $z0 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean inlineBinaryFlag>;

        return $z0;
    }

    public javax.xml.namespace.QName setSchemaType(javax.xml.namespace.QName)
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        javax.xml.namespace.QName r1, r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r2 := @parameter0: javax.xml.namespace.QName;

        r1 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: javax.xml.namespace.QName schemaType>;

        r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: javax.xml.namespace.QName schemaType> = r2;

        return r1;
    }

    public javax.xml.namespace.QName getSchemaType()
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        javax.xml.namespace.QName $r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: javax.xml.namespace.QName schemaType>;

        return $r1;
    }

    public void setObjectIdentityCycleDetection(boolean)
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        boolean z0;
        com.sun.xml.bind.v2.util.CollisionCheckStack $r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.util.CollisionCheckStack cycleDetectionStack>;

        virtualinvoke $r1.<com.sun.xml.bind.v2.util.CollisionCheckStack: void setUseIdentity(boolean)>(z0);

        return;
    }

    public boolean getObjectIdentityCycleDetection()
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        com.sun.xml.bind.v2.util.CollisionCheckStack $r1;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.util.CollisionCheckStack cycleDetectionStack>;

        $z0 = virtualinvoke $r1.<com.sun.xml.bind.v2.util.CollisionCheckStack: boolean getUseIdentity()>();

        return $z0;
    }

    void reconcileID() throws org.xml.sax.SAXException
    {
        java.lang.Object[] $r10;
        com.sun.xml.bind.v2.runtime.Messages $r11;
        java.lang.String $r8, $r12;
        javax.xml.bind.helpers.NotIdentifiableEventImpl $r9;
        boolean $z0;
        java.util.Iterator $r4;
        java.util.Set $r1, $r2, $r3, $r5, $r6;
        javax.xml.bind.JAXBException $r14;
        javax.xml.bind.helpers.ValidationEventLocatorImpl $r13;
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        java.lang.Object $r7;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.util.Set idReferencedObjects>;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.util.Set objectsWithId>;

        interfaceinvoke $r2.<java.util.Set: boolean removeAll(java.util.Collection)>($r1);

        $r3 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.util.Set idReferencedObjects>;

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r7 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

     label2:
        $r8 = specialinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.lang.String getIdFromObject(java.lang.Object)>($r7);

        $r9 = new javax.xml.bind.helpers.NotIdentifiableEventImpl;

        $r11 = <com.sun.xml.bind.v2.runtime.Messages: com.sun.xml.bind.v2.runtime.Messages DANGLING_IDREF>;

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = $r8;

        $r12 = virtualinvoke $r11.<com.sun.xml.bind.v2.runtime.Messages: java.lang.String format(java.lang.Object[])>($r10);

        $r13 = new javax.xml.bind.helpers.ValidationEventLocatorImpl;

        specialinvoke $r13.<javax.xml.bind.helpers.ValidationEventLocatorImpl: void <init>(java.lang.Object)>($r7);

        specialinvoke $r9.<javax.xml.bind.helpers.NotIdentifiableEventImpl: void <init>(int,java.lang.String,javax.xml.bind.ValidationEventLocator)>(1, $r12, $r13);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void reportError(javax.xml.bind.ValidationEvent)>($r9);

     label3:
        goto label5;

     label4:
        $r14 := @caughtexception;

     label5:
        goto label1;

     label6:
        $r5 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.util.Set idReferencedObjects>;

        interfaceinvoke $r5.<java.util.Set: void clear()>();

        $r6 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.util.Set objectsWithId>;

        interfaceinvoke $r6.<java.util.Set: void clear()>();

        return;

        catch javax.xml.bind.JAXBException from label2 to label3 with label4;
    }

    public boolean handleError(java.lang.Exception)
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        java.lang.Object $r3;
        java.lang.Exception r1;
        com.sun.xml.bind.v2.util.CollisionCheckStack $r2;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r1 := @parameter0: java.lang.Exception;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.util.CollisionCheckStack cycleDetectionStack>;

        $r3 = virtualinvoke $r2.<com.sun.xml.bind.v2.util.CollisionCheckStack: java.lang.Object peek()>();

        $z0 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean handleError(java.lang.Exception,java.lang.Object,java.lang.String)>(r1, $r3, null);

        return $z0;
    }

    public boolean handleError(java.lang.Exception, java.lang.Object, java.lang.String)
    {
        com.sun.xml.bind.util.ValidationEventLocatorExImpl $r4;
        java.lang.Exception r2;
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        java.lang.Object r5;
        java.lang.String $r3, r6;
        javax.xml.bind.helpers.ValidationEventImpl $r1;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r2 := @parameter0: java.lang.Exception;

        r5 := @parameter1: java.lang.Object;

        r6 := @parameter2: java.lang.String;

        $r1 = new javax.xml.bind.helpers.ValidationEventImpl;

        $r3 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>();

        $r4 = new com.sun.xml.bind.util.ValidationEventLocatorExImpl;

        specialinvoke $r4.<com.sun.xml.bind.util.ValidationEventLocatorExImpl: void <init>(java.lang.Object,java.lang.String)>(r5, r6);

        specialinvoke $r1.<javax.xml.bind.helpers.ValidationEventImpl: void <init>(int,java.lang.String,javax.xml.bind.ValidationEventLocator,java.lang.Throwable)>(1, $r3, $r4, r2);

        $z0 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: boolean handleEvent(javax.xml.bind.ValidationEvent)>($r1);

        return $z0;
    }

    public boolean handleEvent(javax.xml.bind.ValidationEvent)
    {
        javax.xml.bind.ValidationEvent r3;
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        com.sun.xml.bind.v2.runtime.MarshallerImpl $r1;
        javax.xml.bind.ValidationEventHandler $r2;
        java.lang.Error $r5;
        javax.xml.bind.JAXBException $r4;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r3 := @parameter0: javax.xml.bind.ValidationEvent;

     label1:
        $r1 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.MarshallerImpl marshaller>;

        $r2 = virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.MarshallerImpl: javax.xml.bind.ValidationEventHandler getEventHandler()>();

        $z0 = interfaceinvoke $r2.<javax.xml.bind.ValidationEventHandler: boolean handleEvent(javax.xml.bind.ValidationEvent)>(r3);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.Error;

        specialinvoke $r5.<java.lang.Error: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch javax.xml.bind.JAXBException from label1 to label2 with label3;
    }

    private void reportMissingObjectError(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.Object[] $r2;
        javax.xml.bind.ValidationEventLocator $r6;
        java.lang.NullPointerException $r7;
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        com.sun.xml.bind.v2.runtime.Messages $r4;
        java.lang.String r3, $r5;
        javax.xml.bind.helpers.ValidationEventImpl $r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r3 := @parameter0: java.lang.String;

        $r1 = new javax.xml.bind.helpers.ValidationEventImpl;

        $r4 = <com.sun.xml.bind.v2.runtime.Messages: com.sun.xml.bind.v2.runtime.Messages MISSING_OBJECT>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r3;

        $r5 = virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.Messages: java.lang.String format(java.lang.Object[])>($r2);

        $r6 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: javax.xml.bind.ValidationEventLocator getCurrentLocation(java.lang.String)>(r3);

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>()>();

        specialinvoke $r1.<javax.xml.bind.helpers.ValidationEventImpl: void <init>(int,java.lang.String,javax.xml.bind.ValidationEventLocator,java.lang.Throwable)>(1, $r5, $r6, $r7);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void reportError(javax.xml.bind.ValidationEvent)>($r1);

        return;
    }

    public void errorMissingId(java.lang.Object) throws org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        java.lang.Object[] $r2;
        java.lang.Object r3;
        com.sun.xml.bind.v2.runtime.Messages $r4;
        java.lang.String $r5;
        javax.xml.bind.helpers.ValidationEventImpl $r1;
        javax.xml.bind.helpers.ValidationEventLocatorImpl $r6;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r3 := @parameter0: java.lang.Object;

        $r1 = new javax.xml.bind.helpers.ValidationEventImpl;

        $r4 = <com.sun.xml.bind.v2.runtime.Messages: com.sun.xml.bind.v2.runtime.Messages MISSING_ID>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r3;

        $r5 = virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.Messages: java.lang.String format(java.lang.Object[])>($r2);

        $r6 = new javax.xml.bind.helpers.ValidationEventLocatorImpl;

        specialinvoke $r6.<javax.xml.bind.helpers.ValidationEventLocatorImpl: void <init>(java.lang.Object)>(r3);

        specialinvoke $r1.<javax.xml.bind.helpers.ValidationEventImpl: void <init>(int,java.lang.String,javax.xml.bind.ValidationEventLocator)>(1, $r5, $r6);

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: void reportError(javax.xml.bind.ValidationEvent)>($r1);

        return;
    }

    public javax.xml.bind.ValidationEventLocator getCurrentLocation(java.lang.String)
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r1;
        com.sun.xml.bind.util.ValidationEventLocatorExImpl $r0;
        java.lang.Object $r3;
        java.lang.String r4;
        com.sun.xml.bind.v2.util.CollisionCheckStack $r2;

        r1 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r4 := @parameter0: java.lang.String;

        $r0 = new com.sun.xml.bind.util.ValidationEventLocatorExImpl;

        $r2 = r1.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.util.CollisionCheckStack cycleDetectionStack>;

        $r3 = virtualinvoke $r2.<com.sun.xml.bind.v2.util.CollisionCheckStack: java.lang.Object peek()>();

        specialinvoke $r0.<com.sun.xml.bind.util.ValidationEventLocatorExImpl: void <init>(java.lang.Object,java.lang.String)>($r3, r4);

        return $r0;
    }

    protected javax.xml.bind.ValidationEventLocator getLocation()
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        javax.xml.bind.ValidationEventLocator $r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        $r1 = virtualinvoke r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: javax.xml.bind.ValidationEventLocator getCurrentLocation(java.lang.String)>(null);

        return $r1;
    }

    public com.sun.xml.bind.v2.runtime.property.Property getCurrentProperty()
    {
        java.lang.ThreadLocal $r1;
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        com.sun.xml.bind.v2.runtime.property.Property $r3;
        java.lang.Object $r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.lang.ThreadLocal currentProperty>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r3 = (com.sun.xml.bind.v2.runtime.property.Property) $r2;

        return $r3;
    }

    public void clearCurrentProperty()
    {
        java.lang.ThreadLocal $r1, $r2;
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.XMLSerializer;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.lang.ThreadLocal currentProperty>;

        if $r1 == null goto label1;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: java.lang.ThreadLocal currentProperty>;

        virtualinvoke $r2.<java.lang.ThreadLocal: void remove()>();

     label1:
        return;
    }

    public static com.sun.xml.bind.v2.runtime.XMLSerializer getInstance()
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer $r1;
        com.sun.xml.bind.v2.runtime.Coordinator $r0;

        $r0 = staticinvoke <com.sun.xml.bind.v2.runtime.Coordinator: com.sun.xml.bind.v2.runtime.Coordinator _getInstance()>();

        $r1 = (com.sun.xml.bind.v2.runtime.XMLSerializer) $r0;

        return $r1;
    }

    static com.sun.xml.bind.v2.runtime.MarshallerImpl access$000(com.sun.xml.bind.v2.runtime.XMLSerializer)
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r0;
        com.sun.xml.bind.v2.runtime.MarshallerImpl $r1;

        r0 := @parameter0: com.sun.xml.bind.v2.runtime.XMLSerializer;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.XMLSerializer: com.sun.xml.bind.v2.runtime.MarshallerImpl marshaller>;

        return $r1;
    }
}
