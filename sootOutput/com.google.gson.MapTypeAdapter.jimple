final class com.google.gson.MapTypeAdapter extends com.google.gson.BaseMapTypeAdapter
{

    void <init>()
    {
        com.google.gson.MapTypeAdapter r0;

        r0 := @this: com.google.gson.MapTypeAdapter;

        specialinvoke r0.<com.google.gson.BaseMapTypeAdapter: void <init>()>();

        return;
    }

    public com.google.gson.JsonElement serialize(java.util.Map, java.lang.reflect.Type, com.google.gson.JsonSerializationContext)
    {
        com.google.gson.JsonObject $r0;
        com.google.gson.JsonElement r13;
        java.util.Map r2;
        com.google.gson.JsonSerializationContext r8;
        com.google.gson.MapTypeAdapter r11;
        java.lang.String $r16;
        boolean $z0, $z1;
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.lang.reflect.Type r1, r12, $r14;
        java.lang.reflect.Type[] $r10;
        java.lang.Object $r5, $r7, $r15;
        java.lang.Class $r9;

        r11 := @this: com.google.gson.MapTypeAdapter;

        r2 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.reflect.Type;

        r8 := @parameter2: com.google.gson.JsonSerializationContext;

        $r0 = new com.google.gson.JsonObject;

        specialinvoke $r0.<com.google.gson.JsonObject: void <init>()>();

        r12 = null;

        $z0 = r1 instanceof java.lang.reflect.ParameterizedType;

        if $z0 == 0 goto label1;

        $r9 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.Class getRawType(java.lang.reflect.Type)>(r1);

        $r10 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class)>(r1, $r9);

        r12 = $r10[1];

     label1:
        $r3 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r7 != null goto label3;

        r13 = staticinvoke <com.google.gson.JsonNull: com.google.gson.JsonNull createJsonNull()>();

        goto label6;

     label3:
        if r12 != null goto label4;

        $r14 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        goto label5;

     label4:
        $r14 = r12;

     label5:
        r13 = staticinvoke <com.google.gson.MapTypeAdapter: com.google.gson.JsonElement serialize(com.google.gson.JsonSerializationContext,java.lang.Object,java.lang.reflect.Type)>(r8, $r7, $r14);

     label6:
        $r15 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r15);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>($r16, r13);

        goto label2;

     label7:
        return $r0;
    }

    public java.util.Map deserialize(com.google.gson.JsonElement, java.lang.reflect.Type, com.google.gson.JsonDeserializationContext) throws com.google.gson.JsonParseException
    {
        com.google.gson.JsonObject $r6;
        com.google.gson.JsonDeserializationContext r1;
        com.google.gson.JsonElement r5, $r18;
        java.util.Map $r2;
        com.google.gson.JsonPrimitive $r11;
        java.lang.String $r13;
        com.google.gson.MapTypeAdapter r20;
        boolean $z0;
        java.util.Map$Entry r10;
        java.util.Iterator $r8;
        java.util.Set $r7;
        java.lang.reflect.Type r0, $r14, $r17;
        java.lang.reflect.Type[] $r4;
        java.lang.Class $r3;
        java.lang.Object $r9, $r12, $r15, $r16, $r19;

        r20 := @this: com.google.gson.MapTypeAdapter;

        r5 := @parameter0: com.google.gson.JsonElement;

        r0 := @parameter1: java.lang.reflect.Type;

        r1 := @parameter2: com.google.gson.JsonDeserializationContext;

        $r2 = staticinvoke <com.google.gson.MapTypeAdapter: java.util.Map constructMapType(java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>(r0, r1);

        $r3 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.Class getRawType(java.lang.reflect.Type)>(r0);

        $r4 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class)>(r0, $r3);

        $r6 = virtualinvoke r5.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>();

        $r7 = virtualinvoke $r6.<com.google.gson.JsonObject: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.Map$Entry) $r9;

        $r11 = new com.google.gson.JsonPrimitive;

        $r12 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (java.lang.String) $r12;

        specialinvoke $r11.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>($r13);

        $r14 = $r4[0];

        $r15 = interfaceinvoke r1.<com.google.gson.JsonDeserializationContext: java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type)>($r11, $r14);

        $r16 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18 = (com.google.gson.JsonElement) $r16;

        $r17 = $r4[1];

        $r19 = interfaceinvoke r1.<com.google.gson.JsonDeserializationContext: java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type)>($r18, $r17);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r19);

        goto label1;

     label2:
        return $r2;
    }

    public java.lang.String toString()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        com.google.gson.MapTypeAdapter r2;

        r2 := @this: com.google.gson.MapTypeAdapter;

        $r0 = class "Lcom/google/gson/MapTypeAdapter;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        return $r1;
    }

    public volatile com.google.gson.JsonElement serialize(java.lang.Object, java.lang.reflect.Type, com.google.gson.JsonSerializationContext)
    {
        com.google.gson.JsonElement $r5;
        java.lang.reflect.Type r2;
        java.util.Map $r4;
        com.google.gson.JsonSerializationContext r3;
        java.lang.Object r1;
        com.google.gson.MapTypeAdapter r0;

        r0 := @this: com.google.gson.MapTypeAdapter;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.reflect.Type;

        r3 := @parameter2: com.google.gson.JsonSerializationContext;

        $r4 = (java.util.Map) r1;

        $r5 = virtualinvoke r0.<com.google.gson.MapTypeAdapter: com.google.gson.JsonElement serialize(java.util.Map,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)>($r4, r2, r3);

        return $r5;
    }

    public volatile java.lang.Object deserialize(com.google.gson.JsonElement, java.lang.reflect.Type, com.google.gson.JsonDeserializationContext) throws com.google.gson.JsonParseException
    {
        com.google.gson.JsonElement r1;
        java.lang.reflect.Type r2;
        java.util.Map $r4;
        com.google.gson.MapTypeAdapter r0;
        com.google.gson.JsonDeserializationContext r3;

        r0 := @this: com.google.gson.MapTypeAdapter;

        r1 := @parameter0: com.google.gson.JsonElement;

        r2 := @parameter1: java.lang.reflect.Type;

        r3 := @parameter2: com.google.gson.JsonDeserializationContext;

        $r4 = virtualinvoke r0.<com.google.gson.MapTypeAdapter: java.util.Map deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>(r1, r2, r3);

        return $r4;
    }
}
