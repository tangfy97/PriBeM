public abstract class org.apache.poi.ss.formula.ptg.RefPtgBase extends org.apache.poi.ss.formula.ptg.OperandPtg
{
    private int field_1_row;
    private int field_2_col;
    private static final org.apache.poi.util.BitField rowRelative;
    private static final org.apache.poi.util.BitField colRelative;
    private static final org.apache.poi.util.BitField column;

    protected void <init>()
    {
        org.apache.poi.ss.formula.ptg.RefPtgBase r0;

        r0 := @this: org.apache.poi.ss.formula.ptg.RefPtgBase;

        specialinvoke r0.<org.apache.poi.ss.formula.ptg.OperandPtg: void <init>()>();

        return;
    }

    protected void <init>(org.apache.poi.ss.util.CellReference)
    {
        org.apache.poi.ss.util.CellReference r1;
        short $s1;
        org.apache.poi.ss.formula.ptg.RefPtgBase r0;
        int $i0, $i2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.poi.ss.formula.ptg.RefPtgBase;

        r1 := @parameter0: org.apache.poi.ss.util.CellReference;

        specialinvoke r0.<org.apache.poi.ss.formula.ptg.OperandPtg: void <init>()>();

        $i0 = virtualinvoke r1.<org.apache.poi.ss.util.CellReference: int getRow()>();

        virtualinvoke r0.<org.apache.poi.ss.formula.ptg.RefPtgBase: void setRow(int)>($i0);

        $s1 = virtualinvoke r1.<org.apache.poi.ss.util.CellReference: short getCol()>();

        $i2 = (int) $s1;

        virtualinvoke r0.<org.apache.poi.ss.formula.ptg.RefPtgBase: void setColumn(int)>($i2);

        $z0 = virtualinvoke r1.<org.apache.poi.ss.util.CellReference: boolean isColAbsolute()>();

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        virtualinvoke r0.<org.apache.poi.ss.formula.ptg.RefPtgBase: void setColRelative(boolean)>($z2);

        $z1 = virtualinvoke r1.<org.apache.poi.ss.util.CellReference: boolean isRowAbsolute()>();

        if $z1 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        virtualinvoke r0.<org.apache.poi.ss.formula.ptg.RefPtgBase: void setRowRelative(boolean)>($z3);

        return;
    }

    protected final void readCoordinates(org.apache.poi.util.LittleEndianInput)
    {
        org.apache.poi.ss.formula.ptg.RefPtgBase r0;
        org.apache.poi.util.LittleEndianInput r1;
        int $i0, $i1;

        r0 := @this: org.apache.poi.ss.formula.ptg.RefPtgBase;

        r1 := @parameter0: org.apache.poi.util.LittleEndianInput;

        $i0 = interfaceinvoke r1.<org.apache.poi.util.LittleEndianInput: int readUShort()>();

        r0.<org.apache.poi.ss.formula.ptg.RefPtgBase: int field_1_row> = $i0;

        $i1 = interfaceinvoke r1.<org.apache.poi.util.LittleEndianInput: int readUShort()>();

        r0.<org.apache.poi.ss.formula.ptg.RefPtgBase: int field_2_col> = $i1;

        return;
    }

    protected final void writeCoordinates(org.apache.poi.util.LittleEndianOutput)
    {
        org.apache.poi.util.LittleEndianOutput r0;
        org.apache.poi.ss.formula.ptg.RefPtgBase r1;
        int $i0, $i1;

        r1 := @this: org.apache.poi.ss.formula.ptg.RefPtgBase;

        r0 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        $i0 = r1.<org.apache.poi.ss.formula.ptg.RefPtgBase: int field_1_row>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i0);

        $i1 = r1.<org.apache.poi.ss.formula.ptg.RefPtgBase: int field_2_col>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i1);

        return;
    }

    public final void setRow(int)
    {
        int i0;
        org.apache.poi.ss.formula.ptg.RefPtgBase r0;

        r0 := @this: org.apache.poi.ss.formula.ptg.RefPtgBase;

        i0 := @parameter0: int;

        r0.<org.apache.poi.ss.formula.ptg.RefPtgBase: int field_1_row> = i0;

        return;
    }

    public final int getRow()
    {
        int $i0;
        org.apache.poi.ss.formula.ptg.RefPtgBase r0;

        r0 := @this: org.apache.poi.ss.formula.ptg.RefPtgBase;

        $i0 = r0.<org.apache.poi.ss.formula.ptg.RefPtgBase: int field_1_row>;

        return $i0;
    }

    public final boolean isRowRelative()
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.ss.formula.ptg.RefPtgBase r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.poi.ss.formula.ptg.RefPtgBase;

        $r1 = <org.apache.poi.ss.formula.ptg.RefPtgBase: org.apache.poi.util.BitField rowRelative>;

        $i0 = r0.<org.apache.poi.ss.formula.ptg.RefPtgBase: int field_2_col>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public final void setRowRelative(boolean)
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.ss.formula.ptg.RefPtgBase r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: org.apache.poi.ss.formula.ptg.RefPtgBase;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.ss.formula.ptg.RefPtgBase: org.apache.poi.util.BitField rowRelative>;

        $i0 = r0.<org.apache.poi.ss.formula.ptg.RefPtgBase: int field_2_col>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.ss.formula.ptg.RefPtgBase: int field_2_col> = $i1;

        return;
    }

    public final boolean isColRelative()
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.ss.formula.ptg.RefPtgBase r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.poi.ss.formula.ptg.RefPtgBase;

        $r1 = <org.apache.poi.ss.formula.ptg.RefPtgBase: org.apache.poi.util.BitField colRelative>;

        $i0 = r0.<org.apache.poi.ss.formula.ptg.RefPtgBase: int field_2_col>;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i0);

        return $z0;
    }

    public final void setColRelative(boolean)
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.ss.formula.ptg.RefPtgBase r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this: org.apache.poi.ss.formula.ptg.RefPtgBase;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.ss.formula.ptg.RefPtgBase: org.apache.poi.util.BitField colRelative>;

        $i0 = r0.<org.apache.poi.ss.formula.ptg.RefPtgBase: int field_2_col>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setBoolean(int,boolean)>($i0, z0);

        r0.<org.apache.poi.ss.formula.ptg.RefPtgBase: int field_2_col> = $i1;

        return;
    }

    public final void setColumn(int)
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.ss.formula.ptg.RefPtgBase r0;
        int i0, $i1, $i2;

        r0 := @this: org.apache.poi.ss.formula.ptg.RefPtgBase;

        i0 := @parameter0: int;

        $r1 = <org.apache.poi.ss.formula.ptg.RefPtgBase: org.apache.poi.util.BitField column>;

        $i1 = r0.<org.apache.poi.ss.formula.ptg.RefPtgBase: int field_2_col>;

        $i2 = virtualinvoke $r1.<org.apache.poi.util.BitField: int setValue(int,int)>($i1, i0);

        r0.<org.apache.poi.ss.formula.ptg.RefPtgBase: int field_2_col> = $i2;

        return;
    }

    public final int getColumn()
    {
        org.apache.poi.util.BitField $r1;
        org.apache.poi.ss.formula.ptg.RefPtgBase r0;
        int $i0, $i1;

        r0 := @this: org.apache.poi.ss.formula.ptg.RefPtgBase;

        $r1 = <org.apache.poi.ss.formula.ptg.RefPtgBase: org.apache.poi.util.BitField column>;

        $i0 = r0.<org.apache.poi.ss.formula.ptg.RefPtgBase: int field_2_col>;

        $i1 = virtualinvoke $r1.<org.apache.poi.util.BitField: int getValue(int)>($i0);

        return $i1;
    }

    protected final java.lang.String formatReferenceAsString()
    {
        org.apache.poi.ss.util.CellReference $r1;
        org.apache.poi.ss.formula.ptg.RefPtgBase r0;
        int $i0, $i1;
        java.lang.String $r2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.poi.ss.formula.ptg.RefPtgBase;

        $r1 = new org.apache.poi.ss.util.CellReference;

        $i0 = virtualinvoke r0.<org.apache.poi.ss.formula.ptg.RefPtgBase: int getRow()>();

        $i1 = virtualinvoke r0.<org.apache.poi.ss.formula.ptg.RefPtgBase: int getColumn()>();

        $z0 = virtualinvoke r0.<org.apache.poi.ss.formula.ptg.RefPtgBase: boolean isRowRelative()>();

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        $z1 = virtualinvoke r0.<org.apache.poi.ss.formula.ptg.RefPtgBase: boolean isColRelative()>();

        if $z1 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        specialinvoke $r1.<org.apache.poi.ss.util.CellReference: void <init>(int,int,boolean,boolean)>($i0, $i1, $z2, $z3);

        $r2 = virtualinvoke $r1.<org.apache.poi.ss.util.CellReference: java.lang.String formatAsString()>();

        return $r2;
    }

    public final byte getDefaultOperandClass()
    {
        org.apache.poi.ss.formula.ptg.RefPtgBase r0;

        r0 := @this: org.apache.poi.ss.formula.ptg.RefPtgBase;

        return 0;
    }

    static void <clinit>()
    {
        org.apache.poi.util.BitField $r0, $r1, $r2;
        int $i1;

        $i1 = (int) 32768;

        $r0 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>($i1);

        <org.apache.poi.ss.formula.ptg.RefPtgBase: org.apache.poi.util.BitField rowRelative> = $r0;

        $r1 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(16384);

        <org.apache.poi.ss.formula.ptg.RefPtgBase: org.apache.poi.util.BitField colRelative> = $r1;

        $r2 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(16383);

        <org.apache.poi.ss.formula.ptg.RefPtgBase: org.apache.poi.util.BitField column> = $r2;

        return;
    }
}
