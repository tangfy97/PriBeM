public final enum class org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult extends java.lang.Enum
{
    public static final enum org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult ILL_FORMED;
    public static final enum org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult INVALID_DOCUMENT;
    public static final enum org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult INVALID_SCHEMA;
    public static final enum org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult VALID;
    private static final org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] $VALUES;

    public static org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] values()
    {
        java.lang.Object $r1;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] $r0, $r2;

        $r0 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[]) $r1;

        return $r2;
    }

    public static org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult valueOf(java.lang.String)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r2;
        java.lang.String r0;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/waveprotocol/wave/model/document/operation/automaton/DocOpAutomaton$ValidationResult;", r0);

        $r2 = (org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public boolean isIllFormed()
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult r0, $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult;

        $r1 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult ILL_FORMED>;

        if r0 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isInvalidDocument()
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult r0, $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult;

        $r1 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult INVALID_DOCUMENT>;

        if r0 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isInvalidSchema()
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult r0, $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult;

        $r1 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult INVALID_SCHEMA>;

        if r0 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isValid()
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult r0, $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult;

        $r1 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult VALID>;

        if r0 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult mergeWith(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] $r1;
        int $i0, $i1, $i2;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult r0, r2, $r3;

        r2 := @this: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult;

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "Null ValidationResult");

        $r1 = staticinvoke <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] values()>();

        $i0 = virtualinvoke r2.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: int ordinal()>();

        $i1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: int ordinal()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $r3 = $r1[$i2];

        return $r3;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] $r4;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;

        $r0 = new org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult;

        specialinvoke $r0.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: void <init>(java.lang.String,int)>("ILL_FORMED", 0);

        <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult ILL_FORMED> = $r0;

        $r1 = new org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult;

        specialinvoke $r1.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: void <init>(java.lang.String,int)>("INVALID_DOCUMENT", 1);

        <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult INVALID_DOCUMENT> = $r1;

        $r2 = new org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult;

        specialinvoke $r2.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: void <init>(java.lang.String,int)>("INVALID_SCHEMA", 2);

        <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult INVALID_SCHEMA> = $r2;

        $r3 = new org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult;

        specialinvoke $r3.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: void <init>(java.lang.String,int)>("VALID", 3);

        <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult VALID> = $r3;

        $r4 = newarray (org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult)[4];

        $r5 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult ILL_FORMED>;

        $r4[0] = $r5;

        $r6 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult INVALID_DOCUMENT>;

        $r4[1] = $r6;

        $r7 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult INVALID_SCHEMA>;

        $r4[2] = $r7;

        $r8 = <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult VALID>;

        $r4[3] = $r8;

        <org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] $VALUES> = $r4;

        return;
    }
}
