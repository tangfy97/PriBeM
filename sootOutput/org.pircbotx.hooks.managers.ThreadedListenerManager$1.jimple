final class org.pircbotx.hooks.managers.ThreadedListenerManager$1 extends java.lang.Object implements java.lang.Runnable
{
    final org.pircbotx.hooks.Listener val$listener;
    final org.pircbotx.hooks.Event val$event;

    void <init>(org.pircbotx.hooks.Listener, org.pircbotx.hooks.Event)
    {
        org.pircbotx.hooks.Listener r1;
        org.pircbotx.hooks.managers.ThreadedListenerManager$1 r0;
        org.pircbotx.hooks.Event r2;

        r0 := @this: org.pircbotx.hooks.managers.ThreadedListenerManager$1;

        r1 := @parameter0: org.pircbotx.hooks.Listener;

        r2 := @parameter1: org.pircbotx.hooks.Event;

        r0.<org.pircbotx.hooks.managers.ThreadedListenerManager$1: org.pircbotx.hooks.Listener val$listener> = r1;

        r0.<org.pircbotx.hooks.managers.ThreadedListenerManager$1: org.pircbotx.hooks.Event val$event> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        org.pircbotx.hooks.Listener $r2;
        java.lang.Throwable $r3;
        org.pircbotx.hooks.managers.ThreadedListenerManager$1 r0;
        org.pircbotx.PircBotX $r5;
        org.pircbotx.hooks.Event $r1, $r4;

        r0 := @this: org.pircbotx.hooks.managers.ThreadedListenerManager$1;

     label1:
        $r2 = r0.<org.pircbotx.hooks.managers.ThreadedListenerManager$1: org.pircbotx.hooks.Listener val$listener>;

        $r1 = r0.<org.pircbotx.hooks.managers.ThreadedListenerManager$1: org.pircbotx.hooks.Event val$event>;

        interfaceinvoke $r2.<org.pircbotx.hooks.Listener: void onEvent(org.pircbotx.hooks.Event)>($r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<org.pircbotx.hooks.managers.ThreadedListenerManager$1: org.pircbotx.hooks.Event val$event>;

        $r5 = virtualinvoke $r4.<org.pircbotx.hooks.Event: org.pircbotx.PircBotX getBot()>();

        virtualinvoke $r5.<org.pircbotx.PircBotX: void logException(java.lang.Throwable)>($r3);

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
