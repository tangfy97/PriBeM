public final class com.google.gwt.user.server.rpc.RPC extends java.lang.Object
{
    private static final java.util.Map PRIMITIVE_WRAPPER_CLASS_TO_PRIMITIVE_CLASS;
    private static java.util.Map serviceToImplementedInterfacesMap;
    private static final java.util.HashMap TYPE_NAMES;
    static final boolean $assertionsDisabled;

    public static com.google.gwt.user.server.rpc.RPCRequest decodeRequest(java.lang.String)
    {
        java.lang.String r0;
        com.google.gwt.user.server.rpc.RPCRequest $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.google.gwt.user.server.rpc.RPC: com.google.gwt.user.server.rpc.RPCRequest decodeRequest(java.lang.String,java.lang.Class)>(r0, null);

        return $r1;
    }

    public static com.google.gwt.user.server.rpc.RPCRequest decodeRequest(java.lang.String, java.lang.Class)
    {
        java.lang.Class r1;
        java.lang.String r0;
        com.google.gwt.user.server.rpc.RPCRequest $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        $r2 = staticinvoke <com.google.gwt.user.server.rpc.RPC: com.google.gwt.user.server.rpc.RPCRequest decodeRequest(java.lang.String,java.lang.Class,com.google.gwt.user.server.rpc.SerializationPolicyProvider)>(r0, r1, null);

        return $r2;
    }

    public static com.google.gwt.user.server.rpc.RPCRequest decodeRequest(java.lang.String, java.lang.Class, com.google.gwt.user.server.rpc.SerializationPolicyProvider)
    {
        java.lang.Thread $r1;
        java.lang.StringBuilder $r22, $r23, $r25, $r26, $r29, $r30, $r31, $r32, $r34, $r35, $r47, $r48, $r49, $r50, $r51, $r52, $r56, $r57, $r58, $r59;
        java.lang.ClassLoader $r2;
        com.google.gwt.user.server.rpc.impl.ServerSerializationStreamReader $r3;
        java.lang.Object[] r61;
        java.lang.String r0, $r5, $r6, $r11, $r17, $r18, $r24, $r27, $r33, $r36, $r41, $r44, $r53, $r60;
        com.google.gwt.user.server.rpc.SerializationPolicy $r8;
        java.lang.Class[] r12;
        java.lang.ClassNotFoundException $r45, $r54;
        java.lang.NoSuchMethodException $r42;
        com.google.gwt.user.server.rpc.SerializationPolicyProvider r4;
        java.lang.NullPointerException $r38;
        com.google.gwt.user.server.rpc.RPCRequest $r14;
        java.lang.reflect.Method $r13;
        boolean $z0, $z1;
        com.google.gwt.user.client.rpc.SerializationException $r39;
        com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException $r20, $r21, $r28, $r40, $r43, $r46, $r55;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        java.lang.IllegalArgumentException $r37;
        java.lang.Class r7, $r9, $r10, $r15, $r19;
        java.lang.Object $r16;

        r0 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.Class;

        r4 := @parameter2: com.google.gwt.user.server.rpc.SerializationPolicyProvider;

        if r0 != null goto label01;

        $r38 = new java.lang.NullPointerException;

        specialinvoke $r38.<java.lang.NullPointerException: void <init>(java.lang.String)>("encodedRequest cannot be null");

        throw $r38;

     label01:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

        $r37 = new java.lang.IllegalArgumentException;

        specialinvoke $r37.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("encodedRequest cannot be empty");

        throw $r37;

     label02:
        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r2 = virtualinvoke $r1.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

     label03:
        $r3 = new com.google.gwt.user.server.rpc.impl.ServerSerializationStreamReader;

        specialinvoke $r3.<com.google.gwt.user.server.rpc.impl.ServerSerializationStreamReader: void <init>(java.lang.ClassLoader,com.google.gwt.user.server.rpc.SerializationPolicyProvider)>($r2, r4);

        virtualinvoke $r3.<com.google.gwt.user.server.rpc.impl.ServerSerializationStreamReader: void prepareToRead(java.lang.String)>(r0);

        $r5 = virtualinvoke $r3.<com.google.gwt.user.server.rpc.impl.ServerSerializationStreamReader: java.lang.String readString()>();

        $r6 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String maybeDeobfuscate(com.google.gwt.user.server.rpc.impl.ServerSerializationStreamReader,java.lang.String)>($r3, $r5);

        if r7 == null goto label04;

        $z1 = staticinvoke <com.google.gwt.user.server.rpc.RPC: boolean implementsInterface(java.lang.Class,java.lang.String)>(r7, $r6);

        if $z1 != 0 goto label04;

        $r28 = new com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Blocked attempt to access interface \'");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', which is not implemented by \'");

        $r33 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String printTypeName(java.lang.Class)>(r7);

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'; this is either misconfiguration or a hack attempt");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException: void <init>(java.lang.String)>($r36);

        throw $r28;

     label04:
        $r8 = virtualinvoke $r3.<com.google.gwt.user.server.rpc.impl.ServerSerializationStreamReader: com.google.gwt.user.server.rpc.SerializationPolicy getSerializationPolicy()>();

     label05:
        $r9 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.Class getClassFromSerializedName(java.lang.String,java.lang.ClassLoader)>($r6, $r2);

        $r10 = class "Lcom/google/gwt/user/client/rpc/RemoteService;";

        $z0 = virtualinvoke $r10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r9);

        if $z0 != 0 goto label06;

        $r21 = new com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Blocked attempt to access interface \'");

        $r24 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String printTypeName(java.lang.Class)>($r9);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', which doesn\'t extend RemoteService; this is either misconfiguration or a hack attempt");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException: void <init>(java.lang.String)>($r27);

        throw $r21;

     label06:
        goto label08;

     label07:
        $r54 := @caughtexception;

        $r55 = new com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not locate requested interface \'");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' in default classloader");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r55.<com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException: void <init>(java.lang.String,java.lang.Throwable)>($r60, $r54);

        throw $r55;

     label08:
        $r11 = virtualinvoke $r3.<com.google.gwt.user.server.rpc.impl.ServerSerializationStreamReader: java.lang.String readString()>();

        $i1 = virtualinvoke $r3.<com.google.gwt.user.server.rpc.impl.ServerSerializationStreamReader: int readInt()>();

        $i2 = virtualinvoke $r3.<com.google.gwt.user.server.rpc.impl.ServerSerializationStreamReader: int getNumberOfTokens()>();

        if $i1 <= $i2 goto label09;

        $r20 = new com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException;

        specialinvoke $r20.<com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException: void <init>(java.lang.String)>("Invalid number of parameters");

        throw $r20;

     label09:
        r12 = newarray (java.lang.Class)[$i1];

        i7 = 0;

     label10:
        $i3 = lengthof r12;

        if i7 >= $i3 goto label15;

        $r17 = virtualinvoke $r3.<com.google.gwt.user.server.rpc.impl.ServerSerializationStreamReader: java.lang.String readString()>();

        $r18 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String maybeDeobfuscate(com.google.gwt.user.server.rpc.impl.ServerSerializationStreamReader,java.lang.String)>($r3, $r17);

     label11:
        $r19 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.Class getClassFromSerializedName(java.lang.String,java.lang.ClassLoader)>($r18, $r2);

        r12[i7] = $r19;

     label12:
        goto label14;

     label13:
        $r45 := @caughtexception;

        $r46 = new com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parameter ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of is of an unknown type \'");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException: void <init>(java.lang.String,java.lang.Throwable)>($r53, $r45);

        throw $r46;

     label14:
        i7 = i7 + 1;

        goto label10;

     label15:
        $r13 = virtualinvoke $r9.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r11, r12);

        $i4 = lengthof r12;

        r61 = newarray (java.lang.Object)[$i4];

        i8 = 0;

     label16:
        $i5 = lengthof r61;

        if i8 >= $i5 goto label17;

        $r15 = r12[i8];

        $r16 = virtualinvoke $r3.<com.google.gwt.user.server.rpc.impl.ServerSerializationStreamReader: java.lang.Object deserializeValue(java.lang.Class)>($r15);

        r61[i8] = $r16;

        i8 = i8 + 1;

        goto label16;

     label17:
        $r14 = new com.google.gwt.user.server.rpc.RPCRequest;

        $i6 = virtualinvoke $r3.<com.google.gwt.user.server.rpc.impl.ServerSerializationStreamReader: int getFlags()>();

        specialinvoke $r14.<com.google.gwt.user.server.rpc.RPCRequest: void <init>(java.lang.reflect.Method,java.lang.Object[],com.google.gwt.user.server.rpc.SerializationPolicy,int)>($r13, r61, $r8, $i6);

     label18:
        return $r14;

     label19:
        $r42 := @caughtexception;

        $r43 = new com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException;

        $r44 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String formatMethodNotFoundErrorMessage(java.lang.Class,java.lang.String,java.lang.Class[])>($r9, $r11, r12);

        specialinvoke $r43.<com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException: void <init>(java.lang.String)>($r44);

        throw $r43;

     label20:
        $r39 := @caughtexception;

        $r40 = new com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException;

        $r41 = virtualinvoke $r39.<com.google.gwt.user.client.rpc.SerializationException: java.lang.String getMessage()>();

        specialinvoke $r40.<com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException: void <init>(java.lang.String,java.lang.Throwable)>($r41, $r39);

        throw $r40;

        catch java.lang.ClassNotFoundException from label05 to label06 with label07;
        catch java.lang.ClassNotFoundException from label11 to label12 with label13;
        catch java.lang.NoSuchMethodException from label15 to label18 with label19;
        catch com.google.gwt.user.client.rpc.SerializationException from label03 to label18 with label20;
        catch com.google.gwt.user.client.rpc.SerializationException from label19 to label20 with label20;
    }

    public static java.lang.String encodeResponseForFailure(java.lang.reflect.Method, java.lang.Throwable) throws com.google.gwt.user.client.rpc.SerializationException
    {
        java.lang.Throwable r1;
        java.lang.String $r3;
        java.lang.reflect.Method r0;
        com.google.gwt.user.server.rpc.SerializationPolicy $r2;

        r0 := @parameter0: java.lang.reflect.Method;

        r1 := @parameter1: java.lang.Throwable;

        $r2 = staticinvoke <com.google.gwt.user.server.rpc.RPC: com.google.gwt.user.server.rpc.SerializationPolicy getDefaultSerializationPolicy()>();

        $r3 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String encodeResponseForFailure(java.lang.reflect.Method,java.lang.Throwable,com.google.gwt.user.server.rpc.SerializationPolicy)>(r0, r1, $r2);

        return $r3;
    }

    public static java.lang.String encodeResponseForFailure(java.lang.reflect.Method, java.lang.Throwable, com.google.gwt.user.server.rpc.SerializationPolicy) throws com.google.gwt.user.client.rpc.SerializationException
    {
        java.lang.Throwable r1;
        java.lang.String $r3;
        java.lang.reflect.Method r0;
        com.google.gwt.user.server.rpc.SerializationPolicy r2;

        r0 := @parameter0: java.lang.reflect.Method;

        r1 := @parameter1: java.lang.Throwable;

        r2 := @parameter2: com.google.gwt.user.server.rpc.SerializationPolicy;

        $r3 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String encodeResponseForFailure(java.lang.reflect.Method,java.lang.Throwable,com.google.gwt.user.server.rpc.SerializationPolicy,int)>(r0, r1, r2, 0);

        return $r3;
    }

    public static java.lang.String encodeResponseForFailure(java.lang.reflect.Method, java.lang.Throwable, com.google.gwt.user.server.rpc.SerializationPolicy, int) throws com.google.gwt.user.client.rpc.SerializationException
    {
        java.lang.Throwable r0;
        java.lang.NullPointerException $r14, $r15;
        int i0;
        java.lang.String $r4, $r8, $r11, $r13;
        com.google.gwt.user.server.rpc.SerializationPolicy r1;
        java.lang.reflect.Method r2;
        boolean $z0;
        com.google.gwt.user.server.rpc.UnexpectedException $r5;
        java.lang.Class $r3;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r12;

        r2 := @parameter0: java.lang.reflect.Method;

        r0 := @parameter1: java.lang.Throwable;

        r1 := @parameter2: com.google.gwt.user.server.rpc.SerializationPolicy;

        i0 := @parameter3: int;

        if r0 != null goto label1;

        $r15 = new java.lang.NullPointerException;

        specialinvoke $r15.<java.lang.NullPointerException: void <init>(java.lang.String)>("cause cannot be null");

        throw $r15;

     label1:
        if r1 != null goto label2;

        $r14 = new java.lang.NullPointerException;

        specialinvoke $r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("serializationPolicy");

        throw $r14;

     label2:
        if r2 == null goto label3;

        $z0 = staticinvoke <com.google.gwt.user.server.rpc.RPCServletUtils: boolean isExpectedException(java.lang.reflect.Method,java.lang.Throwable)>(r2, r0);

        if $z0 != 0 goto label3;

        $r5 = new com.google.gwt.user.server.rpc.UnexpectedException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service method \'");

        $r8 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String getSourceRepresentation(java.lang.reflect.Method)>(r2);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' threw an unexpected exception: ");

        $r11 = virtualinvoke r0.<java.lang.Throwable: java.lang.String toString()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.google.gwt.user.server.rpc.UnexpectedException: void <init>(java.lang.String,java.lang.Throwable)>($r13, r0);

        throw $r5;

     label3:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String encodeResponse(java.lang.Class,java.lang.Object,boolean,int,com.google.gwt.user.server.rpc.SerializationPolicy)>($r3, r0, 1, i0, r1);

        return $r4;
    }

    public static java.lang.String encodeResponseForSuccess(java.lang.reflect.Method, java.lang.Object) throws com.google.gwt.user.client.rpc.SerializationException
    {
        java.lang.Object r1;
        java.lang.String $r3;
        java.lang.reflect.Method r0;
        com.google.gwt.user.server.rpc.SerializationPolicy $r2;

        r0 := @parameter0: java.lang.reflect.Method;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <com.google.gwt.user.server.rpc.RPC: com.google.gwt.user.server.rpc.SerializationPolicy getDefaultSerializationPolicy()>();

        $r3 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String encodeResponseForSuccess(java.lang.reflect.Method,java.lang.Object,com.google.gwt.user.server.rpc.SerializationPolicy)>(r0, r1, $r2);

        return $r3;
    }

    public static java.lang.String encodeResponseForSuccess(java.lang.reflect.Method, java.lang.Object, com.google.gwt.user.server.rpc.SerializationPolicy) throws com.google.gwt.user.client.rpc.SerializationException
    {
        java.lang.Object r1;
        java.lang.String $r3;
        java.lang.reflect.Method r0;
        com.google.gwt.user.server.rpc.SerializationPolicy r2;

        r0 := @parameter0: java.lang.reflect.Method;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: com.google.gwt.user.server.rpc.SerializationPolicy;

        $r3 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String encodeResponseForSuccess(java.lang.reflect.Method,java.lang.Object,com.google.gwt.user.server.rpc.SerializationPolicy,int)>(r0, r1, r2, 0);

        return $r3;
    }

    public static java.lang.String encodeResponseForSuccess(java.lang.reflect.Method, java.lang.Object, com.google.gwt.user.server.rpc.SerializationPolicy, int) throws com.google.gwt.user.client.rpc.SerializationException
    {
        java.lang.NullPointerException $r17, $r18;
        int i0;
        java.lang.String $r9, $r12, $r15, $r20;
        java.lang.reflect.Method r0;
        com.google.gwt.user.server.rpc.SerializationPolicy r1;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r5;
        java.lang.Class $r2, $r3, $r8, $r16, r19;
        java.lang.Object r4;
        java.lang.StringBuilder $r6, $r7, $r10, $r11, $r13, $r14;

        r0 := @parameter0: java.lang.reflect.Method;

        r4 := @parameter1: java.lang.Object;

        r1 := @parameter2: com.google.gwt.user.server.rpc.SerializationPolicy;

        i0 := @parameter3: int;

        if r0 != null goto label1;

        $r18 = new java.lang.NullPointerException;

        specialinvoke $r18.<java.lang.NullPointerException: void <init>(java.lang.String)>("serviceMethod cannot be null");

        throw $r18;

     label1:
        if r1 != null goto label2;

        $r17 = new java.lang.NullPointerException;

        specialinvoke $r17.<java.lang.NullPointerException: void <init>(java.lang.String)>("serializationPolicy");

        throw $r17;

     label2:
        $r2 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r3 = <java.lang.Void: java.lang.Class TYPE>;

        if $r2 == $r3 goto label6;

        if r4 == null goto label6;

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label3;

        $r16 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        r19 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.Class getPrimitiveClassFromWrapper(java.lang.Class)>($r16);

        goto label4;

     label3:
        r19 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

     label4:
        if r19 == null goto label5;

        $z1 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r19);

        if $z1 != 0 goto label6;

     label5:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type \'");

        $r8 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String printTypeName(java.lang.Class)>($r8);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' does not match the return type in the method\'s signature: \'");

        $r12 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String getSourceRepresentation(java.lang.reflect.Method)>(r0);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r5;

     label6:
        $r20 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String encodeResponse(java.lang.Class,java.lang.Object,boolean,int,com.google.gwt.user.server.rpc.SerializationPolicy)>($r2, r4, 0, i0, r1);

        return $r20;
    }

    public static com.google.gwt.user.server.rpc.SerializationPolicy getDefaultSerializationPolicy()
    {
        com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy $r0;

        $r0 = staticinvoke <com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy: com.google.gwt.user.server.rpc.impl.LegacySerializationPolicy getInstance()>();

        return $r0;
    }

    public static java.lang.String invokeAndEncodeResponse(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws com.google.gwt.user.client.rpc.SerializationException
    {
        java.lang.Object[] r2;
        java.lang.Object r0;
        java.lang.String $r4;
        java.lang.reflect.Method r1;
        com.google.gwt.user.server.rpc.SerializationPolicy $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.reflect.Method;

        r2 := @parameter2: java.lang.Object[];

        $r3 = staticinvoke <com.google.gwt.user.server.rpc.RPC: com.google.gwt.user.server.rpc.SerializationPolicy getDefaultSerializationPolicy()>();

        $r4 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String invokeAndEncodeResponse(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],com.google.gwt.user.server.rpc.SerializationPolicy)>(r0, r1, r2, $r3);

        return $r4;
    }

    public static java.lang.String invokeAndEncodeResponse(java.lang.Object, java.lang.reflect.Method, java.lang.Object[], com.google.gwt.user.server.rpc.SerializationPolicy) throws com.google.gwt.user.client.rpc.SerializationException
    {
        java.lang.Object[] r2;
        java.lang.Object r0;
        java.lang.String $r4;
        java.lang.reflect.Method r1;
        com.google.gwt.user.server.rpc.SerializationPolicy r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.reflect.Method;

        r2 := @parameter2: java.lang.Object[];

        r3 := @parameter3: com.google.gwt.user.server.rpc.SerializationPolicy;

        $r4 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String invokeAndEncodeResponse(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],com.google.gwt.user.server.rpc.SerializationPolicy,int)>(r0, r1, r2, r3, 0);

        return $r4;
    }

    public static java.lang.String invokeAndEncodeResponse(java.lang.Object, java.lang.reflect.Method, java.lang.Object[], com.google.gwt.user.server.rpc.SerializationPolicy, int) throws com.google.gwt.user.client.rpc.SerializationException
    {
        java.lang.Throwable $r8;
        java.lang.Object[] r3;
        java.lang.NullPointerException $r5, $r6;
        int i0;
        java.lang.SecurityException $r10, $r13;
        java.lang.String $r11, $r14, r15;
        java.lang.reflect.Method r0;
        com.google.gwt.user.server.rpc.SerializationPolicy r1;
        java.lang.IllegalAccessException $r12;
        java.lang.IllegalArgumentException $r9;
        java.lang.reflect.InvocationTargetException $r7;
        java.lang.Object r2, $r4;

        r2 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.reflect.Method;

        r3 := @parameter2: java.lang.Object[];

        r1 := @parameter3: com.google.gwt.user.server.rpc.SerializationPolicy;

        i0 := @parameter4: int;

        if r0 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("serviceMethod");

        throw $r6;

     label1:
        if r1 != null goto label2;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("serializationPolicy");

        throw $r5;

     label2:
        $r4 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, r3);

        r15 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String encodeResponseForSuccess(java.lang.reflect.Method,java.lang.Object,com.google.gwt.user.server.rpc.SerializationPolicy,int)>(r0, $r4, r1, i0);

     label3:
        goto label7;

     label4:
        $r12 := @caughtexception;

        $r13 = new java.lang.SecurityException;

        $r14 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String formatIllegalAccessErrorMessage(java.lang.Object,java.lang.reflect.Method)>(r2, r0);

        specialinvoke $r13.<java.lang.SecurityException: void <init>(java.lang.String)>($r14);

        virtualinvoke $r13.<java.lang.SecurityException: java.lang.Throwable initCause(java.lang.Throwable)>($r12);

        throw $r13;

     label5:
        $r9 := @caughtexception;

        $r10 = new java.lang.SecurityException;

        $r11 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String formatIllegalArgumentErrorMessage(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>(r2, r0, r3);

        specialinvoke $r10.<java.lang.SecurityException: void <init>(java.lang.String)>($r11);

        virtualinvoke $r10.<java.lang.SecurityException: java.lang.Throwable initCause(java.lang.Throwable)>($r9);

        throw $r10;

     label6:
        $r7 := @caughtexception;

        $r8 = virtualinvoke $r7.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        r15 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String encodeResponseForFailure(java.lang.reflect.Method,java.lang.Throwable,com.google.gwt.user.server.rpc.SerializationPolicy,int)>(r0, $r8, r1, i0);

     label7:
        return r15;

        catch java.lang.IllegalAccessException from label2 to label3 with label4;
        catch java.lang.IllegalArgumentException from label2 to label3 with label5;
        catch java.lang.reflect.InvocationTargetException from label2 to label3 with label6;
    }

    private static java.lang.String encodeResponse(java.lang.Class, java.lang.Object, boolean, int, com.google.gwt.user.server.rpc.SerializationPolicy) throws com.google.gwt.user.client.rpc.SerializationException
    {
        int i0;
        java.lang.Class r2, $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.Object r9;
        java.lang.String $r6, $r8, $r10;
        com.google.gwt.user.server.rpc.SerializationPolicy r1;
        com.google.gwt.user.server.rpc.impl.ServerSerializationStreamWriter $r0;
        boolean z0;

        r2 := @parameter0: java.lang.Class;

        r9 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        r1 := @parameter4: com.google.gwt.user.server.rpc.SerializationPolicy;

        $r0 = new com.google.gwt.user.server.rpc.impl.ServerSerializationStreamWriter;

        specialinvoke $r0.<com.google.gwt.user.server.rpc.impl.ServerSerializationStreamWriter: void <init>(com.google.gwt.user.server.rpc.SerializationPolicy)>(r1);

        virtualinvoke $r0.<com.google.gwt.user.server.rpc.impl.ServerSerializationStreamWriter: void setFlags(int)>(i0);

        virtualinvoke $r0.<com.google.gwt.user.server.rpc.impl.ServerSerializationStreamWriter: void prepareToWrite()>();

        $r3 = <java.lang.Void: java.lang.Class TYPE>;

        if r2 == $r3 goto label1;

        virtualinvoke $r0.<com.google.gwt.user.server.rpc.impl.ServerSerializationStreamWriter: void serializeValue(java.lang.Object,java.lang.Class)>(r9, r2);

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        if z0 == 0 goto label2;

        $r10 = "//EX";

        goto label3;

     label2:
        $r10 = "//OK";

     label3:
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r6 = virtualinvoke $r0.<com.google.gwt.user.server.rpc.impl.ServerSerializationStreamWriter: java.lang.String toString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private static java.lang.String formatIllegalAccessErrorMessage(java.lang.Object, java.lang.reflect.Method)
    {
        java.lang.StringBuffer $r0;
        java.lang.Object r3;
        java.lang.Class $r5;
        java.lang.String $r2, $r4, $r6;
        java.lang.reflect.Method r1;

        r3 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.reflect.Method;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Blocked attempt to access inaccessible method \'");

        $r2 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String getSourceRepresentation(java.lang.reflect.Method)>(r1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        if r3 == null goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" on target \'");

        $r5 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String printTypeName(java.lang.Class)>($r5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

     label1:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; this is either misconfiguration or a hack attempt");

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    private static java.lang.String formatIllegalArgumentErrorMessage(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])
    {
        java.lang.Object[] r4;
        java.util.List $r5;
        java.lang.StringBuffer $r0;
        int $i0;
        java.lang.Object r3;
        java.lang.Class $r6;
        java.lang.String $r2, $r7, $r8;
        java.lang.reflect.Method r1;

        r3 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.reflect.Method;

        r4 := @parameter2: java.lang.Object[];

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Blocked attempt to invoke method \'");

        $r2 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String getSourceRepresentation(java.lang.reflect.Method)>(r1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        if r3 == null goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" on target \'");

        $r6 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String printTypeName(java.lang.Class)>($r6);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

     label1:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" with invalid arguments");

        if r4 == null goto label2;

        $i0 = lengthof r4;

        if $i0 <= 0 goto label2;

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

     label2:
        $r8 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    private static java.lang.String formatMethodNotFoundErrorMessage(java.lang.Class, java.lang.String, java.lang.Class[])
    {
        java.lang.Class[] r2;
        java.lang.StringBuffer $r0;
        int $i0, i1;
        java.lang.Class r3, $r6;
        java.lang.String r1, $r4, $r5, $r7;

        r3 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Class[];

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not locate requested method \'");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label3;

        if i1 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        $r6 = r2[i1];

        $r7 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String printTypeName(java.lang.Class)>($r6);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")\'");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" in interface \'");

        $r4 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String printTypeName(java.lang.Class)>(r3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    private static java.lang.Class getClassFromSerializedName(java.lang.String, java.lang.ClassLoader) throws java.lang.ClassNotFoundException
    {
        java.util.HashMap $r1;
        java.lang.Object $r2;
        java.lang.Class r3, $r5;
        java.lang.String r0;
        java.lang.ClassLoader r4;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.ClassLoader;

        $r1 = <com.google.gwt.user.server.rpc.RPC: java.util.HashMap TYPE_NAMES>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (java.lang.Class) $r2;

        if r3 == null goto label1;

        return r3;

     label1:
        $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r0, 0, r4);

        return $r5;
    }

    private static java.lang.Class getPrimitiveClassFromWrapper(java.lang.Class)
    {
        java.util.Map $r1;
        java.lang.Class r0, $r3;
        java.lang.Object $r2;

        r0 := @parameter0: java.lang.Class;

        $r1 = <com.google.gwt.user.server.rpc.RPC: java.util.Map PRIMITIVE_WRAPPER_CLASS_TO_PRIMITIVE_CLASS>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (java.lang.Class) $r2;

        return $r3;
    }

    private static java.lang.String getSourceRepresentation(java.lang.reflect.Method)
    {
        java.lang.String $r1, $r2;
        java.lang.reflect.Method r0;

        r0 := @parameter0: java.lang.reflect.Method;

        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String toString()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(36, 46);

        return $r2;
    }

    private static boolean implementsInterface(java.lang.Class, java.lang.String)
    {
        java.lang.Throwable $r9;
        java.util.HashSet $r3;
        java.util.Map $r0, $r1, $r4;
        int i0, i1;
        java.lang.String r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Class[] $r7;
        java.util.Set r11;
        java.lang.Object $r2;
        java.lang.Class $r6, r8, r10;

        r10 := @parameter0: java.lang.Class;

        r5 := @parameter1: java.lang.String;

        $r0 = <com.google.gwt.user.server.rpc.RPC: java.util.Map serviceToImplementedInterfacesMap>;

        entermonitor $r0;

     label01:
        $r1 = <com.google.gwt.user.server.rpc.RPC: java.util.Map serviceToImplementedInterfacesMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10);

        r11 = (java.util.Set) $r2;

        if r11 == null goto label03;

        $z4 = interfaceinvoke r11.<java.util.Set: boolean contains(java.lang.Object)>(r5);

        if $z4 == 0 goto label04;

        exitmonitor $r0;

     label02:
        return 1;

     label03:
        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r11 = $r3;

        $r4 = <com.google.gwt.user.server.rpc.RPC: java.util.Map serviceToImplementedInterfacesMap>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, $r3);

     label04:
        $z0 = virtualinvoke r10.<java.lang.Class: boolean isInterface()>();

        if $z0 != 0 goto label10;

     label05:
        if r10 == null goto label12;

        $r6 = class "Lcom/google/gwt/user/server/rpc/RemoteServiceServlet;";

        $z2 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>(r10);

        if $z2 != 0 goto label12;

        $r7 = virtualinvoke r10.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        i0 = lengthof $r7;

        i1 = 0;

     label06:
        if i1 >= i0 goto label09;

        r8 = $r7[i1];

        $z3 = staticinvoke <com.google.gwt.user.server.rpc.RPC: boolean implementsInterfaceRecursive(java.lang.Class,java.lang.String)>(r8, r5);

        if $z3 == 0 goto label08;

        interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>(r5);

        exitmonitor $r0;

     label07:
        return 1;

     label08:
        i1 = i1 + 1;

        goto label06;

     label09:
        r10 = virtualinvoke r10.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label05;

     label10:
        $z1 = staticinvoke <com.google.gwt.user.server.rpc.RPC: boolean implementsInterfaceRecursive(java.lang.Class,java.lang.String)>(r10, r5);

        if $z1 == 0 goto label12;

        interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>(r5);

        exitmonitor $r0;

     label11:
        return 1;

     label12:
        exitmonitor $r0;

     label13:
        return 0;

     label14:
        $r9 := @caughtexception;

        exitmonitor $r0;

     label15:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label07 with label14;
        catch java.lang.Throwable from label08 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    private static boolean implementsInterfaceRecursive(java.lang.Class, java.lang.String)
    {
        java.lang.Class[] $r3;
        java.lang.AssertionError $r5;
        int i0, i1;
        java.lang.Class r0, r4;
        java.lang.String $r1, r2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        $z0 = <com.google.gwt.user.server.rpc.RPC: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z3 = virtualinvoke r0.<java.lang.Class: boolean isInterface()>();

        if $z3 != 0 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        i0 = lengthof $r3;

        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        r4 = $r3[i1];

        $z2 = staticinvoke <com.google.gwt.user.server.rpc.RPC: boolean implementsInterfaceRecursive(java.lang.Class,java.lang.String)>(r4, r2);

        if $z2 == 0 goto label4;

        return 1;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return 0;
    }

    private static java.lang.String maybeDeobfuscate(com.google.gwt.user.server.rpc.impl.ServerSerializationStreamReader, java.lang.String) throws com.google.gwt.user.client.rpc.SerializationException
    {
        com.google.gwt.user.server.rpc.impl.TypeNameObfuscator $r4;
        com.google.gwt.user.server.rpc.impl.ServerSerializationStreamReader r0;
        int $i0, $i2;
        java.lang.String r1, $r2, $r5, $r10, $r12;
        com.google.gwt.user.server.rpc.SerializationPolicy $r3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r8, $r11, $r13;
        java.lang.Class $r9;
        com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException $r14;

        r0 := @parameter0: com.google.gwt.user.server.rpc.impl.ServerSerializationStreamReader;

        r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<com.google.gwt.user.server.rpc.impl.ServerSerializationStreamReader: boolean hasFlags(int)>(1);

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke r0.<com.google.gwt.user.server.rpc.impl.ServerSerializationStreamReader: com.google.gwt.user.server.rpc.SerializationPolicy getSerializationPolicy()>();

        $z1 = $r3 instanceof com.google.gwt.user.server.rpc.impl.TypeNameObfuscator;

        if $z1 != 0 goto label1;

        $r14 = new com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RPC request was encoded with obfuscated type names, but the SerializationPolicy in use does not implement ");

        $r9 = class "Lcom/google/gwt/user/server/rpc/impl/TypeNameObfuscator;";

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException: void <init>(java.lang.String)>($r12);

        throw $r14;

     label1:
        $r4 = (com.google.gwt.user.server.rpc.impl.TypeNameObfuscator) $r3;

        $r5 = interfaceinvoke $r4.<com.google.gwt.user.server.rpc.impl.TypeNameObfuscator: java.lang.String getClassNameForTypeId(java.lang.String)>(r1);

        if $r5 == null goto label2;

        return $r5;

     label2:
        goto label4;

     label3:
        $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(47);

        $i2 = (int) -1;

        if $i0 == $i2 goto label4;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return $r2;

     label4:
        return r1;
    }

    private static java.lang.String printTypeName(java.lang.Class)
    {
        java.lang.String $r9, $r10, $r13, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.Class r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r11;
        java.lang.StringBuilder $r12, $r14, $r15;

        r0 := @parameter0: java.lang.Class;

        $r1 = <java.lang.Integer: java.lang.Class TYPE>;

        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return "int";

     label1:
        $r2 = <java.lang.Long: java.lang.Class TYPE>;

        $z1 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label2;

        return "long";

     label2:
        $r3 = <java.lang.Short: java.lang.Class TYPE>;

        $z2 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z2 == 0 goto label3;

        return "short";

     label3:
        $r4 = <java.lang.Byte: java.lang.Class TYPE>;

        $z3 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z3 == 0 goto label4;

        return "byte";

     label4:
        $r5 = <java.lang.Character: java.lang.Class TYPE>;

        $z4 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z4 == 0 goto label5;

        return "char";

     label5:
        $r6 = <java.lang.Boolean: java.lang.Class TYPE>;

        $z5 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z5 == 0 goto label6;

        return "boolean";

     label6:
        $r7 = <java.lang.Float: java.lang.Class TYPE>;

        $z6 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z6 == 0 goto label7;

        return "float";

     label7:
        $r8 = <java.lang.Double: java.lang.Class TYPE>;

        $z7 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z7 == 0 goto label8;

        return "double";

     label8:
        $z8 = virtualinvoke r0.<java.lang.Class: boolean isArray()>();

        if $z8 == 0 goto label9;

        $r11 = virtualinvoke r0.<java.lang.Class: java.lang.Class getComponentType()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = staticinvoke <com.google.gwt.user.server.rpc.RPC: java.lang.String printTypeName(java.lang.Class)>($r11);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[]");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;

     label9:
        $r9 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String replace(char,char)>(36, 46);

        return $r10;
    }

    private void <init>()
    {
        com.google.gwt.user.server.rpc.RPC r0;

        r0 := @this: com.google.gwt.user.server.rpc.RPC;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        java.util.Map $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17;
        boolean $z0, $z1;
        java.util.HashMap $r1, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r35;
        java.lang.Class $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33;

        $r0 = class "Lcom/google/gwt/user/server/rpc/RPC;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.google.gwt.user.server.rpc.RPC: boolean $assertionsDisabled> = $z1;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <com.google.gwt.user.server.rpc.RPC: java.util.Map PRIMITIVE_WRAPPER_CLASS_TO_PRIMITIVE_CLASS> = $r1;

        $r3 = <com.google.gwt.user.server.rpc.RPC: java.util.Map PRIMITIVE_WRAPPER_CLASS_TO_PRIMITIVE_CLASS>;

        $r2 = <java.lang.Boolean: java.lang.Class TYPE>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Boolean;", $r2);

        $r5 = <com.google.gwt.user.server.rpc.RPC: java.util.Map PRIMITIVE_WRAPPER_CLASS_TO_PRIMITIVE_CLASS>;

        $r4 = <java.lang.Byte: java.lang.Class TYPE>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Byte;", $r4);

        $r7 = <com.google.gwt.user.server.rpc.RPC: java.util.Map PRIMITIVE_WRAPPER_CLASS_TO_PRIMITIVE_CLASS>;

        $r6 = <java.lang.Character: java.lang.Class TYPE>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Character;", $r6);

        $r9 = <com.google.gwt.user.server.rpc.RPC: java.util.Map PRIMITIVE_WRAPPER_CLASS_TO_PRIMITIVE_CLASS>;

        $r8 = <java.lang.Double: java.lang.Class TYPE>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Double;", $r8);

        $r11 = <com.google.gwt.user.server.rpc.RPC: java.util.Map PRIMITIVE_WRAPPER_CLASS_TO_PRIMITIVE_CLASS>;

        $r10 = <java.lang.Float: java.lang.Class TYPE>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Float;", $r10);

        $r13 = <com.google.gwt.user.server.rpc.RPC: java.util.Map PRIMITIVE_WRAPPER_CLASS_TO_PRIMITIVE_CLASS>;

        $r12 = <java.lang.Integer: java.lang.Class TYPE>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Integer;", $r12);

        $r15 = <com.google.gwt.user.server.rpc.RPC: java.util.Map PRIMITIVE_WRAPPER_CLASS_TO_PRIMITIVE_CLASS>;

        $r14 = <java.lang.Long: java.lang.Class TYPE>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Long;", $r14);

        $r17 = <com.google.gwt.user.server.rpc.RPC: java.util.Map PRIMITIVE_WRAPPER_CLASS_TO_PRIMITIVE_CLASS>;

        $r16 = <java.lang.Short: java.lang.Class TYPE>;

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(class "Ljava/lang/Short;", $r16);

        $r18 = new java.util.HashMap;

        specialinvoke $r18.<java.util.HashMap: void <init>()>();

        <com.google.gwt.user.server.rpc.RPC: java.util.HashMap TYPE_NAMES> = $r18;

        $r20 = <com.google.gwt.user.server.rpc.RPC: java.util.HashMap TYPE_NAMES>;

        $r19 = <java.lang.Boolean: java.lang.Class TYPE>;

        virtualinvoke $r20.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Z", $r19);

        $r22 = <com.google.gwt.user.server.rpc.RPC: java.util.HashMap TYPE_NAMES>;

        $r21 = <java.lang.Byte: java.lang.Class TYPE>;

        virtualinvoke $r22.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("B", $r21);

        $r24 = <com.google.gwt.user.server.rpc.RPC: java.util.HashMap TYPE_NAMES>;

        $r23 = <java.lang.Character: java.lang.Class TYPE>;

        virtualinvoke $r24.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("C", $r23);

        $r26 = <com.google.gwt.user.server.rpc.RPC: java.util.HashMap TYPE_NAMES>;

        $r25 = <java.lang.Double: java.lang.Class TYPE>;

        virtualinvoke $r26.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("D", $r25);

        $r28 = <com.google.gwt.user.server.rpc.RPC: java.util.HashMap TYPE_NAMES>;

        $r27 = <java.lang.Float: java.lang.Class TYPE>;

        virtualinvoke $r28.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("F", $r27);

        $r30 = <com.google.gwt.user.server.rpc.RPC: java.util.HashMap TYPE_NAMES>;

        $r29 = <java.lang.Integer: java.lang.Class TYPE>;

        virtualinvoke $r30.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("I", $r29);

        $r32 = <com.google.gwt.user.server.rpc.RPC: java.util.HashMap TYPE_NAMES>;

        $r31 = <java.lang.Long: java.lang.Class TYPE>;

        virtualinvoke $r32.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("J", $r31);

        $r34 = <com.google.gwt.user.server.rpc.RPC: java.util.HashMap TYPE_NAMES>;

        $r33 = <java.lang.Short: java.lang.Class TYPE>;

        virtualinvoke $r34.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("S", $r33);

        $r35 = new java.util.HashMap;

        specialinvoke $r35.<java.util.HashMap: void <init>()>();

        <com.google.gwt.user.server.rpc.RPC: java.util.Map serviceToImplementedInterfacesMap> = $r35;

        return;
    }
}
