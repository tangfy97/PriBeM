public class org.eclipse.jetty.servlet.ServletHolder$Registration extends org.eclipse.jetty.servlet.Holder$HolderRegistration implements javax.servlet.ServletRegistration$Dynamic
{
    protected javax.servlet.MultipartConfigElement _multipartConfig;
    final org.eclipse.jetty.servlet.ServletHolder this$0;

    public void <init>(org.eclipse.jetty.servlet.ServletHolder)
    {
        org.eclipse.jetty.servlet.ServletHolder r1;
        org.eclipse.jetty.servlet.ServletHolder$Registration r0;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder$Registration;

        r1 := @parameter0: org.eclipse.jetty.servlet.ServletHolder;

        r0.<org.eclipse.jetty.servlet.ServletHolder$Registration: org.eclipse.jetty.servlet.ServletHolder this$0> = r1;

        specialinvoke r0.<org.eclipse.jetty.servlet.Holder$HolderRegistration: void <init>(org.eclipse.jetty.servlet.Holder)>(r1);

        return;
    }

    public transient java.util.Set addMapping(java.lang.String[])
    {
        java.lang.String[] r2;
        java.util.HashSet $r13, r14;
        int i0, i1;
        java.lang.String $r5, r9;
        org.eclipse.jetty.servlet.ServletMapping $r3, $r12;
        boolean $z0;
        org.eclipse.jetty.servlet.ServletHandler $r7, $r11;
        org.eclipse.jetty.servlet.ServletHolder $r1, $r4, $r6, $r10;
        java.util.Set $r8;
        org.eclipse.jetty.servlet.ServletHolder$Registration r0;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder$Registration;

        r2 := @parameter0: java.lang.String[];

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder$Registration: org.eclipse.jetty.servlet.ServletHolder this$0>;

        virtualinvoke $r1.<org.eclipse.jetty.servlet.ServletHolder: void illegalStateIfContextStarted()>();

        r14 = null;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r9 = r2[i1];

        $r10 = r0.<org.eclipse.jetty.servlet.ServletHolder$Registration: org.eclipse.jetty.servlet.ServletHolder this$0>;

        $r11 = $r10.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.servlet.ServletHandler _servletHandler>;

        $r12 = virtualinvoke $r11.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletMapping getServletMapping(java.lang.String)>(r9);

        if $r12 == null goto label3;

        $z0 = virtualinvoke $r12.<org.eclipse.jetty.servlet.ServletMapping: boolean isDefault()>();

        if $z0 != 0 goto label3;

        if r14 != null goto label2;

        $r13 = new java.util.HashSet;

        specialinvoke $r13.<java.util.HashSet: void <init>()>();

        r14 = $r13;

     label2:
        interfaceinvoke r14.<java.util.Set: boolean add(java.lang.Object)>(r9);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        if r14 == null goto label5;

        return r14;

     label5:
        $r3 = new org.eclipse.jetty.servlet.ServletMapping;

        specialinvoke $r3.<org.eclipse.jetty.servlet.ServletMapping: void <init>()>();

        $r4 = r0.<org.eclipse.jetty.servlet.ServletHolder$Registration: org.eclipse.jetty.servlet.ServletHolder this$0>;

        $r5 = virtualinvoke $r4.<org.eclipse.jetty.servlet.ServletHolder: java.lang.String getName()>();

        virtualinvoke $r3.<org.eclipse.jetty.servlet.ServletMapping: void setServletName(java.lang.String)>($r5);

        virtualinvoke $r3.<org.eclipse.jetty.servlet.ServletMapping: void setPathSpecs(java.lang.String[])>(r2);

        $r6 = r0.<org.eclipse.jetty.servlet.ServletHolder$Registration: org.eclipse.jetty.servlet.ServletHolder this$0>;

        $r7 = $r6.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.servlet.ServletHandler _servletHandler>;

        virtualinvoke $r7.<org.eclipse.jetty.servlet.ServletHandler: void addServletMapping(org.eclipse.jetty.servlet.ServletMapping)>($r3);

        $r8 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r8;
    }

    public java.util.Collection getMappings()
    {
        org.eclipse.jetty.servlet.ServletHandler $r2;
        org.eclipse.jetty.servlet.ServletHolder $r1;
        java.lang.String[] $r8;
        org.eclipse.jetty.servlet.ServletMapping[] $r3;
        java.util.ArrayList $r4;
        org.eclipse.jetty.servlet.ServletHolder$Registration r0;
        java.util.List $r9;
        int i0, $i1, i2;
        java.lang.String $r6, $r7;
        org.eclipse.jetty.servlet.ServletMapping r5;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder$Registration;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder$Registration: org.eclipse.jetty.servlet.ServletHolder this$0>;

        $r2 = $r1.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.servlet.ServletHandler _servletHandler>;

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.servlet.ServletHandler: org.eclipse.jetty.servlet.ServletMapping[] getServletMappings()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        if $r3 == null goto label4;

        i0 = lengthof $r3;

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        r5 = $r3[i2];

        $r6 = virtualinvoke r5.<org.eclipse.jetty.servlet.ServletMapping: java.lang.String getServletName()>();

        $r7 = virtualinvoke r0.<org.eclipse.jetty.servlet.ServletHolder$Registration: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        $r8 = virtualinvoke r5.<org.eclipse.jetty.servlet.ServletMapping: java.lang.String[] getPathSpecs()>();

        if $r8 == null goto label3;

        $i1 = lengthof $r8;

        if $i1 <= 0 goto label3;

        $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r8);

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r9);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return $r4;
    }

    public java.lang.String getRunAsRole()
    {
        org.eclipse.jetty.servlet.ServletHolder $r1;
        org.eclipse.jetty.servlet.ServletHolder$Registration r0;
        java.lang.String $r2;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder$Registration;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder$Registration: org.eclipse.jetty.servlet.ServletHolder this$0>;

        $r2 = staticinvoke <org.eclipse.jetty.servlet.ServletHolder: java.lang.String access$100(org.eclipse.jetty.servlet.ServletHolder)>($r1);

        return $r2;
    }

    public void setLoadOnStartup(int)
    {
        org.eclipse.jetty.servlet.ServletHolder$Registration r0;
        org.eclipse.jetty.servlet.ServletHolder $r1, $r2;
        int i0;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder$Registration;

        i0 := @parameter0: int;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder$Registration: org.eclipse.jetty.servlet.ServletHolder this$0>;

        virtualinvoke $r1.<org.eclipse.jetty.servlet.ServletHolder: void illegalStateIfContextStarted()>();

        $r2 = r0.<org.eclipse.jetty.servlet.ServletHolder$Registration: org.eclipse.jetty.servlet.ServletHolder this$0>;

        virtualinvoke $r2.<org.eclipse.jetty.servlet.ServletHolder: void setInitOrder(int)>(i0);

        return;
    }

    public int getInitOrder()
    {
        org.eclipse.jetty.servlet.ServletHolder $r1;
        int $i0;
        org.eclipse.jetty.servlet.ServletHolder$Registration r0;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder$Registration;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder$Registration: org.eclipse.jetty.servlet.ServletHolder this$0>;

        $i0 = virtualinvoke $r1.<org.eclipse.jetty.servlet.ServletHolder: int getInitOrder()>();

        return $i0;
    }

    public void setMultipartConfig(javax.servlet.MultipartConfigElement)
    {
        org.eclipse.jetty.servlet.ServletHolder$Registration r0;
        javax.servlet.MultipartConfigElement r1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder$Registration;

        r1 := @parameter0: javax.servlet.MultipartConfigElement;

        r0.<org.eclipse.jetty.servlet.ServletHolder$Registration: javax.servlet.MultipartConfigElement _multipartConfig> = r1;

        return;
    }

    public javax.servlet.MultipartConfigElement getMultipartConfig()
    {
        org.eclipse.jetty.servlet.ServletHolder$Registration r0;
        javax.servlet.MultipartConfigElement $r1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder$Registration;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder$Registration: javax.servlet.MultipartConfigElement _multipartConfig>;

        return $r1;
    }

    public void setRunAsRole(java.lang.String)
    {
        org.eclipse.jetty.servlet.ServletHolder $r2;
        org.eclipse.jetty.servlet.ServletHolder$Registration r0;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder$Registration;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.eclipse.jetty.servlet.ServletHolder$Registration: org.eclipse.jetty.servlet.ServletHolder this$0>;

        staticinvoke <org.eclipse.jetty.servlet.ServletHolder: java.lang.String access$102(org.eclipse.jetty.servlet.ServletHolder,java.lang.String)>($r2, r1);

        return;
    }

    public java.util.Set setServletSecurity(javax.servlet.ServletSecurityElement)
    {
        org.eclipse.jetty.servlet.ServletHolder$Registration r0;
        org.eclipse.jetty.servlet.ServletHandler $r3;
        org.eclipse.jetty.servlet.ServletHolder $r1;
        java.util.Set $r4;
        javax.servlet.ServletSecurityElement r2;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder$Registration;

        r2 := @parameter0: javax.servlet.ServletSecurityElement;

        $r1 = r0.<org.eclipse.jetty.servlet.ServletHolder$Registration: org.eclipse.jetty.servlet.ServletHolder this$0>;

        $r3 = $r1.<org.eclipse.jetty.servlet.ServletHolder: org.eclipse.jetty.servlet.ServletHandler _servletHandler>;

        $r4 = virtualinvoke $r3.<org.eclipse.jetty.servlet.ServletHandler: java.util.Set setServletSecurity(javax.servlet.ServletRegistration$Dynamic,javax.servlet.ServletSecurityElement)>(r0, r2);

        return $r4;
    }

    public volatile java.util.Set setInitParameters(java.util.Map)
    {
        java.util.Set $r2;
        org.eclipse.jetty.servlet.ServletHolder$Registration r0;
        java.util.Map r1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder$Registration;

        r1 := @parameter0: java.util.Map;

        $r2 = specialinvoke r0.<org.eclipse.jetty.servlet.Holder$HolderRegistration: java.util.Set setInitParameters(java.util.Map)>(r1);

        return $r2;
    }

    public volatile boolean setInitParameter(java.lang.String, java.lang.String)
    {
        org.eclipse.jetty.servlet.ServletHolder$Registration r0;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder$Registration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<org.eclipse.jetty.servlet.Holder$HolderRegistration: boolean setInitParameter(java.lang.String,java.lang.String)>(r1, r2);

        return $z0;
    }

    public volatile java.lang.String getName()
    {
        org.eclipse.jetty.servlet.ServletHolder$Registration r0;
        java.lang.String $r1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder$Registration;

        $r1 = specialinvoke r0.<org.eclipse.jetty.servlet.Holder$HolderRegistration: java.lang.String getName()>();

        return $r1;
    }

    public volatile java.util.Map getInitParameters()
    {
        org.eclipse.jetty.servlet.ServletHolder$Registration r0;
        java.util.Map $r1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder$Registration;

        $r1 = specialinvoke r0.<org.eclipse.jetty.servlet.Holder$HolderRegistration: java.util.Map getInitParameters()>();

        return $r1;
    }

    public volatile java.lang.String getInitParameter(java.lang.String)
    {
        org.eclipse.jetty.servlet.ServletHolder$Registration r0;
        java.lang.String r1, $r2;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder$Registration;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.eclipse.jetty.servlet.Holder$HolderRegistration: java.lang.String getInitParameter(java.lang.String)>(r1);

        return $r2;
    }

    public volatile java.lang.String getClassName()
    {
        org.eclipse.jetty.servlet.ServletHolder$Registration r0;
        java.lang.String $r1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder$Registration;

        $r1 = specialinvoke r0.<org.eclipse.jetty.servlet.Holder$HolderRegistration: java.lang.String getClassName()>();

        return $r1;
    }

    public volatile void setDescription(java.lang.String)
    {
        org.eclipse.jetty.servlet.ServletHolder$Registration r0;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder$Registration;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.eclipse.jetty.servlet.Holder$HolderRegistration: void setDescription(java.lang.String)>(r1);

        return;
    }

    public volatile void setAsyncSupported(boolean)
    {
        org.eclipse.jetty.servlet.ServletHolder$Registration r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.servlet.ServletHolder$Registration;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.eclipse.jetty.servlet.Holder$HolderRegistration: void setAsyncSupported(boolean)>(z0);

        return;
    }
}
