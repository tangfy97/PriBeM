public final class org.apache.lucene.index.SlowCompositeReaderWrapper extends org.apache.lucene.index.AtomicReader
{
    private final org.apache.lucene.index.CompositeReader in;
    private final org.apache.lucene.index.Fields fields;
    private final org.apache.lucene.util.Bits liveDocs;
    private final java.util.Map cachedOrdMaps;
    static final boolean $assertionsDisabled;

    public static org.apache.lucene.index.AtomicReader wrap(org.apache.lucene.index.IndexReader) throws java.io.IOException
    {
        org.apache.lucene.index.CompositeReader $r4;
        java.lang.AssertionError $r2;
        org.apache.lucene.index.SlowCompositeReaderWrapper $r3;
        org.apache.lucene.index.IndexReader r0;
        org.apache.lucene.index.AtomicReader $r1;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: org.apache.lucene.index.IndexReader;

        $z0 = r0 instanceof org.apache.lucene.index.CompositeReader;

        if $z0 == 0 goto label1;

        $r3 = new org.apache.lucene.index.SlowCompositeReaderWrapper;

        $r4 = (org.apache.lucene.index.CompositeReader) r0;

        specialinvoke $r3.<org.apache.lucene.index.SlowCompositeReaderWrapper: void <init>(org.apache.lucene.index.CompositeReader)>($r4);

        return $r3;

     label1:
        $z1 = <org.apache.lucene.index.SlowCompositeReaderWrapper: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z2 = r0 instanceof org.apache.lucene.index.AtomicReader;

        if $z2 != 0 goto label2;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        $r1 = (org.apache.lucene.index.AtomicReader) r0;

        return $r1;
    }

    public void <init>(org.apache.lucene.index.CompositeReader) throws java.io.IOException
    {
        org.apache.lucene.index.CompositeReader r2, $r3, $r5, $r7;
        org.apache.lucene.index.Fields $r4;
        java.util.HashMap $r1;
        org.apache.lucene.index.SlowCompositeReaderWrapper r0;
        org.apache.lucene.util.Bits $r6;

        r0 := @this: org.apache.lucene.index.SlowCompositeReaderWrapper;

        r2 := @parameter0: org.apache.lucene.index.CompositeReader;

        specialinvoke r0.<org.apache.lucene.index.AtomicReader: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: java.util.Map cachedOrdMaps> = $r1;

        r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.index.CompositeReader in> = r2;

        $r3 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.index.CompositeReader in>;

        $r4 = staticinvoke <org.apache.lucene.index.MultiFields: org.apache.lucene.index.Fields getFields(org.apache.lucene.index.IndexReader)>($r3);

        r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.index.Fields fields> = $r4;

        $r5 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.index.CompositeReader in>;

        $r6 = staticinvoke <org.apache.lucene.index.MultiFields: org.apache.lucene.util.Bits getLiveDocs(org.apache.lucene.index.IndexReader)>($r5);

        r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.util.Bits liveDocs> = $r6;

        $r7 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.index.CompositeReader in>;

        virtualinvoke $r7.<org.apache.lucene.index.CompositeReader: void registerParentReader(org.apache.lucene.index.IndexReader)>(r0);

        return;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.index.SlowCompositeReaderWrapper r2;
        org.apache.lucene.index.CompositeReader $r3;
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        java.lang.String $r6;

        r2 := @this: org.apache.lucene.index.SlowCompositeReaderWrapper;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SlowCompositeReaderWrapper(");

        $r3 = r2.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.index.CompositeReader in>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public org.apache.lucene.index.Fields fields()
    {
        org.apache.lucene.index.Fields $r1;
        org.apache.lucene.index.SlowCompositeReaderWrapper r0;

        r0 := @this: org.apache.lucene.index.SlowCompositeReaderWrapper;

        virtualinvoke r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: void ensureOpen()>();

        $r1 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.index.Fields fields>;

        return $r1;
    }

    public org.apache.lucene.index.NumericDocValues getNumericDocValues(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.index.SlowCompositeReaderWrapper r0;
        org.apache.lucene.index.CompositeReader $r2;
        org.apache.lucene.index.NumericDocValues $r3;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.index.SlowCompositeReaderWrapper;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.index.CompositeReader in>;

        $r3 = staticinvoke <org.apache.lucene.index.MultiDocValues: org.apache.lucene.index.NumericDocValues getNumericValues(org.apache.lucene.index.IndexReader,java.lang.String)>($r2, r1);

        return $r3;
    }

    public org.apache.lucene.index.BinaryDocValues getBinaryDocValues(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.index.SlowCompositeReaderWrapper r0;
        org.apache.lucene.index.CompositeReader $r2;
        java.lang.String r1;
        org.apache.lucene.index.BinaryDocValues $r3;

        r0 := @this: org.apache.lucene.index.SlowCompositeReaderWrapper;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.index.CompositeReader in>;

        $r3 = staticinvoke <org.apache.lucene.index.MultiDocValues: org.apache.lucene.index.BinaryDocValues getBinaryValues(org.apache.lucene.index.IndexReader,java.lang.String)>($r2, r1);

        return $r3;
    }

    public org.apache.lucene.index.SortedDocValues getSortedDocValues(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.index.CompositeReader $r9, $r12, $r18;
        int[] r28;
        java.util.Map $r1, $r3, $r23;
        org.apache.lucene.index.FieldInfos $r5;
        boolean $z0;
        org.apache.lucene.index.MultiDocValues$MultiSortedDocValues $r11, $r20;
        org.apache.lucene.index.MultiDocValues$OrdinalMap r25, r26;
        java.util.List $r10, $r13;
        org.apache.lucene.index.AtomicReader $r16;
        java.lang.Throwable $r24;
        org.apache.lucene.index.SortedDocValues[] r27;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String r2;
        org.apache.lucene.index.SortedDocValues $r17, $r19, r29;
        org.apache.lucene.index.FieldInfo$DocValuesType $r7, $r8;
        org.apache.lucene.index.SlowCompositeReaderWrapper r0;
        org.apache.lucene.index.FieldInfo $r6;
        java.lang.Object $r4, $r14, $r21, $r22;
        org.apache.lucene.index.AtomicReaderContext r15;

        r0 := @this: org.apache.lucene.index.SlowCompositeReaderWrapper;

        r2 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: void ensureOpen()>();

        $r1 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: java.util.Map cachedOrdMaps>;

        entermonitor $r1;

     label01:
        $r3 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: java.util.Map cachedOrdMaps>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r25 = (org.apache.lucene.index.MultiDocValues$OrdinalMap) $r4;

        if r25 != null goto label04;

        $r18 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.index.CompositeReader in>;

        $r19 = staticinvoke <org.apache.lucene.index.MultiDocValues: org.apache.lucene.index.SortedDocValues getSortedValues(org.apache.lucene.index.IndexReader,java.lang.String)>($r18, r2);

        $z0 = $r19 instanceof org.apache.lucene.index.MultiDocValues$MultiSortedDocValues;

        if $z0 == 0 goto label02;

        $r20 = (org.apache.lucene.index.MultiDocValues$MultiSortedDocValues) $r19;

        r26 = $r20.<org.apache.lucene.index.MultiDocValues$MultiSortedDocValues: org.apache.lucene.index.MultiDocValues$OrdinalMap mapping>;

        $r21 = r26.<org.apache.lucene.index.MultiDocValues$OrdinalMap: java.lang.Object owner>;

        $r22 = virtualinvoke r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: java.lang.Object getCoreCacheKey()>();

        if $r21 != $r22 goto label02;

        $r23 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: java.util.Map cachedOrdMaps>;

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r26);

     label02:
        exitmonitor $r1;

     label03:
        return $r19;

     label04:
        exitmonitor $r1;

     label05:
        goto label08;

     label06:
        $r24 := @caughtexception;

        exitmonitor $r1;

     label07:
        throw $r24;

     label08:
        $r5 = virtualinvoke r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.index.FieldInfos getFieldInfos()>();

        $r6 = virtualinvoke $r5.<org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$DocValuesType getDocValuesType()>();

        $r8 = <org.apache.lucene.index.FieldInfo$DocValuesType: org.apache.lucene.index.FieldInfo$DocValuesType SORTED>;

        if $r7 == $r8 goto label09;

        return null;

     label09:
        $r9 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.index.CompositeReader in>;

        $r10 = virtualinvoke $r9.<org.apache.lucene.index.CompositeReader: java.util.List leaves()>();

        $i0 = interfaceinvoke $r10.<java.util.List: int size()>();

        r27 = newarray (org.apache.lucene.index.SortedDocValues)[$i0];

        $i1 = $i0 + 1;

        r28 = newarray (int)[$i1];

        i4 = 0;

     label10:
        if i4 >= $i0 goto label12;

        $r12 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.index.CompositeReader in>;

        $r13 = virtualinvoke $r12.<org.apache.lucene.index.CompositeReader: java.util.List leaves()>();

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i4);

        r15 = (org.apache.lucene.index.AtomicReaderContext) $r14;

        $r16 = virtualinvoke r15.<org.apache.lucene.index.AtomicReaderContext: org.apache.lucene.index.AtomicReader reader()>();

        $r17 = virtualinvoke $r16.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.SortedDocValues getSortedDocValues(java.lang.String)>(r2);

        r29 = $r17;

        if $r17 != null goto label11;

        r29 = <org.apache.lucene.index.SortedDocValues: org.apache.lucene.index.SortedDocValues EMPTY>;

     label11:
        r27[i4] = r29;

        $i3 = r15.<org.apache.lucene.index.AtomicReaderContext: int docBase>;

        r28[i4] = $i3;

        i4 = i4 + 1;

        goto label10;

     label12:
        $i2 = virtualinvoke r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: int maxDoc()>();

        r28[$i0] = $i2;

        $r11 = new org.apache.lucene.index.MultiDocValues$MultiSortedDocValues;

        specialinvoke $r11.<org.apache.lucene.index.MultiDocValues$MultiSortedDocValues: void <init>(org.apache.lucene.index.SortedDocValues[],int[],org.apache.lucene.index.MultiDocValues$OrdinalMap)>(r27, r28, r25);

        return $r11;

        catch java.lang.Throwable from label01 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

    public org.apache.lucene.index.SortedSetDocValues getSortedSetDocValues(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.index.CompositeReader $r9, $r12, $r21;
        int[] $r19;
        java.util.Map $r1, $r3, $r26;
        org.apache.lucene.index.FieldInfos $r5;
        boolean $z0, $z1;
        org.apache.lucene.index.MultiDocValues$OrdinalMap r28, r29;
        java.util.List $r10, $r13;
        org.apache.lucene.index.AtomicReader $r16;
        java.lang.Throwable $r27;
        org.apache.lucene.index.SortedSetDocValues[] $r18;
        java.lang.AssertionError $r20;
        org.apache.lucene.index.MultiDocValues$MultiSortedSetDocValues $r11, $r23;
        int $i0, $i1, $i2, $i3, i4;
        org.apache.lucene.index.SortedSetDocValues $r17, $r22, r30;
        java.lang.String r2;
        org.apache.lucene.index.FieldInfo$DocValuesType $r7, $r8;
        org.apache.lucene.index.SlowCompositeReaderWrapper r0;
        org.apache.lucene.index.FieldInfo $r6;
        java.lang.Object $r4, $r14, $r24, $r25;
        org.apache.lucene.index.AtomicReaderContext r15;

        r0 := @this: org.apache.lucene.index.SlowCompositeReaderWrapper;

        r2 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: void ensureOpen()>();

        $r1 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: java.util.Map cachedOrdMaps>;

        entermonitor $r1;

     label01:
        $r3 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: java.util.Map cachedOrdMaps>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r28 = (org.apache.lucene.index.MultiDocValues$OrdinalMap) $r4;

        if r28 != null goto label04;

        $r21 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.index.CompositeReader in>;

        $r22 = staticinvoke <org.apache.lucene.index.MultiDocValues: org.apache.lucene.index.SortedSetDocValues getSortedSetValues(org.apache.lucene.index.IndexReader,java.lang.String)>($r21, r2);

        $z1 = $r22 instanceof org.apache.lucene.index.MultiDocValues$MultiSortedSetDocValues;

        if $z1 == 0 goto label02;

        $r23 = (org.apache.lucene.index.MultiDocValues$MultiSortedSetDocValues) $r22;

        r29 = $r23.<org.apache.lucene.index.MultiDocValues$MultiSortedSetDocValues: org.apache.lucene.index.MultiDocValues$OrdinalMap mapping>;

        $r24 = r29.<org.apache.lucene.index.MultiDocValues$OrdinalMap: java.lang.Object owner>;

        $r25 = virtualinvoke r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: java.lang.Object getCoreCacheKey()>();

        if $r24 != $r25 goto label02;

        $r26 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: java.util.Map cachedOrdMaps>;

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r29);

     label02:
        exitmonitor $r1;

     label03:
        return $r22;

     label04:
        exitmonitor $r1;

     label05:
        goto label08;

     label06:
        $r27 := @caughtexception;

        exitmonitor $r1;

     label07:
        throw $r27;

     label08:
        $r5 = virtualinvoke r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.index.FieldInfos getFieldInfos()>();

        $r6 = virtualinvoke $r5.<org.apache.lucene.index.FieldInfos: org.apache.lucene.index.FieldInfo fieldInfo(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$DocValuesType getDocValuesType()>();

        $r8 = <org.apache.lucene.index.FieldInfo$DocValuesType: org.apache.lucene.index.FieldInfo$DocValuesType SORTED_SET>;

        if $r7 == $r8 goto label09;

        return null;

     label09:
        $z0 = <org.apache.lucene.index.SlowCompositeReaderWrapper: boolean $assertionsDisabled>;

        if $z0 != 0 goto label10;

        if r28 != null goto label10;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label10:
        $r9 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.index.CompositeReader in>;

        $r10 = virtualinvoke $r9.<org.apache.lucene.index.CompositeReader: java.util.List leaves()>();

        $i0 = interfaceinvoke $r10.<java.util.List: int size()>();

        $r18 = newarray (org.apache.lucene.index.SortedSetDocValues)[$i0];

        $i1 = $i0 + 1;

        $r19 = newarray (int)[$i1];

        i4 = 0;

     label11:
        if i4 >= $i0 goto label13;

        $r12 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.index.CompositeReader in>;

        $r13 = virtualinvoke $r12.<org.apache.lucene.index.CompositeReader: java.util.List leaves()>();

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i4);

        r15 = (org.apache.lucene.index.AtomicReaderContext) $r14;

        $r16 = virtualinvoke r15.<org.apache.lucene.index.AtomicReaderContext: org.apache.lucene.index.AtomicReader reader()>();

        $r17 = virtualinvoke $r16.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.SortedSetDocValues getSortedSetDocValues(java.lang.String)>(r2);

        r30 = $r17;

        if $r17 != null goto label12;

        r30 = <org.apache.lucene.index.SortedSetDocValues: org.apache.lucene.index.SortedSetDocValues EMPTY>;

     label12:
        $r18[i4] = r30;

        $i3 = r15.<org.apache.lucene.index.AtomicReaderContext: int docBase>;

        $r19[i4] = $i3;

        i4 = i4 + 1;

        goto label11;

     label13:
        $i2 = virtualinvoke r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: int maxDoc()>();

        $r19[$i0] = $i2;

        $r11 = new org.apache.lucene.index.MultiDocValues$MultiSortedSetDocValues;

        specialinvoke $r11.<org.apache.lucene.index.MultiDocValues$MultiSortedSetDocValues: void <init>(org.apache.lucene.index.SortedSetDocValues[],int[],org.apache.lucene.index.MultiDocValues$OrdinalMap)>($r18, $r19, r28);

        return $r11;

        catch java.lang.Throwable from label01 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

    public org.apache.lucene.index.NumericDocValues getNormValues(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.index.SlowCompositeReaderWrapper r0;
        org.apache.lucene.index.CompositeReader $r2;
        org.apache.lucene.index.NumericDocValues $r3;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.index.SlowCompositeReaderWrapper;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.index.CompositeReader in>;

        $r3 = staticinvoke <org.apache.lucene.index.MultiDocValues: org.apache.lucene.index.NumericDocValues getNormValues(org.apache.lucene.index.IndexReader,java.lang.String)>($r2, r1);

        return $r3;
    }

    public org.apache.lucene.index.Fields getTermVectors(int) throws java.io.IOException
    {
        org.apache.lucene.index.SlowCompositeReaderWrapper r0;
        org.apache.lucene.index.CompositeReader $r1;
        int i0;
        org.apache.lucene.index.Fields $r2;

        r0 := @this: org.apache.lucene.index.SlowCompositeReaderWrapper;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: void ensureOpen()>();

        $r1 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.index.CompositeReader in>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.CompositeReader: org.apache.lucene.index.Fields getTermVectors(int)>(i0);

        return $r2;
    }

    public int numDocs()
    {
        int $i0;
        org.apache.lucene.index.SlowCompositeReaderWrapper r0;
        org.apache.lucene.index.CompositeReader $r1;

        r0 := @this: org.apache.lucene.index.SlowCompositeReaderWrapper;

        $r1 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.index.CompositeReader in>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.CompositeReader: int numDocs()>();

        return $i0;
    }

    public int maxDoc()
    {
        int $i0;
        org.apache.lucene.index.SlowCompositeReaderWrapper r0;
        org.apache.lucene.index.CompositeReader $r1;

        r0 := @this: org.apache.lucene.index.SlowCompositeReaderWrapper;

        $r1 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.index.CompositeReader in>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.CompositeReader: int maxDoc()>();

        return $i0;
    }

    public void document(int, org.apache.lucene.index.StoredFieldVisitor) throws java.io.IOException
    {
        org.apache.lucene.index.SlowCompositeReaderWrapper r0;
        org.apache.lucene.index.CompositeReader $r2;
        int i0;
        org.apache.lucene.index.StoredFieldVisitor r1;

        r0 := @this: org.apache.lucene.index.SlowCompositeReaderWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.lucene.index.StoredFieldVisitor;

        virtualinvoke r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: void ensureOpen()>();

        $r2 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.index.CompositeReader in>;

        virtualinvoke $r2.<org.apache.lucene.index.CompositeReader: void document(int,org.apache.lucene.index.StoredFieldVisitor)>(i0, r1);

        return;
    }

    public org.apache.lucene.util.Bits getLiveDocs()
    {
        org.apache.lucene.index.SlowCompositeReaderWrapper r0;
        org.apache.lucene.util.Bits $r1;

        r0 := @this: org.apache.lucene.index.SlowCompositeReaderWrapper;

        virtualinvoke r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: void ensureOpen()>();

        $r1 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.util.Bits liveDocs>;

        return $r1;
    }

    public org.apache.lucene.index.FieldInfos getFieldInfos()
    {
        org.apache.lucene.index.SlowCompositeReaderWrapper r0;
        org.apache.lucene.index.FieldInfos $r2;
        org.apache.lucene.index.CompositeReader $r1;

        r0 := @this: org.apache.lucene.index.SlowCompositeReaderWrapper;

        virtualinvoke r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: void ensureOpen()>();

        $r1 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.index.CompositeReader in>;

        $r2 = staticinvoke <org.apache.lucene.index.MultiFields: org.apache.lucene.index.FieldInfos getMergedFieldInfos(org.apache.lucene.index.IndexReader)>($r1);

        return $r2;
    }

    public java.lang.Object getCoreCacheKey()
    {
        org.apache.lucene.index.SlowCompositeReaderWrapper r0;
        java.lang.Object $r2;
        org.apache.lucene.index.CompositeReader $r1;

        r0 := @this: org.apache.lucene.index.SlowCompositeReaderWrapper;

        $r1 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.index.CompositeReader in>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.CompositeReader: java.lang.Object getCoreCacheKey()>();

        return $r2;
    }

    public java.lang.Object getCombinedCoreAndDeletesKey()
    {
        org.apache.lucene.index.SlowCompositeReaderWrapper r0;
        java.lang.Object $r2;
        org.apache.lucene.index.CompositeReader $r1;

        r0 := @this: org.apache.lucene.index.SlowCompositeReaderWrapper;

        $r1 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.index.CompositeReader in>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.CompositeReader: java.lang.Object getCombinedCoreAndDeletesKey()>();

        return $r2;
    }

    protected void doClose() throws java.io.IOException
    {
        org.apache.lucene.index.SlowCompositeReaderWrapper r0;
        org.apache.lucene.index.CompositeReader $r1;

        r0 := @this: org.apache.lucene.index.SlowCompositeReaderWrapper;

        $r1 = r0.<org.apache.lucene.index.SlowCompositeReaderWrapper: org.apache.lucene.index.CompositeReader in>;

        virtualinvoke $r1.<org.apache.lucene.index.CompositeReader: void close()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/SlowCompositeReaderWrapper;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.SlowCompositeReaderWrapper: boolean $assertionsDisabled> = $z1;

        return;
    }
}
