public final class org.apache.poi.openxml4j.opc.internal.marshallers.ZipPackagePropertiesMarshaller extends org.apache.poi.openxml4j.opc.internal.marshallers.PackagePropertiesMarshaller
{

    public void <init>()
    {
        org.apache.poi.openxml4j.opc.internal.marshallers.ZipPackagePropertiesMarshaller r0;

        r0 := @this: org.apache.poi.openxml4j.opc.internal.marshallers.ZipPackagePropertiesMarshaller;

        specialinvoke r0.<org.apache.poi.openxml4j.opc.internal.marshallers.PackagePropertiesMarshaller: void <init>()>();

        return;
    }

    public boolean marshall(org.apache.poi.openxml4j.opc.PackagePart, java.io.OutputStream) throws org.apache.poi.openxml4j.exceptions.OpenXML4JException
    {
        java.util.zip.ZipOutputStream r1;
        org.w3c.dom.Document $r9;
        org.apache.poi.openxml4j.opc.PackagePart r3;
        java.net.URI $r5;
        java.lang.String $r6, $r7, $r13;
        java.util.zip.ZipEntry $r2;
        boolean $z0, $z1;
        java.io.OutputStream r0;
        org.apache.poi.openxml4j.opc.PackagePartName $r4;
        org.apache.poi.openxml4j.exceptions.OpenXML4JException $r12;
        org.apache.poi.openxml4j.opc.internal.marshallers.ZipPackagePropertiesMarshaller r8;
        java.io.IOException $r11;
        java.lang.IllegalArgumentException $r10;

        r8 := @this: org.apache.poi.openxml4j.opc.internal.marshallers.ZipPackagePropertiesMarshaller;

        r3 := @parameter0: org.apache.poi.openxml4j.opc.PackagePart;

        r0 := @parameter1: java.io.OutputStream;

        $z0 = r0 instanceof java.util.zip.ZipOutputStream;

        if $z0 != 0 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ZipOutputStream expected!");

        throw $r10;

     label1:
        r1 = (java.util.zip.ZipOutputStream) r0;

        $r2 = new java.util.zip.ZipEntry;

        $r4 = virtualinvoke r3.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePartName getPartName()>();

        $r5 = virtualinvoke $r4.<org.apache.poi.openxml4j.opc.PackagePartName: java.net.URI getURI()>();

        $r6 = virtualinvoke $r5.<java.net.URI: java.lang.String toString()>();

        $r7 = staticinvoke <org.apache.poi.openxml4j.opc.internal.ZipHelper: java.lang.String getZipItemNameFromOPCName(java.lang.String)>($r6);

        specialinvoke $r2.<java.util.zip.ZipEntry: void <init>(java.lang.String)>($r7);

     label2:
        virtualinvoke r1.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>($r2);

        specialinvoke r8.<org.apache.poi.openxml4j.opc.internal.marshallers.PackagePropertiesMarshaller: boolean marshall(org.apache.poi.openxml4j.opc.PackagePart,java.io.OutputStream)>(r3, r0);

        $r9 = r8.<org.apache.poi.openxml4j.opc.internal.marshallers.ZipPackagePropertiesMarshaller: org.w3c.dom.Document xmlDoc>;

        $z1 = staticinvoke <org.apache.poi.openxml4j.opc.StreamHelper: boolean saveXmlInStream(org.w3c.dom.Document,java.io.OutputStream)>($r9, r0);

        if $z1 != 0 goto label4;

     label3:
        return 0;

     label4:
        virtualinvoke r1.<java.util.zip.ZipOutputStream: void closeEntry()>();

     label5:
        goto label7;

     label6:
        $r11 := @caughtexception;

        $r12 = new org.apache.poi.openxml4j.exceptions.OpenXML4JException;

        $r13 = virtualinvoke $r11.<java.io.IOException: java.lang.String getLocalizedMessage()>();

        specialinvoke $r12.<org.apache.poi.openxml4j.exceptions.OpenXML4JException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label7:
        return 1;

        catch java.io.IOException from label2 to label3 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }
}
