public class org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt extends org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage
{
    private static final java.util.List FAX_FILTERS;

    public void <init>(org.apache.pdfbox.pdmodel.common.PDStream)
    {
        org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt r0;
        org.apache.pdfbox.pdmodel.common.PDStream r1;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.common.PDStream;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: void <init>(org.apache.pdfbox.pdmodel.common.PDStream,java.lang.String)>(r1, "tiff");

        return;
    }

    public void <init>(org.apache.pdfbox.pdmodel.PDDocument, org.apache.pdfbox.io.RandomAccess, int) throws java.io.IOException, java.lang.IllegalArgumentException
    {
        org.apache.pdfbox.io.RandomAccess r5;
        int i0, $i1, $i2;
        org.apache.pdfbox.cos.COSStream $r4, $r6;
        java.io.OutputStream $r7;
        org.apache.pdfbox.cos.COSName $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r17;
        org.apache.pdfbox.pdmodel.PDDocument r2;
        org.apache.pdfbox.pdmodel.common.PDStream $r1;
        org.apache.pdfbox.cos.COSDictionary $r3;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt r0;
        org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray $r15;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt;

        r2 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        r5 := @parameter1: org.apache.pdfbox.io.RandomAccess;

        i0 := @parameter2: int;

        $r1 = new org.apache.pdfbox.pdmodel.common.PDStream;

        specialinvoke $r1.<org.apache.pdfbox.pdmodel.common.PDStream: void <init>(org.apache.pdfbox.pdmodel.PDDocument)>(r2);

        specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: void <init>(org.apache.pdfbox.pdmodel.common.PDStream,java.lang.String)>($r1, "tiff");

        $r3 = new org.apache.pdfbox.cos.COSDictionary;

        specialinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void <init>()>();

        $r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: org.apache.pdfbox.cos.COSStream getCOSStream()>();

        $r6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: org.apache.pdfbox.cos.COSStream getCOSStream()>();

        $r7 = virtualinvoke $r6.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createFilteredStream()>();

        specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: void extractFromTiff(org.apache.pdfbox.io.RandomAccess,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)>(r5, $r7, $r3, i0);

        $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FILTER>;

        $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CCITTFAX_DECODE>;

        virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r9, $r8);

        $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SUBTYPE>;

        $r10 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName IMAGE>;

        virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r11, $r10);

        $r13 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE>;

        $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName XOBJECT>;

        virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r13, $r12);

        $r14 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DECODE_PARMS>;

        virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r14, $r3);

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: void setBitsPerComponent(int)>(1);

        $r15 = new org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray;

        specialinvoke $r15.<org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray: void <init>()>();

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: void setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>($r15);

        $r16 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COLUMNS>;

        $i1 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName)>($r16);

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: void setWidth(int)>($i1);

        $r17 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ROWS>;

        $i2 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName)>($r17);

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: void setHeight(int)>($i2);

        return;
    }

    public void <init>(org.apache.pdfbox.pdmodel.PDDocument, org.apache.pdfbox.io.RandomAccess) throws java.io.IOException
    {
        org.apache.pdfbox.io.RandomAccess r2;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt r0;
        org.apache.pdfbox.pdmodel.PDDocument r1;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        r2 := @parameter1: org.apache.pdfbox.io.RandomAccess;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccess,int)>(r1, r2, 0);

        return;
    }

    public java.awt.image.BufferedImage getRGBImage() throws java.io.IOException
    {
        byte[] $r4, $r8, $r12, $r17, $r21;
        java.awt.image.DataBufferByte $r16, $r20, $r24;
        java.awt.image.IndexColorModel $r5, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.awt.image.BufferedImage $r10, $r22, r40, $r41;
        org.apache.pdfbox.cos.COSDictionary r29;
        org.apache.pdfbox.pdmodel.graphics.color.PDIndexed r38;
        org.apache.pdfbox.cos.COSBase $r3, $r23, $r26, $r27, $r33;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt r0;
        java.awt.image.DataBuffer $r7, $r15, $r19;
        org.apache.pdfbox.cos.COSArray $r11, $r25, r30, $r32;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, i11, $i12;
        java.awt.image.Raster $r18;
        org.apache.pdfbox.cos.COSStream $r1;
        org.apache.pdfbox.cos.COSName $r2, $r28, r31, $r34, $r35, $r36;
        org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace $r37;
        java.awt.image.ColorModel r39;
        java.awt.image.WritableRaster $r6, $r14;
        java.io.InputStream $r9;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: org.apache.pdfbox.cos.COSStream getCOSStream()>();

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DECODE_PARMS>;

        $r3 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2);

        r29 = null;

        $z0 = $r3 instanceof org.apache.pdfbox.cos.COSDictionary;

        if $z0 == 0 goto label01;

        r29 = (org.apache.pdfbox.cos.COSDictionary) $r3;

        goto label05;

     label01:
        $z1 = $r3 instanceof org.apache.pdfbox.cos.COSArray;

        if $z1 == 0 goto label05;

        i7 = 0;

        $r26 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getFilters()>();

        $z3 = $r26 instanceof org.apache.pdfbox.cos.COSArray;

        if $z3 == 0 goto label04;

        r30 = (org.apache.pdfbox.cos.COSArray) $r26;

     label02:
        $i6 = virtualinvoke r30.<org.apache.pdfbox.cos.COSArray: int size()>();

        if i7 >= $i6 goto label04;

        $r27 = virtualinvoke r30.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(i7);

        r31 = (org.apache.pdfbox.cos.COSName) $r27;

        $r28 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CCITTFAX_DECODE>;

        $z4 = virtualinvoke $r28.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r31);

        if $z4 == 0 goto label03;

        goto label04;

     label03:
        i7 = i7 + 1;

        goto label02;

     label04:
        $r32 = (org.apache.pdfbox.cos.COSArray) $r3;

        $r33 = virtualinvoke $r32.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase getObject(int)>(i7);

        r29 = (org.apache.pdfbox.cos.COSDictionary) $r33;

     label05:
        $r34 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COLUMNS>;

        $i8 = virtualinvoke r29.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>($r34, 1728);

        $r35 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ROWS>;

        $i9 = virtualinvoke r29.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName,int)>($r35, 0);

        $r36 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName HEIGHT>;

        $i10 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSStream: int getInt(org.apache.pdfbox.cos.COSName,int)>($r36, 0);

        if $i9 <= 0 goto label06;

        if $i10 <= 0 goto label06;

        i11 = staticinvoke <java.lang.Math: int min(int,int)>($i9, $i10);

        goto label07;

     label06:
        i11 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i10);

     label07:
        $r37 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>();

        $z5 = $r37 instanceof org.apache.pdfbox.pdmodel.graphics.color.PDIndexed;

        if $z5 == 0 goto label10;

        r38 = (org.apache.pdfbox.pdmodel.graphics.color.PDIndexed) $r37;

        $r23 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: org.apache.pdfbox.cos.COSBase getMask()>();

        if $r23 == null goto label08;

        $z2 = $r23 instanceof org.apache.pdfbox.cos.COSArray;

        if $z2 == 0 goto label08;

        $r25 = (org.apache.pdfbox.cos.COSArray) $r23;

        $i5 = virtualinvoke $r25.<org.apache.pdfbox.cos.COSArray: int getInt(int)>(0);

        r39 = virtualinvoke r38.<org.apache.pdfbox.pdmodel.graphics.color.PDIndexed: java.awt.image.ColorModel createColorModel(int,int)>(1, $i5);

        goto label09;

     label08:
        r39 = virtualinvoke r38.<org.apache.pdfbox.pdmodel.graphics.color.PDIndexed: java.awt.image.ColorModel createColorModel(int)>(1);

     label09:
        goto label11;

     label10:
        $r4 = newarray (byte)[2];

        $r4[0] = 0;

        $r4[1] = -1;

        $r5 = new java.awt.image.IndexColorModel;

        $i0 = lengthof $r4;

        specialinvoke $r5.<java.awt.image.IndexColorModel: void <init>(int,int,byte[],byte[],byte[],int)>(1, $i0, $r4, $r4, $r4, 1);

        r39 = $r5;

     label11:
        $r6 = virtualinvoke r39.<java.awt.image.ColorModel: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>($i8, i11);

        $r7 = virtualinvoke $r6.<java.awt.image.WritableRaster: java.awt.image.DataBuffer getDataBuffer()>();

        $r24 = (java.awt.image.DataBufferByte) $r7;

        $r8 = virtualinvoke $r24.<java.awt.image.DataBufferByte: byte[] getData()>();

        $r9 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSStream: java.io.InputStream getUnfilteredStream()>();

        staticinvoke <org.apache.pdfbox.io.IOUtils: long populateBuffer(java.io.InputStream,byte[])>($r9, $r8);

        staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.InputStream)>($r9);

        $r10 = new java.awt.image.BufferedImage;

        specialinvoke $r10.<java.awt.image.BufferedImage: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)>(r39, $r6, 0, null);

        r40 = $r10;

        $r11 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: org.apache.pdfbox.cos.COSArray getDecode()>();

        if $r11 == null goto label12;

        $i4 = virtualinvoke $r11.<org.apache.pdfbox.cos.COSArray: int getInt(int)>(0);

        if $i4 != 1 goto label12;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: void invertBitmap(byte[])>($r8);

     label12:
        $z6 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: boolean hasMask()>();

        if $z6 == 0 goto label15;

        $r12 = newarray (byte)[2];

        $r12[0] = 0;

        $r12[1] = -1;

        $r13 = new java.awt.image.IndexColorModel;

        $i1 = lengthof $r12;

        specialinvoke $r13.<java.awt.image.IndexColorModel: void <init>(int,int,byte[],byte[],byte[],int)>(1, $i1, $r12, $r12, $r12, 1);

        $r14 = virtualinvoke $r13.<java.awt.image.IndexColorModel: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>($i8, i11);

        $r15 = virtualinvoke $r14.<java.awt.image.WritableRaster: java.awt.image.DataBuffer getDataBuffer()>();

        $r16 = (java.awt.image.DataBufferByte) $r15;

        $r17 = virtualinvoke $r16.<java.awt.image.DataBufferByte: byte[] getData()>();

        $r18 = virtualinvoke $r10.<java.awt.image.BufferedImage: java.awt.image.Raster getData()>();

        $r19 = virtualinvoke $r18.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        $r20 = (java.awt.image.DataBufferByte) $r19;

        $r21 = virtualinvoke $r20.<java.awt.image.DataBufferByte: byte[] getData()>();

        $i3 = lengthof $r21;

        $i2 = lengthof $r17;

        if $i3 >= $i2 goto label13;

        $i12 = lengthof $r21;

        goto label14;

     label13:
        $i12 = lengthof $r17;

     label14:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r21, 0, $r17, 0, $i12);

        $r22 = new java.awt.image.BufferedImage;

        specialinvoke $r22.<java.awt.image.BufferedImage: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)>($r13, $r14, 0, null);

        r40 = $r22;

     label15:
        $r41 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: java.awt.image.BufferedImage applyMasks(java.awt.image.BufferedImage)>(r40);

        return $r41;
    }

    private void invertBitmap(byte[])
    {
        byte[] r0;
        short $s3, $s6;
        byte $b1, $b2, $b4;
        int i0, i5;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt r1;

        r1 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt;

        r0 := @parameter0: byte[];

        i5 = 0;

        i0 = lengthof r0;

     label1:
        if i5 >= i0 goto label2;

        $b1 = r0[i5];

        $b2 = $b1 ^ -1;

        $s6 = (short) $b2;

        $s3 = $s6 & 255;

        $b4 = (byte) $s3;

        r0[i5] = $b4;

        i5 = i5 + 1;

        goto label1;

     label2:
        return;
    }

    public void write2OutputStream(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r6;
        java.util.List $r3;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt$TiffWrapper $r0;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt r1;
        org.apache.pdfbox.pdmodel.common.PDStream $r2;
        org.apache.pdfbox.cos.COSStream $r5;
        java.io.InputStream $r4;

        r1 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt;

        r6 := @parameter0: java.io.OutputStream;

        $r0 = new org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt$TiffWrapper;

        $r2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: org.apache.pdfbox.pdmodel.common.PDStream getPDStream()>();

        $r3 = <org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: java.util.List FAX_FILTERS>;

        $r4 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.common.PDStream: java.io.InputStream getPartiallyFilteredStream(java.util.List)>($r3);

        $r5 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: org.apache.pdfbox.cos.COSStream getCOSStream()>();

        specialinvoke $r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt$TiffWrapper: void <init>(org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt,java.io.InputStream,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt$1)>(r1, $r4, $r5, null);

        staticinvoke <org.apache.pdfbox.io.IOUtils: long copy(java.io.InputStream,java.io.OutputStream)>($r0, r6);

        staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.InputStream)>($r0);

        return;
    }

    private void extractFromTiff(org.apache.pdfbox.io.RandomAccess, java.io.OutputStream, org.apache.pdfbox.cos.COSDictionary, int) throws java.io.IOException, java.lang.IllegalArgumentException
    {
        byte[] r24;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt r1;
        java.lang.StringBuilder $r15, $r16, $r17, $r29;
        java.lang.Throwable $r23;
        long $l6, $l9, $l23, $l25;
        short s28, s33, s34;
        java.lang.String $r18;
        java.io.IOException $r25, $r26, $r27, $r28, $r31, $r32, $r33, $r34, $r35;
        org.apache.pdfbox.io.RandomAccess r0;
        org.apache.pdfbox.cos.COSDictionary r2;
        int $i0, $i2, $i4, $i5, i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i24, i26, i27, i29, i30, i31, i32, $i35, $i36, $i37, $i38, $i39, $i41;
        org.apache.pdfbox.cos.COSName $r3, $r9, $r10, $r11;
        java.io.OutputStream r4;
        char c1, $c3;
        java.lang.IllegalArgumentException $r30;

        r1 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt;

        r0 := @parameter0: org.apache.pdfbox.io.RandomAccess;

        r4 := @parameter1: java.io.OutputStream;

        r2 := @parameter2: org.apache.pdfbox.cos.COSDictionary;

        i7 := @parameter3: int;

     label01:
        interfaceinvoke r0.<org.apache.pdfbox.io.RandomAccess: void seek(long)>(0L);

        $i0 = interfaceinvoke r0.<org.apache.pdfbox.io.RandomAccess: int read()>();

        c1 = (char) $i0;

        $i2 = interfaceinvoke r0.<org.apache.pdfbox.io.RandomAccess: int read()>();

        $c3 = (char) $i2;

        $i35 = (int) $c3;

        $i36 = (int) c1;

        if $i35 == $i36 goto label02;

        $r25 = new java.io.IOException;

        specialinvoke $r25.<java.io.IOException: void <init>(java.lang.String)>("Not a valid tiff file");

        throw $r25;

     label02:
        $i37 = (int) c1;

        if $i37 == 77 goto label03;

        $i38 = (int) c1;

        if $i38 == 73 goto label03;

        $r26 = new java.io.IOException;

        specialinvoke $r26.<java.io.IOException: void <init>(java.lang.String)>("Not a valid tiff file");

        throw $r26;

     label03:
        $i4 = specialinvoke r1.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: int readshort(char,org.apache.pdfbox.io.RandomAccess)>(c1, r0);

        if $i4 == 42 goto label04;

        $r27 = new java.io.IOException;

        specialinvoke $r27.<java.io.IOException: void <init>(java.lang.String)>("Not a valid tiff file");

        throw $r27;

     label04:
        $i5 = specialinvoke r1.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: int readlong(char,org.apache.pdfbox.io.RandomAccess)>(c1, r0);

        i26 = $i5;

        $l6 = (long) $i5;

        interfaceinvoke r0.<org.apache.pdfbox.io.RandomAccess: void seek(long)>($l6);

        i27 = 0;

     label05:
        if i27 >= i7 goto label08;

        $i19 = specialinvoke r1.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: int readshort(char,org.apache.pdfbox.io.RandomAccess)>(c1, r0);

        if $i19 <= 50 goto label06;

        $r28 = new java.io.IOException;

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>("Not a valid tiff file");

        throw $r28;

     label06:
        $i21 = i26 + 2;

        $i20 = $i19 * 12;

        $i22 = $i21 + $i20;

        $l23 = (long) $i22;

        interfaceinvoke r0.<org.apache.pdfbox.io.RandomAccess: void seek(long)>($l23);

        $i24 = specialinvoke r1.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: int readlong(char,org.apache.pdfbox.io.RandomAccess)>(c1, r0);

        i26 = $i24;

        if $i24 != 0 goto label07;

        $r30 = new java.lang.IllegalArgumentException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Image number ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r30;

     label07:
        $l25 = (long) $i24;

        interfaceinvoke r0.<org.apache.pdfbox.io.RandomAccess: void seek(long)>($l25);

        i27 = i27 + 1;

        goto label05;

     label08:
        $i8 = specialinvoke r1.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: int readshort(char,org.apache.pdfbox.io.RandomAccess)>(c1, r0);

        if $i8 <= 50 goto label09;

        $r31 = new java.io.IOException;

        specialinvoke $r31.<java.io.IOException: void <init>(java.lang.String)>("Not a valid tiff file");

        throw $r31;

     label09:
        s28 = -1000;

        s34 = -1000;

        s33 = -1000;

        i29 = 0;

        i30 = 0;

        i31 = 0;

     label10:
        if i31 >= $i8 goto label28;

        $i12 = specialinvoke r1.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: int readshort(char,org.apache.pdfbox.io.RandomAccess)>(c1, r0);

        $i13 = specialinvoke r1.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: int readshort(char,org.apache.pdfbox.io.RandomAccess)>(c1, r0);

        $i14 = specialinvoke r1.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: int readlong(char,org.apache.pdfbox.io.RandomAccess)>(c1, r0);

        $i15 = specialinvoke r1.<org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: int readlong(char,org.apache.pdfbox.io.RandomAccess)>(c1, r0);

        i32 = $i15;

        $i39 = (int) c1;

        if $i39 != 77 goto label14;

        tableswitch($i13)
        {
            case 1: goto label11;
            case 2: goto label14;
            case 3: goto label12;
            case 4: goto label13;
            default: goto label14;
        };

     label11:
        i32 = $i15 >> 24;

        goto label14;

     label12:
        i32 = $i15 >> 16;

        goto label14;

     label13:
        goto label14;

     label14:
        lookupswitch($i12)
        {
            case 256: goto label15;
            case 257: goto label16;
            case 259: goto label17;
            case 262: goto label19;
            case 273: goto label20;
            case 279: goto label21;
            case 292: goto label22;
            case 324: goto label25;
            case 325: goto label26;
            default: goto label27;
        };

     label15:
        $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COLUMNS>;

        virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r11, i32);

        goto label27;

     label16:
        $r10 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ROWS>;

        virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r10, i32);

        goto label27;

     label17:
        if i32 != 4 goto label18;

        s28 = -1;

        s34 = -1;

        s33 = -1;

     label18:
        if i32 != 3 goto label27;

        s28 = 0;

        s34 = 0;

        s33 = 0;

        goto label27;

     label19:
        if i32 != 1 goto label27;

        $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BLACK_IS_1>;

        virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: void setBoolean(org.apache.pdfbox.cos.COSName,boolean)>($r9, 1);

        goto label27;

     label20:
        if $i14 != 1 goto label27;

        i29 = i32;

        goto label27;

     label21:
        if $i14 != 1 goto label27;

        i30 = i32;

        goto label27;

     label22:
        $i16 = i32 & 1;

        if $i16 == 0 goto label23;

        s28 = 50;

        s34 = 50;

        s33 = 50;

     label23:
        $i17 = i32 & 4;

        if $i17 == 0 goto label24;

        $r32 = new java.io.IOException;

        specialinvoke $r32.<java.io.IOException: void <init>(java.lang.String)>("CCITT Group 3 \'uncompressed mode\' is not supported");

        throw $r32;

     label24:
        $i18 = i32 & 2;

        if $i18 == 0 goto label27;

        $r33 = new java.io.IOException;

        specialinvoke $r33.<java.io.IOException: void <init>(java.lang.String)>("CCITT Group 3 \'fill bits before EOL\' is not supported");

        throw $r33;

     label25:
        if $i14 != 1 goto label27;

        i29 = i32;

        goto label27;

     label26:
        if $i14 != 1 goto label27;

        i30 = i32;

        goto label27;

     label27:
        i31 = i31 + 1;

        goto label10;

     label28:
        $i41 = (int) -1000;

        if s33 != $i41 goto label29;

        $r34 = new java.io.IOException;

        specialinvoke $r34.<java.io.IOException: void <init>(java.lang.String)>("First image in tiff is not CCITT T4 or T6 compressed");

        throw $r34;

     label29:
        if i29 != 0 goto label30;

        $r35 = new java.io.IOException;

        specialinvoke $r35.<java.io.IOException: void <init>(java.lang.String)>("First image in tiff is not a single tile/strip");

        throw $r35;

     label30:
        $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName K>;

        virtualinvoke r2.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r3, s34);

        $l9 = (long) i29;

        interfaceinvoke r0.<org.apache.pdfbox.io.RandomAccess: void seek(long)>($l9);

        r24 = newarray (byte)[8192];

     label31:
        $i10 = staticinvoke <java.lang.Math: int min(int,int)>(8192, i30);

        $i11 = interfaceinvoke r0.<org.apache.pdfbox.io.RandomAccess: int read(byte[],int,int)>(r24, 0, $i10);

        if $i11 <= 0 goto label32;

        i30 = i30 - $i11;

        virtualinvoke r4.<java.io.OutputStream: void write(byte[],int,int)>(r24, 0, $i11);

        goto label31;

     label32:
        goto label37;

     label33:
        goto label36;

     label34:
        $r23 := @caughtexception;

        goto label38;

     label35:
        throw $r23;

     label36:
        return;

     label37:
        virtualinvoke r4.<java.io.OutputStream: void close()>();

        goto label33;

     label38:
        virtualinvoke r4.<java.io.OutputStream: void close()>();

        goto label35;

        catch java.lang.Throwable from label01 to label33 with label34;
        catch java.lang.Throwable from label34 to label35 with label34;
    }

    private int readshort(char, org.apache.pdfbox.io.RandomAccess) throws java.io.IOException
    {
        char c0;
        org.apache.pdfbox.io.RandomAccess r0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt r1;

        r1 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt;

        c0 := @parameter0: char;

        r0 := @parameter1: org.apache.pdfbox.io.RandomAccess;

        $i9 = (int) c0;

        if $i9 != 73 goto label1;

        $i5 = interfaceinvoke r0.<org.apache.pdfbox.io.RandomAccess: int read()>();

        $i6 = interfaceinvoke r0.<org.apache.pdfbox.io.RandomAccess: int read()>();

        $i7 = $i6 << 8;

        $i8 = $i5 | $i7;

        return $i8;

     label1:
        $i1 = interfaceinvoke r0.<org.apache.pdfbox.io.RandomAccess: int read()>();

        $i2 = $i1 << 8;

        $i3 = interfaceinvoke r0.<org.apache.pdfbox.io.RandomAccess: int read()>();

        $i4 = $i2 | $i3;

        return $i4;
    }

    private int readlong(char, org.apache.pdfbox.io.RandomAccess) throws java.io.IOException
    {
        org.apache.pdfbox.io.RandomAccess r0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        char c0;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt r1;

        r1 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt;

        c0 := @parameter0: char;

        r0 := @parameter1: org.apache.pdfbox.io.RandomAccess;

        $i21 = (int) c0;

        if $i21 != 73 goto label1;

        $i11 = interfaceinvoke r0.<org.apache.pdfbox.io.RandomAccess: int read()>();

        $i12 = interfaceinvoke r0.<org.apache.pdfbox.io.RandomAccess: int read()>();

        $i13 = $i12 << 8;

        $i14 = $i11 | $i13;

        $i15 = interfaceinvoke r0.<org.apache.pdfbox.io.RandomAccess: int read()>();

        $i16 = $i15 << 16;

        $i17 = $i14 | $i16;

        $i18 = interfaceinvoke r0.<org.apache.pdfbox.io.RandomAccess: int read()>();

        $i19 = $i18 << 24;

        $i20 = $i17 | $i19;

        return $i20;

     label1:
        $i1 = interfaceinvoke r0.<org.apache.pdfbox.io.RandomAccess: int read()>();

        $i2 = $i1 << 24;

        $i3 = interfaceinvoke r0.<org.apache.pdfbox.io.RandomAccess: int read()>();

        $i4 = $i3 << 16;

        $i5 = $i2 | $i4;

        $i6 = interfaceinvoke r0.<org.apache.pdfbox.io.RandomAccess: int read()>();

        $i7 = $i6 << 8;

        $i8 = $i5 | $i7;

        $i9 = interfaceinvoke r0.<org.apache.pdfbox.io.RandomAccess: int read()>();

        $i10 = $i8 | $i9;

        return $i10;
    }

    static void <clinit>()
    {
        org.apache.pdfbox.cos.COSName $r1, $r4;
        java.util.List $r2, $r5;
        java.lang.String $r3, $r6;
        java.util.ArrayList $r0;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        <org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: java.util.List FAX_FILTERS> = $r0;

        $r2 = <org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: java.util.List FAX_FILTERS>;

        $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CCITTFAX_DECODE>;

        $r3 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r5 = <org.apache.pdfbox.pdmodel.graphics.xobject.PDCcitt: java.util.List FAX_FILTERS>;

        $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CCITTFAX_DECODE_ABBREVIATION>;

        $r6 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

        return;
    }
}
