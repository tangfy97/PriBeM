public abstract class org.apache.batik.svggen.font.table.GlyfDescript extends org.apache.batik.svggen.font.table.Program implements org.apache.batik.svggen.font.table.GlyphDescription
{
    public static final byte onCurve;
    public static final byte xShortVector;
    public static final byte yShortVector;
    public static final byte repeat;
    public static final byte xDual;
    public static final byte yDual;
    protected org.apache.batik.svggen.font.table.GlyfTable parentTable;
    private int numberOfContours;
    private short xMin;
    private short yMin;
    private short xMax;
    private short yMax;

    protected void <init>(org.apache.batik.svggen.font.table.GlyfTable, short, java.io.ByteArrayInputStream)
    {
        org.apache.batik.svggen.font.table.GlyfDescript r0;
        short s0, $s5, $s10, $s15, $s20;
        java.io.ByteArrayInputStream r2;
        int $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i21;
        org.apache.batik.svggen.font.table.GlyfTable r1;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfDescript;

        r1 := @parameter0: org.apache.batik.svggen.font.table.GlyfTable;

        s0 := @parameter1: short;

        r2 := @parameter2: java.io.ByteArrayInputStream;

        specialinvoke r0.<org.apache.batik.svggen.font.table.Program: void <init>()>();

        r0.<org.apache.batik.svggen.font.table.GlyfDescript: org.apache.batik.svggen.font.table.GlyfTable parentTable> = r1;

        $i21 = (int) s0;

        r0.<org.apache.batik.svggen.font.table.GlyfDescript: int numberOfContours> = $i21;

        $i1 = virtualinvoke r2.<java.io.ByteArrayInputStream: int read()>();

        $i2 = $i1 << 8;

        $i3 = virtualinvoke r2.<java.io.ByteArrayInputStream: int read()>();

        $i4 = $i2 | $i3;

        $s5 = (short) $i4;

        r0.<org.apache.batik.svggen.font.table.GlyfDescript: short xMin> = $s5;

        $i6 = virtualinvoke r2.<java.io.ByteArrayInputStream: int read()>();

        $i7 = $i6 << 8;

        $i8 = virtualinvoke r2.<java.io.ByteArrayInputStream: int read()>();

        $i9 = $i7 | $i8;

        $s10 = (short) $i9;

        r0.<org.apache.batik.svggen.font.table.GlyfDescript: short yMin> = $s10;

        $i11 = virtualinvoke r2.<java.io.ByteArrayInputStream: int read()>();

        $i12 = $i11 << 8;

        $i13 = virtualinvoke r2.<java.io.ByteArrayInputStream: int read()>();

        $i14 = $i12 | $i13;

        $s15 = (short) $i14;

        r0.<org.apache.batik.svggen.font.table.GlyfDescript: short xMax> = $s15;

        $i16 = virtualinvoke r2.<java.io.ByteArrayInputStream: int read()>();

        $i17 = $i16 << 8;

        $i18 = virtualinvoke r2.<java.io.ByteArrayInputStream: int read()>();

        $i19 = $i17 | $i18;

        $s20 = (short) $i19;

        r0.<org.apache.batik.svggen.font.table.GlyfDescript: short yMax> = $s20;

        return;
    }

    public void resolve()
    {
        org.apache.batik.svggen.font.table.GlyfDescript r0;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfDescript;

        return;
    }

    public int getNumberOfContours()
    {
        int $i0;
        org.apache.batik.svggen.font.table.GlyfDescript r0;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfDescript;

        $i0 = r0.<org.apache.batik.svggen.font.table.GlyfDescript: int numberOfContours>;

        return $i0;
    }

    public short getXMaximum()
    {
        org.apache.batik.svggen.font.table.GlyfDescript r0;
        short $s0;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfDescript;

        $s0 = r0.<org.apache.batik.svggen.font.table.GlyfDescript: short xMax>;

        return $s0;
    }

    public short getXMinimum()
    {
        org.apache.batik.svggen.font.table.GlyfDescript r0;
        short $s0;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfDescript;

        $s0 = r0.<org.apache.batik.svggen.font.table.GlyfDescript: short xMin>;

        return $s0;
    }

    public short getYMaximum()
    {
        org.apache.batik.svggen.font.table.GlyfDescript r0;
        short $s0;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfDescript;

        $s0 = r0.<org.apache.batik.svggen.font.table.GlyfDescript: short yMax>;

        return $s0;
    }

    public short getYMinimum()
    {
        org.apache.batik.svggen.font.table.GlyfDescript r0;
        short $s0;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfDescript;

        $s0 = r0.<org.apache.batik.svggen.font.table.GlyfDescript: short yMin>;

        return $s0;
    }

    public abstract int getContourCount();

    public abstract int getPointCount();

    public abstract boolean isComposite();

    public abstract short getYCoordinate(int);

    public abstract short getXCoordinate(int);

    public abstract byte getFlags(int);

    public abstract int getEndPtOfContours(int);

    public static void <clinit>()
    {
        <org.apache.batik.svggen.font.table.GlyfDescript: byte yDual> = 32;

        <org.apache.batik.svggen.font.table.GlyfDescript: byte xDual> = 16;

        <org.apache.batik.svggen.font.table.GlyfDescript: byte repeat> = 8;

        <org.apache.batik.svggen.font.table.GlyfDescript: byte yShortVector> = 4;

        <org.apache.batik.svggen.font.table.GlyfDescript: byte xShortVector> = 2;

        <org.apache.batik.svggen.font.table.GlyfDescript: byte onCurve> = 1;

        return;
    }
}
