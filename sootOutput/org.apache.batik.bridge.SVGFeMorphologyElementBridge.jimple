public class org.apache.batik.bridge.SVGFeMorphologyElementBridge extends org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge
{

    public void <init>()
    {
        org.apache.batik.bridge.SVGFeMorphologyElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGFeMorphologyElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: void <init>()>();

        return;
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.bridge.SVGFeMorphologyElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGFeMorphologyElementBridge;

        return "feMorphology";
    }

    public org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.w3c.dom.Element, org.apache.batik.gvt.GraphicsNode, org.apache.batik.ext.awt.image.renderable.Filter, java.awt.geom.Rectangle2D, java.util.Map)
    {
        org.apache.batik.bridge.SVGFeMorphologyElementBridge r16;
        java.awt.geom.Rectangle2D $r8, r9, $r10;
        float[] $r2;
        org.apache.batik.ext.awt.image.PadMode $r12, $r15;
        byte $b0, $b1;
        java.util.Map r6;
        boolean $z0;
        double $d0, $d1;
        org.apache.batik.gvt.GraphicsNode r4;
        org.apache.batik.bridge.BridgeContext r1;
        org.apache.batik.ext.awt.image.renderable.Filter r5, $r7;
        org.apache.batik.ext.awt.image.renderable.PadRable8Bit $r11, $r14;
        org.w3c.dom.Element r0, r3;
        float $f0, $f1, $f2, $f3;
        org.apache.batik.ext.awt.image.renderable.MorphologyRable8Bit $r13;

        r16 := @this: org.apache.batik.bridge.SVGFeMorphologyElementBridge;

        r1 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r0 := @parameter1: org.w3c.dom.Element;

        r3 := @parameter2: org.w3c.dom.Element;

        r4 := @parameter3: org.apache.batik.gvt.GraphicsNode;

        r5 := @parameter4: org.apache.batik.ext.awt.image.renderable.Filter;

        r9 := @parameter5: java.awt.geom.Rectangle2D;

        r6 := @parameter6: java.util.Map;

        $r2 = staticinvoke <org.apache.batik.bridge.SVGFeMorphologyElementBridge: float[] convertRadius(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)>(r0, r1);

        $f0 = $r2[0];

        $b0 = $f0 cmpl 0.0F;

        if $b0 == 0 goto label1;

        $f1 = $r2[1];

        $b1 = $f1 cmpl 0.0F;

        if $b1 != 0 goto label2;

     label1:
        return null;

     label2:
        $z0 = staticinvoke <org.apache.batik.bridge.SVGFeMorphologyElementBridge: boolean convertOperator(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)>(r0, r1);

        $r7 = staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: org.apache.batik.ext.awt.image.renderable.Filter getIn(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)>(r0, r3, r4, r5, r6, r1);

        if $r7 != null goto label3;

        return null;

     label3:
        $r8 = interfaceinvoke $r7.<org.apache.batik.ext.awt.image.renderable.Filter: java.awt.geom.Rectangle2D getBounds2D()>();

        $r10 = staticinvoke <org.apache.batik.bridge.SVGUtilities: java.awt.geom.Rectangle2D convertFilterPrimitiveRegion(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.apache.batik.bridge.BridgeContext)>(r0, r3, r4, $r8, r9, r1);

        $r11 = new org.apache.batik.ext.awt.image.renderable.PadRable8Bit;

        $r12 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode ZERO_PAD>;

        specialinvoke $r11.<org.apache.batik.ext.awt.image.renderable.PadRable8Bit: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)>($r7, $r10, $r12);

        $r13 = new org.apache.batik.ext.awt.image.renderable.MorphologyRable8Bit;

        $f2 = $r2[0];

        $d1 = (double) $f2;

        $f3 = $r2[1];

        $d0 = (double) $f3;

        specialinvoke $r13.<org.apache.batik.ext.awt.image.renderable.MorphologyRable8Bit: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,double,double,boolean)>($r11, $d1, $d0, $z0);

        staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: void handleColorInterpolationFilters(org.apache.batik.ext.awt.image.renderable.Filter,org.w3c.dom.Element)>($r13, r0);

        $r14 = new org.apache.batik.ext.awt.image.renderable.PadRable8Bit;

        $r15 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode ZERO_PAD>;

        specialinvoke $r14.<org.apache.batik.ext.awt.image.renderable.PadRable8Bit: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)>($r13, $r10, $r15);

        staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: void updateFilterMap(org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)>(r0, $r14, r6);

        return $r14;
    }

    protected static float[] convertRadius(org.w3c.dom.Element, org.apache.batik.bridge.BridgeContext)
    {
        java.lang.Object[] $r10, $r12;
        float[] r2, $r7;
        byte $b1, $b2;
        java.util.StringTokenizer $r13;
        int $i0, $i3, $i4;
        java.lang.String $r1, $r4, $r6;
        boolean $z0, $z1;
        org.apache.batik.bridge.BridgeException $r14, $r15;
        org.apache.batik.bridge.BridgeContext r5;
        java.lang.NumberFormatException $r8;
        org.w3c.dom.Element r0;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @parameter0: org.w3c.dom.Element;

        r5 := @parameter1: org.apache.batik.bridge.BridgeContext;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "radius");

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r7 = newarray (float)[2];

        $r7[0] = 0.0F;

        $r7[1] = 0.0F;

        return $r7;

     label1:
        r2 = newarray (float)[2];

        $r13 = new java.util.StringTokenizer;

        specialinvoke $r13.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r1, " ,");

     label2:
        $r4 = virtualinvoke $r13.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $f0 = staticinvoke <org.apache.batik.bridge.SVGUtilities: float convertSVGNumber(java.lang.String)>($r4);

        r2[0] = $f0;

        $z0 = virtualinvoke $r13.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label3;

        $r6 = virtualinvoke $r13.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $f4 = staticinvoke <org.apache.batik.bridge.SVGUtilities: float convertSVGNumber(java.lang.String)>($r6);

        r2[1] = $f4;

        goto label4;

     label3:
        $f1 = r2[0];

        r2[1] = $f1;

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;

        $r14 = new org.apache.batik.bridge.BridgeException;

        $r10 = newarray (java.lang.Object)[3];

        $r10[0] = "radius";

        $r10[1] = $r1;

        $r10[2] = $r8;

        specialinvoke $r14.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>(r5, r0, $r8, "attribute.malformed", $r10);

        throw $r14;

     label6:
        $z1 = virtualinvoke $r13.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 != 0 goto label7;

        $f2 = r2[0];

        $b1 = $f2 cmpg 0.0F;

        $i3 = (int) $b1;

        if $i3 < 0 goto label7;

        $f3 = r2[1];

        $b2 = $f3 cmpg 0.0F;

        $i4 = (int) $b2;

        if $i4 >= 0 goto label8;

     label7:
        $r15 = new org.apache.batik.bridge.BridgeException;

        $r12 = newarray (java.lang.Object)[2];

        $r12[0] = "radius";

        $r12[1] = $r1;

        specialinvoke $r15.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r5, r0, "attribute.malformed", $r12);

        throw $r15;

     label8:
        return r2;

        catch java.lang.NumberFormatException from label2 to label4 with label5;
    }

    protected static boolean convertOperator(org.w3c.dom.Element, org.apache.batik.bridge.BridgeContext)
    {
        java.lang.Object[] $r6;
        org.apache.batik.bridge.BridgeException $r4;
        org.apache.batik.bridge.BridgeContext r5;
        org.w3c.dom.Element r0;
        int $i0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @parameter0: org.w3c.dom.Element;

        r5 := @parameter1: org.apache.batik.bridge.BridgeContext;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "operator");

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $r2 = "erode";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $r3 = "dilate";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        $r4 = new org.apache.batik.bridge.BridgeException;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = "operator";

        $r6[1] = $r1;

        specialinvoke $r4.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r5, r0, "attribute.malformed", $r6);

        throw $r4;
    }
}
