class com.hp.hpl.jena.tdb.store.bulkloader.BuilderSecondaryIndexesParallel$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.hp.hpl.jena.tdb.index.TupleIndex val$srcIndex;
    final com.hp.hpl.jena.tdb.index.TupleIndex val$destIndex;
    final java.lang.String val$label;
    final java.util.concurrent.Semaphore val$sema;
    final com.hp.hpl.jena.tdb.store.bulkloader.BuilderSecondaryIndexesParallel this$0;

    void <init>(com.hp.hpl.jena.tdb.store.bulkloader.BuilderSecondaryIndexesParallel, com.hp.hpl.jena.tdb.index.TupleIndex, com.hp.hpl.jena.tdb.index.TupleIndex, java.lang.String, java.util.concurrent.Semaphore)
    {
        com.hp.hpl.jena.tdb.store.bulkloader.BuilderSecondaryIndexesParallel r1;
        java.util.concurrent.Semaphore r5;
        com.hp.hpl.jena.tdb.store.bulkloader.BuilderSecondaryIndexesParallel$1 r0;
        java.lang.String r4;
        com.hp.hpl.jena.tdb.index.TupleIndex r2, r3;

        r0 := @this: com.hp.hpl.jena.tdb.store.bulkloader.BuilderSecondaryIndexesParallel$1;

        r1 := @parameter0: com.hp.hpl.jena.tdb.store.bulkloader.BuilderSecondaryIndexesParallel;

        r2 := @parameter1: com.hp.hpl.jena.tdb.index.TupleIndex;

        r3 := @parameter2: com.hp.hpl.jena.tdb.index.TupleIndex;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.util.concurrent.Semaphore;

        r0.<com.hp.hpl.jena.tdb.store.bulkloader.BuilderSecondaryIndexesParallel$1: com.hp.hpl.jena.tdb.store.bulkloader.BuilderSecondaryIndexesParallel this$0> = r1;

        r0.<com.hp.hpl.jena.tdb.store.bulkloader.BuilderSecondaryIndexesParallel$1: com.hp.hpl.jena.tdb.index.TupleIndex val$srcIndex> = r2;

        r0.<com.hp.hpl.jena.tdb.store.bulkloader.BuilderSecondaryIndexesParallel$1: com.hp.hpl.jena.tdb.index.TupleIndex val$destIndex> = r3;

        r0.<com.hp.hpl.jena.tdb.store.bulkloader.BuilderSecondaryIndexesParallel$1: java.lang.String val$label> = r4;

        r0.<com.hp.hpl.jena.tdb.store.bulkloader.BuilderSecondaryIndexesParallel$1: java.util.concurrent.Semaphore val$sema> = r5;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.hp.hpl.jena.tdb.index.TupleIndex[] $r3;
        java.util.Iterator $r2;
        java.util.concurrent.Semaphore $r8;
        com.hp.hpl.jena.tdb.store.bulkloader.LoadMonitor $r7;
        com.hp.hpl.jena.tdb.index.TupleIndex $r1, $r4;
        com.hp.hpl.jena.tdb.store.bulkloader.BuilderSecondaryIndexesParallel $r5;
        com.hp.hpl.jena.tdb.store.bulkloader.BuilderSecondaryIndexesParallel$1 r0;
        java.lang.String $r6;

        r0 := @this: com.hp.hpl.jena.tdb.store.bulkloader.BuilderSecondaryIndexesParallel$1;

        $r1 = r0.<com.hp.hpl.jena.tdb.store.bulkloader.BuilderSecondaryIndexesParallel$1: com.hp.hpl.jena.tdb.index.TupleIndex val$srcIndex>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.index.TupleIndex: java.util.Iterator all()>();

        $r3 = newarray (com.hp.hpl.jena.tdb.index.TupleIndex)[1];

        $r4 = r0.<com.hp.hpl.jena.tdb.store.bulkloader.BuilderSecondaryIndexesParallel$1: com.hp.hpl.jena.tdb.index.TupleIndex val$destIndex>;

        $r3[0] = $r4;

        $r6 = r0.<com.hp.hpl.jena.tdb.store.bulkloader.BuilderSecondaryIndexesParallel$1: java.lang.String val$label>;

        $r5 = r0.<com.hp.hpl.jena.tdb.store.bulkloader.BuilderSecondaryIndexesParallel$1: com.hp.hpl.jena.tdb.store.bulkloader.BuilderSecondaryIndexesParallel this$0>;

        $r7 = staticinvoke <com.hp.hpl.jena.tdb.store.bulkloader.BuilderSecondaryIndexesParallel: com.hp.hpl.jena.tdb.store.bulkloader.LoadMonitor access$000(com.hp.hpl.jena.tdb.store.bulkloader.BuilderSecondaryIndexesParallel)>($r5);

        staticinvoke <com.hp.hpl.jena.tdb.store.bulkloader.LoaderNodeTupleTable: void copyIndex(java.util.Iterator,com.hp.hpl.jena.tdb.index.TupleIndex[],java.lang.String,com.hp.hpl.jena.tdb.store.bulkloader.LoadMonitor)>($r2, $r3, $r6, $r7);

        $r8 = r0.<com.hp.hpl.jena.tdb.store.bulkloader.BuilderSecondaryIndexesParallel$1: java.util.concurrent.Semaphore val$sema>;

        virtualinvoke $r8.<java.util.concurrent.Semaphore: void release()>();

        return;
    }
}
