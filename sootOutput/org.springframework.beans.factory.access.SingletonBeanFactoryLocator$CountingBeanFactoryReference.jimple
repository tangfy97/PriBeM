class org.springframework.beans.factory.access.SingletonBeanFactoryLocator$CountingBeanFactoryReference extends java.lang.Object implements org.springframework.beans.factory.access.BeanFactoryReference
{
    private org.springframework.beans.factory.BeanFactory beanFactory;
    private org.springframework.beans.factory.BeanFactory groupContextRef;
    final org.springframework.beans.factory.access.SingletonBeanFactoryLocator this$0;

    public void <init>(org.springframework.beans.factory.access.SingletonBeanFactoryLocator, org.springframework.beans.factory.BeanFactory, org.springframework.beans.factory.BeanFactory)
    {
        org.springframework.beans.factory.access.SingletonBeanFactoryLocator$CountingBeanFactoryReference r0;
        org.springframework.beans.factory.access.SingletonBeanFactoryLocator r1;
        org.springframework.beans.factory.BeanFactory r2, r3;

        r0 := @this: org.springframework.beans.factory.access.SingletonBeanFactoryLocator$CountingBeanFactoryReference;

        r1 := @parameter0: org.springframework.beans.factory.access.SingletonBeanFactoryLocator;

        r2 := @parameter1: org.springframework.beans.factory.BeanFactory;

        r3 := @parameter2: org.springframework.beans.factory.BeanFactory;

        r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator$CountingBeanFactoryReference: org.springframework.beans.factory.access.SingletonBeanFactoryLocator this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator$CountingBeanFactoryReference: org.springframework.beans.factory.BeanFactory beanFactory> = r2;

        r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator$CountingBeanFactoryReference: org.springframework.beans.factory.BeanFactory groupContextRef> = r3;

        return;
    }

    public org.springframework.beans.factory.BeanFactory getFactory()
    {
        org.springframework.beans.factory.access.SingletonBeanFactoryLocator$CountingBeanFactoryReference r0;
        org.springframework.beans.factory.BeanFactory $r1;

        r0 := @this: org.springframework.beans.factory.access.SingletonBeanFactoryLocator$CountingBeanFactoryReference;

        $r1 = r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator$CountingBeanFactoryReference: org.springframework.beans.factory.BeanFactory beanFactory>;

        return $r1;
    }

    public void release() throws org.springframework.beans.FatalBeanException
    {
        java.lang.Throwable $r24;
        org.springframework.beans.factory.access.SingletonBeanFactoryLocator $r1, $r4, $r10, $r15, $r16, $r18, $r20, $r22;
        org.springframework.beans.factory.access.SingletonBeanFactoryLocator$CountingBeanFactoryReference r0;
        java.util.Map $r2, $r5, $r19, $r23;
        int $i0, $i1, $i2;
        java.lang.String $r11, $r14, $r17, $r21;
        org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup r7;
        org.springframework.beans.factory.BeanFactory r3;
        java.lang.Object $r6;
        java.lang.StringBuilder $r8, $r12, $r13;
        org.apache.commons.logging.Log $r9;

        r0 := @this: org.springframework.beans.factory.access.SingletonBeanFactoryLocator$CountingBeanFactoryReference;

        $r1 = r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator$CountingBeanFactoryReference: org.springframework.beans.factory.access.SingletonBeanFactoryLocator this$0>;

        $r2 = staticinvoke <org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.util.Map access$0(org.springframework.beans.factory.access.SingletonBeanFactoryLocator)>($r1);

        entermonitor $r2;

     label1:
        r3 = r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator$CountingBeanFactoryReference: org.springframework.beans.factory.BeanFactory groupContextRef>;

        if r3 == null goto label3;

        r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator$CountingBeanFactoryReference: org.springframework.beans.factory.BeanFactory groupContextRef> = null;

        $r4 = r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator$CountingBeanFactoryReference: org.springframework.beans.factory.access.SingletonBeanFactoryLocator this$0>;

        $r5 = staticinvoke <org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.util.Map access$1(org.springframework.beans.factory.access.SingletonBeanFactoryLocator)>($r4);

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r7 = (org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup) $r6;

        if r7 == null goto label2;

        $i0 = staticinvoke <org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup: int access$0(org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup)>(r7);

        $i1 = $i0 - 1;

        staticinvoke <org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup: void access$1(org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup,int)>(r7, $i1);

        $i2 = staticinvoke <org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup: int access$0(org.springframework.beans.factory.access.SingletonBeanFactoryLocator$BeanFactoryGroup)>(r7);

        if $i2 != 0 goto label3;

        $r16 = r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator$CountingBeanFactoryReference: org.springframework.beans.factory.access.SingletonBeanFactoryLocator this$0>;

        $r15 = r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator$CountingBeanFactoryReference: org.springframework.beans.factory.access.SingletonBeanFactoryLocator this$0>;

        $r17 = staticinvoke <org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.lang.String access$2(org.springframework.beans.factory.access.SingletonBeanFactoryLocator)>($r15);

        virtualinvoke $r16.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: void destroyDefinition(org.springframework.beans.factory.BeanFactory,java.lang.String)>(r3, $r17);

        $r18 = r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator$CountingBeanFactoryReference: org.springframework.beans.factory.access.SingletonBeanFactoryLocator this$0>;

        $r19 = staticinvoke <org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.util.Map access$0(org.springframework.beans.factory.access.SingletonBeanFactoryLocator)>($r18);

        $r20 = r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator$CountingBeanFactoryReference: org.springframework.beans.factory.access.SingletonBeanFactoryLocator this$0>;

        $r21 = staticinvoke <org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.lang.String access$2(org.springframework.beans.factory.access.SingletonBeanFactoryLocator)>($r20);

        interfaceinvoke $r19.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r21);

        $r22 = r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator$CountingBeanFactoryReference: org.springframework.beans.factory.access.SingletonBeanFactoryLocator this$0>;

        $r23 = staticinvoke <org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.util.Map access$1(org.springframework.beans.factory.access.SingletonBeanFactoryLocator)>($r22);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r3);

        goto label3;

     label2:
        $r9 = <org.springframework.beans.factory.access.SingletonBeanFactoryLocator: org.apache.commons.logging.Log logger>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Tried to release a SingletonBeanFactoryLocator group definition more times than it has actually been used. Resource name [");

        $r10 = r0.<org.springframework.beans.factory.access.SingletonBeanFactoryLocator$CountingBeanFactoryReference: org.springframework.beans.factory.access.SingletonBeanFactoryLocator this$0>;

        $r11 = staticinvoke <org.springframework.beans.factory.access.SingletonBeanFactoryLocator: java.lang.String access$2(org.springframework.beans.factory.access.SingletonBeanFactoryLocator)>($r10);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r14);

     label3:
        exitmonitor $r2;

     label4:
        goto label7;

     label5:
        $r24 := @caughtexception;

        exitmonitor $r2;

     label6:
        throw $r24;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
}
