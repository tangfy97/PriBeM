public class com.hp.hpl.jena.graph.impl.FileGraphMaker extends com.hp.hpl.jena.graph.impl.BaseGraphMaker implements com.hp.hpl.jena.graph.impl.FileGraph$NotifyOnClose
{
    protected java.lang.String fileBase;
    protected boolean deleteOnClose;
    protected java.util.Map created;
    protected java.util.Set toDelete;
    private static com.hp.hpl.jena.util.iterator.Map1 unconvert;

    public void <init>(java.lang.String)
    {
        com.hp.hpl.jena.graph.impl.FileGraphMaker r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.graph.impl.FileGraphMaker;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker: void <init>(java.lang.String,boolean)>(r1, 0);

        return;
    }

    public void <init>(java.lang.String, boolean)
    {
        java.util.Map $r1;
        com.hp.hpl.jena.graph.impl.FileGraphMaker r0;
        java.util.Set $r2;
        java.lang.String r3;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.graph.impl.FileGraphMaker;

        r3 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.hp.hpl.jena.graph.impl.BaseGraphMaker: void <init>()>();

        $r1 = staticinvoke <com.hp.hpl.jena.util.CollectionFactory: java.util.Map createHashedMap()>();

        r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker: java.util.Map created> = $r1;

        $r2 = staticinvoke <com.hp.hpl.jena.util.CollectionFactory: java.util.Set createHashedSet()>();

        r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker: java.util.Set toDelete> = $r2;

        r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker: java.lang.String fileBase> = r3;

        r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker: boolean deleteOnClose> = z0;

        return;
    }

    public java.lang.String getFileBase()
    {
        com.hp.hpl.jena.graph.impl.FileGraphMaker r0;
        java.lang.String $r1;

        r0 := @this: com.hp.hpl.jena.graph.impl.FileGraphMaker;

        $r1 = r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker: java.lang.String fileBase>;

        return $r1;
    }

    public com.hp.hpl.jena.graph.Graph createGraph()
    {
        com.hp.hpl.jena.graph.impl.FileGraphMaker r1;
        com.hp.hpl.jena.graph.impl.FileGraph $r0;

        r1 := @this: com.hp.hpl.jena.graph.impl.FileGraphMaker;

        $r0 = staticinvoke <com.hp.hpl.jena.graph.impl.FileGraph: com.hp.hpl.jena.graph.impl.FileGraph create()>();

        return $r0;
    }

    public com.hp.hpl.jena.graph.Graph createGraph(java.lang.String, boolean)
    {
        com.hp.hpl.jena.graph.impl.FileGraph r5, $r8, $r9;
        com.hp.hpl.jena.shared.AlreadyExistsException $r7;
        com.hp.hpl.jena.graph.impl.FileGraphMaker r0;
        java.io.File $r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.String r1;
        com.hp.hpl.jena.mem.GraphMemBase $r6;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.graph.impl.FileGraphMaker;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker: java.io.File withRoot(java.lang.String)>(r1);

        $r3 = r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker: java.util.Map created>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r5 = (com.hp.hpl.jena.graph.impl.FileGraph) $r4;

        if r5 != null goto label1;

        $r8 = new com.hp.hpl.jena.graph.impl.FileGraph;

        specialinvoke $r8.<com.hp.hpl.jena.graph.impl.FileGraph: void <init>(com.hp.hpl.jena.graph.impl.FileGraph$NotifyOnClose,java.io.File,boolean,boolean)>(r0, $r2, 1, z0);

        $r9 = specialinvoke r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker: com.hp.hpl.jena.graph.impl.FileGraph remember(java.io.File,com.hp.hpl.jena.graph.impl.FileGraph)>($r2, $r8);

        return $r9;

     label1:
        if z0 == 0 goto label2;

        $r7 = new com.hp.hpl.jena.shared.AlreadyExistsException;

        specialinvoke $r7.<com.hp.hpl.jena.shared.AlreadyExistsException: void <init>(java.lang.String)>(r1);

        throw $r7;

     label2:
        $r6 = virtualinvoke r5.<com.hp.hpl.jena.graph.impl.FileGraph: com.hp.hpl.jena.mem.GraphMemBase openAgain()>();

        return $r6;
    }

    public com.hp.hpl.jena.graph.Graph openGraph(java.lang.String, boolean)
    {
        com.hp.hpl.jena.graph.impl.FileGraph $r4, $r7;
        com.hp.hpl.jena.graph.impl.FileGraphMaker r0;
        java.io.File $r2;
        java.util.Map $r3, $r5;
        java.lang.Object $r6;
        java.lang.String r1;
        com.hp.hpl.jena.mem.GraphMemBase $r8;
        boolean $z0, z1;

        r0 := @this: com.hp.hpl.jena.graph.impl.FileGraphMaker;

        r1 := @parameter0: java.lang.String;

        z1 := @parameter1: boolean;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker: java.io.File withRoot(java.lang.String)>(r1);

        $r3 = r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker: java.util.Map created>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r5 = r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker: java.util.Map created>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r7 = (com.hp.hpl.jena.graph.impl.FileGraph) $r6;

        $r8 = virtualinvoke $r7.<com.hp.hpl.jena.graph.impl.FileGraph: com.hp.hpl.jena.mem.GraphMemBase openAgain()>();

        goto label2;

     label1:
        $r4 = new com.hp.hpl.jena.graph.impl.FileGraph;

        specialinvoke $r4.<com.hp.hpl.jena.graph.impl.FileGraph: void <init>(com.hp.hpl.jena.graph.impl.FileGraph$NotifyOnClose,java.io.File,boolean,boolean)>(r0, $r2, 0, z1);

        $r8 = specialinvoke r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker: com.hp.hpl.jena.graph.impl.FileGraph remember(java.io.File,com.hp.hpl.jena.graph.impl.FileGraph)>($r2, $r4);

     label2:
        return $r8;
    }

    public void notifyClosed(java.io.File)
    {
        java.util.Map $r3;
        com.hp.hpl.jena.graph.impl.FileGraphMaker r0;
        java.util.Set $r2;
        java.io.File r1;

        r0 := @this: com.hp.hpl.jena.graph.impl.FileGraphMaker;

        r1 := @parameter0: java.io.File;

        $r2 = r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker: java.util.Set toDelete>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        $r3 = r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker: java.util.Map created>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    private java.io.File withRoot(java.lang.String)
    {
        com.hp.hpl.jena.graph.impl.FileGraphMaker r1;
        java.lang.String r2, $r3, $r4;
        java.io.File $r0;

        r1 := @this: com.hp.hpl.jena.graph.impl.FileGraphMaker;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        $r3 = r1.<com.hp.hpl.jena.graph.impl.FileGraphMaker: java.lang.String fileBase>;

        $r4 = staticinvoke <com.hp.hpl.jena.graph.impl.FileGraphMaker: java.lang.String toFilename(java.lang.String)>(r2);

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r3, $r4);

        return $r0;
    }

    public static java.lang.String toFilename(java.lang.String)
    {
        java.lang.String r0, $r1, $r2, $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("_", "_U");

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("/", "_S");

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(":", "_C");

        return $r3;
    }

    public static java.lang.String toGraphname(java.lang.String)
    {
        java.lang.String r0, $r1, $r2, $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("_C", ":");

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("_S", "/");

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("_U", "_");

        return $r3;
    }

    public void removeGraph(java.lang.String)
    {
        com.hp.hpl.jena.graph.impl.FileGraphMaker r0;
        java.lang.String r1;
        java.io.File $r2, $r3;

        r0 := @this: com.hp.hpl.jena.graph.impl.FileGraphMaker;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker: java.io.File withRoot(java.lang.String)>(r1);

        $r3 = specialinvoke r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker: java.io.File forget(java.io.File)>($r2);

        virtualinvoke $r3.<java.io.File: boolean delete()>();

        return;
    }

    private com.hp.hpl.jena.graph.impl.FileGraph remember(java.io.File, com.hp.hpl.jena.graph.impl.FileGraph)
    {
        com.hp.hpl.jena.graph.impl.FileGraph r2;
        java.util.Map $r3;
        com.hp.hpl.jena.graph.impl.FileGraphMaker r0;
        java.io.File r1;

        r0 := @this: com.hp.hpl.jena.graph.impl.FileGraphMaker;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: com.hp.hpl.jena.graph.impl.FileGraph;

        $r3 = r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker: java.util.Map created>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return r2;
    }

    private java.io.File forget(java.io.File)
    {
        com.hp.hpl.jena.graph.impl.FileGraphMaker r0;
        java.io.File r1;
        java.util.Map $r2;

        r0 := @this: com.hp.hpl.jena.graph.impl.FileGraphMaker;

        r1 := @parameter0: java.io.File;

        $r2 = r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker: java.util.Map created>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return r1;
    }

    public boolean hasGraph(java.lang.String)
    {
        java.util.Map $r3;
        com.hp.hpl.jena.graph.impl.FileGraphMaker r0;
        java.lang.String r1;
        java.io.File $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: com.hp.hpl.jena.graph.impl.FileGraphMaker;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker: java.io.File withRoot(java.lang.String)>(r1);

        $r3 = r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker: java.util.Map created>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public void close()
    {
        java.util.Iterator $r3, $r5;
        java.util.Map $r1;
        com.hp.hpl.jena.graph.impl.FileGraphMaker r0;
        java.util.Set $r2, $r4;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.impl.FileGraphMaker;

        $z0 = r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker: boolean deleteOnClose>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker: java.util.Map created>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        virtualinvoke r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker: void deleteFiles(java.util.Iterator)>($r3);

        $r4 = r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker: java.util.Set toDelete>;

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        virtualinvoke r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker: void deleteFiles(java.util.Iterator)>($r5);

     label1:
        return;
    }

    protected void deleteFiles(java.util.Iterator)
    {
        java.util.Iterator r0;
        com.hp.hpl.jena.graph.impl.FileGraphMaker r3;
        java.lang.Object $r1;
        java.io.File $r2;
        boolean $z0;

        r3 := @this: com.hp.hpl.jena.graph.impl.FileGraphMaker;

        r0 := @parameter0: java.util.Iterator;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.io.File) $r1;

        virtualinvoke $r2.<java.io.File: boolean delete()>();

        goto label1;

     label2:
        return;
    }

    public static java.io.FilenameFilter graphName()
    {
        com.hp.hpl.jena.graph.impl.FileGraphMaker$2 $r0;

        $r0 = new com.hp.hpl.jena.graph.impl.FileGraphMaker$2;

        specialinvoke $r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker$2: void <init>()>();

        return $r0;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listGraphs()
    {
        java.io.FilenameFilter $r3;
        com.hp.hpl.jena.graph.impl.FileGraphMaker r1;
        java.lang.String[] $r4;
        java.util.Map $r7;
        java.lang.String $r2, $r16;
        boolean $z0;
        java.util.Iterator $r9, $r10;
        java.util.Set $r6, $r8;
        com.hp.hpl.jena.util.iterator.Map1 $r12;
        java.io.File $r0, $r15;
        java.util.List $r5;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r11, $r13;
        java.lang.Object $r14;

        r1 := @this: com.hp.hpl.jena.graph.impl.FileGraphMaker;

        $r0 = new java.io.File;

        $r2 = r1.<com.hp.hpl.jena.graph.impl.FileGraphMaker: java.lang.String fileBase>;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r2);

        $r3 = staticinvoke <com.hp.hpl.jena.graph.impl.FileGraphMaker: java.io.FilenameFilter graphName()>();

        $r4 = virtualinvoke $r0.<java.io.File: java.lang.String[] list(java.io.FilenameFilter)>($r3);

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        $r6 = staticinvoke <com.hp.hpl.jena.util.CollectionFactory: java.util.Set createHashedSet(java.util.Collection)>($r5);

        $r7 = r1.<com.hp.hpl.jena.graph.impl.FileGraphMaker: java.util.Map created>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r14 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (java.io.File) $r14;

        $r16 = virtualinvoke $r15.<java.io.File: java.lang.String getName()>();

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r16);

        goto label1;

     label2:
        $r10 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

        $r11 = staticinvoke <com.hp.hpl.jena.util.iterator.WrappedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator create(java.util.Iterator)>($r10);

        $r12 = <com.hp.hpl.jena.graph.impl.FileGraphMaker: com.hp.hpl.jena.util.iterator.Map1 unconvert>;

        $r13 = interfaceinvoke $r11.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator mapWith(com.hp.hpl.jena.util.iterator.Map1)>($r12);

        return $r13;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.graph.impl.FileGraphMaker$1 $r0;

        $r0 = new com.hp.hpl.jena.graph.impl.FileGraphMaker$1;

        specialinvoke $r0.<com.hp.hpl.jena.graph.impl.FileGraphMaker$1: void <init>()>();

        <com.hp.hpl.jena.graph.impl.FileGraphMaker: com.hp.hpl.jena.util.iterator.Map1 unconvert> = $r0;

        return;
    }
}
