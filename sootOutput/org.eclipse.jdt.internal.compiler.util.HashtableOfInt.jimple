public final class org.eclipse.jdt.internal.compiler.util.HashtableOfInt extends java.lang.Object
{
    public int[] keyTable;
    public java.lang.Object[] valueTable;
    public int elementSize;
    int threshold;

    public void <init>()
    {
        org.eclipse.jdt.internal.compiler.util.HashtableOfInt r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfInt;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: void <init>(int)>(13);

        return;
    }

    public void <init>(int)
    {
        java.lang.Object[] $r2;
        org.eclipse.jdt.internal.compiler.util.HashtableOfInt r0;
        int[] $r1;
        int i0, $i1, i2;
        float $f0, $f1;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfInt;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: int elementSize> = 0;

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: int threshold> = i0;

        $f0 = (float) i0;

        $f1 = $f0 * 1.75F;

        i2 = (int) $f1;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: int threshold>;

        if $i1 != i2 goto label1;

        i2 = i2 + 1;

     label1:
        $r1 = newarray (int)[i2];

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: int[] keyTable> = $r1;

        $r2 = newarray (java.lang.Object)[i2];

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: java.lang.Object[] valueTable> = $r2;

        return;
    }

    public boolean containsKey(int)
    {
        int[] $r1, $r2;
        int i0, i1, i2, $i3;
        org.eclipse.jdt.internal.compiler.util.HashtableOfInt r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfInt;

        i1 := @parameter0: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: int[] keyTable>;

        i0 = lengthof $r1;

        i2 = i1 % i0;

        goto label3;

     label1:
        if $i3 != i1 goto label2;

        return 1;

     label2:
        i2 = i2 + 1;

        if i2 != i0 goto label3;

        i2 = 0;

     label3:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: int[] keyTable>;

        $i3 = $r2[i2];

        if $i3 != 0 goto label1;

        return 0;
    }

    public java.lang.Object get(int)
    {
        java.lang.Object[] $r2;
        org.eclipse.jdt.internal.compiler.util.HashtableOfInt r0;
        int[] $r1, $r4;
        int i0, i1, i2, $i3;
        java.lang.Object $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfInt;

        i1 := @parameter0: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: int[] keyTable>;

        i0 = lengthof $r1;

        i2 = i1 % i0;

        goto label3;

     label1:
        if $i3 != i1 goto label2;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: java.lang.Object[] valueTable>;

        $r3 = $r2[i2];

        return $r3;

     label2:
        i2 = i2 + 1;

        if i2 != i0 goto label3;

        i2 = 0;

     label3:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: int[] keyTable>;

        $i3 = $r4[i2];

        if $i3 != 0 goto label1;

        return null;
    }

    public java.lang.Object put(int, java.lang.Object)
    {
        java.lang.Object[] $r3, $r5;
        org.eclipse.jdt.internal.compiler.util.HashtableOfInt r0;
        int[] $r1, $r4, $r6;
        int i0, i1, $i2, $i3, $i4, i5, $i6;
        java.lang.Object r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfInt;

        i1 := @parameter0: int;

        r2 := @parameter1: java.lang.Object;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: int[] keyTable>;

        i0 = lengthof $r1;

        i5 = i1 % i0;

        goto label3;

     label1:
        if $i6 != i1 goto label2;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: java.lang.Object[] valueTable>;

        $r3[i5] = r2;

        return r2;

     label2:
        i5 = i5 + 1;

        if i5 != i0 goto label3;

        i5 = 0;

     label3:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: int[] keyTable>;

        $i6 = $r6[i5];

        if $i6 != 0 goto label1;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: int[] keyTable>;

        $r4[i5] = i1;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: java.lang.Object[] valueTable>;

        $r5[i5] = r2;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: int elementSize>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: int elementSize> = $i3;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: int threshold>;

        if $i3 <= $i4 goto label4;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: void rehash()>();

     label4:
        return r2;
    }

    private void rehash()
    {
        java.lang.Object[] $r4, $r7;
        org.eclipse.jdt.internal.compiler.util.HashtableOfInt r1, $r8;
        int[] $r2, $r3, $r6;
        int $i0, $i1, $i2, $i3, i4, $i6;
        java.lang.Object $r5;

        r1 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfInt;

        $r8 = new org.eclipse.jdt.internal.compiler.util.HashtableOfInt;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: int elementSize>;

        $i1 = $i0 * 2;

        specialinvoke $r8.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: void <init>(int)>($i1);

        $r2 = r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: int[] keyTable>;

        i4 = lengthof $r2;

        goto label2;

     label1:
        $r3 = r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: int[] keyTable>;

        $i2 = $r3[i4];

        if $i2 == 0 goto label2;

        $r4 = r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: java.lang.Object[] valueTable>;

        $r5 = $r4[i4];

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: java.lang.Object put(int,java.lang.Object)>($i2, $r5);

     label2:
        $i6 = (int) -1;

        i4 = i4 + $i6;

        if i4 >= 0 goto label1;

        $r6 = $r8.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: int[] keyTable>;

        r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: int[] keyTable> = $r6;

        $r7 = $r8.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: java.lang.Object[] valueTable>;

        r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: java.lang.Object[] valueTable> = $r7;

        $i3 = $r8.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: int threshold>;

        r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: int threshold> = $i3;

        return;
    }

    public int size()
    {
        int $i0;
        org.eclipse.jdt.internal.compiler.util.HashtableOfInt r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfInt;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: int elementSize>;

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r1, $r2;
        int[] $r6;
        java.lang.StringBuffer $r4, $r7, $r8, $r10, $r11;
        int i0, $i1, i2;
        java.lang.String $r5, $r9, r12;
        org.eclipse.jdt.internal.compiler.util.HashtableOfInt r0;
        java.lang.Object $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfInt;

        r12 = "";

        i2 = 0;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: java.lang.Object[] valueTable>;

        i0 = lengthof $r1;

        goto label3;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: java.lang.Object[] valueTable>;

        $r3 = $r2[i2];

        if $r3 == null goto label2;

        $r4 = new java.lang.StringBuffer;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r12);

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>($r5);

        $r6 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: int[] keyTable>;

        $i1 = $r6[i2];

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" -> ");

        $r9 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        i2 = i2 + 1;

     label3:
        if i2 < i0 goto label1;

        return r12;
    }
}
