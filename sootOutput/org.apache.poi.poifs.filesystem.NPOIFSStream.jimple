public class org.apache.poi.poifs.filesystem.NPOIFSStream extends java.lang.Object implements java.lang.Iterable
{
    private org.apache.poi.poifs.filesystem.BlockStore blockStore;
    private int startBlock;
    private java.io.OutputStream outStream;

    public void <init>(org.apache.poi.poifs.filesystem.BlockStore, int)
    {
        int i0;
        org.apache.poi.poifs.filesystem.NPOIFSStream r0;
        org.apache.poi.poifs.filesystem.BlockStore r1;

        r0 := @this: org.apache.poi.poifs.filesystem.NPOIFSStream;

        r1 := @parameter0: org.apache.poi.poifs.filesystem.BlockStore;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.poifs.filesystem.NPOIFSStream: org.apache.poi.poifs.filesystem.BlockStore blockStore> = r1;

        r0.<org.apache.poi.poifs.filesystem.NPOIFSStream: int startBlock> = i0;

        return;
    }

    public void <init>(org.apache.poi.poifs.filesystem.BlockStore)
    {
        int $i1;
        org.apache.poi.poifs.filesystem.NPOIFSStream r0;
        org.apache.poi.poifs.filesystem.BlockStore r1;

        r0 := @this: org.apache.poi.poifs.filesystem.NPOIFSStream;

        r1 := @parameter0: org.apache.poi.poifs.filesystem.BlockStore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.poifs.filesystem.NPOIFSStream: org.apache.poi.poifs.filesystem.BlockStore blockStore> = r1;

        $i1 = (int) -2;

        r0.<org.apache.poi.poifs.filesystem.NPOIFSStream: int startBlock> = $i1;

        return;
    }

    public int getStartBlock()
    {
        int $i0;
        org.apache.poi.poifs.filesystem.NPOIFSStream r0;

        r0 := @this: org.apache.poi.poifs.filesystem.NPOIFSStream;

        $i0 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream: int startBlock>;

        return $i0;
    }

    public java.util.Iterator iterator()
    {
        org.apache.poi.poifs.filesystem.NPOIFSStream r0;
        java.util.Iterator $r1;

        r0 := @this: org.apache.poi.poifs.filesystem.NPOIFSStream;

        $r1 = virtualinvoke r0.<org.apache.poi.poifs.filesystem.NPOIFSStream: java.util.Iterator getBlockIterator()>();

        return $r1;
    }

    public java.util.Iterator getBlockIterator()
    {
        java.lang.IllegalStateException $r3;
        org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBufferIterator $r4;
        int $i0, $i1, $i3;
        org.apache.poi.poifs.filesystem.NPOIFSStream r0;

        r0 := @this: org.apache.poi.poifs.filesystem.NPOIFSStream;

        $i0 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream: int startBlock>;

        $i3 = (int) -2;

        if $i0 != $i3 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t read from a new stream before it has been written to");

        throw $r3;

     label1:
        $r4 = new org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBufferIterator;

        $i1 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream: int startBlock>;

        specialinvoke $r4.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBufferIterator: void <init>(org.apache.poi.poifs.filesystem.NPOIFSStream,int)>(r0, $i1);

        return $r4;
    }

    public void updateContents(byte[]) throws java.io.IOException
    {
        java.io.OutputStream $r1;
        byte[] r2;
        org.apache.poi.poifs.filesystem.NPOIFSStream r0;

        r0 := @this: org.apache.poi.poifs.filesystem.NPOIFSStream;

        r2 := @parameter0: byte[];

        $r1 = virtualinvoke r0.<org.apache.poi.poifs.filesystem.NPOIFSStream: java.io.OutputStream getOutputStream()>();

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[])>(r2);

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

        return;
    }

    public java.io.OutputStream getOutputStream() throws java.io.IOException
    {
        java.io.OutputStream $r1, $r2;
        org.apache.poi.poifs.filesystem.NPOIFSStream r0;
        org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer $r3;

        r0 := @this: org.apache.poi.poifs.filesystem.NPOIFSStream;

        $r1 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream: java.io.OutputStream outStream>;

        if $r1 != null goto label1;

        $r3 = new org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer;

        specialinvoke $r3.<org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBuffer: void <init>(org.apache.poi.poifs.filesystem.NPOIFSStream)>(r0);

        r0.<org.apache.poi.poifs.filesystem.NPOIFSStream: java.io.OutputStream outStream> = $r3;

     label1:
        $r2 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream: java.io.OutputStream outStream>;

        return $r2;
    }

    public void free() throws java.io.IOException
    {
        org.apache.poi.poifs.filesystem.NPOIFSStream r0;
        org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector $r2;
        org.apache.poi.poifs.filesystem.BlockStore $r1;

        r0 := @this: org.apache.poi.poifs.filesystem.NPOIFSStream;

        $r1 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream: org.apache.poi.poifs.filesystem.BlockStore blockStore>;

        $r2 = virtualinvoke $r1.<org.apache.poi.poifs.filesystem.BlockStore: org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector getChainLoopDetector()>();

        specialinvoke r0.<org.apache.poi.poifs.filesystem.NPOIFSStream: void free(org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector)>($r2);

        return;
    }

    private void free(org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector)
    {
        org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector r1;
        org.apache.poi.poifs.filesystem.BlockStore $r2, $r3;
        int i0, i1, $i3, $i5, $i7;
        org.apache.poi.poifs.filesystem.NPOIFSStream r0;

        r0 := @this: org.apache.poi.poifs.filesystem.NPOIFSStream;

        r1 := @parameter0: org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector;

        i1 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream: int startBlock>;

     label1:
        $i3 = (int) -2;

        if i1 == $i3 goto label2;

        i0 = i1;

        virtualinvoke r1.<org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector: void claim(int)>(i1);

        $r2 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream: org.apache.poi.poifs.filesystem.BlockStore blockStore>;

        i1 = virtualinvoke $r2.<org.apache.poi.poifs.filesystem.BlockStore: int getNextBlock(int)>(i1);

        $r3 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream: org.apache.poi.poifs.filesystem.BlockStore blockStore>;

        $i5 = (int) -1;

        virtualinvoke $r3.<org.apache.poi.poifs.filesystem.BlockStore: void setNextBlock(int,int)>(i0, $i5);

        goto label1;

     label2:
        $i7 = (int) -2;

        r0.<org.apache.poi.poifs.filesystem.NPOIFSStream: int startBlock> = $i7;

        return;
    }

    static org.apache.poi.poifs.filesystem.BlockStore access$000(org.apache.poi.poifs.filesystem.NPOIFSStream)
    {
        org.apache.poi.poifs.filesystem.NPOIFSStream r0;
        org.apache.poi.poifs.filesystem.BlockStore $r1;

        r0 := @parameter0: org.apache.poi.poifs.filesystem.NPOIFSStream;

        $r1 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream: org.apache.poi.poifs.filesystem.BlockStore blockStore>;

        return $r1;
    }

    static int access$100(org.apache.poi.poifs.filesystem.NPOIFSStream)
    {
        int $i0;
        org.apache.poi.poifs.filesystem.NPOIFSStream r0;

        r0 := @parameter0: org.apache.poi.poifs.filesystem.NPOIFSStream;

        $i0 = r0.<org.apache.poi.poifs.filesystem.NPOIFSStream: int startBlock>;

        return $i0;
    }

    static int access$102(org.apache.poi.poifs.filesystem.NPOIFSStream, int)
    {
        int i0;
        org.apache.poi.poifs.filesystem.NPOIFSStream r0;

        r0 := @parameter0: org.apache.poi.poifs.filesystem.NPOIFSStream;

        i0 := @parameter1: int;

        r0.<org.apache.poi.poifs.filesystem.NPOIFSStream: int startBlock> = i0;

        return i0;
    }

    static void access$200(org.apache.poi.poifs.filesystem.NPOIFSStream, org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector)
    {
        org.apache.poi.poifs.filesystem.NPOIFSStream r0;
        org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector r1;

        r0 := @parameter0: org.apache.poi.poifs.filesystem.NPOIFSStream;

        r1 := @parameter1: org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector;

        specialinvoke r0.<org.apache.poi.poifs.filesystem.NPOIFSStream: void free(org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector)>(r1);

        return;
    }
}
