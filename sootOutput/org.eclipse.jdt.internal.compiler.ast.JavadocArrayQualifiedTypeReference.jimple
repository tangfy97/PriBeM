public class org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference extends org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference
{
    public int tagSourceStart;
    public int tagSourceEnd;

    public void <init>(org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference, int)
    {
        org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference r1;
        long[] $r2;
        int i0;
        org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference r0;
        char[][] $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference;

        i0 := @parameter1: int;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference: char[][] tokens>;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference: long[] sourcePositions>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference: void <init>(char[][],int,long[])>($r3, i0, $r2);

        return;
    }

    protected void reportInvalidType(org.eclipse.jdt.internal.compiler.lookup.Scope)
    {
        org.eclipse.jdt.internal.compiler.lookup.Scope r0;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r3;
        int $i0;
        org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference r2;

        r2 := @this: org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Scope;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Scope: int getDeclarationModifiers()>();

        virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocInvalidType(org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,int)>(r2, $r3, $i0);

        return;
    }

    protected void reportDeprecatedType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.Scope)
    {
        org.eclipse.jdt.internal.compiler.lookup.Scope r0;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r2;
        int $i0;
        org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference r3;

        r3 := @this: org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.Scope;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Scope: int getDeclarationModifiers()>();

        virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocDeprecatedType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode,int)>(r2, r3, $i0);

        return;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        return;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference r1;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r1, r2);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r1, r2);

        return;
    }
}
