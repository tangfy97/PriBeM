public class org.bouncycastle.crypto.tls.ByteQueue extends java.lang.Object
{
    private static final int INITBUFSIZE;
    private byte[] databuf;
    private int skipped;
    private int available;

    public void <init>()
    {
        byte[] $r1;
        org.bouncycastle.crypto.tls.ByteQueue r0;

        r0 := @this: org.bouncycastle.crypto.tls.ByteQueue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[1024];

        r0.<org.bouncycastle.crypto.tls.ByteQueue: byte[] databuf> = $r1;

        r0.<org.bouncycastle.crypto.tls.ByteQueue: int skipped> = 0;

        r0.<org.bouncycastle.crypto.tls.ByteQueue: int available> = 0;

        return;
    }

    public static final int nextTwoPow(int)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10, i11;

        i6 := @parameter0: int;

        $i0 = i6 >> 1;

        i7 = i6 | $i0;

        $i1 = i7 >> 2;

        i8 = i7 | $i1;

        $i2 = i8 >> 4;

        i9 = i8 | $i2;

        $i3 = i9 >> 8;

        i10 = i9 | $i3;

        $i4 = i10 >> 16;

        i11 = i10 | $i4;

        $i5 = i11 + 1;

        return $i5;
    }

    public void read(byte[], int, int, int)
    {
        byte[] r1, $r2;
        int i0, $i1, i2, $i3, i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r10;
        org.bouncycastle.crypto.tls.ByteQueue r0;
        org.bouncycastle.crypto.tls.TlsRuntimeException $r3, $r11;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: org.bouncycastle.crypto.tls.ByteQueue;

        r1 := @parameter0: byte[];

        i4 := @parameter1: int;

        i2 := @parameter2: int;

        i0 := @parameter3: int;

        $i1 = r0.<org.bouncycastle.crypto.tls.ByteQueue: int available>;

        $i3 = $i1 - i0;

        if $i3 >= i2 goto label1;

        $r11 = new org.bouncycastle.crypto.tls.TlsRuntimeException;

        specialinvoke $r11.<org.bouncycastle.crypto.tls.TlsRuntimeException: void <init>(java.lang.String)>("Not enough data to read");

        throw $r11;

     label1:
        $i5 = lengthof r1;

        $i6 = $i5 - i4;

        if $i6 >= i2 goto label2;

        $r3 = new org.bouncycastle.crypto.tls.TlsRuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Buffer size of ");

        $i9 = lengthof r1;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is too small for a read of ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.bouncycastle.crypto.tls.TlsRuntimeException: void <init>(java.lang.String)>($r10);

        throw $r3;

     label2:
        $r2 = r0.<org.bouncycastle.crypto.tls.ByteQueue: byte[] databuf>;

        $i7 = r0.<org.bouncycastle.crypto.tls.ByteQueue: int skipped>;

        $i8 = $i7 + i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i8, r1, i4, i2);

        return;
    }

    public void addData(byte[], int, int)
    {
        byte[] $r1, r2, $r3, r4, $r5;
        int $i0, $i1, i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        org.bouncycastle.crypto.tls.ByteQueue r0;

        r0 := @this: org.bouncycastle.crypto.tls.ByteQueue;

        r2 := @parameter0: byte[];

        i6 := @parameter1: int;

        i2 := @parameter2: int;

        $i1 = r0.<org.bouncycastle.crypto.tls.ByteQueue: int skipped>;

        $i0 = r0.<org.bouncycastle.crypto.tls.ByteQueue: int available>;

        $i3 = $i1 + $i0;

        $i5 = $i3 + i2;

        $r1 = r0.<org.bouncycastle.crypto.tls.ByteQueue: byte[] databuf>;

        $i4 = lengthof $r1;

        if $i5 <= $i4 goto label1;

        $i12 = lengthof r2;

        $i13 = staticinvoke <org.bouncycastle.crypto.tls.ByteQueue: int nextTwoPow(int)>($i12);

        r4 = newarray (byte)[$i13];

        $r5 = r0.<org.bouncycastle.crypto.tls.ByteQueue: byte[] databuf>;

        $i15 = r0.<org.bouncycastle.crypto.tls.ByteQueue: int skipped>;

        $i14 = r0.<org.bouncycastle.crypto.tls.ByteQueue: int available>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, $i15, r4, 0, $i14);

        r0.<org.bouncycastle.crypto.tls.ByteQueue: int skipped> = 0;

        r0.<org.bouncycastle.crypto.tls.ByteQueue: byte[] databuf> = r4;

     label1:
        $r3 = r0.<org.bouncycastle.crypto.tls.ByteQueue: byte[] databuf>;

        $i8 = r0.<org.bouncycastle.crypto.tls.ByteQueue: int skipped>;

        $i7 = r0.<org.bouncycastle.crypto.tls.ByteQueue: int available>;

        $i9 = $i8 + $i7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i6, $r3, $i9, i2);

        $i10 = r0.<org.bouncycastle.crypto.tls.ByteQueue: int available>;

        $i11 = $i10 + i2;

        r0.<org.bouncycastle.crypto.tls.ByteQueue: int available> = $i11;

        return;
    }

    public void removeData(int)
    {
        byte[] $r1, $r2, $r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.String $r10;
        org.bouncycastle.crypto.tls.ByteQueue r0;
        org.bouncycastle.crypto.tls.TlsRuntimeException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;

        r0 := @this: org.bouncycastle.crypto.tls.ByteQueue;

        i0 := @parameter0: int;

        $i1 = r0.<org.bouncycastle.crypto.tls.ByteQueue: int available>;

        if i0 <= $i1 goto label1;

        $r4 = new org.bouncycastle.crypto.tls.TlsRuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot remove ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes, only got ");

        $i11 = r0.<org.bouncycastle.crypto.tls.ByteQueue: int available>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.bouncycastle.crypto.tls.TlsRuntimeException: void <init>(java.lang.String)>($r10);

        throw $r4;

     label1:
        $i2 = r0.<org.bouncycastle.crypto.tls.ByteQueue: int available>;

        $i3 = $i2 - i0;

        r0.<org.bouncycastle.crypto.tls.ByteQueue: int available> = $i3;

        $i4 = r0.<org.bouncycastle.crypto.tls.ByteQueue: int skipped>;

        $i5 = $i4 + i0;

        r0.<org.bouncycastle.crypto.tls.ByteQueue: int skipped> = $i5;

        $i8 = r0.<org.bouncycastle.crypto.tls.ByteQueue: int skipped>;

        $r1 = r0.<org.bouncycastle.crypto.tls.ByteQueue: byte[] databuf>;

        $i6 = lengthof $r1;

        $i7 = $i6 / 2;

        if $i8 <= $i7 goto label2;

        $r3 = r0.<org.bouncycastle.crypto.tls.ByteQueue: byte[] databuf>;

        $i10 = r0.<org.bouncycastle.crypto.tls.ByteQueue: int skipped>;

        $r2 = r0.<org.bouncycastle.crypto.tls.ByteQueue: byte[] databuf>;

        $i9 = r0.<org.bouncycastle.crypto.tls.ByteQueue: int available>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i10, $r2, 0, $i9);

        r0.<org.bouncycastle.crypto.tls.ByteQueue: int skipped> = 0;

     label2:
        return;
    }

    public int size()
    {
        int $i0;
        org.bouncycastle.crypto.tls.ByteQueue r0;

        r0 := @this: org.bouncycastle.crypto.tls.ByteQueue;

        $i0 = r0.<org.bouncycastle.crypto.tls.ByteQueue: int available>;

        return $i0;
    }

    public static void <clinit>()
    {
        <org.bouncycastle.crypto.tls.ByteQueue: int INITBUFSIZE> = 1024;

        return;
    }
}
