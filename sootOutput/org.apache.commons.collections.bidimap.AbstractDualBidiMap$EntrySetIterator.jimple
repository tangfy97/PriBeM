public class org.apache.commons.collections.bidimap.AbstractDualBidiMap$EntrySetIterator extends org.apache.commons.collections.iterators.AbstractIteratorDecorator
{
    protected final org.apache.commons.collections.bidimap.AbstractDualBidiMap parent;
    protected java.util.Map$Entry last;
    protected boolean canRemove;

    protected void <init>(java.util.Iterator, org.apache.commons.collections.bidimap.AbstractDualBidiMap)
    {
        java.util.Iterator r1;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap$EntrySetIterator r0;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap r2;

        r0 := @this: org.apache.commons.collections.bidimap.AbstractDualBidiMap$EntrySetIterator;

        r1 := @parameter0: java.util.Iterator;

        r2 := @parameter1: org.apache.commons.collections.bidimap.AbstractDualBidiMap;

        specialinvoke r0.<org.apache.commons.collections.iterators.AbstractIteratorDecorator: void <init>(java.util.Iterator)>(r1);

        r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$EntrySetIterator: java.util.Map$Entry last> = null;

        r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$EntrySetIterator: boolean canRemove> = 0;

        r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$EntrySetIterator: org.apache.commons.collections.bidimap.AbstractDualBidiMap parent> = r2;

        return;
    }

    public java.lang.Object next()
    {
        java.util.Map$Entry $r4, $r5;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap$EntrySetIterator r0;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap$MapEntry $r1;
        java.lang.Object $r2;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap $r3;

        r0 := @this: org.apache.commons.collections.bidimap.AbstractDualBidiMap$EntrySetIterator;

        $r1 = new org.apache.commons.collections.bidimap.AbstractDualBidiMap$MapEntry;

        $r2 = specialinvoke r0.<org.apache.commons.collections.iterators.AbstractIteratorDecorator: java.lang.Object next()>();

        $r4 = (java.util.Map$Entry) $r2;

        $r3 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$EntrySetIterator: org.apache.commons.collections.bidimap.AbstractDualBidiMap parent>;

        specialinvoke $r1.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$MapEntry: void <init>(java.util.Map$Entry,org.apache.commons.collections.bidimap.AbstractDualBidiMap)>($r4, $r3);

        r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$EntrySetIterator: java.util.Map$Entry last> = $r1;

        r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$EntrySetIterator: boolean canRemove> = 1;

        $r5 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$EntrySetIterator: java.util.Map$Entry last>;

        return $r5;
    }

    public void remove()
    {
        java.lang.IllegalStateException $r6;
        java.util.Map$Entry $r1;
        java.util.Map[] $r4;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap$EntrySetIterator r0;
        java.util.Map $r5;
        java.lang.Object $r2;
        org.apache.commons.collections.bidimap.AbstractDualBidiMap $r3;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.bidimap.AbstractDualBidiMap$EntrySetIterator;

        $z0 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$EntrySetIterator: boolean canRemove>;

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Iterator remove() can only be called once after next()");

        throw $r6;

     label1:
        $r1 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$EntrySetIterator: java.util.Map$Entry last>;

        $r2 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        specialinvoke r0.<org.apache.commons.collections.iterators.AbstractIteratorDecorator: void remove()>();

        $r3 = r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$EntrySetIterator: org.apache.commons.collections.bidimap.AbstractDualBidiMap parent>;

        $r4 = $r3.<org.apache.commons.collections.bidimap.AbstractDualBidiMap: java.util.Map[] maps>;

        $r5 = $r4[1];

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r2);

        r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$EntrySetIterator: java.util.Map$Entry last> = null;

        r0.<org.apache.commons.collections.bidimap.AbstractDualBidiMap$EntrySetIterator: boolean canRemove> = 0;

        return;
    }
}
