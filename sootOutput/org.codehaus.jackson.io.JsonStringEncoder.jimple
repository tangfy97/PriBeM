public final class org.codehaus.jackson.io.JsonStringEncoder extends java.lang.Object
{
    private static final char[] HEX_CHARS;
    private static final byte[] HEX_BYTES;
    private static final int SURR1_FIRST;
    private static final int SURR1_LAST;
    private static final int SURR2_FIRST;
    private static final int SURR2_LAST;
    private static final int INT_BACKSLASH;
    private static final int INT_U;
    private static final int INT_0;
    protected static final java.lang.ThreadLocal _threadEncoder;
    protected org.codehaus.jackson.util.TextBuffer _textBuffer;
    protected org.codehaus.jackson.util.ByteArrayBuilder _byteBuilder;
    protected final char[] _quoteBuffer;

    public void <init>()
    {
        org.codehaus.jackson.io.JsonStringEncoder r0;
        char[] $r1, $r2, $r3, $r4;

        r0 := @this: org.codehaus.jackson.io.JsonStringEncoder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (char)[6];

        r0.<org.codehaus.jackson.io.JsonStringEncoder: char[] _quoteBuffer> = $r1;

        $r2 = r0.<org.codehaus.jackson.io.JsonStringEncoder: char[] _quoteBuffer>;

        $r2[0] = 92;

        $r3 = r0.<org.codehaus.jackson.io.JsonStringEncoder: char[] _quoteBuffer>;

        $r3[2] = 48;

        $r4 = r0.<org.codehaus.jackson.io.JsonStringEncoder: char[] _quoteBuffer>;

        $r4[3] = 48;

        return;
    }

    public static org.codehaus.jackson.io.JsonStringEncoder getInstance()
    {
        java.lang.ThreadLocal $r0, $r6;
        org.codehaus.jackson.io.JsonStringEncoder $r4, $r7, r8;
        java.lang.Object $r1, $r3;
        java.lang.ref.SoftReference r2, $r5;

        $r0 = <org.codehaus.jackson.io.JsonStringEncoder: java.lang.ThreadLocal _threadEncoder>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (java.lang.ref.SoftReference) $r1;

        if r2 != null goto label1;

        $r7 = null;

        goto label2;

     label1:
        $r3 = virtualinvoke r2.<java.lang.ref.SoftReference: java.lang.Object get()>();

        $r7 = (org.codehaus.jackson.io.JsonStringEncoder) $r3;

     label2:
        r8 = $r7;

        if $r7 != null goto label3;

        $r4 = new org.codehaus.jackson.io.JsonStringEncoder;

        specialinvoke $r4.<org.codehaus.jackson.io.JsonStringEncoder: void <init>()>();

        r8 = $r4;

        $r6 = <org.codehaus.jackson.io.JsonStringEncoder: java.lang.ThreadLocal _threadEncoder>;

        $r5 = new java.lang.ref.SoftReference;

        specialinvoke $r5.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>($r4);

        virtualinvoke $r6.<java.lang.ThreadLocal: void set(java.lang.Object)>($r5);

     label3:
        return r8;
    }

    public char[] quoteAsString(java.lang.String)
    {
        int[] $r1;
        org.codehaus.jackson.util.TextBuffer r11, $r13;
        org.codehaus.jackson.io.JsonStringEncoder r0;
        int $i0, $i2, $i3, $i4, $i5, i7, i8, $i9, $i10, $i11, i12, $i13, $i14, i15, i16, $i17, $i18, $i19, $i20, $i21;
        java.lang.String r2;
        char $c1, $c6;
        char[] $r3, $r4, $r5, $r6, $r7, $r8, $r9, r12;

        r0 := @this: org.codehaus.jackson.io.JsonStringEncoder;

        r2 := @parameter0: java.lang.String;

        r11 = r0.<org.codehaus.jackson.io.JsonStringEncoder: org.codehaus.jackson.util.TextBuffer _textBuffer>;

        if r11 != null goto label01;

        $r13 = new org.codehaus.jackson.util.TextBuffer;

        specialinvoke $r13.<org.codehaus.jackson.util.TextBuffer: void <init>(org.codehaus.jackson.util.BufferRecycler)>(null);

        r11 = $r13;

        r0.<org.codehaus.jackson.io.JsonStringEncoder: org.codehaus.jackson.util.TextBuffer _textBuffer> = $r13;

     label01:
        r12 = virtualinvoke r11.<org.codehaus.jackson.util.TextBuffer: char[] emptyAndGetCurrentSegment()>();

        $r1 = staticinvoke <org.codehaus.jackson.util.CharTypes: int[] get7BitOutputEscapes()>();

        $i14 = lengthof $r1;

        i15 = 0;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        i16 = 0;

     label02:
        if i15 >= $i0 goto label13;

     label03:
        $c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i15);

        $i18 = (int) $c1;

        if $i18 >= $i14 goto label04;

        $i19 = (int) $c1;

        $i4 = $r1[$i19];

        if $i4 == 0 goto label04;

        goto label07;

     label04:
        $i2 = lengthof r12;

        if i16 < $i2 goto label05;

        r12 = virtualinvoke r11.<org.codehaus.jackson.util.TextBuffer: char[] finishCurrentSegment()>();

        i16 = 0;

     label05:
        $i3 = i16;

        i16 = i16 + 1;

        r12[$i3] = $c1;

        i15 = i15 + 1;

        if i15 < $i0 goto label06;

        goto label13;

     label06:
        goto label03;

     label07:
        $i5 = i15;

        i15 = i15 + 1;

        $c6 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i5);

        $i20 = (int) $c6;

        i7 = $r1[$i20];

        if i7 >= 0 goto label08;

        $r9 = r0.<org.codehaus.jackson.io.JsonStringEncoder: char[] _quoteBuffer>;

        $i21 = (int) $c6;

        $i17 = specialinvoke r0.<org.codehaus.jackson.io.JsonStringEncoder: int _appendNumericEscape(int,char[])>($i21, $r9);

        goto label09;

     label08:
        $r4 = r0.<org.codehaus.jackson.io.JsonStringEncoder: char[] _quoteBuffer>;

        $i17 = specialinvoke r0.<org.codehaus.jackson.io.JsonStringEncoder: int _appendNamedEscape(int,char[])>(i7, $r4);

     label09:
        i8 = $i17;

        $i10 = i16 + $i17;

        $i9 = lengthof r12;

        if $i10 <= $i9 goto label11;

        $i11 = lengthof r12;

        i12 = $i11 - i16;

        if i12 <= 0 goto label10;

        $r8 = r0.<org.codehaus.jackson.io.JsonStringEncoder: char[] _quoteBuffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, r12, i16, i12);

     label10:
        $r6 = virtualinvoke r11.<org.codehaus.jackson.util.TextBuffer: char[] finishCurrentSegment()>();

        r12 = $r6;

        $i13 = i8 - i12;

        $r7 = r0.<org.codehaus.jackson.io.JsonStringEncoder: char[] _quoteBuffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, i12, $r6, 0, $i13);

        i16 = $i13;

        goto label12;

     label11:
        $r5 = r0.<org.codehaus.jackson.io.JsonStringEncoder: char[] _quoteBuffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r12, i16, $i17);

        i16 = i16 + $i17;

     label12:
        goto label02;

     label13:
        virtualinvoke r11.<org.codehaus.jackson.util.TextBuffer: void setCurrentLength(int)>(i16);

        $r3 = virtualinvoke r11.<org.codehaus.jackson.util.TextBuffer: char[] contentsAsArray()>();

        return $r3;
    }

    public byte[] quoteAsUTF8(java.lang.String)
    {
        byte[] $r3, r7;
        byte $b7, $b12, $b14, $b20, $b25, $b30, $b34, $b40;
        java.lang.String r1;
        org.codehaus.jackson.util.ByteArrayBuilder $r2, r6, $r8;
        int[] $r4;
        org.codehaus.jackson.io.JsonStringEncoder r0;
        int $i0, $i2, $i3, $i5, $i6, $i8, $i9, $i10, $i11, $i15, $i17, $i18, $i19, $i21, $i22, $i23, $i24, $i26, $i27, $i28, $i29, $i31, $i32, $i33, i36, $i37, $i38, $i39, i41, i42, i43, i44, i45, i46, i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i59, $i60, $i62, $i63, $i64, $i65, $i66, $i68, $i69, $i70, $i71, $i72;
        char $c1, $c4, $c13, $c16, $c35;

        r0 := @this: org.codehaus.jackson.io.JsonStringEncoder;

        r1 := @parameter0: java.lang.String;

        r6 = r0.<org.codehaus.jackson.io.JsonStringEncoder: org.codehaus.jackson.util.ByteArrayBuilder _byteBuilder>;

        if r6 != null goto label01;

        $r8 = new org.codehaus.jackson.util.ByteArrayBuilder;

        specialinvoke $r8.<org.codehaus.jackson.util.ByteArrayBuilder: void <init>(org.codehaus.jackson.util.BufferRecycler)>(null);

        r6 = $r8;

        r0.<org.codehaus.jackson.io.JsonStringEncoder: org.codehaus.jackson.util.ByteArrayBuilder _byteBuilder> = $r8;

     label01:
        i41 = 0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i42 = 0;

        r7 = virtualinvoke r6.<org.codehaus.jackson.util.ByteArrayBuilder: byte[] resetAndGetFirstSegment()>();

     label02:
        if i41 >= $i0 goto label21;

        $r4 = staticinvoke <org.codehaus.jackson.util.CharTypes: int[] get7BitOutputEscapes()>();

     label03:
        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i41);

        $i49 = (int) $c1;

        if $i49 > 127 goto label07;

        $i50 = (int) $c1;

        $i37 = $r4[$i50];

        if $i37 == 0 goto label04;

        goto label07;

     label04:
        $i38 = lengthof r7;

        if i42 < $i38 goto label05;

        r7 = virtualinvoke r6.<org.codehaus.jackson.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        i42 = 0;

     label05:
        $i39 = i42;

        i42 = i42 + 1;

        $b40 = (byte) $c1;

        r7[$i39] = $b40;

        i41 = i41 + 1;

        if i41 < $i0 goto label06;

        goto label21;

     label06:
        goto label03;

     label07:
        $i2 = lengthof r7;

        if i42 < $i2 goto label08;

        r7 = virtualinvoke r6.<org.codehaus.jackson.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        i42 = 0;

     label08:
        $i3 = i41;

        i41 = i41 + 1;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i3);

        $i51 = (int) $c4;

        if $i51 > 127 goto label09;

        $i52 = (int) $c4;

        i36 = $r4[$i52];

        $i53 = (int) $c4;

        i42 = specialinvoke r0.<org.codehaus.jackson.io.JsonStringEncoder: int _appendByteEscape(int,int,org.codehaus.jackson.util.ByteArrayBuilder,int)>($i53, i36, r6, i42);

        r7 = virtualinvoke r6.<org.codehaus.jackson.util.ByteArrayBuilder: byte[] getCurrentSegment()>();

        goto label02;

     label09:
        $i54 = (int) $c4;

        if $i54 > 2047 goto label10;

        i43 = i42 + 1;

        $i55 = (int) $c4;

        $i32 = $i55 >> 6;

        $i33 = 192 | $i32;

        $b34 = (byte) $i33;

        r7[i42] = $b34;

        $c35 = $c4 & 63;

        $i56 = (int) $c35;

        i44 = 128 | $i56;

        goto label19;

     label10:
        $i57 = (int) $c4;

        $i59 = (int) 55296;

        if $i57 < $i59 goto label11;

        $i60 = (int) $c4;

        $i62 = (int) 57343;

        if $i60 <= $i62 goto label13;

     label11:
        i45 = i42 + 1;

        $i63 = (int) $c4;

        $i5 = $i63 >> 12;

        $i6 = 224 | $i5;

        $b7 = (byte) $i6;

        r7[i42] = $b7;

        $i8 = lengthof r7;

        if i45 < $i8 goto label12;

        r7 = virtualinvoke r6.<org.codehaus.jackson.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        i45 = 0;

     label12:
        i43 = i45 + 1;

        $i64 = (int) $c4;

        $i9 = $i64 >> 6;

        $i10 = $i9 & 63;

        $i11 = 128 | $i10;

        $b12 = (byte) $i11;

        r7[i45] = $b12;

        $c13 = $c4 & 63;

        $i65 = (int) $c13;

        i44 = 128 | $i65;

        goto label19;

     label13:
        $i66 = (int) $c4;

        $i68 = (int) 56319;

        if $i66 <= $i68 goto label14;

        $i69 = (int) $c4;

        specialinvoke r0.<org.codehaus.jackson.io.JsonStringEncoder: void _throwIllegalSurrogate(int)>($i69);

     label14:
        if i41 < $i0 goto label15;

        $i70 = (int) $c4;

        specialinvoke r0.<org.codehaus.jackson.io.JsonStringEncoder: void _throwIllegalSurrogate(int)>($i70);

     label15:
        $i15 = i41;

        i41 = i41 + 1;

        $c16 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i15);

        $i71 = (int) $c4;

        $i72 = (int) $c16;

        $i17 = specialinvoke r0.<org.codehaus.jackson.io.JsonStringEncoder: int _convertSurrogate(int,int)>($i71, $i72);

        if $i17 <= 1114111 goto label16;

        specialinvoke r0.<org.codehaus.jackson.io.JsonStringEncoder: void _throwIllegalSurrogate(int)>($i17);

     label16:
        i46 = i42 + 1;

        $i18 = $i17 >> 18;

        $i19 = 240 | $i18;

        $b20 = (byte) $i19;

        r7[i42] = $b20;

        $i21 = lengthof r7;

        if i46 < $i21 goto label17;

        r7 = virtualinvoke r6.<org.codehaus.jackson.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        i46 = 0;

     label17:
        i47 = i46 + 1;

        $i22 = $i17 >> 12;

        $i23 = $i22 & 63;

        $i24 = 128 | $i23;

        $b25 = (byte) $i24;

        r7[i46] = $b25;

        $i26 = lengthof r7;

        if i47 < $i26 goto label18;

        r7 = virtualinvoke r6.<org.codehaus.jackson.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        i47 = 0;

     label18:
        i43 = i47 + 1;

        $i27 = $i17 >> 6;

        $i28 = $i27 & 63;

        $i29 = 128 | $i28;

        $b30 = (byte) $i29;

        r7[i47] = $b30;

        $i31 = $i17 & 63;

        i44 = 128 | $i31;

     label19:
        $i48 = lengthof r7;

        if i43 < $i48 goto label20;

        r7 = virtualinvoke r6.<org.codehaus.jackson.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        i43 = 0;

     label20:
        i42 = i43 + 1;

        $b14 = (byte) i44;

        r7[i43] = $b14;

        goto label02;

     label21:
        $r2 = r0.<org.codehaus.jackson.io.JsonStringEncoder: org.codehaus.jackson.util.ByteArrayBuilder _byteBuilder>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.util.ByteArrayBuilder: byte[] completeAndCoalesce(int)>(i42);

        return $r3;
    }

    public byte[] encodeAsUTF8(java.lang.String)
    {
        byte[] $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, r13;
        byte $b4, $b8, $b11, $b17, $b21, $b25, $b28, $b30;
        org.codehaus.jackson.io.JsonStringEncoder r0;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i9, $i10, $i12, $i14, $i15, $i16, $i18, $i19, $i20, $i22, $i23, $i24, $i26, $i27, $i29, $i31, i32, i33, i34, i35, i36, i37, i38, i39, $i41, $i43, $i45, $i47, $i49, $i50;
        java.lang.String r1;
        char $c13, $c40, $c42;
        org.codehaus.jackson.util.ByteArrayBuilder $r3, r12, $r14;

        r0 := @this: org.codehaus.jackson.io.JsonStringEncoder;

        r1 := @parameter0: java.lang.String;

        r12 = r0.<org.codehaus.jackson.io.JsonStringEncoder: org.codehaus.jackson.util.ByteArrayBuilder _byteBuilder>;

        if r12 != null goto label01;

        $r14 = new org.codehaus.jackson.util.ByteArrayBuilder;

        specialinvoke $r14.<org.codehaus.jackson.util.ByteArrayBuilder: void <init>(org.codehaus.jackson.util.BufferRecycler)>(null);

        r12 = $r14;

        r0.<org.codehaus.jackson.io.JsonStringEncoder: org.codehaus.jackson.util.ByteArrayBuilder _byteBuilder> = $r14;

     label01:
        i32 = 0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i33 = 0;

        $r2 = virtualinvoke r12.<org.codehaus.jackson.util.ByteArrayBuilder: byte[] resetAndGetFirstSegment()>();

        r13 = $r2;

        i34 = lengthof $r2;

     label02:
        if i32 >= $i0 goto label19;

        $i1 = i32;

        i32 = i32 + 1;

        $c40 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i1);

        $i41 = (int) $c40;

        i35 = $i41;

     label03:
        if i35 > 127 goto label06;

        if i33 < i34 goto label04;

        $r10 = virtualinvoke r12.<org.codehaus.jackson.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        r13 = $r10;

        i34 = lengthof $r10;

        i33 = 0;

     label04:
        $i29 = i33;

        i33 = i33 + 1;

        $b30 = (byte) i35;

        r13[$i29] = $b30;

        if i32 < $i0 goto label05;

        goto label19;

     label05:
        $i31 = i32;

        i32 = i32 + 1;

        $c42 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i31);

        $i43 = (int) $c42;

        i35 = $i43;

        goto label03;

     label06:
        if i33 < i34 goto label07;

        $r9 = virtualinvoke r12.<org.codehaus.jackson.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        r13 = $r9;

        i34 = lengthof $r9;

        i33 = 0;

     label07:
        if i35 >= 2048 goto label08;

        i36 = i33 + 1;

        $i26 = i35 >> 6;

        $i27 = 192 | $i26;

        $b28 = (byte) $i27;

        r13[i33] = $b28;

        goto label17;

     label08:
        $i45 = (int) 55296;

        if i35 < $i45 goto label09;

        $i47 = (int) 57343;

        if i35 <= $i47 goto label11;

     label09:
        i37 = i33 + 1;

        $i2 = i35 >> 12;

        $i3 = 224 | $i2;

        $b4 = (byte) $i3;

        r13[i33] = $b4;

        if i37 < i34 goto label10;

        $r6 = virtualinvoke r12.<org.codehaus.jackson.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        r13 = $r6;

        i34 = lengthof $r6;

        i37 = 0;

     label10:
        i36 = i37 + 1;

        $i5 = i35 >> 6;

        $i6 = $i5 & 63;

        $i7 = 128 | $i6;

        $b8 = (byte) $i7;

        r13[i37] = $b8;

        goto label17;

     label11:
        $i49 = (int) 56319;

        if i35 <= $i49 goto label12;

        specialinvoke r0.<org.codehaus.jackson.io.JsonStringEncoder: void _throwIllegalSurrogate(int)>(i35);

     label12:
        if i32 < $i0 goto label13;

        specialinvoke r0.<org.codehaus.jackson.io.JsonStringEncoder: void _throwIllegalSurrogate(int)>(i35);

     label13:
        $i12 = i32;

        i32 = i32 + 1;

        $c13 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i12);

        $i50 = (int) $c13;

        $i14 = specialinvoke r0.<org.codehaus.jackson.io.JsonStringEncoder: int _convertSurrogate(int,int)>(i35, $i50);

        i35 = $i14;

        if $i14 <= 1114111 goto label14;

        specialinvoke r0.<org.codehaus.jackson.io.JsonStringEncoder: void _throwIllegalSurrogate(int)>($i14);

     label14:
        i38 = i33 + 1;

        $i15 = $i14 >> 18;

        $i16 = 240 | $i15;

        $b17 = (byte) $i16;

        r13[i33] = $b17;

        if i38 < i34 goto label15;

        $r8 = virtualinvoke r12.<org.codehaus.jackson.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        r13 = $r8;

        i34 = lengthof $r8;

        i38 = 0;

     label15:
        i39 = i38 + 1;

        $i18 = $i14 >> 12;

        $i19 = $i18 & 63;

        $i20 = 128 | $i19;

        $b21 = (byte) $i20;

        r13[i38] = $b21;

        if i39 < i34 goto label16;

        $r7 = virtualinvoke r12.<org.codehaus.jackson.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        r13 = $r7;

        i34 = lengthof $r7;

        i39 = 0;

     label16:
        i36 = i39 + 1;

        $i22 = $i14 >> 6;

        $i23 = $i22 & 63;

        $i24 = 128 | $i23;

        $b25 = (byte) $i24;

        r13[i39] = $b25;

     label17:
        if i36 < i34 goto label18;

        $r5 = virtualinvoke r12.<org.codehaus.jackson.util.ByteArrayBuilder: byte[] finishCurrentSegment()>();

        r13 = $r5;

        i34 = lengthof $r5;

        i36 = 0;

     label18:
        i33 = i36 + 1;

        $i9 = i35 & 63;

        $i10 = 128 | $i9;

        $b11 = (byte) $i10;

        r13[i36] = $b11;

        goto label02;

     label19:
        $r3 = r0.<org.codehaus.jackson.io.JsonStringEncoder: org.codehaus.jackson.util.ByteArrayBuilder _byteBuilder>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.util.ByteArrayBuilder: byte[] completeAndCoalesce(int)>(i33);

        return $r4;
    }

    private int _appendNumericEscape(int, char[])
    {
        char $c2, $c4;
        int i0, $i1, $i3;
        org.codehaus.jackson.io.JsonStringEncoder r3;
        char[] r0, $r1, $r2;

        r3 := @this: org.codehaus.jackson.io.JsonStringEncoder;

        i0 := @parameter0: int;

        r0 := @parameter1: char[];

        r0[1] = 117;

        $r1 = <org.codehaus.jackson.io.JsonStringEncoder: char[] HEX_CHARS>;

        $i1 = i0 >> 4;

        $c2 = $r1[$i1];

        r0[4] = $c2;

        $r2 = <org.codehaus.jackson.io.JsonStringEncoder: char[] HEX_CHARS>;

        $i3 = i0 & 15;

        $c4 = $r2[$i3];

        r0[5] = $c4;

        return 6;
    }

    private int _appendNamedEscape(int, char[])
    {
        int i0;
        org.codehaus.jackson.io.JsonStringEncoder r1;
        char[] r0;
        char $c1;

        r1 := @this: org.codehaus.jackson.io.JsonStringEncoder;

        i0 := @parameter0: int;

        r0 := @parameter1: char[];

        $c1 = (char) i0;

        r0[1] = $c1;

        return 2;
    }

    private int _appendByteEscape(int, int, org.codehaus.jackson.util.ByteArrayBuilder, int)
    {
        byte[] $r1, $r2, $r3, $r4;
        byte $b2, $b5, $b7, $b10, $b12;
        int i0, i1, $i3, $i4, $i6, i8, $i9, $i11, i13, $i14, $i15, $i16, $i17, $i18;
        org.codehaus.jackson.io.JsonStringEncoder r5;
        org.codehaus.jackson.util.ByteArrayBuilder r0;

        r5 := @this: org.codehaus.jackson.io.JsonStringEncoder;

        i13 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: org.codehaus.jackson.util.ByteArrayBuilder;

        i0 := @parameter3: int;

        virtualinvoke r0.<org.codehaus.jackson.util.ByteArrayBuilder: void setCurrentSegmentLength(int)>(i0);

        virtualinvoke r0.<org.codehaus.jackson.util.ByteArrayBuilder: void append(int)>(92);

        if i1 >= 0 goto label3;

        virtualinvoke r0.<org.codehaus.jackson.util.ByteArrayBuilder: void append(int)>(117);

        if i13 <= 255 goto label1;

        i8 = i13 >> 8;

        $r3 = <org.codehaus.jackson.io.JsonStringEncoder: byte[] HEX_BYTES>;

        $i9 = i8 >> 4;

        $b10 = $r3[$i9];

        $i14 = (int) $b10;

        virtualinvoke r0.<org.codehaus.jackson.util.ByteArrayBuilder: void append(int)>($i14);

        $r4 = <org.codehaus.jackson.io.JsonStringEncoder: byte[] HEX_BYTES>;

        $i11 = i8 & 15;

        $b12 = $r4[$i11];

        $i15 = (int) $b12;

        virtualinvoke r0.<org.codehaus.jackson.util.ByteArrayBuilder: void append(int)>($i15);

        i13 = i13 & 255;

        goto label2;

     label1:
        virtualinvoke r0.<org.codehaus.jackson.util.ByteArrayBuilder: void append(int)>(48);

        virtualinvoke r0.<org.codehaus.jackson.util.ByteArrayBuilder: void append(int)>(48);

     label2:
        $r1 = <org.codehaus.jackson.io.JsonStringEncoder: byte[] HEX_BYTES>;

        $i4 = i13 >> 4;

        $b5 = $r1[$i4];

        $i16 = (int) $b5;

        virtualinvoke r0.<org.codehaus.jackson.util.ByteArrayBuilder: void append(int)>($i16);

        $r2 = <org.codehaus.jackson.io.JsonStringEncoder: byte[] HEX_BYTES>;

        $i6 = i13 & 15;

        $b7 = $r2[$i6];

        $i17 = (int) $b7;

        virtualinvoke r0.<org.codehaus.jackson.util.ByteArrayBuilder: void append(int)>($i17);

        goto label4;

     label3:
        $b2 = (byte) i1;

        $i18 = (int) $b2;

        virtualinvoke r0.<org.codehaus.jackson.util.ByteArrayBuilder: void append(int)>($i18);

     label4:
        $i3 = virtualinvoke r0.<org.codehaus.jackson.util.ByteArrayBuilder: int getCurrentSegmentLength()>();

        return $i3;
    }

    private int _convertSurrogate(int, int)
    {
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i8, $i10, $i12, $i14;
        java.lang.String $r3, $r6, $r9;
        java.lang.IllegalArgumentException $r12;
        org.codehaus.jackson.io.JsonStringEncoder r10;
        java.lang.StringBuilder $r2, $r4, $r5, $r7, $r8, $r11;

        r10 := @this: org.codehaus.jackson.io.JsonStringEncoder;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        $i8 = (int) 56320;

        if i0 < $i8 goto label1;

        $i10 = (int) 57343;

        if i0 <= $i10 goto label2;

     label1:
        $r12 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Broken surrogate pair: first char 0x");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", second 0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; illegal combination");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r12;

     label2:
        $i12 = (int) 55296;

        $i2 = i1 - $i12;

        $i3 = $i2 << 10;

        $i5 = 65536 + $i3;

        $i14 = (int) 56320;

        $i4 = i0 - $i14;

        $i6 = $i5 + $i4;

        return $i6;
    }

    private void _throwIllegalSurrogate(int)
    {
        org.codehaus.jackson.io.JsonStringEncoder r28;
        java.lang.StringBuilder $r2, $r4, $r5, $r9, $r11, $r12, $r16, $r18, $r19, $r23, $r25, $r26, $r29, $r31, $r33, $r35;
        int i0, $i2, $i4;
        java.lang.String $r3, $r6, $r10, $r13, $r17, $r20, $r24, $r27;
        java.lang.IllegalArgumentException $r30, $r32, $r34, $r36;

        r28 := @this: org.codehaus.jackson.io.JsonStringEncoder;

        i0 := @parameter0: int;

        if i0 <= 1114111 goto label1;

        $r30 = new java.lang.IllegalArgumentException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal character point (0x");

        $r24 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") to output; max is 0x10FFFF as per RFC 4627");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r27);

        throw $r30;

     label1:
        $i2 = (int) 55296;

        if i0 < $i2 goto label3;

        $i4 = (int) 56319;

        if i0 > $i4 goto label2;

        $r32 = new java.lang.IllegalArgumentException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unmatched first part of surrogate pair (0x");

        $r17 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r32;

     label2:
        $r34 = new java.lang.IllegalArgumentException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unmatched second part of surrogate pair (0x");

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r34;

     label3:
        $r36 = new java.lang.IllegalArgumentException;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal character point (0x");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") to output");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r36;
    }

    static void <clinit>()
    {
        char[] $r0;
        byte[] $r1;
        java.lang.ThreadLocal $r2;

        <org.codehaus.jackson.io.JsonStringEncoder: int INT_0> = 48;

        <org.codehaus.jackson.io.JsonStringEncoder: int INT_U> = 117;

        <org.codehaus.jackson.io.JsonStringEncoder: int INT_BACKSLASH> = 92;

        <org.codehaus.jackson.io.JsonStringEncoder: int SURR2_LAST> = 57343;

        <org.codehaus.jackson.io.JsonStringEncoder: int SURR2_FIRST> = 56320;

        <org.codehaus.jackson.io.JsonStringEncoder: int SURR1_LAST> = 56319;

        <org.codehaus.jackson.io.JsonStringEncoder: int SURR1_FIRST> = 55296;

        $r0 = staticinvoke <org.codehaus.jackson.util.CharTypes: char[] copyHexChars()>();

        <org.codehaus.jackson.io.JsonStringEncoder: char[] HEX_CHARS> = $r0;

        $r1 = staticinvoke <org.codehaus.jackson.util.CharTypes: byte[] copyHexBytes()>();

        <org.codehaus.jackson.io.JsonStringEncoder: byte[] HEX_BYTES> = $r1;

        $r2 = new java.lang.ThreadLocal;

        specialinvoke $r2.<java.lang.ThreadLocal: void <init>()>();

        <org.codehaus.jackson.io.JsonStringEncoder: java.lang.ThreadLocal _threadEncoder> = $r2;

        return;
    }
}
