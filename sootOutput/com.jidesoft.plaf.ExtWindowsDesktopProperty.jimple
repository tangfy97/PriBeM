public class com.jidesoft.plaf.ExtWindowsDesktopProperty extends java.lang.Object implements javax.swing.UIDefaults$ActiveValue
{
    private static boolean updatePending;
    private com.jidesoft.plaf.ExtWindowsDesktopProperty$WeakPCL pcl;
    private java.lang.String[] keys;
    private java.lang.Object[] value;
    private java.lang.Object[] fallback;
    private com.jidesoft.plaf.vsnet.ConvertListener listener;
    private java.awt.Toolkit toolkit;

    private static synchronized void setUpdatePending(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <com.jidesoft.plaf.ExtWindowsDesktopProperty: boolean updatePending> = z0;

        return;
    }

    private static synchronized boolean isUpdatePending()
    {
        boolean $z0;

        $z0 = <com.jidesoft.plaf.ExtWindowsDesktopProperty: boolean updatePending>;

        return $z0;
    }

    private static void updateAllUIs()
    {
        java.awt.Frame[] $r0;
        java.awt.Frame r1;
        int i0, i1;

        $r0 = staticinvoke <java.awt.Frame: java.awt.Frame[] getFrames()>();

        i0 = lengthof $r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r1 = $r0[i1];

        staticinvoke <com.jidesoft.plaf.ExtWindowsDesktopProperty: void updateWindowUI(java.awt.Window)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private static void updateWindowUI(java.awt.Window)
    {
        java.awt.Window[] $r1;
        java.awt.Window r0, r2;
        int i0, i1;

        r0 := @parameter0: java.awt.Window;

        staticinvoke <javax.swing.SwingUtilities: void updateComponentTreeUI(java.awt.Component)>(r0);

        $r1 = virtualinvoke r0.<java.awt.Window: java.awt.Window[] getOwnedWindows()>();

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = $r1[i1];

        staticinvoke <com.jidesoft.plaf.ExtWindowsDesktopProperty: void updateWindowUI(java.awt.Window)>(r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void <init>(java.lang.String[], java.lang.Object[], java.awt.Toolkit, com.jidesoft.plaf.vsnet.ConvertListener)
    {
        com.jidesoft.plaf.ExtWindowsDesktopProperty r0;
        com.jidesoft.plaf.vsnet.ConvertListener r4;
        java.lang.Object[] r2;
        java.lang.String[] r1;
        java.awt.Toolkit r3;

        r0 := @this: com.jidesoft.plaf.ExtWindowsDesktopProperty;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.lang.Object[];

        r3 := @parameter2: java.awt.Toolkit;

        r4 := @parameter3: com.jidesoft.plaf.vsnet.ConvertListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.lang.String[] keys> = r1;

        r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.lang.Object[] fallback> = r2;

        r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.awt.Toolkit toolkit> = r3;

        r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: com.jidesoft.plaf.vsnet.ConvertListener listener> = r4;

        return;
    }

    public java.lang.Object createValue(javax.swing.UIDefaults)
    {
        com.jidesoft.plaf.ExtWindowsDesktopProperty r0;
        java.lang.Object[] $r1, $r2, $r3, $r4, $r6, $r7, $r10;
        javax.swing.UIDefaults r8;
        com.jidesoft.plaf.vsnet.ConvertListener $r9;
        java.lang.Object $r5, $r11;

        r0 := @this: com.jidesoft.plaf.ExtWindowsDesktopProperty;

        r8 := @parameter0: javax.swing.UIDefaults;

        $r1 = r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.lang.Object[] value>;

        if $r1 != null goto label1;

        $r2 = virtualinvoke r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.lang.Object[] getValueFromDesktop()>();

        $r3 = virtualinvoke r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.lang.Object[] configureValue(java.lang.Object[])>($r2);

        r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.lang.Object[] value> = $r3;

        $r4 = r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.lang.Object[] value>;

        $r5 = $r4[0];

        if $r5 != null goto label1;

        $r6 = virtualinvoke r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.lang.Object[] getDefaultValue()>();

        $r7 = virtualinvoke r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.lang.Object[] configureValue(java.lang.Object[])>($r6);

        r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.lang.Object[] value> = $r7;

     label1:
        $r9 = r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: com.jidesoft.plaf.vsnet.ConvertListener listener>;

        $r10 = r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.lang.Object[] value>;

        $r11 = interfaceinvoke $r9.<com.jidesoft.plaf.vsnet.ConvertListener: java.lang.Object convert(java.lang.Object[])>($r10);

        return $r11;
    }

    protected java.lang.Object[] getValueFromDesktop()
    {
        java.lang.Object[] $r14;
        java.lang.String[] $r4, $r6, $r10, $r15;
        int $i0, i1, $i2;
        java.lang.String $r7, $r12;
        com.jidesoft.plaf.ExtWindowsDesktopProperty$WeakPCL $r2, $r11;
        com.jidesoft.plaf.ExtWindowsDesktopProperty r0;
        java.lang.Object $r8;
        java.awt.Toolkit $r1, $r3, $r5, $r9, $r13;

        r0 := @this: com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r1 = r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.awt.Toolkit toolkit>;

        if $r1 != null goto label1;

        $r13 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.awt.Toolkit toolkit> = $r13;

     label1:
        $r2 = new com.jidesoft.plaf.ExtWindowsDesktopProperty$WeakPCL;

        $r3 = r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.awt.Toolkit toolkit>;

        specialinvoke $r2.<com.jidesoft.plaf.ExtWindowsDesktopProperty$WeakPCL: void <init>(java.lang.Object,java.awt.Toolkit)>(r0, $r3);

        r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: com.jidesoft.plaf.ExtWindowsDesktopProperty$WeakPCL pcl> = $r2;

        $r4 = virtualinvoke r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.lang.String[] getKeys()>();

        $i0 = lengthof $r4;

        $r14 = newarray (java.lang.Object)[$i0];

        i1 = 0;

     label2:
        $r15 = virtualinvoke r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.lang.String[] getKeys()>();

        $i2 = lengthof $r15;

        if i1 >= $i2 goto label3;

        $r5 = r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.awt.Toolkit toolkit>;

        $r6 = virtualinvoke r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.lang.String[] getKeys()>();

        $r7 = $r6[i1];

        $r8 = virtualinvoke $r5.<java.awt.Toolkit: java.lang.Object getDesktopProperty(java.lang.String)>($r7);

        $r14[i1] = $r8;

        $r9 = r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.awt.Toolkit toolkit>;

        $r10 = virtualinvoke r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.lang.String[] getKeys()>();

        $r12 = $r10[i1];

        $r11 = r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: com.jidesoft.plaf.ExtWindowsDesktopProperty$WeakPCL pcl>;

        virtualinvoke $r9.<java.awt.Toolkit: void addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>($r12, $r11);

        i1 = i1 + 1;

        goto label2;

     label3:
        return $r14;
    }

    protected java.lang.Object[] getDefaultValue()
    {
        com.jidesoft.plaf.ExtWindowsDesktopProperty r0;
        java.lang.Object[] $r1;

        r0 := @this: com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r1 = r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.lang.Object[] fallback>;

        return $r1;
    }

    public void invalidate()
    {
        com.jidesoft.plaf.ExtWindowsDesktopProperty$WeakPCL $r1, $r5;
        com.jidesoft.plaf.ExtWindowsDesktopProperty r0;
        java.lang.String[] $r2, $r4;
        int $i0, i1;
        java.lang.String $r6;
        java.awt.Toolkit $r3;

        r0 := @this: com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r1 = r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: com.jidesoft.plaf.ExtWindowsDesktopProperty$WeakPCL pcl>;

        if $r1 == null goto label3;

        i1 = 0;

     label1:
        $r2 = virtualinvoke r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.lang.String[] getKeys()>();

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label2;

        $r3 = r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.awt.Toolkit toolkit>;

        $r4 = virtualinvoke r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.lang.String[] getKeys()>();

        $r6 = $r4[i1];

        $r5 = r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: com.jidesoft.plaf.ExtWindowsDesktopProperty$WeakPCL pcl>;

        virtualinvoke $r3.<java.awt.Toolkit: void removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>($r6, $r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.awt.Toolkit toolkit> = null;

        r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: com.jidesoft.plaf.ExtWindowsDesktopProperty$WeakPCL pcl> = null;

        r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.lang.Object[] value> = null;

     label3:
        return;
    }

    protected void updateUI()
    {
        com.jidesoft.plaf.ExtWindowsDesktopProperty r1;
        com.jidesoft.plaf.ExtWindowsDesktopProperty$1 $r0;
        boolean $z0;

        r1 := @this: com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $z0 = staticinvoke <com.jidesoft.plaf.ExtWindowsDesktopProperty: boolean isUpdatePending()>();

        if $z0 != 0 goto label1;

        staticinvoke <com.jidesoft.plaf.ExtWindowsDesktopProperty: void setUpdatePending(boolean)>(1);

        $r0 = new com.jidesoft.plaf.ExtWindowsDesktopProperty$1;

        specialinvoke $r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty$1: void <init>(com.jidesoft.plaf.ExtWindowsDesktopProperty)>(r1);

        staticinvoke <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>($r0);

     label1:
        return;
    }

    protected java.lang.Object[] configureValue(java.lang.Object[])
    {
        com.jidesoft.plaf.ExtWindowsDesktopProperty r1;
        java.lang.Object[] r0;
        int $i0, i1;
        java.lang.Object $r2, $r3;

        r1 := @this: com.jidesoft.plaf.ExtWindowsDesktopProperty;

        r0 := @parameter0: java.lang.Object[];

        if r0 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label2;

        $r2 = r0[i1];

        $r3 = virtualinvoke r1.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.lang.Object configureValue(java.lang.Object)>($r2);

        r0[i1] = $r3;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    protected java.lang.Object configureValue(java.lang.Object)
    {
        java.awt.Color $r5;
        com.jidesoft.plaf.ExtWindowsDesktopProperty r6;
        javax.swing.plaf.FontUIResource $r2;
        java.awt.Font $r3;
        javax.swing.plaf.ColorUIResource $r4;
        javax.swing.UIDefaults$ActiveValue $r0;
        javax.swing.UIDefaults$ProxyLazyValue $r1;
        java.lang.Object r7;
        boolean $z0, $z1, $z2, $z3;

        r6 := @this: com.jidesoft.plaf.ExtWindowsDesktopProperty;

        r7 := @parameter0: java.lang.Object;

        if r7 == null goto label4;

        $z0 = r7 instanceof java.awt.Color;

        if $z0 == 0 goto label1;

        $r4 = new javax.swing.plaf.ColorUIResource;

        $r5 = (java.awt.Color) r7;

        specialinvoke $r4.<javax.swing.plaf.ColorUIResource: void <init>(java.awt.Color)>($r5);

        return $r4;

     label1:
        $z1 = r7 instanceof java.awt.Font;

        if $z1 == 0 goto label2;

        $r2 = new javax.swing.plaf.FontUIResource;

        $r3 = (java.awt.Font) r7;

        specialinvoke $r2.<javax.swing.plaf.FontUIResource: void <init>(java.awt.Font)>($r3);

        return $r2;

     label2:
        $z2 = r7 instanceof javax.swing.UIDefaults$ProxyLazyValue;

        if $z2 == 0 goto label3;

        $r1 = (javax.swing.UIDefaults$ProxyLazyValue) r7;

        r7 = virtualinvoke $r1.<javax.swing.UIDefaults$ProxyLazyValue: java.lang.Object createValue(javax.swing.UIDefaults)>(null);

        goto label4;

     label3:
        $z3 = r7 instanceof javax.swing.UIDefaults$ActiveValue;

        if $z3 == 0 goto label4;

        $r0 = (javax.swing.UIDefaults$ActiveValue) r7;

        r7 = interfaceinvoke $r0.<javax.swing.UIDefaults$ActiveValue: java.lang.Object createValue(javax.swing.UIDefaults)>(null);

     label4:
        return r7;
    }

    protected java.lang.String[] getKeys()
    {
        com.jidesoft.plaf.ExtWindowsDesktopProperty r0;
        java.lang.String[] $r1;

        r0 := @this: com.jidesoft.plaf.ExtWindowsDesktopProperty;

        $r1 = r0.<com.jidesoft.plaf.ExtWindowsDesktopProperty: java.lang.String[] keys>;

        return $r1;
    }

    static void access$000()
    {
        staticinvoke <com.jidesoft.plaf.ExtWindowsDesktopProperty: void updateAllUIs()>();

        return;
    }

    static void access$100(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        staticinvoke <com.jidesoft.plaf.ExtWindowsDesktopProperty: void setUpdatePending(boolean)>(z0);

        return;
    }
}
