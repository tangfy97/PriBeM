public class org.apache.xmlbeans.impl.common.SystemCache extends java.lang.Object
{
    private static org.apache.xmlbeans.impl.common.SystemCache INSTANCE;
    private java.lang.ThreadLocal tl_saxLoaders;

    public void <init>()
    {
        java.lang.ThreadLocal $r1;
        org.apache.xmlbeans.impl.common.SystemCache r0;

        r0 := @this: org.apache.xmlbeans.impl.common.SystemCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.ThreadLocal;

        specialinvoke $r1.<java.lang.ThreadLocal: void <init>()>();

        r0.<org.apache.xmlbeans.impl.common.SystemCache: java.lang.ThreadLocal tl_saxLoaders> = $r1;

        return;
    }

    public static final synchronized void set(org.apache.xmlbeans.impl.common.SystemCache)
    {
        org.apache.xmlbeans.impl.common.SystemCache r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.common.SystemCache;

        <org.apache.xmlbeans.impl.common.SystemCache: org.apache.xmlbeans.impl.common.SystemCache INSTANCE> = r0;

        return;
    }

    public static final org.apache.xmlbeans.impl.common.SystemCache get()
    {
        org.apache.xmlbeans.impl.common.SystemCache $r0;

        $r0 = <org.apache.xmlbeans.impl.common.SystemCache: org.apache.xmlbeans.impl.common.SystemCache INSTANCE>;

        return $r0;
    }

    public org.apache.xmlbeans.SchemaTypeLoader getFromTypeLoaderCache(java.lang.ClassLoader)
    {
        java.lang.ClassLoader r1;
        org.apache.xmlbeans.impl.common.SystemCache r0;

        r0 := @this: org.apache.xmlbeans.impl.common.SystemCache;

        r1 := @parameter0: java.lang.ClassLoader;

        return null;
    }

    public void addToTypeLoaderCache(org.apache.xmlbeans.SchemaTypeLoader, java.lang.ClassLoader)
    {
        java.lang.ClassLoader r2;
        org.apache.xmlbeans.impl.common.SystemCache r0;
        org.apache.xmlbeans.SchemaTypeLoader r1;

        r0 := @this: org.apache.xmlbeans.impl.common.SystemCache;

        r1 := @parameter0: org.apache.xmlbeans.SchemaTypeLoader;

        r2 := @parameter1: java.lang.ClassLoader;

        return;
    }

    public java.lang.Object getSaxLoader()
    {
        java.lang.ThreadLocal $r1;
        org.apache.xmlbeans.impl.common.SystemCache r0;
        java.lang.Object $r2, $r4;
        java.lang.ref.SoftReference r3;

        r0 := @this: org.apache.xmlbeans.impl.common.SystemCache;

        $r1 = r0.<org.apache.xmlbeans.impl.common.SystemCache: java.lang.ThreadLocal tl_saxLoaders>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r3 = (java.lang.ref.SoftReference) $r2;

        if r3 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke r3.<java.lang.ref.SoftReference: java.lang.Object get()>();

        return $r4;
    }

    public void setSaxLoader(java.lang.Object)
    {
        java.lang.ThreadLocal $r3;
        org.apache.xmlbeans.impl.common.SystemCache r0;
        java.lang.Object r2;
        java.lang.ref.SoftReference $r1;

        r0 := @this: org.apache.xmlbeans.impl.common.SystemCache;

        r2 := @parameter0: java.lang.Object;

        $r3 = r0.<org.apache.xmlbeans.impl.common.SystemCache: java.lang.ThreadLocal tl_saxLoaders>;

        $r1 = new java.lang.ref.SoftReference;

        specialinvoke $r1.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>(r2);

        virtualinvoke $r3.<java.lang.ThreadLocal: void set(java.lang.Object)>($r1);

        return;
    }

    static void <clinit>()
    {
        java.lang.InstantiationException $r19;
        boolean $z0;
        java.lang.IllegalAccessException $r11;
        java.lang.ClassCastException $r5;
        java.lang.StringBuffer $r6, $r7, $r8, $r9, $r13, $r14, $r15, $r16, $r17, $r21, $r22, $r23, $r24, $r25, $r29, $r30, $r31, $r32;
        java.lang.String $r1, $r10, $r18, $r26, $r33;
        java.lang.RuntimeException $r12, $r20, $r28;
        org.apache.xmlbeans.impl.common.SystemCache $r0, $r2;
        java.lang.Class $r3;
        java.lang.Object $r4, r34;
        java.lang.ClassNotFoundException $r27;

        $r0 = new org.apache.xmlbeans.impl.common.SystemCache;

        specialinvoke $r0.<org.apache.xmlbeans.impl.common.SystemCache: void <init>()>();

        <org.apache.xmlbeans.impl.common.SystemCache: org.apache.xmlbeans.impl.common.SystemCache INSTANCE> = $r0;

        $r1 = staticinvoke <org.apache.xmlbeans.SystemProperties: java.lang.String getProperty(java.lang.String)>("xmlbean.systemcacheimpl");

        r34 = null;

        if $r1 == null goto label6;

     label1:
        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>();

        r34 = $r4;

        $z0 = $r4 instanceof org.apache.xmlbeans.impl.common.SystemCache;

        if $z0 != 0 goto label2;

        $r5 = new java.lang.ClassCastException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Value for system property \"xmlbean.systemcacheimpl\" points to a class (");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") which does not derive from SystemCache");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.ClassCastException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label2:
        goto label6;

     label3:
        $r27 := @caughtexception;

        $r28 = new java.lang.RuntimeException;

        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cache class ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" specified by \"xmlbean.systemcacheimpl\" was not found.");

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r33, $r27);

        throw $r28;

     label4:
        $r19 := @caughtexception;

        $r20 = new java.lang.RuntimeException;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not instantiate class ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" as specified by \"xmlbean.systemcacheimpl\".");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" An empty constructor may be missing.");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r26, $r19);

        throw $r20;

     label5:
        $r11 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not instantiate class ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" as specified by \"xmlbean.systemcacheimpl\".");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" A public empty constructor may be missing.");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r18, $r11);

        throw $r12;

     label6:
        if r34 == null goto label7;

        $r2 = (org.apache.xmlbeans.impl.common.SystemCache) r34;

        <org.apache.xmlbeans.impl.common.SystemCache: org.apache.xmlbeans.impl.common.SystemCache INSTANCE> = $r2;

     label7:
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.InstantiationException from label1 to label2 with label4;
        catch java.lang.IllegalAccessException from label1 to label2 with label5;
    }
}
