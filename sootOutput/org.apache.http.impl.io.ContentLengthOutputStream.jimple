public class org.apache.http.impl.io.ContentLengthOutputStream extends java.io.OutputStream
{
    private final org.apache.http.io.SessionOutputBuffer out;
    private final long contentLength;
    private long total;
    private boolean closed;

    public void <init>(org.apache.http.io.SessionOutputBuffer, long)
    {
        org.apache.http.io.SessionOutputBuffer r1;
        byte $b1;
        org.apache.http.impl.io.ContentLengthOutputStream r0;
        int $i2;
        long l0;
        java.lang.IllegalArgumentException $r4, $r5;

        r0 := @this: org.apache.http.impl.io.ContentLengthOutputStream;

        r1 := @parameter0: org.apache.http.io.SessionOutputBuffer;

        l0 := @parameter1: long;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        r0.<org.apache.http.impl.io.ContentLengthOutputStream: long total> = 0L;

        r0.<org.apache.http.impl.io.ContentLengthOutputStream: boolean closed> = 0;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Session output buffer may not be null");

        throw $r4;

     label1:
        $b1 = l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Content length may not be negative");

        throw $r5;

     label2:
        r0.<org.apache.http.impl.io.ContentLengthOutputStream: org.apache.http.io.SessionOutputBuffer out> = r1;

        r0.<org.apache.http.impl.io.ContentLengthOutputStream: long contentLength> = l0;

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.http.io.SessionOutputBuffer $r1;
        org.apache.http.impl.io.ContentLengthOutputStream r0;
        boolean $z0;

        r0 := @this: org.apache.http.impl.io.ContentLengthOutputStream;

        $z0 = r0.<org.apache.http.impl.io.ContentLengthOutputStream: boolean closed>;

        if $z0 != 0 goto label1;

        r0.<org.apache.http.impl.io.ContentLengthOutputStream: boolean closed> = 1;

        $r1 = r0.<org.apache.http.impl.io.ContentLengthOutputStream: org.apache.http.io.SessionOutputBuffer out>;

        interfaceinvoke $r1.<org.apache.http.io.SessionOutputBuffer: void flush()>();

     label1:
        return;
    }

    public void flush() throws java.io.IOException
    {
        org.apache.http.io.SessionOutputBuffer $r1;
        org.apache.http.impl.io.ContentLengthOutputStream r0;

        r0 := @this: org.apache.http.impl.io.ContentLengthOutputStream;

        $r1 = r0.<org.apache.http.impl.io.ContentLengthOutputStream: org.apache.http.io.SessionOutputBuffer out>;

        interfaceinvoke $r1.<org.apache.http.io.SessionOutputBuffer: void flush()>();

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        long $l0, $l1, $l3, $l4, l5, $l6, $l9, $l10, $l11;
        byte $b2, $b7;
        org.apache.http.io.SessionOutputBuffer $r2;
        org.apache.http.impl.io.ContentLengthOutputStream r0;
        int i8, i12, $i13, $i14;
        boolean $z0;
        java.io.IOException $r4;

        r0 := @this: org.apache.http.impl.io.ContentLengthOutputStream;

        r1 := @parameter0: byte[];

        i8 := @parameter1: int;

        i12 := @parameter2: int;

        $z0 = r0.<org.apache.http.impl.io.ContentLengthOutputStream: boolean closed>;

        if $z0 == 0 goto label1;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("Attempted write to closed stream.");

        throw $r4;

     label1:
        $l1 = r0.<org.apache.http.impl.io.ContentLengthOutputStream: long total>;

        $l0 = r0.<org.apache.http.impl.io.ContentLengthOutputStream: long contentLength>;

        $b2 = $l1 cmp $l0;

        $i13 = (int) $b2;

        if $i13 >= 0 goto label3;

        $l4 = r0.<org.apache.http.impl.io.ContentLengthOutputStream: long contentLength>;

        $l3 = r0.<org.apache.http.impl.io.ContentLengthOutputStream: long total>;

        l5 = $l4 - $l3;

        $l6 = (long) i12;

        $b7 = $l6 cmp l5;

        $i14 = (int) $b7;

        if $i14 <= 0 goto label2;

        i12 = (int) l5;

     label2:
        $r2 = r0.<org.apache.http.impl.io.ContentLengthOutputStream: org.apache.http.io.SessionOutputBuffer out>;

        interfaceinvoke $r2.<org.apache.http.io.SessionOutputBuffer: void write(byte[],int,int)>(r1, i8, i12);

        $l10 = r0.<org.apache.http.impl.io.ContentLengthOutputStream: long total>;

        $l9 = (long) i12;

        $l11 = $l10 + $l9;

        r0.<org.apache.http.impl.io.ContentLengthOutputStream: long total> = $l11;

     label3:
        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        int $i0;
        byte[] r1;
        org.apache.http.impl.io.ContentLengthOutputStream r0;

        r0 := @this: org.apache.http.impl.io.ContentLengthOutputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<org.apache.http.impl.io.ContentLengthOutputStream: void write(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public void write(int) throws java.io.IOException
    {
        long $l0, $l1, $l4, $l5;
        java.io.IOException $r3;
        byte $b2;
        org.apache.http.io.SessionOutputBuffer $r1;
        org.apache.http.impl.io.ContentLengthOutputStream r0;
        int i3, $i6;
        boolean $z0;

        r0 := @this: org.apache.http.impl.io.ContentLengthOutputStream;

        i3 := @parameter0: int;

        $z0 = r0.<org.apache.http.impl.io.ContentLengthOutputStream: boolean closed>;

        if $z0 == 0 goto label1;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Attempted write to closed stream.");

        throw $r3;

     label1:
        $l1 = r0.<org.apache.http.impl.io.ContentLengthOutputStream: long total>;

        $l0 = r0.<org.apache.http.impl.io.ContentLengthOutputStream: long contentLength>;

        $b2 = $l1 cmp $l0;

        $i6 = (int) $b2;

        if $i6 >= 0 goto label2;

        $r1 = r0.<org.apache.http.impl.io.ContentLengthOutputStream: org.apache.http.io.SessionOutputBuffer out>;

        interfaceinvoke $r1.<org.apache.http.io.SessionOutputBuffer: void write(int)>(i3);

        $l4 = r0.<org.apache.http.impl.io.ContentLengthOutputStream: long total>;

        $l5 = $l4 + 1L;

        r0.<org.apache.http.impl.io.ContentLengthOutputStream: long total> = $l5;

     label2:
        return;
    }
}
