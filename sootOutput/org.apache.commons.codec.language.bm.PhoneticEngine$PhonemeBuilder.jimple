final class org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder extends java.lang.Object
{
    private final java.util.Set phonemes;

    public static org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder empty(org.apache.commons.codec.language.bm.Languages$LanguageSet)
    {
        org.apache.commons.codec.language.bm.Languages$LanguageSet r2;
        org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder $r0;
        java.util.Set $r3;
        org.apache.commons.codec.language.bm.Rule$Phoneme $r1;

        r2 := @parameter0: org.apache.commons.codec.language.bm.Languages$LanguageSet;

        $r0 = new org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        $r1 = new org.apache.commons.codec.language.bm.Rule$Phoneme;

        specialinvoke $r1.<org.apache.commons.codec.language.bm.Rule$Phoneme: void <init>(java.lang.CharSequence,org.apache.commons.codec.language.bm.Languages$LanguageSet)>("", r2);

        $r3 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r1);

        specialinvoke $r0.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: void <init>(java.util.Set)>($r3);

        return $r0;
    }

    private void <init>(java.util.Set)
    {
        java.util.Set r1;
        org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder r0;

        r0 := @this: org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        r1 := @parameter0: java.util.Set;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: java.util.Set phonemes> = r1;

        return;
    }

    public org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder append(java.lang.CharSequence)
    {
        java.util.Iterator $r3;
        java.lang.CharSequence r7;
        java.util.Set $r2;
        org.apache.commons.codec.language.bm.Rule$Phoneme r6, $r8;
        java.util.HashSet $r0;
        org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder r1, $r4;
        java.lang.Object $r5;
        boolean $z0;

        r1 := @this: org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        r7 := @parameter0: java.lang.CharSequence;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r2 = r1.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: java.util.Set phonemes>;

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.commons.codec.language.bm.Rule$Phoneme) $r5;

        $r8 = virtualinvoke r6.<org.apache.commons.codec.language.bm.Rule$Phoneme: org.apache.commons.codec.language.bm.Rule$Phoneme append(java.lang.CharSequence)>(r7);

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        $r4 = new org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        specialinvoke $r4.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: void <init>(java.util.Set)>($r0);

        return $r4;
    }

    public org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr)
    {
        org.apache.commons.codec.language.bm.Rule$Phoneme r6, r11, $r12;
        java.lang.Iterable $r8;
        java.util.HashSet $r0;
        org.apache.commons.codec.language.bm.Languages$LanguageSet $r13;
        org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder r1, $r4;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r3, $r9;
        java.util.Set $r2;
        org.apache.commons.codec.language.bm.Rule$PhonemeExpr r7;
        java.lang.Object $r5, $r10;

        r1 := @this: org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        r7 := @parameter0: org.apache.commons.codec.language.bm.Rule$PhonemeExpr;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r2 = r1.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: java.util.Set phonemes>;

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.commons.codec.language.bm.Rule$Phoneme) $r5;

        $r8 = interfaceinvoke r7.<org.apache.commons.codec.language.bm.Rule$PhonemeExpr: java.lang.Iterable getPhonemes()>();

        $r9 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.apache.commons.codec.language.bm.Rule$Phoneme) $r10;

        $r12 = virtualinvoke r6.<org.apache.commons.codec.language.bm.Rule$Phoneme: org.apache.commons.codec.language.bm.Rule$Phoneme join(org.apache.commons.codec.language.bm.Rule$Phoneme)>(r11);

        $r13 = virtualinvoke $r12.<org.apache.commons.codec.language.bm.Rule$Phoneme: org.apache.commons.codec.language.bm.Languages$LanguageSet getLanguages()>();

        $z2 = virtualinvoke $r13.<org.apache.commons.codec.language.bm.Languages$LanguageSet: boolean isEmpty()>();

        if $z2 != 0 goto label3;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r12);

     label3:
        goto label2;

     label4:
        goto label1;

     label5:
        $r4 = new org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        specialinvoke $r4.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: void <init>(java.util.Set)>($r0);

        return $r4;
    }

    public java.util.Set getPhonemes()
    {
        java.util.Set $r1;
        org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder r0;

        r0 := @this: org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        $r1 = r0.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: java.util.Set phonemes>;

        return $r1;
    }

    public java.lang.String makeString()
    {
        java.util.Iterator $r3;
        java.lang.CharSequence $r7;
        java.util.Set $r2;
        org.apache.commons.codec.language.bm.Rule$Phoneme r6;
        org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder r1;
        int $i0;
        java.lang.StringBuilder $r0;
        java.lang.Object $r5;
        java.lang.String $r4;
        boolean $z0;

        r1 := @this: org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: java.util.Set phonemes>;

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.commons.codec.language.bm.Rule$Phoneme) $r5;

        $i0 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

     label2:
        $r7 = virtualinvoke r6.<org.apache.commons.codec.language.bm.Rule$Phoneme: java.lang.CharSequence getPhonemeText()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r7);

        goto label1;

     label3:
        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    void <init>(java.util.Set, org.apache.commons.codec.language.bm.PhoneticEngine$1)
    {
        java.util.Set r1;
        org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder r0;
        org.apache.commons.codec.language.bm.PhoneticEngine$1 r2;

        r0 := @this: org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder;

        r1 := @parameter0: java.util.Set;

        r2 := @parameter1: org.apache.commons.codec.language.bm.PhoneticEngine$1;

        specialinvoke r0.<org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder: void <init>(java.util.Set)>(r1);

        return;
    }
}
