public class com.sun.syndication.io.WireFeedInput extends java.lang.Object
{
    private static java.util.Map clMap;
    private static final org.xml.sax.InputSource EMPTY_INPUTSOURCE;
    private static final org.xml.sax.EntityResolver RESOLVER;
    private boolean _validate;
    private boolean _xmlHealerOn;
    static java.lang.Class class$com$sun$syndication$io$WireFeedInput;

    private static com.sun.syndication.io.impl.FeedParsers getFeedParsers()
    {
        java.lang.Throwable $r11;
        java.util.Map $r2, $r7;
        java.lang.Thread $r3, $r8;
        java.lang.Class $r0, r1, $r12;
        java.lang.Object $r5;
        java.lang.ClassLoader $r4, $r9;
        com.sun.syndication.io.impl.FeedParsers $r6, $r10, r13;

        $r0 = <com.sun.syndication.io.WireFeedInput: java.lang.Class class$com$sun$syndication$io$WireFeedInput>;

        if $r0 != null goto label1;

        $r12 = staticinvoke <com.sun.syndication.io.WireFeedInput: java.lang.Class class$(java.lang.String)>("com.sun.syndication.io.WireFeedInput");

        <com.sun.syndication.io.WireFeedInput: java.lang.Class class$com$sun$syndication$io$WireFeedInput> = $r12;

        goto label2;

     label1:
        $r12 = <com.sun.syndication.io.WireFeedInput: java.lang.Class class$com$sun$syndication$io$WireFeedInput>;

     label2:
        r1 = $r12;

        entermonitor $r12;

     label3:
        $r2 = <com.sun.syndication.io.WireFeedInput: java.util.Map clMap>;

        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r4 = virtualinvoke $r3.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r10 = (com.sun.syndication.io.impl.FeedParsers) $r5;

        r13 = $r10;

        if $r10 != null goto label4;

        $r6 = new com.sun.syndication.io.impl.FeedParsers;

        specialinvoke $r6.<com.sun.syndication.io.impl.FeedParsers: void <init>()>();

        r13 = $r6;

        $r7 = <com.sun.syndication.io.WireFeedInput: java.util.Map clMap>;

        $r8 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r9 = virtualinvoke $r8.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r6);

     label4:
        exitmonitor r1;

     label5:
        return r13;

     label6:
        $r11 := @caughtexception;

        exitmonitor r1;

     label7:
        throw $r11;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static java.util.List getSupportedFeedTypes()
    {
        java.util.List $r1;
        com.sun.syndication.io.impl.FeedParsers $r0;

        $r0 = staticinvoke <com.sun.syndication.io.WireFeedInput: com.sun.syndication.io.impl.FeedParsers getFeedParsers()>();

        $r1 = virtualinvoke $r0.<com.sun.syndication.io.impl.FeedParsers: java.util.List getSupportedFeedTypes()>();

        return $r1;
    }

    public void <init>()
    {
        com.sun.syndication.io.WireFeedInput r0;

        r0 := @this: com.sun.syndication.io.WireFeedInput;

        specialinvoke r0.<com.sun.syndication.io.WireFeedInput: void <init>(boolean)>(0);

        return;
    }

    public void <init>(boolean)
    {
        com.sun.syndication.io.WireFeedInput r0;
        boolean z0;

        r0 := @this: com.sun.syndication.io.WireFeedInput;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.sun.syndication.io.WireFeedInput: boolean _validate> = 0;

        r0.<com.sun.syndication.io.WireFeedInput: boolean _xmlHealerOn> = 1;

        return;
    }

    public void setXmlHealerOn(boolean)
    {
        com.sun.syndication.io.WireFeedInput r0;
        boolean z0;

        r0 := @this: com.sun.syndication.io.WireFeedInput;

        z0 := @parameter0: boolean;

        r0.<com.sun.syndication.io.WireFeedInput: boolean _xmlHealerOn> = z0;

        return;
    }

    public boolean getXmlHealerOn()
    {
        com.sun.syndication.io.WireFeedInput r0;
        boolean $z0;

        r0 := @this: com.sun.syndication.io.WireFeedInput;

        $z0 = r0.<com.sun.syndication.io.WireFeedInput: boolean _xmlHealerOn>;

        return $z0;
    }

    public com.sun.syndication.feed.WireFeed build(java.io.File) throws java.io.FileNotFoundException, java.io.IOException, java.lang.IllegalArgumentException, com.sun.syndication.io.FeedException
    {
        com.sun.syndication.io.WireFeedInput r2;
        com.sun.syndication.io.impl.XmlFixerReader $r4;
        com.sun.syndication.feed.WireFeed $r3;
        java.io.FileReader $r0;
        java.io.Reader r5;
        java.io.File r1;
        boolean $z0;

        r2 := @this: com.sun.syndication.io.WireFeedInput;

        r1 := @parameter0: java.io.File;

        $r0 = new java.io.FileReader;

        specialinvoke $r0.<java.io.FileReader: void <init>(java.io.File)>(r1);

        r5 = $r0;

        $z0 = r2.<com.sun.syndication.io.WireFeedInput: boolean _xmlHealerOn>;

        if $z0 == 0 goto label1;

        $r4 = new com.sun.syndication.io.impl.XmlFixerReader;

        specialinvoke $r4.<com.sun.syndication.io.impl.XmlFixerReader: void <init>(java.io.Reader)>($r0);

        r5 = $r4;

     label1:
        $r3 = virtualinvoke r2.<com.sun.syndication.io.WireFeedInput: com.sun.syndication.feed.WireFeed build(java.io.Reader)>(r5);

        virtualinvoke r5.<java.io.Reader: void close()>();

        return $r3;
    }

    public com.sun.syndication.feed.WireFeed build(java.io.Reader) throws java.lang.IllegalArgumentException, com.sun.syndication.io.FeedException
    {
        com.sun.syndication.io.WireFeedInput r0;
        com.sun.syndication.feed.WireFeed $r3;
        org.jdom.Document $r2;
        java.lang.StringBuffer $r10, $r11, $r13;
        com.sun.syndication.io.impl.XmlFixerReader $r4;
        java.lang.String $r12, $r14;
        boolean $z0;
        com.sun.syndication.io.ParsingFeedException $r6, $r9;
        java.io.Reader r15;
        java.lang.IllegalArgumentException $r7;
        java.lang.Exception $r5;
        org.jdom.input.JDOMParseException $r8;
        com.sun.syndication.io.SAXBuilder $r1;

        r0 := @this: com.sun.syndication.io.WireFeedInput;

        r15 := @parameter0: java.io.Reader;

        $r1 = virtualinvoke r0.<com.sun.syndication.io.WireFeedInput: com.sun.syndication.io.SAXBuilder createSAXBuilder()>();

     label1:
        $z0 = r0.<com.sun.syndication.io.WireFeedInput: boolean _xmlHealerOn>;

        if $z0 == 0 goto label2;

        $r4 = new com.sun.syndication.io.impl.XmlFixerReader;

        specialinvoke $r4.<com.sun.syndication.io.impl.XmlFixerReader: void <init>(java.io.Reader)>(r15);

        r15 = $r4;

     label2:
        $r2 = virtualinvoke $r1.<com.sun.syndication.io.SAXBuilder: org.jdom.Document build(java.io.Reader)>(r15);

        $r3 = virtualinvoke r0.<com.sun.syndication.io.WireFeedInput: com.sun.syndication.feed.WireFeed build(org.jdom.Document)>($r2);

     label3:
        return $r3;

     label4:
        $r8 := @caughtexception;

        $r9 = new com.sun.syndication.io.ParsingFeedException;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid XML: ");

        $r12 = virtualinvoke $r8.<org.jdom.input.JDOMParseException: java.lang.String getMessage()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r9.<com.sun.syndication.io.ParsingFeedException: void <init>(java.lang.String,java.lang.Throwable)>($r14, $r8);

        throw $r9;

     label5:
        $r7 := @caughtexception;

        throw $r7;

     label6:
        $r5 := @caughtexception;

        $r6 = new com.sun.syndication.io.ParsingFeedException;

        specialinvoke $r6.<com.sun.syndication.io.ParsingFeedException: void <init>(java.lang.String,java.lang.Throwable)>("Invalid XML", $r5);

        throw $r6;

        catch org.jdom.input.JDOMParseException from label1 to label3 with label4;
        catch java.lang.IllegalArgumentException from label1 to label3 with label5;
        catch java.lang.Exception from label1 to label3 with label6;
    }

    public com.sun.syndication.feed.WireFeed build(org.xml.sax.InputSource) throws java.lang.IllegalArgumentException, com.sun.syndication.io.FeedException
    {
        org.xml.sax.InputSource r2;
        com.sun.syndication.io.WireFeedInput r0;
        com.sun.syndication.feed.WireFeed $r4;
        com.sun.syndication.io.ParsingFeedException $r6, $r9;
        java.lang.IllegalArgumentException $r7;
        java.lang.Exception $r5;
        org.jdom.Document $r3;
        java.lang.StringBuffer $r10, $r11, $r13;
        org.jdom.input.JDOMParseException $r8;
        com.sun.syndication.io.SAXBuilder $r1;
        java.lang.String $r12, $r14;

        r0 := @this: com.sun.syndication.io.WireFeedInput;

        r2 := @parameter0: org.xml.sax.InputSource;

        $r1 = virtualinvoke r0.<com.sun.syndication.io.WireFeedInput: com.sun.syndication.io.SAXBuilder createSAXBuilder()>();

     label1:
        $r3 = virtualinvoke $r1.<com.sun.syndication.io.SAXBuilder: org.jdom.Document build(org.xml.sax.InputSource)>(r2);

        $r4 = virtualinvoke r0.<com.sun.syndication.io.WireFeedInput: com.sun.syndication.feed.WireFeed build(org.jdom.Document)>($r3);

     label2:
        return $r4;

     label3:
        $r8 := @caughtexception;

        $r9 = new com.sun.syndication.io.ParsingFeedException;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid XML: ");

        $r12 = virtualinvoke $r8.<org.jdom.input.JDOMParseException: java.lang.String getMessage()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r9.<com.sun.syndication.io.ParsingFeedException: void <init>(java.lang.String,java.lang.Throwable)>($r14, $r8);

        throw $r9;

     label4:
        $r7 := @caughtexception;

        throw $r7;

     label5:
        $r5 := @caughtexception;

        $r6 = new com.sun.syndication.io.ParsingFeedException;

        specialinvoke $r6.<com.sun.syndication.io.ParsingFeedException: void <init>(java.lang.String,java.lang.Throwable)>("Invalid XML", $r5);

        throw $r6;

        catch org.jdom.input.JDOMParseException from label1 to label2 with label3;
        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public com.sun.syndication.feed.WireFeed build(org.w3c.dom.Document) throws java.lang.IllegalArgumentException, com.sun.syndication.io.FeedException
    {
        com.sun.syndication.io.WireFeedInput r3;
        com.sun.syndication.feed.WireFeed $r4;
        com.sun.syndication.io.ParsingFeedException $r6;
        java.lang.IllegalArgumentException $r7;
        org.jdom.input.DOMBuilder $r0;
        java.lang.Exception $r5;
        org.jdom.Document $r2;
        org.w3c.dom.Document r1;

        r3 := @this: com.sun.syndication.io.WireFeedInput;

        r1 := @parameter0: org.w3c.dom.Document;

        $r0 = new org.jdom.input.DOMBuilder;

        specialinvoke $r0.<org.jdom.input.DOMBuilder: void <init>()>();

     label1:
        $r2 = virtualinvoke $r0.<org.jdom.input.DOMBuilder: org.jdom.Document build(org.w3c.dom.Document)>(r1);

        $r4 = virtualinvoke r3.<com.sun.syndication.io.WireFeedInput: com.sun.syndication.feed.WireFeed build(org.jdom.Document)>($r2);

     label2:
        return $r4;

     label3:
        $r7 := @caughtexception;

        throw $r7;

     label4:
        $r5 := @caughtexception;

        $r6 = new com.sun.syndication.io.ParsingFeedException;

        specialinvoke $r6.<com.sun.syndication.io.ParsingFeedException: void <init>(java.lang.String,java.lang.Throwable)>("Invalid XML", $r5);

        throw $r6;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public com.sun.syndication.feed.WireFeed build(org.jdom.Document) throws java.lang.IllegalArgumentException, com.sun.syndication.io.FeedException
    {
        org.jdom.Document r1;
        com.sun.syndication.io.WireFeedInput r3;
        com.sun.syndication.io.WireFeedParser $r2;
        com.sun.syndication.feed.WireFeed $r4;
        java.lang.IllegalArgumentException $r5;
        com.sun.syndication.io.impl.FeedParsers $r0;
        boolean $z0;

        r3 := @this: com.sun.syndication.io.WireFeedInput;

        r1 := @parameter0: org.jdom.Document;

        $r0 = staticinvoke <com.sun.syndication.io.WireFeedInput: com.sun.syndication.io.impl.FeedParsers getFeedParsers()>();

        $r2 = virtualinvoke $r0.<com.sun.syndication.io.impl.FeedParsers: com.sun.syndication.io.WireFeedParser getParserFor(org.jdom.Document)>(r1);

        if $r2 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid document");

        throw $r5;

     label1:
        $z0 = r3.<com.sun.syndication.io.WireFeedInput: boolean _validate>;

        $r4 = interfaceinvoke $r2.<com.sun.syndication.io.WireFeedParser: com.sun.syndication.feed.WireFeed parse(org.jdom.Document,boolean)>(r1, $z0);

        return $r4;
    }

    protected com.sun.syndication.io.SAXBuilder createSAXBuilder()
    {
        java.lang.IllegalStateException $r5;
        org.xml.sax.SAXNotSupportedException $r6, $r8, $r10;
        com.sun.syndication.io.WireFeedInput r1;
        org.xml.sax.SAXNotRecognizedException $r7, $r9, $r11;
        org.xml.sax.XMLReader $r3;
        org.jdom.JDOMException $r4;
        com.sun.syndication.io.SAXBuilder $r0;
        org.xml.sax.EntityResolver $r2;
        boolean $z0;

        r1 := @this: com.sun.syndication.io.WireFeedInput;

        $r0 = new com.sun.syndication.io.SAXBuilder;

        $z0 = r1.<com.sun.syndication.io.WireFeedInput: boolean _validate>;

        specialinvoke $r0.<com.sun.syndication.io.SAXBuilder: void <init>(boolean)>($z0);

        $r2 = <com.sun.syndication.io.WireFeedInput: org.xml.sax.EntityResolver RESOLVER>;

        virtualinvoke $r0.<com.sun.syndication.io.SAXBuilder: void setEntityResolver(org.xml.sax.EntityResolver)>($r2);

     label01:
        $r3 = virtualinvoke $r0.<com.sun.syndication.io.SAXBuilder: org.xml.sax.XMLReader createParser()>();

     label02:
        interfaceinvoke $r3.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/external-general-entities", 0);

        virtualinvoke $r0.<com.sun.syndication.io.SAXBuilder: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/external-general-entities", 0);

     label03:
        goto label06;

     label04:
        $r11 := @caughtexception;

        goto label06;

     label05:
        $r10 := @caughtexception;

     label06:
        interfaceinvoke $r3.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/external-parameter-entities", 0);

        virtualinvoke $r0.<com.sun.syndication.io.SAXBuilder: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/external-parameter-entities", 0);

     label07:
        goto label10;

     label08:
        $r9 := @caughtexception;

        goto label10;

     label09:
        $r8 := @caughtexception;

     label10:
        interfaceinvoke $r3.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/nonvalidating/load-external-dtd", 0);

        virtualinvoke $r0.<com.sun.syndication.io.SAXBuilder: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/nonvalidating/load-external-dtd", 0);

     label11:
        goto label14;

     label12:
        $r7 := @caughtexception;

        goto label14;

     label13:
        $r6 := @caughtexception;

     label14:
        goto label16;

     label15:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("JDOM could not create a SAX parser");

        throw $r5;

     label16:
        virtualinvoke $r0.<com.sun.syndication.io.SAXBuilder: void setExpandEntities(boolean)>(0);

        return $r0;

        catch org.xml.sax.SAXNotRecognizedException from label02 to label03 with label04;
        catch org.xml.sax.SAXNotSupportedException from label02 to label03 with label05;
        catch org.xml.sax.SAXNotRecognizedException from label06 to label07 with label08;
        catch org.xml.sax.SAXNotSupportedException from label06 to label07 with label09;
        catch org.xml.sax.SAXNotRecognizedException from label10 to label11 with label12;
        catch org.xml.sax.SAXNotSupportedException from label10 to label11 with label13;
        catch org.jdom.JDOMException from label01 to label14 with label15;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static org.xml.sax.InputSource access$100()
    {
        org.xml.sax.InputSource $r0;

        $r0 = <com.sun.syndication.io.WireFeedInput: org.xml.sax.InputSource EMPTY_INPUTSOURCE>;

        return $r0;
    }

    static void <clinit>()
    {
        org.xml.sax.InputSource $r1;
        byte[] $r3;
        java.io.ByteArrayInputStream $r2;
        java.util.WeakHashMap $r0;
        com.sun.syndication.io.WireFeedInput$EmptyEntityResolver $r4;

        $r0 = new java.util.WeakHashMap;

        specialinvoke $r0.<java.util.WeakHashMap: void <init>()>();

        <com.sun.syndication.io.WireFeedInput: java.util.Map clMap> = $r0;

        $r1 = new org.xml.sax.InputSource;

        $r2 = new java.io.ByteArrayInputStream;

        $r3 = newarray (byte)[0];

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

        specialinvoke $r1.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>($r2);

        <com.sun.syndication.io.WireFeedInput: org.xml.sax.InputSource EMPTY_INPUTSOURCE> = $r1;

        $r4 = new com.sun.syndication.io.WireFeedInput$EmptyEntityResolver;

        specialinvoke $r4.<com.sun.syndication.io.WireFeedInput$EmptyEntityResolver: void <init>(com.sun.syndication.io.WireFeedInput$1)>(null);

        <com.sun.syndication.io.WireFeedInput: org.xml.sax.EntityResolver RESOLVER> = $r4;

        return;
    }
}
