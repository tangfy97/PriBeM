public class com.sun.xml.bind.marshaller.NioEscapeHandler extends java.lang.Object implements com.sun.xml.bind.marshaller.CharacterEscapeHandler
{
    private final java.nio.charset.CharsetEncoder encoder;

    public void <init>(java.lang.String)
    {
        java.nio.charset.Charset $r2;
        java.nio.charset.CharsetEncoder $r3;
        com.sun.xml.bind.marshaller.NioEscapeHandler r0;
        java.lang.String r1;

        r0 := @this: com.sun.xml.bind.marshaller.NioEscapeHandler;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>();

        r0.<com.sun.xml.bind.marshaller.NioEscapeHandler: java.nio.charset.CharsetEncoder encoder> = $r3;

        return;
    }

    public void escape(char[], int, int, boolean, java.io.Writer) throws java.io.IOException
    {
        int i0, i1, i2, i7, $i8, $i9, $i10;
        com.sun.xml.bind.marshaller.NioEscapeHandler r2;
        java.lang.String $r4;
        boolean z0, $z1;
        char $c3, $c4, $c5, $c6;
        java.nio.charset.CharsetEncoder $r3;
        java.io.Writer r1;
        char[] r0;

        r2 := @this: com.sun.xml.bind.marshaller.NioEscapeHandler;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        r1 := @parameter4: java.io.Writer;

        i2 = i0 + i1;

        i7 = i0;

     label01:
        if i7 >= i2 goto label10;

        $c3 = r0[i7];

        $i8 = (int) $c3;

        lookupswitch($i8)
        {
            case 34: goto label05;
            case 38: goto label02;
            case 60: goto label03;
            case 62: goto label04;
            default: goto label07;
        };

     label02:
        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("&amp;");

        goto label09;

     label03:
        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("&lt;");

        goto label09;

     label04:
        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("&gt;");

        goto label09;

     label05:
        if z0 == 0 goto label06;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("&quot;");

        goto label09;

     label06:
        virtualinvoke r1.<java.io.Writer: void write(int)>(34);

        goto label09;

     label07:
        $r3 = r2.<com.sun.xml.bind.marshaller.NioEscapeHandler: java.nio.charset.CharsetEncoder encoder>;

        $c4 = r0[i7];

        $z1 = virtualinvoke $r3.<java.nio.charset.CharsetEncoder: boolean canEncode(char)>($c4);

        if $z1 == 0 goto label08;

        $c6 = r0[i7];

        $i9 = (int) $c6;

        virtualinvoke r1.<java.io.Writer: void write(int)>($i9);

        goto label09;

     label08:
        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("&#");

        $c5 = r0[i7];

        $i10 = (int) $c5;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i10);

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r4);

        virtualinvoke r1.<java.io.Writer: void write(int)>(59);

     label09:
        i7 = i7 + 1;

        goto label01;

     label10:
        return;
    }
}
