public class org.springframework.aop.support.'annotation'.AnnotationClassFilter extends java.lang.Object implements org.springframework.aop.ClassFilter
{
    private final java.lang.Class annotationType;
    private final boolean checkInherited;

    public void <init>(java.lang.Class)
    {
        org.springframework.aop.support.'annotation'.AnnotationClassFilter r0;
        java.lang.Class r1;

        r0 := @this: org.springframework.aop.support.'annotation'.AnnotationClassFilter;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.springframework.aop.support.'annotation'.AnnotationClassFilter: void <init>(java.lang.Class,boolean)>(r1, 0);

        return;
    }

    public void <init>(java.lang.Class, boolean)
    {
        org.springframework.aop.support.'annotation'.AnnotationClassFilter r0;
        java.lang.Class r1;
        boolean z0;

        r0 := @this: org.springframework.aop.support.'annotation'.AnnotationClassFilter;

        r1 := @parameter0: java.lang.Class;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Annotation type must not be null");

        r0.<org.springframework.aop.support.'annotation'.AnnotationClassFilter: java.lang.Class annotationType> = r1;

        r0.<org.springframework.aop.support.'annotation'.AnnotationClassFilter: boolean checkInherited> = z0;

        return;
    }

    public boolean matches(java.lang.Class)
    {
        org.springframework.aop.support.'annotation'.AnnotationClassFilter r0;
        java.lang.'annotation'.Annotation $r4;
        java.lang.Class r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.springframework.aop.support.'annotation'.AnnotationClassFilter;

        r1 := @parameter0: java.lang.Class;

        $z0 = r0.<org.springframework.aop.support.'annotation'.AnnotationClassFilter: boolean checkInherited>;

        if $z0 == 0 goto label2;

        $r3 = r0.<org.springframework.aop.support.'annotation'.AnnotationClassFilter: java.lang.Class annotationType>;

        $r4 = staticinvoke <org.springframework.core.'annotation'.AnnotationUtils: java.lang.'annotation'.Annotation findAnnotation(java.lang.Class,java.lang.Class)>(r1, $r3);

        if $r4 == null goto label1;

        $z1 = 1;

        goto label3;

     label1:
        $z1 = 0;

        goto label3;

     label2:
        $r2 = r0.<org.springframework.aop.support.'annotation'.AnnotationClassFilter: java.lang.Class annotationType>;

        $z1 = virtualinvoke r1.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>($r2);

     label3:
        return $z1;
    }
}
