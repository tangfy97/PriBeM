public class org.springframework.beans.factory.support.BeanDefinitionBuilder extends java.lang.Object
{
    private org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition;
    private int constructorArgIndex;

    public static org.springframework.beans.factory.support.BeanDefinitionBuilder genericBeanDefinition()
    {
        org.springframework.beans.factory.support.BeanDefinitionBuilder $r0;
        org.springframework.beans.factory.support.GenericBeanDefinition $r1;

        $r0 = new org.springframework.beans.factory.support.BeanDefinitionBuilder;

        specialinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: void <init>()>();

        $r1 = new org.springframework.beans.factory.support.GenericBeanDefinition;

        specialinvoke $r1.<org.springframework.beans.factory.support.GenericBeanDefinition: void <init>()>();

        $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition> = $r1;

        return $r0;
    }

    public static org.springframework.beans.factory.support.BeanDefinitionBuilder genericBeanDefinition(java.lang.Class)
    {
        org.springframework.beans.factory.support.BeanDefinitionBuilder $r0;
        java.lang.Class r2;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r3;
        org.springframework.beans.factory.support.GenericBeanDefinition $r1;

        r2 := @parameter0: java.lang.Class;

        $r0 = new org.springframework.beans.factory.support.BeanDefinitionBuilder;

        specialinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: void <init>()>();

        $r1 = new org.springframework.beans.factory.support.GenericBeanDefinition;

        specialinvoke $r1.<org.springframework.beans.factory.support.GenericBeanDefinition: void <init>()>();

        $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition> = $r1;

        $r3 = $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        virtualinvoke $r3.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setBeanClass(java.lang.Class)>(r2);

        return $r0;
    }

    public static org.springframework.beans.factory.support.BeanDefinitionBuilder genericBeanDefinition(java.lang.String)
    {
        org.springframework.beans.factory.support.BeanDefinitionBuilder $r0;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r3;
        java.lang.String r2;
        org.springframework.beans.factory.support.GenericBeanDefinition $r1;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.springframework.beans.factory.support.BeanDefinitionBuilder;

        specialinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: void <init>()>();

        $r1 = new org.springframework.beans.factory.support.GenericBeanDefinition;

        specialinvoke $r1.<org.springframework.beans.factory.support.GenericBeanDefinition: void <init>()>();

        $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition> = $r1;

        $r3 = $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        virtualinvoke $r3.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setBeanClassName(java.lang.String)>(r2);

        return $r0;
    }

    public static org.springframework.beans.factory.support.BeanDefinitionBuilder rootBeanDefinition(java.lang.Class)
    {
        java.lang.Class r0;
        org.springframework.beans.factory.support.BeanDefinitionBuilder $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder rootBeanDefinition(java.lang.Class,java.lang.String)>(r0, null);

        return $r1;
    }

    public static org.springframework.beans.factory.support.BeanDefinitionBuilder rootBeanDefinition(java.lang.Class, java.lang.String)
    {
        org.springframework.beans.factory.support.RootBeanDefinition $r1;
        org.springframework.beans.factory.support.BeanDefinitionBuilder $r0;
        java.lang.Class r2;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r3, $r5;
        java.lang.String r4;

        r2 := @parameter0: java.lang.Class;

        r4 := @parameter1: java.lang.String;

        $r0 = new org.springframework.beans.factory.support.BeanDefinitionBuilder;

        specialinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: void <init>()>();

        $r1 = new org.springframework.beans.factory.support.RootBeanDefinition;

        specialinvoke $r1.<org.springframework.beans.factory.support.RootBeanDefinition: void <init>()>();

        $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition> = $r1;

        $r3 = $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        virtualinvoke $r3.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setBeanClass(java.lang.Class)>(r2);

        $r5 = $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        virtualinvoke $r5.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setFactoryMethodName(java.lang.String)>(r4);

        return $r0;
    }

    public static org.springframework.beans.factory.support.BeanDefinitionBuilder rootBeanDefinition(java.lang.String)
    {
        java.lang.String r0;
        org.springframework.beans.factory.support.BeanDefinitionBuilder $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder rootBeanDefinition(java.lang.String,java.lang.String)>(r0, null);

        return $r1;
    }

    public static org.springframework.beans.factory.support.BeanDefinitionBuilder rootBeanDefinition(java.lang.String, java.lang.String)
    {
        org.springframework.beans.factory.support.RootBeanDefinition $r1;
        org.springframework.beans.factory.support.BeanDefinitionBuilder $r0;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r3, $r5;
        java.lang.String r2, r4;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r0 = new org.springframework.beans.factory.support.BeanDefinitionBuilder;

        specialinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: void <init>()>();

        $r1 = new org.springframework.beans.factory.support.RootBeanDefinition;

        specialinvoke $r1.<org.springframework.beans.factory.support.RootBeanDefinition: void <init>()>();

        $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition> = $r1;

        $r3 = $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        virtualinvoke $r3.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setBeanClassName(java.lang.String)>(r2);

        $r5 = $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        virtualinvoke $r5.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setFactoryMethodName(java.lang.String)>(r4);

        return $r0;
    }

    public static org.springframework.beans.factory.support.BeanDefinitionBuilder childBeanDefinition(java.lang.String)
    {
        java.lang.String r2;
        org.springframework.beans.factory.support.BeanDefinitionBuilder $r0;
        org.springframework.beans.factory.support.ChildBeanDefinition $r1;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.springframework.beans.factory.support.BeanDefinitionBuilder;

        specialinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: void <init>()>();

        $r1 = new org.springframework.beans.factory.support.ChildBeanDefinition;

        specialinvoke $r1.<org.springframework.beans.factory.support.ChildBeanDefinition: void <init>(java.lang.String)>(r2);

        $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition> = $r1;

        return $r0;
    }

    private void <init>()
    {
        org.springframework.beans.factory.support.BeanDefinitionBuilder r0;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.springframework.beans.factory.support.AbstractBeanDefinition getRawBeanDefinition()
    {
        org.springframework.beans.factory.support.AbstractBeanDefinition $r1;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r0;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        $r1 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        return $r1;
    }

    public org.springframework.beans.factory.support.AbstractBeanDefinition getBeanDefinition()
    {
        org.springframework.beans.factory.support.AbstractBeanDefinition $r1, $r2;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r0;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        $r1 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        virtualinvoke $r1.<org.springframework.beans.factory.support.AbstractBeanDefinition: void validate()>();

        $r2 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        return $r2;
    }

    public org.springframework.beans.factory.support.BeanDefinitionBuilder setParentName(java.lang.String)
    {
        org.springframework.beans.factory.support.AbstractBeanDefinition $r2;
        java.lang.String r1;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r0;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        virtualinvoke $r2.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setParentName(java.lang.String)>(r1);

        return r0;
    }

    public org.springframework.beans.factory.support.BeanDefinitionBuilder setFactoryMethod(java.lang.String)
    {
        org.springframework.beans.factory.support.AbstractBeanDefinition $r2;
        java.lang.String r1;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r0;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        virtualinvoke $r2.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setFactoryMethodName(java.lang.String)>(r1);

        return r0;
    }

    public org.springframework.beans.factory.support.BeanDefinitionBuilder setFactoryBean(java.lang.String, java.lang.String)
    {
        org.springframework.beans.factory.support.BeanDefinitionBuilder r0;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r2, $r4;
        java.lang.String r1, r3;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r2 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        virtualinvoke $r2.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setFactoryBeanName(java.lang.String)>(r1);

        $r4 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        virtualinvoke $r4.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setFactoryMethodName(java.lang.String)>(r3);

        return r0;
    }

    public org.springframework.beans.factory.support.BeanDefinitionBuilder addConstructorArg(java.lang.Object)
    {
        java.lang.Object r1;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r0, $r2;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addConstructorArgValue(java.lang.Object)>(r1);

        return $r2;
    }

    public org.springframework.beans.factory.support.BeanDefinitionBuilder addConstructorArgValue(java.lang.Object)
    {
        org.springframework.beans.factory.support.BeanDefinitionBuilder r0;
        org.springframework.beans.factory.config.ConstructorArgumentValues $r2;
        int $i0, $i1;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r1;
        java.lang.Object r3;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r3 := @parameter0: java.lang.Object;

        $r1 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        $r2 = virtualinvoke $r1.<org.springframework.beans.factory.support.AbstractBeanDefinition: org.springframework.beans.factory.config.ConstructorArgumentValues getConstructorArgumentValues()>();

        $i0 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: int constructorArgIndex>;

        $i1 = $i0 + 1;

        r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: int constructorArgIndex> = $i1;

        virtualinvoke $r2.<org.springframework.beans.factory.config.ConstructorArgumentValues: void addIndexedArgumentValue(int,java.lang.Object)>($i0, r3);

        return r0;
    }

    public org.springframework.beans.factory.support.BeanDefinitionBuilder addConstructorArgReference(java.lang.String)
    {
        org.springframework.beans.factory.support.BeanDefinitionBuilder r0;
        org.springframework.beans.factory.config.ConstructorArgumentValues $r2;
        org.springframework.beans.factory.config.RuntimeBeanReference $r3;
        int $i0, $i1;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r1;
        java.lang.String r4;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        $r2 = virtualinvoke $r1.<org.springframework.beans.factory.support.AbstractBeanDefinition: org.springframework.beans.factory.config.ConstructorArgumentValues getConstructorArgumentValues()>();

        $i0 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: int constructorArgIndex>;

        $i1 = $i0 + 1;

        r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: int constructorArgIndex> = $i1;

        $r3 = new org.springframework.beans.factory.config.RuntimeBeanReference;

        specialinvoke $r3.<org.springframework.beans.factory.config.RuntimeBeanReference: void <init>(java.lang.String)>(r4);

        virtualinvoke $r2.<org.springframework.beans.factory.config.ConstructorArgumentValues: void addIndexedArgumentValue(int,java.lang.Object)>($i0, $r3);

        return r0;
    }

    public org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String, java.lang.Object)
    {
        org.springframework.beans.factory.support.BeanDefinitionBuilder r0;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r1;
        org.springframework.beans.MutablePropertyValues $r2;
        java.lang.Object r4;
        java.lang.String r3;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Object;

        $r1 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        $r2 = virtualinvoke $r1.<org.springframework.beans.factory.support.AbstractBeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        virtualinvoke $r2.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>(r3, r4);

        return r0;
    }

    public org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyReference(java.lang.String, java.lang.String)
    {
        org.springframework.beans.factory.support.BeanDefinitionBuilder r0;
        org.springframework.beans.factory.config.RuntimeBeanReference $r4;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r1;
        org.springframework.beans.MutablePropertyValues $r2;
        java.lang.String r3, r5;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r3 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r1 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        $r2 = virtualinvoke $r1.<org.springframework.beans.factory.support.AbstractBeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        $r4 = new org.springframework.beans.factory.config.RuntimeBeanReference;

        specialinvoke $r4.<org.springframework.beans.factory.config.RuntimeBeanReference: void <init>(java.lang.String)>(r5);

        virtualinvoke $r2.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>(r3, $r4);

        return r0;
    }

    public org.springframework.beans.factory.support.BeanDefinitionBuilder setInitMethodName(java.lang.String)
    {
        org.springframework.beans.factory.support.AbstractBeanDefinition $r2;
        java.lang.String r1;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r0;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        virtualinvoke $r2.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setInitMethodName(java.lang.String)>(r1);

        return r0;
    }

    public org.springframework.beans.factory.support.BeanDefinitionBuilder setDestroyMethodName(java.lang.String)
    {
        org.springframework.beans.factory.support.AbstractBeanDefinition $r2;
        java.lang.String r1;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r0;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        virtualinvoke $r2.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setDestroyMethodName(java.lang.String)>(r1);

        return r0;
    }

    public org.springframework.beans.factory.support.BeanDefinitionBuilder setScope(java.lang.String)
    {
        org.springframework.beans.factory.support.AbstractBeanDefinition $r2;
        java.lang.String r1;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r0;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        virtualinvoke $r2.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setScope(java.lang.String)>(r1);

        return r0;
    }

    public org.springframework.beans.factory.support.BeanDefinitionBuilder setSingleton(boolean)
    {
        org.springframework.beans.factory.support.AbstractBeanDefinition $r1;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r0;
        boolean z0;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        virtualinvoke $r1.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setSingleton(boolean)>(z0);

        return r0;
    }

    public org.springframework.beans.factory.support.BeanDefinitionBuilder setAbstract(boolean)
    {
        org.springframework.beans.factory.support.AbstractBeanDefinition $r1;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r0;
        boolean z0;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        virtualinvoke $r1.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setAbstract(boolean)>(z0);

        return r0;
    }

    public org.springframework.beans.factory.support.BeanDefinitionBuilder setLazyInit(boolean)
    {
        org.springframework.beans.factory.support.AbstractBeanDefinition $r1;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r0;
        boolean z0;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        virtualinvoke $r1.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setLazyInit(boolean)>(z0);

        return r0;
    }

    public org.springframework.beans.factory.support.BeanDefinitionBuilder setAutowireMode(int)
    {
        int i0;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r1;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r0;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        i0 := @parameter0: int;

        $r1 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        virtualinvoke $r1.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setAutowireMode(int)>(i0);

        return r0;
    }

    public org.springframework.beans.factory.support.BeanDefinitionBuilder setDependencyCheck(int)
    {
        int i0;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r1;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r0;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        i0 := @parameter0: int;

        $r1 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        virtualinvoke $r1.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setDependencyCheck(int)>(i0);

        return r0;
    }

    public org.springframework.beans.factory.support.BeanDefinitionBuilder addDependsOn(java.lang.String)
    {
        java.lang.Object[] $r6;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r0;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r1, $r3, $r8, $r10;
        java.lang.String[] $r2, $r4, r7, $r9;
        java.lang.String r5;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        $r2 = virtualinvoke $r1.<org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.String[] getDependsOn()>();

        if $r2 != null goto label1;

        $r10 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        $r9 = newarray (java.lang.String)[1];

        $r9[0] = r5;

        virtualinvoke $r10.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setDependsOn(java.lang.String[])>($r9);

        goto label2;

     label1:
        $r3 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        $r4 = virtualinvoke $r3.<org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.String[] getDependsOn()>();

        $r6 = staticinvoke <org.springframework.util.ObjectUtils: java.lang.Object[] addObjectToArray(java.lang.Object[],java.lang.Object)>($r4, r5);

        r7 = (java.lang.String[]) $r6;

        $r8 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        virtualinvoke $r8.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setDependsOn(java.lang.String[])>(r7);

     label2:
        return r0;
    }

    public org.springframework.beans.factory.support.BeanDefinitionBuilder setRole(int)
    {
        int i0;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r1;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r0;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        i0 := @parameter0: int;

        $r1 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        virtualinvoke $r1.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setRole(int)>(i0);

        return r0;
    }

    public org.springframework.beans.factory.support.BeanDefinitionBuilder setSource(java.lang.Object)
    {
        java.lang.Object r1;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r2;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r0;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        virtualinvoke $r2.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setSource(java.lang.Object)>(r1);

        return r0;
    }

    public org.springframework.beans.factory.support.BeanDefinitionBuilder setResourceDescription(java.lang.String)
    {
        org.springframework.beans.factory.support.AbstractBeanDefinition $r2;
        java.lang.String r1;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r0;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition beanDefinition>;

        virtualinvoke $r2.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setResourceDescription(java.lang.String)>(r1);

        return r0;
    }
}
