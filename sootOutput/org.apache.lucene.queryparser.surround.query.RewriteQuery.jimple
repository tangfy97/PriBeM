abstract class org.apache.lucene.queryparser.surround.query.RewriteQuery extends org.apache.lucene.search.Query
{
    protected final org.apache.lucene.queryparser.surround.query.SrndQuery srndQuery;
    protected final java.lang.String fieldName;
    protected final org.apache.lucene.queryparser.surround.query.BasicQueryFactory qf;

    void <init>(org.apache.lucene.queryparser.surround.query.SrndQuery, java.lang.String, org.apache.lucene.queryparser.surround.query.BasicQueryFactory)
    {
        org.apache.lucene.queryparser.surround.query.SrndQuery r1;
        org.apache.lucene.queryparser.surround.query.RewriteQuery r0;
        org.apache.lucene.queryparser.surround.query.BasicQueryFactory r3;
        java.lang.String r2;

        r0 := @this: org.apache.lucene.queryparser.surround.query.RewriteQuery;

        r1 := @parameter0: org.apache.lucene.queryparser.surround.query.SrndQuery;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.lucene.queryparser.surround.query.BasicQueryFactory;

        specialinvoke r0.<org.apache.lucene.search.Query: void <init>()>();

        r0.<org.apache.lucene.queryparser.surround.query.RewriteQuery: org.apache.lucene.queryparser.surround.query.SrndQuery srndQuery> = r1;

        r0.<org.apache.lucene.queryparser.surround.query.RewriteQuery: java.lang.String fieldName> = r2;

        r0.<org.apache.lucene.queryparser.surround.query.RewriteQuery: org.apache.lucene.queryparser.surround.query.BasicQueryFactory qf> = r3;

        return;
    }

    public abstract org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader) throws java.io.IOException;

    public java.lang.String toString()
    {
        java.lang.String $r1;
        org.apache.lucene.queryparser.surround.query.RewriteQuery r0;

        r0 := @this: org.apache.lucene.queryparser.surround.query.RewriteQuery;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.query.RewriteQuery: java.lang.String toString(java.lang.String)>(null);

        return $r1;
    }

    public java.lang.String toString(java.lang.String)
    {
        org.apache.lucene.queryparser.surround.query.SrndQuery $r15;
        org.apache.lucene.queryparser.surround.query.RewriteQuery r1;
        java.lang.String $r3, r5, $r12, $r16, $r20, $r23, $r24;
        org.apache.lucene.queryparser.surround.query.BasicQueryFactory $r19;
        java.lang.StringBuilder $r0, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r17, $r18, $r21, $r22;
        java.lang.Class $r2;

        r1 := @this: org.apache.lucene.queryparser.surround.query.RewriteQuery;

        r5 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        if r5 != null goto label1;

        $r24 = "";

        goto label2;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(unused: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r24 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r12 = r1.<org.apache.lucene.queryparser.surround.query.RewriteQuery: java.lang.String fieldName>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r15 = r1.<org.apache.lucene.queryparser.surround.query.RewriteQuery: org.apache.lucene.queryparser.surround.query.SrndQuery srndQuery>;

        $r16 = virtualinvoke $r15.<org.apache.lucene.queryparser.surround.query.SrndQuery: java.lang.String toString()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r19 = r1.<org.apache.lucene.queryparser.surround.query.RewriteQuery: org.apache.lucene.queryparser.surround.query.BasicQueryFactory qf>;

        $r20 = virtualinvoke $r19.<org.apache.lucene.queryparser.surround.query.BasicQueryFactory: java.lang.String toString()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r23;
    }

    public int hashCode()
    {
        org.apache.lucene.queryparser.surround.query.SrndQuery $r4;
        org.apache.lucene.queryparser.surround.query.BasicQueryFactory $r3;
        org.apache.lucene.queryparser.surround.query.RewriteQuery r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.lucene.queryparser.surround.query.RewriteQuery;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $r2 = r0.<org.apache.lucene.queryparser.surround.query.RewriteQuery: java.lang.String fieldName>;

        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $i2 = $i0 ^ $i1;

        $r3 = r0.<org.apache.lucene.queryparser.surround.query.RewriteQuery: org.apache.lucene.queryparser.surround.query.BasicQueryFactory qf>;

        $i3 = virtualinvoke $r3.<org.apache.lucene.queryparser.surround.query.BasicQueryFactory: int hashCode()>();

        $i4 = $i2 ^ $i3;

        $r4 = r0.<org.apache.lucene.queryparser.surround.query.RewriteQuery: org.apache.lucene.queryparser.surround.query.SrndQuery srndQuery>;

        $i5 = virtualinvoke $r4.<org.apache.lucene.queryparser.surround.query.SrndQuery: int hashCode()>();

        $i6 = $i4 ^ $i5;

        return $i6;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.lucene.queryparser.surround.query.SrndQuery $r9, $r10;
        org.apache.lucene.queryparser.surround.query.RewriteQuery r1, r4;
        java.lang.String $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.lucene.queryparser.surround.query.BasicQueryFactory $r7, $r8;
        java.lang.Object r0;
        java.lang.Class $r2, $r3;

        r1 := @this: org.apache.lucene.queryparser.surround.query.RewriteQuery;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r4 = (org.apache.lucene.queryparser.surround.query.RewriteQuery) r0;

        $r6 = r1.<org.apache.lucene.queryparser.surround.query.RewriteQuery: java.lang.String fieldName>;

        $r5 = r4.<org.apache.lucene.queryparser.surround.query.RewriteQuery: java.lang.String fieldName>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label3;

        $r8 = r1.<org.apache.lucene.queryparser.surround.query.RewriteQuery: org.apache.lucene.queryparser.surround.query.BasicQueryFactory qf>;

        $r7 = r4.<org.apache.lucene.queryparser.surround.query.RewriteQuery: org.apache.lucene.queryparser.surround.query.BasicQueryFactory qf>;

        $z2 = virtualinvoke $r8.<org.apache.lucene.queryparser.surround.query.BasicQueryFactory: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label3;

        $r10 = r1.<org.apache.lucene.queryparser.surround.query.RewriteQuery: org.apache.lucene.queryparser.surround.query.SrndQuery srndQuery>;

        $r9 = r4.<org.apache.lucene.queryparser.surround.query.RewriteQuery: org.apache.lucene.queryparser.surround.query.SrndQuery srndQuery>;

        $z3 = virtualinvoke $r10.<org.apache.lucene.queryparser.surround.query.SrndQuery: boolean equals(java.lang.Object)>($r9);

        if $z3 == 0 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        return $z4;
    }

    public org.apache.lucene.queryparser.surround.query.RewriteQuery clone()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.queryparser.surround.query.RewriteQuery r1;

        r1 := @this: org.apache.lucene.queryparser.surround.query.RewriteQuery;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public volatile org.apache.lucene.search.Query clone()
    {
        org.apache.lucene.queryparser.surround.query.RewriteQuery r0, $r1;

        r0 := @this: org.apache.lucene.queryparser.surround.query.RewriteQuery;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.query.RewriteQuery: org.apache.lucene.queryparser.surround.query.RewriteQuery clone()>();

        return $r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.queryparser.surround.query.RewriteQuery r0, $r1;

        r0 := @this: org.apache.lucene.queryparser.surround.query.RewriteQuery;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.surround.query.RewriteQuery: org.apache.lucene.queryparser.surround.query.RewriteQuery clone()>();

        return $r1;
    }
}
