public final class org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl extends java.lang.Object implements org.waveprotocol.wave.diff.DocumentDiffSnapshot, org.waveprotocol.wave.communication.gson.GsonSerializable, org.waveprotocol.wave.communication.proto.ProtoWrapper
{
    private org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto;
    private org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder;

    public void <init>()
    {
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder> = $r1;

        return;
    }

    public void <init>(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot r2;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        r2 := @parameter0: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder> = $r1;

        r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto> = r2;

        return;
    }

    public void <init>(org.waveprotocol.wave.diff.DocumentDiffSnapshot)
    {
        org.waveprotocol.wave.diff.DocumentDiffSnapshot r2;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        r2 := @parameter0: org.waveprotocol.wave.diff.DocumentDiffSnapshot;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder> = $r1;

        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void copyFrom(org.waveprotocol.wave.diff.DocumentDiffSnapshot)>(r2);

        return;
    }

    public org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot getPB()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto>;

        return $r1;
    }

    public void setPB(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot r1;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        r1 := @parameter0: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot;

        r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto> = r1;

        r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder> = null;

        return;
    }

    public void copyFrom(org.waveprotocol.wave.diff.DocumentDiffSnapshot)
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl $r13, $r15;
        java.lang.String $r2, $r3, r17, r18, r19;
        boolean $z0, $z1, $z2, $z3, $z4;
        double $d0, $d1;
        java.util.Iterator $r5, $r7, $r9;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        java.util.List $r4, $r6, $r8;
        org.waveprotocol.wave.diff.DocumentDiffSnapshot r1;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation $r14, $r16;
        java.lang.Object $r10, $r11, $r12;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        r1 := @parameter0: org.waveprotocol.wave.diff.DocumentDiffSnapshot;

        $r2 = interfaceinvoke r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: java.lang.String getDocumentId()>();

        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void setDocumentId(java.lang.String)>($r2);

        $z0 = interfaceinvoke r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: boolean hasState()>();

        if $z0 == 0 goto label01;

        $r15 = new org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl;

        $r16 = interfaceinvoke r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: org.waveprotocol.wave.federation.ProtocolDocumentOperation getState()>();

        specialinvoke $r15.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl: void <init>(org.waveprotocol.wave.federation.ProtocolDocumentOperation)>($r16);

        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void setState(org.waveprotocol.wave.federation.ProtocolDocumentOperation)>($r15);

        goto label02;

     label01:
        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void clearState()>();

     label02:
        $z1 = interfaceinvoke r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: boolean hasDiff()>();

        if $z1 == 0 goto label03;

        $r13 = new org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl;

        $r14 = interfaceinvoke r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: org.waveprotocol.wave.federation.ProtocolDocumentOperation getDiff()>();

        specialinvoke $r13.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl: void <init>(org.waveprotocol.wave.federation.ProtocolDocumentOperation)>($r14);

        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void setDiff(org.waveprotocol.wave.federation.ProtocolDocumentOperation)>($r13);

        goto label04;

     label03:
        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void clearDiff()>();

     label04:
        $r3 = interfaceinvoke r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: java.lang.String getAuthor()>();

        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void setAuthor(java.lang.String)>($r3);

        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void clearContributor()>();

        $r4 = interfaceinvoke r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: java.util.List getContributor()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z4 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label06;

        $r12 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.lang.String) $r12;

        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void addContributor(java.lang.String)>(r17);

        goto label05;

     label06:
        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void clearAddedContributor()>();

        $r6 = interfaceinvoke r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: java.util.List getAddedContributor()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r11 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.lang.String) $r11;

        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void addAddedContributor(java.lang.String)>(r18);

        goto label07;

     label08:
        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void clearRemovedContributor()>();

        $r8 = interfaceinvoke r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: java.util.List getRemovedContributor()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z3 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r19 = (java.lang.String) $r10;

        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void addRemovedContributor(java.lang.String)>(r19);

        goto label09;

     label10:
        $d0 = interfaceinvoke r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: double getLastModifiedVersion()>();

        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void setLastModifiedVersion(double)>($d0);

        $d1 = interfaceinvoke r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: double getLastModifiedTime()>();

        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void setLastModifiedTime(double)>($d1);

        return;
    }

    public java.lang.String getDocumentId()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        java.lang.String $r2;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.lang.String getDocumentId()>();

        return $r2;
    }

    public void setDocumentId(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setDocumentId(java.lang.String)>(r1);

        return;
    }

    public boolean hasState()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto>;

        $z0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean hasState()>();

        return $z0;
    }

    public void clearState()
    {
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clearState()>();

        return;
    }

    public org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl getState()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r2;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation $r3;
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl $r1;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = new org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl;

        $r2 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation getState()>();

        specialinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl: void <init>(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)>($r3);

        return $r1;
    }

    public void setState(org.waveprotocol.wave.federation.ProtocolDocumentOperation)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation $r5;
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl $r4;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation r2;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r1, $r3;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolDocumentOperation;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clearState()>();

        $r3 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder>;

        $r4 = specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl getOrCreateProtocolDocumentOperationProtoImpl(org.waveprotocol.wave.federation.ProtocolDocumentOperation)>(r2);

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation getPB()>();

        virtualinvoke $r3.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setState(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)>($r5);

        return;
    }

    public boolean hasDiff()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto>;

        $z0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean hasDiff()>();

        return $z0;
    }

    public void clearDiff()
    {
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clearDiff()>();

        return;
    }

    public org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl getDiff()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r2;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation $r3;
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl $r1;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = new org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl;

        $r2 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation getDiff()>();

        specialinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl: void <init>(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)>($r3);

        return $r1;
    }

    public void setDiff(org.waveprotocol.wave.federation.ProtocolDocumentOperation)
    {
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation $r5;
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl $r4;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation r2;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r1, $r3;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolDocumentOperation;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clearDiff()>();

        $r3 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder>;

        $r4 = specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl getOrCreateProtocolDocumentOperationProtoImpl(org.waveprotocol.wave.federation.ProtocolDocumentOperation)>(r2);

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation getPB()>();

        virtualinvoke $r3.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setDiff(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation)>($r5);

        return;
    }

    public java.lang.String getAuthor()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        java.lang.String $r2;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.lang.String getAuthor()>();

        return $r2;
    }

    public void setAuthor(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setAuthor(java.lang.String)>(r1);

        return;
    }

    public java.util.List getContributor()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        java.util.List $r2, $r3;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List getContributorList()>();

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r3;
    }

    public void addAllContributor(java.util.List)
    {
        java.util.List r1;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder addAllContributor(java.lang.Iterable)>(r1);

        return;
    }

    public java.lang.String getContributor(int)
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        int i0;
        java.lang.String $r2;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        i0 := @parameter0: int;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.lang.String getContributor(int)>(i0);

        return $r2;
    }

    public void setContributor(int, java.lang.String)
    {
        int i0;
        java.lang.String r1;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setContributor(int,java.lang.String)>(i0, r1);

        return;
    }

    public int getContributorSize()
    {
        int $i0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto>;

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: int getContributorCount()>();

        return $i0;
    }

    public void addContributor(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder addContributor(java.lang.String)>(r1);

        return;
    }

    public void clearContributor()
    {
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clearContributor()>();

        return;
    }

    public java.util.List getAddedContributor()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        java.util.List $r2, $r3;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List getAddedContributorList()>();

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r3;
    }

    public void addAllAddedContributor(java.util.List)
    {
        java.util.List r1;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder addAllAddedContributor(java.lang.Iterable)>(r1);

        return;
    }

    public java.lang.String getAddedContributor(int)
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        int i0;
        java.lang.String $r2;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        i0 := @parameter0: int;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.lang.String getAddedContributor(int)>(i0);

        return $r2;
    }

    public void setAddedContributor(int, java.lang.String)
    {
        int i0;
        java.lang.String r1;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setAddedContributor(int,java.lang.String)>(i0, r1);

        return;
    }

    public int getAddedContributorSize()
    {
        int $i0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto>;

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: int getAddedContributorCount()>();

        return $i0;
    }

    public void addAddedContributor(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder addAddedContributor(java.lang.String)>(r1);

        return;
    }

    public void clearAddedContributor()
    {
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clearAddedContributor()>();

        return;
    }

    public java.util.List getRemovedContributor()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        java.util.List $r2, $r3;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.util.List getRemovedContributorList()>();

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r3;
    }

    public void addAllRemovedContributor(java.util.List)
    {
        java.util.List r1;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder addAllRemovedContributor(java.lang.Iterable)>(r1);

        return;
    }

    public java.lang.String getRemovedContributor(int)
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        int i0;
        java.lang.String $r2;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        i0 := @parameter0: int;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.lang.String getRemovedContributor(int)>(i0);

        return $r2;
    }

    public void setRemovedContributor(int, java.lang.String)
    {
        int i0;
        java.lang.String r1;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setRemovedContributor(int,java.lang.String)>(i0, r1);

        return;
    }

    public int getRemovedContributorSize()
    {
        int $i0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto>;

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: int getRemovedContributorCount()>();

        return $i0;
    }

    public void addRemovedContributor(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder addRemovedContributor(java.lang.String)>(r1);

        return;
    }

    public void clearRemovedContributor()
    {
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder clearRemovedContributor()>();

        return;
    }

    public double getLastModifiedVersion()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        long $l0;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        double $d0;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto>;

        $l0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: long getLastModifiedVersion()>();

        $d0 = (double) $l0;

        return $d0;
    }

    public void setLastModifiedVersion(double)
    {
        long $l0;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r1;
        double d0;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        d0 := @parameter0: double;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder>;

        $l0 = staticinvoke <org.waveprotocol.wave.communication.proto.Int52: long int52to64(double)>(d0);

        virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setLastModifiedVersion(long)>($l0);

        return;
    }

    public double getLastModifiedTime()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        long $l0;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        double $d0;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto>;

        $l0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: long getLastModifiedTime()>();

        $d0 = (double) $l0;

        return $d0;
    }

    public void setLastModifiedTime(double)
    {
        long $l0;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r1;
        double d0;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        d0 := @parameter0: double;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder>;

        $l0 = staticinvoke <org.waveprotocol.wave.communication.proto.Int52: long int52to64(double)>(d0);

        virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder setLastModifiedTime(long)>($l0);

        return;
    }

    private org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl getOrCreateProtocolDocumentOperationProtoImpl(org.waveprotocol.wave.federation.ProtocolDocumentOperation)
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl $r1, $r2;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation r0;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r3;
        boolean $z0;

        r3 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        r0 := @parameter0: org.waveprotocol.wave.federation.ProtocolDocumentOperation;

        $z0 = r0 instanceof org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl;

        if $z0 == 0 goto label1;

        $r2 = (org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl) r0;

        return $r2;

     label1:
        $r1 = new org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl;

        specialinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl: void <init>()>();

        virtualinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl: void copyFrom(org.waveprotocol.wave.federation.ProtocolDocumentOperation)>(r0);

        return $r1;
    }

    private void switchToProto()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1, $r3;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto>;

        if $r1 != null goto label1;

        $r2 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot build()>();

        r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto> = $r3;

        r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder> = null;

     label1:
        return;
    }

    private void switchToProtoBuilder()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r2, $r3;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r1, $r4;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        $r1 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder>;

        if $r1 != null goto label3;

        $r2 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto>;

        if $r2 != null goto label1;

        $r4 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder newBuilder()>();

        goto label2;

     label1:
        $r3 = r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto>;

        $r4 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder newBuilder(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r3);

     label2:
        r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder> = $r4;

        r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto> = null;

     label3:
        return;
    }

    private void invalidateAll()
    {
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot$Builder protoBuilder> = $r1;

        return;
    }

    public com.google.gson.JsonElement toGson(org.waveprotocol.wave.communication.json.RawStringData, com.google.gson.Gson)
    {
        com.google.gson.JsonObject $r0;
        com.google.gson.Gson r21;
        boolean $z0, $z1;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r2;
        com.google.gson.JsonArray $r6, $r7, $r8;
        java.lang.Double $r10, $r12;
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl $r19, $r23;
        com.google.gson.JsonElement $r22, $r24;
        int $i0, $i1, i2, $i3, i4, i5;
        com.google.gson.JsonPrimitive $r1, $r4, $r9, $r11, $r13, $r15, $r17;
        java.lang.String $r3, $r5, $r14, $r16, $r18;
        double $d0, $d1;
        org.waveprotocol.wave.communication.json.RawStringData r20;

        r2 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        r20 := @parameter0: org.waveprotocol.wave.communication.json.RawStringData;

        r21 := @parameter1: com.google.gson.Gson;

        $r0 = new com.google.gson.JsonObject;

        specialinvoke $r0.<com.google.gson.JsonObject: void <init>()>();

        $r1 = new com.google.gson.JsonPrimitive;

        $r3 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: java.lang.String getDocumentId()>();

        specialinvoke $r1.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>($r3);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("1", $r1);

        $z0 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: boolean hasState()>();

        if $z0 == 0 goto label1;

        $r23 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl getState()>();

        $r24 = interfaceinvoke $r23.<org.waveprotocol.wave.communication.gson.GsonSerializable: com.google.gson.JsonElement toGson(org.waveprotocol.wave.communication.json.RawStringData,com.google.gson.Gson)>(r20, r21);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("2", $r24);

     label1:
        $z1 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: boolean hasDiff()>();

        if $z1 == 0 goto label2;

        $r19 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl getDiff()>();

        $r22 = interfaceinvoke $r19.<org.waveprotocol.wave.communication.gson.GsonSerializable: com.google.gson.JsonElement toGson(org.waveprotocol.wave.communication.json.RawStringData,com.google.gson.Gson)>(r20, r21);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("21", $r22);

     label2:
        $r4 = new com.google.gson.JsonPrimitive;

        $r5 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: java.lang.String getAuthor()>();

        specialinvoke $r4.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>($r5);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("3", $r4);

        $r6 = new com.google.gson.JsonArray;

        specialinvoke $r6.<com.google.gson.JsonArray: void <init>()>();

        i2 = 0;

     label3:
        $i3 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: int getContributorSize()>();

        if i2 >= $i3 goto label4;

        $r17 = new com.google.gson.JsonPrimitive;

        $r18 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: java.lang.String getContributor(int)>(i2);

        specialinvoke $r17.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>($r18);

        virtualinvoke $r6.<com.google.gson.JsonArray: void add(com.google.gson.JsonElement)>($r17);

        i2 = i2 + 1;

        goto label3;

     label4:
        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("4", $r6);

        $r7 = new com.google.gson.JsonArray;

        specialinvoke $r7.<com.google.gson.JsonArray: void <init>()>();

        i4 = 0;

     label5:
        $i0 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: int getAddedContributorSize()>();

        if i4 >= $i0 goto label6;

        $r15 = new com.google.gson.JsonPrimitive;

        $r16 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: java.lang.String getAddedContributor(int)>(i4);

        specialinvoke $r15.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>($r16);

        virtualinvoke $r7.<com.google.gson.JsonArray: void add(com.google.gson.JsonElement)>($r15);

        i4 = i4 + 1;

        goto label5;

     label6:
        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("22", $r7);

        $r8 = new com.google.gson.JsonArray;

        specialinvoke $r8.<com.google.gson.JsonArray: void <init>()>();

        i5 = 0;

     label7:
        $i1 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: int getRemovedContributorSize()>();

        if i5 >= $i1 goto label8;

        $r13 = new com.google.gson.JsonPrimitive;

        $r14 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: java.lang.String getRemovedContributor(int)>(i5);

        specialinvoke $r13.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>($r14);

        virtualinvoke $r8.<com.google.gson.JsonArray: void add(com.google.gson.JsonElement)>($r13);

        i5 = i5 + 1;

        goto label7;

     label8:
        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("23", $r8);

        $r9 = new com.google.gson.JsonPrimitive;

        $d0 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: double getLastModifiedVersion()>();

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        specialinvoke $r9.<com.google.gson.JsonPrimitive: void <init>(java.lang.Number)>($r10);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("5", $r9);

        $r11 = new com.google.gson.JsonPrimitive;

        $d1 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: double getLastModifiedTime()>();

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        specialinvoke $r11.<com.google.gson.JsonPrimitive: void <init>(java.lang.Number)>($r12);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("6", $r11);

        return $r0;
    }

    public void fromGson(com.google.gson.JsonElement, com.google.gson.Gson, org.waveprotocol.wave.communication.json.RawStringData) throws org.waveprotocol.wave.communication.gson.GsonException
    {
        com.google.gson.JsonObject $r1;
        com.google.gson.Gson r21;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r2;
        com.google.gson.JsonArray $r6, $r10, $r14;
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl $r20, $r24;
        com.google.gson.JsonElement r0, $r3, $r4, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r23, $r25;
        int $i0, $i1, $i2, i3, i4, i5;
        java.lang.String $r8, $r12, $r16, $r18, $r26;
        double $d0, $d1;
        org.waveprotocol.wave.communication.json.RawStringData r22;

        r2 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        r0 := @parameter0: com.google.gson.JsonElement;

        r21 := @parameter1: com.google.gson.Gson;

        r22 := @parameter2: org.waveprotocol.wave.communication.json.RawStringData;

        $r1 = virtualinvoke r0.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>();

        specialinvoke r2.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void invalidateAll()>();

        $z0 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("1");

        if $z0 == 0 goto label01;

        $r25 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("1");

        $r26 = virtualinvoke $r25.<com.google.gson.JsonElement: java.lang.String getAsString()>();

        virtualinvoke r2.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void setDocumentId(java.lang.String)>($r26);

     label01:
        $z1 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("2");

        if $z1 == 0 goto label02;

        $r23 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("2");

        $z8 = virtualinvoke $r23.<com.google.gson.JsonElement: boolean isJsonNull()>();

        if $z8 != 0 goto label02;

        $r24 = new org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl;

        specialinvoke $r24.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl: void <init>()>();

        staticinvoke <org.waveprotocol.wave.communication.gson.GsonUtil: void extractJsonObject(org.waveprotocol.wave.communication.gson.GsonSerializable,com.google.gson.JsonElement,com.google.gson.Gson,org.waveprotocol.wave.communication.json.RawStringData)>($r24, $r23, r21, r22);

        virtualinvoke r2.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void setState(org.waveprotocol.wave.federation.ProtocolDocumentOperation)>($r24);

     label02:
        $z9 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("21");

        if $z9 == 0 goto label03;

        $r19 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("21");

        $z7 = virtualinvoke $r19.<com.google.gson.JsonElement: boolean isJsonNull()>();

        if $z7 != 0 goto label03;

        $r20 = new org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl;

        specialinvoke $r20.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl: void <init>()>();

        staticinvoke <org.waveprotocol.wave.communication.gson.GsonUtil: void extractJsonObject(org.waveprotocol.wave.communication.gson.GsonSerializable,com.google.gson.JsonElement,com.google.gson.Gson,org.waveprotocol.wave.communication.json.RawStringData)>($r20, $r19, r21, r22);

        virtualinvoke r2.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void setDiff(org.waveprotocol.wave.federation.ProtocolDocumentOperation)>($r20);

     label03:
        $z10 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("3");

        if $z10 == 0 goto label04;

        $r17 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("3");

        $r18 = virtualinvoke $r17.<com.google.gson.JsonElement: java.lang.String getAsString()>();

        virtualinvoke r2.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void setAuthor(java.lang.String)>($r18);

     label04:
        $z2 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("4");

        if $z2 == 0 goto label06;

        $r13 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("4");

        $r14 = virtualinvoke $r13.<com.google.gson.JsonElement: com.google.gson.JsonArray getAsJsonArray()>();

        i3 = 0;

     label05:
        $i2 = virtualinvoke $r14.<com.google.gson.JsonArray: int size()>();

        if i3 >= $i2 goto label06;

        $r15 = virtualinvoke $r14.<com.google.gson.JsonArray: com.google.gson.JsonElement get(int)>(i3);

        $r16 = virtualinvoke $r15.<com.google.gson.JsonElement: java.lang.String getAsString()>();

        virtualinvoke r2.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void addContributor(java.lang.String)>($r16);

        i3 = i3 + 1;

        goto label05;

     label06:
        $z3 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("22");

        if $z3 == 0 goto label08;

        $r9 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("22");

        $r10 = virtualinvoke $r9.<com.google.gson.JsonElement: com.google.gson.JsonArray getAsJsonArray()>();

        i4 = 0;

     label07:
        $i1 = virtualinvoke $r10.<com.google.gson.JsonArray: int size()>();

        if i4 >= $i1 goto label08;

        $r11 = virtualinvoke $r10.<com.google.gson.JsonArray: com.google.gson.JsonElement get(int)>(i4);

        $r12 = virtualinvoke $r11.<com.google.gson.JsonElement: java.lang.String getAsString()>();

        virtualinvoke r2.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void addAddedContributor(java.lang.String)>($r12);

        i4 = i4 + 1;

        goto label07;

     label08:
        $z4 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("23");

        if $z4 == 0 goto label10;

        $r5 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("23");

        $r6 = virtualinvoke $r5.<com.google.gson.JsonElement: com.google.gson.JsonArray getAsJsonArray()>();

        i5 = 0;

     label09:
        $i0 = virtualinvoke $r6.<com.google.gson.JsonArray: int size()>();

        if i5 >= $i0 goto label10;

        $r7 = virtualinvoke $r6.<com.google.gson.JsonArray: com.google.gson.JsonElement get(int)>(i5);

        $r8 = virtualinvoke $r7.<com.google.gson.JsonElement: java.lang.String getAsString()>();

        virtualinvoke r2.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void addRemovedContributor(java.lang.String)>($r8);

        i5 = i5 + 1;

        goto label09;

     label10:
        $z5 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("5");

        if $z5 == 0 goto label11;

        $r4 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("5");

        $d1 = virtualinvoke $r4.<com.google.gson.JsonElement: double getAsDouble()>();

        virtualinvoke r2.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void setLastModifiedVersion(double)>($d1);

     label11:
        $z6 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("6");

        if $z6 == 0 goto label12;

        $r3 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("6");

        $d0 = virtualinvoke $r3.<com.google.gson.JsonElement: double getAsDouble()>();

        virtualinvoke r2.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void setLastModifiedTime(double)>($d0);

     label12:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r2, $r4;
        java.lang.Object r1;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0, $r3;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot getPB()>();

        $r3 = (org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl) r1;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot getPB()>();

        $z1 = virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: boolean equals(java.lang.Object)>($r4);

        return $z1;

     label2:
        return 0;
    }

    public boolean isEqualTo(java.lang.Object)
    {
        org.waveprotocol.wave.diff.DocumentDiffSnapshot $r2;
        java.lang.Object r1;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = r1 instanceof org.waveprotocol.wave.diff.DocumentDiffSnapshot;

        if $z1 == 0 goto label2;

        $r2 = (org.waveprotocol.wave.diff.DocumentDiffSnapshot) r1;

        $z2 = staticinvoke <org.waveprotocol.wave.diff.DocumentDiffSnapshotUtil: boolean isEqual(org.waveprotocol.wave.diff.DocumentDiffSnapshot,org.waveprotocol.wave.diff.DocumentDiffSnapshot)>(r0, $r2);

        return $z2;

     label2:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot getPB()>();

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        java.lang.String $r2;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot getPB()>();

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot: java.lang.String toString()>();

        return $r2;
    }

    public volatile org.waveprotocol.wave.federation.ProtocolDocumentOperation getDiff()
    {
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl getDiff()>();

        return $r1;
    }

    public volatile org.waveprotocol.wave.federation.ProtocolDocumentOperation getState()
    {
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl getState()>();

        return $r1;
    }

    public volatile com.google.protobuf.MessageLite getPB()
    {
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot getPB()>();

        return $r1;
    }

    public volatile void setPB(com.google.protobuf.MessageLite)
    {
        com.google.protobuf.MessageLite r1;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r2;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl r0;

        r0 := @this: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        r1 := @parameter0: com.google.protobuf.MessageLite;

        $r2 = (org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot) r1;

        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void setPB(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r2);

        return;
    }
}
