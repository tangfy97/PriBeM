public class org.jdesktop.swingx.search.PatternModel extends java.lang.Object
{
    public static final java.lang.String SEARCH_PREFIX;
    public static final java.lang.String REGEX_UNCHANGED;
    public static final java.lang.String REGEX_ANCHORED;
    public static final java.lang.String REGEX_WILDCARD;
    public static final java.lang.String REGEX_MATCH_RULES;
    public static final java.lang.String MATCH_RULE_CONTAINS;
    public static final java.lang.String MATCH_RULE_EQUALS;
    public static final java.lang.String MATCH_RULE_ENDSWITH;
    public static final java.lang.String MATCH_RULE_STARTSWITH;
    public static final java.lang.String MATCH_BACKWARDS_ACTION_COMMAND;
    public static final java.lang.String MATCH_WRAP_ACTION_COMMAND;
    public static final java.lang.String MATCH_CASE_ACTION_COMMAND;
    public static final java.lang.String MATCH_INCREMENTAL_ACTION_COMMAND;
    private java.lang.String rawText;
    private boolean backwards;
    private java.util.regex.Pattern pattern;
    private int foundIndex;
    private boolean caseSensitive;
    private java.beans.PropertyChangeSupport propertySupport;
    private java.lang.String regexCreatorKey;
    private org.jdesktop.swingx.search.PatternModel$RegexCreator regexCreator;
    private boolean wrapping;
    private boolean incremental;

    public void <init>()
    {
        int $i1;
        org.jdesktop.swingx.search.PatternModel r0;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = (int) -1;

        r0.<org.jdesktop.swingx.search.PatternModel: int foundIndex> = $i1;

        return;
    }

    public int getFoundIndex()
    {
        int $i0;
        org.jdesktop.swingx.search.PatternModel r0;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        $i0 = r0.<org.jdesktop.swingx.search.PatternModel: int foundIndex>;

        return $i0;
    }

    public void setFoundIndex(int)
    {
        org.jdesktop.swingx.search.PatternModel r0;
        int $i0, i1, $i2;
        java.lang.Integer $r1, $r2;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        i1 := @parameter0: int;

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: int getFoundIndex()>();

        virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: void updateFoundIndex(int)>(i1);

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i2 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: int getFoundIndex()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("foundIndex", $r1, $r2);

        return;
    }

    protected void updateFoundIndex(int)
    {
        org.jdesktop.swingx.search.PatternModel r0;
        int i0, $i1;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        r0.<org.jdesktop.swingx.search.PatternModel: int foundIndex> = i0;

        return;

     label1:
        $z0 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: boolean isAutoAdjustFoundIndex()>();

        if $z0 == 0 goto label4;

        $z1 = r0.<org.jdesktop.swingx.search.PatternModel: boolean backwards>;

        if $z1 == 0 goto label2;

        $i1 = i0 - 1;

        goto label3;

     label2:
        $i1 = i0 + 1;

     label3:
        r0.<org.jdesktop.swingx.search.PatternModel: int foundIndex> = $i1;

        goto label5;

     label4:
        r0.<org.jdesktop.swingx.search.PatternModel: int foundIndex> = i0;

     label5:
        return;
    }

    public boolean isAutoAdjustFoundIndex()
    {
        org.jdesktop.swingx.search.PatternModel r0;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: boolean isIncremental()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isBackwards()
    {
        org.jdesktop.swingx.search.PatternModel r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        $z0 = r0.<org.jdesktop.swingx.search.PatternModel: boolean backwards>;

        return $z0;
    }

    public void setBackwards(boolean)
    {
        org.jdesktop.swingx.search.PatternModel r0;
        int $i0;
        java.lang.Boolean $r1, $r2;
        boolean $z0, z1, $z2;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: boolean isBackwards()>();

        r0.<org.jdesktop.swingx.search.PatternModel: boolean backwards> = z1;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z2 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: boolean isBackwards()>();

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("backwards", $r1, $r2);

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: int getFoundIndex()>();

        virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: void setFoundIndex(int)>($i0);

        return;
    }

    public boolean isWrapping()
    {
        org.jdesktop.swingx.search.PatternModel r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        $z0 = r0.<org.jdesktop.swingx.search.PatternModel: boolean wrapping>;

        return $z0;
    }

    public void setWrapping(boolean)
    {
        org.jdesktop.swingx.search.PatternModel r0;
        java.lang.Boolean $r1, $r2;
        boolean $z0, z1, $z2;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: boolean isWrapping()>();

        r0.<org.jdesktop.swingx.search.PatternModel: boolean wrapping> = z1;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z2 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: boolean isWrapping()>();

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("wrapping", $r1, $r2);

        return;
    }

    public void setIncremental(boolean)
    {
        org.jdesktop.swingx.search.PatternModel r0;
        java.lang.Boolean $r1, $r2;
        boolean $z0, z1, $z2;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: boolean isIncremental()>();

        r0.<org.jdesktop.swingx.search.PatternModel: boolean incremental> = z1;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z2 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: boolean isIncremental()>();

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("incremental", $r1, $r2);

        return;
    }

    public boolean isIncremental()
    {
        org.jdesktop.swingx.search.PatternModel r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        $z0 = r0.<org.jdesktop.swingx.search.PatternModel: boolean incremental>;

        return $z0;
    }

    public boolean isCaseSensitive()
    {
        org.jdesktop.swingx.search.PatternModel r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        $z0 = r0.<org.jdesktop.swingx.search.PatternModel: boolean caseSensitive>;

        return $z0;
    }

    public void setCaseSensitive(boolean)
    {
        org.jdesktop.swingx.search.PatternModel r0;
        java.lang.Boolean $r1, $r2;
        boolean $z0, z1, $z2;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: boolean isCaseSensitive()>();

        r0.<org.jdesktop.swingx.search.PatternModel: boolean caseSensitive> = z1;

        specialinvoke r0.<org.jdesktop.swingx.search.PatternModel: void updatePattern(boolean)>(z1);

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z2 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: boolean isCaseSensitive()>();

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("caseSensitive", $r1, $r2);

        return;
    }

    public java.util.regex.Pattern getPattern()
    {
        java.util.regex.Pattern $r1;
        org.jdesktop.swingx.search.PatternModel r0;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        $r1 = r0.<org.jdesktop.swingx.search.PatternModel: java.util.regex.Pattern pattern>;

        return $r1;
    }

    public java.lang.String getRawText()
    {
        java.lang.String $r1;
        org.jdesktop.swingx.search.PatternModel r0;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        $r1 = r0.<org.jdesktop.swingx.search.PatternModel: java.lang.String rawText>;

        return $r1;
    }

    public void setRawText(java.lang.String)
    {
        org.jdesktop.swingx.search.PatternModel r0;
        java.lang.Boolean $r5, $r6;
        java.lang.String $r1, r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: java.lang.String getRawText()>();

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: boolean isEmpty()>();

        r0.<org.jdesktop.swingx.search.PatternModel: java.lang.String rawText> = r2;

        $r3 = specialinvoke r0.<org.jdesktop.swingx.search.PatternModel: java.lang.String createRegEx(java.lang.String)>(r2);

        specialinvoke r0.<org.jdesktop.swingx.search.PatternModel: void updatePattern(java.lang.String)>($r3);

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: java.lang.String getRawText()>();

        virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("rawText", $r1, $r4);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: boolean isEmpty()>();

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("empty", $r5, $r6);

        return;
    }

    public boolean isEmpty()
    {
        java.lang.String $r1;
        org.jdesktop.swingx.search.PatternModel r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: java.lang.String getRawText()>();

        $z0 = specialinvoke r0.<org.jdesktop.swingx.search.PatternModel: boolean isEmpty(java.lang.String)>($r1);

        return $z0;
    }

    private java.lang.String createRegEx(java.lang.String)
    {
        org.jdesktop.swingx.search.PatternModel r0;
        org.jdesktop.swingx.search.PatternModel$RegexCreator $r2;
        java.lang.String r1, $r3;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<org.jdesktop.swingx.search.PatternModel: boolean isEmpty(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = specialinvoke r0.<org.jdesktop.swingx.search.PatternModel: org.jdesktop.swingx.search.PatternModel$RegexCreator getRegexCreator()>();

        $r3 = virtualinvoke $r2.<org.jdesktop.swingx.search.PatternModel$RegexCreator: java.lang.String createRegEx(java.lang.String)>(r1);

        return $r3;
    }

    private boolean isEmpty(java.lang.String)
    {
        org.jdesktop.swingx.search.PatternModel r1;
        int $i0;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: org.jdesktop.swingx.search.PatternModel;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private void updatePattern(java.lang.String)
    {
        org.jdesktop.swingx.search.PatternModel r0;
        int $i0;
        java.util.regex.Pattern $r1, $r3, $r5;
        java.lang.String r2, $r4;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: java.util.regex.Pattern getPattern()>();

        $z0 = specialinvoke r0.<org.jdesktop.swingx.search.PatternModel: boolean isEmpty(java.lang.String)>(r2);

        if $z0 == 0 goto label1;

        r0.<org.jdesktop.swingx.search.PatternModel: java.util.regex.Pattern pattern> = null;

        goto label3;

     label1:
        if $r1 == null goto label2;

        $r4 = virtualinvoke $r1.<java.util.regex.Pattern: java.lang.String pattern()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label3;

     label2:
        $i0 = specialinvoke r0.<org.jdesktop.swingx.search.PatternModel: int getFlags()>();

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>(r2, $i0);

        r0.<org.jdesktop.swingx.search.PatternModel: java.util.regex.Pattern pattern> = $r3;

     label3:
        $r5 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: java.util.regex.Pattern getPattern()>();

        virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("pattern", $r1, $r5);

        return;
    }

    private int getFlags()
    {
        int $i0;
        org.jdesktop.swingx.search.PatternModel r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: boolean isCaseSensitive()>();

        if $z0 == 0 goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $i0 = specialinvoke r0.<org.jdesktop.swingx.search.PatternModel: int getCaseInsensitiveFlag()>();

     label2:
        return $i0;
    }

    private int getCaseInsensitiveFlag()
    {
        org.jdesktop.swingx.search.PatternModel r0;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        return 66;
    }

    private void updatePattern(boolean)
    {
        org.jdesktop.swingx.search.PatternModel r0;
        int $i0, $i1, $i2, $i3;
        java.util.regex.Pattern $r1, $r2, $r3, $r5, $r6, $r8, $r9;
        java.lang.String $r4, $r7;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.jdesktop.swingx.search.PatternModel: java.util.regex.Pattern pattern>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: java.util.regex.Pattern getPattern()>();

        $i0 = virtualinvoke $r2.<java.util.regex.Pattern: int flags()>();

        $i1 = specialinvoke r0.<org.jdesktop.swingx.search.PatternModel: int getCaseInsensitiveFlag()>();

        if z0 == 0 goto label2;

        $i3 = $i0 & $i1;

        if $i3 == 0 goto label2;

        $r6 = r0.<org.jdesktop.swingx.search.PatternModel: java.util.regex.Pattern pattern>;

        $r7 = virtualinvoke $r6.<java.util.regex.Pattern: java.lang.String pattern()>();

        $r8 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>($r7, 0);

        r0.<org.jdesktop.swingx.search.PatternModel: java.util.regex.Pattern pattern> = $r8;

        goto label3;

     label2:
        if z0 != 0 goto label3;

        $i2 = $i0 & $i1;

        if $i2 != 0 goto label3;

        $r3 = r0.<org.jdesktop.swingx.search.PatternModel: java.util.regex.Pattern pattern>;

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.lang.String pattern()>();

        $r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>($r4, $i1);

        r0.<org.jdesktop.swingx.search.PatternModel: java.util.regex.Pattern pattern> = $r5;

     label3:
        $r9 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: java.util.regex.Pattern getPattern()>();

        virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("pattern", $r2, $r9);

        return;
    }

    public void addPropertyChangeListener(java.beans.PropertyChangeListener)
    {
        org.jdesktop.swingx.search.PatternModel r0;
        java.beans.PropertyChangeListener r2;
        java.beans.PropertyChangeSupport $r1, $r3, $r4;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        r2 := @parameter0: java.beans.PropertyChangeListener;

        $r1 = r0.<org.jdesktop.swingx.search.PatternModel: java.beans.PropertyChangeSupport propertySupport>;

        if $r1 != null goto label1;

        $r4 = new java.beans.PropertyChangeSupport;

        specialinvoke $r4.<java.beans.PropertyChangeSupport: void <init>(java.lang.Object)>(r0);

        r0.<org.jdesktop.swingx.search.PatternModel: java.beans.PropertyChangeSupport propertySupport> = $r4;

     label1:
        $r3 = r0.<org.jdesktop.swingx.search.PatternModel: java.beans.PropertyChangeSupport propertySupport>;

        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void addPropertyChangeListener(java.beans.PropertyChangeListener)>(r2);

        return;
    }

    public void removePropertyChangeListener(java.beans.PropertyChangeListener)
    {
        org.jdesktop.swingx.search.PatternModel r0;
        java.beans.PropertyChangeListener r2;
        java.beans.PropertyChangeSupport $r1, $r3;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        r2 := @parameter0: java.beans.PropertyChangeListener;

        $r1 = r0.<org.jdesktop.swingx.search.PatternModel: java.beans.PropertyChangeSupport propertySupport>;

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = r0.<org.jdesktop.swingx.search.PatternModel: java.beans.PropertyChangeSupport propertySupport>;

        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void removePropertyChangeListener(java.beans.PropertyChangeListener)>(r2);

        return;
    }

    protected void firePropertyChange(java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.jdesktop.swingx.search.PatternModel r0;
        java.beans.PropertyChangeSupport $r1, $r5;
        java.lang.Object r3, r4;
        java.lang.String r2;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Object;

        $r1 = r0.<org.jdesktop.swingx.search.PatternModel: java.beans.PropertyChangeSupport propertySupport>;

        if $r1 != null goto label1;

        return;

     label1:
        $r5 = r0.<org.jdesktop.swingx.search.PatternModel: java.beans.PropertyChangeSupport propertySupport>;

        virtualinvoke $r5.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>(r2, r3, r4);

        return;
    }

    public void setRegexCreatorKey(java.lang.String)
    {
        org.jdesktop.swingx.search.PatternModel r0;
        java.lang.String $r1, r2, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: java.lang.String getRegexCreatorKey()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: java.lang.String getRegexCreatorKey()>();

        r0.<org.jdesktop.swingx.search.PatternModel: java.lang.String regexCreatorKey> = r2;

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: java.lang.String getRegexCreatorKey()>();

        virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: void createRegexCreator(java.lang.String)>($r4);

        $r5 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: java.lang.String getRegexCreatorKey()>();

        virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("regexCreatorKey", $r3, $r5);

        return;
    }

    protected void createRegexCreator(java.lang.String)
    {
        org.jdesktop.swingx.search.PatternModel r2;
        org.jdesktop.swingx.search.PatternModel$AnchoredSearchMode $r4;
        org.jdesktop.swingx.search.PatternModel$RegexCreator $r3;
        java.lang.String r0, $r1;
        boolean $z0;

        r2 := @this: org.jdesktop.swingx.search.PatternModel;

        r0 := @parameter0: java.lang.String;

        $r1 = "anchored";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r4 = new org.jdesktop.swingx.search.PatternModel$AnchoredSearchMode;

        specialinvoke $r4.<org.jdesktop.swingx.search.PatternModel$AnchoredSearchMode: void <init>()>();

        virtualinvoke r2.<org.jdesktop.swingx.search.PatternModel: void setRegexCreator(org.jdesktop.swingx.search.PatternModel$RegexCreator)>($r4);

        goto label2;

     label1:
        $r3 = new org.jdesktop.swingx.search.PatternModel$RegexCreator;

        specialinvoke $r3.<org.jdesktop.swingx.search.PatternModel$RegexCreator: void <init>()>();

        virtualinvoke r2.<org.jdesktop.swingx.search.PatternModel: void setRegexCreator(org.jdesktop.swingx.search.PatternModel$RegexCreator)>($r3);

     label2:
        return;
    }

    public java.lang.String getRegexCreatorKey()
    {
        org.jdesktop.swingx.search.PatternModel r0;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        $r1 = r0.<org.jdesktop.swingx.search.PatternModel: java.lang.String regexCreatorKey>;

        if $r1 != null goto label1;

        $r3 = specialinvoke r0.<org.jdesktop.swingx.search.PatternModel: java.lang.String getDefaultRegexCreatorKey()>();

        r0.<org.jdesktop.swingx.search.PatternModel: java.lang.String regexCreatorKey> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.search.PatternModel: java.lang.String regexCreatorKey>;

        return $r2;
    }

    private java.lang.String getDefaultRegexCreatorKey()
    {
        org.jdesktop.swingx.search.PatternModel r0;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        return "explicit";
    }

    private org.jdesktop.swingx.search.PatternModel$RegexCreator getRegexCreator()
    {
        org.jdesktop.swingx.search.PatternModel r0;
        org.jdesktop.swingx.search.PatternModel$RegexCreator $r1, $r2, $r3;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        $r1 = r0.<org.jdesktop.swingx.search.PatternModel: org.jdesktop.swingx.search.PatternModel$RegexCreator regexCreator>;

        if $r1 != null goto label1;

        $r3 = new org.jdesktop.swingx.search.PatternModel$RegexCreator;

        specialinvoke $r3.<org.jdesktop.swingx.search.PatternModel$RegexCreator: void <init>()>();

        r0.<org.jdesktop.swingx.search.PatternModel: org.jdesktop.swingx.search.PatternModel$RegexCreator regexCreator> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.search.PatternModel: org.jdesktop.swingx.search.PatternModel$RegexCreator regexCreator>;

        return $r2;
    }

    public void setRegexCreator(org.jdesktop.swingx.search.PatternModel$RegexCreator)
    {
        org.jdesktop.swingx.search.PatternModel$RegexCreator r1, r2;
        org.jdesktop.swingx.search.PatternModel r0;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        r2 := @parameter0: org.jdesktop.swingx.search.PatternModel$RegexCreator;

        r1 = r0.<org.jdesktop.swingx.search.PatternModel: org.jdesktop.swingx.search.PatternModel$RegexCreator regexCreator>;

        r0.<org.jdesktop.swingx.search.PatternModel: org.jdesktop.swingx.search.PatternModel$RegexCreator regexCreator> = r2;

        virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("regexCreator", r1, r2);

        return;
    }

    public void setMatchRule(java.lang.String)
    {
        org.jdesktop.swingx.search.PatternModel r0;
        org.jdesktop.swingx.search.PatternModel$RegexCreator $r4;
        java.lang.String $r1, r2, $r3, $r5, $r6, $r7;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: java.lang.String getMatchRule()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: java.lang.String getMatchRule()>();

        $r4 = specialinvoke r0.<org.jdesktop.swingx.search.PatternModel: org.jdesktop.swingx.search.PatternModel$RegexCreator getRegexCreator()>();

        virtualinvoke $r4.<org.jdesktop.swingx.search.PatternModel$RegexCreator: void setMatchRule(java.lang.String)>(r2);

        $r5 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: java.lang.String getRawText()>();

        $r6 = specialinvoke r0.<org.jdesktop.swingx.search.PatternModel: java.lang.String createRegEx(java.lang.String)>($r5);

        specialinvoke r0.<org.jdesktop.swingx.search.PatternModel: void updatePattern(java.lang.String)>($r6);

        $r7 = virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: java.lang.String getMatchRule()>();

        virtualinvoke r0.<org.jdesktop.swingx.search.PatternModel: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("matchRule", $r3, $r7);

        return;
    }

    public java.lang.String getMatchRule()
    {
        org.jdesktop.swingx.search.PatternModel$RegexCreator $r1;
        java.lang.String $r2;
        org.jdesktop.swingx.search.PatternModel r0;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.search.PatternModel: org.jdesktop.swingx.search.PatternModel$RegexCreator getRegexCreator()>();

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.search.PatternModel$RegexCreator: java.lang.String getMatchRule()>();

        return $r2;
    }

    public java.util.List getMatchRules()
    {
        org.jdesktop.swingx.search.PatternModel$RegexCreator $r1;
        java.util.List $r2;
        org.jdesktop.swingx.search.PatternModel r0;

        r0 := @this: org.jdesktop.swingx.search.PatternModel;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.search.PatternModel: org.jdesktop.swingx.search.PatternModel$RegexCreator getRegexCreator()>();

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.search.PatternModel$RegexCreator: java.util.List getMatchRules()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <org.jdesktop.swingx.search.PatternModel: java.lang.String MATCH_INCREMENTAL_ACTION_COMMAND> = "matchIncremental";

        <org.jdesktop.swingx.search.PatternModel: java.lang.String MATCH_CASE_ACTION_COMMAND> = "matchCase";

        <org.jdesktop.swingx.search.PatternModel: java.lang.String MATCH_WRAP_ACTION_COMMAND> = "wrapSearch";

        <org.jdesktop.swingx.search.PatternModel: java.lang.String MATCH_BACKWARDS_ACTION_COMMAND> = "backwardsSearch";

        <org.jdesktop.swingx.search.PatternModel: java.lang.String MATCH_RULE_STARTSWITH> = "startsWith";

        <org.jdesktop.swingx.search.PatternModel: java.lang.String MATCH_RULE_ENDSWITH> = "endsWith";

        <org.jdesktop.swingx.search.PatternModel: java.lang.String MATCH_RULE_EQUALS> = "equals";

        <org.jdesktop.swingx.search.PatternModel: java.lang.String MATCH_RULE_CONTAINS> = "contains";

        <org.jdesktop.swingx.search.PatternModel: java.lang.String REGEX_MATCH_RULES> = "explicit";

        <org.jdesktop.swingx.search.PatternModel: java.lang.String REGEX_WILDCARD> = "wildcard";

        <org.jdesktop.swingx.search.PatternModel: java.lang.String REGEX_ANCHORED> = "anchored";

        <org.jdesktop.swingx.search.PatternModel: java.lang.String REGEX_UNCHANGED> = "regex";

        <org.jdesktop.swingx.search.PatternModel: java.lang.String SEARCH_PREFIX> = "Search.";

        return;
    }
}
