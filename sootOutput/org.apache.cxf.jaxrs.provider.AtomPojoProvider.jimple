public class org.apache.cxf.jaxrs.provider.AtomPojoProvider extends org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider implements javax.ws.rs.ext.MessageBodyWriter, javax.ws.rs.ext.MessageBodyReader
{
    private static final java.util.logging.Logger LOG;
    private static final org.apache.abdera.Abdera ATOM_ENGINE;
    private org.apache.cxf.jaxrs.provider.JAXBElementProvider jaxbProvider;
    private java.util.Map collectionGetters;
    private java.util.Map collectionSetters;
    private java.util.Map atomWriters;
    private java.util.Map atomReaders;
    private java.util.Map atomBuilders;
    private org.apache.cxf.jaxrs.ext.MessageContext mc;
    private boolean formattedOutput;

    public void <init>()
    {
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r0;
        java.util.Map $r2, $r3, $r4, $r5, $r6;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider $r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider: void <init>()>();

        $r1 = new org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        specialinvoke $r1.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: void <init>()>();

        r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: org.apache.cxf.jaxrs.provider.JAXBElementProvider jaxbProvider> = $r1;

        $r2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.util.Map collectionGetters> = $r2;

        $r3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.util.Map collectionSetters> = $r3;

        $r4 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.util.Map atomWriters> = $r4;

        $r5 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.util.Map atomReaders> = $r5;

        $r6 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.util.Map atomBuilders> = $r6;

        return;
    }

    public void setMessageContext(org.apache.cxf.jaxrs.ext.MessageContext)
    {
        org.apache.cxf.jaxrs.ext.atom.AbstractAtomElementBuilder r14;
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r0;
        org.apache.cxf.jaxrs.ext.MessageContext r1;
        java.util.Map $r2, $r5, $r8;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r4, $r7, $r10;
        java.util.Collection $r3, $r6, $r9;
        org.apache.cxf.jaxrs.ext.atom.AtomElementReader r16;
        java.lang.Object $r11, $r12, $r13;
        org.apache.cxf.jaxrs.ext.atom.AtomElementWriter r15;

        r0 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r1 := @parameter0: org.apache.cxf.jaxrs.ext.MessageContext;

        r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: org.apache.cxf.jaxrs.ext.MessageContext mc> = r1;

        $r2 = r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.util.Map atomBuilders>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r13 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r14 = (org.apache.cxf.jaxrs.ext.atom.AbstractAtomElementBuilder) $r13;

        virtualinvoke r14.<org.apache.cxf.jaxrs.ext.atom.AbstractAtomElementBuilder: void setMessageContext(org.apache.cxf.jaxrs.ext.MessageContext)>(r1);

        goto label1;

     label2:
        $r5 = r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.util.Map atomWriters>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Collection values()>();

        $r7 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r12 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r15 = (org.apache.cxf.jaxrs.ext.atom.AtomElementWriter) $r12;

        virtualinvoke r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: void tryInjectMessageContext(java.lang.Object)>(r15);

        goto label3;

     label4:
        $r8 = r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.util.Map atomReaders>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>();

        $r10 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r16 = (org.apache.cxf.jaxrs.ext.atom.AtomElementReader) $r11;

        virtualinvoke r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: void tryInjectMessageContext(java.lang.Object)>(r16);

        goto label5;

     label6:
        return;
    }

    protected void tryInjectMessageContext(java.lang.Object)
    {
        java.lang.Throwable $r6;
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r4;
        org.apache.cxf.jaxrs.ext.MessageContext $r5;
        java.lang.String $r11, $r14, $r16;
        java.lang.reflect.Method $r3;
        java.lang.Class[] $r2;
        java.util.logging.Logger $r8;
        java.lang.Object r0;
        java.lang.Class $r1, $r10;
        java.lang.StringBuilder $r7, $r9, $r12, $r13, $r15;

        r4 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r0 := @parameter0: java.lang.Object;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = newarray (java.lang.Class)[1];

        $r2[0] = class "Lorg/apache/cxf/jaxrs/ext/MessageContext;";

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setMessageContext", $r2);

        $r5 = r4.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: void injectThroughMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object)>(r0, $r3, $r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r8 = <org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.util.logging.Logger LOG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Message context can not be injected into ");

        $r10 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r14 = virtualinvoke $r6.<java.lang.Throwable: java.lang.String getMessage()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.util.logging.Logger: void warning(java.lang.String)>($r16);

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public long getSize(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r0;
        javax.ws.rs.core.MediaType r5;
        java.lang.reflect.Type r3;
        java.lang.Object r1;
        java.lang.Class r2;
        java.lang.'annotation'.Annotation[] r4;

        r0 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.reflect.Type;

        r4 := @parameter3: java.lang.'annotation'.Annotation[];

        r5 := @parameter4: javax.ws.rs.core.MediaType;

        return -1L;
    }

    public void setCollectionGetters(java.util.Map)
    {
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r1 := @parameter0: java.util.Map;

        r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.util.Map collectionGetters> = r1;

        return;
    }

    public void setCollectionSetters(java.util.Map)
    {
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r1 := @parameter0: java.util.Map;

        r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.util.Map collectionSetters> = r1;

        return;
    }

    public boolean isWriteable(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r3;
        java.lang.'annotation'.Annotation[] r5;
        javax.ws.rs.core.MediaType r6;
        java.lang.reflect.Type r4;
        java.lang.Class r0, $r1, $r2;
        boolean $z0, $z1, $z2;

        r3 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r0 := @parameter0: java.lang.Class;

        r4 := @parameter1: java.lang.reflect.Type;

        r5 := @parameter2: java.lang.'annotation'.Annotation[];

        r6 := @parameter3: javax.ws.rs.core.MediaType;

        $r1 = class "Lorg/apache/abdera/model/Feed;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 != 0 goto label1;

        $r2 = class "Lorg/apache/abdera/model/Entry;";

        $z1 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r3;
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r0;
        java.io.IOException $r5;
        java.lang.'annotation'.Annotation[] r9;
        java.lang.Exception $r6;
        javax.ws.rs.core.MultivaluedMap r10;
        javax.ws.rs.core.MediaType r1;
        java.lang.reflect.Type r8;
        javax.ws.rs.WebApplicationException $r12;
        java.lang.Class r2;
        java.lang.Object r4, r11;
        boolean $z0, $z1;
        org.apache.abdera.model.Element $r13;

        r0 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r4 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        r8 := @parameter2: java.lang.reflect.Type;

        r9 := @parameter3: java.lang.'annotation'.Annotation[];

        r1 := @parameter4: javax.ws.rs.core.MediaType;

        r10 := @parameter5: javax.ws.rs.core.MultivaluedMap;

        r3 := @parameter6: java.io.OutputStream;

        $z0 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: boolean isFeedRequested(javax.ws.rs.core.MediaType)>(r1);

        $z1 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: boolean isSupportedCollectionOrArray(java.lang.Class)>(r2);

        if $z0 == 0 goto label01;

        if $z1 == 0 goto label01;

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: void reportError(java.lang.String,java.lang.Exception)>("Atom feed can only be created from a collection wrapper", null);

        goto label02;

     label01:
        if $z0 != 0 goto label02;

        if $z1 == 0 goto label02;

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: void reportError(java.lang.String,java.lang.Exception)>("Atom entry can only be created from a single object", null);

     label02:
        r11 = null;

     label03:
        if $z0 == 0 goto label04;

        if $z1 != 0 goto label04;

        r11 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: org.apache.abdera.model.Feed createFeedFromCollectionWrapper(java.lang.Object)>(r4);

        goto label05;

     label04:
        if $z0 != 0 goto label05;

        if $z1 != 0 goto label05;

        r11 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: org.apache.abdera.model.Entry createEntryFromObject(java.lang.Object,java.lang.Class)>(r4, r2);

     label05:
        goto label07;

     label06:
        $r6 := @caughtexception;

        $r12 = new javax.ws.rs.WebApplicationException;

        specialinvoke $r12.<javax.ws.rs.WebApplicationException: void <init>(java.lang.Throwable)>($r6);

        throw $r12;

     label07:
        $r13 = (org.apache.abdera.model.Element) r11;

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: void writeAtomElement(org.apache.abdera.model.Element,java.io.OutputStream)>($r13, r3);

     label08:
        goto label10;

     label09:
        $r5 := @caughtexception;

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: void reportError(java.lang.String,java.lang.Exception)>("Atom element can not be serialized", $r5);

     label10:
        return;

        catch java.lang.Exception from label03 to label05 with label06;
        catch java.io.IOException from label07 to label08 with label09;
    }

    private void writeAtomElement(org.apache.abdera.model.Element, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r2;
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r0;
        org.apache.abdera.Abdera $r3;
        org.apache.abdera.writer.WriterFactory $r4;
        boolean $z0;
        org.apache.abdera.model.Element r1;
        org.apache.abdera.writer.Writer $r5;

        r0 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r1 := @parameter0: org.apache.abdera.model.Element;

        r2 := @parameter1: java.io.OutputStream;

        $z0 = r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: boolean formattedOutput>;

        if $z0 == 0 goto label1;

        $r3 = <org.apache.cxf.jaxrs.provider.AtomPojoProvider: org.apache.abdera.Abdera ATOM_ENGINE>;

        $r4 = virtualinvoke $r3.<org.apache.abdera.Abdera: org.apache.abdera.writer.WriterFactory getWriterFactory()>();

        $r5 = interfaceinvoke $r4.<org.apache.abdera.writer.WriterFactory: org.apache.abdera.writer.Writer getWriter(java.lang.String)>("prettyxml");

        interfaceinvoke r1.<org.apache.abdera.model.Element: void writeTo(org.apache.abdera.writer.Writer,java.io.OutputStream)>($r5, r2);

        goto label2;

     label1:
        interfaceinvoke r1.<org.apache.abdera.model.Element: void writeTo(java.io.OutputStream)>(r2);

     label2:
        return;
    }

    public void setFormattedOutput(boolean)
    {
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r0;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: boolean formattedOutput> = z0;

        return;
    }

    protected org.apache.abdera.model.Feed createFeedFromCollectionWrapper(java.lang.Object) throws java.lang.Exception
    {
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r2;
        java.lang.Object[] $r10;
        org.apache.abdera.factory.Factory $r0;
        org.apache.abdera.model.Feed $r1;
        int $i0;
        java.lang.String $r6, $r17, $r20;
        java.lang.reflect.Method $r9, r22;
        boolean $z0;
        java.lang.Class[] $r8;
        java.lang.Exception $r13;
        java.util.List $r4;
        java.lang.reflect.Type $r12;
        java.lang.Object r3, r21;
        java.lang.Class $r5, $r7, $r11, $r16;
        java.lang.StringBuilder $r14, $r15, $r18, $r19;

        r2 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r3 := @parameter0: java.lang.Object;

        $r0 = staticinvoke <org.apache.abdera.Abdera: org.apache.abdera.factory.Factory getNewFactory()>();

        $r1 = interfaceinvoke $r0.<org.apache.abdera.factory.Factory: org.apache.abdera.model.Feed newFeed()>();

        $z0 = virtualinvoke r2.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: boolean buildFeed(org.apache.abdera.model.Feed,java.lang.Object)>($r1, r3);

        $r4 = interfaceinvoke $r1.<org.apache.abdera.model.Feed: java.util.List getEntries()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        return $r1;

     label1:
        $r5 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = specialinvoke r2.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.lang.String getCollectionMethod(java.lang.Class,boolean)>($r5, 1);

        r21 = null;

        r22 = null;

     label2:
        $r7 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = newarray (java.lang.Class)[0];

        $r9 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r6, $r8);

        r22 = $r9;

        $r10 = newarray (java.lang.Object)[0];

        r21 = virtualinvoke $r9.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r3, $r10);

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Collection for ");

        $r16 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can not be retrieved");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: void reportError(java.lang.String,java.lang.Exception)>($r20, $r13);

     label5:
        $r11 = virtualinvoke r22.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r12 = virtualinvoke r22.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();

        virtualinvoke r2.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: void setFeedFromCollection(org.apache.abdera.factory.Factory,org.apache.abdera.model.Feed,java.lang.Object,java.lang.Object,java.lang.Class,java.lang.reflect.Type,boolean)>($r0, $r1, r3, r21, $r11, $r12, $z0);

        return $r1;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    private java.lang.String getCollectionMethod(java.lang.Class, boolean)
    {
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r0;
        java.util.Map $r21;
        java.lang.String $r2, $r6, $r8, $r9, $r15, $r20, r22, $r23, $r25;
        boolean z0;
        java.lang.Class[] $r24;
        java.lang.Exception $r10;
        java.lang.Class r1;
        java.lang.Object $r3;
        java.lang.StringBuilder $r4, $r5, $r7, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19;

        r0 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r1 := @parameter0: java.lang.Class;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label01;

        $r21 = r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.util.Map collectionGetters>;

        goto label02;

     label01:
        $r21 = r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.util.Map collectionSetters>;

     label02:
        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r9 = (java.lang.String) $r3;

        r22 = $r9;

        if $r9 != null goto label12;

     label03:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        if z0 == 0 goto label04;

        $r23 = "get";

        goto label05;

     label04:
        $r23 = "set";

     label05:
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r6 = virtualinvoke r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r22 = $r8;

        if z0 == 0 goto label06;

        $r24 = newarray (java.lang.Class)[0];

        goto label07;

     label06:
        $r24 = newarray (java.lang.Class)[1];

        $r24[0] = class "Ljava/util/List;";

     label07:
        virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r8, $r24);

     label08:
        goto label12;

     label09:
        $r10 := @caughtexception;

        if z0 == 0 goto label10;

        $r25 = "getter";

        goto label11;

     label10:
        $r25 = "setter";

     label11:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Collection ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" method for ");

        $r15 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has not been specified and no default ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is available");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: void reportError(java.lang.String,java.lang.Exception)>($r20, null);

     label12:
        return r22;

        catch java.lang.Exception from label03 to label08 with label09;
    }

    protected boolean buildFeed(org.apache.abdera.model.Feed, java.lang.Object)
    {
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r0;
        org.apache.abdera.model.Feed r7;
        java.util.Map $r2;
        java.lang.Object r1, $r5;
        java.lang.Class $r3;
        java.lang.String $r4;
        org.apache.cxf.jaxrs.ext.atom.AtomElementWriter r6;
        org.apache.abdera.model.Element $r8;

        r0 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r7 := @parameter0: org.apache.abdera.model.Feed;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.util.Map atomWriters>;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r6 = (org.apache.cxf.jaxrs.ext.atom.AtomElementWriter) $r5;

        if r6 == null goto label1;

        $r8 = (org.apache.abdera.model.Element) r7;

        interfaceinvoke r6.<org.apache.cxf.jaxrs.ext.atom.AtomElementWriter: void writeTo(org.apache.abdera.model.Element,java.lang.Object)>($r8, r1);

        return 1;

     label1:
        return 0;
    }

    protected void setFeedFromCollection(org.apache.abdera.factory.Factory, org.apache.abdera.model.Feed, java.lang.Object, java.lang.Object, java.lang.Class, java.lang.reflect.Type, boolean) throws java.lang.Exception
    {
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r6;
        java.lang.Object[] r5, $r12, $r13;
        org.apache.abdera.factory.Factory r7;
        org.apache.abdera.model.Feed r8;
        org.apache.abdera.model.Entry $r11;
        int $i0, i1;
        boolean $z0, z1;
        java.util.Collection $r2;
        java.lang.reflect.Type r3;
        java.lang.Class r0, $r4;
        java.lang.Object r1, r9, r10;

        r6 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r7 := @parameter0: org.apache.abdera.factory.Factory;

        r8 := @parameter1: org.apache.abdera.model.Feed;

        r9 := @parameter2: java.lang.Object;

        r1 := @parameter3: java.lang.Object;

        r0 := @parameter4: java.lang.Class;

        r3 := @parameter5: java.lang.reflect.Type;

        z1 := @parameter6: boolean;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label1;

        $r12 = (java.lang.Object[]) r1;

        $r13 = (java.lang.Object[]) $r12;

        goto label2;

     label1:
        $r2 = (java.util.Collection) r1;

        $r13 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray()>();

     label2:
        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.Class getActualType(java.lang.reflect.Type)>(r3);

        r5 = $r13;

        $i0 = lengthof $r13;

        i1 = 0;

     label3:
        if i1 >= $i0 goto label4;

        r10 = r5[i1];

        $r11 = virtualinvoke r6.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: org.apache.abdera.model.Entry createEntryFromObject(java.lang.Object,java.lang.Class)>(r10, $r4);

        interfaceinvoke r8.<org.apache.abdera.model.Feed: org.apache.abdera.model.Feed addEntry(org.apache.abdera.model.Entry)>($r11);

        i1 = i1 + 1;

        goto label3;

     label4:
        if z1 != 0 goto label5;

        virtualinvoke r6.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: void setFeedProperties(org.apache.abdera.factory.Factory,org.apache.abdera.model.Feed,java.lang.Object,java.lang.Object,java.lang.Class,java.lang.reflect.Type)>(r7, r8, r9, r1, r0, r3);

     label5:
        return;
    }

    protected void setFeedProperties(org.apache.abdera.factory.Factory, org.apache.abdera.model.Feed, java.lang.Object, java.lang.Object, java.lang.Class, java.lang.reflect.Type)
    {
        org.apache.cxf.jaxrs.ext.atom.AbstractAtomElementBuilder r6;
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r0;
        java.util.Date $r51;
        org.apache.abdera.model.Feed r8;
        java.lang.Integer $r20;
        java.util.Map $r2, $r31;
        org.apache.cxf.jaxrs.ext.atom.AbstractFeedBuilder r9;
        boolean $z0, $z1;
        java.util.Set $r37;
        java.util.UUID $r25;
        java.util.List $r19, $r32;
        java.lang.reflect.Type r46;
        java.lang.StringBuilder $r15, $r16, $r24, $r27, $r49, $r50;
        java.lang.Object[] $r18;
        org.apache.abdera.factory.Factory r7;
        int $i0;
        java.lang.String $r4, $r10, $r11, $r14, $r17, $r21, $r22, $r26, $r28, $r29, $r33, $r34, $r41, $r43, r48;
        java.util.Map$Entry r47;
        java.util.Iterator $r35, $r38;
        org.apache.abdera.model.ExtensibleElement $r52;
        java.lang.Object r1, $r5, $r36, $r39, $r40, $r42, r44;
        java.lang.Class $r3, $r13, r45;

        r0 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r7 := @parameter0: org.apache.abdera.factory.Factory;

        r8 := @parameter1: org.apache.abdera.model.Feed;

        r1 := @parameter2: java.lang.Object;

        r44 := @parameter3: java.lang.Object;

        r45 := @parameter4: java.lang.Class;

        r46 := @parameter5: java.lang.reflect.Type;

        $r2 = r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.util.Map atomBuilders>;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r6 = (org.apache.cxf.jaxrs.ext.atom.AbstractAtomElementBuilder) $r5;

        if r6 != null goto label01;

        return;

     label01:
        $r52 = (org.apache.abdera.model.ExtensibleElement) r8;

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: void setCommonElementProperties(org.apache.abdera.factory.Factory,org.apache.abdera.model.ExtensibleElement,org.apache.cxf.jaxrs.ext.atom.AbstractAtomElementBuilder,java.lang.Object)>(r7, $r52, r6, r1);

        r9 = (org.apache.cxf.jaxrs.ext.atom.AbstractFeedBuilder) r6;

        $r10 = virtualinvoke r9.<org.apache.cxf.jaxrs.ext.atom.AbstractFeedBuilder: java.lang.String getAuthor(java.lang.Object)>(r1);

        if $r10 == null goto label02;

        interfaceinvoke r8.<org.apache.abdera.model.Feed: org.apache.abdera.model.Person addAuthor(java.lang.String)>($r10);

        goto label03;

     label02:
        interfaceinvoke r8.<org.apache.abdera.model.Feed: org.apache.abdera.model.Person addAuthor(java.lang.String)>("CXF JAX-RS");

     label03:
        $r11 = virtualinvoke r9.<org.apache.cxf.jaxrs.ext.atom.AbstractFeedBuilder: java.lang.String getTitle(java.lang.Object)>(r1);

        if $r11 == null goto label04;

        interfaceinvoke r8.<org.apache.abdera.model.Feed: org.apache.abdera.model.Text setTitle(java.lang.String)>($r11);

        goto label05;

     label04:
        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getSimpleName()>();

        $r15 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" collection with %d entry(ies)");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = newarray (java.lang.Object)[1];

        $r19 = interfaceinvoke r8.<org.apache.abdera.model.Feed: java.util.List getEntries()>();

        $i0 = interfaceinvoke $r19.<java.util.List: int size()>();

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r18[0] = $r20;

        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r17, $r18);

        interfaceinvoke r8.<org.apache.abdera.model.Feed: org.apache.abdera.model.Text setTitle(java.lang.String)>($r21);

     label05:
        $r22 = virtualinvoke r9.<org.apache.cxf.jaxrs.ext.atom.AbstractFeedBuilder: java.lang.String getId(java.lang.Object)>(r1);

        if $r22 == null goto label06;

        interfaceinvoke r8.<org.apache.abdera.model.Feed: org.apache.abdera.model.IRIElement setId(java.lang.String)>($r22);

        goto label07;

     label06:
        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("uuid:");

        $r25 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r26 = virtualinvoke $r25.<java.util.UUID: java.lang.String toString()>();

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r8.<org.apache.abdera.model.Feed: org.apache.abdera.model.IRIElement setId(java.lang.String)>($r28);

     label07:
        $r29 = virtualinvoke r9.<org.apache.cxf.jaxrs.ext.atom.AbstractFeedBuilder: java.lang.String getUpdated(java.lang.Object)>(r1);

        if $r29 == null goto label08;

        interfaceinvoke r8.<org.apache.abdera.model.Feed: org.apache.abdera.model.DateTime setUpdated(java.lang.String)>($r29);

        goto label09;

     label08:
        $r51 = new java.util.Date;

        specialinvoke $r51.<java.util.Date: void <init>()>();

        interfaceinvoke r8.<org.apache.abdera.model.Feed: org.apache.abdera.model.DateTime setUpdated(java.util.Date)>($r51);

     label09:
        $r31 = virtualinvoke r9.<org.apache.cxf.jaxrs.ext.atom.AbstractFeedBuilder: java.util.Map getLinks(java.lang.Object)>(r1);

        if $r31 == null goto label11;

        $r37 = interfaceinvoke $r31.<java.util.Map: java.util.Set entrySet()>();

        $r38 = interfaceinvoke $r37.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z1 = interfaceinvoke $r38.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r39 = interfaceinvoke $r38.<java.util.Iterator: java.lang.Object next()>();

        r47 = (java.util.Map$Entry) $r39;

        $r40 = interfaceinvoke r47.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r41 = (java.lang.String) $r40;

        $r42 = interfaceinvoke r47.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r43 = (java.lang.String) $r42;

        interfaceinvoke r8.<org.apache.abdera.model.Feed: org.apache.abdera.model.Link addLink(java.lang.String,java.lang.String)>($r41, $r43);

        goto label10;

     label11:
        $r32 = virtualinvoke r9.<org.apache.cxf.jaxrs.ext.atom.AbstractFeedBuilder: java.util.List getCategories(java.lang.Object)>(r1);

        if $r32 == null goto label13;

        $r35 = interfaceinvoke $r32.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z0 = interfaceinvoke $r35.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r36 = interfaceinvoke $r35.<java.util.Iterator: java.lang.Object next()>();

        r48 = (java.lang.String) $r36;

        interfaceinvoke r8.<org.apache.abdera.model.Feed: org.apache.abdera.model.Category addCategory(java.lang.String)>(r48);

        goto label12;

     label13:
        $r33 = virtualinvoke r9.<org.apache.cxf.jaxrs.ext.atom.AbstractFeedBuilder: java.lang.String getLogo(java.lang.Object)>(r1);

        if $r33 == null goto label14;

        interfaceinvoke r8.<org.apache.abdera.model.Feed: org.apache.abdera.model.IRIElement setLogo(java.lang.String)>($r33);

     label14:
        $r34 = virtualinvoke r9.<org.apache.cxf.jaxrs.ext.atom.AbstractFeedBuilder: java.lang.String getLogo(java.lang.Object)>(r1);

        if $r34 == null goto label15;

        interfaceinvoke r8.<org.apache.abdera.model.Feed: org.apache.abdera.model.IRIElement setIcon(java.lang.String)>($r34);

     label15:
        return;
    }

    protected org.apache.abdera.model.Entry createEntryFromObject(java.lang.Object, java.lang.Class) throws java.lang.Exception
    {
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r3;
        org.apache.abdera.factory.Factory $r0;
        org.apache.abdera.model.Content $r5;
        java.util.List $r6;
        org.apache.abdera.model.Entry $r2;
        org.apache.abdera.Abdera $r1;
        int $i0;
        java.lang.Object r4;
        java.lang.Class r7;
        boolean $z0;

        r3 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r4 := @parameter0: java.lang.Object;

        r7 := @parameter1: java.lang.Class;

        $r0 = staticinvoke <org.apache.abdera.Abdera: org.apache.abdera.factory.Factory getNewFactory()>();

        $r1 = interfaceinvoke $r0.<org.apache.abdera.factory.Factory: org.apache.abdera.Abdera getAbdera()>();

        $r2 = virtualinvoke $r1.<org.apache.abdera.Abdera: org.apache.abdera.model.Entry newEntry()>();

        $z0 = virtualinvoke r3.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: boolean buildEntry(org.apache.abdera.model.Entry,java.lang.Object)>($r2, r4);

        if $z0 != 0 goto label1;

        virtualinvoke r3.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: void setEntryProperties(org.apache.abdera.factory.Factory,org.apache.abdera.model.Entry,java.lang.Object,java.lang.Class)>($r0, $r2, r4, r7);

     label1:
        $r5 = interfaceinvoke $r2.<org.apache.abdera.model.Entry: org.apache.abdera.model.Content getContentElement()>();

        if $r5 != null goto label2;

        $r6 = interfaceinvoke $r2.<org.apache.abdera.model.Entry: java.util.List getExtensions()>();

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i0 != 0 goto label2;

        virtualinvoke r3.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: void createEntryContent(org.apache.abdera.model.Entry,java.lang.Object,java.lang.Class)>($r2, r4, r7);

     label2:
        return $r2;
    }

    protected boolean buildEntry(org.apache.abdera.model.Entry, java.lang.Object)
    {
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r0;
        org.apache.abdera.model.Entry r7;
        java.util.Map $r2;
        java.lang.Object r1, $r5;
        java.lang.Class $r3;
        java.lang.String $r4;
        org.apache.cxf.jaxrs.ext.atom.AtomElementWriter r6;
        org.apache.abdera.model.Element $r8;

        r0 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r7 := @parameter0: org.apache.abdera.model.Entry;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.util.Map atomWriters>;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r6 = (org.apache.cxf.jaxrs.ext.atom.AtomElementWriter) $r5;

        if r6 == null goto label1;

        $r8 = (org.apache.abdera.model.Element) r7;

        interfaceinvoke r6.<org.apache.cxf.jaxrs.ext.atom.AtomElementWriter: void writeTo(org.apache.abdera.model.Element,java.lang.Object)>($r8, r1);

        return 1;

     label1:
        return 0;
    }

    protected void createEntryContent(org.apache.abdera.model.Entry, java.lang.Object, java.lang.Class) throws java.lang.Exception
    {
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r1;
        org.apache.abdera.factory.Factory $r0;
        org.apache.abdera.model.Content$Type $r11;
        java.io.StringWriter $r5;
        javax.xml.bind.Marshaller $r6;
        org.apache.abdera.model.Content $r9, $r10, $r12;
        org.apache.abdera.model.Entry r8;
        java.lang.Class r2;
        java.lang.Object r7;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider $r3;
        java.lang.String $r13;
        javax.xml.bind.JAXBContext $r4;

        r1 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r8 := @parameter0: org.apache.abdera.model.Entry;

        r7 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Class;

        $r0 = staticinvoke <org.apache.abdera.Abdera: org.apache.abdera.factory.Factory getNewFactory()>();

        $r3 = r1.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: org.apache.cxf.jaxrs.provider.JAXBElementProvider jaxbProvider>;

        $r4 = virtualinvoke $r3.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: javax.xml.bind.JAXBContext getJAXBContext(java.lang.Class,java.lang.reflect.Type)>(r2, r2);

        $r5 = new java.io.StringWriter;

        specialinvoke $r5.<java.io.StringWriter: void <init>()>();

        $r6 = virtualinvoke $r4.<javax.xml.bind.JAXBContext: javax.xml.bind.Marshaller createMarshaller()>();

        interfaceinvoke $r6.<javax.xml.bind.Marshaller: void marshal(java.lang.Object,java.io.Writer)>(r7, $r5);

        $r9 = interfaceinvoke $r0.<org.apache.abdera.factory.Factory: org.apache.abdera.model.Content newContent()>();

        interfaceinvoke r8.<org.apache.abdera.model.Entry: org.apache.abdera.model.Entry setContentElement(org.apache.abdera.model.Content)>($r9);

        $r10 = interfaceinvoke r8.<org.apache.abdera.model.Entry: org.apache.abdera.model.Content getContentElement()>();

        $r11 = <org.apache.abdera.model.Content$Type: org.apache.abdera.model.Content$Type XML>;

        interfaceinvoke $r10.<org.apache.abdera.model.Content: org.apache.abdera.model.Content setContentType(org.apache.abdera.model.Content$Type)>($r11);

        $r12 = interfaceinvoke r8.<org.apache.abdera.model.Entry: org.apache.abdera.model.Content getContentElement()>();

        $r13 = virtualinvoke $r5.<java.io.StringWriter: java.lang.String toString()>();

        interfaceinvoke $r12.<org.apache.abdera.model.Content: org.apache.abdera.model.Content setValue(java.lang.String)>($r13);

        return;
    }

    protected void setEntryProperties(org.apache.abdera.factory.Factory, org.apache.abdera.model.Entry, java.lang.Object, java.lang.Class)
    {
        org.apache.cxf.jaxrs.ext.atom.AbstractAtomElementBuilder r6;
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r0;
        java.util.Date $r40;
        org.apache.abdera.model.Entry r8;
        java.util.Map $r2, $r23;
        boolean $z0, $z1;
        java.util.Set $r30;
        java.util.UUID $r17;
        java.util.List $r26;
        java.lang.StringBuilder $r16, $r19, $r39;
        org.apache.abdera.factory.Factory r7;
        java.lang.String $r4, $r10, $r11, $r13, $r14, $r18, $r20, $r21, $r24, $r25, r29, $r34, $r36;
        java.util.Map$Entry r38;
        java.util.Iterator $r27, $r31;
        org.apache.cxf.jaxrs.ext.atom.AbstractEntryBuilder r9;
        org.apache.abdera.model.ExtensibleElement $r41;
        java.lang.Object r1, $r5, $r28, $r32, $r33, $r35;
        java.lang.Class $r3, $r12, r37;

        r0 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r7 := @parameter0: org.apache.abdera.factory.Factory;

        r8 := @parameter1: org.apache.abdera.model.Entry;

        r1 := @parameter2: java.lang.Object;

        r37 := @parameter3: java.lang.Class;

        $r2 = r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.util.Map atomBuilders>;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r6 = (org.apache.cxf.jaxrs.ext.atom.AbstractAtomElementBuilder) $r5;

        if r6 != null goto label01;

        return;

     label01:
        $r41 = (org.apache.abdera.model.ExtensibleElement) r8;

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: void setCommonElementProperties(org.apache.abdera.factory.Factory,org.apache.abdera.model.ExtensibleElement,org.apache.cxf.jaxrs.ext.atom.AbstractAtomElementBuilder,java.lang.Object)>(r7, $r41, r6, r1);

        r9 = (org.apache.cxf.jaxrs.ext.atom.AbstractEntryBuilder) r6;

        $r10 = virtualinvoke r9.<org.apache.cxf.jaxrs.ext.atom.AbstractEntryBuilder: java.lang.String getAuthor(java.lang.Object)>(r1);

        if $r10 == null goto label02;

        interfaceinvoke r8.<org.apache.abdera.model.Entry: org.apache.abdera.model.Person addAuthor(java.lang.String)>($r10);

        goto label03;

     label02:
        interfaceinvoke r8.<org.apache.abdera.model.Entry: org.apache.abdera.model.Person addAuthor(java.lang.String)>("CXF JAX-RS");

     label03:
        $r11 = virtualinvoke r9.<org.apache.cxf.jaxrs.ext.atom.AbstractEntryBuilder: java.lang.String getTitle(java.lang.Object)>(r1);

        if $r11 == null goto label04;

        interfaceinvoke r8.<org.apache.abdera.model.Entry: org.apache.abdera.model.Text setTitle(java.lang.String)>($r11);

        goto label05;

     label04:
        $r12 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getSimpleName()>();

        interfaceinvoke r8.<org.apache.abdera.model.Entry: org.apache.abdera.model.Text setTitle(java.lang.String)>($r13);

     label05:
        $r14 = virtualinvoke r9.<org.apache.cxf.jaxrs.ext.atom.AbstractEntryBuilder: java.lang.String getId(java.lang.Object)>(r1);

        if $r14 == null goto label06;

        interfaceinvoke r8.<org.apache.abdera.model.Entry: org.apache.abdera.model.IRIElement setId(java.lang.String)>($r14);

        goto label07;

     label06:
        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("uuid:");

        $r17 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r18 = virtualinvoke $r17.<java.util.UUID: java.lang.String toString()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r8.<org.apache.abdera.model.Entry: org.apache.abdera.model.IRIElement setId(java.lang.String)>($r20);

     label07:
        $r21 = virtualinvoke r9.<org.apache.cxf.jaxrs.ext.atom.AbstractEntryBuilder: java.lang.String getUpdated(java.lang.Object)>(r1);

        if $r21 == null goto label08;

        interfaceinvoke r8.<org.apache.abdera.model.Entry: org.apache.abdera.model.DateTime setUpdated(java.lang.String)>($r21);

        goto label09;

     label08:
        $r40 = new java.util.Date;

        specialinvoke $r40.<java.util.Date: void <init>()>();

        interfaceinvoke r8.<org.apache.abdera.model.Entry: org.apache.abdera.model.DateTime setUpdated(java.util.Date)>($r40);

     label09:
        $r23 = virtualinvoke r9.<org.apache.cxf.jaxrs.ext.atom.AbstractEntryBuilder: java.util.Map getLinks(java.lang.Object)>(r1);

        if $r23 == null goto label11;

        $r30 = interfaceinvoke $r23.<java.util.Map: java.util.Set entrySet()>();

        $r31 = interfaceinvoke $r30.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z1 = interfaceinvoke $r31.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r32 = interfaceinvoke $r31.<java.util.Iterator: java.lang.Object next()>();

        r38 = (java.util.Map$Entry) $r32;

        $r33 = interfaceinvoke r38.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r34 = (java.lang.String) $r33;

        $r35 = interfaceinvoke r38.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r36 = (java.lang.String) $r35;

        interfaceinvoke r8.<org.apache.abdera.model.Entry: org.apache.abdera.model.Link addLink(java.lang.String,java.lang.String)>($r34, $r36);

        goto label10;

     label11:
        $r24 = virtualinvoke r9.<org.apache.cxf.jaxrs.ext.atom.AbstractEntryBuilder: java.lang.String getPublished(java.lang.Object)>(r1);

        if $r24 == null goto label12;

        interfaceinvoke r8.<org.apache.abdera.model.Entry: org.apache.abdera.model.DateTime setPublished(java.lang.String)>($r24);

     label12:
        $r25 = virtualinvoke r9.<org.apache.cxf.jaxrs.ext.atom.AbstractEntryBuilder: java.lang.String getSummary(java.lang.Object)>(r1);

        if $r25 == null goto label13;

        interfaceinvoke r8.<org.apache.abdera.model.Entry: org.apache.abdera.model.Text setSummary(java.lang.String)>($r25);

     label13:
        $r26 = virtualinvoke r9.<org.apache.cxf.jaxrs.ext.atom.AbstractEntryBuilder: java.util.List getCategories(java.lang.Object)>(r1);

        if $r26 == null goto label15;

        $r27 = interfaceinvoke $r26.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z0 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label15;

        $r28 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        r29 = (java.lang.String) $r28;

        interfaceinvoke r8.<org.apache.abdera.model.Entry: org.apache.abdera.model.Category addCategory(java.lang.String)>(r29);

        goto label14;

     label15:
        return;
    }

    private void setCommonElementProperties(org.apache.abdera.factory.Factory, org.apache.abdera.model.ExtensibleElement, org.apache.cxf.jaxrs.ext.atom.AbstractAtomElementBuilder, java.lang.Object)
    {
        org.apache.cxf.jaxrs.ext.atom.AbstractAtomElementBuilder r0;
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r4;
        org.apache.abdera.model.ExtensibleElement r3;
        org.apache.abdera.factory.Factory r5;
        java.lang.Object r1;
        java.lang.String $r2;

        r4 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r5 := @parameter0: org.apache.abdera.factory.Factory;

        r3 := @parameter1: org.apache.abdera.model.ExtensibleElement;

        r0 := @parameter2: org.apache.cxf.jaxrs.ext.atom.AbstractAtomElementBuilder;

        r1 := @parameter3: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.ext.atom.AbstractAtomElementBuilder: java.lang.String getBaseUri(java.lang.Object)>(r1);

        if $r2 == null goto label1;

        interfaceinvoke r3.<org.apache.abdera.model.ExtensibleElement: org.apache.abdera.model.Element setBaseUri(java.lang.String)>($r2);

     label1:
        return;
    }

    private void reportError(java.lang.String, java.lang.Exception)
    {
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r9;
        java.util.logging.Logger $r1;
        java.lang.Exception r6;
        javax.ws.rs.core.Response $r5;
        javax.ws.rs.core.Response$ResponseBuilder $r2, $r3, $r4;
        javax.ws.rs.WebApplicationException $r7, $r8;
        java.lang.String r0;

        r9 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r0 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.Exception;

        $r1 = <org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.util.logging.Logger LOG>;

        virtualinvoke $r1.<java.util.logging.Logger: void warning(java.lang.String)>(r0);

        $r2 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(int)>(500);

        $r3 = virtualinvoke $r2.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder type(java.lang.String)>("text/plain");

        $r4 = virtualinvoke $r3.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>();

        if r6 != null goto label1;

        $r8 = new javax.ws.rs.WebApplicationException;

        specialinvoke $r8.<javax.ws.rs.WebApplicationException: void <init>(javax.ws.rs.core.Response)>($r5);

        throw $r8;

     label1:
        $r7 = new javax.ws.rs.WebApplicationException;

        specialinvoke $r7.<javax.ws.rs.WebApplicationException: void <init>(java.lang.Throwable,javax.ws.rs.core.Response)>(r6, $r5);

        throw $r7;
    }

    private boolean isFeedRequested(javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r0;
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r4;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String $r1;
        boolean $z0;

        r4 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r0 := @parameter0: javax.ws.rs.core.MediaType;

        $r1 = "entry";

        $r2 = virtualinvoke r0.<javax.ws.rs.core.MediaType: java.util.Map getParameters()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("type");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public void setAtomWriters(java.util.Map)
    {
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r1 := @parameter0: java.util.Map;

        r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.util.Map atomWriters> = r1;

        return;
    }

    public void setAtomReaders(java.util.Map)
    {
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r1 := @parameter0: java.util.Map;

        r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.util.Map atomReaders> = r1;

        return;
    }

    public void setAtomBuilders(java.util.Map)
    {
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r1 := @parameter0: java.util.Map;

        r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.util.Map atomBuilders> = r1;

        return;
    }

    public boolean isReadable(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r0;
        javax.ws.rs.core.MediaType r4;
        java.lang.reflect.Type r2;
        java.lang.Class r1;
        java.lang.'annotation'.Annotation[] r3;

        r0 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.reflect.Type;

        r3 := @parameter2: java.lang.'annotation'.Annotation[];

        r4 := @parameter3: javax.ws.rs.core.MediaType;

        return 1;
    }

    public java.lang.Object readFrom(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.InputStream) throws java.io.IOException, javax.ws.rs.WebApplicationException
    {
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r0;
        java.lang.'annotation'.Annotation[] $r5, r12;
        javax.ws.rs.core.MultivaluedMap r3;
        javax.ws.rs.core.MediaType r1;
        org.apache.abdera.model.Entry r7;
        org.apache.cxf.jaxrs.provider.AtomEntryProvider $r2;
        java.lang.reflect.Type r11;
        java.lang.Class r8;
        java.lang.Object $r9, $r10;
        boolean $z0;
        java.io.InputStream r4;
        org.apache.abdera.model.Element $r6;

        r0 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r8 := @parameter0: java.lang.Class;

        r11 := @parameter1: java.lang.reflect.Type;

        r12 := @parameter2: java.lang.'annotation'.Annotation[];

        r1 := @parameter3: javax.ws.rs.core.MediaType;

        r3 := @parameter4: javax.ws.rs.core.MultivaluedMap;

        r4 := @parameter5: java.io.InputStream;

        $z0 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: boolean isFeedRequested(javax.ws.rs.core.MediaType)>(r1);

        if $z0 == 0 goto label1;

        $r10 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.lang.Object readFromFeed(java.lang.Class,javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)>(r8, r1, r3, r4);

        return $r10;

     label1:
        $r2 = new org.apache.cxf.jaxrs.provider.AtomEntryProvider;

        specialinvoke $r2.<org.apache.cxf.jaxrs.provider.AtomEntryProvider: void <init>()>();

        $r5 = newarray (java.lang.'annotation'.Annotation)[0];

        $r6 = virtualinvoke $r2.<org.apache.cxf.jaxrs.provider.AtomEntryProvider: org.apache.abdera.model.Element readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)>(class "Lorg/apache/abdera/model/Entry;", class "Lorg/apache/abdera/model/Entry;", $r5, r1, r3, r4);

        r7 = (org.apache.abdera.model.Entry) $r6;

        $r9 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.lang.Object readFromEntry(org.apache.abdera.model.Entry,java.lang.Class,javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)>(r7, r8, r1, r3, r4);

        return $r9;
    }

    private java.lang.Object readFromFeed(java.lang.Class, javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.InputStream) throws java.io.IOException
    {
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r7;
        org.apache.abdera.model.Feed r6;
        javax.ws.rs.core.MediaType r1;
        org.apache.abdera.model.Entry r25;
        java.util.Map $r9;
        java.lang.reflect.Method $r15;
        boolean $z0;
        java.lang.Exception $r28;
        org.apache.cxf.jaxrs.ext.atom.AtomElementReader r12;
        java.util.List $r20;
        java.lang.reflect.Type $r17;
        java.lang.reflect.Type[] $r16;
        java.lang.StringBuilder $r30, $r32, $r33, $r38;
        org.apache.abdera.model.Element $r5, $r39;
        java.lang.Object[] $r23;
        java.lang.'annotation'.Annotation[] $r4;
        java.util.ArrayList $r37;
        org.apache.cxf.jaxrs.provider.AtomFeedProvider $r36;
        java.lang.String $r10, $r13, $r31, $r34;
        java.util.Iterator $r21;
        java.lang.Class[] $r14;
        javax.ws.rs.core.MultivaluedMap r2;
        java.lang.Class r8, $r18;
        java.lang.Object $r11, $r22, $r24, $r26, $r27, r35;
        java.io.InputStream r3;

        r7 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r8 := @parameter0: java.lang.Class;

        r1 := @parameter1: javax.ws.rs.core.MediaType;

        r2 := @parameter2: javax.ws.rs.core.MultivaluedMap;

        r3 := @parameter3: java.io.InputStream;

        $r36 = new org.apache.cxf.jaxrs.provider.AtomFeedProvider;

        specialinvoke $r36.<org.apache.cxf.jaxrs.provider.AtomFeedProvider: void <init>()>();

        $r4 = newarray (java.lang.'annotation'.Annotation)[0];

        $r5 = virtualinvoke $r36.<org.apache.cxf.jaxrs.provider.AtomFeedProvider: org.apache.abdera.model.Element readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)>(class "Lorg/apache/abdera/model/Feed;", class "Lorg/apache/abdera/model/Feed;", $r4, r1, r2, r3);

        r6 = (org.apache.abdera.model.Feed) $r5;

        $r9 = r7.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.util.Map atomReaders>;

        $r10 = virtualinvoke r8.<java.lang.Class: java.lang.String getName()>();

        $r11 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        r12 = (org.apache.cxf.jaxrs.ext.atom.AtomElementReader) $r11;

        if r12 == null goto label1;

        $r39 = (org.apache.abdera.model.Element) r6;

        $r27 = interfaceinvoke r12.<org.apache.cxf.jaxrs.ext.atom.AtomElementReader: java.lang.Object readFrom(org.apache.abdera.model.Element)>($r39);

        return $r27;

     label1:
        r35 = null;

     label2:
        $r13 = specialinvoke r7.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.lang.String getCollectionMethod(java.lang.Class,boolean)>(r8, 0);

        $r14 = newarray (java.lang.Class)[1];

        $r14[0] = class "Ljava/util/List;";

        $r15 = virtualinvoke r8.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r13, $r14);

        $r16 = virtualinvoke $r15.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();

        $r17 = $r16[0];

        $r18 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.Class getActualType(java.lang.reflect.Type)>($r17);

        $r37 = new java.util.ArrayList;

        specialinvoke $r37.<java.util.ArrayList: void <init>()>();

        $r20 = interfaceinvoke r6.<org.apache.abdera.model.Feed: java.util.List getEntries()>();

        $r21 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r24 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r25 = (org.apache.abdera.model.Entry) $r24;

        $r26 = specialinvoke r7.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.lang.Object readFromEntry(org.apache.abdera.model.Entry,java.lang.Class,javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)>(r25, $r18, r1, r2, r3);

        interfaceinvoke $r37.<java.util.List: boolean add(java.lang.Object)>($r26);

        goto label3;

     label4:
        $r22 = virtualinvoke r8.<java.lang.Class: java.lang.Object newInstance()>();

        r35 = $r22;

        $r23 = newarray (java.lang.Object)[1];

        $r23[0] = $r37;

        virtualinvoke $r15.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r22, $r23);

     label5:
        goto label7;

     label6:
        $r28 := @caughtexception;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Object of type ");

        $r31 = virtualinvoke r8.<java.lang.Class: java.lang.String getName()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can not be deserialized from Feed");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r7.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: void reportError(java.lang.String,java.lang.Exception)>($r34, $r28);

     label7:
        return r35;

        catch java.lang.Exception from label2 to label5 with label6;
    }

    private java.lang.Object readFromEntry(org.apache.abdera.model.Entry, java.lang.Class, javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.InputStream) throws java.io.IOException
    {
        org.apache.cxf.jaxrs.provider.AtomPojoProvider r0;
        javax.ws.rs.core.MediaType r21;
        org.apache.abdera.model.Entry r10;
        java.util.Map $r2;
        java.lang.String $r3, $r11, $r17, $r20;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider $r6;
        javax.xml.bind.JAXBContext $r7;
        javax.xml.bind.Unmarshaller $r8;
        java.lang.Exception $r14;
        javax.ws.rs.core.MultivaluedMap r22;
        org.apache.cxf.jaxrs.ext.atom.AtomElementReader r5;
        java.io.StringReader $r24;
        java.lang.Class r1;
        java.lang.Object $r4, $r12, $r13;
        java.lang.StringBuilder $r16, $r18, $r19, $r25;
        java.io.InputStream r23;
        org.apache.abdera.model.Element $r26;

        r0 := @this: org.apache.cxf.jaxrs.provider.AtomPojoProvider;

        r10 := @parameter0: org.apache.abdera.model.Entry;

        r1 := @parameter1: java.lang.Class;

        r21 := @parameter2: javax.ws.rs.core.MediaType;

        r22 := @parameter3: javax.ws.rs.core.MultivaluedMap;

        r23 := @parameter4: java.io.InputStream;

        $r2 = r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.util.Map atomReaders>;

        $r3 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (org.apache.cxf.jaxrs.ext.atom.AtomElementReader) $r4;

        if r5 == null goto label1;

        $r26 = (org.apache.abdera.model.Element) r10;

        $r13 = interfaceinvoke r5.<org.apache.cxf.jaxrs.ext.atom.AtomElementReader: java.lang.Object readFrom(org.apache.abdera.model.Element)>($r26);

        return $r13;

     label1:
        $r6 = r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: org.apache.cxf.jaxrs.provider.JAXBElementProvider jaxbProvider>;

        $r7 = virtualinvoke $r6.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: javax.xml.bind.JAXBContext getJAXBContext(java.lang.Class,java.lang.reflect.Type)>(r1, r1);

        $r8 = virtualinvoke $r7.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>();

        $r24 = new java.io.StringReader;

        $r11 = interfaceinvoke r10.<org.apache.abdera.model.Entry: java.lang.String getContent()>();

        specialinvoke $r24.<java.io.StringReader: void <init>(java.lang.String)>($r11);

        $r12 = interfaceinvoke $r8.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(java.io.Reader)>($r24);

     label2:
        return $r12;

     label3:
        $r14 := @caughtexception;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Object of type ");

        $r17 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can not be deserialized from Entry");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.AtomPojoProvider: void reportError(java.lang.String,java.lang.Exception)>($r20, $r14);

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;
        org.apache.abdera.Abdera $r1;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/provider/AtomPojoProvider;");

        <org.apache.cxf.jaxrs.provider.AtomPojoProvider: java.util.logging.Logger LOG> = $r0;

        $r1 = new org.apache.abdera.Abdera;

        specialinvoke $r1.<org.apache.abdera.Abdera: void <init>()>();

        <org.apache.cxf.jaxrs.provider.AtomPojoProvider: org.apache.abdera.Abdera ATOM_ENGINE> = $r1;

        return;
    }
}
