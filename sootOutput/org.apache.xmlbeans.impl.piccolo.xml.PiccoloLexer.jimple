final class org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer extends java.lang.Object
{
    public static final int YYEOF;
    private static final int YY_BUFFERSIZE;
    public static final int DTD_TAG_START;
    public static final int CLOSE_TAG_NS;
    public static final int DTD_IGNORE;
    public static final int PI;
    public static final int DTD_TAG_SQSTRING_BUFFERED;
    public static final int TAG_VALUE_ENTITY;
    public static final int ENTITYREF;
    public static final int DTD_ATT_NAME;
    public static final int DTD_TAG;
    public static final int DTD_TAG_VALUE_EXTERNAL_ENTITY;
    public static final int TAG;
    public static final int TAG_VALUE_ENTITYREF;
    public static final int YYINITIAL;
    public static final int DTD_TAG_VALUE_PARAM_ENTITYREF;
    public static final int TAG_NS;
    public static final int DTD_NMTOKENS;
    public static final int TAG_SQSTRING_NORMALIZE;
    public static final int DTD_PUBLIC_ID;
    public static final int XML_TAG;
    public static final int TAG_QSTRING_NORMALIZE;
    public static final int TAG_START;
    public static final int DTD_COMMENT;
    public static final int DTD_TAG_VALUE_ENTITY;
    public static final int TAG_QSTRING_CDATA_BUFFERED;
    public static final int TAG_SQSTRING_CDATA_BUFFERED;
    public static final int DTD_TAG_VALUE_STD_ENTITYREF;
    public static final int PI_WS;
    public static final int DTD_TAG_QSTRING_BUFFERED;
    public static final int TAG_START_NS;
    public static final int DTD_ATTLIST_ELEMENT;
    public static final int DTD_ATT_TYPE;
    public static final int DTD_ENTITY_DECL;
    public static final int TAG_QSTRING_NORMALIZE_BUFFERED;
    public static final int TAG_SQSTRING_NORMALIZE_BUFFERED;
    public static final int TAG_VALUE;
    public static final int CLOSE_TAG;
    public static final int YYINITIAL_DIRECT;
    public static final int DTD;
    private static final java.lang.String yycmap_packed;
    private static final char[] yycmap;
    private static final int[] yy_rowMap;
    private static final java.lang.String yy_packed0;
    private static final int[] yytrans;
    private static final int YY_UNKNOWN_ERROR;
    private static final int YY_ILLEGAL_STATE;
    private static final int YY_NO_MATCH;
    private static final int YY_PUSHBACK_2BIG;
    private static final int YY_SKIP_2BIG;
    private static final java.lang.String[] YY_ERROR_MSG;
    private static final byte[] YY_ATTRIBUTE;
    private java.io.Reader yy_reader;
    private int yy_state;
    private int yy_lexical_state;
    private char[] yy_buffer;
    private char[] yy_saved_buffer;
    private int yy_markedPos;
    private int yy_savePos;
    private int yy_pushbackPos;
    private int yy_currentPos;
    private int yy_startRead;
    private int yy_endRead;
    private int yyline;
    private int yychar;
    private int yycolumn;
    private boolean yy_atBOL;
    private boolean yy_atEOF;
    private java.util.Stack yy_streams;
    private boolean yy_eof_done;
    org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser;
    org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity;
    org.apache.xmlbeans.impl.piccolo.util.CharStringConverter stringConverter;
    org.apache.xmlbeans.impl.piccolo.xml.EntityManager entityManager;
    java.util.Stack entityStack;
    org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder attribs;
    char[] cbuf;
    int cbuflen;
    java.lang.String stringValue;
    char[] oneCharBuffer;
    char[] cdataBuffer;
    int cdataStart;
    int cdataLength;
    private org.apache.xmlbeans.impl.piccolo.util.LongStack entityStateStack;
    private org.apache.xmlbeans.impl.piccolo.util.StringStack entityNameStack;
    private java.lang.String currentEntityName;
    private int prevEntityLexState;
    private boolean returnEntityEndToken;
    private boolean isParamEntity;
    private int entityBaseDepth;
    private boolean isEntityBeingParsed;
    private boolean inCdataSection;
    private int baseState;
    private int prevState;
    private int piPrevState;
    private boolean isNamespaceDeclaration;
    private boolean entityWasSkipped;
    private int tagState;
    private int tagStartState;
    private boolean tokenizeInput;
    private org.apache.xmlbeans.impl.piccolo.util.StringStack tagStack;
    private boolean bypassPERefs;
    private boolean bypassGERefs;
    private boolean needsNormalization;
    private int tagType;
    private boolean endOfTag;
    private java.util.HashMap elementMap;
    private org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition elementDefinition;
    private java.lang.String elementURI;
    private java.lang.String elementLocalName;
    private java.lang.String elementQName;
    private java.lang.String attributeURI;
    private java.lang.String attributeLocalName;
    private java.lang.String attributeQName;
    private java.lang.String attributeValueType;
    int tokenStartLine;
    int tokenStartColumn;
    private boolean[] defaultAttributeSpecified;
    private int numAttributesDefined;
    private org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport nsSupport;
    private static boolean[] asciiNameStartChars;
    private static boolean[] asciiNameStartCharsNS;
    private static boolean[] asciiNameChars;
    private static boolean[] asciiNameCharsNS;
    private static final char[] LETTER_RANGE_START;
    private static final char[] LETTER_RANGE_END;
    private static final char[] NON_LETTER_RANGE_START;
    private static final char[] NON_LETTER_RANGE_END;
    private int yy_currentPos_l;
    private int yy_startRead_l;
    private int yy_markedPos_l;
    private int yy_endRead_l;
    private char[] yy_buffer_l;
    private char[] yycmap_l;
    private boolean yy_sawCR;
    private boolean yy_prev_sawCR;
    private int yyline_next;
    private int yycolumn_next;

    public void <init>(org.apache.xmlbeans.impl.piccolo.xml.Piccolo)
    {
        org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder $r21;
        java.util.HashMap $r25;
        org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport $r26;
        java.util.Stack $r17, $r20;
        org.apache.xmlbeans.impl.piccolo.xml.EntityManager $r19;
        org.apache.xmlbeans.impl.piccolo.util.StringStack $r23, $r24;
        int $i1, $i3;
        org.apache.xmlbeans.impl.piccolo.util.CharStringConverter $r18;
        boolean[] $r14;
        org.apache.xmlbeans.impl.piccolo.util.LongStack $r22;
        org.apache.xmlbeans.impl.piccolo.xml.Piccolo r16;
        char[] $r1, $r2, $r8, $r9;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r16 := @parameter0: org.apache.xmlbeans.impl.piccolo.xml.Piccolo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_lexical_state> = 0;

        $r1 = newarray (char)[16384];

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer> = $r1;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_saved_buffer> = $r2;

        $i1 = (int) -1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_savePos> = $i1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_atBOL> = 1;

        $r17 = new java.util.Stack;

        specialinvoke $r17.<java.util.Stack: void <init>()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.util.Stack yy_streams> = $r17;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser> = null;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity> = null;

        $r18 = new org.apache.xmlbeans.impl.piccolo.util.CharStringConverter;

        specialinvoke $r18.<org.apache.xmlbeans.impl.piccolo.util.CharStringConverter: void <init>(int)>(200);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.CharStringConverter stringConverter> = $r18;

        $r19 = new org.apache.xmlbeans.impl.piccolo.xml.EntityManager;

        specialinvoke $r19.<org.apache.xmlbeans.impl.piccolo.xml.EntityManager: void <init>()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.EntityManager entityManager> = $r19;

        $r20 = new java.util.Stack;

        specialinvoke $r20.<java.util.Stack: void <init>()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.util.Stack entityStack> = $r20;

        $r21 = new org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder;

        specialinvoke $r21.<org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder: void <init>()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder attribs> = $r21;

        $r8 = newarray (char)[1024];

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cbuf> = $r8;

        $r9 = newarray (char)[1];

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] oneCharBuffer> = $r9;

        $r22 = new org.apache.xmlbeans.impl.piccolo.util.LongStack;

        specialinvoke $r22.<org.apache.xmlbeans.impl.piccolo.util.LongStack: void <init>(int)>(5);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.LongStack entityStateStack> = $r22;

        $r23 = new org.apache.xmlbeans.impl.piccolo.util.StringStack;

        specialinvoke $r23.<org.apache.xmlbeans.impl.piccolo.util.StringStack: void <init>(int)>(2);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.StringStack entityNameStack> = $r23;

        $r24 = new org.apache.xmlbeans.impl.piccolo.util.StringStack;

        specialinvoke $r24.<org.apache.xmlbeans.impl.piccolo.util.StringStack: void <init>(int)>(20);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.StringStack tagStack> = $r24;

        $r25 = new java.util.HashMap;

        specialinvoke $r25.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.util.HashMap elementMap> = $r25;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition elementDefinition> = null;

        $i3 = (int) -1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tokenStartColumn> = $i3;

        $r14 = newarray (boolean)[4];

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean[] defaultAttributeSpecified> = $r14;

        $r26 = new org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport;

        specialinvoke $r26.<org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport: void <init>()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport nsSupport> = $r26;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_sawCR> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_prev_sawCR> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser> = r16;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void enableNamespaces(boolean)>(1);

        return;
    }

    public void reset(org.apache.xmlbeans.impl.piccolo.xml.Entity) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.xmlbeans.impl.piccolo.util.RecursionException $r10;
        org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder $r2;
        org.apache.xmlbeans.impl.piccolo.xml.Entity r5;
        java.util.HashMap $r4;
        java.io.Reader $r8;
        org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport $r9;
        java.util.Stack $r3;
        org.apache.xmlbeans.impl.piccolo.util.StringStack $r1;
        org.apache.xmlbeans.impl.piccolo.xml.EntityManager $r6;
        org.apache.xmlbeans.impl.piccolo.xml.Piccolo $r7;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r5 := @parameter0: org.apache.xmlbeans.impl.piccolo.xml.Entity;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void setTokenize(boolean)>(1);

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.StringStack tagStack>;

        virtualinvoke $r1.<org.apache.xmlbeans.impl.piccolo.util.StringStack: void clear()>();

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder attribs>;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder: void clear()>();

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.util.Stack entityStack>;

        virtualinvoke $r3.<java.util.Stack: void clear()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void clearEntityState()>();

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.util.HashMap elementMap>;

        virtualinvoke $r4.<java.util.HashMap: void clear()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity> = r5;

        $r6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.EntityManager entityManager>;

        virtualinvoke $r6.<org.apache.xmlbeans.impl.piccolo.xml.EntityManager: void clear()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition elementDefinition> = null;

        $z0 = interfaceinvoke r5.<org.apache.xmlbeans.impl.piccolo.xml.Entity: boolean isOpen()>();

        if $z0 != 0 goto label2;

        interfaceinvoke r5.<org.apache.xmlbeans.impl.piccolo.xml.Entity: void open()>();

     label2:
        $r7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $z1 = $r7.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: boolean fNamespaces>;

        if $z1 == 0 goto label3;

        $r9 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport nsSupport>;

        virtualinvoke $r9.<org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport: void reset()>();

     label3:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isNamespaceDeclaration> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean bypassGERefs> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean bypassPERefs> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean needsNormalization> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean entityWasSkipped> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean inCdataSection> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cdataLength> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cdataStart> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cbuflen> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagType> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int piPrevState> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean endOfTag> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tokenStartLine> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tokenStartColumn> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int numAttributesDefined> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.io.Reader yy_reader> = null;

        $r8 = interfaceinvoke r5.<org.apache.xmlbeans.impl.piccolo.xml.Entity: java.io.Reader getReader()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yyreset(java.io.Reader)>($r8);

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;

     label6:
        return;

        catch org.apache.xmlbeans.impl.piccolo.util.RecursionException from label1 to label4 with label5;
    }

    void enableNamespaces(boolean)
    {
        boolean z0;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagState> = 8;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagStartState> = 9;

        goto label2;

     label1:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagState> = 6;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagStartState> = 7;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName> = "";

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI> = "";

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeLocalName> = "";

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeURI> = "";

     label2:
        return;
    }

    void defineElement(java.lang.String, org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition)
    {
        org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition r2;
        java.util.HashMap $r3;
        java.lang.String r1;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.util.HashMap elementMap>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition getElement(java.lang.String)
    {
        org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition $r4;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.util.HashMap elementMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition) $r3;

        return $r4;
    }

    public int getLineNumber()
    {
        int $i0, $i1;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline>;

        $i1 = $i0 + 1;

        return $i1;
    }

    public int getColumnNumber()
    {
        int $i0, $i1;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn>;

        $i1 = $i0 + 1;

        return $i1;
    }

    java.lang.String getPublicID()
    {
        org.apache.xmlbeans.impl.piccolo.xml.Entity $r1, $r2;
        java.lang.String $r3;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity>;

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.piccolo.xml.Entity: java.lang.String getPublicID()>();

        return $r3;

     label1:
        return null;
    }

    java.lang.String getSystemID()
    {
        org.apache.xmlbeans.impl.piccolo.xml.Entity $r1, $r2;
        java.lang.String $r3;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity>;

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.piccolo.xml.Entity: java.lang.String getSystemID()>();

        return $r3;

     label1:
        return null;
    }

    java.lang.String getVersion()
    {
        org.apache.xmlbeans.impl.piccolo.xml.Entity $r1, $r2;
        java.lang.String $r3;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity>;

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.piccolo.xml.Entity: java.lang.String getXMLVersion()>();

        return $r3;

     label1:
        return null;
    }

    java.lang.String getEncoding()
    {
        org.apache.xmlbeans.impl.piccolo.xml.Entity $r1, $r2;
        java.lang.String $r3;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity>;

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.piccolo.xml.Entity: java.lang.String getDeclaredEncoding()>();

        return $r3;

     label1:
        return null;
    }

    void setTokenize(boolean)
    {
        byte $b2;
        int $i0, $i1;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        z0 := @parameter0: boolean;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean tokenizeInput> = z0;

        if z0 == 0 goto label1;

        $b2 = 0;

        goto label2;

     label1:
        $b2 = 2;

     label2:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState> = $b2;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yystate()>();

        if $i0 == 0 goto label3;

        if $i0 != 2 goto label4;

     label3:
        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i1);

     label4:
        return;
    }

    java.lang.String normalizeValue(java.lang.String)
    {
        int $i0, i1, $i2, $i3, $i4, i7, i8, i10, $i11, $i12, $i13;
        java.lang.String r0, $r5;
        char $c5, $c6, c9;
        char[] $r1, r2;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r4;

        r4 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label01;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

     label01:
        return r0;

     label02:
        $r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        i1 = lengthof $r1;

        i7 = 0;

        r2 = newarray (char)[i1];

        i8 = 0;

     label03:
        if i7 >= i1 goto label06;

        $c6 = $r1[i7];

        $i11 = (int) $c6;

        lookupswitch($i11)
        {
            case 9: goto label04;
            case 10: goto label04;
            case 13: goto label04;
            case 32: goto label04;
            default: goto label05;
        };

     label04:
        i7 = i7 + 1;

        goto label03;

     label05:
        goto label06;

     label06:
        if i7 >= i1 goto label14;

     label07:
        $i2 = i7;

        i7 = i7 + 1;

        $c5 = $r1[$i2];

        $i12 = (int) $c5;

        lookupswitch($i12)
        {
            case 9: goto label08;
            case 10: goto label08;
            case 13: goto label08;
            case 32: goto label08;
            default: goto label09;
        };

     label08:
        goto label11;

     label09:
        $i4 = i8;

        i8 = i8 + 1;

        r2[$i4] = $c5;

        goto label10;

     label10:
        if i7 < i1 goto label07;

     label11:
        if i7 >= i1 goto label06;

        $i3 = i7;

        i7 = i7 + 1;

        c9 = $r1[$i3];

        $i13 = (int) c9;

        lookupswitch($i13)
        {
            case 9: goto label12;
            case 10: goto label12;
            case 13: goto label12;
            case 32: goto label12;
            default: goto label13;
        };

     label12:
        goto label11;

     label13:
        i10 = i8 + 1;

        r2[i8] = 32;

        i8 = i10 + 1;

        r2[i10] = c9;

        goto label06;

     label14:
        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(char[],int,int)>(r2, 0, i8);

        return $r5;
    }

    void startCdata() throws org.xml.sax.SAXException
    {
        org.xml.sax.ext.LexicalHandler $r2, $r4;
        org.apache.xmlbeans.impl.piccolo.xml.Piccolo $r1, $r3;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r2 = $r1.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: org.xml.sax.ext.LexicalHandler lexHandler>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r4 = $r3.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: org.xml.sax.ext.LexicalHandler lexHandler>;

        interfaceinvoke $r4.<org.xml.sax.ext.LexicalHandler: void startCDATA()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean inCdataSection> = 1;

     label1:
        return;
    }

    void endCdata() throws org.xml.sax.SAXException
    {
        org.xml.sax.ext.LexicalHandler $r2, $r4;
        org.apache.xmlbeans.impl.piccolo.xml.Piccolo $r1, $r3;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r2 = $r1.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: org.xml.sax.ext.LexicalHandler lexHandler>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r4 = $r3.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: org.xml.sax.ext.LexicalHandler lexHandler>;

        interfaceinvoke $r4.<org.xml.sax.ext.LexicalHandler: void endCDATA()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean inCdataSection> = 0;

     label1:
        return;
    }

    private void appendToCbuf(char)
    {
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9;
        char c5;
        char[] $r1, $r2, $r3, r4, $r5;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        c5 := @parameter0: char;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cbuf>;

        $i1 = lengthof $r1;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cbuflen>;

        $i2 = $i1 - $i0;

        if $i2 >= 1 goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cbuf>;

        $i6 = lengthof $r3;

        $i7 = $i6 + 1;

        $i8 = 2 * $i7;

        r4 = newarray (char)[$i8];

        $r5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cbuf>;

        $i9 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cbuflen>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r4, 0, $i9);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cbuf> = r4;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cbuf>;

        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cbuflen>;

        $i4 = $i3 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cbuflen> = $i4;

        $r2[$i3] = c5;

        return;
    }

    private void appendToCbuf(char[], int, int)
    {
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        char[] $r1, r2, $r3, $r4, r5, $r6;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r2 := @parameter0: char[];

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        if i0 <= 0 goto label2;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cbuf>;

        $i2 = lengthof $r1;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cbuflen>;

        $i3 = $i2 - $i1;

        if $i3 >= i0 goto label1;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cbuf>;

        $i8 = lengthof $r4;

        $i9 = $i8 + i0;

        $i10 = 2 * $i9;

        r5 = newarray (char)[$i10];

        $r6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cbuf>;

        $i11 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cbuflen>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r5, 0, $i11);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cbuf> = r5;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cbuf>;

        $i5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cbuflen>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i4, $r3, $i5, i0);

        $i6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cbuflen>;

        $i7 = $i6 + i0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cbuflen> = $i7;

     label2:
        return;
    }

    private void clearCbuf()
    {
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cbuflen> = 0;

        return;
    }

    private int stringToken(int, java.lang.String)
    {
        int i0;
        java.lang.String r1;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue> = r1;

        return i0;
    }

    private int cdataToken(char[], int, int)
    {
        int i0, i1, $i2;
        char[] r1;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cdataToken(int,char[],int,int)>(257, r1, i0, i1);

        return $i2;
    }

    private int cdataToken(int, char[], int, int)
    {
        int i0, i1, i2;
        char[] r1;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        i2 := @parameter0: int;

        r1 := @parameter1: char[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cdataBuffer> = r1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cdataStart> = i0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cdataLength> = i1;

        return i2;
    }

    private int cdataToken(char)
    {
        char[] $r1, $r2;
        char c0;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        c0 := @parameter0: char;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] oneCharBuffer>;

        $r1[0] = c0;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] oneCharBuffer>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cdataBuffer> = $r2;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cdataStart> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cdataLength> = 1;

        return 257;
    }

    private int parseXML() throws org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.Piccolo $r1, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        char[] $r2;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $z0 = $r1.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: boolean fNamespaces>;

        if $z0 == 0 goto label1;

        $i5 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int parseXMLNS()>();

        return $i5;

     label1:
        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void parseCdata()>();

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cdataBuffer>;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cdataStart>;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cdataLength>;

        virtualinvoke $r3.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportCdata(char[],int,int)>($r2, $i1, $i0);

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yynextAction()>();

        $i2 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yystate()>();

        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagStartState>;

        if $i2 != $i3 goto label6;

        $i4 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int parseTag()>();

        lookupswitch($i4)
        {
            case -1: goto label2;
            case 0: goto label3;
            default: goto label4;
        };

     label2:
        return 0;

     label3:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yynextAction()>();

        goto label5;

     label4:
        return $i4;

     label5:
        goto label1;

     label6:
        return 0;
    }

    private int parseXMLNS() throws org.xml.sax.SAXException, java.io.IOException
    {
        int $i0, $i1, $i2, $i3, $i4;
        org.apache.xmlbeans.impl.piccolo.xml.Piccolo $r2;
        char[] $r1;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

     label1:
        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void parseCdata()>();

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cdataBuffer>;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cdataStart>;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cdataLength>;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportCdata(char[],int,int)>($r1, $i1, $i0);

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yynextAction()>();

        $i2 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yystate()>();

        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagStartState>;

        if $i2 != $i3 goto label6;

        $i4 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int parseTagNS()>();

        lookupswitch($i4)
        {
            case -1: goto label2;
            case 0: goto label3;
            default: goto label4;
        };

     label2:
        return 0;

     label3:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yynextAction()>();

        goto label5;

     label4:
        return $i4;

     label5:
        goto label1;

     label6:
        return 0;
    }

    private int parseTag() throws org.xml.sax.SAXException, java.io.IOException
    {
        char c4;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i10, $i12;
        char[] $r1;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i2 = $i1 - $i0;

        if $i2 <= 0 goto label4;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        c4 = $r1[$i3];

        $i8 = (int) c4;

        lookupswitch($i8)
        {
            case 33: goto label1;
            case 47: goto label2;
            case 63: goto label1;
            default: goto label3;
        };

     label1:
        $i6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagStartState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i6);

        $i10 = (int) -1;

        return $i10;

     label2:
        $i5 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int parseCloseTag()>();

        return $i5;

     label3:
        $i7 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int parseOpenTag()>();

        return $i7;

     label4:
        $i12 = (int) -1;

        return $i12;
    }

    private int parseTagNS() throws org.xml.sax.SAXException, java.io.IOException
    {
        char c4;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i10, $i12;
        char[] $r1;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i2 = $i1 - $i0;

        if $i2 <= 0 goto label4;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        c4 = $r1[$i3];

        $i8 = (int) c4;

        lookupswitch($i8)
        {
            case 33: goto label1;
            case 47: goto label2;
            case 63: goto label1;
            default: goto label3;
        };

     label1:
        $i6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagStartState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i6);

        $i10 = (int) -1;

        return $i10;

     label2:
        $i5 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int parseCloseTagNS()>();

        return $i5;

     label3:
        $i7 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int parseOpenTagNS()>();

        return $i7;

     label4:
        $i12 = (int) -1;

        return $i12;
    }

    private int parseOpenTag() throws org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.util.StringStack $r24;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.piccolo.xml.Piccolo $r10, $r14, $r21;
        org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder $r15, $r22;
        org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, $i26;
        java.lang.String $r1, $r2, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r17, $r18, $r19, $r20, $r23;
        char[] $r3, $r4;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String parseElementName()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue> = $r1;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        if $r2 != null goto label01;

        $i23 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagStartState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i23);

        $i26 = (int) -1;

        return $i26;

     label01:
        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i1 = $i0 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i1;

        i24 = $r3[$i0];

     label02:
        if i24 != 62 goto label04;

        $i20 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i21 = $i20 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i21;

        $i22 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i22);

        $r17 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void processSimpleElement(java.lang.String)>($r17);

        $r21 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r20 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI>;

        $r19 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName>;

        $r18 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r21.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportStartTag(java.lang.String,java.lang.String,java.lang.String)>($r20, $r19, $r18);

        $r22 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder attribs>;

        virtualinvoke $r22.<org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder: void clear()>();

        $r24 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.StringStack tagStack>;

        $r23 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r24.<org.apache.xmlbeans.impl.piccolo.util.StringStack: void push(java.lang.String)>($r23);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagType> = 263;

        $z1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean tokenizeInput>;

        if $z1 == 0 goto label03;

        return 263;

     label03:
        return 0;

     label04:
        if i24 != 47 goto label07;

        $i14 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i15 = $i14 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i15;

        $i16 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yynextChar()>();

        if $i16 == 62 goto label05;

        $r16 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>("\'/\' should be followed by \'>\'");

        throw $r16;

     label05:
        $i17 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i18 = $i17 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i18;

        $i19 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i19);

        $r6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void processSimpleElement(java.lang.String)>($r6);

        $r10 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r9 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI>;

        $r8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName>;

        $r7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r10.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportStartTag(java.lang.String,java.lang.String,java.lang.String)>($r9, $r8, $r7);

        $r14 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r13 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI>;

        $r12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName>;

        $r11 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r14.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportEndTag(java.lang.String,java.lang.String,java.lang.String)>($r13, $r12, $r11);

        $r15 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder attribs>;

        virtualinvoke $r15.<org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder: void clear()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagType> = 265;

        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean tokenizeInput>;

        if $z0 == 0 goto label06;

        return 265;

     label06:
        return 0;

     label07:
        if i24 == 32 goto label08;

        if i24 != 9 goto label09;

     label08:
        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i3 = $i2 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i3;

        goto label11;

     label09:
        if i24 != 10 goto label10;

        $i12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next>;

        $i13 = $i12 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = $i13;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = 0;

        goto label11;

     label10:
        $i9 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i10 = $i9 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i10;

        $r5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void prepareComplexElement(java.lang.String)>($r5);

        $i11 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int parseAttributes()>();

        return $i11;

     label11:
        $i5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i6 = $i5 - $i4;

        if $i6 <= 0 goto label12;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i8 = $i7 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i8;

        i24 = $r4[$i7];

        goto label02;

     label12:
        i24 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yynextChar()>();

        goto label02;
    }

    private int parseOpenTagNS() throws org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport $r6, $r8, $r21, $r23;
        org.apache.xmlbeans.impl.piccolo.util.StringStack $r32;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.piccolo.xml.Piccolo $r14, $r18, $r29;
        org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder $r19, $r30;
        org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException $r20;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, $i26;
        java.lang.String $r1, $r2, $r5, $r7, $r9, $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r22, $r24, $r25, $r26, $r27, $r28, $r31;
        char[] $r3, $r4;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String parseElementNameNS()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue> = $r1;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        if $r2 != null goto label01;

        $i23 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagStartState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i23);

        $i26 = (int) -1;

        return $i26;

     label01:
        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i1 = $i0 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i1;

        i24 = $r3[$i0];

     label02:
        if i24 != 62 goto label04;

        $i20 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i21 = $i20 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i21;

        $r21 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport nsSupport>;

        virtualinvoke $r21.<org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport: void pushContext()>();

        $r23 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport nsSupport>;

        $r22 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI>;

        $r24 = virtualinvoke $r23.<org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport: java.lang.String getURI(java.lang.String)>($r22);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI> = $r24;

        $i22 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i22);

        $r25 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void processSimpleElement(java.lang.String)>($r25);

        $r29 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r28 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI>;

        $r27 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName>;

        $r26 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r29.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportStartTag(java.lang.String,java.lang.String,java.lang.String)>($r28, $r27, $r26);

        $r30 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder attribs>;

        virtualinvoke $r30.<org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder: void clear()>();

        $r32 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.StringStack tagStack>;

        $r31 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r32.<org.apache.xmlbeans.impl.piccolo.util.StringStack: void push(java.lang.String)>($r31);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagType> = 263;

        $z1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean tokenizeInput>;

        if $z1 == 0 goto label03;

        return 263;

     label03:
        return 0;

     label04:
        if i24 != 47 goto label07;

        $i14 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i15 = $i14 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i15;

        $i16 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yynextChar()>();

        if $i16 == 62 goto label05;

        $r20 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>("\'/\' should be followed by \'>\'");

        throw $r20;

     label05:
        $i17 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i18 = $i17 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i18;

        $i19 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i19);

        $r8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport nsSupport>;

        $r7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI>;

        $r9 = virtualinvoke $r8.<org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport: java.lang.String getURI(java.lang.String)>($r7);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI> = $r9;

        $r10 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void processSimpleElement(java.lang.String)>($r10);

        $r14 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r13 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI>;

        $r12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName>;

        $r11 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r14.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportStartTag(java.lang.String,java.lang.String,java.lang.String)>($r13, $r12, $r11);

        $r18 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r17 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI>;

        $r16 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName>;

        $r15 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r18.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportEndTag(java.lang.String,java.lang.String,java.lang.String)>($r17, $r16, $r15);

        $r19 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder attribs>;

        virtualinvoke $r19.<org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder: void clear()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagType> = 265;

        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean tokenizeInput>;

        if $z0 == 0 goto label06;

        return 265;

     label06:
        return 0;

     label07:
        if i24 == 32 goto label08;

        if i24 != 9 goto label09;

     label08:
        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i3 = $i2 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i3;

        goto label11;

     label09:
        if i24 != 10 goto label10;

        $i12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next>;

        $i13 = $i12 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = $i13;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = 0;

        goto label11;

     label10:
        $i9 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i10 = $i9 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i10;

        $r5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void prepareComplexElement(java.lang.String)>($r5);

        $r6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport nsSupport>;

        virtualinvoke $r6.<org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport: void pushContext()>();

        $i11 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int parseAttributesNS()>();

        return $i11;

     label11:
        $i5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i6 = $i5 - $i4;

        if $i6 <= 0 goto label12;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i8 = $i7 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i8;

        i24 = $r4[$i7];

        goto label02;

     label12:
        i24 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yynextChar()>();

        goto label02;
    }

    private int parseAttributes() throws org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.util.StringStack $r7;
        java.lang.StringBuffer $r20, $r21, $r27, $r28, $r29, $r33, $r34;
        java.lang.String $r2, $r3, $r4, $r6, $r9, $r10, $r11, $r13, $r14, $r15, $r22, $r24, $r30;
        char[] $r1, $r32;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.piccolo.xml.Piccolo $r5, $r12, $r16;
        org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder $r8, $r17;
        org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException $r18, $r23, $r25, $r31;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i36, $i37, $i39, $i40, $i41, $i42, $i43, $i44, i45, i46, $i47, $i48, $i49, $i50, $i52, $i53, $i55, $i57, $i59, $i61, $i63, $i65, $i67, $i68, $i70;
        char $c3, $c17, $c35, $c38;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i0);

        i45 = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean endOfTag> = 0;

     label01:
        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean endOfTag>;

        if $z0 != 0 goto label20;

        $i19 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i18 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i20 = $i19 - $i18;

        if $i20 <= 0 goto label19;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void parseAttributeName()>();

        $r24 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeQName>;

        if $r24 != null goto label02;

        goto label20;

     label02:
        $i22 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i21 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        i46 = $i22 - $i21;

     label03:
        $i47 = i46;

        $i52 = (int) -1;

        i46 = i46 + $i52;

        if $i47 <= 0 goto label08;

        $r32 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i36 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i37 = $i36 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i37;

        $c38 = $r32[$i36];

        $i53 = (int) $c38;

        lookupswitch($i53)
        {
            case 9: goto label05;
            case 10: goto label06;
            case 32: goto label05;
            case 61: goto label04;
            default: goto label07;
        };

     label04:
        goto label08;

     label05:
        $i41 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i42 = $i41 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i42;

        goto label03;

     label06:
        $i39 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next>;

        $i40 = $i39 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = $i40;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = 0;

        goto label03;

     label07:
        $i43 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i44 = $i43 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i44;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(10);

        $i55 = (int) -1;

        return $i55;

     label08:
        if i46 >= 0 goto label09;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(10);

        $i57 = (int) -1;

        return $i57;

     label09:
        i45 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yynextChar()>();

     label10:
        $i59 = (int) -1;

        if i45 == $i59 goto label17;

        lookupswitch(i45)
        {
            case 9: goto label13;
            case 10: goto label14;
            case 32: goto label13;
            case 34: goto label11;
            case 39: goto label12;
            default: goto label15;
        };

     label11:
        $i27 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i28 = $i27 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i28;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void parseQuotedTagValue()>();

        $i29 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yystate()>();

        $i30 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagState>;

        if $i29 == $i30 goto label17;

        $i61 = (int) -1;

        return $i61;

     label12:
        $i23 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i24 = $i23 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i24;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void parseSingleQuotedTagValue()>();

        $i25 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yystate()>();

        $i26 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagState>;

        if $i25 == $i26 goto label17;

        $i63 = (int) -1;

        return $i63;

     label13:
        $i33 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i34 = $i33 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i34;

        goto label16;

     label14:
        $i31 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next>;

        $i32 = $i31 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = $i32;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = 0;

        goto label16;

     label15:
        $r33 = new java.lang.StringBuffer;

        specialinvoke $r33.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected character encountered: \'");

        $c35 = (char) i45;

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c35);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        $r31 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>($r30);

        throw $r31;

     label16:
        i45 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yynextChar()>();

        goto label10;

     label17:
        $i65 = (int) -1;

        if i45 != $i65 goto label18;

        $r25 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>("Unexpected end of file");

        throw $r25;

     label18:
        goto label01;

     label19:
        $i67 = (int) -1;

        return $i67;

     label20:
        $i48 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i49 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i50 = $i48 - $i49;

        if $i50 <= 0 goto label29;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i2 = $i1 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i2;

        $c3 = $r1[$i1];

        $i68 = (int) $c3;

        lookupswitch($i68)
        {
            case 9: goto label26;
            case 10: goto label27;
            case 32: goto label26;
            case 47: goto label23;
            case 62: goto label21;
            default: goto label28;
        };

     label21:
        $i4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i5 = $i4 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i5;

        $i6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i6);

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void processComplexElement()>();

        $r5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI>;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName>;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r5.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportStartTag(java.lang.String,java.lang.String,java.lang.String)>($r4, $r3, $r2);

        $r7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.StringStack tagStack>;

        $r6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r7.<org.apache.xmlbeans.impl.piccolo.util.StringStack: void push(java.lang.String)>($r6);

        $r8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder attribs>;

        virtualinvoke $r8.<org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder: void clear()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagType> = 263;

        $z1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean tokenizeInput>;

        if $z1 == 0 goto label22;

        return 263;

     label22:
        return 0;

     label23:
        $i7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i8 = $i7 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i8;

        $i9 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yynextChar()>();

        if $i9 == 62 goto label24;

        $r18 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>("\'/\' should be followed by \'>\'");

        throw $r18;

     label24:
        $i10 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i11 = $i10 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i11;

        $i12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i12);

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void processComplexElement()>();

        $r12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r11 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI>;

        $r10 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName>;

        $r9 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r12.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportStartTag(java.lang.String,java.lang.String,java.lang.String)>($r11, $r10, $r9);

        $r16 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r15 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI>;

        $r14 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName>;

        $r13 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r16.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportEndTag(java.lang.String,java.lang.String,java.lang.String)>($r15, $r14, $r13);

        $r17 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder attribs>;

        virtualinvoke $r17.<org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder: void clear()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagType> = 265;

        $z2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean tokenizeInput>;

        if $z2 == 0 goto label25;

        return 265;

     label25:
        return 0;

     label26:
        $i15 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i16 = $i15 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i16;

        goto label20;

     label27:
        $i13 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next>;

        $i14 = $i13 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = $i14;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = 0;

        goto label20;

     label28:
        $r34 = new java.lang.StringBuffer;

        specialinvoke $r34.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected character: ");

        $c17 = (char) i45;

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c17);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        $r23 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>($r22);

        throw $r23;

     label29:
        $i70 = (int) -1;

        return $i70;
    }

    private int parseAttributesNS() throws org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.util.StringStack $r7;
        java.lang.StringBuffer $r20, $r21, $r27, $r28, $r29, $r33, $r34;
        java.lang.String $r2, $r3, $r4, $r6, $r9, $r10, $r11, $r13, $r14, $r15, $r22, $r24, $r30;
        char[] $r1, $r32;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.piccolo.xml.Piccolo $r5, $r12, $r16;
        org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder $r8, $r17;
        org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException $r18, $r23, $r25, $r31;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i36, $i37, $i39, $i40, $i41, $i42, $i43, $i44, i45, i46, $i47, $i48, $i49, $i50, $i52, $i53, $i55, $i57, $i59, $i61, $i63, $i65, $i67, $i68, $i70;
        char $c3, $c17, $c35, $c38;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i0);

        i45 = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean endOfTag> = 0;

     label01:
        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean endOfTag>;

        if $z0 != 0 goto label20;

        $i19 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i18 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i20 = $i19 - $i18;

        if $i20 <= 0 goto label19;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void parseAttributeNameNS()>();

        $r24 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeQName>;

        if $r24 != null goto label02;

        goto label20;

     label02:
        $i22 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i21 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        i46 = $i22 - $i21;

     label03:
        $i47 = i46;

        $i52 = (int) -1;

        i46 = i46 + $i52;

        if $i47 <= 0 goto label08;

        $r32 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i36 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i37 = $i36 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i37;

        $c38 = $r32[$i36];

        $i53 = (int) $c38;

        lookupswitch($i53)
        {
            case 9: goto label05;
            case 10: goto label06;
            case 32: goto label05;
            case 61: goto label04;
            default: goto label07;
        };

     label04:
        goto label08;

     label05:
        $i41 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i42 = $i41 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i42;

        goto label03;

     label06:
        $i39 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next>;

        $i40 = $i39 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = $i40;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = 0;

        goto label03;

     label07:
        $i43 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i44 = $i43 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i44;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(10);

        $i55 = (int) -1;

        return $i55;

     label08:
        if i46 >= 0 goto label09;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(10);

        $i57 = (int) -1;

        return $i57;

     label09:
        i45 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yynextChar()>();

     label10:
        $i59 = (int) -1;

        if i45 == $i59 goto label17;

        lookupswitch(i45)
        {
            case 9: goto label13;
            case 10: goto label14;
            case 32: goto label13;
            case 34: goto label11;
            case 39: goto label12;
            default: goto label15;
        };

     label11:
        $i27 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i28 = $i27 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i28;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void parseQuotedTagValue()>();

        $i29 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yystate()>();

        $i30 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagState>;

        if $i29 == $i30 goto label17;

        $i61 = (int) -1;

        return $i61;

     label12:
        $i23 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i24 = $i23 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i24;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void parseSingleQuotedTagValue()>();

        $i25 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yystate()>();

        $i26 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagState>;

        if $i25 == $i26 goto label17;

        $i63 = (int) -1;

        return $i63;

     label13:
        $i33 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i34 = $i33 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i34;

        goto label16;

     label14:
        $i31 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next>;

        $i32 = $i31 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = $i32;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = 0;

        goto label16;

     label15:
        $r33 = new java.lang.StringBuffer;

        specialinvoke $r33.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected character encountered: \'");

        $c35 = (char) i45;

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c35);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        $r31 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>($r30);

        throw $r31;

     label16:
        i45 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yynextChar()>();

        goto label10;

     label17:
        $i65 = (int) -1;

        if i45 != $i65 goto label18;

        $r25 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>("Unexpected end of file");

        throw $r25;

     label18:
        goto label01;

     label19:
        $i67 = (int) -1;

        return $i67;

     label20:
        $i48 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i49 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i50 = $i48 - $i49;

        if $i50 <= 0 goto label29;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i2 = $i1 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i2;

        $c3 = $r1[$i1];

        $i68 = (int) $c3;

        lookupswitch($i68)
        {
            case 9: goto label26;
            case 10: goto label27;
            case 32: goto label26;
            case 47: goto label23;
            case 62: goto label21;
            default: goto label28;
        };

     label21:
        $i4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i5 = $i4 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i5;

        $i6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i6);

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void processComplexElement()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void resolveNamespacePrefixes()>();

        $r5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI>;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName>;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r5.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportStartTag(java.lang.String,java.lang.String,java.lang.String)>($r4, $r3, $r2);

        $r7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.StringStack tagStack>;

        $r6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r7.<org.apache.xmlbeans.impl.piccolo.util.StringStack: void push(java.lang.String)>($r6);

        $r8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder attribs>;

        virtualinvoke $r8.<org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder: void clear()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagType> = 263;

        $z1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean tokenizeInput>;

        if $z1 == 0 goto label22;

        return 263;

     label22:
        return 0;

     label23:
        $i7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i8 = $i7 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i8;

        $i9 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yynextChar()>();

        if $i9 == 62 goto label24;

        $r18 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>("\'/\' should be followed by \'>\'");

        throw $r18;

     label24:
        $i10 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i11 = $i10 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i11;

        $i12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i12);

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void processComplexElement()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void resolveNamespacePrefixes()>();

        $r12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r11 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI>;

        $r10 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName>;

        $r9 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r12.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportStartTag(java.lang.String,java.lang.String,java.lang.String)>($r11, $r10, $r9);

        $r16 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r15 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI>;

        $r14 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName>;

        $r13 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r16.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportEndTag(java.lang.String,java.lang.String,java.lang.String)>($r15, $r14, $r13);

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void processNSContextEnd()>();

        $r17 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder attribs>;

        virtualinvoke $r17.<org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder: void clear()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagType> = 265;

        $z2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean tokenizeInput>;

        if $z2 == 0 goto label25;

        return 265;

     label25:
        return 0;

     label26:
        $i15 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i16 = $i15 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i16;

        goto label20;

     label27:
        $i13 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next>;

        $i14 = $i13 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = $i14;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = 0;

        goto label20;

     label28:
        $r34 = new java.lang.StringBuffer;

        specialinvoke $r34.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected character: ");

        $c17 = (char) i45;

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c17);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        $r23 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>($r22);

        throw $r23;

     label29:
        $i70 = (int) -1;

        return $i70;
    }

    private void parseAttributeName() throws org.xml.sax.SAXException, java.io.IOException
    {
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i30;
        java.lang.String $r3;
        char[] $r1, $r2, $r4;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i1 = $i0 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i1;

        i30 = $r1[$i0];

     label01:
        if i30 == 32 goto label02;

        if i30 != 9 goto label03;

     label02:
        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i3 = $i2 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i3;

        goto label10;

     label03:
        if i30 != 10 goto label04;

        $i28 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next>;

        $i29 = $i28 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = $i29;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = 0;

        goto label10;

     label04:
        if i30 != 47 goto label05;

        $i26 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i27 = $i26 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i27;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeQName> = null;

        return;

     label05:
        if i30 != 62 goto label06;

        $i24 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i25 = $i24 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i25;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeQName> = null;

        return;

     label06:
        if i30 > 255 goto label07;

        $z3 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isASCIINameStartChar(int)>(i30);

        if $z3 == 0 goto label09;

        goto label08;

     label07:
        $z0 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isNonASCIINameStartChar(int)>(i30);

        if $z0 == 0 goto label09;

     label08:
        $i11 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i12 = $i11 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i12;

        $i13 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i14 = $i13 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead> = $i14;

        goto label12;

     label09:
        $i9 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i10 = $i9 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i10;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeQName> = "";

        return;

     label10:
        $i5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i6 = $i5 - $i4;

        if $i6 <= 0 goto label11;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i8 = $i7 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i8;

        i30 = $r2[$i7];

        goto label01;

     label11:
        i30 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yynextChar()>();

        goto label01;

     label12:
        if i30 > 255 goto label13;

        $z2 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isASCIINameChar(int)>(i30);

        if $z2 == 0 goto label15;

        goto label14;

     label13:
        $z1 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isNonASCIINameChar(int)>(i30);

        if $z1 == 0 goto label15;

     label14:
        $i17 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i18 = $i17 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i18;

        goto label16;

     label15:
        $i15 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i16 = $i15 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i16;

        $r3 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeQName> = $r3;

        return;

     label16:
        $i20 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i19 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i21 = $i20 - $i19;

        if $i21 <= 0 goto label17;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i22 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i23 = $i22 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i23;

        i30 = $r4[$i22];

        goto label12;

     label17:
        i30 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yynextChar()>();

        goto label12;
    }

    private void parseAttributeNameNS() throws org.xml.sax.SAXException, java.io.IOException
    {
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r11, $r12;
        char[] $r1, $r2, $r8, $r9;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, i42, i43, $i44, $i45, $i46;
        org.apache.xmlbeans.impl.piccolo.util.CharStringConverter $r10;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeURI> = null;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isNamespaceDeclaration> = 0;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i1 = $i0 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i1;

        i42 = $r1[$i0];

        i43 = 0;

     label01:
        if i42 == 32 goto label02;

        if i42 != 9 goto label03;

     label02:
        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i3 = $i2 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i3;

        goto label11;

     label03:
        if i42 != 10 goto label04;

        $i40 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next>;

        $i41 = $i40 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = $i41;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = 0;

        goto label11;

     label04:
        if i42 != 47 goto label05;

        $i38 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i39 = $i38 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i39;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeQName> = null;

        return;

     label05:
        if i42 != 62 goto label06;

        $i36 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i37 = $i36 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i37;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeQName> = null;

        return;

     label06:
        if i42 > 255 goto label07;

        $z3 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isASCIINameStartChar(int)>(i42);

        if $z3 == 0 goto label09;

        goto label08;

     label07:
        $z0 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isNonASCIINameStartChar(int)>(i42);

        if $z0 == 0 goto label09;

     label08:
        $i32 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i33 = $i32 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i33;

        $i34 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i35 = $i34 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead> = $i35;

        goto label13;

     label09:
        if i42 != 58 goto label10;

        $i12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i11 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        i43 = $i12 - $i11;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeURI> = "";

        goto label13;

     label10:
        $i9 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i10 = $i9 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i10;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeQName> = "";

        return;

     label11:
        $i5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i6 = $i5 - $i4;

        if $i6 <= 0 goto label12;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i8 = $i7 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i8;

        i42 = $r2[$i7];

        goto label01;

     label12:
        i42 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yynextChar()>();

        goto label01;

     label13:
        if i42 > 255 goto label14;

        $z2 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isASCIINameCharNS(int)>(i42);

        if $z2 == 0 goto label16;

        goto label15;

     label14:
        $z1 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isNonASCIINameChar(int)>(i42);

        if $z1 == 0 goto label16;

     label15:
        $i30 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i31 = $i30 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i31;

        goto label21;

     label16:
        if i42 != 58 goto label17;

        $i19 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i20 = $i19 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i20;

        $r7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeURI>;

        if $r7 != null goto label21;

        $r10 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.CharStringConverter stringConverter>;

        $r9 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i27 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i23 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i25 = $i23 - 1;

        $i24 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i26 = $i25 - $i24;

        $r11 = virtualinvoke $r10.<org.apache.xmlbeans.impl.piccolo.util.CharStringConverter: java.lang.String convert(char[],int,int)>($r9, $i27, $i26);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeURI> = $r11;

        $i29 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i28 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        i43 = $i29 - $i28;

        goto label21;

     label17:
        $i13 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i14 = $i13 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i14;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeURI>;

        if $r3 != null goto label18;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeURI> = "";

     label18:
        $i17 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i15 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i16 = $i15 + i43;

        $i18 = $i17 - $i16;

        $r4 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2(int,int)>(i43, $i18);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeLocalName> = $r4;

        $r5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeURI>;

        if $r5 == "xmlns" goto label19;

        $r6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeLocalName>;

        if $r6 != "xmlns" goto label20;

     label19:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isNamespaceDeclaration> = 1;

     label20:
        $r12 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeQName> = $r12;

        return;

     label21:
        $i44 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i45 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i46 = $i44 - $i45;

        if $i46 <= 0 goto label22;

        $r8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i21 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i22 = $i21 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i22;

        i42 = $r8[$i21];

        goto label13;

     label22:
        i42 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yynextChar()>();

        goto label13;
    }

    private int parseCloseTag() throws org.xml.sax.SAXException, java.io.IOException
    {
        byte $b22;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.piccolo.xml.Piccolo $r3, $r9;
        java.lang.StringBuffer $r11, $r12, $r13, $r16;
        org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i24, $i25, $i27;
        java.lang.String $r1, $r2, $r5, $r6, $r7, $r8, $r14;
        char c9;
        char[] $r4;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i1 = $i0 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i1;

        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i3 = $i2 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i3;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String parseElementName()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue> = $r1;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        if $r2 != null goto label01;

        $i17 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagStartState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i17);

        $i18 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i19 = $i18 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i19;

        $i20 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i21 = $i20 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i21;

        $i24 = (int) -1;

        return $i24;

     label01:
        $i5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i6 = $i5 - $i4;

        if $i6 <= 0 goto label08;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i8 = $i7 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i8;

        c9 = $r4[$i7];

        $i25 = (int) c9;

        lookupswitch($i25)
        {
            case 9: goto label04;
            case 10: goto label05;
            case 32: goto label04;
            case 62: goto label02;
            default: goto label06;
        };

     label02:
        $i10 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i11 = $i10 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i11;

        $r5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void checkEndTag(java.lang.String)>($r5);

        $r9 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI>;

        $r7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName>;

        $r6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r9.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportEndTag(java.lang.String,java.lang.String,java.lang.String)>($r8, $r7, $r6);

        $i12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i12);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagType> = 264;

        $z1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean tokenizeInput>;

        if $z1 == 0 goto label03;

        return 264;

     label03:
        return 0;

     label04:
        $i15 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i16 = $i15 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i16;

        goto label07;

     label05:
        $i13 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next>;

        $i14 = $i13 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = $i14;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = 0;

        goto label07;

     label06:
        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected character encountered while in a closing tag: \'");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c9);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        $r15 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>($r14);

        throw $r15;

     label07:
        goto label01;

     label08:
        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $z0 = $r3.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: boolean fNamespaces>;

        if $z0 == 0 goto label09;

        $b22 = 20;

        goto label10;

     label09:
        $b22 = 19;

     label10:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($b22);

        $i27 = (int) -1;

        return $i27;
    }

    private int parseCloseTagNS() throws org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport $r7;
        byte $b22;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.piccolo.xml.Piccolo $r3, $r12;
        java.lang.StringBuffer $r14, $r15, $r16, $r19;
        org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i24, $i25, $i27;
        java.lang.String $r1, $r2, $r5, $r6, $r8, $r9, $r10, $r11, $r17;
        char c9;
        char[] $r4;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i1 = $i0 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i1;

        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i3 = $i2 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i3;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String parseElementNameNS()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue> = $r1;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        if $r2 != null goto label01;

        $i17 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagStartState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i17);

        $i18 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i19 = $i18 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i19;

        $i20 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i21 = $i20 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i21;

        $i24 = (int) -1;

        return $i24;

     label01:
        $i5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i6 = $i5 - $i4;

        if $i6 <= 0 goto label08;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i8 = $i7 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i8;

        c9 = $r4[$i7];

        $i25 = (int) c9;

        lookupswitch($i25)
        {
            case 9: goto label04;
            case 10: goto label05;
            case 32: goto label04;
            case 62: goto label02;
            default: goto label06;
        };

     label02:
        $i10 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i11 = $i10 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i11;

        $r5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void checkEndTag(java.lang.String)>($r5);

        $r7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport nsSupport>;

        $r6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI>;

        $r8 = virtualinvoke $r7.<org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport: java.lang.String getURI(java.lang.String)>($r6);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI> = $r8;

        $r12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r11 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI>;

        $r10 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName>;

        $r9 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r12.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportEndTag(java.lang.String,java.lang.String,java.lang.String)>($r11, $r10, $r9);

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void processNSContextEnd()>();

        $i12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i12);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagType> = 264;

        $z1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean tokenizeInput>;

        if $z1 == 0 goto label03;

        return 264;

     label03:
        return 0;

     label04:
        $i15 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i16 = $i15 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i16;

        goto label07;

     label05:
        $i13 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next>;

        $i14 = $i13 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = $i14;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = 0;

        goto label07;

     label06:
        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected character encountered while in a closing tag: \'");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c9);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        $r18 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>($r17);

        throw $r18;

     label07:
        goto label01;

     label08:
        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $z0 = $r3.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: boolean fNamespaces>;

        if $z0 == 0 goto label09;

        $b22 = 20;

        goto label10;

     label09:
        $b22 = 19;

     label10:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($b22);

        $i27 = (int) -1;

        return $i27;
    }

    private java.lang.String parseElementName() throws org.xml.sax.SAXException, java.io.IOException
    {
        boolean $z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28;
        java.lang.String $r3;
        char c18;
        char[] $r2;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead> = $i0;

        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yynextChar()>();

        if $i1 > 255 goto label01;

        $z3 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isASCIINameStartChar(int)>($i1);

        if $z3 == 0 goto label03;

        goto label02;

     label01:
        $z0 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isNonASCIINameStartChar(int)>($i1);

        if $z0 == 0 goto label03;

     label02:
        $i5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i6 = $i5 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i6;

        goto label04;

     label03:
        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagStartState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i2);

        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i4 = $i3 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i4;

        return null;

     label04:
        $i15 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i16 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i17 = $i15 - $i16;

        if $i17 <= 0 goto label10;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i10 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i11 = $i10 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i11;

        c18 = $r2[$i10];

        $i21 = (int) c18;

        if $i21 > 255 goto label05;

        $i22 = (int) c18;

        $z2 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isASCIINameChar(int)>($i22);

        if $z2 == 0 goto label07;

        goto label06;

     label05:
        $i23 = (int) c18;

        $z1 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isNonASCIINameChar(int)>($i23);

        if $z1 == 0 goto label07;

     label06:
        $i13 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i14 = $i13 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i14;

        goto label04;

     label07:
        $i24 = (int) c18;

        if $i24 == 62 goto label12;

        $i25 = (int) c18;

        if $i25 == 32 goto label12;

        $i26 = (int) c18;

        if $i26 != 47 goto label08;

        goto label12;

     label08:
        $i27 = (int) c18;

        if $i27 == 10 goto label12;

        $i28 = (int) c18;

        if $i28 != 9 goto label09;

        goto label12;

     label09:
        $i12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i12;

        return null;

     label10:
        $i7 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yynextChar()>();

        if $i7 >= 0 goto label11;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>("Unexpected end of file");

        throw $r1;

     label11:
        $i8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i9 = $i8 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i9;

        goto label04;

     label12:
        $i19 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i20 = $i19 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i20;

        $r3 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2()>();

        return $r3;
    }

    private java.lang.String parseElementNameNS() throws org.xml.sax.SAXException, java.io.IOException
    {
        boolean $z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26, $i27, $i28, $i29, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45;
        java.lang.String $r3, $r4, $r5, $r8, $r9;
        org.apache.xmlbeans.impl.piccolo.util.CharStringConverter $r7;
        char c30;
        char[] $r2, $r6;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead> = $i0;

        i26 = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI> = null;

        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yynextChar()>();

        if $i1 > 255 goto label01;

        $z3 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isASCIINameStartCharNS(int)>($i1);

        if $z3 == 0 goto label03;

        goto label02;

     label01:
        $z0 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isNonASCIINameStartChar(int)>($i1);

        if $z0 == 0 goto label03;

     label02:
        $i24 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i25 = $i24 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i25;

        goto label05;

     label03:
        if $i1 != 58 goto label04;

        $i5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i6 = $i5 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i6;

        i26 = 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI> = "";

        goto label05;

     label04:
        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagStartState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i2);

        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i4 = $i3 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i4;

        return null;

     label05:
        $i27 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i28 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i29 = $i27 - $i28;

        if $i29 <= 0 goto label12;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i10 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i11 = $i10 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i11;

        c30 = $r2[$i10];

        $i37 = (int) c30;

        if $i37 > 255 goto label06;

        $i38 = (int) c30;

        $z2 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isASCIINameCharNS(int)>($i38);

        if $z2 == 0 goto label08;

        goto label07;

     label06:
        $i39 = (int) c30;

        $z1 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isNonASCIINameChar(int)>($i39);

        if $z1 == 0 goto label08;

     label07:
        $i22 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i23 = $i22 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i23;

        goto label05;

     label08:
        $i40 = (int) c30;

        if $i40 == 62 goto label14;

        $i41 = (int) c30;

        if $i41 == 32 goto label14;

        $i42 = (int) c30;

        if $i42 != 47 goto label09;

        goto label14;

     label09:
        $i43 = (int) c30;

        if $i43 != 58 goto label10;

        $i13 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i14 = $i13 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i14;

        $r5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI>;

        if $r5 != null goto label05;

        $r7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.CharStringConverter stringConverter>;

        $r6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i19 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i16 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i15 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i17 = $i16 - $i15;

        $i18 = $i17 - 1;

        $r8 = virtualinvoke $r7.<org.apache.xmlbeans.impl.piccolo.util.CharStringConverter: java.lang.String convert(char[],int,int)>($r6, $i19, $i18);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI> = $r8;

        $i21 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i20 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        i26 = $i21 - $i20;

        goto label05;

     label10:
        $i44 = (int) c30;

        if $i44 == 10 goto label14;

        $i45 = (int) c30;

        if $i45 != 9 goto label11;

        goto label14;

     label11:
        $i12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i12;

        return null;

     label12:
        $i7 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yynextChar()>();

        if $i7 >= 0 goto label13;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>("Unexpected end of file");

        throw $r1;

     label13:
        $i8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i9 = $i8 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i9;

        goto label05;

     label14:
        $i31 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i32 = $i31 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i32;

        $i33 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i34 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i35 = $i34 + i26;

        $i36 = $i33 - $i35;

        $r9 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2(int,int)>(i26, $i36);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName> = $r9;

        if i26 != 0 goto label15;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName>;

        return $r4;

     label15:
        $r3 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2()>();

        return $r3;
    }

    private static void calcAsciiTables()
    {
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        boolean[] $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        $r0 = newarray (boolean)[256];

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean[] asciiNameStartChars> = $r0;

        $r1 = newarray (boolean)[256];

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean[] asciiNameStartCharsNS> = $r1;

        $r2 = newarray (boolean)[256];

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean[] asciiNameChars> = $r2;

        $r3 = newarray (boolean)[256];

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean[] asciiNameCharsNS> = $r3;

        i0 = 0;

     label01:
        if i0 >= 256 goto label21;

        $r6 = <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean[] asciiNameStartChars>;

        $i1 = i0;

        if i0 < 97 goto label02;

        if i0 <= 122 goto label06;

     label02:
        if i0 == 58 goto label06;

        if i0 < 65 goto label03;

        if i0 <= 90 goto label06;

     label03:
        if i0 == 95 goto label06;

        if i0 < 192 goto label04;

        if i0 <= 214 goto label06;

     label04:
        if i0 < 216 goto label05;

        if i0 <= 246 goto label06;

     label05:
        if i0 < 248 goto label07;

        if i0 > 255 goto label07;

     label06:
        $z2 = 1;

        goto label08;

     label07:
        $z2 = 0;

     label08:
        $r6[$i1] = $z2;

        $r7 = <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean[] asciiNameStartCharsNS>;

        $i2 = i0;

        if i0 == 58 goto label09;

        $r5 = <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean[] asciiNameStartChars>;

        $z1 = $r5[i0];

        if $z1 == 0 goto label09;

        $z3 = 1;

        goto label10;

     label09:
        $z3 = 0;

     label10:
        $r7[$i2] = $z3;

        $r8 = <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean[] asciiNameChars>;

        $i3 = i0;

        if i0 < 97 goto label11;

        if i0 <= 122 goto label16;

     label11:
        if i0 == 58 goto label16;

        if i0 < 65 goto label12;

        if i0 <= 90 goto label16;

     label12:
        if i0 == 46 goto label16;

        if i0 == 45 goto label16;

        if i0 == 95 goto label16;

        if i0 == 183 goto label16;

        if i0 < 48 goto label13;

        if i0 <= 57 goto label16;

     label13:
        if i0 < 192 goto label14;

        if i0 <= 214 goto label16;

     label14:
        if i0 < 216 goto label15;

        if i0 <= 246 goto label16;

     label15:
        if i0 < 248 goto label17;

        if i0 > 255 goto label17;

     label16:
        $z4 = 1;

        goto label18;

     label17:
        $z4 = 0;

     label18:
        $r8[$i3] = $z4;

        $r9 = <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean[] asciiNameCharsNS>;

        $i4 = i0;

        if i0 == 58 goto label19;

        $r4 = <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean[] asciiNameChars>;

        $z0 = $r4[i0];

        if $z0 == 0 goto label19;

        $z5 = 1;

        goto label20;

     label19:
        $z5 = 0;

     label20:
        $r9[$i4] = $z5;

        i0 = i0 + 1;

        goto label01;

     label21:
        return;
    }

    private static int findIndexFor(char[], int)
    {
        char $c6;
        int i0, $i1, $i2, $i3, i4, i5, i7, i8, $i9;
        char[] r0;

        r0 := @parameter0: char[];

        i5 := @parameter1: int;

        i0 = lengthof r0;

        i7 = 0;

        i8 = i0;

     label1:
        $i1 = i7 + 1;

        if $i1 >= i8 goto label4;

        $i2 = i8 - i7;

        $i3 = $i2 / 2;

        i4 = $i3 + i7;

        $c6 = r0[i4];

        $i9 = (int) $c6;

        if $i9 <= i5 goto label2;

        i8 = i4;

        goto label3;

     label2:
        i7 = i4;

     label3:
        goto label1;

     label4:
        return i7;
    }

    private static boolean isASCIINameStartChar(int)
    {
        int i0;
        boolean[] $r0;
        boolean $z0;

        i0 := @parameter0: int;

        $r0 = <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean[] asciiNameStartChars>;

        $z0 = $r0[i0];

        return $z0;
    }

    private static boolean isASCIINameStartCharNS(int)
    {
        int i0;
        boolean[] $r0;
        boolean $z0;

        i0 := @parameter0: int;

        $r0 = <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean[] asciiNameStartCharsNS>;

        $z0 = $r0[i0];

        return $z0;
    }

    private static boolean isNonASCIINameStartChar(int)
    {
        int i0, $i1, $i3;
        char[] $r0, $r1;
        char $c2;
        boolean $z0;

        i0 := @parameter0: int;

        $r0 = <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] LETTER_RANGE_START>;

        $i1 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int findIndexFor(char[],int)>($r0, i0);

        $r1 = <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] LETTER_RANGE_END>;

        $c2 = $r1[$i1];

        $i3 = (int) $c2;

        if i0 > $i3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isASCIINameChar(int)
    {
        int i0;
        boolean[] $r0;
        boolean $z0;

        i0 := @parameter0: int;

        $r0 = <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean[] asciiNameChars>;

        $z0 = $r0[i0];

        return $z0;
    }

    private static boolean isASCIINameCharNS(int)
    {
        int i0;
        boolean[] $r0;
        boolean $z0;

        i0 := @parameter0: int;

        $r0 = <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean[] asciiNameCharsNS>;

        $z0 = $r0[i0];

        return $z0;
    }

    private static boolean isNonASCIINameChar(int)
    {
        char $c2;
        int i0, $i1, $i3;
        char[] $r0, $r1;
        boolean $z0, $z1;

        i0 := @parameter0: int;

        $z0 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isNonASCIINameStartChar(int)>(i0);

        if $z0 != 0 goto label1;

        $r1 = <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] NON_LETTER_RANGE_END>;

        $r0 = <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] NON_LETTER_RANGE_START>;

        $i1 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int findIndexFor(char[],int)>($r0, i0);

        $c2 = $r1[$i1];

        $i3 = (int) $c2;

        if i0 > $i3 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private int parseWhitespace() throws org.xml.sax.SAXException, java.io.IOException
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34;
        char c9;
        char[] $r1, $r2;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cdataBuffer> = $r1;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cdataStart> = $i0;

     label1:
        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i3 = $i2 - $i1;

        if $i3 <= 0 goto label8;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i8 = $i7 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i8;

        c9 = $r2[$i7];

        $i34 = (int) c9;

        lookupswitch($i34)
        {
            case 9: goto label2;
            case 10: goto label4;
            case 32: goto label2;
            case 38: goto label5;
            case 60: goto label3;
            default: goto label6;
        };

     label2:
        $i30 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i31 = $i30 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i31;

        goto label7;

     label3:
        $i10 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next>;

        $i11 = $i10 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tokenStartLine> = $i11;

        $i12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i13 = $i12 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i13;

        $i14 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i15 = $i14 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tokenStartColumn> = $i15;

        $i16 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagStartState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i16);

        $i17 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i19 = $i17 - 1;

        $i18 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i20 = $i19 - $i18;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cdataLength> = $i20;

        $i21 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagStartState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i21);

        return 266;

     label4:
        $i28 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next>;

        $i29 = $i28 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = $i29;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = 0;

        goto label7;

     label5:
        $i22 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i23 = $i22 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i23;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(3);

        $i24 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i26 = $i24 - 1;

        $i25 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i27 = $i26 - $i25;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cdataLength> = $i27;

        return 257;

     label6:
        $i32 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i33 = $i32 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i33;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void parseCdata()>();

        return 257;

     label7:
        goto label1;

     label8:
        $i5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i6 = $i5 - $i4;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cdataLength> = $i6;

        return 266;
    }

    private void parseCdata() throws org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.Piccolo $r4;
        org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, i42, i43, $i44, $i46;
        char c41;
        char[] $r1, $r2, $r3, $r5, $r7;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cdataBuffer> = $r1;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cdataStart> = $i0;

     label01:
        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        if $i2 <= $i1 goto label14;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i7 = $i6 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i7;

        c41 = $r2[$i6];

        $i44 = (int) c41;

        lookupswitch($i44)
        {
            case 10: goto label03;
            case 38: goto label04;
            case 60: goto label02;
            case 93: goto label05;
            default: goto label12;
        };

     label02:
        $i20 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i21 = $i20 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i21;

        $i22 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagStartState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i22);

        $i23 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i25 = $i23 - 1;

        $i24 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i26 = $i25 - $i24;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cdataLength> = $i26;

        $i27 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next>;

        $i28 = $i27 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tokenStartLine> = $i28;

        $i29 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i30 = $i29 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tokenStartColumn> = $i30;

        return;

     label03:
        $i37 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next>;

        $i38 = $i37 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = $i38;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = 0;

        goto label13;

     label04:
        $i31 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i32 = $i31 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i32;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(3);

        $i33 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i35 = $i33 - 1;

        $i34 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i36 = $i35 - $i34;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cdataLength> = $i36;

        return;

     label05:
        i42 = 1;

     label06:
        $i9 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i10 = $i9 - $i8;

        if $i10 < 1 goto label07;

        $r7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i18 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i19 = $i18 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i19;

        i43 = $r7[$i18];

        goto label08;

     label07:
        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cdataBuffer>;

        $i14 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cdataStart>;

        $i12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i11 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i13 = $i12 - $i11;

        virtualinvoke $r4.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportCdata(char[],int,int)>($r3, $i14, $i13);

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yynextAction()>();

        i43 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yynextChar()>();

        $r5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cdataBuffer> = $r5;

        $i15 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cdataStart> = $i15;

     label08:
        if i43 != 93 goto label09;

        i42 = i42 + 1;

        goto label06;

     label09:
        if i43 != 62 goto label10;

        if i42 < 2 goto label10;

        $r6 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>("Illegal \']]>\' construct in character data");

        throw $r6;

     label10:
        $i46 = (int) -1;

        if i43 == $i46 goto label11;

        $i16 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i17 = $i16 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i17;

        goto label11;

     label11:
        goto label13;

     label12:
        $i39 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i40 = $i39 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i40;

     label13:
        goto label01;

     label14:
        $i4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i5 = $i4 - $i3;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cdataLength> = $i5;

        return;
    }

    private void parseCdataSection() throws org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.Piccolo $r4, $r7;
        org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException $r1, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i31, i32, i33, $i34, $i36, $i38;
        char c30;
        char[] $r2, $r3, $r6, $r8;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yynextAction()>();

     label01:
        $i28 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i29 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        if $i28 <= $i29 goto label13;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i4 = $i3 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i4;

        c30 = $r2[$i3];

        $i34 = (int) c30;

        lookupswitch($i34)
        {
            case 10: goto label10;
            case 93: goto label02;
            default: goto label11;
        };

     label02:
        i31 = 1;

     label03:
        $i6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        if $i6 <= $i5 goto label04;

        $r8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i22 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i23 = $i22 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i23;

        i32 = $r8[$i22];

        goto label05;

     label04:
        $i7 = staticinvoke <java.lang.Math: int min(int,int)>(2, i31);

        $i8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i9 = $i8 - $i7;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i9;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i13 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i11 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i10 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i12 = $i11 - $i10;

        virtualinvoke $r4.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportCdata(char[],int,int)>($r3, $i13, $i12);

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yynextAction()>();

        $i14 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i15 = $i14 + $i7;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i15;

        i32 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yynextChar()>();

     label05:
        if i32 != 93 goto label06;

        i31 = i31 + 1;

        goto label03;

     label06:
        if i32 != 62 goto label08;

        if i31 < 2 goto label08;

        $i18 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i20 = $i18 - 3;

        $i19 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        i33 = $i20 - $i19;

        if i33 <= 0 goto label07;

        $r7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i21 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        virtualinvoke $r7.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportCdata(char[],int,int)>($r6, $i21, i33);

     label07:
        return;

     label08:
        $i36 = (int) -1;

        if i32 != $i36 goto label09;

        $r5 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>("Unexpected end of file in CDATA section");

        throw $r5;

     label09:
        $i16 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i17 = $i16 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i17;

        goto label12;

     label10:
        $i24 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next>;

        $i25 = $i24 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = $i25;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = 0;

        goto label12;

     label11:
        $i26 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i27 = $i26 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i27;

     label12:
        goto label01;

     label13:
        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yynextChar()>();

        $i38 = (int) -1;

        if $i0 != $i38 goto label14;

        $r1 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>("Unexpected end of file in CDATA section");

        throw $r1;

     label14:
        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i2 = $i1 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i2;

        goto label01;
    }

    void pushEntity(java.lang.String, org.apache.xmlbeans.impl.piccolo.xml.Entity, boolean, boolean) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.Entity r2;
        java.lang.String r1;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;
        boolean z0, z1;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.xmlbeans.impl.piccolo.xml.Entity;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void pushEntity(java.lang.String,org.apache.xmlbeans.impl.piccolo.xml.Entity,boolean,boolean,int)>(r1, r2, z0, z1, 0);

        return;
    }

    void pushEntity(java.lang.String, org.apache.xmlbeans.impl.piccolo.xml.Entity, boolean, boolean, int) throws org.xml.sax.SAXException, java.io.IOException
    {
        java.util.Stack $r5;
        java.lang.StringBuffer $r9, $r10, $r12, $r13;
        org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException $r15;
        int i0, $i1;
        java.lang.String r0, $r11, $r14;
        boolean $z0, z1, z2;
        org.apache.xmlbeans.impl.piccolo.util.RecursionException $r8;
        org.apache.xmlbeans.impl.piccolo.xml.Entity r1, $r4;
        java.io.Reader $r3;
        org.apache.xmlbeans.impl.piccolo.xml.Piccolo $r7;
        char[] $r6;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r2;

        r2 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.xmlbeans.impl.piccolo.xml.Entity;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        i0 := @parameter4: int;

     label1:
        if r0 == null goto label2;

        $r7 = r2.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        virtualinvoke $r7.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportStartEntity(java.lang.String)>(r0);

     label2:
        interfaceinvoke r1.<org.apache.xmlbeans.impl.piccolo.xml.Entity: void open()>();

        $z0 = interfaceinvoke r1.<org.apache.xmlbeans.impl.piccolo.xml.Entity: boolean isInternal()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r1.<org.apache.xmlbeans.impl.piccolo.xml.Entity: char[] charArrayValue()>();

        $i1 = lengthof $r6;

        virtualinvoke r2.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yypushBuffer(char[],int,int)>($r6, 0, $i1);

        goto label4;

     label3:
        $r3 = interfaceinvoke r1.<org.apache.xmlbeans.impl.piccolo.xml.Entity: java.io.Reader getReader()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yypushStream(java.io.Reader)>($r3);

     label4:
        $r5 = r2.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.util.Stack entityStack>;

        $r4 = r2.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity>;

        virtualinvoke $r5.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r4);

        r2.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity> = r1;

        specialinvoke r2.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void pushEntityState(java.lang.String,boolean,boolean,int)>(r0, z1, z2, i0);

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Recursive reference to entity \'");

        $r11 = interfaceinvoke r1.<org.apache.xmlbeans.impl.piccolo.xml.Entity: java.lang.String getSystemID()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        $r15 = specialinvoke r2.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>($r14);

        throw $r15;

     label7:
        return;

        catch org.apache.xmlbeans.impl.piccolo.util.RecursionException from label1 to label5 with label6;
    }

    void pushEntity(java.lang.String, java.lang.String, java.lang.String, boolean, boolean) throws org.xml.sax.SAXException, java.io.IOException
    {
        java.lang.String r1, r2, r3;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;
        boolean z0, z1;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void pushEntity(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,int)>(r1, r2, r3, z0, z1, 0);

        return;
    }

    void pushEntity(java.lang.String, java.lang.String, java.lang.String, boolean, boolean, int) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.Entity $r3, $r5;
        org.apache.xmlbeans.impl.piccolo.xml.EntityManager $r4;
        int i0;
        java.lang.String r1, r2, r6;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;
        boolean z0, z1;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        i0 := @parameter5: int;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.EntityManager entityManager>;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity>;

        $r5 = virtualinvoke $r4.<org.apache.xmlbeans.impl.piccolo.xml.EntityManager: org.apache.xmlbeans.impl.piccolo.xml.Entity getByID(org.apache.xmlbeans.impl.piccolo.xml.Entity,java.lang.String,java.lang.String)>($r3, r1, r2);

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void pushEntity(java.lang.String,org.apache.xmlbeans.impl.piccolo.xml.Entity,boolean,boolean,int)>(r6, $r5, z0, z1, i0);

        return;
    }

    boolean parseExternalEntities(int)
    {
        org.apache.xmlbeans.impl.piccolo.xml.Entity $r1;
        int i0;
        org.apache.xmlbeans.impl.piccolo.xml.Piccolo $r2, $r3;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity>;

        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.piccolo.xml.Entity: boolean isStandalone()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        lookupswitch(i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label3;
        };

     label2:
        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $z1 = $r2.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: boolean fExternalParameterEntities>;

        return $z1;

     label3:
        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $z2 = $r3.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: boolean fExternalGeneralEntities>;

        return $z2;
    }

    private void pushEntityState(java.lang.String, boolean, boolean) throws org.xml.sax.SAXException
    {
        java.lang.String r1;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;
        boolean z0, z1;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void pushEntityState(java.lang.String,boolean,boolean,int)>(r1, z0, z1, 0);

        return;
    }

    private void pushEntityState(java.lang.String, boolean, boolean, int) throws org.xml.sax.SAXException
    {
        long $l11;
        org.apache.xmlbeans.impl.piccolo.util.StringStack $r2, $r4;
        byte $b12, $b13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        java.lang.String $r3, r5;
        boolean $z0, $z1, $z2, z3, z4, $z5;
        org.apache.xmlbeans.impl.piccolo.util.LongStack $r1;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r5 := @parameter0: java.lang.String;

        z3 := @parameter1: boolean;

        z4 := @parameter2: boolean;

        i10 := @parameter3: int;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int entityBaseDepth>;

        $i4 = $i0 << 11;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevEntityLexState>;

        $i2 = $i1 & 255;

        $i3 = $i2 << 3;

        $i5 = $i4 | $i3;

        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean returnEntityEndToken>;

        if $z0 == 0 goto label1;

        $b12 = 4;

        goto label2;

     label1:
        $b12 = 0;

     label2:
        $i6 = $i5 | $b12;

        $z1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isParamEntity>;

        if $z1 == 0 goto label3;

        $b13 = 2;

        goto label4;

     label3:
        $b13 = 0;

     label4:
        $i7 = $i6 | $b13;

        $z2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isEntityBeingParsed>;

        if $z2 == 0 goto label5;

        $z5 = 1;

        goto label6;

     label5:
        $z5 = 0;

     label6:
        $i8 = $i7 | $z5;

        $l11 = (long) $i8;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.LongStack entityStateStack>;

        virtualinvoke $r1.<org.apache.xmlbeans.impl.piccolo.util.LongStack: void push(long)>($l11);

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.StringStack tagStack>;

        $i9 = virtualinvoke $r2.<org.apache.xmlbeans.impl.piccolo.util.StringStack: int size()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int entityBaseDepth> = $i9;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.StringStack entityNameStack>;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String currentEntityName>;

        virtualinvoke $r4.<org.apache.xmlbeans.impl.piccolo.util.StringStack: void push(java.lang.String)>($r3);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String currentEntityName> = r5;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isParamEntity> = z3;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean returnEntityEndToken> = z4;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isEntityBeingParsed> = 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevEntityLexState> = i10;

        return;
    }

    private void popEntityState() throws org.xml.sax.SAXException
    {
        long $l1, $l2, $l4, $l6, $l8, $l9, $l11, $l12;
        byte $b3, $b5, $b7;
        org.apache.xmlbeans.impl.piccolo.util.StringStack $r3, $r5;
        int $i0, $i10, $i13, $i14, $i15, $i16;
        java.lang.String $r2, $r4, $r6;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.piccolo.util.LongStack $r1;
        org.apache.xmlbeans.impl.piccolo.xml.Piccolo $r7;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevEntityLexState>;

        if $i0 == 0 goto label1;

        $i16 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevEntityLexState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i16);

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.LongStack entityStateStack>;

        $l1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.piccolo.util.LongStack: long pop()>();

        $l2 = $l1 & 4L;

        $b3 = $l2 cmp 4L;

        if $b3 != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean returnEntityEndToken> = $z0;

        $l4 = $l1 & 2L;

        $b5 = $l4 cmp 2L;

        if $b5 != 0 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isParamEntity> = $z1;

        $l6 = $l1 & 1L;

        $b7 = $l6 cmp 1L;

        if $b7 != 0 goto label6;

        $z2 = 1;

        goto label7;

     label6:
        $z2 = 0;

     label7:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isEntityBeingParsed> = $z2;

        $l8 = $l1 >> 11;

        $l9 = $l8 & 65535L;

        $i10 = (int) $l9;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int entityBaseDepth> = $i10;

        $l11 = $l1 >> 3;

        $l12 = $l11 & 255L;

        $i13 = (int) $l12;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevEntityLexState> = $i13;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String currentEntityName>;

        if $r2 == null goto label8;

        $r7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String currentEntityName>;

        virtualinvoke $r7.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportEndEntity(java.lang.String)>($r6);

     label8:
        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.StringStack entityNameStack>;

        $r4 = virtualinvoke $r3.<org.apache.xmlbeans.impl.piccolo.util.StringStack: java.lang.String pop()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String currentEntityName> = $r4;

        $r5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.StringStack tagStack>;

        $i14 = virtualinvoke $r5.<org.apache.xmlbeans.impl.piccolo.util.StringStack: int size()>();

        $i15 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int entityBaseDepth>;

        if $i14 <= $i15 goto label9;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void setTokenize(boolean)>(0);

     label9:
        return;
    }

    private void clearEntityState()
    {
        org.apache.xmlbeans.impl.piccolo.util.LongStack $r1;
        org.apache.xmlbeans.impl.piccolo.util.StringStack $r2;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.LongStack entityStateStack>;

        virtualinvoke $r1.<org.apache.xmlbeans.impl.piccolo.util.LongStack: void clear()>();

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.StringStack entityNameStack>;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.piccolo.util.StringStack: void clear()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean returnEntityEndToken> = 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isParamEntity> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int entityBaseDepth> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isEntityBeingParsed> = 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevEntityLexState> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String currentEntityName> = null;

        return;
    }

    private int handleEntityRef(java.lang.String, int) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.xmlbeans.impl.piccolo.xml.EntityManager $r2;
        java.lang.StringBuffer $r5, $r6, $r7;
        int i0, $i1;
        java.lang.String r1, r8;
        boolean z0, $z1, $z3, $z4, $z5;
        org.apache.xmlbeans.impl.piccolo.xml.Entity $r3;
        org.apache.xmlbeans.impl.piccolo.xml.Piccolo $r4;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.EntityManager entityManager>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.piccolo.xml.EntityManager: org.apache.xmlbeans.impl.piccolo.xml.Entity getByName(java.lang.String,int)>(r1, i0);

        if $r3 != null goto label1;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void handleUnknownEntityRef(java.lang.String,int)>(r1, i0);

        return 0;

     label1:
        if i0 != 1 goto label2;

        $z5 = 1;

        $z4 = 1;

        goto label3;

     label2:
        $z5 = 0;

        $z4 = 0;

     label3:
        z0 = $z5;

        if $z4 == 0 goto label5;

        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yystate()>();

        if $i1 != 21 goto label4;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label6;

     label4:
        r8 = null;

        goto label6;

     label5:
        r8 = r1;

     label6:
        $z3 = interfaceinvoke $r3.<org.apache.xmlbeans.impl.piccolo.xml.Entity: boolean isInternal()>();

        if $z3 == 0 goto label7;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void pushEntity(java.lang.String,org.apache.xmlbeans.impl.piccolo.xml.Entity,boolean,boolean)>(r8, $r3, z0, 1);

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void setTokenize(boolean)>(1);

        return 295;

     label7:
        if r1 == "[dtd]" goto label8;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean parseExternalEntities(int)>(i0);

        if $z1 == 0 goto label9;

     label8:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void pushEntity(java.lang.String,org.apache.xmlbeans.impl.piccolo.xml.Entity,boolean,boolean)>(r8, $r3, z0, 1);

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void setTokenize(boolean)>(1);

        return 296;

     label9:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean entityWasSkipped> = 1;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        virtualinvoke $r4.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportSkippedEntity(java.lang.String)>(r8);

        return 0;
    }

    private boolean handleLiteralEntityRef(java.lang.String, int) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.xmlbeans.impl.piccolo.xml.EntityManager $r2;
        byte $b3;
        java.lang.StringBuffer $r6, $r7, $r8;
        org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException $r4, $r10;
        int i0, $i1, $i2;
        java.lang.String r1, $r9;
        boolean $z0, $z1, $z2, $z3, z4, z5, z6, z7, z8, z9;
        org.apache.xmlbeans.impl.piccolo.xml.Entity $r3, $r5;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.EntityManager entityManager>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.piccolo.xml.EntityManager: org.apache.xmlbeans.impl.piccolo.xml.Entity getByName(java.lang.String,int)>(r1, i0);

        z4 = 0;

        z9 = 0;

        z8 = 0;

        z7 = 0;

        z6 = 0;

        z5 = 0;

        if i0 != 1 goto label1;

        z4 = 1;

        z9 = 1;

        z8 = 1;

        z7 = 1;

        z6 = 1;

        z5 = 1;

     label1:
        if $r3 != null goto label4;

        if z7 != 0 goto label3;

        $r5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity>;

        $z2 = interfaceinvoke $r5.<org.apache.xmlbeans.impl.piccolo.xml.Entity: boolean isStandalone()>();

        if $z2 != 0 goto label2;

        $z3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean entityWasSkipped>;

        if $z3 != 0 goto label3;

     label2:
        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Reference to undefined entity: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        $r10 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>($r9);

        throw $r10;

     label3:
        return 0;

     label4:
        $z0 = interfaceinvoke $r3.<org.apache.xmlbeans.impl.piccolo.xml.Entity: boolean isInternal()>();

        if $z0 == 0 goto label7;

        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void pushEntity(java.lang.String,org.apache.xmlbeans.impl.piccolo.xml.Entity,boolean,boolean,int)>(null, $r3, z6, 0, $i2);

        if z8 == 0 goto label5;

        $b3 = 32;

        goto label6;

     label5:
        $b3 = 11;

     label6:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($b3);

        return 1;

     label7:
        if z5 != 0 goto label8;

        $r4 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>("Referencing an external entity within an attribute value is illegal");

        throw $r4;

     label8:
        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean parseExternalEntities(int)>(i0);

        if $z1 == 0 goto label9;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(33);

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void pushEntity(java.lang.String,org.apache.xmlbeans.impl.piccolo.xml.Entity,boolean,boolean,int)>(null, $r3, z9, 0, $i1);

        return 1;

     label9:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean entityWasSkipped> = 1;

        return 0;
    }

    private void handleUnknownEntityRef(java.lang.String, int) throws org.xml.sax.SAXException
    {
        java.lang.StringBuffer $r0, $r1, $r3, $r7, $r8, $r9;
        org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException $r11;
        int i0;
        java.lang.String r2, $r4, $r10, $r13;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.piccolo.xml.Entity $r6;
        org.apache.xmlbeans.impl.piccolo.xml.Piccolo $r12;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r5;

        r5 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if i0 != 1 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        if $z2 == 0 goto label3;

        $r13 = "%";

        goto label4;

     label3:
        $r13 = "";

     label4:
        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r5.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity>;

        $z0 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.piccolo.xml.Entity: boolean isStandalone()>();

        if $z0 != 0 goto label5;

        $z1 = r5.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean entityWasSkipped>;

        if $z1 == 0 goto label5;

        $r12 = r5.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        virtualinvoke $r12.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportSkippedEntity(java.lang.String)>($r4);

        goto label6;

     label5:
        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Reference to undefined entity: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        $r11 = specialinvoke r5.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>($r10);

        throw $r11;

     label6:
        return;
    }

    private boolean isTopEntity()
    {
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yymoreStreams()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private void parseQuotedTagValue() throws org.xml.sax.SAXException, java.io.IOException
    {
        boolean[] $r5;
        org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition $r7;
        org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition $r1, $r3;
        int $i0, $i1;
        java.lang.Object $r6;
        java.lang.String $r2, $r8;
        org.apache.xmlbeans.impl.piccolo.util.IndexedObject $r4;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition elementDefinition>;

        if $r1 != null goto label1;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void parseCdataLiteral(char,int)>(34, 13);

        goto label4;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition elementDefinition>;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeQName>;

        $r4 = virtualinvoke $r3.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: org.apache.xmlbeans.impl.piccolo.util.IndexedObject getIndexedAttribute(java.lang.String)>($r2);

        if $r4 != null goto label2;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeValueType> = "CDATA";

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void parseCdataLiteral(char,int)>(34, 13);

        goto label4;

     label2:
        $r5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean[] defaultAttributeSpecified>;

        $i0 = interfaceinvoke $r4.<org.apache.xmlbeans.impl.piccolo.util.IndexedObject: int getIndex()>();

        $r5[$i0] = 1;

        $r6 = interfaceinvoke $r4.<org.apache.xmlbeans.impl.piccolo.util.IndexedObject: java.lang.Object getObject()>();

        $r7 = (org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition) $r6;

        $i1 = virtualinvoke $r7.<org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition: int getValueType()>();

        if $i1 != 3 goto label3;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeValueType> = "CDATA";

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void parseCdataLiteral(char,int)>(34, 13);

        goto label4;

     label3:
        $r8 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition: java.lang.String getValueTypeString(int)>($i1);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeValueType> = $r8;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(15);

     label4:
        return;
    }

    private void parseSingleQuotedTagValue() throws org.xml.sax.SAXException, java.io.IOException
    {
        boolean[] $r5;
        org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition $r7;
        org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition $r1, $r3;
        int $i0, $i1;
        java.lang.Object $r6;
        java.lang.String $r2, $r8;
        org.apache.xmlbeans.impl.piccolo.util.IndexedObject $r4;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition elementDefinition>;

        if $r1 != null goto label1;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void parseCdataLiteral(char,int)>(39, 14);

        goto label4;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition elementDefinition>;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeQName>;

        $r4 = virtualinvoke $r3.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: org.apache.xmlbeans.impl.piccolo.util.IndexedObject getIndexedAttribute(java.lang.String)>($r2);

        if $r4 != null goto label2;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeValueType> = "CDATA";

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void parseCdataLiteral(char,int)>(39, 14);

        goto label4;

     label2:
        $r5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean[] defaultAttributeSpecified>;

        $i0 = interfaceinvoke $r4.<org.apache.xmlbeans.impl.piccolo.util.IndexedObject: int getIndex()>();

        $r5[$i0] = 1;

        $r6 = interfaceinvoke $r4.<org.apache.xmlbeans.impl.piccolo.util.IndexedObject: java.lang.Object getObject()>();

        $r7 = (org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition) $r6;

        $i1 = virtualinvoke $r7.<org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition: int getValueType()>();

        if $i1 != 3 goto label3;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeValueType> = "CDATA";

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void parseCdataLiteral(char,int)>(39, 14);

        goto label4;

     label3:
        $r8 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition: java.lang.String getValueTypeString(int)>($i1);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeValueType> = $r8;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(16);

     label4:
        return;
    }

    private void parseCdataLiteral(char, int) throws org.xml.sax.SAXException, java.io.IOException
    {
        java.lang.String $r7, $r8, $r9, $r10, r18, $r19;
        char[] $r1, $r2, $r3, $r4, $r5, $r11, $r12, $r15, $r17;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;
        boolean $z0;
        org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException $r13, $r16;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65;
        org.apache.xmlbeans.impl.piccolo.util.CharStringConverter $r6;
        char c9, c10, $c36;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        c10 := @parameter0: char;

        i6 := @parameter1: int;

        i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

     label01:
        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i3 = $i2 - $i1;

        if $i3 <= 0 goto label23;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i8 = $i7 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i8;

        c9 = $r2[$i7];

        $i58 = (int) c9;

        if $i58 != 38 goto label02;

        $i49 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i50 = $i49 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i50;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void clearCbuf()>();

        $r17 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i51 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i52 = $i51 - 1;

        $i53 = $i52 - i0;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char[],int,int)>($r17, i0, $i53);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState> = i6;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(12);

        return;

     label02:
        $i59 = (int) c9;

        if $i59 != 60 goto label03;

        $r16 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>("Illegal \'<\' found in attribute value. Use \'&lt;\' instead.");

        throw $r16;

     label03:
        $i60 = (int) c9;

        if $i60 <= 39 goto label04;

        $i47 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i48 = $i47 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i48;

        goto label22;

     label04:
        $i61 = (int) c9;

        $i62 = (int) c10;

        if $i61 != $i62 goto label19;

        $i21 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i22 = $i21 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i22;

        $i23 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i24 = $i23 - 1;

        i25 = $i24 - i0;

        if i25 < 4 goto label05;

        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isNamespaceDeclaration>;

        if $z0 == 0 goto label06;

     label05:
        $r6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.CharStringConverter stringConverter>;

        $r5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        r18 = virtualinvoke $r6.<org.apache.xmlbeans.impl.piccolo.util.CharStringConverter: java.lang.String convert(char[],int,int)>($r5, i0, i25);

        goto label07;

     label06:
        $r19 = new java.lang.String;

        $r15 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        specialinvoke $r19.<java.lang.String: void <init>(char[],int,int)>($r15, i0, i25);

        r18 = $r19;

     label07:
        $r10 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeURI>;

        $r9 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeLocalName>;

        $r8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeQName>;

        $r7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeValueType>;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r10, $r9, $r8, $r7, r18);

        $i27 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i26 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i28 = $i27 - $i26;

        if $i28 > 0 goto label08;

        i54 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yynextChar()>();

        goto label09;

     label08:
        $r11 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i29 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i30 = $i29 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i30;

        i54 = $r11[$i29];

     label09:
        lookupswitch(i54)
        {
            case 9: goto label10;
            case 10: goto label11;
            case 32: goto label10;
            case 47: goto label12;
            case 62: goto label12;
            default: goto label13;
        };

     label10:
        $i45 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i46 = $i45 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i46;

        goto label14;

     label11:
        $i33 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next>;

        $i34 = $i33 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = $i34;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = 0;

        goto label14;

     label12:
        $i31 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i32 = $i31 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i32;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean endOfTag> = 1;

        return;

     label13:
        $r13 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>("Whitespace missing after attribute value");

        throw $r13;

     label14:
        $i55 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i56 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i57 = $i55 - $i56;

        if $i57 <= 0 goto label18;

        $r12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i35 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $c36 = $r12[$i35];

        $i63 = (int) $c36;

        lookupswitch($i63)
        {
            case 9: goto label15;
            case 10: goto label16;
            case 32: goto label15;
            default: goto label17;
        };

     label15:
        $i41 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i42 = $i41 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i42;

        $i43 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i44 = $i43 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i44;

        goto label14;

     label16:
        $i37 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i38 = $i37 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i38;

        $i39 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next>;

        $i40 = $i39 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = $i40;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = 0;

        goto label14;

     label17:
        return;

     label18:
        return;

     label19:
        $i64 = (int) c9;

        if $i64 != 9 goto label20;

        $i17 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i18 = $i17 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i18;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i19 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i20 = $i19 - 1;

        $r4[$i20] = 32;

        goto label22;

     label20:
        $i65 = (int) c9;

        if $i65 != 10 goto label21;

        $i13 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next>;

        $i14 = $i13 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = $i14;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = 0;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i15 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i16 = $i15 - 1;

        $r3[$i16] = 32;

        goto label22;

     label21:
        $i11 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i12 = $i11 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i12;

     label22:
        goto label01;

     label23:
        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void clearCbuf()>();

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i5 = $i4 - i0;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char[],int,int)>($r1, i0, $i5);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState> = i6;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(i6);

        return;
    }

    private void parseEncodedChar(char[], int, int, int) throws java.io.CharConversionException
    {
        java.lang.ClassCastException $r3;
        int i0, $i2, $i3, $i5, $i6, i8, i9, $i10, $i12, $i13, i14, i15, i16, $i18, $i20, $i22, $i24, $i26;
        char $c1, $c4, $c7, $c11;
        org.apache.xmlbeans.impl.piccolo.io.IllegalCharException $r6, $r7;
        java.io.CharConversionException $r8;
        char[] r2;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r2 := @parameter0: char[];

        i9 := @parameter1: int;

        i0 := @parameter2: int;

        i8 := @parameter3: int;

     label01:
        i14 = 0;

        i15 = 0;

     label02:
        if i15 >= i0 goto label03;

        $i12 = i14 * i8;

        $i10 = i9 + i15;

        $c11 = r2[$i10];

        $i13 = staticinvoke <java.lang.Character: int digit(char,int)>($c11, i8);

        i14 = $i12 + $i13;

        i15 = i15 + 1;

        goto label02;

     label03:
        if i14 < 1114112 goto label04;

        $r6 = new org.apache.xmlbeans.impl.piccolo.io.IllegalCharException;

        specialinvoke $r6.<org.apache.xmlbeans.impl.piccolo.io.IllegalCharException: void <init>(java.lang.String)>("Character reference to illegal XML character");

        throw $r6;

     label04:
        if i14 < 65536 goto label05;

        i16 = i14 - 65536;

        $i2 = i16 >> 10;

        $i18 = (int) 55296;

        $i3 = $i2 + $i18;

        $c4 = (char) $i3;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char)>($c4);

        $i5 = i16 & 1023;

        $i20 = (int) 56320;

        $i6 = $i5 + $i20;

        $c7 = (char) $i6;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char)>($c7);

        goto label10;

     label05:
        if i14 >= 32 goto label06;

        if i14 == 9 goto label06;

        if i14 == 13 goto label06;

        if i14 != 10 goto label08;

     label06:
        $i22 = (int) 55296;

        if i14 < $i22 goto label07;

        $i24 = (int) 57344;

        if i14 < $i24 goto label08;

     label07:
        $i26 = (int) 65534;

        if i14 < $i26 goto label09;

     label08:
        $r7 = new org.apache.xmlbeans.impl.piccolo.io.IllegalCharException;

        specialinvoke $r7.<org.apache.xmlbeans.impl.piccolo.io.IllegalCharException: void <init>(java.lang.String)>("Character reference to illegal XML character");

        throw $r7;

     label09:
        $c1 = (char) i14;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char)>($c1);

     label10:
        goto label12;

     label11:
        $r3 := @caughtexception;

        $r8 = new java.io.CharConversionException;

        specialinvoke $r8.<java.io.CharConversionException: void <init>()>();

        throw $r8;

     label12:
        return;

        catch java.lang.ClassCastException from label01 to label10 with label11;
    }

    private void prepareComplexElement(java.lang.String)
    {
        org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition $r2, $r3, $r4;
        int $i0, i1, $i2, $i3, $i4, $i5, i6, $i7;
        java.lang.String r1;
        boolean[] $r5, $r6, $r7;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isNamespaceDeclaration> = 0;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition getElement(java.lang.String)>(r1);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition elementDefinition> = $r2;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition elementDefinition>;

        if $r3 == null goto label4;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition elementDefinition>;

        $i0 = virtualinvoke $r4.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: int getAttributeCount()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int numAttributesDefined> = $i0;

        $r5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean[] defaultAttributeSpecified>;

        i1 = lengthof $r5;

        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int numAttributesDefined>;

        if i1 >= $i2 goto label1;

        $i4 = 2 * i1;

        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int numAttributesDefined>;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i3);

        $r7 = newarray (boolean)[$i5];

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean[] defaultAttributeSpecified> = $r7;

     label1:
        i6 = 0;

     label2:
        $i7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int numAttributesDefined>;

        if i6 >= $i7 goto label3;

        $r6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean[] defaultAttributeSpecified>;

        $r6[i6] = 0;

        i6 = i6 + 1;

        goto label2;

     label3:
        goto label5;

     label4:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeValueType> = "CDATA";

     label5:
        return;
    }

    private void processComplexElement() throws org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder $r7;
        boolean[] $r4;
        org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition r5;
        org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition $r1, $r2;
        org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition[] $r3;
        int $i0, i1;
        java.lang.String $r6, $r8, $r9, $r10, $r11;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition elementDefinition>;

        if $r1 == null goto label3;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition elementDefinition>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition[] getAttributes()>();

        i1 = 0;

     label1:
        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int numAttributesDefined>;

        if i1 >= $i0 goto label3;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean[] defaultAttributeSpecified>;

        $z0 = $r4[i1];

        if $z0 != 0 goto label2;

        r5 = $r3[i1];

        $r6 = virtualinvoke r5.<org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition: java.lang.String getDefaultValue()>();

        if $r6 == null goto label2;

        $r7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder attribs>;

        $r8 = virtualinvoke r5.<org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition: java.lang.String getPrefix()>();

        $r9 = virtualinvoke r5.<org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition: java.lang.String getLocalName()>();

        $r10 = virtualinvoke r5.<org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition: java.lang.String getQName()>();

        $r11 = virtualinvoke r5.<org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition: java.lang.String getValueTypeString()>();

        virtualinvoke $r7.<org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r8, $r9, $r10, $r11, $r6);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private void processNSContextEnd() throws org.xml.sax.SAXException
    {
        org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport $r1, $r2, $r3;
        int $i0, i1;
        org.apache.xmlbeans.impl.piccolo.xml.Piccolo $r4;
        java.lang.String $r5;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport nsSupport>;

        $i0 = virtualinvoke $r1.<org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport: int getContextSize()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport nsSupport>;

        $r5 = virtualinvoke $r3.<org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport: java.lang.String getContextPrefix(int)>(i1);

        virtualinvoke $r4.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportEndPrefixMapping(java.lang.String)>($r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport nsSupport>;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport: void popContext()>();

        return;
    }

    private void addAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder $r4, $r11;
        org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport $r7, $r9;
        java.lang.String r1, r2, r3, r12, r13;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.piccolo.xml.Piccolo $r5, $r6, $r8, $r10;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r1 := @parameter0: java.lang.String;

        r12 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r13 := @parameter4: java.lang.String;

        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean needsNormalization>;

        if $z0 == 0 goto label1;

        r13 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String normalizeValue(java.lang.String)>(r13);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean needsNormalization> = 0;

     label1:
        $z1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isNamespaceDeclaration>;

        if $z1 == 0 goto label5;

        $r5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $z2 = $r5.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: boolean fNamespaces>;

        if $z2 == 0 goto label5;

        $r6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $z3 = $r6.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: boolean fNamespacePrefixes>;

        if $z3 == 0 goto label2;

        $r11 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder attribs>;

        virtualinvoke $r11.<org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder: void addAndCheckAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r12, r2, r3, r13);

     label2:
        if r1 != "" goto label4;

        if r12 != "xmlns" goto label3;

        r12 = "";

     label3:
        $r9 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport nsSupport>;

        virtualinvoke $r9.<org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport: void declarePrefix(java.lang.String,java.lang.String)>(r12, r13);

        $r10 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        virtualinvoke $r10.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportStartPrefixMapping(java.lang.String,java.lang.String)>(r12, r13);

        goto label6;

     label4:
        if r1 == "xml" goto label6;

        $r7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport nsSupport>;

        virtualinvoke $r7.<org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport: void declarePrefix(java.lang.String,java.lang.String)>(r12, r13);

        $r8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        virtualinvoke $r8.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportStartPrefixMapping(java.lang.String,java.lang.String)>(r12, r13);

        goto label6;

     label5:
        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder attribs>;

        virtualinvoke $r4.<org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder: void addAndCheckAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r12, r2, r3, r13);

     label6:
        return;
    }

    private void processSimpleElement(java.lang.String) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder $r9;
        org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition r7;
        org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition $r2, $r3, $r4, $r6;
        int $i0, i1;
        java.lang.String r1, $r8, $r10, $r11, $r12, $r13;
        org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition[] $r5;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition getElement(java.lang.String)>(r1);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition elementDefinition> = $r2;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition elementDefinition>;

        if $r3 == null goto label3;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition elementDefinition>;

        $r5 = virtualinvoke $r4.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition[] getAttributes()>();

        $r6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition elementDefinition>;

        $i0 = virtualinvoke $r6.<org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition: int getAttributeCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label3;

        r7 = $r5[i1];

        $r8 = virtualinvoke r7.<org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition: java.lang.String getDefaultValue()>();

        if $r8 == null goto label2;

        $r9 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder attribs>;

        $r10 = virtualinvoke r7.<org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition: java.lang.String getPrefix()>();

        $r11 = virtualinvoke r7.<org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition: java.lang.String getLocalName()>();

        $r12 = virtualinvoke r7.<org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition: java.lang.String getQName()>();

        $r13 = virtualinvoke r7.<org.apache.xmlbeans.impl.piccolo.xml.AttributeDefinition: java.lang.String getValueTypeString()>();

        virtualinvoke $r9.<org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r10, $r11, $r12, $r13, $r8);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    java.lang.String rescanAttributeValue(java.lang.String) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException $r6;
        int $i0, $i1, $i2, $i3;
        char[] $r2, $r3;
        java.lang.String r1, $r5;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;
        org.apache.xmlbeans.impl.piccolo.util.CharStringConverter $r4;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void clearCbuf()>();

        $r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        $i0 = lengthof $r2;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yypushBuffer(char[],int,int)>($r2, 0, $i0);

        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yystate()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void pushEntityState(java.lang.String,boolean,boolean,int)>(null, 0, 1, $i1);

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(11);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isEntityBeingParsed> = 0;

        $i2 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylex()>();

        if $i2 == 294 goto label1;

        $r6 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>("Unexpected element while parsing attribute default value");

        throw $r6;

     label1:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isEntityBeingParsed> = 1;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.CharStringConverter stringConverter>;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cbuf>;

        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cbuflen>;

        $r5 = virtualinvoke $r4.<org.apache.xmlbeans.impl.piccolo.util.CharStringConverter: java.lang.String convert(char[],int,int)>($r3, 0, $i3);

        return $r5;
    }

    private void resolveNamespacePrefixes()
    {
        org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder $r4, $r5, $r9;
        org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport $r2, $r7;
        int $i0, i1;
        java.lang.String $r1, $r3, $r6, $r8;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport nsSupport>;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport: java.lang.String getURI(java.lang.String)>($r1);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI> = $r3;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder attribs>;

        $i0 = virtualinvoke $r4.<org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder: int getLength()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label3;

        $r5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder attribs>;

        $r6 = virtualinvoke $r5.<org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder: java.lang.String getURI(int)>(i1);

        if $r6 == "" goto label2;

        $r7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport nsSupport>;

        $r8 = virtualinvoke $r7.<org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport: java.lang.String getURI(java.lang.String)>($r6);

        if $r8 == "" goto label2;

        $r9 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder attribs>;

        virtualinvoke $r9.<org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder: void setURI(int,java.lang.String)>(i1, $r8);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private void checkEndTag(java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xmlbeans.impl.piccolo.util.StringStack $r1, $r3;
        java.lang.StringBuffer $r5, $r6, $r7, $r8, $r9, $r10;
        org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException $r12;
        int $i0, $i1;
        java.lang.String $r2, r4, $r11;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.StringStack tagStack>;

        $r2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.piccolo.util.StringStack: java.lang.String pop()>();

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.StringStack tagStack>;

        $i0 = virtualinvoke $r3.<org.apache.xmlbeans.impl.piccolo.util.StringStack: int size()>();

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int entityBaseDepth>;

        if $i0 != $i1 goto label1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void setTokenize(boolean)>(1);

     label1:
        if $r2 == r4 goto label2;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("> does not close tag <");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        $r12 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>($r11);

        throw $r12;

     label2:
        return;
    }

    private java.lang.String yytext2()
    {
        int $i0, $i1, $i2, $i3;
        char[] $r1;
        java.lang.String $r3;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;
        org.apache.xmlbeans.impl.piccolo.util.CharStringConverter $r2;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.CharStringConverter stringConverter>;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i2 = $i1 - $i0;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.piccolo.util.CharStringConverter: java.lang.String convert(char[],int,int)>($r1, $i3, $i2);

        return $r3;
    }

    private java.lang.String yytext2(int, int)
    {
        int i0, $i1, i2, $i3;
        char[] $r1;
        java.lang.String $r3;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;
        org.apache.xmlbeans.impl.piccolo.util.CharStringConverter $r2;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.CharStringConverter stringConverter>;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i3 = $i1 + i0;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.piccolo.util.CharStringConverter: java.lang.String convert(char[],int,int)>($r1, $i3, i2);

        return $r3;
    }

    private org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException $r0;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r2;

        r2 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException;

        specialinvoke $r0.<org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException: void <init>(java.lang.String)>(r1);

        return $r0;
    }

    private org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String, java.lang.Exception)
    {
        org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException $r0;
        java.lang.String r1;
        java.lang.Exception r2;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r3;

        r3 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Exception;

        $r0 = new org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException;

        specialinvoke $r0.<org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException: void <init>(java.lang.String,java.lang.Exception)>(r1, r2);

        return $r0;
    }

    private void safeBacktrack()
    {
        char $c2;
        int $i0, $i1, $i3, $i4, $i5;
        char[] $r1;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i1 = $i0 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i1;

        $c2 = $r1[$i1];

        $i5 = (int) $c2;

        if $i5 != 10 goto label1;

        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next>;

        $i4 = $i3 - 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = $i4;

     label1:
        return;
    }

    void <init>(java.io.Reader)
    {
        org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder $r21;
        java.util.HashMap $r25;
        org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport $r26;
        java.util.Stack $r17, $r20;
        org.apache.xmlbeans.impl.piccolo.xml.EntityManager $r19;
        org.apache.xmlbeans.impl.piccolo.util.StringStack $r23, $r24;
        int $i1, $i3;
        org.apache.xmlbeans.impl.piccolo.util.CharStringConverter $r18;
        boolean[] $r14;
        org.apache.xmlbeans.impl.piccolo.util.LongStack $r22;
        java.io.Reader r16;
        char[] $r1, $r2, $r8, $r9;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r16 := @parameter0: java.io.Reader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_lexical_state> = 0;

        $r1 = newarray (char)[16384];

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer> = $r1;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_saved_buffer> = $r2;

        $i1 = (int) -1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_savePos> = $i1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_atBOL> = 1;

        $r17 = new java.util.Stack;

        specialinvoke $r17.<java.util.Stack: void <init>()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.util.Stack yy_streams> = $r17;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser> = null;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity> = null;

        $r18 = new org.apache.xmlbeans.impl.piccolo.util.CharStringConverter;

        specialinvoke $r18.<org.apache.xmlbeans.impl.piccolo.util.CharStringConverter: void <init>(int)>(200);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.CharStringConverter stringConverter> = $r18;

        $r19 = new org.apache.xmlbeans.impl.piccolo.xml.EntityManager;

        specialinvoke $r19.<org.apache.xmlbeans.impl.piccolo.xml.EntityManager: void <init>()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.EntityManager entityManager> = $r19;

        $r20 = new java.util.Stack;

        specialinvoke $r20.<java.util.Stack: void <init>()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.util.Stack entityStack> = $r20;

        $r21 = new org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder;

        specialinvoke $r21.<org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder: void <init>()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder attribs> = $r21;

        $r8 = newarray (char)[1024];

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cbuf> = $r8;

        $r9 = newarray (char)[1];

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] oneCharBuffer> = $r9;

        $r22 = new org.apache.xmlbeans.impl.piccolo.util.LongStack;

        specialinvoke $r22.<org.apache.xmlbeans.impl.piccolo.util.LongStack: void <init>(int)>(5);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.LongStack entityStateStack> = $r22;

        $r23 = new org.apache.xmlbeans.impl.piccolo.util.StringStack;

        specialinvoke $r23.<org.apache.xmlbeans.impl.piccolo.util.StringStack: void <init>(int)>(2);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.StringStack entityNameStack> = $r23;

        $r24 = new org.apache.xmlbeans.impl.piccolo.util.StringStack;

        specialinvoke $r24.<org.apache.xmlbeans.impl.piccolo.util.StringStack: void <init>(int)>(20);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.StringStack tagStack> = $r24;

        $r25 = new java.util.HashMap;

        specialinvoke $r25.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.util.HashMap elementMap> = $r25;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.ElementDefinition elementDefinition> = null;

        $i3 = (int) -1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tokenStartColumn> = $i3;

        $r14 = newarray (boolean)[4];

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean[] defaultAttributeSpecified> = $r14;

        $r26 = new org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport;

        specialinvoke $r26.<org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport: void <init>()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport nsSupport> = $r26;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_sawCR> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_prev_sawCR> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.io.Reader yy_reader> = r16;

        return;
    }

    void <init>(java.io.InputStream)
    {
        java.io.InputStreamReader $r1;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;
        java.io.InputStream r2;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r2 := @parameter0: java.io.InputStream;

        $r1 = new java.io.InputStreamReader;

        specialinvoke $r1.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r2);

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void <init>(java.io.Reader)>($r1);

        return;
    }

    private static int[] yy_unpack()
    {
        int[] r0;

        r0 = newarray (int)[21172];

        staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_unpack(java.lang.String,int,int[])>("\u0001\'\u0001(\u0004\'\u0001(\u0003\'\u0001)\u0001*\u0004\'\u0001()\'\u0001(\u0008\'\f+\u0001,6+\n-\u0001)\u0001*7-\u0003.\u0002/\u0002.\u0001/\u0005.\u0002/\u00010\u0001.\u0003/\u0005.\u0008/\u0002.\u0005/\u0001.\u0003/\u00011\u0002/\u0008.\u0002/\u0002.\u00012\u0001/\u00013\u0003/\u00014\u0001/\f5\u0001665\u0001.\u00017\u0004.\u00017\u0005.\u00018\u0003.\u00017).\u00017\t.\u00019\u0001.\u0002:\u0001.\u00019\u0001:\u0005.\u0003:\u00019\u0003:\u0001;\u0004.\u0008:\u0002.\u0005:\u0001.\u0003:\u0001.\u0002:\u0007.\u0001<\u0002:\u0001.\u00019\u0008:\u0003.\u0002=\u0002.\u0001=\u0004.\u0001>\u0003=\u0001.\u0003=\u0004.\u0001?\u0008=\u0002.\u0005=\u0001.\u0003=\u0001.\u0002=\u0007.\u0001@\u0002=\u0002.\u0008=\u0001.\u00019\u0001.\u0001A\u0001B\u0001.\u00019\u0001B\u0005.\u0001C\u0002B\u00019\u0003B\u0001D\u0004.\u0008B\u0002.\u0005B\u0001.\u0003B\u0001.\u0002B\u0007.\u0001E\u0002B\u0001.\u00019\u0008B\u0003.\u0001F\u0001G\u0002.\u0001G\u0004.\u0001>\u0003G\u0001.\u0003G\u0004.\u0001?\u0008G\u0002.\u0005G\u0001.\u0003G\u0001.\u0002G\u0007.\u0001H\u0002G\u0002.\u0008G\u0001.\u0001I\u0004.\u0001I\t.\u0001I(.\u0001J\u0001I\u0008.\u0001K\u0001L\u0004K\u0001L\u0003K\u0001.\u0001M.K\u0001L\u0008K\u0003.\u0002N\u0002.\u0001N\u0005.\u0002N\u0001O\u0001.\u0003N\u0005.\u0008N\u0002.\u0005N\u0001.\u0003N\u0001P\u0002N\u0008.\u0002N\u0002.\u0001Q\u0001N\u0001R\u0003N\u0001S\u0001N\u0001T\u0001U\u0004T\u0001U\u0003T\u0001.\u0001V(T\u0001W\u0005T\u0001U\u0008T\u0001X\u0001U\u0004X\u0001U\u0003X\u0001.\u0001V)X\u0001W\u0004X\u0001U\u0008X\u0001Y\u0001Z\u0004Y\u0001Z\u0003Y\u0001.\u0001[\u0004Y\u0001Z#Y\u0001\\\u0005Y\u0001Z\u0008Y\u0001]\u0001^\u0004]\u0001^\u0003]\u0001.\u0001_\u0004]\u0001^$]\u0001\\\u0004]\u0001^\u0008]\u0001`\u0001a\u0004`\u0001a\u0003`\u0001.\u0001b\u0004`\u0001a#`\u0001c\u0005`\u0001a\u0008`\u0001d\u0001e\u0004d\u0001e\u0003d\u0001.\u0001b\u0004d\u0001e$d\u0001c\u0004d\u0001e\u0008d\u0001.\u0001f\u0004.\u0001f\t.\u0001f\u0003.\u0001g%.\u0001f\t.\u0001h\u0004.\u0001h\t.\u0001h\u0003.\u0001i%.\u0001h\t.\u0001j\u0004.\u0001j\u0003.\u0001k\u0005.\u0001j\u0004.\u0001l\u0001.\u0001m\".\u0001j\t.\u0001j\u0001.\u0002n\u0001.\u0001j\u0001n\u0005.\u0003n\u0001j\u0003n\u0001.\u0001o\u0003.\u0008n\u0002.\u0005n\u0001.\u0003n\u0001.\u0002n\u0008.\u0002n\u0001.\u0001j\u0008n\u0001.\u0001j\u0001.\u0001p\u0001q\u0001.\u0001j\u0001q\u0005.\u0003q\u0001j\u0003q\u0001r\u0001o\u0003.\u0008q\u0002.\u0005q\u0001.\u0003q\u0001.\u0002q\u0008.\u0002q\u0001.\u0001j\u0008q\u0001.\u0001j\u0004.\u0001j\t.\u0001j\u0004.\u0001o\u0003.\u0001s\u0001t\u0001.\u0001u\u0006.\u0001v\u0004.\u0001w\u0011.\u0001j\t.\u0001j\u0001.\u0002x\u0001.\u0001j\u0001x\u0005.\u0003x\u0001j\u0003x\u0001.\u0001y\u0003.\u0008x\u0002.\u0005x\u0001.\u0003x\u0001.\u0002x\u0008.\u0002x\u0001.\u0001j\u0008x\u0001.\u0001j\u0003z\u0001.\u0001j\u0003z\u0003.\u0003z\u0001j\u0003z\u0001.\u0001o\u0003.\tz\u0001.\u0005z\u0001.\u0003z\u0001.\u0002z\u0001{\u0003.\u0001|\u0003.\u0002z\u0001.\u0001j\u0008z!}\u0001~!}\n\u007f\u0001\u0080\f\u007f\u0001\u0081+\u007f\u0001.\u0001j\u0004.\u0001j\t.\u0001j#.\u0001\u0082\u0001\u0083\u0004.\u0001j\t.\u0001\u0084\u0001.\u0002z\u0001.\u0001\u0084\u0001z\u0004.\u0001\u0085\u0003z\u0001\u0084\u0003z\u0001r\u0001o\u0003.\u0001\u0086\u0001\u0087\u0001z\u0001\u0088\u0001z\u0001\u0089\u0001\u008a\u0001z\u0001.\u0001\u008b\u0005z\u0001\u008c\u0001\u008d\u0002z\u0001\u008e\u0002z\u0001\u008f\u0001\u0090\u0001\u0091\u0001\u0092\u0001|\u0001\u0093\u0001\u0094\u0001.\u0002z\u0001.\u0001\u0084\u0008z\f.\u0001\u0095\u000b.\u0001\u0096*.\u000b\u0097\u0001\u0098\t\u0097\u0001\u0099-\u0097\u0001\u009a\u0001\u009b\u0004\u009a\u0001\u009c\t\u009a\u0001\u009b)\u009a\u0001\u009b\u0008\u009a\u000b\u009d\u0001\u009e\t\u009d\u0001\u009f\u001e\u009d\u0001\u00a0\u000e\u009d\u000b\u00a1\u0001\u009e\t\u00a1\u0001\u009f\u001f\u00a1\u0001\u00a0\r\u00a1\u0003.\u0002\u00a2\u0002.\u0001\u00a2\u0005.\u0003\u00a2\u0001.\u0003\u00a2\u0005.\u0008\u00a2\u0002.\u0005\u00a2\u0001.\u0003\u00a2\u0001P\u0002\u00a2\u0008.\u0002\u00a2\u0002.\u0008\u00a2\u0003.\u0002\u00a3\u0002.\u0001\u00a3\u0005.\u0003\u00a3\u0001.\u0003\u00a3\u0005.\u0008\u00a3\u0002.\u0005\u00a3\u0001.\u0003\u00a3\u0001.\u0002\u00a3\u0008.\u0002\u00a3\u0002.\u0008\u00a3C\u0000\f\u00a4\u0001\u00a5B\u00a4\u0001\u00a5\u0007\u00a4\u0001\u00a6.\u00a4\u0002\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u00a8\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0008\u00a7\u0002\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u00a8\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0005\u00a7\u0001\u00a9\u0002\u00a7\t\u0000\u0001\u00aa\u0003\u0000\u0001\u00ab7\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0001\u00a7\u0001\u00ac\u0001\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u00a8\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0001\u00a7\u0001\u00ad\u0006\u00a7\u0002\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u00a8\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0003\u00a7\u0001\u00ae\u0004\u00a7\u0002\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u00a8\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0005\u00a7\u0001\u00af\u0002\u00a7\f\u00b0\u0001\u00b1B\u00b0\u0001\u00b1\u0007\u00b0\u0001\u00b2.\u00b0\u0001\u0000\u00017\u0004\u0000\u00017\t\u0000\u00017)\u0000\u00017\u001c\u0000\u0001\u00b3/\u0000\u00019\u0004\u0000\u00019\t\u0000\u00019)\u0000\u00019\n\u0000\u0003:\u0002\u0000\u0003:\u0003\u0000\u0003:\u0001\u0000\u0003:\u0005\u0000\t:\u0001\u0000\u0005:\u0001\u0000\u0003:\u0001\u0000\u0002:\u0008\u0000\u0002:\u0002\u0000\u0008:\u0014\u0000\u0001\u00b40\u0000\u0003=\u0002\u0000\u0003=\u0003\u0000\u0003=\u0001\u0000\u0003=\u0005\u0000\t=\u0001\u0000\u0005=\u0001\u0000\u0003=\u0001\u0000\u0002=\u0008\u0000\u0002=\u0002\u0000\u0008=\u0003\u0000\u0002\u00b5\u0002\u0000\u0001\u00b5\u0005\u0000\u0001\u00b6\u0002\u00b5\u0001\u0000\u0001\u00b7\u0002\u00b5\u0005\u0000\u0008\u00b5\u0002\u0000\u0005\u00b5\u0001\u0000\u0003\u00b5\u0001\u0000\u0002\u00b5\u0008\u0000\u0002\u00b5\u0002\u0000\u0008\u00b5!\u0000\u0001\u00b8\u0001\u00b9\u0001\u0000\u0001\u00ba!\u0000\u0002\u00bb\u0002\u0000\u0001\u00bb\u0005\u0000\u0003\u00bb\u0001\u0000\u0003\u00bb\u0005\u0000\u0008\u00bb\u0002\u0000\u0005\u00bb\u0001\u0000\u0003\u00bb\u0001\u0000\u0002\u00bb\u0008\u0000\u0002\u00bb\u0002\u0000\u0008\u00bb\u0002\u0000\u0003A\u0002\u0000\u0003A\u0003\u0000\u0003A\u0001\u0000\u0003A\u0005\u0000\tA\u0001\u0000\u0005A\u0001\u0000\u0003A\u0001\u0000\u0002A\u0008\u0000\u0002A\u0002\u0000\u0008A\u0002\u0000\u0001B\u0001\u00bc\u0001B\u0002\u0000\u0003B\u0003\u0000\u0003B\u0001\u0000\u0003B\u0005\u0000\tB\u0001\u0000\u0005B\u0001\u0000\u0003B\u0001\u0000\u0002B\u0008\u0000\u0002B\u0002\u0000\u0008B\u0002\u0000\u0001B\u0001\u00bc\u0001B\u0002\u0000\u0003B\u0003\u0000\u0001B\u0001\u00bd\u0001B\u0001\u0000\u0003B\u0005\u0000\tB\u0001\u0000\u0005B\u0001\u0000\u0003B\u0001\u0000\u0002B\u0008\u0000\u0002B\u0002\u0000\u0008B\u0014\u0000\u0001\u00be0\u0000\u0003F\u0002\u0000\u0003F\u0003\u0000\u0003F\u0001\u0000\u0003F\u0005\u0000\tF\u0001\u0000\u0005F\u0001\u0000\u0003F\u0001\u0000\u0002F\u0008\u0000\u0002F\u0002\u0000\u0008F\u0002\u0000\u0001G\u0001\u00bf\u0001G\u0002\u0000\u0003G\u0003\u0000\u0003G\u0001\u0000\u0003G\u0005\u0000\tG\u0001\u0000\u0005G\u0001\u0000\u0003G\u0001\u0000\u0002G\u0008\u0000\u0002G\u0002\u0000\u0008G\u0003\u0000\u0001\u00c0\u0001\u00c1\u0002\u0000\u0001\u00c1\u0005\u0000\u0003\u00c1\u0001\u0000\u0003\u00c1\u0005\u0000\u0008\u00c1\u0002\u0000\u0005\u00c1\u0001\u0000\u0003\u00c1\u0001\u0000\u0002\u00c1\u0008\u0000\u0002\u00c1\u0002\u0000\u0008\u00c1\u0001\u0000\u0001\u00c2\u0004\u0000\u0001\u00c2\t\u0000\u0001\u00c2(\u0000\u0001\u00c3\u0001\u00c2\t\u0000\u0001\u00c3\u0004\u0000\u0001\u00c3\t\u0000\u0001\u00c3#\u0000\u0001\u00c4\u0001\u00c5\u0004\u0000\u0001\u00c3\u0008\u0000\u0001K\u0001\u0000\u0004K\u0001\u0000\u0003K\u0002\u0000.K\u0001\u0000\u0008K\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u00c7\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0008\u00c6\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u00c7\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0005\u00c6\u0001\u00c8\u0002\u00c6\t\u0000\u0001\u00c9\u0003\u0000\u0001\u00ca7\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0001\u00c6\u0001\u00cb\u0001\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u00c7\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0001\u00c6\u0001\u00cc\u0006\u00c6\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u00c7\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0003\u00c6\u0001\u00cd\u0004\u00c6\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u00c7\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0005\u00c6\u0001\u00ce\u0002\u00c6\u0001T\u0001\u0000\u0004T\u0001\u0000\u0003T\u0002\u0000(T\u0001\u0000\u0005T\u0001\u0000\u0008T\u0001\u0000\u0001U\u0004\u0000\u0001U3\u0000\u0001U\t\u0000\u0001\u00cf\u0004\u0000\u0001\u00cf\t\u0000\u0001\u00cf\u0003\u0000\u0001\u00cf!\u0000\u0001\u00cf\u0003\u0000\u0001\u00cf\u0008\u0000\u0001X\u0001\u0000\u0004X\u0001\u0000\u0003X\u0002\u0000)X\u0001\u0000\u0004X\u0001\u0000\u0008X\u0001Y\u0001\u0000\u0004Y\u0001\u0000\u0003Y\u0002\u0000\u0004Y\u0001\u0000#Y\u0001\u0000\u0005Y\u0001\u0000\u0008Y\u0001\u0000\u0001Z\u0004\u0000\u0001Z\t\u0000\u0001Z#\u0000\u0001\u00d0\u0005\u0000\u0001Z\t\u0000\u0001\u00d1\u0004\u0000\u0001\u00d1\t\u0000\u0001\u00d1\u0003\u0000\u0001\u00d1!\u0000\u0001\u00d1\u0003\u0000\u0001\u00d1\u0008\u0000\u0001]\u0001\u0000\u0004]\u0001\u0000\u0003]\u0002\u0000\u0004]\u0001\u0000$]\u0001\u0000\u0004]\u0001\u0000\u0008]\u0001\u0000\u0001^\u0004\u0000\u0001^\t\u0000\u0001^$\u0000\u0001\u00d0\u0004\u0000\u0001^\u0008\u0000\u0001`\u0001\u0000\u0004`\u0001\u0000\u0003`\u0002\u0000\u0004`\u0001\u0000#`\u0001\u0000\u0005`\u0001\u0000\u0008`\u0001\u0000\u0001a\u0004\u0000\u0001a\t\u0000\u0001a#\u0000\u0001\u00d2\u0005\u0000\u0001a\t\u0000\u0001\u00d3\u0004\u0000\u0001\u00d3\t\u0000\u0001\u00d3\u0003\u0000\u0001\u00d3!\u0000\u0001\u00d3\u0003\u0000\u0001\u00d3\u0008\u0000\u0001d\u0001\u0000\u0004d\u0001\u0000\u0003d\u0002\u0000\u0004d\u0001\u0000$d\u0001\u0000\u0004d\u0001\u0000\u0008d\u0001\u0000\u0001e\u0004\u0000\u0001e\t\u0000\u0001e$\u0000\u0001\u00d2\u0004\u0000\u0001e\t\u0000\u0001\u00d4\u0004\u0000\u0001\u00d4\t\u0000\u0001\u00d4\u0003\u0000\u0001g%\u0000\u0001\u00d4\t\u0000\u0001\u00d5\u0004\u0000\u0001\u00d5\t\u0000\u0001\u00d5\u0003\u0000\u0001i%\u0000\u0001\u00d5\t\u0000\u0001j\u0004\u0000\u0001j\t\u0000\u0001j)\u0000\u0001j\u000b\u0000\u0002\u00d6\u0002\u0000\u0001\u00d6\u0005\u0000\u0003\u00d6\u0001\u0000\u0003\u00d6\u0005\u0000\u0008\u00d6\u0002\u0000\u0005\u00d6\u0001\u0000\u0003\u00d6\u0001\u0000\u0002\u00d6\u0008\u0000\u0002\u00d6\u0002\u0000\u0008\u00d6\u0001\u0000\u0001\u00d7\u0004\u0000\u0001\u00d7\t\u0000\u0001\u00d7\u0003\u0000\u0001\u00d8\u0002\u0000\u0001\u00d9\"\u0000\u0001\u00d7\n\u0000\u0003n\u0002\u0000\u0003n\u0003\u0000\u0003n\u0001\u0000\u0003n\u0005\u0000\tn\u0001\u0000\u0005n\u0001\u0000\u0003n\u0001\u0000\u0002n\u0008\u0000\u0002n\u0002\u0000\u0008n\u0003\u0000\u0002\u00da\u0002\u0000\u0001\u00da\u0005\u0000\u0003\u00da\u0001\u0000\u0003\u00da\u0005\u0000\u0008\u00da\u0002\u0000\u0005\u00da\u0001\u0000\u0003\u00da\u0001\u0000\u0002\u00da\u0008\u0000\u0002\u00da\u0002\u0000\u0008\u00da\u0002\u0000\u0003p\u0002\u0000\u0003p\u0003\u0000\u0003p\u0001\u0000\u0003p\u0005\u0000\tp\u0001\u0000\u0005p\u0001\u0000\u0003p\u0001\u0000\u0002p\u0008\u0000\u0002p\u0002\u0000\u0008p\u0002\u0000\u0001q\u0001\u00db\u0001q\u0002\u0000\u0003q\u0003\u0000\u0003q\u0001\u0000\u0003q\u0005\u0000\tq\u0001\u0000\u0005q\u0001\u0000\u0003q\u0001\u0000\u0002q\u0008\u0000\u0002q\u0002\u0000\u0008q\u001a\u0000\u0001\u00dc:\u0000\u0001\u00dd\r\u0000\u0001\u00deF\u0000\u0001\u00dfB\u0000\u0001\u00e0 \u0000\u0003x\u0002\u0000\u0003x\u0003\u0000\u0003x\u0001\u0000\u0003x\u0005\u0000\tx\u0001\u0000\u0005x\u0001\u0000\u0003x\u0001\u0000\u0002x\u0008\u0000\u0002x\u0002\u0000\u0008x\u0001\u0000\u0001\u00e1\u0001\u0000\u0002\u00da\u0002\u0000\u0001\u00da\u0005\u0000\u0003\u00da\u0001\u00e1\u0003\u00da\u0005\u0000\u0008\u00da\u0002\u0000\u0005\u00da\u0001\u0000\u0003\u00da\u0001\u0000\u0002\u00da\u0008\u0000\u0002\u00da\u0001\u0000\u0001\u00e1\u0008\u00da\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\tz\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z!\u00e2\u0001\u00e3B\u00e2\u0001\u00e4!\u00e2\n\u007f\u0001\u0000\f\u007f\u0001\u0000+\u007f\u0018\u0000\u0001\u00e5A\u0000\u0001\u00d9-\u0000\u0005\u00e6\u0002\u0000\u0001\u00e6\u0002\u0000\u0008\u00e6\u0001\u0000\u0002\u00e6\u0001\u0000\n\u00e6\u0001\u0000\u0010\u00e6\u0001\u0000\u0001\u00e7\u000e\u00e6\u0002\u0000\u0005\u00e8\u0002\u0000\u0001\u00e8\u0002\u0000\u0008\u00e8\u0001\u0000\u0002\u00e8\u0001\u0000\n\u00e8\u0001\u0000\u0010\u00e8\u0002\u0000\u0001\u00e7\r\u00e8\u0001\u0000\u0001\u0084\u0004\u0000\u0001\u0084\t\u0000\u0001\u0084\u0011\u0000\u0001\u008b\u0017\u0000\u0001\u0084\n\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0001z\u0001\u00e9\u0001z\u0005\u0000\tz\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0007z\u0001\u00ea\u0001z\u0001\u0000\u0001z\u0001\u00eb\u0003z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0001z\u0001\u00ec\u0007z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0001z\u0001\u00ed\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0001z\u0001\u00ee\u0007z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0004z\u0001\u00ef\u0004z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0001\u0000\u0001\u008b\u0004\u0000\u0001\u008b\t\u0000\u0001\u008b)\u0000\u0001\u008b\n\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\tz\u0001\u0000\u0005z\u0001\u0000\u0001z\u0001\u00f0\u0001z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u001c\u0000\u0001\u00f1\u0008\u0000\u0001\u00f2\u0001\u00f3\u0002\u0000\u0001\u00f4\u0019\u0000\u000b\u0093\u0001\u0000\t\u0093\u0001\u0000\u001e\u0093\u0001\u00f5\u000e\u0093\u000b\u0094\u0001\u0000\t\u0094\u0001\u0000\u001f\u0094\u0001\u00f5\r\u0094\u0003\u0000\u0002\u00f6\u0002\u0000\u0001\u00f6\u0005\u0000\u0001\u00f7\u0002\u00f6\u0001\u0000\u0001\u00f8\u0002\u00f6\u0005\u0000\u0008\u00f6\u0002\u0000\u0005\u00f6\u0001\u0000\u0003\u00f6\u0001\u0000\u0002\u00f6\u0008\u0000\u0002\u00f6\u0002\u0000\u0008\u00f6\u0019\u0000\u0001\u00f9\u0001\u00fa\u0003\u0000\u0001\u00fb\u0002\u0000\u0001\u00fc\u0001\u00fd \u0000\u000b\u0097\u0001\u0000\t\u0097\u0001\u0000-\u0097\u000b\u009a\u0001\u0000\t\u009a\u0001\u0000-\u009a\u0001\u0000\u0001\u009b\u0004\u0000\u0001\u009b\t\u0000\u0001\u009b)\u0000\u0001\u009b\u0008\u0000\u0001\u009a\u0001\u009c\u0004\u009a\u0001\u009c\u0004\u009a\u0001\u0000\u0004\u009a\u0001\u009c\u0004\u009a\u0001\u0000$\u009a\u0001\u009c\u0008\u009a\u000b\u009d\u0001\u0000\t\u009d\u0001\u0000\u001e\u009d\u0001\u0000\u000e\u009d\u000b\u00a1\u0001\u0000\t\u00a1\u0001\u0000\u001f\u00a1\u0001\u0000\r\u00a1\u0002\u0000\u0003\u00fe\u0002\u0000\u0003\u00fe\u0003\u0000\u0003\u00fe\u0001\u0000\u0003\u00fe\u0002\u0000\u0001\u00ff\u0002\u0000\t\u00fe\u0001\u0000\u0005\u00fe\u0001\u0000\u0003\u00fe\u0001\u0000\u0002\u00fe\u0008\u0000\u0002\u00fe\u0002\u0000\u0008\u00fe\u0002\u0000\u0003\u0100\u0002\u0000\u0003\u0100\u0003\u0000\u0003\u0100\u0001\u0000\u0003\u0100\u0002\u0000\u0001\u0101\u0002\u0000\t\u0100\u0001\u0000\u0005\u0100\u0001\u0000\u0003\u0100\u0001\u0000\u0002\u0100\u0008\u0000\u0002\u0100\u0002\u0000\u0008\u0100\u0002\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u0102\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0008\u00a7\t\u0000\u0001\u00aa\f\u0000\u0001\u01035\u0000\u0001\u0104\u000f\u0000\u0001\u0104\u0004\u0000\u0001\u0104\u0004\u0000\u0002\u0104\u0001\u0000\u0001\u0104\u0004\u0000\u0001\u0104\u000f\u0000\u0001\u0104\u0006\u0000\u0001\u0104\u0002\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u00a8\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0001\u00a7\u0001\u0105\u0006\u00a7\u0002\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u00a8\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0004\u00a7\u0001\u0106\u0003\u00a7\u0002\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u00a8\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0004\u00a7\u0001\u0107\u0003\u00a7\u0002\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u0108\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0008\u00a7\u0002\u0000\u0003\u00b5\u0002\u0000\u0003\u00b5\u0003\u0000\u0003\u00b5\u0001\u0000\u0003\u00b5\u0005\u0000\t\u00b5\u0001\u0000\u0005\u00b5\u0001\u0000\u0003\u00b5\u0001\u0000\u0002\u00b5\u0008\u0000\u0002\u00b5\u0002\u0000\u0008\u00b5\u0002\u0000\u0003\u00b5\u0002\u0000\u0003\u00b5\u0003\u0000\u0001\u00b5\u0001\u0109\u0001\u00b5\u0001\u0000\u0001\u00b5\u0001\u010a\u0001\u00b5\u0005\u0000\t\u00b5\u0001\u0000\u0005\u00b5\u0001\u0000\u0003\u00b5\u0001\u0000\u0002\u00b5\u0008\u0000\u0002\u00b5\u0002\u0000\u0008\u00b5\u0002\u0000\u0003\u00b5\u0002\u0000\u0003\u00b5\u0003\u0000\u0001\u00b5\u0001\u010a\u0001\u00b5\u0001\u0000\u0001\u00b5\u0001\u010a\u0001\u00b5\u0005\u0000\t\u00b5\u0001\u0000\u0005\u00b5\u0001\u0000\u0003\u00b5\u0001\u0000\u0002\u00b5\u0008\u0000\u0002\u00b5\u0002\u0000\u0008\u00b5!\u0000\u0001\u010bD\u0000\u0001\u010c?\u0000\u0001\u010d$\u0000\u0003\u00bb\u0002\u0000\u0003\u00bb\u0003\u0000\u0003\u00bb\u0001\u0000\u0003\u00bb\u0005\u0000\t\u00bb\u0001\u0000\u0005\u00bb\u0001\u0000\u0003\u00bb\u0001\u0000\u0002\u00bb\u0008\u0000\u0002\u00bb\u0002\u0000\u0008\u00bb\u0002\u0000\u0002A\u0001\u010e\u0002\u0000\u0001\u010e\u0002A\u0003\u0000\u0003\u010e\u0001\u0000\u0003\u010e\u0005\u0000\u0008\u010e\u0001A\u0001\u0000\u0005\u010e\u0001\u0000\u0003\u010e\u0001\u0000\u0002\u010e\u0008\u0000\u0002\u010e\u0002\u0000\u0008\u010e\u0002\u0000\u0001B\u0001\u00bc\u0001B\u0002\u0000\u0003B\u0003\u0000\u0002B\u0001\u010f\u0001\u0000\u0003B\u0005\u0000\tB\u0001\u0000\u0005B\u0001\u0000\u0003B\u0001\u0000\u0002B\u0008\u0000\u0002B\u0002\u0000\u0008B\u0002\u0000\u0002F\u0001\u0110\u0002\u0000\u0001\u0110\u0002F\u0003\u0000\u0003\u0110\u0001\u0000\u0003\u0110\u0005\u0000\u0008\u0110\u0001F\u0001\u0000\u0005\u0110\u0001\u0000\u0003\u0110\u0001\u0000\u0002\u0110\u0008\u0000\u0002\u0110\u0002\u0000\u0008\u0110\u0002\u0000\u0003\u00c0\u0002\u0000\u0003\u00c0\u0003\u0000\u0003\u00c0\u0001\u0000\u0003\u00c0\u0005\u0000\t\u00c0\u0001\u0000\u0005\u00c0\u0001\u0000\u0003\u00c0\u0001\u0000\u0002\u00c0\u0008\u0000\u0002\u00c0\u0002\u0000\u0008\u00c0\u0002\u0000\u0001\u00c1\u0001\u0111\u0001\u00c1\u0002\u0000\u0003\u00c1\u0003\u0000\u0003\u00c1\u0001\u0000\u0003\u00c1\u0005\u0000\t\u00c1\u0001\u0000\u0005\u00c1\u0001\u0000\u0003\u00c1\u0001\u0000\u0002\u00c1\u0008\u0000\u0002\u00c1\u0002\u0000\u0008\u00c1\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u0112\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0008\u00c6\t\u0000\u0001\u00c9\f\u0000\u0001\u01135\u0000\u0001\u0114\u000f\u0000\u0001\u0114\u0004\u0000\u0001\u0114\u0004\u0000\u0002\u0114\u0001\u0000\u0001\u0114\u0004\u0000\u0001\u0114\u000f\u0000\u0001\u0114\u0006\u0000\u0001\u0114\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u00c7\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0001\u00c6\u0001\u0115\u0006\u00c6\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u00c7\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0004\u00c6\u0001\u0116\u0003\u00c6\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u00c7\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0004\u00c6\u0001\u0117\u0003\u00c6\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u0118\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0008\u00c6\u0002\u0000\u0003\u00d6\u0002\u0000\u0003\u00d6\u0003\u0000\u0003\u00d6\u0001\u0000\u0003\u00d6\u0002\u0000\u0001\u0119\u0002\u0000\t\u00d6\u0001\u0000\u0005\u00d6\u0001\u0000\u0003\u00d6\u0001\u0000\u0002\u00d6\u0008\u0000\u0002\u00d6\u0002\u0000\u0008\u00d6\u0001\u0000\u0001\u00d7\u0004\u0000\u0001\u00d7\t\u0000\u0001\u00d7\u0003\u0000\u0001\u00d8%\u0000\u0001\u00d7\u001c\u0000\u0001\u011a0\u0000\u0003\u00da\u0002\u0000\u0003\u00da\u0003\u0000\u0003\u00da\u0001\u0000\u0003\u00da\u0002\u0000\u0001\u011b\u0002\u0000\t\u00da\u0001\u0000\u0005\u00da\u0001\u0000\u0003\u00da\u0001\u0000\u0002\u00da\u0008\u0000\u0002\u00da\u0002\u0000\u0008\u00da\u0002\u0000\u0002p\u0001\u011c\u0002\u0000\u0001\u011c\u0002p\u0003\u0000\u0003\u011c\u0001\u0000\u0003\u011c\u0005\u0000\u0008\u011c\u0001p\u0001\u0000\u0005\u011c\u0001\u0000\u0003\u011c\u0001\u0000\u0002\u011c\u0008\u0000\u0002\u011c\u0002\u0000\u0008\u011c\u001b\u0000\u0001\u011dB\u0000\u0001\u011eB\u0000\u0001\u011fL\u0000\u0001\u0120;\u0000\u0001\u0121%\u0000\u0001\u00e1\u000e\u0000\u0001\u00e1)\u0000\u0001\u00e1\u001c\u0000\u0001\u0122P\u0000\u0001\u0123\"\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\tz\u0001\u0000\u0005z\u0001\u0000\u0001\u0124\u0002z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0002z\u0001\u0125\u0006z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0005z\u0001\u0126\u0003z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\tz\u0001\u0000\u0001\u0127\u0004z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0001z\u0001\u0128\u0007z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0004z\u0001\u0129\u0004z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0006z\u0001\u012a\u0002z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\tz\u0001\u0000\u0005z\u0001\u0000\u0002z\u0001\u012b\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0012\u0000\u0001\u012cI\u0000\u0001\u012dE\u0000\u0001\u012eI\u0000\u0001\u012f!\u0000\u0003\u00f6\u0002\u0000\u0003\u00f6\u0003\u0000\u0003\u00f6\u0001\u0000\u0003\u00f6\u0005\u0000\t\u00f6\u0001\u0000\u0005\u00f6\u0001\u0000\u0003\u00f6\u0001\u0000\u0002\u00f6\u0008\u0000\u0002\u00f6\u0002\u0000\u0008\u00f6\u0002\u0000\u0003\u00f6\u0002\u0000\u0003\u00f6\u0003\u0000\u0001\u00f6\u0001\u0130\u0001\u00f6\u0001\u0000\u0001\u00f6\u0001\u0131\u0001\u00f6\u0005\u0000\t\u00f6\u0001\u0000\u0005\u00f6\u0001\u0000\u0003\u00f6\u0001\u0000\u0002\u00f6\u0008\u0000\u0002\u00f6\u0002\u0000\u0008\u00f6\u0002\u0000\u0003\u00f6\u0002\u0000\u0003\u00f6\u0003\u0000\u0001\u00f6\u0001\u0131\u0001\u00f6\u0001\u0000\u0001\u00f6\u0001\u0131\u0001\u00f6\u0005\u0000\t\u00f6\u0001\u0000\u0005\u00f6\u0001\u0000\u0003\u00f6\u0001\u0000\u0002\u00f6\u0008\u0000\u0002\u00f6\u0002\u0000\u0008\u00f6\u0013\u0000\u0001\u0132\u0006\u0000\u0001\u0133H\u0000\u0001\u0134=\u0000\u0001\u0135H\u0000\u0001\u0136*\u0000\u0001\u0104\f\u0000\u0001\u0137\u0002\u0000\u0001\u0104\u0004\u0000\u0001\u0104\u0004\u0000\u0002\u0104\u0001\u0000\u0001\u0104\u0004\u0000\u0001\u0104\u000f\u0000\u0001\u0104\u0006\u0000\u0001\u0104\u0002\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u0138\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0008\u00a7\u0002\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u00a8\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0001\u00a7\u0001\u0139\u0002\u0000\u0008\u00a7\u0002\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u00a8\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0005\u00a7\u0001\u013a\u0002\u00a7\u0002\u0000\u0003\u00b5\u0002\u0000\u0003\u00b5\u0003\u0000\u0002\u00b5\u0001\u013b\u0001\u0000\u0002\u00b5\u0001\u013c\u0005\u0000\t\u00b5\u0001\u0000\u0005\u00b5\u0001\u0000\u0003\u00b5\u0001\u0000\u0002\u00b5\u0008\u0000\u0002\u00b5\u0002\u0000\u0008\u00b5\u0002\u0000\u0003\u00b5\u0002\u0000\u0003\u00b5\u0003\u0000\u0002\u00b5\u0001\u013c\u0001\u0000\u0002\u00b5\u0001\u013c\u0005\u0000\t\u00b5\u0001\u0000\u0005\u00b5\u0001\u0000\u0003\u00b5\u0001\u0000\u0002\u00b5\u0008\u0000\u0002\u00b5\u0002\u0000\u0008\u00b5!\u010b\u0001\u013d!\u010b$\u0000\u0001\u013eA\u0000\u0001\u013f!\u0000\u0001\u010e\u0001A\u0001\u010e\u0002\u0000\u0003\u010e\u0003\u0000\u0003\u010e\u0001\u0000\u0003\u010e\u0005\u0000\t\u010e\u0001\u0000\u0005\u010e\u0001\u0000\u0003\u010e\u0001\u0000\u0002\u010e\u0008\u0000\u0002\u010e\u0002\u0000\u0008\u010e\u0002\u0000\u0001B\u0001\u00bc\u0001B\u0002\u0000\u0003B\u0003\u0000\u0003B\u0001\u0000\u0003B\u0005\u0000\tB\u0001\u0000\u0005B\u0001\u0000\u0003B\u0001\u0000\u0002B\u0008\u0000\u0001\u0140\u0001B\u0002\u0000\u0008B\u0002\u0000\u0001\u0110\u0001F\u0001\u0110\u0002\u0000\u0003\u0110\u0003\u0000\u0003\u0110\u0001\u0000\u0003\u0110\u0005\u0000\t\u0110\u0001\u0000\u0005\u0110\u0001\u0000\u0003\u0110\u0001\u0000\u0002\u0110\u0008\u0000\u0002\u0110\u0002\u0000\u0008\u0110\u0002\u0000\u0002\u00c0\u0001\u0141\u0002\u0000\u0001\u0141\u0002\u00c0\u0003\u0000\u0003\u0141\u0001\u0000\u0003\u0141\u0005\u0000\u0008\u0141\u0001\u00c0\u0001\u0000\u0005\u0141\u0001\u0000\u0003\u0141\u0001\u0000\u0002\u0141\u0008\u0000\u0002\u0141\u0002\u0000\u0008\u0141\t\u0000\u0001\u0114\f\u0000\u0001\u0142\u0002\u0000\u0001\u0114\u0004\u0000\u0001\u0114\u0004\u0000\u0002\u0114\u0001\u0000\u0001\u0114\u0004\u0000\u0001\u0114\u000f\u0000\u0001\u0114\u0006\u0000\u0001\u0114\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u0143\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0008\u00c6\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u00c7\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0001\u00c6\u0001\u0144\u0002\u0000\u0008\u00c6\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u00c7\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0005\u00c6\u0001\u0145\u0002\u00c6\u0002\u0000\u0001\u011c\u0001p\u0001\u011c\u0002\u0000\u0003\u011c\u0003\u0000\u0003\u011c\u0001\u0000\u0003\u011c\u0005\u0000\t\u011c\u0001\u0000\u0005\u011c\u0001\u0000\u0003\u011c\u0001\u0000\u0002\u011c\u0008\u0000\u0002\u011c\u0002\u0000\u0008\u011c\u001c\u0000\u0001\u0146F\u0000\u0001\u0147@\u0000\u0001\u0148=\u0000\u0001\u0149D\u0000\u0001\u014a)\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0002z\u0001\u014b\u0006z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0005z\u0001\u014c\u0003z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0002z\u0001\u014d\u0006z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0002z\u0001\u014e\u0005\u0000\tz\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0007z\u0001\u014f\u0001z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0002z\u0001\u0150\u0006z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0002z\u0001\u0151\u0005\u0000\tz\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z)\u0000\u0001\u0152F\u0000\u0001\u0153&\u0000\u0001\u0154U\u0000\u0001\u0155 \u0000\u0003\u00f6\u0002\u0000\u0003\u00f6\u0003\u0000\u0002\u00f6\u0001\u0156\u0001\u0000\u0002\u00f6\u0001\u0157\u0005\u0000\t\u00f6\u0001\u0000\u0005\u00f6\u0001\u0000\u0003\u00f6\u0001\u0000\u0002\u00f6\u0008\u0000\u0002\u00f6\u0002\u0000\u0008\u00f6\u0002\u0000\u0003\u00f6\u0002\u0000\u0003\u00f6\u0003\u0000\u0002\u00f6\u0001\u0157\u0001\u0000\u0002\u00f6\u0001\u0157\u0005\u0000\t\u00f6\u0001\u0000\u0005\u00f6\u0001\u0000\u0003\u00f6\u0001\u0000\u0002\u00f6\u0008\u0000\u0002\u00f6\u0002\u0000\u0008\u00f6\u0019\u0000\u0001\u0158D\u0000\u0001\u0159B\u0000\u0001\u015aB\u0000\u0001\u015b)\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u015c\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0008\u00a7\u0002\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u015d\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0008\u00a7\u0001\u0000\u0001\u015e\u0003\u00b5\u0001\u0000\u0001\u015f\u0003\u00b5\u0002\u0000\u0001\u015e\u0003\u00b5\u0001\u015e\u0003\u00b5\u0005\u0000\t\u00b5\u0001\u0000\u0005\u00b5\u0001\u0000\u0003\u00b5\u0001\u0000\u0002\u00b5\u0008\u0000\u0002\u00b5\u0001\u0000\u0001\u015e\u0008\u00b5\u0001\u0000\u0001\u015f\u0003\u00b5\u0001\u0000\u0001\u015f\u0003\u00b5\u0002\u0000\u0001\u015f\u0003\u00b5\u0001\u015f\u0003\u00b5\u0005\u0000\t\u00b5\u0001\u0000\u0005\u00b5\u0001\u0000\u0003\u00b5\u0001\u0000\u0002\u00b5\u0008\u0000\u0002\u00b5\u0001\u0000\u0001\u015f\u0008\u00b5!\u010b\u0001\u0160!\u010b\u001e\u0000\u0001\u0161?\u0000\u0001\u0162)\u0000\u0001B\u0001\u00bc\u0001B\u0002\u0000\u0003B\u0003\u0000\u0003B\u0001\u0000\u0003B\u0005\u0000\tB\u0001\u0000\u0005B\u0001\u0000\u0003B\u0001\u0000\u0002B\u0008\u0000\u0001B\u0001\u0163\u0002\u0000\u0008B\u0002\u0000\u0001\u0141\u0001\u00c0\u0001\u0141\u0002\u0000\u0003\u0141\u0003\u0000\u0003\u0141\u0001\u0000\u0003\u0141\u0005\u0000\t\u0141\u0001\u0000\u0005\u0141\u0001\u0000\u0003\u0141\u0001\u0000\u0002\u0141\u0008\u0000\u0002\u0141\u0002\u0000\u0008\u0141\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u0164\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0008\u00c6\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u0165\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0008\u00c6\u001b\u0000\u0001\u0166N\u0000\u0001\u01676\u0000\u0001\u0168M\u0000\u0001\u0169:\u0000\u0001\u016a&\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0004z\u0001\u016b\u0004z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0002z\u0001\u016c\u0006z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0005z\u0001\u016d\u0003z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\tz\u0001\u0000\u0005z\u0001\u0000\u0001z\u0001\u016e\u0001z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\tz\u0001\u0000\u0002z\u0001\u016f\u0002z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0001\u0170\u0008z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0003z\u0001\u0171\u0005z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0013\u0000\u0001\u0172Y\u0000\u0001\u01731\u0000\u0001\u0174G\u0000\u0001\u0175%\u0000\u0001\u0176\u0003\u00f6\u0001\u0000\u0001\u015f\u0003\u00f6\u0002\u0000\u0001\u0176\u0003\u00f6\u0001\u0176\u0003\u00f6\u0005\u0000\t\u00f6\u0001\u0000\u0005\u00f6\u0001\u0000\u0003\u00f6\u0001\u0000\u0002\u00f6\u0008\u0000\u0002\u00f6\u0001\u0000\u0001\u0176\u0008\u00f6\u0001\u0000\u0001\u015f\u0003\u00f6\u0001\u0000\u0001\u015f\u0003\u00f6\u0002\u0000\u0001\u015f\u0003\u00f6\u0001\u015f\u0003\u00f6\u0005\u0000\t\u00f6\u0001\u0000\u0005\u00f6\u0001\u0000\u0003\u00f6\u0001\u0000\u0002\u00f6\u0008\u0000\u0002\u00f6\u0001\u0000\u0001\u015f\u0008\u00f6\u0012\u0000\u0001\u0177L\u0000\u0001\u0178D\u0000\u0001\u01797\u0000\u0001\u017aC\u0000\u0001\u017bI\u0000\u0001\u017cD\u0000\u0001\u017d&\u0000\u0001\u017e\u0001B\u0001\u017f\u0001B\u0001\u0000\u0001\u017e\u0003B\u0003\u0000\u0003B\u0001\u017e\u0003B\u0005\u0000\tB\u0001\u0000\u0005B\u0001\u0000\u0003B\u0001\u0000\u0002B\u0008\u0000\u0002B\u0001\u0180\u0001\u017e\u0008B\u001c\u0000\u0001\u0181\u0001\u0182>\u0000\u0001\u0183E\u0000\u0001\u0184E\u0000\u0001\u0185%\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0003z\u0001\u0186\u0005z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\tz\u0001\u0000\u0001z\u0001\u0187\u0003z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0001\u0188\u0008z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0001z\u0001\u0189\u0001z\u0005\u0000\tz\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\tz\u0001\u0000\u0001\u018a\u0004z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u001c\u0000\u0001\u018bB\u0000\u0001\u018cJ\u0000\u0001\u018d9\u0000\u0001\u018e@\u0000\u0001\u018fD\u0000\u0001\u0190B\u0000\u0001\u0191C\u0000\u0001\u0192D\u0000\u0001\u0193M\u0000\u0001\u0194\u001a\u0000\u0001\u017e\u0004\u0000\u0001\u017e\t\u0000\u0001\u017e(\u0000\u0001\u0180\u0001\u017e\n\u0000\u0002A\u0001\u0195\u0002\u0000\u0001\u0195\u0002A\u0003\u0000\u0003\u0195\u0001\u0000\u0003\u0195\u0005\u0000\u0008\u0195\u0001A\u0001\u0000\u0005\u0195\u0001\u0000\u0003\u0195\u0001\u0000\u0002\u0195\u0008\u0000\u0002\u0195\u0002\u0000\u0008\u0195\u0001\u0000\u0001\u0180\u0004\u0000\u0001\u0180\t\u0000\u0001\u0180#\u0000\u0001\u0196\u0001\u0197\u0004\u0000\u0001\u0180!\u0000\u0001\u0198C\u0000\u0001\u0199H\u0000\u0001\u019a$\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0007z\u0001\u019b\u0001z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0001\u019c\u0008z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0019\u0000\u0001\u019dN\u0000\u0001\u019e;\u0000\u0001\u019f>\u0000\u0001\u01a0E\u0000\u0001\u01a1A\u0000\u0001\u01a2E\u0000\u0001\u01a3E\u0000\u0001\u01a49\u0000\u0001\u01a5+\u0000\u0001\u0195\u0001A\u0001\u0195\u0002\u0000\u0003\u0195\u0003\u0000\u0003\u0195\u0001\u0000\u0003\u0195\u0005\u0000\t\u0195\u0001\u0000\u0005\u0195\u0001\u0000\u0003\u0195\u0001\u0000\u0002\u0195\u0008\u0000\u0002\u0195\u0002\u0000\u0008\u0195\u001f\u0000\u0001\u01a6B\u0000\u0001\u01a7=\u0000\u0001\u01a8*\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0001z\u0001\u01a9\u0007z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z$\u0000\u0001\u01aa7\u0000\u0001\u01abD\u0000\u0001\u01acG\u0000\u0001\u01ad=\u0000\u0001\u01ae(\u0000\u0001\u01af\u000e\u0000\u0001\u01af)\u0000\u0001\u01af,\u0000\u0001\u01b08\u0000\u0001\u01b1(\u0000", 0, r0);

        return r0;
    }

    private static int yy_unpack(java.lang.String, int, int[])
    {
        int[] r1;
        int i0, $i1, $i3, i4, i5, i6, i7, i8, $i10, $i11, $i13, $i15;
        java.lang.String r0;
        char $c2, $c9;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: int[];

        i4 = 0;

        i5 = i0;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        if i4 >= $i1 goto label3;

        i6 = i4 + 1;

        $c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i10 = (int) $c9;

        i7 = $i10;

        i4 = i6 + 1;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        $i11 = (int) $c2;

        $i13 = (int) -1;

        i8 = $i11 + $i13;

     label2:
        $i3 = i5;

        i5 = i5 + 1;

        r1[$i3] = i8;

        $i15 = (int) -1;

        i7 = i7 + $i15;

        if i7 > 0 goto label2;

        goto label1;

     label3:
        return i5;
    }

    private static char[] yy_unpack_cmap(java.lang.String)
    {
        char $c0, $c6;
        int $i1, i2, i3, i4, i5, $i7, $i9;
        char[] r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        r0 = newarray (char)[65536];

        i2 = 0;

        i3 = 0;

     label1:
        if i2 >= 1350 goto label3;

        i4 = i2 + 1;

        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        $i7 = (int) $c6;

        i5 = $i7;

        i2 = i4 + 1;

        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i4);

     label2:
        $i1 = i3;

        i3 = i3 + 1;

        r0[$i1] = $c0;

        $i9 = (int) -1;

        i5 = i5 + $i9;

        if i5 > 0 goto label2;

        goto label1;

     label3:
        return r0;
    }

    private boolean yy_refill() throws java.io.IOException
    {
        java.io.Reader $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, i32;
        char[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_savePos>;

        if $i0 >= 0 goto label2;

        $i27 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        if $i27 <= 0 goto label1;

        $i28 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i29 = $i28 - 1;

        goto label3;

     label1:
        $i29 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        goto label3;

     label2:
        $i29 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_savePos>;

     label3:
        if $i29 <= 0 goto label4;

        $r13 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $r12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i14 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i15 = $i14 - $i29;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, $i29, $r12, 0, $i15);

        $i16 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i17 = $i16 - $i29;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead> = $i17;

        $i18 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_currentPos>;

        $i19 = $i18 - $i29;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_currentPos> = $i19;

        $i20 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i21 = $i20 - $i29;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i21;

        $i22 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_pushbackPos>;

        $i23 = $i22 - $i29;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_pushbackPos> = $i23;

        $i24 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i25 = $i24 - $i29;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead> = $i25;

        $i26 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_savePos>;

        if $i26 < 0 goto label4;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_savePos> = 0;

     label4:
        $i30 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $r14 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i31 = lengthof $r14;

        if $i30 >= $i31 goto label5;

        $i13 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_currentPos>;

        $r10 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i12 = lengthof $r10;

        if $i13 < $i12 goto label6;

     label5:
        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i1 = lengthof $r1;

        $i2 = $i1 * 2;

        $r11 = newarray (char)[$i2];

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i3 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r11, 0, $i3);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer> = $r11;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i5 = lengthof $r4;

        $r5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_saved_buffer>;

        $i4 = lengthof $r5;

        if $i5 <= $i4 goto label6;

        $r9 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_saved_buffer> = $r9;

     label6:
        i32 = 0;

     label7:
        if i32 != 0 goto label8;

        $r8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.io.Reader yy_reader>;

        $r7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i11 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $r6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i9 = lengthof $r6;

        $i8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i10 = $i9 - $i8;

        i32 = virtualinvoke $r8.<java.io.Reader: int read(char[],int,int)>($r7, $i11, $i10);

        goto label7;

     label8:
        if i32 >= 0 goto label9;

        return 1;

     label9:
        $i6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i7 = $i6 + i32;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead> = $i7;

        return 0;
    }

    public final void yyclose() throws java.io.IOException
    {
        int $i0;
        java.io.Reader $r1, $r2;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_atEOF> = 1;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead> = $i0;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.io.Reader yy_reader>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.io.Reader yy_reader>;

        virtualinvoke $r2.<java.io.Reader: void close()>();

     label1:
        return;
    }

    public final void yypushStream(java.io.Reader)
    {
        java.util.Stack $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10;
        boolean $z0;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer$YY_StreamInfo $r8;
        java.io.Reader $r3, r6;
        char[] $r2, $r5, $r7;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r6 := @parameter0: java.io.Reader;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.util.Stack yy_streams>;

        $r8 = new org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer$YY_StreamInfo;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.io.Reader yy_reader>;

        $i7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_savePos>;

        $i4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_currentPos>;

        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_pushbackPos>;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_atEOF>;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next>;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        specialinvoke $r8.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer$YY_StreamInfo: void <init>(java.io.Reader,int,int,int,int,int,int,char[],boolean,int,int)>($r3, $i7, $i6, $i5, $i4, $i3, $i2, $r2, $z0, $i1, $i0);

        virtualinvoke $r4.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r8);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_atEOF> = 0;

        $r5 = newarray (char)[16384];

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer> = $r5;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.io.Reader yy_reader> = r6;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead> = 0;

        $i10 = (int) -1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_savePos> = $i10;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_pushbackPos> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_currentPos> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline> = 0;

        $i8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead_l> = $i8;

        $r7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer_l> = $r7;

        return;
    }

    public final void yypushBuffer(char[], int, int)
    {
        java.util.Stack $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, $i10, $i11, $i12, $i14;
        boolean $z0;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer$YY_StreamInfo $r7;
        java.io.Reader $r3;
        char[] $r2, r5, $r6;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r5 := @parameter0: char[];

        i8 := @parameter1: int;

        i9 := @parameter2: int;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.util.Stack yy_streams>;

        $r7 = new org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer$YY_StreamInfo;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.io.Reader yy_reader>;

        $i7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_savePos>;

        $i4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_currentPos>;

        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_pushbackPos>;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_atEOF>;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline>;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn>;

        specialinvoke $r7.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer$YY_StreamInfo: void <init>(java.io.Reader,int,int,int,int,int,int,char[],boolean,int,int)>($r3, $i7, $i6, $i5, $i4, $i3, $i2, $r2, $z0, $i1, $i0);

        virtualinvoke $r4.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r7);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_atEOF> = 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer> = r5;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.io.Reader yy_reader> = null;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_pushbackPos> = i8;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_currentPos> = i8;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = i8;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead> = i8;

        $i14 = (int) -1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_savePos> = $i14;

        $i10 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i11 = $i10 + i9;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead> = $i11;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline> = 0;

        $i12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead_l> = $i12;

        $r6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer_l> = $r6;

        return;
    }

    public final void yypopStream() throws java.io.IOException
    {
        java.util.Stack $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean $z0;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer$YY_StreamInfo $r9;
        java.io.Reader $r1, $r5, $r8;
        char[] $r4, $r6, $r7;
        java.lang.Object $r3;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.io.Reader yy_reader>;

        if $r1 == null goto label1;

        $r8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.io.Reader yy_reader>;

        virtualinvoke $r8.<java.io.Reader: void close()>();

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.util.Stack yy_streams>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object pop()>();

        $r9 = (org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer$YY_StreamInfo) $r3;

        $r4 = $r9.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer$YY_StreamInfo: char[] yy_buffer>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer> = $r4;

        $r5 = $r9.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer$YY_StreamInfo: java.io.Reader yy_reader>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.io.Reader yy_reader> = $r5;

        $i0 = $r9.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer$YY_StreamInfo: int yy_endRead>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead> = $i0;

        $i1 = $r9.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer$YY_StreamInfo: int yy_startRead>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead> = $i1;

        $i2 = $r9.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer$YY_StreamInfo: int yy_savePos>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_savePos> = $i2;

        $i3 = $r9.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer$YY_StreamInfo: int yy_currentPos>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_currentPos> = $i3;

        $i4 = $r9.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer$YY_StreamInfo: int yy_markedPos>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i4;

        $i5 = $r9.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer$YY_StreamInfo: int yy_pushbackPos>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_pushbackPos> = $i5;

        $z0 = $r9.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer$YY_StreamInfo: boolean yy_atEOF>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_atEOF> = $z0;

        $i6 = $r9.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer$YY_StreamInfo: int yyline>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline> = $i6;

        $i7 = $r9.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer$YY_StreamInfo: int yycolumn>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn> = $i7;

        $i8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = $i8;

        $i9 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i9;

        $i10 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead_l> = $i10;

        $r6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer_l> = $r6;

        $r7 = <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yycmap>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yycmap_l> = $r7;

        return;
    }

    public final boolean yymoreStreams()
    {
        java.util.Stack $r1;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.util.Stack yy_streams>;

        $z0 = virtualinvoke $r1.<java.util.Stack: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public final void yyreset(java.io.Reader) throws java.io.IOException
    {
        int $i1;
        char[] $r1;
        java.io.Reader r2;
        java.util.Stack $r3;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r2 := @parameter0: java.io.Reader;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yyclose()>();

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_saved_buffer>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer> = $r1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.io.Reader yy_reader> = r2;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_atBOL> = 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_atEOF> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead> = 0;

        $i1 = (int) -1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_savePos> = $i1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_pushbackPos> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_currentPos> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yychar> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_lexical_state> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_state> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_sawCR> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = 0;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.util.Stack yy_streams>;

        virtualinvoke $r3.<java.util.Stack: void clear()>();

        return;
    }

    public final void yyreset(char[], int, int) throws java.io.IOException
    {
        java.util.Stack $r3;
        int i0, i1, $i2, $i3, $i5;
        char[] r1, $r2;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yyclose()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer> = r1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.io.Reader yy_reader> = null;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_atBOL> = 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_atEOF> = 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead> = i0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_pushbackPos> = i0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = i0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_currentPos> = i0;

        $i5 = (int) -1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_savePos> = $i5;

        $i2 = i0 + i1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead> = $i2;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yychar> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_lexical_state> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_state> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_sawCR> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = 0;

        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead_l> = $i3;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer_l> = $r2;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.util.Stack yy_streams>;

        virtualinvoke $r3.<java.util.Stack: void clear()>();

        return;
    }

    public final int yystate()
    {
        int $i0;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_lexical_state>;

        return $i0;
    }

    public final void yybegin(int)
    {
        int i0;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        i0 := @parameter0: int;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_lexical_state> = i0;

        return;
    }

    public final java.lang.String yytext()
    {
        int $i0, $i1, $i2, $i3;
        char[] $r2;
        java.lang.String $r0;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r1;

        r1 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $r0 = new java.lang.String;

        $r2 = r1.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i3 = r1.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i1 = r1.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i0 = r1.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i2 = $i1 - $i0;

        specialinvoke $r0.<java.lang.String: void <init>(char[],int,int)>($r2, $i3, $i2);

        return $r0;
    }

    public final java.lang.String yytext(int, int)
    {
        int i0, $i1, i2, $i3;
        char[] $r2;
        java.lang.String $r0;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r1;

        r1 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $r0 = new java.lang.String;

        $r2 = r1.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i1 = r1.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i3 = $i1 + i0;

        specialinvoke $r0.<java.lang.String: void <init>(char[],int,int)>($r2, $i3, i2);

        return $r0;
    }

    public final void yynextAction()
    {
        int $i0, $i1, $i2;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline> = $i0;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn> = $i1;

        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead> = $i2;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_currentPos> = $i2;

        return;
    }

    public final int yynextChar() throws java.io.IOException
    {
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i9, $i11, $i13, $i14;
        boolean $z0, $z1;
        char $c5, $c8;
        char[] $r1, $r2, $r3;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        if $i1 >= $i0 goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i7 = $i6 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i7;

        $c8 = $r3[$i6];

        $i9 = (int) $c8;

        return $i9;

     label1:
        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_atEOF>;

        if $z0 == 0 goto label2;

        $i11 = (int) -1;

        return $i11;

     label2:
        $z1 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_refill()>();

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer_l> = $r1;

        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead_l> = $i2;

        if $z1 == 0 goto label3;

        $i13 = (int) -1;

        return $i13;

     label3:
        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i4 = $i3 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i4;

        $c5 = $r2[$i3];

        $i14 = (int) $c5;

        return $i14;
    }

    public final int yynextBufferChar()
    {
        int $i0, $i1, $i3;
        char[] $r1;
        char $c2;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i1 = $i0 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i1;

        $c2 = $r1[$i0];

        $i3 = (int) $c2;

        return $i3;
    }

    public final void yycountChar(int)
    {
        int i0, $i1, $i2, $i3, $i4;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 10: goto label1;
            default: goto label2;
        };

     label1:
        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next>;

        $i2 = $i1 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = $i2;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = 0;

        goto label3;

     label2:
        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i4 = $i3 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i4;

     label3:
        return;
    }

    public final char yycharat(int)
    {
        int i0, $i1, $i2;
        char[] $r1;
        char $c3;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i2 = $i1 + i0;

        $c3 = $r1[$i2];

        return $c3;
    }

    public final int yybufferLeft()
    {
        int $i0, $i1, $i2;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public final void yyskip(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i2 = $i1 + i0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i2;

        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos_l> = $i3;

        $i5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        if $i5 <= $i4 goto label1;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yy_ScanError(int)>(4);

     label1:
        return;
    }

    public final int yylength()
    {
        int $i0, $i1, $i2;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    private void yy_ScanError(int)
    {
        int i0;
        java.lang.Error $r1;
        java.lang.String[] $r0, $r3;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        java.lang.String r5;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r4;

        r4 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        i0 := @parameter0: int;

     label1:
        $r0 = <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String[] YY_ERROR_MSG>;

        r5 = $r0[i0];

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String[] YY_ERROR_MSG>;

        r5 = $r3[0];

     label4:
        $r1 = new java.lang.Error;

        specialinvoke $r1.<java.lang.Error: void <init>(java.lang.String)>(r5);

        throw $r1;

        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label3;
    }

    private void yypushback(int)
    {
        char $c6;
        int i0, $i1, $i2, $i3, $i4, $i5, i7, $i8, $i9;
        char[] $r1;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        if i0 <= $i1 goto label1;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yy_ScanError(int)>(3);

     label1:
        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i3 = $i2 - i0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i3;

        $i4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = $i4;

        $i5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = $i5;

        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_prev_sawCR>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_sawCR> = $z0;

        i7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

     label2:
        $i8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        if i7 >= $i8 goto label3;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $c6 = $r1[i7];

        $i9 = (int) $c6;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yycountChar(int)>($i9);

        i7 = i7 + 1;

        goto label2;

     label3:
        return;
    }

    private void yy_do_eof() throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_eof_done>;

        if $z0 != 0 goto label1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_eof_done> = 1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yyclose()>();

     label1:
        return;
    }

    public int yylex() throws java.io.IOException, org.xml.sax.SAXException, org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException
    {
        java.lang.ClassCastException $r240, $r247;
        java.lang.StringBuffer $r158, $r159, $r160, $r162, $r163, $r175, $r176, $r177, $r181, $r182, $r183, $r187, $r188, $r189, $r193, $r194, $r195, $r199, $r200, $r201, $r205, $r206, $r207, $r211, $r212, $r213, $r217, $r218, $r219, $r223, $r224, $r225, $r229, $r230, $r231, $r242, $r244, $r249, $r251, $r256, $r258, $r263, $r265, $r271, $r272, $r273, $r274, $r275, $r277, $r278, $r279, $r280, $r281, $r282, $r283, $r284, $r285, $r286;
        org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer r0;
        java.lang.String $r9, $r10, $r17, $r18, $r20, $r21, $r22, $r29, $r30, $r32, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r49, $r54, $r55, $r56, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r69, $r70, $r71, $r72, $r73, $r76, $r79, $r80, $r81, $r82, $r83, $r85, $r86, $r87, $r90, $r91, $r92, $r94, $r97, $r100, $r101, $r102, $r105, $r107, $r111, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r126, $r127, $r129, $r130, $r131, $r132, $r137, $r138, $r139, $r140, $r141, $r144, $r146, $r147, $r148, $r149, $r151, $r152, $r153, $r156, $r161, $r164, $r178, $r184, $r190, $r196, $r202, $r208, $r214, $r220, $r226, $r232, $r243, $r245, $r250, $r252, $r257, $r259, $r264, $r266, r268, $r269, $r270, $r276;
        org.apache.xmlbeans.impl.piccolo.io.IllegalCharException $r254, $r261;
        char[] $r1, $r2, $r6, $r7, $r8, $r11, $r16, $r24, $r25, $r27, $r33, $r45, $r46, $r50, $r52, $r58, $r67, $r75, $r77, $r115, $r116, $r117, $r118, $r134, $r135, $r169, $r170, $r171, $r172, $r173, $r239;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, z27, $z28, $z29, $z30;
        org.apache.xmlbeans.impl.piccolo.util.CharStringConverter $r68;
        byte[] r5;
        byte $b13, $b14, $b15, $b17, b236;
        org.apache.xmlbeans.impl.piccolo.util.StringStack $r145, $r150;
        java.util.Stack $r235;
        int[] r3, r4;
        org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder $r89, $r96, $r143, $r155;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i16, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $i203, $i204, $i205, $i206, $i207, $i208, $i209, $i210, $i211, $i212, $i213, $i214, $i215, $i216, $i217, $i218, $i219, $i220, $i221, $i222, $i223, i224, $i225, $i226, i227, $i228, i229, i230, $i231, $i232, $i233, $i234, i235, $i237, i238, i239, i240, $i242, $i244, $i246, $i247, $i249, $i250, $i251, $i252, $i254, $i256;
        org.apache.xmlbeans.impl.piccolo.xml.Entity $r103, $r104, $r106, $r109, $r110, $r112, $r234, $r237, $r238;
        org.apache.xmlbeans.impl.piccolo.xml.Piccolo $r12, $r14, $r15, $r23, $r26, $r28, $r44, $r47, $r48, $r84, $r88, $r93, $r95, $r98, $r99, $r128, $r133, $r142, $r154, $r166, $r167, $r168;
        java.lang.Object $r236;
        org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport $r19, $r34, $r78, $r136;
        org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException $r13, $r31, $r51, $r53, $r108, $r113, $r165, $r179, $r185, $r191, $r197, $r203, $r209, $r215, $r221, $r227, $r233, $r246, $r253, $r260, $r267;
        char $c9;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead_l> = $i0;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer_l> = $r1;

        $r2 = <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yycmap>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yycmap_l> = $r2;

        r3 = <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int[] yytrans>;

        r4 = <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int[] yy_rowMap>;

        r5 = <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: byte[] YY_ATTRIBUTE>;

        $i242 = (int) -1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_pushbackPos> = $i242;

        $i244 = (int) -1;

        i224 = $i244;

     label001:
        $i225 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos_l> = $i225;

        $i226 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next>;

        i227 = $i226;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline> = $i226;

        $i228 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        i229 = $i228;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn> = $i228;

        $i246 = (int) -1;

        i230 = $i246;

        $i231 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos_l>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead> = $i231;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_currentPos> = $i231;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_currentPos_l> = $i231;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead_l> = $i231;

        $i232 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_lexical_state>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_state> = $i232;

        z27 = 0;

     label002:
        $i233 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_currentPos_l>;

        $i234 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead_l>;

        if $i233 >= $i234 goto label003;

        $r239 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer_l>;

        $i222 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_currentPos_l>;

        $i223 = $i222 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_currentPos_l> = $i223;

        i235 = $r239[$i222];

        goto label006;

     label003:
        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_atEOF>;

        if $z0 == 0 goto label004;

        i235 = -1;

        goto label015;

     label004:
        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_currentPos_l>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_currentPos> = $i1;

        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos_l>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i2;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_pushbackPos> = i224;

        $z1 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_refill()>();

        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_currentPos>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_currentPos_l> = $i3;

        $i4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos_l> = $i4;

        $r6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer_l> = $r6;

        $i5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_endRead_l> = $i5;

        i224 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_pushbackPos>;

        if $z1 == 0 goto label005;

        i235 = -1;

        goto label015;

     label005:
        $r7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer_l>;

        $i6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_currentPos_l>;

        $i7 = $i6 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_currentPos_l> = $i7;

        i235 = $r7[$i6];

     label006:
        lookupswitch(i235)
        {
            case 10: goto label007;
            default: goto label008;
        };

     label007:
        i227 = i227 + 1;

        i229 = 0;

        goto label009;

     label008:
        i229 = i229 + 1;

     label009:
        $i8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_state>;

        $i10 = r4[$i8];

        $r8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yycmap_l>;

        $c9 = $r8[i235];

        $i247 = (int) $c9;

        $i11 = $i10 + $i247;

        $i221 = r3[$i11];

        $i249 = (int) -1;

        if $i221 != $i249 goto label010;

        goto label015;

     label010:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_state> = $i221;

        $i12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_state>;

        b236 = r5[$i12];

        $b13 = b236 & 2;

        $i250 = (int) $b13;

        if $i250 != 2 goto label011;

        i224 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_currentPos_l>;

     label011:
        $b14 = b236 & 1;

        if $b14 != 1 goto label014;

        $b15 = b236 & 4;

        $i251 = (int) $b15;

        if $i251 != 4 goto label012;

        $z28 = 1;

        goto label013;

     label012:
        $z28 = 0;

     label013:
        z27 = $z28;

        i230 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_state>;

        $i16 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_currentPos_l>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos_l> = $i16;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next> = i227;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next> = i229;

        $b17 = b236 & 8;

        $i252 = (int) $b17;

        if $i252 != 8 goto label014;

        goto label015;

     label014:
        goto label002;

     label015:
        $i237 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos_l>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = $i237;

        if z27 == 0 goto label016;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos> = i224;

     label016:
        tableswitch(i230)
        {
            case 5: goto label063;
            case 6: goto label331;
            case 7: goto label332;
            case 8: goto label331;
            case 9: goto label332;
            case 10: goto label332;
            case 11: goto label131;
            case 12: goto label332;
            case 13: goto label129;
            case 14: goto label129;
            case 15: goto label205;
            case 16: goto label223;
            case 17: goto label129;
            case 18: goto label129;
            case 19: goto label332;
            case 20: goto label332;
            case 21: goto label149;
            case 22: goto label149;
            case 23: goto label149;
            case 24: goto label149;
            case 25: goto label149;
            case 26: goto label149;
            case 27: goto label332;
            case 28: goto label330;
            case 29: goto label149;
            case 30: goto label149;
            case 31: goto label332;
            case 32: goto label171;
            case 33: goto label133;
            case 34: goto label263;
            case 35: goto label265;
            case 36: goto label332;
            case 37: goto label332;
            case 38: goto label141;
            case 39: goto label079;
            case 40: goto label231;
            case 41: goto label276;
            case 42: goto label189;
            case 43: goto label189;
            case 44: goto label274;
            case 45: goto label189;
            case 46: goto label189;
            case 47: goto label189;
            case 48: goto label189;
            case 49: goto label189;
            case 50: goto label189;
            case 51: goto label189;
            case 52: goto label189;
            case 53: goto label189;
            case 54: goto label063;
            case 55: goto label189;
            case 56: goto label331;
            case 57: goto label229;
            case 58: goto label169;
            case 59: goto label189;
            case 60: goto label272;
            case 61: goto label189;
            case 62: goto label189;
            case 63: goto label189;
            case 64: goto label219;
            case 65: goto label219;
            case 66: goto label219;
            case 67: goto label314;
            case 68: goto label189;
            case 69: goto label312;
            case 70: goto label312;
            case 71: goto label189;
            case 72: goto label189;
            case 73: goto label189;
            case 74: goto label131;
            case 75: goto label147;
            case 76: goto label213;
            case 77: goto label189;
            case 78: goto label189;
            case 79: goto label189;
            case 80: goto label189;
            case 81: goto label189;
            case 82: goto label189;
            case 83: goto label129;
            case 84: goto label267;
            case 85: goto label145;
            case 86: goto label189;
            case 87: goto label129;
            case 88: goto label155;
            case 89: goto label205;
            case 90: goto label310;
            case 91: goto label189;
            case 92: goto label153;
            case 93: goto label223;
            case 94: goto label308;
            case 95: goto label129;
            case 96: goto label117;
            case 97: goto label143;
            case 98: goto label189;
            case 99: goto label129;
            case 100: goto label117;
            case 101: goto label189;
            case 102: goto label261;
            case 103: goto label189;
            case 104: goto label196;
            case 105: goto label149;
            case 106: goto label033;
            case 107: goto label189;
            case 108: goto label189;
            case 109: goto label236;
            case 110: goto label189;
            case 111: goto label135;
            case 112: goto label135;
            case 113: goto label047;
            case 114: goto label189;
            case 115: goto label189;
            case 116: goto label189;
            case 117: goto label189;
            case 118: goto label252;
            case 119: goto label082;
            case 120: goto label189;
            case 121: goto label105;
            case 122: goto label031;
            case 123: goto label107;
            case 124: goto label189;
            case 125: goto label189;
            case 126: goto label330;
            case 127: goto label330;
            case 128: goto label330;
            case 129: goto label189;
            case 130: goto label189;
            case 131: goto label149;
            case 132: goto label073;
            case 133: goto label109;
            case 134: goto label109;
            case 135: goto label109;
            case 136: goto label109;
            case 137: goto label109;
            case 138: goto label065;
            case 139: goto label059;
            case 140: goto label109;
            case 141: goto label189;
            case 142: goto label061;
            case 143: goto label111;
            case 144: goto label113;
            case 145: goto label115;
            case 146: goto label157;
            case 147: goto label173;
            case 148: goto label189;
            case 149: goto label189;
            case 150: goto label171;
            case 151: goto label207;
            case 152: goto label163;
            case 153: goto label084;
            case 154: goto label133;
            case 155: goto label133;
            case 156: goto label263;
            case 157: goto label316;
            case 158: goto label319;
            case 159: goto label159;
            case 160: goto label265;
            case 161: goto label189;
            case 162: goto label189;
            case 163: goto label332;
            case 164: goto label332;
            case 165: goto label198;
            case 166: goto label332;
            case 167: goto label278;
            case 168: goto label332;
            case 169: goto label332;
            case 170: goto label332;
            case 171: goto label332;
            case 172: goto label332;
            case 173: goto label332;
            case 174: goto label332;
            case 175: goto label332;
            case 176: goto label332;
            case 177: goto label175;
            case 178: goto label280;
            case 179: goto label137;
            case 180: goto label227;
            case 181: goto label227;
            case 182: goto label227;
            case 183: goto label332;
            case 184: goto label332;
            case 185: goto label332;
            case 186: goto label139;
            case 187: goto label219;
            case 188: goto label219;
            case 189: goto label177;
            case 190: goto label312;
            case 191: goto label221;
            case 192: goto label221;
            case 193: goto label332;
            case 194: goto label332;
            case 195: goto label127;
            case 196: goto label090;
            case 197: goto label332;
            case 198: goto label322;
            case 199: goto label332;
            case 200: goto label332;
            case 201: goto label332;
            case 202: goto label332;
            case 203: goto label332;
            case 204: goto label332;
            case 205: goto label332;
            case 206: goto label100;
            case 207: goto label332;
            case 208: goto label194;
            case 209: goto label332;
            case 210: goto label306;
            case 211: goto label332;
            case 212: goto label332;
            case 213: goto label332;
            case 214: goto label332;
            case 215: goto label225;
            case 216: goto label332;
            case 217: goto label332;
            case 218: goto label135;
            case 219: goto label332;
            case 220: goto label332;
            case 221: goto label332;
            case 222: goto label045;
            case 223: goto label332;
            case 224: goto label057;
            case 225: goto label332;
            case 226: goto label332;
            case 227: goto label332;
            case 228: goto label332;
            case 229: goto label332;
            case 230: goto label215;
            case 231: goto label332;
            case 232: goto label109;
            case 233: goto label109;
            case 234: goto label109;
            case 235: goto label109;
            case 236: goto label109;
            case 237: goto label109;
            case 238: goto label109;
            case 239: goto label109;
            case 240: goto label332;
            case 241: goto label332;
            case 242: goto label332;
            case 243: goto label332;
            case 244: goto label217;
            case 245: goto label328;
            case 246: goto label328;
            case 247: goto label328;
            case 248: goto label332;
            case 249: goto label332;
            case 250: goto label332;
            case 251: goto label332;
            case 252: goto label191;
            case 253: goto label332;
            case 254: goto label259;
            case 255: goto label332;
            case 256: goto label254;
            case 257: goto label043;
            case 258: goto label184;
            case 259: goto label332;
            case 260: goto label332;
            case 261: goto label332;
            case 262: goto label332;
            case 263: goto label041;
            case 264: goto label227;
            case 265: goto label227;
            case 266: goto label332;
            case 267: goto label332;
            case 268: goto label332;
            case 269: goto label257;
            case 270: goto label219;
            case 271: goto label304;
            case 272: goto label221;
            case 273: goto label250;
            case 274: goto label299;
            case 275: goto label332;
            case 276: goto label332;
            case 277: goto label332;
            case 278: goto label332;
            case 279: goto label248;
            case 280: goto label270;
            case 281: goto label161;
            case 282: goto label123;
            case 283: goto label121;
            case 284: goto label332;
            case 285: goto label332;
            case 286: goto label332;
            case 287: goto label332;
            case 288: goto label332;
            case 289: goto label297;
            case 290: goto label209;
            case 291: goto label109;
            case 292: goto label109;
            case 293: goto label109;
            case 294: goto label109;
            case 295: goto label109;
            case 296: goto label098;
            case 297: goto label109;
            case 298: goto label109;
            case 299: goto label332;
            case 300: goto label332;
            case 301: goto label332;
            case 302: goto label332;
            case 303: goto label328;
            case 304: goto label328;
            case 305: goto label332;
            case 306: goto label332;
            case 307: goto label332;
            case 308: goto label332;
            case 309: goto label211;
            case 310: goto label179;
            case 311: goto label039;
            case 312: goto label332;
            case 313: goto label332;
            case 314: goto label227;
            case 315: goto label227;
            case 316: goto label332;
            case 317: goto label332;
            case 318: goto label332;
            case 319: goto label219;
            case 320: goto label326;
            case 321: goto label292;
            case 322: goto label017;
            case 323: goto label332;
            case 324: goto label332;
            case 325: goto label332;
            case 326: goto label332;
            case 327: goto label332;
            case 328: goto label332;
            case 329: goto label332;
            case 330: goto label109;
            case 331: goto label109;
            case 332: goto label109;
            case 333: goto label109;
            case 334: goto label109;
            case 335: goto label109;
            case 336: goto label109;
            case 337: goto label332;
            case 338: goto label332;
            case 339: goto label332;
            case 340: goto label332;
            case 341: goto label328;
            case 342: goto label328;
            case 343: goto label332;
            case 344: goto label332;
            case 345: goto label332;
            case 346: goto label332;
            case 347: goto label037;
            case 348: goto label035;
            case 349: goto label167;
            case 350: goto label151;
            case 351: goto label332;
            case 352: goto label332;
            case 353: goto label332;
            case 354: goto label219;
            case 355: goto label246;
            case 356: goto label244;
            case 357: goto label332;
            case 358: goto label332;
            case 359: goto label332;
            case 360: goto label088;
            case 361: goto label086;
            case 362: goto label096;
            case 363: goto label109;
            case 364: goto label094;
            case 365: goto label109;
            case 366: goto label109;
            case 367: goto label109;
            case 368: goto label109;
            case 369: goto label332;
            case 370: goto label332;
            case 371: goto label332;
            case 372: goto label332;
            case 373: goto label324;
            case 374: goto label332;
            case 375: goto label332;
            case 376: goto label332;
            case 377: goto label332;
            case 378: goto label165;
            case 379: goto label332;
            case 380: goto label332;
            case 381: goto label332;
            case 382: goto label219;
            case 383: goto label332;
            case 384: goto label332;
            case 385: goto label029;
            case 386: goto label332;
            case 387: goto label332;
            case 388: goto label027;
            case 389: goto label109;
            case 390: goto label109;
            case 391: goto label055;
            case 392: goto label242;
            case 393: goto label077;
            case 394: goto label332;
            case 395: goto label332;
            case 396: goto label092;
            case 397: goto label332;
            case 398: goto label332;
            case 399: goto label332;
            case 400: goto label332;
            case 401: goto label332;
            case 402: goto label332;
            case 403: goto label332;
            case 404: goto label119;
            case 405: goto label290;
            case 406: goto label288;
            case 407: goto label332;
            case 408: goto label025;
            case 409: goto label332;
            case 410: goto label109;
            case 411: goto label053;
            case 412: goto label332;
            case 413: goto label332;
            case 414: goto label051;
            case 415: goto label332;
            case 416: goto label023;
            case 417: goto label332;
            case 418: goto label332;
            case 419: goto label285;
            case 420: goto label332;
            case 421: goto label021;
            case 422: goto label019;
            case 423: goto label071;
            case 424: goto label069;
            case 425: goto label049;
            case 426: goto label332;
            case 427: goto label075;
            case 428: goto label332;
            case 429: goto label240;
            case 430: goto label282;
            case 431: goto label067;
            case 432: goto label238;
            case 433: goto label332;
            case 434: goto label018;
            case 435: goto label020;
            case 436: goto label022;
            case 437: goto label024;
            case 438: goto label026;
            case 439: goto label028;
            case 440: goto label030;
            case 441: goto label032;
            case 442: goto label034;
            case 443: goto label036;
            case 444: goto label038;
            case 445: goto label040;
            case 446: goto label042;
            case 447: goto label044;
            case 448: goto label046;
            case 449: goto label048;
            case 450: goto label050;
            case 451: goto label052;
            case 452: goto label054;
            case 453: goto label056;
            case 454: goto label058;
            case 455: goto label060;
            case 456: goto label062;
            case 457: goto label064;
            case 458: goto label066;
            case 459: goto label068;
            case 460: goto label070;
            case 461: goto label072;
            case 462: goto label074;
            case 463: goto label076;
            case 464: goto label078;
            case 465: goto label081;
            case 466: goto label083;
            case 467: goto label085;
            case 468: goto label087;
            case 469: goto label089;
            case 470: goto label091;
            case 471: goto label093;
            case 472: goto label095;
            case 473: goto label097;
            case 474: goto label099;
            case 475: goto label104;
            case 476: goto label106;
            case 477: goto label108;
            case 478: goto label110;
            case 479: goto label112;
            case 480: goto label114;
            case 481: goto label116;
            case 482: goto label118;
            case 483: goto label120;
            case 484: goto label122;
            case 485: goto label126;
            case 486: goto label128;
            case 487: goto label130;
            case 488: goto label132;
            case 489: goto label134;
            case 490: goto label136;
            case 491: goto label138;
            case 492: goto label140;
            case 493: goto label142;
            case 494: goto label144;
            case 495: goto label146;
            case 496: goto label148;
            case 497: goto label150;
            case 498: goto label152;
            case 499: goto label154;
            case 500: goto label156;
            case 501: goto label158;
            case 502: goto label160;
            case 503: goto label162;
            case 504: goto label164;
            case 505: goto label166;
            case 506: goto label168;
            case 507: goto label170;
            case 508: goto label172;
            case 509: goto label174;
            case 510: goto label176;
            case 511: goto label178;
            case 512: goto label183;
            case 513: goto label188;
            case 514: goto label190;
            case 515: goto label193;
            case 516: goto label195;
            case 517: goto label197;
            case 518: goto label204;
            case 519: goto label206;
            case 520: goto label208;
            case 521: goto label210;
            case 522: goto label212;
            case 523: goto label214;
            case 524: goto label216;
            case 525: goto label218;
            case 526: goto label220;
            case 527: goto label222;
            case 528: goto label224;
            case 529: goto label226;
            case 530: goto label228;
            case 531: goto label230;
            case 532: goto label235;
            case 533: goto label237;
            case 534: goto label239;
            case 535: goto label241;
            case 536: goto label243;
            case 537: goto label245;
            case 538: goto label247;
            case 539: goto label249;
            case 540: goto label251;
            case 541: goto label253;
            case 542: goto label256;
            case 543: goto label258;
            case 544: goto label260;
            case 545: goto label262;
            case 546: goto label264;
            case 547: goto label266;
            case 548: goto label269;
            case 549: goto label271;
            case 550: goto label273;
            case 551: goto label275;
            case 552: goto label277;
            case 553: goto label279;
            case 554: goto label281;
            case 555: goto label284;
            case 556: goto label287;
            case 557: goto label289;
            case 558: goto label291;
            case 559: goto label296;
            case 560: goto label298;
            case 561: goto label303;
            case 562: goto label305;
            case 563: goto label307;
            case 564: goto label309;
            case 565: goto label311;
            case 566: goto label313;
            case 567: goto label315;
            case 568: goto label318;
            case 569: goto label321;
            case 570: goto label323;
            case 571: goto label325;
            case 572: goto label327;
            case 573: goto label329;
            case 574: goto label330;
            case 575: goto label331;
            default: goto label332;
        };

     label017:
        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char)>(38);

        $i33 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i33);

     label018:
        goto label001;

     label019:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(30);

        return 292;

     label020:
        goto label001;

     label021:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(30);

        return 290;

     label022:
        goto label001;

     label023:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(25);

        return 278;

     label024:
        goto label001;

     label025:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(30);

        return 291;

     label026:
        goto label001;

     label027:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(30);

        return 288;

     label028:
        goto label001;

     label029:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(30);

        return 289;

     label030:
        goto label001;

     label031:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(30);

        return 275;

     label032:
        goto label001;

     label033:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(31);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean bypassGERefs> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean bypassPERefs> = 0;

     label034:
        goto label001;

     label035:
        $i31 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i31);

        $r14 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        virtualinvoke $r14.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportCdata(char)>(34);

     label036:
        goto label001;

     label037:
        $i32 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i32);

        $r15 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        virtualinvoke $r15.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportCdata(char)>(39);

     label038:
        goto label001;

     label039:
        $i47 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i47);

        $r23 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        virtualinvoke $r23.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportCdata(char)>(38);

     label040:
        goto label001;

     label041:
        $i83 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i83);

        $r44 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        virtualinvoke $r44.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportCdata(char)>(62);

     label042:
        goto label001;

     label043:
        $i90 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i90);

        $r48 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        virtualinvoke $r48.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportCdata(char)>(60);

     label044:
        goto label001;

     label045:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(30);

        return 286;

     label046:
        goto label001;

     label047:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(21);

        return 258;

     label048:
        goto label001;

     label049:
        return 272;

     label050:
        goto label001;

     label051:
        return 307;

     label052:
        goto label001;

     label053:
        return 304;

     label054:
        goto label001;

     label055:
        return 305;

     label056:
        goto label001;

     label057:
        return 283;

     label058:
        goto label001;

     label059:
        return 274;

     label060:
        goto label001;

     label061:
        return 275;

     label062:
        goto label001;

     label063:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(4);

     label064:
        goto label001;

     label065:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(21);

        return 276;

     label066:
        goto label001;

     label067:
        return 271;

     label068:
        goto label001;

     label069:
        return 285;

     label070:
        goto label001;

     label071:
        return 285;

     label072:
        goto label001;

     label073:
        return 313;

     label074:
        goto label001;

     label075:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(30);

        return 308;

     label076:
        goto label001;

     label077:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean bypassGERefs> = 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean bypassPERefs> = 1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(29);

        return 270;

     label078:
        goto label001;

     label079:
        $i189 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int parseWhitespace()>();

        if $i189 != 257 goto label080;

        $r167 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        virtualinvoke $r167.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportCdata()>();

     label080:
        return $i189;

     label081:
        goto label001;

     label082:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(30);

        $r121 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2()>();

        $i162 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int stringToken(int,java.lang.String)>(260, $r121);

        return $i162;

     label083:
        goto label001;

     label084:
        $r116 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i149 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i147 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i146 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i148 = $i147 - $i146;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char[],int,int)>($r116, $i149, $i148);

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(32);

     label085:
        goto label001;

     label086:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(30);

        return 257;

     label087:
        goto label001;

     label088:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(30);

        return 287;

     label089:
        goto label001;

     label090:
        $i123 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i123);

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void parseSingleQuotedTagValue()>();

     label091:
        goto label001;

     label092:
        return 273;

     label093:
        goto label001;

     label094:
        return 300;

     label095:
        goto label001;

     label096:
        return 309;

     label097:
        goto label001;

     label098:
        return 310;

     label099:
        goto label001;

     label100:
        $i112 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i112);

        $i113 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cbuflen>;

        if $i113 < 4 goto label101;

        $r73 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeQName>;

        if $r73 != "xmlns" goto label102;

     label101:
        $r68 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.CharStringConverter stringConverter>;

        $r67 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cbuf>;

        $i114 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cbuflen>;

        r268 = virtualinvoke $r68.<org.apache.xmlbeans.impl.piccolo.util.CharStringConverter: java.lang.String convert(char[],int,int)>($r67, 0, $i114);

        goto label103;

     label102:
        $r269 = new java.lang.String;

        $r75 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cbuf>;

        $i115 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cbuflen>;

        specialinvoke $r269.<java.lang.String: void <init>(char[],int,int)>($r75, 0, $i115);

        r268 = $r269;

     label103:
        $r72 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeURI>;

        $r71 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeLocalName>;

        $r70 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeQName>;

        $r69 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeValueType>;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r72, $r71, $r70, $r69, r268);

     label104:
        goto label001;

     label105:
        $r120 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2()>();

        $i161 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int stringToken(int,java.lang.String)>(260, $r120);

        return $i161;

     label106:
        goto label001;

     label107:
        return 277;

     label108:
        goto label001;

     label109:
        $r119 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2()>();

        $i160 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int stringToken(int,java.lang.String)>(260, $r119);

        return $i160;

     label110:
        goto label001;

     label111:
        return 311;

     label112:
        goto label001;

     label113:
        return 314;

     label114:
        goto label001;

     label115:
        return 312;

     label116:
        goto label001;

     label117:
        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char)>(32);

     label118:
        goto label001;

     label119:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeURI> = "xmlns";

        $i19 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        $i20 = $i19 - 6;

        $r9 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2(int,int)>(6, $i20);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeLocalName> = $r9;

        $r10 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeQName> = $r10;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isNamespaceDeclaration> = 1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(10);

     label120:
        goto label001;

     label121:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(24);

        $r29 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2()>();

        $i59 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int stringToken(int,java.lang.String)>(298, $r29);

        return $i59;

     label122:
        goto label001;

     label123:
        $z5 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isTopEntity()>();

        if $z5 == 0 goto label124;

        $r31 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>("Parameter entities may not appear in the internal subset");

        throw $r31;

     label124:
        $i60 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        $i61 = $i60 - 2;

        $r30 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2(int,int)>(1, $i61);

        $i62 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int handleEntityRef(java.lang.String,int)>($r30, 1);

        if $i62 == 0 goto label125;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean returnEntityEndToken> = 0;

     label125:
        return 266;

     label126:
        goto label001;

     label127:
        $i124 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i124);

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void parseQuotedTagValue()>();

     label128:
        goto label001;

     label129:
        $r172 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i203 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i201 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i200 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i202 = $i201 - $i200;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char[],int,int)>($r172, $i203, $i202);

     label130:
        goto label001;

     label131:
        $r173 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i207 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i205 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i204 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i206 = $i205 - $i204;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char[],int,int)>($r173, $i207, $i206);

     label132:
        goto label001;

     label133:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(32);

     label134:
        goto label001;

     label135:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(24);

        $r122 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2()>();

        $i163 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int stringToken(int,java.lang.String)>(299, $r122);

        return $i163;

     label136:
        goto label001;

     label137:
        $i133 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i133);

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void processComplexElement()>();

        $r93 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r92 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r93.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportStartTag(java.lang.String,java.lang.String,java.lang.String)>("", "", $r92);

        $r95 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r94 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r95.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportEndTag(java.lang.String,java.lang.String,java.lang.String)>("", "", $r94);

        $r96 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder attribs>;

        virtualinvoke $r96.<org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder: void clear()>();

        $z11 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean tokenizeInput>;

        if $z11 == 0 goto label138;

        return 265;

     label138:
        goto label001;

     label139:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(19);

        $i128 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        $i129 = $i128 - 1;

        $r90 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2(int,int)>(1, $i129);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue> = $r90;

     label140:
        goto label001;

     label141:
        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void safeBacktrack()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void parseCdata()>();

        $r168 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        virtualinvoke $r168.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportCdata()>();

        return 257;

     label142:
        goto label001;

     label143:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean needsNormalization> = 1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(12);

     label144:
        goto label001;

     label145:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(12);

     label146:
        goto label001;

     label147:
        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char)>(32);

     label148:
        goto label001;

     label149:
        return 266;

     label150:
        goto label001;

     label151:
        $r13 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>("\'?xml\' is a reserved processing instruction target and must be in lower case.");

        throw $r13;

     label152:
        goto label001;

     label153:
        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void clearCbuf()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState> = 18;

        $i167 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i167);

        $r134 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i171 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i169 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i168 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i170 = $i169 - $i168;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char[],int,int)>($r134, $i171, $i170);

     label154:
        goto label001;

     label155:
        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void clearCbuf()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState> = 17;

        $i172 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i172);

        $r135 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i176 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i174 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i173 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i175 = $i174 - $i173;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char[],int,int)>($r135, $i176, $i175);

     label156:
        goto label001;

     label157:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState> = 34;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void clearCbuf()>();

        $r118 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i155 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i156 = $i155 + 1;

        $i157 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        $i158 = $i157 - 1;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char[],int,int)>($r118, $i156, $i158);

        $i159 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i159);

     label158:
        goto label001;

     label159:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(30);

        $r270 = new java.lang.String;

        $r115 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cbuf>;

        $i144 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cbuflen>;

        specialinvoke $r270.<java.lang.String: void <init>(char[],int,int)>($r115, 0, $i144);

        $i145 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int stringToken(int,java.lang.String)>(261, $r270);

        return $i145;

     label160:
        goto label001;

     label161:
        return 282;

     label162:
        goto label001;

     label163:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(37);

     label164:
        goto label001;

     label165:
        $i21 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i21);

        $r12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r11 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i22 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i27 = $i22 + 3;

        $i24 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i23 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i25 = $i24 - $i23;

        $i26 = $i25 - 6;

        virtualinvoke $r12.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportComment(char[],int,int)>($r11, $i27, $i26);

        $z4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean tokenizeInput>;

        if $z4 == 0 goto label166;

        return 301;

     label166:
        goto label001;

     label167:
        $i30 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState> = $i30;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(1);

     label168:
        goto label001;

     label169:
        $i179 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i179);

        $r150 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.StringStack tagStack>;

        $r149 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r150.<org.apache.xmlbeans.impl.piccolo.util.StringStack: void push(java.lang.String)>($r149);

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void processComplexElement()>();

        $r154 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r153 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI>;

        $r152 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName>;

        $r151 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r154.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportStartTag(java.lang.String,java.lang.String,java.lang.String)>($r153, $r152, $r151);

        $r155 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder attribs>;

        virtualinvoke $r155.<org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder: void clear()>();

        $z22 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean tokenizeInput>;

        if $z22 == 0 goto label170;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void setTokenize(boolean)>(0);

        return 263;

     label170:
        goto label001;

     label171:
        $r171 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i197 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i195 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i194 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i196 = $i195 - $i194;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char[],int,int)>($r171, $i197, $i196);

     label172:
        goto label001;

     label173:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState> = 35;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void clearCbuf()>();

        $r117 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i150 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i151 = $i150 + 1;

        $i152 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        $i153 = $i152 - 1;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char[],int,int)>($r117, $i151, $i153);

        $i154 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i154);

     label174:
        goto label001;

     label175:
        $i136 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int piPrevState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i136);

        $r99 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r100 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementQName>;

        $i137 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        $i138 = $i137 - 2;

        $r101 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext(int,int)>(0, $i138);

        virtualinvoke $r99.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportPI(java.lang.String,java.lang.String)>($r100, $r101);

        $z13 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean tokenizeInput>;

        if $z13 == 0 goto label176;

        return 259;

     label176:
        goto label001;

     label177:
        $i127 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i127);

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void processComplexElement()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void resolveNamespacePrefixes()>();

        $r84 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r83 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI>;

        $r82 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName>;

        $r81 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r84.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportStartTag(java.lang.String,java.lang.String,java.lang.String)>($r83, $r82, $r81);

        $r88 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r87 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI>;

        $r86 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName>;

        $r85 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r88.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportEndTag(java.lang.String,java.lang.String,java.lang.String)>($r87, $r86, $r85);

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void processNSContextEnd()>();

        $r89 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder attribs>;

        virtualinvoke $r89.<org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder: void clear()>();

        $z10 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean tokenizeInput>;

        if $z10 == 0 goto label178;

        return 265;

     label178:
        goto label001;

     label179:
        $i48 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i48);

     label180:
        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void clearCbuf()>();

        $r24 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i49 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i50 = $i49 + 2;

        $i51 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        $i52 = $i51 - 3;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void parseEncodedChar(char[],int,int,int)>($r24, $i50, $i52, 16);

        $r26 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r25 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cbuf>;

        $i53 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cbuflen>;

        virtualinvoke $r26.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportCdata(char[],int,int)>($r25, 0, $i53);

     label181:
        goto label183;

     label182:
        $r261 := @caughtexception;

        $r271 = new java.lang.StringBuffer;

        specialinvoke $r271.<java.lang.StringBuffer: void <init>()>();

        $r263 = virtualinvoke $r271.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid character entity reference: &");

        $r264 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext()>();

        $r265 = virtualinvoke $r263.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r264);

        $r266 = virtualinvoke $r265.<java.lang.StringBuffer: java.lang.String toString()>();

        $r267 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>($r266);

        throw $r267;

     label183:
        goto label001;

     label184:
        $i84 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i84);

     label185:
        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void clearCbuf()>();

        $r45 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i85 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i86 = $i85 + 1;

        $i87 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        $i88 = $i87 - 2;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void parseEncodedChar(char[],int,int,int)>($r45, $i86, $i88, 10);

        $r47 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r46 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cbuf>;

        $i89 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cbuflen>;

        virtualinvoke $r47.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportCdata(char[],int,int)>($r46, 0, $i89);

     label186:
        goto label188;

     label187:
        $r254 := @caughtexception;

        $r272 = new java.lang.StringBuffer;

        specialinvoke $r272.<java.lang.StringBuffer: void <init>()>();

        $r256 = virtualinvoke $r272.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid character entity reference: &");

        $r257 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext()>();

        $r258 = virtualinvoke $r256.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r257);

        $r259 = virtualinvoke $r258.<java.lang.StringBuffer: java.lang.String toString()>();

        $r260 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>($r259);

        throw $r260;

     label188:
        goto label001;

     label189:
        $r273 = new java.lang.StringBuffer;

        specialinvoke $r273.<java.lang.StringBuffer: void <init>()>();

        $r158 = virtualinvoke $r273.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected character encountered (lex state ");

        $i181 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yystate()>();

        $r159 = virtualinvoke $r158.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i181);

        $r160 = virtualinvoke $r159.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("): \'");

        $r161 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext()>();

        $r162 = virtualinvoke $r160.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r161);

        $r163 = virtualinvoke $r162.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r164 = virtualinvoke $r163.<java.lang.StringBuffer: java.lang.String toString()>();

        $r165 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>($r164);

        throw $r165;

     label190:
        goto label001;

     label191:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(30);

        $z8 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isTopEntity()>();

        if $z8 == 0 goto label192;

        $r53 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>("\'<![\' constructs are not allowed in the internal DTD subset");

        throw $r53;

     label192:
        return 302;

     label193:
        goto label001;

     label194:
        $i111 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i111);

        $r66 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeURI>;

        $r65 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeLocalName>;

        $r64 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeQName>;

        $r63 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeValueType>;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r66, $r65, $r64, $r63, "");

     label195:
        goto label001;

     label196:
        $i165 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i165);

        $r124 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void checkEndTag(java.lang.String)>($r124);

        $r128 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r127 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI>;

        $r126 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName>;

        $r125 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r128.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportEndTag(java.lang.String,java.lang.String,java.lang.String)>($r127, $r126, $r125);

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void processNSContextEnd()>();

        $z19 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean tokenizeInput>;

        if $z19 == 0 goto label197;

        return 264;

     label197:
        goto label001;

     label198:
        $r103 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity>;

        $z14 = interfaceinvoke $r103.<org.apache.xmlbeans.impl.piccolo.xml.Entity: boolean isInternal()>();

        if $z14 == 0 goto label199;

        $r113 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>("XML declarations are not allowed in internal entities");

        throw $r113;

     label199:
        $i143 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i143);

        $r104 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity>;

        $r105 = interfaceinvoke $r104.<org.apache.xmlbeans.impl.piccolo.xml.Entity: java.lang.String getXMLVersion()>();

        if $r105 == null goto label202;

        $r110 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity>;

        $r111 = interfaceinvoke $r110.<org.apache.xmlbeans.impl.piccolo.xml.Entity: java.lang.String getDeclaredEncoding()>();

        if $r111 != null goto label200;

        return 315;

     label200:
        $r112 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity>;

        $z16 = interfaceinvoke $r112.<org.apache.xmlbeans.impl.piccolo.xml.Entity: boolean isStandaloneDeclared()>();

        if $z16 == 0 goto label201;

        return 315;

     label201:
        return 317;

     label202:
        $r106 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity>;

        $r107 = interfaceinvoke $r106.<org.apache.xmlbeans.impl.piccolo.xml.Entity: java.lang.String getDeclaredEncoding()>();

        if $r107 == null goto label203;

        $r109 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity>;

        $z15 = interfaceinvoke $r109.<org.apache.xmlbeans.impl.piccolo.xml.Entity: boolean isStandaloneDeclared()>();

        if $z15 != 0 goto label203;

        return 316;

     label203:
        $r108 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>("XML declaration is not well-formed");

        throw $r108;

     label204:
        goto label001;

     label205:
        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void clearCbuf()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState> = 17;

        $i199 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i199);

     label206:
        goto label001;

     label207:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(36);

     label208:
        goto label001;

     label209:
        return 303;

     label210:
        goto label001;

     label211:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(27);

     label212:
        goto label001;

     label213:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(12);

     label214:
        goto label001;

     label215:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(30);

        $i106 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        $i107 = $i106 - 2;

        $r56 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext(int,int)>(1, $i107);

        $i108 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int stringToken(int,java.lang.String)>(261, $r56);

        return $i108;

     label216:
        goto label001;

     label217:
        $i103 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        $i104 = $i103 - 2;

        $r55 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext(int,int)>(1, $i104);

        $i105 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int stringToken(int,java.lang.String)>(261, $r55);

        return $i105;

     label218:
        goto label001;

     label219:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isNamespaceDeclaration> = 0;

        $r146 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeQName> = $r146;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeLocalName> = $r146;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeURI> = "";

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(10);

     label220:
        goto label001;

     label221:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(20);

        $r78 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport nsSupport>;

        $r79 = virtualinvoke $r78.<org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport: java.lang.String getDefaultURI()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI> = $r79;

        $i125 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        $i126 = $i125 - 1;

        $r80 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2(int,int)>(1, $i126);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName> = $r80;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue> = $r80;

     label222:
        goto label001;

     label223:
        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void clearCbuf()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState> = 18;

        $i198 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i198);

     label224:
        goto label001;

     label225:
        return 281;

     label226:
        goto label001;

     label227:
        $i130 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int piPrevState> = $i130;

        $i131 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        $i132 = $i131 - 1;

        $r91 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2(int,int)>(1, $i132);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementQName> = $r91;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(5);

     label228:
        goto label001;

     label229:
        $r156 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeQName> = $r156;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(10);

     label230:
        goto label001;

     label231:
        $i182 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yyline_next>;

        $i183 = $i182 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tokenStartLine> = $i183;

        $i184 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yycolumn_next>;

        $i185 = $i184 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tokenStartColumn> = $i185;

        $i186 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagStartState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i186);

        $r166 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $z23 = $r166.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: boolean fNamespaces>;

        if $z23 == 0 goto label232;

        i238 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int parseTagNS()>();

        goto label233;

     label232:
        i238 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int parseTag()>();

     label233:
        $i254 = (int) -1;

        if i238 == $i254 goto label235;

        $z24 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean tokenizeInput>;

        if $z24 == 0 goto label235;

        $i187 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagType>;

        if $i187 != 263 goto label234;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void setTokenize(boolean)>(0);

     label234:
        $i188 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagType>;

        return $i188;

     label235:
        goto label001;

     label236:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(23);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean bypassPERefs> = 1;

        $r123 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2()>();

        $i164 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int stringToken(int,java.lang.String)>(260, $r123);

        return $i164;

     label237:
        goto label001;

     label238:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(30);

        return 280;

     label239:
        goto label001;

     label240:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(22);

        return 279;

     label241:
        goto label001;

     label242:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean bypassGERefs> = 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean bypassPERefs> = 1;

        return 269;

     label243:
        goto label001;

     label244:
        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char)>(34);

        $i28 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i28);

     label245:
        goto label001;

     label246:
        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char)>(39);

        $i29 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i29);

     label247:
        goto label001;

     label248:
        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char)>(62);

        $i66 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i66);

     label249:
        goto label001;

     label250:
        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char)>(60);

        $i72 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i72);

     label251:
        goto label001;

     label252:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(26);

        return 274;

     label253:
        goto label001;

     label254:
        $z6 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isTopEntity()>();

        if $z6 == 0 goto label255;

        $r51 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>("Parameter entities may not appear in the internal subset");

        throw $r51;

     label255:
        $i91 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        $i92 = $i91 - 1;

        $r49 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2(int,int)>(0, $i92);

        $z7 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean handleLiteralEntityRef(java.lang.String,int)>($r49, 1);

        if $z7 != 0 goto label256;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char)>(37);

        $r50 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i96 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i94 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i93 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i95 = $i94 - $i93;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char[],int,int)>($r50, $i96, $i95);

        $i97 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i97);

     label256:
        goto label001;

     label257:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isNamespaceDeclaration> = 0;

        $r40 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeQName> = $r40;

        $r41 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeQName>;

        $i78 = virtualinvoke $r41.<java.lang.String: int indexOf(int)>(58);

        $r42 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2(int,int)>(0, $i78);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeURI> = $r42;

        $i79 = $i78 + 1;

        $i80 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        $i81 = $i80 - $i78;

        $i82 = $i81 - 1;

        $r43 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2(int,int)>($i79, $i82);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeLocalName> = $r43;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(10);

     label258:
        goto label001;

     label259:
        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char)>(38);

        $r52 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i98 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i99 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char[],int,int)>($r52, $i98, $i99);

        $i100 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i100);

     label260:
        goto label001;

     label261:
        $i166 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i166);

        $r129 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void checkEndTag(java.lang.String)>($r129);

        $r133 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r132 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI>;

        $r131 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName>;

        $r130 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r133.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportEndTag(java.lang.String,java.lang.String,java.lang.String)>($r132, $r131, $r130);

        $z20 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean tokenizeInput>;

        if $z20 == 0 goto label262;

        return 264;

     label262:
        goto label001;

     label263:
        $r170 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i192 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i193 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char[],int,int)>($r170, $i192, $i193);

     label264:
        goto label001;

     label265:
        $r169 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i190 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i191 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char[],int,int)>($r169, $i190, $i191);

     label266:
        goto label001;

     label267:
        i239 = 0;

     label268:
        $i177 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        if i239 >= $i177 goto label269;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char)>(32);

        i239 = i239 + 1;

        goto label268;

     label269:
        goto label001;

     label270:
        $i63 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        $i64 = $i63 - 2;

        $r32 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2(int,int)>(1, $i64);

        $i65 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int handleEntityRef(java.lang.String,int)>($r32, 1);

        if $i65 == 0 goto label271;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean returnEntityEndToken> = 0;

        return $i65;

     label271:
        goto label001;

     label272:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(6);

        $r147 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue> = $r147;

        $r148 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void prepareComplexElement(java.lang.String)>($r148);

     label273:
        goto label001;

     label274:
        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void safeBacktrack()>();

        $i180 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int parseXML()>();

        if $i180 == 0 goto label275;

        return $i180;

     label275:
        goto label001;

     label276:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(3);

     label277:
        goto label001;

     label278:
        $i139 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i139);

        $i140 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        $i141 = $i140 - 1;

        $r102 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2(int,int)>(0, $i141);

        $i142 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int handleEntityRef(java.lang.String,int)>($r102, 0);

        if $i142 == 0 goto label279;

        return $i142;

     label279:
        goto label001;

     label280:
        $i134 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int piPrevState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i134);

        $r98 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r97 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementQName>;

        virtualinvoke $r98.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportPI(java.lang.String,java.lang.String)>($r97, "");

        $i135 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int piPrevState>;

        if $i135 == 33 goto label281;

        $z12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean tokenizeInput>;

        if $z12 == 0 goto label281;

        return 259;

     label281:
        goto label001;

     label282:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(30);

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean parseExternalEntities(int)>(0);

        if $z2 == 0 goto label283;

        return 267;

     label283:
        return 268;

     label284:
        goto label001;

     label285:
        $i18 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i18);

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void startCdata()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void parseCdataSection()>();

        $z3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean tokenizeInput>;

        if $z3 == 0 goto label286;

        return 257;

     label286:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void endCdata()>();

     label287:
        goto label001;

     label288:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeURI> = "xmlns";

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeLocalName> = "";

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeQName> = "xmlns";

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isNamespaceDeclaration> = 1;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void parseCdataLiteral(char,int)>(39, 14);

     label289:
        goto label001;

     label290:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeURI> = "xmlns";

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeLocalName> = "";

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeQName> = "xmlns";

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isNamespaceDeclaration> = 1;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void parseCdataLiteral(char,int)>(34, 13);

     label291:
        goto label001;

     label292:
        $i34 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i34);

     label293:
        $r16 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i35 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i36 = $i35 + 2;

        $i37 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        $i38 = $i37 - 3;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void parseEncodedChar(char[],int,int,int)>($r16, $i36, $i38, 16);

     label294:
        goto label296;

     label295:
        $r247 := @caughtexception;

        $r274 = new java.lang.StringBuffer;

        specialinvoke $r274.<java.lang.StringBuffer: void <init>()>();

        $r249 = virtualinvoke $r274.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid character entity reference: &");

        $r250 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext()>();

        $r251 = virtualinvoke $r249.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r250);

        $r252 = virtualinvoke $r251.<java.lang.StringBuffer: java.lang.String toString()>();

        $r253 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>($r252);

        throw $r253;

     label296:
        goto label001;

     label297:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(21);

        $r28 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r27 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i58 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i54 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i56 = $i54 - 3;

        $i55 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i57 = $i56 - $i55;

        virtualinvoke $r28.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportComment(char[],int,int)>($r27, $i58, $i57);

     label298:
        goto label001;

     label299:
        $i67 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i67);

     label300:
        $r33 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i68 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i69 = $i68 + 1;

        $i70 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        $i71 = $i70 - 2;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void parseEncodedChar(char[],int,int,int)>($r33, $i69, $i71, 10);

     label301:
        goto label303;

     label302:
        $r240 := @caughtexception;

        $r275 = new java.lang.StringBuffer;

        specialinvoke $r275.<java.lang.StringBuffer: void <init>()>();

        $r242 = virtualinvoke $r275.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid character entity reference: &");

        $r243 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext()>();

        $r244 = virtualinvoke $r242.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r243);

        $r245 = virtualinvoke $r244.<java.lang.StringBuffer: java.lang.String toString()>();

        $r246 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>($r245);

        throw $r246;

     label303:
        goto label001;

     label304:
        $r34 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport nsSupport>;

        virtualinvoke $r34.<org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport: void pushContext()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(8);

        $r35 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue> = $r35;

        $r36 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        $i73 = virtualinvoke $r36.<java.lang.String: int indexOf(int)>(58);

        $r37 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2(int,int)>(0, $i73);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI> = $r37;

        $i74 = $i73 + 1;

        $i75 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        $i76 = $i73 + 1;

        $i77 = $i75 - $i76;

        $r38 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2(int,int)>($i74, $i77);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName> = $r38;

        $r39 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void prepareComplexElement(java.lang.String)>($r39);

     label305:
        goto label001;

     label306:
        $i109 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int tagState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i109);

        $r59 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeURI>;

        $r60 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeLocalName>;

        $r61 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeQName>;

        $r62 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String attributeValueType>;

        $r276 = new java.lang.String;

        $r58 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] cbuf>;

        $i110 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int cbuflen>;

        specialinvoke $r276.<java.lang.String: void <init>(char[],int,int)>($r58, 0, $i110);

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r59, $r60, $r61, $r62, $r276);

     label307:
        goto label001;

     label308:
        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void clearCbuf()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState> = 18;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean needsNormalization> = 1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(12);

     label309:
        goto label001;

     label310:
        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void clearCbuf()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState> = 17;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean needsNormalization> = 1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(12);

     label311:
        goto label001;

     label312:
        $r136 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport nsSupport>;

        virtualinvoke $r136.<org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport: void pushContext()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(8);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI> = "";

        $r137 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue> = $r137;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName> = $r137;

        $r138 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void prepareComplexElement(java.lang.String)>($r138);

     label313:
        goto label001;

     label314:
        $i178 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int baseState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i178);

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void processComplexElement()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void resolveNamespacePrefixes()>();

        $r142 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Piccolo parser>;

        $r141 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI>;

        $r140 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName>;

        $r139 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r142.<org.apache.xmlbeans.impl.piccolo.xml.Piccolo: void reportStartTag(java.lang.String,java.lang.String,java.lang.String)>($r141, $r140, $r139);

        $r143 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder attribs>;

        virtualinvoke $r143.<org.apache.xmlbeans.impl.piccolo.xml.AttributesHolder: void clear()>();

        $r145 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.util.StringStack tagStack>;

        $r144 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        virtualinvoke $r145.<org.apache.xmlbeans.impl.piccolo.util.StringStack: void push(java.lang.String)>($r144);

        $z21 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean tokenizeInput>;

        if $z21 == 0 goto label315;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void setTokenize(boolean)>(0);

        return 263;

     label315:
        goto label001;

     label316:
        $z18 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean bypassGERefs>;

        if $z18 == 0 goto label317;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char)>(38);

        goto label318;

     label317:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(36);

     label318:
        goto label001;

     label319:
        $z17 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean bypassPERefs>;

        if $z17 == 0 goto label320;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char)>(37);

        goto label321;

     label320:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(37);

     label321:
        goto label001;

     label322:
        $i116 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        $i117 = $i116 - 1;

        $r76 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2(int,int)>(0, $i117);

        $z9 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean handleLiteralEntityRef(java.lang.String,int)>($r76, 0);

        if $z9 != 0 goto label323;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char)>(38);

        $r77 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_buffer>;

        $i121 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i119 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_markedPos>;

        $i118 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i120 = $i119 - $i118;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void appendToCbuf(char[],int,int)>($r77, $i121, $i120);

        $i122 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>($i122);

     label323:
        goto label001;

     label324:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int prevState> = 21;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(1);

     label325:
        goto label001;

     label326:
        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(20);

        $i39 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        $i40 = $i39 - 1;

        $r17 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2(int,int)>(1, $i40);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue> = $r17;

        $r18 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String stringValue>;

        $i41 = virtualinvoke $r18.<java.lang.String: int indexOf(int)>(58);

        i240 = $i41 + 1;

        $r19 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport nsSupport>;

        $i42 = i240 - 1;

        $r20 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2(int,int)>(1, $i42);

        $r21 = virtualinvoke $r19.<org.apache.xmlbeans.impl.piccolo.xml.FastNamespaceSupport: java.lang.String getURI(java.lang.String)>($r20);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementURI> = $r21;

        $i43 = i240 + 1;

        $i44 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        $i45 = $i44 - 1;

        $i46 = $i45 - i240;

        $r22 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2(int,int)>($i43, $i46);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementLocalName> = $r22;

     label327:
        goto label001;

     label328:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int piPrevState> = 21;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yybegin(int)>(5);

        $i101 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yylength()>();

        $i102 = $i101 - 1;

        $r54 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yytext2(int,int)>(1, $i102);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String elementQName> = $r54;

     label329:
        goto label001;

     label330:
        goto label001;

     label331:
        goto label001;

     label332:
        $i256 = (int) -1;

        if i235 != $i256 goto label359;

        $i209 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_startRead>;

        $i208 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_currentPos>;

        if $i209 != $i208 goto label359;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yy_atEOF> = 1;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yy_do_eof()>();

        $i210 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yy_lexical_state>;

        lookupswitch($i210)
        {
            case 3: goto label337;
            case 4: goto label335;
            case 5: goto label345;
            case 8: goto label341;
            case 9: goto label347;
            case 10: goto label349;
            case 12: goto label339;
            case 19: goto label351;
            case 20: goto label333;
            case 27: goto label343;
            case 434: goto label334;
            case 435: goto label336;
            case 436: goto label338;
            case 437: goto label340;
            case 438: goto label342;
            case 439: goto label344;
            case 440: goto label346;
            case 441: goto label348;
            case 442: goto label350;
            case 443: goto label352;
            default: goto label353;
        };

     label333:
        $r277 = new java.lang.StringBuffer;

        specialinvoke $r277.<java.lang.StringBuffer: void <init>()>();

        $r181 = virtualinvoke $r277.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Entity is not well-formed (ending lex state: ");

        $i212 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yystate()>();

        $r182 = virtualinvoke $r181.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i212);

        $r183 = virtualinvoke $r182.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r184 = virtualinvoke $r183.<java.lang.StringBuffer: java.lang.String toString()>();

        $r185 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>($r184);

        throw $r185;

     label334:
        goto label001;

     label335:
        $r278 = new java.lang.StringBuffer;

        specialinvoke $r278.<java.lang.StringBuffer: void <init>()>();

        $r223 = virtualinvoke $r278.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Entity is not well-formed (ending lex state: ");

        $i219 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yystate()>();

        $r224 = virtualinvoke $r223.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i219);

        $r225 = virtualinvoke $r224.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r226 = virtualinvoke $r225.<java.lang.StringBuffer: java.lang.String toString()>();

        $r227 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>($r226);

        throw $r227;

     label336:
        goto label001;

     label337:
        $r279 = new java.lang.StringBuffer;

        specialinvoke $r279.<java.lang.StringBuffer: void <init>()>();

        $r229 = virtualinvoke $r279.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Entity is not well-formed (ending lex state: ");

        $i220 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yystate()>();

        $r230 = virtualinvoke $r229.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i220);

        $r231 = virtualinvoke $r230.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r232 = virtualinvoke $r231.<java.lang.StringBuffer: java.lang.String toString()>();

        $r233 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>($r232);

        throw $r233;

     label338:
        goto label001;

     label339:
        $r280 = new java.lang.StringBuffer;

        specialinvoke $r280.<java.lang.StringBuffer: void <init>()>();

        $r193 = virtualinvoke $r280.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Entity is not well-formed (ending lex state: ");

        $i214 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yystate()>();

        $r194 = virtualinvoke $r193.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i214);

        $r195 = virtualinvoke $r194.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r196 = virtualinvoke $r195.<java.lang.StringBuffer: java.lang.String toString()>();

        $r197 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>($r196);

        throw $r197;

     label340:
        goto label001;

     label341:
        $r281 = new java.lang.StringBuffer;

        specialinvoke $r281.<java.lang.StringBuffer: void <init>()>();

        $r211 = virtualinvoke $r281.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Entity is not well-formed (ending lex state: ");

        $i217 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yystate()>();

        $r212 = virtualinvoke $r211.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i217);

        $r213 = virtualinvoke $r212.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r214 = virtualinvoke $r213.<java.lang.StringBuffer: java.lang.String toString()>();

        $r215 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>($r214);

        throw $r215;

     label342:
        goto label001;

     label343:
        $r282 = new java.lang.StringBuffer;

        specialinvoke $r282.<java.lang.StringBuffer: void <init>()>();

        $r175 = virtualinvoke $r282.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Entity is not well-formed (ending lex state: ");

        $i211 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yystate()>();

        $r176 = virtualinvoke $r175.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i211);

        $r177 = virtualinvoke $r176.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r178 = virtualinvoke $r177.<java.lang.StringBuffer: java.lang.String toString()>();

        $r179 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>($r178);

        throw $r179;

     label344:
        goto label001;

     label345:
        $r283 = new java.lang.StringBuffer;

        specialinvoke $r283.<java.lang.StringBuffer: void <init>()>();

        $r217 = virtualinvoke $r283.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Entity is not well-formed (ending lex state: ");

        $i218 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yystate()>();

        $r218 = virtualinvoke $r217.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i218);

        $r219 = virtualinvoke $r218.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r220 = virtualinvoke $r219.<java.lang.StringBuffer: java.lang.String toString()>();

        $r221 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>($r220);

        throw $r221;

     label346:
        goto label001;

     label347:
        $r284 = new java.lang.StringBuffer;

        specialinvoke $r284.<java.lang.StringBuffer: void <init>()>();

        $r205 = virtualinvoke $r284.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Entity is not well-formed (ending lex state: ");

        $i216 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yystate()>();

        $r206 = virtualinvoke $r205.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i216);

        $r207 = virtualinvoke $r206.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r208 = virtualinvoke $r207.<java.lang.StringBuffer: java.lang.String toString()>();

        $r209 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>($r208);

        throw $r209;

     label348:
        goto label001;

     label349:
        $r285 = new java.lang.StringBuffer;

        specialinvoke $r285.<java.lang.StringBuffer: void <init>()>();

        $r199 = virtualinvoke $r285.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Entity is not well-formed (ending lex state: ");

        $i215 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yystate()>();

        $r200 = virtualinvoke $r199.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i215);

        $r201 = virtualinvoke $r200.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r202 = virtualinvoke $r201.<java.lang.StringBuffer: java.lang.String toString()>();

        $r203 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>($r202);

        throw $r203;

     label350:
        goto label001;

     label351:
        $r286 = new java.lang.StringBuffer;

        specialinvoke $r286.<java.lang.StringBuffer: void <init>()>();

        $r187 = virtualinvoke $r286.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Entity is not well-formed (ending lex state: ");

        $i213 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int yystate()>();

        $r188 = virtualinvoke $r187.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i213);

        $r189 = virtualinvoke $r188.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r190 = virtualinvoke $r189.<java.lang.StringBuffer: java.lang.String toString()>();

        $r191 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.FatalParsingException fatalError(java.lang.String)>($r190);

        throw $r191;

     label352:
        goto label001;

     label353:
        $z25 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean yymoreStreams()>();

        if $z25 == 0 goto label358;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yypopStream()>();

        $z26 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isEntityBeingParsed>;

        if $z26 == 0 goto label355;

        $r234 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity>;

        if $r234 == null goto label354;

        $r238 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity>;

        interfaceinvoke $r238.<org.apache.xmlbeans.impl.piccolo.xml.Entity: void close()>();

     label354:
        $r235 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.util.Stack entityStack>;

        $r236 = virtualinvoke $r235.<java.util.Stack: java.lang.Object pop()>();

        $r237 = (org.apache.xmlbeans.impl.piccolo.xml.Entity) $r236;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: org.apache.xmlbeans.impl.piccolo.xml.Entity currentEntity> = $r237;

     label355:
        $z29 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean returnEntityEndToken>;

        $z30 = r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: boolean isParamEntity>;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void popEntityState()>();

        if $z29 == 0 goto label356;

        return 294;

     label356:
        if $z30 == 0 goto label357;

        return 266;

     label357:
        goto label001;

     label358:
        return 0;

     label359:
        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void yy_ScanError(int)>(2);

        goto label001;

        catch org.apache.xmlbeans.impl.piccolo.io.IllegalCharException from label180 to label181 with label182;
        catch org.apache.xmlbeans.impl.piccolo.io.IllegalCharException from label185 to label186 with label187;
        catch java.lang.ClassCastException from label293 to label294 with label295;
        catch java.lang.ClassCastException from label300 to label301 with label302;
    }

    static void <clinit>()
    {
        byte[] $r4;
        java.lang.String[] $r3;
        int[] $r1, $r2;
        char[] $r0, $r5, $r6, $r7, $r8;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int YY_SKIP_2BIG> = 4;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int YY_PUSHBACK_2BIG> = 3;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int YY_NO_MATCH> = 2;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int YY_ILLEGAL_STATE> = 1;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int YY_UNKNOWN_ERROR> = 0;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yy_packed0> = "\u0001\'\u0001(\u0004\'\u0001(\u0003\'\u0001)\u0001*\u0004\'\u0001()\'\u0001(\u0008\'\f+\u0001,6+\n-\u0001)\u0001*7-\u0003.\u0002/\u0002.\u0001/\u0005.\u0002/\u00010\u0001.\u0003/\u0005.\u0008/\u0002.\u0005/\u0001.\u0003/\u00011\u0002/\u0008.\u0002/\u0002.\u00012\u0001/\u00013\u0003/\u00014\u0001/\f5\u0001665\u0001.\u00017\u0004.\u00017\u0005.\u00018\u0003.\u00017).\u00017\t.\u00019\u0001.\u0002:\u0001.\u00019\u0001:\u0005.\u0003:\u00019\u0003:\u0001;\u0004.\u0008:\u0002.\u0005:\u0001.\u0003:\u0001.\u0002:\u0007.\u0001<\u0002:\u0001.\u00019\u0008:\u0003.\u0002=\u0002.\u0001=\u0004.\u0001>\u0003=\u0001.\u0003=\u0004.\u0001?\u0008=\u0002.\u0005=\u0001.\u0003=\u0001.\u0002=\u0007.\u0001@\u0002=\u0002.\u0008=\u0001.\u00019\u0001.\u0001A\u0001B\u0001.\u00019\u0001B\u0005.\u0001C\u0002B\u00019\u0003B\u0001D\u0004.\u0008B\u0002.\u0005B\u0001.\u0003B\u0001.\u0002B\u0007.\u0001E\u0002B\u0001.\u00019\u0008B\u0003.\u0001F\u0001G\u0002.\u0001G\u0004.\u0001>\u0003G\u0001.\u0003G\u0004.\u0001?\u0008G\u0002.\u0005G\u0001.\u0003G\u0001.\u0002G\u0007.\u0001H\u0002G\u0002.\u0008G\u0001.\u0001I\u0004.\u0001I\t.\u0001I(.\u0001J\u0001I\u0008.\u0001K\u0001L\u0004K\u0001L\u0003K\u0001.\u0001M.K\u0001L\u0008K\u0003.\u0002N\u0002.\u0001N\u0005.\u0002N\u0001O\u0001.\u0003N\u0005.\u0008N\u0002.\u0005N\u0001.\u0003N\u0001P\u0002N\u0008.\u0002N\u0002.\u0001Q\u0001N\u0001R\u0003N\u0001S\u0001N\u0001T\u0001U\u0004T\u0001U\u0003T\u0001.\u0001V(T\u0001W\u0005T\u0001U\u0008T\u0001X\u0001U\u0004X\u0001U\u0003X\u0001.\u0001V)X\u0001W\u0004X\u0001U\u0008X\u0001Y\u0001Z\u0004Y\u0001Z\u0003Y\u0001.\u0001[\u0004Y\u0001Z#Y\u0001\\\u0005Y\u0001Z\u0008Y\u0001]\u0001^\u0004]\u0001^\u0003]\u0001.\u0001_\u0004]\u0001^$]\u0001\\\u0004]\u0001^\u0008]\u0001`\u0001a\u0004`\u0001a\u0003`\u0001.\u0001b\u0004`\u0001a#`\u0001c\u0005`\u0001a\u0008`\u0001d\u0001e\u0004d\u0001e\u0003d\u0001.\u0001b\u0004d\u0001e$d\u0001c\u0004d\u0001e\u0008d\u0001.\u0001f\u0004.\u0001f\t.\u0001f\u0003.\u0001g%.\u0001f\t.\u0001h\u0004.\u0001h\t.\u0001h\u0003.\u0001i%.\u0001h\t.\u0001j\u0004.\u0001j\u0003.\u0001k\u0005.\u0001j\u0004.\u0001l\u0001.\u0001m\".\u0001j\t.\u0001j\u0001.\u0002n\u0001.\u0001j\u0001n\u0005.\u0003n\u0001j\u0003n\u0001.\u0001o\u0003.\u0008n\u0002.\u0005n\u0001.\u0003n\u0001.\u0002n\u0008.\u0002n\u0001.\u0001j\u0008n\u0001.\u0001j\u0001.\u0001p\u0001q\u0001.\u0001j\u0001q\u0005.\u0003q\u0001j\u0003q\u0001r\u0001o\u0003.\u0008q\u0002.\u0005q\u0001.\u0003q\u0001.\u0002q\u0008.\u0002q\u0001.\u0001j\u0008q\u0001.\u0001j\u0004.\u0001j\t.\u0001j\u0004.\u0001o\u0003.\u0001s\u0001t\u0001.\u0001u\u0006.\u0001v\u0004.\u0001w\u0011.\u0001j\t.\u0001j\u0001.\u0002x\u0001.\u0001j\u0001x\u0005.\u0003x\u0001j\u0003x\u0001.\u0001y\u0003.\u0008x\u0002.\u0005x\u0001.\u0003x\u0001.\u0002x\u0008.\u0002x\u0001.\u0001j\u0008x\u0001.\u0001j\u0003z\u0001.\u0001j\u0003z\u0003.\u0003z\u0001j\u0003z\u0001.\u0001o\u0003.\tz\u0001.\u0005z\u0001.\u0003z\u0001.\u0002z\u0001{\u0003.\u0001|\u0003.\u0002z\u0001.\u0001j\u0008z!}\u0001~!}\n\u007f\u0001\u0080\f\u007f\u0001\u0081+\u007f\u0001.\u0001j\u0004.\u0001j\t.\u0001j#.\u0001\u0082\u0001\u0083\u0004.\u0001j\t.\u0001\u0084\u0001.\u0002z\u0001.\u0001\u0084\u0001z\u0004.\u0001\u0085\u0003z\u0001\u0084\u0003z\u0001r\u0001o\u0003.\u0001\u0086\u0001\u0087\u0001z\u0001\u0088\u0001z\u0001\u0089\u0001\u008a\u0001z\u0001.\u0001\u008b\u0005z\u0001\u008c\u0001\u008d\u0002z\u0001\u008e\u0002z\u0001\u008f\u0001\u0090\u0001\u0091\u0001\u0092\u0001|\u0001\u0093\u0001\u0094\u0001.\u0002z\u0001.\u0001\u0084\u0008z\f.\u0001\u0095\u000b.\u0001\u0096*.\u000b\u0097\u0001\u0098\t\u0097\u0001\u0099-\u0097\u0001\u009a\u0001\u009b\u0004\u009a\u0001\u009c\t\u009a\u0001\u009b)\u009a\u0001\u009b\u0008\u009a\u000b\u009d\u0001\u009e\t\u009d\u0001\u009f\u001e\u009d\u0001\u00a0\u000e\u009d\u000b\u00a1\u0001\u009e\t\u00a1\u0001\u009f\u001f\u00a1\u0001\u00a0\r\u00a1\u0003.\u0002\u00a2\u0002.\u0001\u00a2\u0005.\u0003\u00a2\u0001.\u0003\u00a2\u0005.\u0008\u00a2\u0002.\u0005\u00a2\u0001.\u0003\u00a2\u0001P\u0002\u00a2\u0008.\u0002\u00a2\u0002.\u0008\u00a2\u0003.\u0002\u00a3\u0002.\u0001\u00a3\u0005.\u0003\u00a3\u0001.\u0003\u00a3\u0005.\u0008\u00a3\u0002.\u0005\u00a3\u0001.\u0003\u00a3\u0001.\u0002\u00a3\u0008.\u0002\u00a3\u0002.\u0008\u00a3C\u0000\f\u00a4\u0001\u00a5B\u00a4\u0001\u00a5\u0007\u00a4\u0001\u00a6.\u00a4\u0002\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u00a8\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0008\u00a7\u0002\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u00a8\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0005\u00a7\u0001\u00a9\u0002\u00a7\t\u0000\u0001\u00aa\u0003\u0000\u0001\u00ab7\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0001\u00a7\u0001\u00ac\u0001\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u00a8\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0001\u00a7\u0001\u00ad\u0006\u00a7\u0002\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u00a8\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0003\u00a7\u0001\u00ae\u0004\u00a7\u0002\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u00a8\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0005\u00a7\u0001\u00af\u0002\u00a7\f\u00b0\u0001\u00b1B\u00b0\u0001\u00b1\u0007\u00b0\u0001\u00b2.\u00b0\u0001\u0000\u00017\u0004\u0000\u00017\t\u0000\u00017)\u0000\u00017\u001c\u0000\u0001\u00b3/\u0000\u00019\u0004\u0000\u00019\t\u0000\u00019)\u0000\u00019\n\u0000\u0003:\u0002\u0000\u0003:\u0003\u0000\u0003:\u0001\u0000\u0003:\u0005\u0000\t:\u0001\u0000\u0005:\u0001\u0000\u0003:\u0001\u0000\u0002:\u0008\u0000\u0002:\u0002\u0000\u0008:\u0014\u0000\u0001\u00b40\u0000\u0003=\u0002\u0000\u0003=\u0003\u0000\u0003=\u0001\u0000\u0003=\u0005\u0000\t=\u0001\u0000\u0005=\u0001\u0000\u0003=\u0001\u0000\u0002=\u0008\u0000\u0002=\u0002\u0000\u0008=\u0003\u0000\u0002\u00b5\u0002\u0000\u0001\u00b5\u0005\u0000\u0001\u00b6\u0002\u00b5\u0001\u0000\u0001\u00b7\u0002\u00b5\u0005\u0000\u0008\u00b5\u0002\u0000\u0005\u00b5\u0001\u0000\u0003\u00b5\u0001\u0000\u0002\u00b5\u0008\u0000\u0002\u00b5\u0002\u0000\u0008\u00b5!\u0000\u0001\u00b8\u0001\u00b9\u0001\u0000\u0001\u00ba!\u0000\u0002\u00bb\u0002\u0000\u0001\u00bb\u0005\u0000\u0003\u00bb\u0001\u0000\u0003\u00bb\u0005\u0000\u0008\u00bb\u0002\u0000\u0005\u00bb\u0001\u0000\u0003\u00bb\u0001\u0000\u0002\u00bb\u0008\u0000\u0002\u00bb\u0002\u0000\u0008\u00bb\u0002\u0000\u0003A\u0002\u0000\u0003A\u0003\u0000\u0003A\u0001\u0000\u0003A\u0005\u0000\tA\u0001\u0000\u0005A\u0001\u0000\u0003A\u0001\u0000\u0002A\u0008\u0000\u0002A\u0002\u0000\u0008A\u0002\u0000\u0001B\u0001\u00bc\u0001B\u0002\u0000\u0003B\u0003\u0000\u0003B\u0001\u0000\u0003B\u0005\u0000\tB\u0001\u0000\u0005B\u0001\u0000\u0003B\u0001\u0000\u0002B\u0008\u0000\u0002B\u0002\u0000\u0008B\u0002\u0000\u0001B\u0001\u00bc\u0001B\u0002\u0000\u0003B\u0003\u0000\u0001B\u0001\u00bd\u0001B\u0001\u0000\u0003B\u0005\u0000\tB\u0001\u0000\u0005B\u0001\u0000\u0003B\u0001\u0000\u0002B\u0008\u0000\u0002B\u0002\u0000\u0008B\u0014\u0000\u0001\u00be0\u0000\u0003F\u0002\u0000\u0003F\u0003\u0000\u0003F\u0001\u0000\u0003F\u0005\u0000\tF\u0001\u0000\u0005F\u0001\u0000\u0003F\u0001\u0000\u0002F\u0008\u0000\u0002F\u0002\u0000\u0008F\u0002\u0000\u0001G\u0001\u00bf\u0001G\u0002\u0000\u0003G\u0003\u0000\u0003G\u0001\u0000\u0003G\u0005\u0000\tG\u0001\u0000\u0005G\u0001\u0000\u0003G\u0001\u0000\u0002G\u0008\u0000\u0002G\u0002\u0000\u0008G\u0003\u0000\u0001\u00c0\u0001\u00c1\u0002\u0000\u0001\u00c1\u0005\u0000\u0003\u00c1\u0001\u0000\u0003\u00c1\u0005\u0000\u0008\u00c1\u0002\u0000\u0005\u00c1\u0001\u0000\u0003\u00c1\u0001\u0000\u0002\u00c1\u0008\u0000\u0002\u00c1\u0002\u0000\u0008\u00c1\u0001\u0000\u0001\u00c2\u0004\u0000\u0001\u00c2\t\u0000\u0001\u00c2(\u0000\u0001\u00c3\u0001\u00c2\t\u0000\u0001\u00c3\u0004\u0000\u0001\u00c3\t\u0000\u0001\u00c3#\u0000\u0001\u00c4\u0001\u00c5\u0004\u0000\u0001\u00c3\u0008\u0000\u0001K\u0001\u0000\u0004K\u0001\u0000\u0003K\u0002\u0000.K\u0001\u0000\u0008K\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u00c7\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0008\u00c6\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u00c7\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0005\u00c6\u0001\u00c8\u0002\u00c6\t\u0000\u0001\u00c9\u0003\u0000\u0001\u00ca7\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0001\u00c6\u0001\u00cb\u0001\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u00c7\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0001\u00c6\u0001\u00cc\u0006\u00c6\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u00c7\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0003\u00c6\u0001\u00cd\u0004\u00c6\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u00c7\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0005\u00c6\u0001\u00ce\u0002\u00c6\u0001T\u0001\u0000\u0004T\u0001\u0000\u0003T\u0002\u0000(T\u0001\u0000\u0005T\u0001\u0000\u0008T\u0001\u0000\u0001U\u0004\u0000\u0001U3\u0000\u0001U\t\u0000\u0001\u00cf\u0004\u0000\u0001\u00cf\t\u0000\u0001\u00cf\u0003\u0000\u0001\u00cf!\u0000\u0001\u00cf\u0003\u0000\u0001\u00cf\u0008\u0000\u0001X\u0001\u0000\u0004X\u0001\u0000\u0003X\u0002\u0000)X\u0001\u0000\u0004X\u0001\u0000\u0008X\u0001Y\u0001\u0000\u0004Y\u0001\u0000\u0003Y\u0002\u0000\u0004Y\u0001\u0000#Y\u0001\u0000\u0005Y\u0001\u0000\u0008Y\u0001\u0000\u0001Z\u0004\u0000\u0001Z\t\u0000\u0001Z#\u0000\u0001\u00d0\u0005\u0000\u0001Z\t\u0000\u0001\u00d1\u0004\u0000\u0001\u00d1\t\u0000\u0001\u00d1\u0003\u0000\u0001\u00d1!\u0000\u0001\u00d1\u0003\u0000\u0001\u00d1\u0008\u0000\u0001]\u0001\u0000\u0004]\u0001\u0000\u0003]\u0002\u0000\u0004]\u0001\u0000$]\u0001\u0000\u0004]\u0001\u0000\u0008]\u0001\u0000\u0001^\u0004\u0000\u0001^\t\u0000\u0001^$\u0000\u0001\u00d0\u0004\u0000\u0001^\u0008\u0000\u0001`\u0001\u0000\u0004`\u0001\u0000\u0003`\u0002\u0000\u0004`\u0001\u0000#`\u0001\u0000\u0005`\u0001\u0000\u0008`\u0001\u0000\u0001a\u0004\u0000\u0001a\t\u0000\u0001a#\u0000\u0001\u00d2\u0005\u0000\u0001a\t\u0000\u0001\u00d3\u0004\u0000\u0001\u00d3\t\u0000\u0001\u00d3\u0003\u0000\u0001\u00d3!\u0000\u0001\u00d3\u0003\u0000\u0001\u00d3\u0008\u0000\u0001d\u0001\u0000\u0004d\u0001\u0000\u0003d\u0002\u0000\u0004d\u0001\u0000$d\u0001\u0000\u0004d\u0001\u0000\u0008d\u0001\u0000\u0001e\u0004\u0000\u0001e\t\u0000\u0001e$\u0000\u0001\u00d2\u0004\u0000\u0001e\t\u0000\u0001\u00d4\u0004\u0000\u0001\u00d4\t\u0000\u0001\u00d4\u0003\u0000\u0001g%\u0000\u0001\u00d4\t\u0000\u0001\u00d5\u0004\u0000\u0001\u00d5\t\u0000\u0001\u00d5\u0003\u0000\u0001i%\u0000\u0001\u00d5\t\u0000\u0001j\u0004\u0000\u0001j\t\u0000\u0001j)\u0000\u0001j\u000b\u0000\u0002\u00d6\u0002\u0000\u0001\u00d6\u0005\u0000\u0003\u00d6\u0001\u0000\u0003\u00d6\u0005\u0000\u0008\u00d6\u0002\u0000\u0005\u00d6\u0001\u0000\u0003\u00d6\u0001\u0000\u0002\u00d6\u0008\u0000\u0002\u00d6\u0002\u0000\u0008\u00d6\u0001\u0000\u0001\u00d7\u0004\u0000\u0001\u00d7\t\u0000\u0001\u00d7\u0003\u0000\u0001\u00d8\u0002\u0000\u0001\u00d9\"\u0000\u0001\u00d7\n\u0000\u0003n\u0002\u0000\u0003n\u0003\u0000\u0003n\u0001\u0000\u0003n\u0005\u0000\tn\u0001\u0000\u0005n\u0001\u0000\u0003n\u0001\u0000\u0002n\u0008\u0000\u0002n\u0002\u0000\u0008n\u0003\u0000\u0002\u00da\u0002\u0000\u0001\u00da\u0005\u0000\u0003\u00da\u0001\u0000\u0003\u00da\u0005\u0000\u0008\u00da\u0002\u0000\u0005\u00da\u0001\u0000\u0003\u00da\u0001\u0000\u0002\u00da\u0008\u0000\u0002\u00da\u0002\u0000\u0008\u00da\u0002\u0000\u0003p\u0002\u0000\u0003p\u0003\u0000\u0003p\u0001\u0000\u0003p\u0005\u0000\tp\u0001\u0000\u0005p\u0001\u0000\u0003p\u0001\u0000\u0002p\u0008\u0000\u0002p\u0002\u0000\u0008p\u0002\u0000\u0001q\u0001\u00db\u0001q\u0002\u0000\u0003q\u0003\u0000\u0003q\u0001\u0000\u0003q\u0005\u0000\tq\u0001\u0000\u0005q\u0001\u0000\u0003q\u0001\u0000\u0002q\u0008\u0000\u0002q\u0002\u0000\u0008q\u001a\u0000\u0001\u00dc:\u0000\u0001\u00dd\r\u0000\u0001\u00deF\u0000\u0001\u00dfB\u0000\u0001\u00e0 \u0000\u0003x\u0002\u0000\u0003x\u0003\u0000\u0003x\u0001\u0000\u0003x\u0005\u0000\tx\u0001\u0000\u0005x\u0001\u0000\u0003x\u0001\u0000\u0002x\u0008\u0000\u0002x\u0002\u0000\u0008x\u0001\u0000\u0001\u00e1\u0001\u0000\u0002\u00da\u0002\u0000\u0001\u00da\u0005\u0000\u0003\u00da\u0001\u00e1\u0003\u00da\u0005\u0000\u0008\u00da\u0002\u0000\u0005\u00da\u0001\u0000\u0003\u00da\u0001\u0000\u0002\u00da\u0008\u0000\u0002\u00da\u0001\u0000\u0001\u00e1\u0008\u00da\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\tz\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z!\u00e2\u0001\u00e3B\u00e2\u0001\u00e4!\u00e2\n\u007f\u0001\u0000\f\u007f\u0001\u0000+\u007f\u0018\u0000\u0001\u00e5A\u0000\u0001\u00d9-\u0000\u0005\u00e6\u0002\u0000\u0001\u00e6\u0002\u0000\u0008\u00e6\u0001\u0000\u0002\u00e6\u0001\u0000\n\u00e6\u0001\u0000\u0010\u00e6\u0001\u0000\u0001\u00e7\u000e\u00e6\u0002\u0000\u0005\u00e8\u0002\u0000\u0001\u00e8\u0002\u0000\u0008\u00e8\u0001\u0000\u0002\u00e8\u0001\u0000\n\u00e8\u0001\u0000\u0010\u00e8\u0002\u0000\u0001\u00e7\r\u00e8\u0001\u0000\u0001\u0084\u0004\u0000\u0001\u0084\t\u0000\u0001\u0084\u0011\u0000\u0001\u008b\u0017\u0000\u0001\u0084\n\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0001z\u0001\u00e9\u0001z\u0005\u0000\tz\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0007z\u0001\u00ea\u0001z\u0001\u0000\u0001z\u0001\u00eb\u0003z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0001z\u0001\u00ec\u0007z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0001z\u0001\u00ed\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0001z\u0001\u00ee\u0007z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0004z\u0001\u00ef\u0004z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0001\u0000\u0001\u008b\u0004\u0000\u0001\u008b\t\u0000\u0001\u008b)\u0000\u0001\u008b\n\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\tz\u0001\u0000\u0005z\u0001\u0000\u0001z\u0001\u00f0\u0001z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u001c\u0000\u0001\u00f1\u0008\u0000\u0001\u00f2\u0001\u00f3\u0002\u0000\u0001\u00f4\u0019\u0000\u000b\u0093\u0001\u0000\t\u0093\u0001\u0000\u001e\u0093\u0001\u00f5\u000e\u0093\u000b\u0094\u0001\u0000\t\u0094\u0001\u0000\u001f\u0094\u0001\u00f5\r\u0094\u0003\u0000\u0002\u00f6\u0002\u0000\u0001\u00f6\u0005\u0000\u0001\u00f7\u0002\u00f6\u0001\u0000\u0001\u00f8\u0002\u00f6\u0005\u0000\u0008\u00f6\u0002\u0000\u0005\u00f6\u0001\u0000\u0003\u00f6\u0001\u0000\u0002\u00f6\u0008\u0000\u0002\u00f6\u0002\u0000\u0008\u00f6\u0019\u0000\u0001\u00f9\u0001\u00fa\u0003\u0000\u0001\u00fb\u0002\u0000\u0001\u00fc\u0001\u00fd \u0000\u000b\u0097\u0001\u0000\t\u0097\u0001\u0000-\u0097\u000b\u009a\u0001\u0000\t\u009a\u0001\u0000-\u009a\u0001\u0000\u0001\u009b\u0004\u0000\u0001\u009b\t\u0000\u0001\u009b)\u0000\u0001\u009b\u0008\u0000\u0001\u009a\u0001\u009c\u0004\u009a\u0001\u009c\u0004\u009a\u0001\u0000\u0004\u009a\u0001\u009c\u0004\u009a\u0001\u0000$\u009a\u0001\u009c\u0008\u009a\u000b\u009d\u0001\u0000\t\u009d\u0001\u0000\u001e\u009d\u0001\u0000\u000e\u009d\u000b\u00a1\u0001\u0000\t\u00a1\u0001\u0000\u001f\u00a1\u0001\u0000\r\u00a1\u0002\u0000\u0003\u00fe\u0002\u0000\u0003\u00fe\u0003\u0000\u0003\u00fe\u0001\u0000\u0003\u00fe\u0002\u0000\u0001\u00ff\u0002\u0000\t\u00fe\u0001\u0000\u0005\u00fe\u0001\u0000\u0003\u00fe\u0001\u0000\u0002\u00fe\u0008\u0000\u0002\u00fe\u0002\u0000\u0008\u00fe\u0002\u0000\u0003\u0100\u0002\u0000\u0003\u0100\u0003\u0000\u0003\u0100\u0001\u0000\u0003\u0100\u0002\u0000\u0001\u0101\u0002\u0000\t\u0100\u0001\u0000\u0005\u0100\u0001\u0000\u0003\u0100\u0001\u0000\u0002\u0100\u0008\u0000\u0002\u0100\u0002\u0000\u0008\u0100\u0002\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u0102\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0008\u00a7\t\u0000\u0001\u00aa\f\u0000\u0001\u01035\u0000\u0001\u0104\u000f\u0000\u0001\u0104\u0004\u0000\u0001\u0104\u0004\u0000\u0002\u0104\u0001\u0000\u0001\u0104\u0004\u0000\u0001\u0104\u000f\u0000\u0001\u0104\u0006\u0000\u0001\u0104\u0002\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u00a8\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0001\u00a7\u0001\u0105\u0006\u00a7\u0002\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u00a8\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0004\u00a7\u0001\u0106\u0003\u00a7\u0002\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u00a8\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0004\u00a7\u0001\u0107\u0003\u00a7\u0002\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u0108\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0008\u00a7\u0002\u0000\u0003\u00b5\u0002\u0000\u0003\u00b5\u0003\u0000\u0003\u00b5\u0001\u0000\u0003\u00b5\u0005\u0000\t\u00b5\u0001\u0000\u0005\u00b5\u0001\u0000\u0003\u00b5\u0001\u0000\u0002\u00b5\u0008\u0000\u0002\u00b5\u0002\u0000\u0008\u00b5\u0002\u0000\u0003\u00b5\u0002\u0000\u0003\u00b5\u0003\u0000\u0001\u00b5\u0001\u0109\u0001\u00b5\u0001\u0000\u0001\u00b5\u0001\u010a\u0001\u00b5\u0005\u0000\t\u00b5\u0001\u0000\u0005\u00b5\u0001\u0000\u0003\u00b5\u0001\u0000\u0002\u00b5\u0008\u0000\u0002\u00b5\u0002\u0000\u0008\u00b5\u0002\u0000\u0003\u00b5\u0002\u0000\u0003\u00b5\u0003\u0000\u0001\u00b5\u0001\u010a\u0001\u00b5\u0001\u0000\u0001\u00b5\u0001\u010a\u0001\u00b5\u0005\u0000\t\u00b5\u0001\u0000\u0005\u00b5\u0001\u0000\u0003\u00b5\u0001\u0000\u0002\u00b5\u0008\u0000\u0002\u00b5\u0002\u0000\u0008\u00b5!\u0000\u0001\u010bD\u0000\u0001\u010c?\u0000\u0001\u010d$\u0000\u0003\u00bb\u0002\u0000\u0003\u00bb\u0003\u0000\u0003\u00bb\u0001\u0000\u0003\u00bb\u0005\u0000\t\u00bb\u0001\u0000\u0005\u00bb\u0001\u0000\u0003\u00bb\u0001\u0000\u0002\u00bb\u0008\u0000\u0002\u00bb\u0002\u0000\u0008\u00bb\u0002\u0000\u0002A\u0001\u010e\u0002\u0000\u0001\u010e\u0002A\u0003\u0000\u0003\u010e\u0001\u0000\u0003\u010e\u0005\u0000\u0008\u010e\u0001A\u0001\u0000\u0005\u010e\u0001\u0000\u0003\u010e\u0001\u0000\u0002\u010e\u0008\u0000\u0002\u010e\u0002\u0000\u0008\u010e\u0002\u0000\u0001B\u0001\u00bc\u0001B\u0002\u0000\u0003B\u0003\u0000\u0002B\u0001\u010f\u0001\u0000\u0003B\u0005\u0000\tB\u0001\u0000\u0005B\u0001\u0000\u0003B\u0001\u0000\u0002B\u0008\u0000\u0002B\u0002\u0000\u0008B\u0002\u0000\u0002F\u0001\u0110\u0002\u0000\u0001\u0110\u0002F\u0003\u0000\u0003\u0110\u0001\u0000\u0003\u0110\u0005\u0000\u0008\u0110\u0001F\u0001\u0000\u0005\u0110\u0001\u0000\u0003\u0110\u0001\u0000\u0002\u0110\u0008\u0000\u0002\u0110\u0002\u0000\u0008\u0110\u0002\u0000\u0003\u00c0\u0002\u0000\u0003\u00c0\u0003\u0000\u0003\u00c0\u0001\u0000\u0003\u00c0\u0005\u0000\t\u00c0\u0001\u0000\u0005\u00c0\u0001\u0000\u0003\u00c0\u0001\u0000\u0002\u00c0\u0008\u0000\u0002\u00c0\u0002\u0000\u0008\u00c0\u0002\u0000\u0001\u00c1\u0001\u0111\u0001\u00c1\u0002\u0000\u0003\u00c1\u0003\u0000\u0003\u00c1\u0001\u0000\u0003\u00c1\u0005\u0000\t\u00c1\u0001\u0000\u0005\u00c1\u0001\u0000\u0003\u00c1\u0001\u0000\u0002\u00c1\u0008\u0000\u0002\u00c1\u0002\u0000\u0008\u00c1\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u0112\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0008\u00c6\t\u0000\u0001\u00c9\f\u0000\u0001\u01135\u0000\u0001\u0114\u000f\u0000\u0001\u0114\u0004\u0000\u0001\u0114\u0004\u0000\u0002\u0114\u0001\u0000\u0001\u0114\u0004\u0000\u0001\u0114\u000f\u0000\u0001\u0114\u0006\u0000\u0001\u0114\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u00c7\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0001\u00c6\u0001\u0115\u0006\u00c6\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u00c7\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0004\u00c6\u0001\u0116\u0003\u00c6\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u00c7\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0004\u00c6\u0001\u0117\u0003\u00c6\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u0118\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0008\u00c6\u0002\u0000\u0003\u00d6\u0002\u0000\u0003\u00d6\u0003\u0000\u0003\u00d6\u0001\u0000\u0003\u00d6\u0002\u0000\u0001\u0119\u0002\u0000\t\u00d6\u0001\u0000\u0005\u00d6\u0001\u0000\u0003\u00d6\u0001\u0000\u0002\u00d6\u0008\u0000\u0002\u00d6\u0002\u0000\u0008\u00d6\u0001\u0000\u0001\u00d7\u0004\u0000\u0001\u00d7\t\u0000\u0001\u00d7\u0003\u0000\u0001\u00d8%\u0000\u0001\u00d7\u001c\u0000\u0001\u011a0\u0000\u0003\u00da\u0002\u0000\u0003\u00da\u0003\u0000\u0003\u00da\u0001\u0000\u0003\u00da\u0002\u0000\u0001\u011b\u0002\u0000\t\u00da\u0001\u0000\u0005\u00da\u0001\u0000\u0003\u00da\u0001\u0000\u0002\u00da\u0008\u0000\u0002\u00da\u0002\u0000\u0008\u00da\u0002\u0000\u0002p\u0001\u011c\u0002\u0000\u0001\u011c\u0002p\u0003\u0000\u0003\u011c\u0001\u0000\u0003\u011c\u0005\u0000\u0008\u011c\u0001p\u0001\u0000\u0005\u011c\u0001\u0000\u0003\u011c\u0001\u0000\u0002\u011c\u0008\u0000\u0002\u011c\u0002\u0000\u0008\u011c\u001b\u0000\u0001\u011dB\u0000\u0001\u011eB\u0000\u0001\u011fL\u0000\u0001\u0120;\u0000\u0001\u0121%\u0000\u0001\u00e1\u000e\u0000\u0001\u00e1)\u0000\u0001\u00e1\u001c\u0000\u0001\u0122P\u0000\u0001\u0123\"\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\tz\u0001\u0000\u0005z\u0001\u0000\u0001\u0124\u0002z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0002z\u0001\u0125\u0006z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0005z\u0001\u0126\u0003z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\tz\u0001\u0000\u0001\u0127\u0004z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0001z\u0001\u0128\u0007z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0004z\u0001\u0129\u0004z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0006z\u0001\u012a\u0002z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\tz\u0001\u0000\u0005z\u0001\u0000\u0002z\u0001\u012b\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0012\u0000\u0001\u012cI\u0000\u0001\u012dE\u0000\u0001\u012eI\u0000\u0001\u012f!\u0000\u0003\u00f6\u0002\u0000\u0003\u00f6\u0003\u0000\u0003\u00f6\u0001\u0000\u0003\u00f6\u0005\u0000\t\u00f6\u0001\u0000\u0005\u00f6\u0001\u0000\u0003\u00f6\u0001\u0000\u0002\u00f6\u0008\u0000\u0002\u00f6\u0002\u0000\u0008\u00f6\u0002\u0000\u0003\u00f6\u0002\u0000\u0003\u00f6\u0003\u0000\u0001\u00f6\u0001\u0130\u0001\u00f6\u0001\u0000\u0001\u00f6\u0001\u0131\u0001\u00f6\u0005\u0000\t\u00f6\u0001\u0000\u0005\u00f6\u0001\u0000\u0003\u00f6\u0001\u0000\u0002\u00f6\u0008\u0000\u0002\u00f6\u0002\u0000\u0008\u00f6\u0002\u0000\u0003\u00f6\u0002\u0000\u0003\u00f6\u0003\u0000\u0001\u00f6\u0001\u0131\u0001\u00f6\u0001\u0000\u0001\u00f6\u0001\u0131\u0001\u00f6\u0005\u0000\t\u00f6\u0001\u0000\u0005\u00f6\u0001\u0000\u0003\u00f6\u0001\u0000\u0002\u00f6\u0008\u0000\u0002\u00f6\u0002\u0000\u0008\u00f6\u0013\u0000\u0001\u0132\u0006\u0000\u0001\u0133H\u0000\u0001\u0134=\u0000\u0001\u0135H\u0000\u0001\u0136*\u0000\u0001\u0104\f\u0000\u0001\u0137\u0002\u0000\u0001\u0104\u0004\u0000\u0001\u0104\u0004\u0000\u0002\u0104\u0001\u0000\u0001\u0104\u0004\u0000\u0001\u0104\u000f\u0000\u0001\u0104\u0006\u0000\u0001\u0104\u0002\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u0138\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0008\u00a7\u0002\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u00a8\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0001\u00a7\u0001\u0139\u0002\u0000\u0008\u00a7\u0002\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u00a8\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0005\u00a7\u0001\u013a\u0002\u00a7\u0002\u0000\u0003\u00b5\u0002\u0000\u0003\u00b5\u0003\u0000\u0002\u00b5\u0001\u013b\u0001\u0000\u0002\u00b5\u0001\u013c\u0005\u0000\t\u00b5\u0001\u0000\u0005\u00b5\u0001\u0000\u0003\u00b5\u0001\u0000\u0002\u00b5\u0008\u0000\u0002\u00b5\u0002\u0000\u0008\u00b5\u0002\u0000\u0003\u00b5\u0002\u0000\u0003\u00b5\u0003\u0000\u0002\u00b5\u0001\u013c\u0001\u0000\u0002\u00b5\u0001\u013c\u0005\u0000\t\u00b5\u0001\u0000\u0005\u00b5\u0001\u0000\u0003\u00b5\u0001\u0000\u0002\u00b5\u0008\u0000\u0002\u00b5\u0002\u0000\u0008\u00b5!\u010b\u0001\u013d!\u010b$\u0000\u0001\u013eA\u0000\u0001\u013f!\u0000\u0001\u010e\u0001A\u0001\u010e\u0002\u0000\u0003\u010e\u0003\u0000\u0003\u010e\u0001\u0000\u0003\u010e\u0005\u0000\t\u010e\u0001\u0000\u0005\u010e\u0001\u0000\u0003\u010e\u0001\u0000\u0002\u010e\u0008\u0000\u0002\u010e\u0002\u0000\u0008\u010e\u0002\u0000\u0001B\u0001\u00bc\u0001B\u0002\u0000\u0003B\u0003\u0000\u0003B\u0001\u0000\u0003B\u0005\u0000\tB\u0001\u0000\u0005B\u0001\u0000\u0003B\u0001\u0000\u0002B\u0008\u0000\u0001\u0140\u0001B\u0002\u0000\u0008B\u0002\u0000\u0001\u0110\u0001F\u0001\u0110\u0002\u0000\u0003\u0110\u0003\u0000\u0003\u0110\u0001\u0000\u0003\u0110\u0005\u0000\t\u0110\u0001\u0000\u0005\u0110\u0001\u0000\u0003\u0110\u0001\u0000\u0002\u0110\u0008\u0000\u0002\u0110\u0002\u0000\u0008\u0110\u0002\u0000\u0002\u00c0\u0001\u0141\u0002\u0000\u0001\u0141\u0002\u00c0\u0003\u0000\u0003\u0141\u0001\u0000\u0003\u0141\u0005\u0000\u0008\u0141\u0001\u00c0\u0001\u0000\u0005\u0141\u0001\u0000\u0003\u0141\u0001\u0000\u0002\u0141\u0008\u0000\u0002\u0141\u0002\u0000\u0008\u0141\t\u0000\u0001\u0114\f\u0000\u0001\u0142\u0002\u0000\u0001\u0114\u0004\u0000\u0001\u0114\u0004\u0000\u0002\u0114\u0001\u0000\u0001\u0114\u0004\u0000\u0001\u0114\u000f\u0000\u0001\u0114\u0006\u0000\u0001\u0114\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u0143\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0008\u00c6\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u00c7\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0001\u00c6\u0001\u0144\u0002\u0000\u0008\u00c6\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u00c7\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0005\u00c6\u0001\u0145\u0002\u00c6\u0002\u0000\u0001\u011c\u0001p\u0001\u011c\u0002\u0000\u0003\u011c\u0003\u0000\u0003\u011c\u0001\u0000\u0003\u011c\u0005\u0000\t\u011c\u0001\u0000\u0005\u011c\u0001\u0000\u0003\u011c\u0001\u0000\u0002\u011c\u0008\u0000\u0002\u011c\u0002\u0000\u0008\u011c\u001c\u0000\u0001\u0146F\u0000\u0001\u0147@\u0000\u0001\u0148=\u0000\u0001\u0149D\u0000\u0001\u014a)\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0002z\u0001\u014b\u0006z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0005z\u0001\u014c\u0003z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0002z\u0001\u014d\u0006z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0002z\u0001\u014e\u0005\u0000\tz\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0007z\u0001\u014f\u0001z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0002z\u0001\u0150\u0006z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0002z\u0001\u0151\u0005\u0000\tz\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z)\u0000\u0001\u0152F\u0000\u0001\u0153&\u0000\u0001\u0154U\u0000\u0001\u0155 \u0000\u0003\u00f6\u0002\u0000\u0003\u00f6\u0003\u0000\u0002\u00f6\u0001\u0156\u0001\u0000\u0002\u00f6\u0001\u0157\u0005\u0000\t\u00f6\u0001\u0000\u0005\u00f6\u0001\u0000\u0003\u00f6\u0001\u0000\u0002\u00f6\u0008\u0000\u0002\u00f6\u0002\u0000\u0008\u00f6\u0002\u0000\u0003\u00f6\u0002\u0000\u0003\u00f6\u0003\u0000\u0002\u00f6\u0001\u0157\u0001\u0000\u0002\u00f6\u0001\u0157\u0005\u0000\t\u00f6\u0001\u0000\u0005\u00f6\u0001\u0000\u0003\u00f6\u0001\u0000\u0002\u00f6\u0008\u0000\u0002\u00f6\u0002\u0000\u0008\u00f6\u0019\u0000\u0001\u0158D\u0000\u0001\u0159B\u0000\u0001\u015aB\u0000\u0001\u015b)\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u015c\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0008\u00a7\u0002\u0000\u0003\u00a7\u0002\u0000\u0003\u00a7\u0003\u0000\u0003\u00a7\u0001\u0000\u0003\u00a7\u0002\u0000\u0001\u015d\u0002\u0000\t\u00a7\u0001\u0000\u0005\u00a7\u0001\u0000\u0003\u00a7\u0001\u0000\u0002\u00a7\u0008\u0000\u0002\u00a7\u0002\u0000\u0008\u00a7\u0001\u0000\u0001\u015e\u0003\u00b5\u0001\u0000\u0001\u015f\u0003\u00b5\u0002\u0000\u0001\u015e\u0003\u00b5\u0001\u015e\u0003\u00b5\u0005\u0000\t\u00b5\u0001\u0000\u0005\u00b5\u0001\u0000\u0003\u00b5\u0001\u0000\u0002\u00b5\u0008\u0000\u0002\u00b5\u0001\u0000\u0001\u015e\u0008\u00b5\u0001\u0000\u0001\u015f\u0003\u00b5\u0001\u0000\u0001\u015f\u0003\u00b5\u0002\u0000\u0001\u015f\u0003\u00b5\u0001\u015f\u0003\u00b5\u0005\u0000\t\u00b5\u0001\u0000\u0005\u00b5\u0001\u0000\u0003\u00b5\u0001\u0000\u0002\u00b5\u0008\u0000\u0002\u00b5\u0001\u0000\u0001\u015f\u0008\u00b5!\u010b\u0001\u0160!\u010b\u001e\u0000\u0001\u0161?\u0000\u0001\u0162)\u0000\u0001B\u0001\u00bc\u0001B\u0002\u0000\u0003B\u0003\u0000\u0003B\u0001\u0000\u0003B\u0005\u0000\tB\u0001\u0000\u0005B\u0001\u0000\u0003B\u0001\u0000\u0002B\u0008\u0000\u0001B\u0001\u0163\u0002\u0000\u0008B\u0002\u0000\u0001\u0141\u0001\u00c0\u0001\u0141\u0002\u0000\u0003\u0141\u0003\u0000\u0003\u0141\u0001\u0000\u0003\u0141\u0005\u0000\t\u0141\u0001\u0000\u0005\u0141\u0001\u0000\u0003\u0141\u0001\u0000\u0002\u0141\u0008\u0000\u0002\u0141\u0002\u0000\u0008\u0141\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u0164\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0008\u00c6\u0002\u0000\u0003\u00c6\u0002\u0000\u0003\u00c6\u0003\u0000\u0003\u00c6\u0001\u0000\u0003\u00c6\u0002\u0000\u0001\u0165\u0002\u0000\t\u00c6\u0001\u0000\u0005\u00c6\u0001\u0000\u0003\u00c6\u0001\u0000\u0002\u00c6\u0008\u0000\u0002\u00c6\u0002\u0000\u0008\u00c6\u001b\u0000\u0001\u0166N\u0000\u0001\u01676\u0000\u0001\u0168M\u0000\u0001\u0169:\u0000\u0001\u016a&\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0004z\u0001\u016b\u0004z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0002z\u0001\u016c\u0006z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0005z\u0001\u016d\u0003z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\tz\u0001\u0000\u0005z\u0001\u0000\u0001z\u0001\u016e\u0001z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\tz\u0001\u0000\u0002z\u0001\u016f\u0002z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0001\u0170\u0008z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0003z\u0001\u0171\u0005z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0013\u0000\u0001\u0172Y\u0000\u0001\u01731\u0000\u0001\u0174G\u0000\u0001\u0175%\u0000\u0001\u0176\u0003\u00f6\u0001\u0000\u0001\u015f\u0003\u00f6\u0002\u0000\u0001\u0176\u0003\u00f6\u0001\u0176\u0003\u00f6\u0005\u0000\t\u00f6\u0001\u0000\u0005\u00f6\u0001\u0000\u0003\u00f6\u0001\u0000\u0002\u00f6\u0008\u0000\u0002\u00f6\u0001\u0000\u0001\u0176\u0008\u00f6\u0001\u0000\u0001\u015f\u0003\u00f6\u0001\u0000\u0001\u015f\u0003\u00f6\u0002\u0000\u0001\u015f\u0003\u00f6\u0001\u015f\u0003\u00f6\u0005\u0000\t\u00f6\u0001\u0000\u0005\u00f6\u0001\u0000\u0003\u00f6\u0001\u0000\u0002\u00f6\u0008\u0000\u0002\u00f6\u0001\u0000\u0001\u015f\u0008\u00f6\u0012\u0000\u0001\u0177L\u0000\u0001\u0178D\u0000\u0001\u01797\u0000\u0001\u017aC\u0000\u0001\u017bI\u0000\u0001\u017cD\u0000\u0001\u017d&\u0000\u0001\u017e\u0001B\u0001\u017f\u0001B\u0001\u0000\u0001\u017e\u0003B\u0003\u0000\u0003B\u0001\u017e\u0003B\u0005\u0000\tB\u0001\u0000\u0005B\u0001\u0000\u0003B\u0001\u0000\u0002B\u0008\u0000\u0002B\u0001\u0180\u0001\u017e\u0008B\u001c\u0000\u0001\u0181\u0001\u0182>\u0000\u0001\u0183E\u0000\u0001\u0184E\u0000\u0001\u0185%\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0003z\u0001\u0186\u0005z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\tz\u0001\u0000\u0001z\u0001\u0187\u0003z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0001\u0188\u0008z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0001z\u0001\u0189\u0001z\u0005\u0000\tz\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\tz\u0001\u0000\u0001\u018a\u0004z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u001c\u0000\u0001\u018bB\u0000\u0001\u018cJ\u0000\u0001\u018d9\u0000\u0001\u018e@\u0000\u0001\u018fD\u0000\u0001\u0190B\u0000\u0001\u0191C\u0000\u0001\u0192D\u0000\u0001\u0193M\u0000\u0001\u0194\u001a\u0000\u0001\u017e\u0004\u0000\u0001\u017e\t\u0000\u0001\u017e(\u0000\u0001\u0180\u0001\u017e\n\u0000\u0002A\u0001\u0195\u0002\u0000\u0001\u0195\u0002A\u0003\u0000\u0003\u0195\u0001\u0000\u0003\u0195\u0005\u0000\u0008\u0195\u0001A\u0001\u0000\u0005\u0195\u0001\u0000\u0003\u0195\u0001\u0000\u0002\u0195\u0008\u0000\u0002\u0195\u0002\u0000\u0008\u0195\u0001\u0000\u0001\u0180\u0004\u0000\u0001\u0180\t\u0000\u0001\u0180#\u0000\u0001\u0196\u0001\u0197\u0004\u0000\u0001\u0180!\u0000\u0001\u0198C\u0000\u0001\u0199H\u0000\u0001\u019a$\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0007z\u0001\u019b\u0001z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0002\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0001\u019c\u0008z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z\u0019\u0000\u0001\u019dN\u0000\u0001\u019e;\u0000\u0001\u019f>\u0000\u0001\u01a0E\u0000\u0001\u01a1A\u0000\u0001\u01a2E\u0000\u0001\u01a3E\u0000\u0001\u01a49\u0000\u0001\u01a5+\u0000\u0001\u0195\u0001A\u0001\u0195\u0002\u0000\u0003\u0195\u0003\u0000\u0003\u0195\u0001\u0000\u0003\u0195\u0005\u0000\t\u0195\u0001\u0000\u0005\u0195\u0001\u0000\u0003\u0195\u0001\u0000\u0002\u0195\u0008\u0000\u0002\u0195\u0002\u0000\u0008\u0195\u001f\u0000\u0001\u01a6B\u0000\u0001\u01a7=\u0000\u0001\u01a8*\u0000\u0003z\u0002\u0000\u0003z\u0003\u0000\u0003z\u0001\u0000\u0003z\u0005\u0000\u0001z\u0001\u01a9\u0007z\u0001\u0000\u0005z\u0001\u0000\u0003z\u0001\u0000\u0002z\u0008\u0000\u0002z\u0002\u0000\u0008z$\u0000\u0001\u01aa7\u0000\u0001\u01abD\u0000\u0001\u01acG\u0000\u0001\u01ad=\u0000\u0001\u01ae(\u0000\u0001\u01af\u000e\u0000\u0001\u01af)\u0000\u0001\u01af,\u0000\u0001\u01b08\u0000\u0001\u01b1(\u0000";

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String yycmap_packed> = "\t\u0000\u0001\u0001\u0001:\u0002\u0000\u0001\u0006\u0012\u0000\u0001\u0010\u0001\u0018\u00014\u0001,\u0001\u0005\u0001\u0015\u0001\u000b\u00015\u0001(\u0001/\u00010\u00011\u00012\u0001!\u0001\u0002\u00016\n\t\u0001\u0003\u0001\u0016\u0001\n\u00019\u0001\u0014\u0001\f\u0001\u0005\u0001\u001e\u0001+\u0001#\u0001$\u0001\u0019\u0001&\u0001.\u0001\u0004\u0001\u001c\u0001\u0004\u0001\'\u0001\u0013\u0001\u0012\u0001\u001a\u0001 \u0001)\u0001-\u0001%\u0001\u001f\u0001\u001b\u0001*\u0002\u0004\u0001\u0011\u0001\u001d\u0001\u0004\u0001\"\u0001\u0000\u0001\u0017\u0001\u0000\u0001\u0004\u0001\u0000\u0001;\u0005B\u0001A\u0004\u0004\u0001\u000f\u0001\u000e\u00017\u0001?\u0001<\u0001=\u0001\u0004\u00018\u0001@\u0001>\u0002\u0004\u0001\r\u0002\u0004\u0001\u0000\u00013:\u0000\u0001\u0008\u0008\u0000\u0017\u0007\u0001\u0000\u001f\u0007\u0001\u0000:\u0007\u0002\u0000\u000b\u0007\u0002\u0000\u0008\u0007\u0001\u00005\u0007\u0001\u0000D\u0007\t\u0000$\u0007\u0003\u0000\u0002\u0007\u0004\u0000\u001e\u00078\u0000Y\u0007\u0012\u0000\u0007\u0007\u000e\u0000\u0002\u0008.\u0000F\u0008\u001a\u0000\u0002\u0008$\u0000\u0001\u0007\u0001\u0008\u0003\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0014\u0007\u0001\u0000,\u0007\u0001\u0000\u0007\u0007\u0003\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0012\u0007\r\u0000\f\u0007\u0001\u0000B\u0007\u0001\u0000\f\u0007\u0001\u0000$\u0007\u0001\u0000\u0004\u0008\t\u00005\u0007\u0002\u0000\u0002\u0007\u0002\u0000\u0002\u0007\u0003\u0000\u001c\u0007\u0002\u0000\u0008\u0007\u0002\u0000\u0002\u00077\u0000&\u0007\u0002\u0000\u0001\u0007\u0007\u0000&\u0007\n\u0000\u0011\u0008\u0001\u0000\u0017\u0008\u0001\u0000\u0003\u0008\u0001\u0000\u0001\u0008\u0001\u0000\u0002\u0008\u0001\u0000\u0001\u0008\u000b\u0000\u001b\u0007\u0005\u0000\u0003\u0007.\u0000\u001a\u0007\u0005\u0000\u0001\u0008\n\u0007\u0008\u0008\r\u0000\n\u0008\u0006\u0000\u0001\u0008G\u0007\u0002\u0000\u0005\u0007\u0001\u0000\u000f\u0007\u0001\u0000\u0004\u0007\u0001\u0000\u0001\u0007\u000f\u0008\u0002\u0007\u0002\u0008\u0001\u0000\u0004\u0008\u0002\u0000\n\u0008\u0207\u0000\u0003\u0008\u0001\u00005\u0007\u0002\u0000\u0001\u0008\u0001\u0007\u0010\u0008\u0003\u0000\u0004\u0008\u0003\u0000\n\u0007\u0002\u0008\u0002\u0000\n\u0008\u0011\u0000\u0003\u0008\u0001\u0000\u0008\u0007\u0002\u0000\u0002\u0007\u0002\u0000\u0016\u0007\u0001\u0000\u0007\u0007\u0001\u0000\u0001\u0007\u0003\u0000\u0004\u0007\u0002\u0000\u0001\u0008\u0001\u0000\u0007\u0008\u0002\u0000\u0002\u0008\u0002\u0000\u0003\u0008\t\u0000\u0001\u0008\u0004\u0000\u0002\u0007\u0001\u0000\u0003\u0007\u0002\u0008\u0002\u0000\n\u0008\u0002\u0007\u0010\u0000\u0001\u0008\u0002\u0000\u0006\u0007\u0004\u0000\u0002\u0007\u0002\u0000\u0016\u0007\u0001\u0000\u0007\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0002\u0000\u0001\u0008\u0001\u0000\u0005\u0008\u0004\u0000\u0002\u0008\u0002\u0000\u0003\u0008\u000b\u0000\u0004\u0007\u0001\u0000\u0001\u0007\u0007\u0000\n\u0008\u0002\u0008\u0003\u0007\f\u0000\u0003\u0008\u0001\u0000\u0007\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0003\u0007\u0001\u0000\u0016\u0007\u0001\u0000\u0007\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0005\u0007\u0002\u0000\u0001\u0008\u0001\u0007\u0008\u0008\u0001\u0000\u0003\u0008\u0001\u0000\u0003\u0008\u0012\u0000\u0001\u0007\u0005\u0000\n\u0008\u0011\u0000\u0003\u0008\u0001\u0000\u0008\u0007\u0002\u0000\u0002\u0007\u0002\u0000\u0016\u0007\u0001\u0000\u0007\u0007\u0001\u0000\u0002\u0007\u0002\u0000\u0004\u0007\u0002\u0000\u0001\u0008\u0001\u0007\u0006\u0008\u0003\u0000\u0002\u0008\u0002\u0000\u0003\u0008\u0008\u0000\u0002\u0008\u0004\u0000\u0002\u0007\u0001\u0000\u0003\u0007\u0004\u0000\n\u0008\u0012\u0000\u0002\u0008\u0001\u0000\u0006\u0007\u0003\u0000\u0003\u0007\u0001\u0000\u0004\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0002\u0007\u0003\u0000\u0002\u0007\u0003\u0000\u0003\u0007\u0003\u0000\u0008\u0007\u0001\u0000\u0003\u0007\u0004\u0000\u0005\u0008\u0003\u0000\u0003\u0008\u0001\u0000\u0004\u0008\t\u0000\u0001\u0008\u000f\u0000\t\u0008\u0011\u0000\u0003\u0008\u0001\u0000\u0008\u0007\u0001\u0000\u0003\u0007\u0001\u0000\u0017\u0007\u0001\u0000\n\u0007\u0001\u0000\u0005\u0007\u0004\u0000\u0007\u0008\u0001\u0000\u0003\u0008\u0001\u0000\u0004\u0008\u0007\u0000\u0002\u0008\t\u0000\u0002\u0007\u0004\u0000\n\u0008\u0012\u0000\u0002\u0008\u0001\u0000\u0008\u0007\u0001\u0000\u0003\u0007\u0001\u0000\u0017\u0007\u0001\u0000\n\u0007\u0001\u0000\u0005\u0007\u0004\u0000\u0007\u0008\u0001\u0000\u0003\u0008\u0001\u0000\u0004\u0008\u0007\u0000\u0002\u0008\u0007\u0000\u0001\u0007\u0001\u0000\u0002\u0007\u0004\u0000\n\u0008\u0012\u0000\u0002\u0008\u0001\u0000\u0008\u0007\u0001\u0000\u0003\u0007\u0001\u0000\u0017\u0007\u0001\u0000\u0010\u0007\u0004\u0000\u0006\u0008\u0002\u0000\u0003\u0008\u0001\u0000\u0004\u0008\t\u0000\u0001\u0008\u0008\u0000\u0002\u0007\u0004\u0000\n\u0008\u0091\u0000.\u0007\u0001\u0000\u0001\u0007\u0001\u0008\u0002\u0007\u0007\u0008\u0005\u0000\u0006\u0007\u0001\u0008\u0008\u0008\u0001\u0000\n\u0008\'\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u0002\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u0002\u0000\u0001\u0007\u0006\u0000\u0004\u0007\u0001\u0000\u0007\u0007\u0001\u0000\u0003\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0002\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u0001\u0008\u0002\u0007\u0006\u0008\u0001\u0000\u0002\u0008\u0001\u0007\u0002\u0000\u0005\u0007\u0001\u0000\u0001\u0008\u0001\u0000\u0006\u0008\u0002\u0000\n\u0008>\u0000\u0002\u0008\u0006\u0000\n\u0008\u000b\u0000\u0001\u0008\u0001\u0000\u0001\u0008\u0001\u0000\u0001\u0008\u0004\u0000\u0002\u0008\u0008\u0007\u0001\u0000!\u0007\u0007\u0000\u0014\u0008\u0001\u0000\u0006\u0008\u0004\u0000\u0006\u0008\u0001\u0000\u0001\u0008\u0001\u0000\u0015\u0008\u0003\u0000\u0007\u0008\u0001\u0000\u0001\u0008\u00e6\u0000&\u0007\n\u0000\'\u0007\t\u0000\u0001\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0003\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0005\u0007)\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u000b\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0003\u0000\u0002\u0007\u0003\u0000\u0001\u0007\u0005\u0000\u0003\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0003\u0000\u0002\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0001\u0007(\u0000\u0001\u0007\t\u0000\u0001\u0007\u0002\u0000\u0001\u0007\u0002\u0000\u0002\u0007\u0007\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0007\u0007(\u0000\u0001\u0007\u0004\u0000\u0001\u0007\u0008\u0000\u0001\u0007\u0c06\u0000\u009c\u0007\u0004\u0000Z\u0007\u0006\u0000\u0016\u0007\u0002\u0000\u0006\u0007\u0002\u0000&\u0007\u0002\u0000\u0006\u0007\u0002\u0000\u0008\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u001f\u0007\u0002\u00005\u0007\u0001\u0000\u0007\u0007\u0001\u0000\u0001\u0007\u0003\u0000\u0003\u0007\u0001\u0000\u0007\u0007\u0003\u0000\u0004\u0007\u0002\u0000\u0006\u0007\u0004\u0000\r\u0007\u0005\u0000\u0003\u0007\u0001\u0000\u0007\u0007\u00d3\u0000\r\u0008\u0004\u0000\u0001\u0008D\u0000\u0001\u0007\u0003\u0000\u0002\u0007\u0002\u0000\u0001\u0007Q\u0000\u0003\u0007\u0e82\u0000\u0001\u0008\u0001\u0000\u0001\u0007\u0019\u0000\t\u0007\u0006\u0008\u0001\u0000\u0005\u0008\u000b\u0000T\u0007\u0004\u0000\u0002\u0008\u0002\u0000\u0002\u0008\u0002\u0000Z\u0007\u0001\u0000\u0003\u0008\u0006\u0000(\u0007\u1cd3\u0000\u51a6\u0007\u0c5a\u0000\u2ba4\u0007\u285c\u0000";

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int DTD> = 21;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int YYINITIAL_DIRECT> = 2;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int CLOSE_TAG> = 19;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int TAG_VALUE> = 10;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int TAG_SQSTRING_NORMALIZE_BUFFERED> = 18;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int TAG_QSTRING_NORMALIZE_BUFFERED> = 17;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int DTD_ENTITY_DECL> = 25;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int DTD_ATT_TYPE> = 24;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int DTD_ATTLIST_ELEMENT> = 22;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int TAG_START_NS> = 9;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int DTD_TAG_QSTRING_BUFFERED> = 34;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int PI_WS> = 5;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int DTD_TAG_VALUE_STD_ENTITYREF> = 36;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int TAG_SQSTRING_CDATA_BUFFERED> = 14;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int TAG_QSTRING_CDATA_BUFFERED> = 13;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int DTD_TAG_VALUE_ENTITY> = 32;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int DTD_COMMENT> = 27;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int TAG_START> = 7;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int TAG_QSTRING_NORMALIZE> = 15;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int XML_TAG> = 1;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int DTD_PUBLIC_ID> = 29;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int TAG_SQSTRING_NORMALIZE> = 16;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int DTD_NMTOKENS> = 26;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int TAG_NS> = 8;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int DTD_TAG_VALUE_PARAM_ENTITYREF> = 37;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int YYINITIAL> = 0;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int TAG_VALUE_ENTITYREF> = 12;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int TAG> = 6;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int DTD_TAG_VALUE_EXTERNAL_ENTITY> = 33;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int DTD_TAG> = 30;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int DTD_ATT_NAME> = 23;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int ENTITYREF> = 3;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int TAG_VALUE_ENTITY> = 11;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int DTD_TAG_SQSTRING_BUFFERED> = 35;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int PI> = 4;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int DTD_IGNORE> = 28;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int CLOSE_TAG_NS> = 20;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int DTD_TAG_START> = 31;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int YY_BUFFERSIZE> = 16384;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int YYEOF> = -1;

        $r0 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yy_unpack_cmap(java.lang.String)>("\t\u0000\u0001\u0001\u0001:\u0002\u0000\u0001\u0006\u0012\u0000\u0001\u0010\u0001\u0018\u00014\u0001,\u0001\u0005\u0001\u0015\u0001\u000b\u00015\u0001(\u0001/\u00010\u00011\u00012\u0001!\u0001\u0002\u00016\n\t\u0001\u0003\u0001\u0016\u0001\n\u00019\u0001\u0014\u0001\f\u0001\u0005\u0001\u001e\u0001+\u0001#\u0001$\u0001\u0019\u0001&\u0001.\u0001\u0004\u0001\u001c\u0001\u0004\u0001\'\u0001\u0013\u0001\u0012\u0001\u001a\u0001 \u0001)\u0001-\u0001%\u0001\u001f\u0001\u001b\u0001*\u0002\u0004\u0001\u0011\u0001\u001d\u0001\u0004\u0001\"\u0001\u0000\u0001\u0017\u0001\u0000\u0001\u0004\u0001\u0000\u0001;\u0005B\u0001A\u0004\u0004\u0001\u000f\u0001\u000e\u00017\u0001?\u0001<\u0001=\u0001\u0004\u00018\u0001@\u0001>\u0002\u0004\u0001\r\u0002\u0004\u0001\u0000\u00013:\u0000\u0001\u0008\u0008\u0000\u0017\u0007\u0001\u0000\u001f\u0007\u0001\u0000:\u0007\u0002\u0000\u000b\u0007\u0002\u0000\u0008\u0007\u0001\u00005\u0007\u0001\u0000D\u0007\t\u0000$\u0007\u0003\u0000\u0002\u0007\u0004\u0000\u001e\u00078\u0000Y\u0007\u0012\u0000\u0007\u0007\u000e\u0000\u0002\u0008.\u0000F\u0008\u001a\u0000\u0002\u0008$\u0000\u0001\u0007\u0001\u0008\u0003\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0014\u0007\u0001\u0000,\u0007\u0001\u0000\u0007\u0007\u0003\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0012\u0007\r\u0000\f\u0007\u0001\u0000B\u0007\u0001\u0000\f\u0007\u0001\u0000$\u0007\u0001\u0000\u0004\u0008\t\u00005\u0007\u0002\u0000\u0002\u0007\u0002\u0000\u0002\u0007\u0003\u0000\u001c\u0007\u0002\u0000\u0008\u0007\u0002\u0000\u0002\u00077\u0000&\u0007\u0002\u0000\u0001\u0007\u0007\u0000&\u0007\n\u0000\u0011\u0008\u0001\u0000\u0017\u0008\u0001\u0000\u0003\u0008\u0001\u0000\u0001\u0008\u0001\u0000\u0002\u0008\u0001\u0000\u0001\u0008\u000b\u0000\u001b\u0007\u0005\u0000\u0003\u0007.\u0000\u001a\u0007\u0005\u0000\u0001\u0008\n\u0007\u0008\u0008\r\u0000\n\u0008\u0006\u0000\u0001\u0008G\u0007\u0002\u0000\u0005\u0007\u0001\u0000\u000f\u0007\u0001\u0000\u0004\u0007\u0001\u0000\u0001\u0007\u000f\u0008\u0002\u0007\u0002\u0008\u0001\u0000\u0004\u0008\u0002\u0000\n\u0008\u0207\u0000\u0003\u0008\u0001\u00005\u0007\u0002\u0000\u0001\u0008\u0001\u0007\u0010\u0008\u0003\u0000\u0004\u0008\u0003\u0000\n\u0007\u0002\u0008\u0002\u0000\n\u0008\u0011\u0000\u0003\u0008\u0001\u0000\u0008\u0007\u0002\u0000\u0002\u0007\u0002\u0000\u0016\u0007\u0001\u0000\u0007\u0007\u0001\u0000\u0001\u0007\u0003\u0000\u0004\u0007\u0002\u0000\u0001\u0008\u0001\u0000\u0007\u0008\u0002\u0000\u0002\u0008\u0002\u0000\u0003\u0008\t\u0000\u0001\u0008\u0004\u0000\u0002\u0007\u0001\u0000\u0003\u0007\u0002\u0008\u0002\u0000\n\u0008\u0002\u0007\u0010\u0000\u0001\u0008\u0002\u0000\u0006\u0007\u0004\u0000\u0002\u0007\u0002\u0000\u0016\u0007\u0001\u0000\u0007\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0002\u0000\u0001\u0008\u0001\u0000\u0005\u0008\u0004\u0000\u0002\u0008\u0002\u0000\u0003\u0008\u000b\u0000\u0004\u0007\u0001\u0000\u0001\u0007\u0007\u0000\n\u0008\u0002\u0008\u0003\u0007\f\u0000\u0003\u0008\u0001\u0000\u0007\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0003\u0007\u0001\u0000\u0016\u0007\u0001\u0000\u0007\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0005\u0007\u0002\u0000\u0001\u0008\u0001\u0007\u0008\u0008\u0001\u0000\u0003\u0008\u0001\u0000\u0003\u0008\u0012\u0000\u0001\u0007\u0005\u0000\n\u0008\u0011\u0000\u0003\u0008\u0001\u0000\u0008\u0007\u0002\u0000\u0002\u0007\u0002\u0000\u0016\u0007\u0001\u0000\u0007\u0007\u0001\u0000\u0002\u0007\u0002\u0000\u0004\u0007\u0002\u0000\u0001\u0008\u0001\u0007\u0006\u0008\u0003\u0000\u0002\u0008\u0002\u0000\u0003\u0008\u0008\u0000\u0002\u0008\u0004\u0000\u0002\u0007\u0001\u0000\u0003\u0007\u0004\u0000\n\u0008\u0012\u0000\u0002\u0008\u0001\u0000\u0006\u0007\u0003\u0000\u0003\u0007\u0001\u0000\u0004\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0002\u0007\u0003\u0000\u0002\u0007\u0003\u0000\u0003\u0007\u0003\u0000\u0008\u0007\u0001\u0000\u0003\u0007\u0004\u0000\u0005\u0008\u0003\u0000\u0003\u0008\u0001\u0000\u0004\u0008\t\u0000\u0001\u0008\u000f\u0000\t\u0008\u0011\u0000\u0003\u0008\u0001\u0000\u0008\u0007\u0001\u0000\u0003\u0007\u0001\u0000\u0017\u0007\u0001\u0000\n\u0007\u0001\u0000\u0005\u0007\u0004\u0000\u0007\u0008\u0001\u0000\u0003\u0008\u0001\u0000\u0004\u0008\u0007\u0000\u0002\u0008\t\u0000\u0002\u0007\u0004\u0000\n\u0008\u0012\u0000\u0002\u0008\u0001\u0000\u0008\u0007\u0001\u0000\u0003\u0007\u0001\u0000\u0017\u0007\u0001\u0000\n\u0007\u0001\u0000\u0005\u0007\u0004\u0000\u0007\u0008\u0001\u0000\u0003\u0008\u0001\u0000\u0004\u0008\u0007\u0000\u0002\u0008\u0007\u0000\u0001\u0007\u0001\u0000\u0002\u0007\u0004\u0000\n\u0008\u0012\u0000\u0002\u0008\u0001\u0000\u0008\u0007\u0001\u0000\u0003\u0007\u0001\u0000\u0017\u0007\u0001\u0000\u0010\u0007\u0004\u0000\u0006\u0008\u0002\u0000\u0003\u0008\u0001\u0000\u0004\u0008\t\u0000\u0001\u0008\u0008\u0000\u0002\u0007\u0004\u0000\n\u0008\u0091\u0000.\u0007\u0001\u0000\u0001\u0007\u0001\u0008\u0002\u0007\u0007\u0008\u0005\u0000\u0006\u0007\u0001\u0008\u0008\u0008\u0001\u0000\n\u0008\'\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u0002\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u0002\u0000\u0001\u0007\u0006\u0000\u0004\u0007\u0001\u0000\u0007\u0007\u0001\u0000\u0003\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0002\u0000\u0002\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u0001\u0008\u0002\u0007\u0006\u0008\u0001\u0000\u0002\u0008\u0001\u0007\u0002\u0000\u0005\u0007\u0001\u0000\u0001\u0008\u0001\u0000\u0006\u0008\u0002\u0000\n\u0008>\u0000\u0002\u0008\u0006\u0000\n\u0008\u000b\u0000\u0001\u0008\u0001\u0000\u0001\u0008\u0001\u0000\u0001\u0008\u0004\u0000\u0002\u0008\u0008\u0007\u0001\u0000!\u0007\u0007\u0000\u0014\u0008\u0001\u0000\u0006\u0008\u0004\u0000\u0006\u0008\u0001\u0000\u0001\u0008\u0001\u0000\u0015\u0008\u0003\u0000\u0007\u0008\u0001\u0000\u0001\u0008\u00e6\u0000&\u0007\n\u0000\'\u0007\t\u0000\u0001\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0003\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0002\u0007\u0001\u0000\u0005\u0007)\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u000b\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0003\u0000\u0002\u0007\u0003\u0000\u0001\u0007\u0005\u0000\u0003\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0003\u0000\u0002\u0007\u0003\u0000\u0002\u0007\u0001\u0000\u0001\u0007(\u0000\u0001\u0007\t\u0000\u0001\u0007\u0002\u0000\u0001\u0007\u0002\u0000\u0002\u0007\u0007\u0000\u0002\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0007\u0007(\u0000\u0001\u0007\u0004\u0000\u0001\u0007\u0008\u0000\u0001\u0007\u0c06\u0000\u009c\u0007\u0004\u0000Z\u0007\u0006\u0000\u0016\u0007\u0002\u0000\u0006\u0007\u0002\u0000&\u0007\u0002\u0000\u0006\u0007\u0002\u0000\u0008\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u0001\u0007\u0001\u0000\u001f\u0007\u0002\u00005\u0007\u0001\u0000\u0007\u0007\u0001\u0000\u0001\u0007\u0003\u0000\u0003\u0007\u0001\u0000\u0007\u0007\u0003\u0000\u0004\u0007\u0002\u0000\u0006\u0007\u0004\u0000\r\u0007\u0005\u0000\u0003\u0007\u0001\u0000\u0007\u0007\u00d3\u0000\r\u0008\u0004\u0000\u0001\u0008D\u0000\u0001\u0007\u0003\u0000\u0002\u0007\u0002\u0000\u0001\u0007Q\u0000\u0003\u0007\u0e82\u0000\u0001\u0008\u0001\u0000\u0001\u0007\u0019\u0000\t\u0007\u0006\u0008\u0001\u0000\u0005\u0008\u000b\u0000T\u0007\u0004\u0000\u0002\u0008\u0002\u0000\u0002\u0008\u0002\u0000Z\u0007\u0001\u0000\u0003\u0008\u0006\u0000(\u0007\u1cd3\u0000\u51a6\u0007\u0c5a\u0000\u2ba4\u0007\u285c\u0000");

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] yycmap> = $r0;

        $r1 = newarray (int)[433];

        $r1[0] = 0;

        $r1[1] = 67;

        $r1[2] = 134;

        $r1[3] = 201;

        $r1[4] = 268;

        $r1[5] = 335;

        $r1[6] = 402;

        $r1[7] = 469;

        $r1[8] = 536;

        $r1[9] = 603;

        $r1[10] = 670;

        $r1[11] = 737;

        $r1[12] = 804;

        $r1[13] = 871;

        $r1[14] = 938;

        $r1[15] = 1005;

        $r1[16] = 1072;

        $r1[17] = 1139;

        $r1[18] = 1206;

        $r1[19] = 1273;

        $r1[20] = 1340;

        $r1[21] = 1407;

        $r1[22] = 1474;

        $r1[23] = 1541;

        $r1[24] = 1608;

        $r1[25] = 1675;

        $r1[26] = 1742;

        $r1[27] = 1809;

        $r1[28] = 1876;

        $r1[29] = 1943;

        $r1[30] = 2010;

        $r1[31] = 2077;

        $r1[32] = 2144;

        $r1[33] = 2211;

        $r1[34] = 2278;

        $r1[35] = 2345;

        $r1[36] = 2412;

        $r1[37] = 2479;

        $r1[38] = 2546;

        $r1[39] = 2546;

        $r1[40] = 2546;

        $r1[41] = 2546;

        $r1[42] = 2613;

        $r1[43] = 2680;

        $r1[44] = 2546;

        $r1[45] = 2546;

        $r1[46] = 2747;

        $r1[47] = 2814;

        $r1[48] = 2881;

        $r1[49] = 2948;

        $r1[50] = 3015;

        $r1[51] = 3082;

        $r1[52] = 3149;

        $r1[53] = 3216;

        $r1[54] = 3283;

        $r1[55] = 3350;

        $r1[56] = 3417;

        $r1[57] = 3484;

        $r1[58] = 2546;

        $r1[59] = 3551;

        $r1[60] = 3618;

        $r1[61] = 3685;

        $r1[62] = 3752;

        $r1[63] = 3819;

        $r1[64] = 3886;

        $r1[65] = 3953;

        $r1[66] = 4020;

        $r1[67] = 2546;

        $r1[68] = 4087;

        $r1[69] = 4154;

        $r1[70] = 4221;

        $r1[71] = 4288;

        $r1[72] = 4355;

        $r1[73] = 4422;

        $r1[74] = 4489;

        $r1[75] = 2546;

        $r1[76] = 2546;

        $r1[77] = 4556;

        $r1[78] = 4623;

        $r1[79] = 4690;

        $r1[80] = 4757;

        $r1[81] = 4824;

        $r1[82] = 4891;

        $r1[83] = 4958;

        $r1[84] = 5025;

        $r1[85] = 2546;

        $r1[86] = 5092;

        $r1[87] = 5159;

        $r1[88] = 5226;

        $r1[89] = 5293;

        $r1[90] = 2546;

        $r1[91] = 5360;

        $r1[92] = 5427;

        $r1[93] = 5494;

        $r1[94] = 2546;

        $r1[95] = 5561;

        $r1[96] = 5628;

        $r1[97] = 2546;

        $r1[98] = 5695;

        $r1[99] = 5762;

        $r1[100] = 5829;

        $r1[101] = 5896;

        $r1[102] = 2546;

        $r1[103] = 5963;

        $r1[104] = 2546;

        $r1[105] = 6030;

        $r1[106] = 2546;

        $r1[107] = 6097;

        $r1[108] = 6164;

        $r1[109] = 6231;

        $r1[110] = 6298;

        $r1[111] = 6365;

        $r1[112] = 6432;

        $r1[113] = 2546;

        $r1[114] = 6499;

        $r1[115] = 6566;

        $r1[116] = 6633;

        $r1[117] = 6700;

        $r1[118] = 2546;

        $r1[119] = 6767;

        $r1[120] = 6834;

        $r1[121] = 6901;

        $r1[122] = 2546;

        $r1[123] = 2546;

        $r1[124] = 6968;

        $r1[125] = 7035;

        $r1[126] = 7102;

        $r1[127] = 7169;

        $r1[128] = 7236;

        $r1[129] = 7303;

        $r1[130] = 7370;

        $r1[131] = 7437;

        $r1[132] = 2546;

        $r1[133] = 7504;

        $r1[134] = 7571;

        $r1[135] = 7638;

        $r1[136] = 7705;

        $r1[137] = 7772;

        $r1[138] = 7839;

        $r1[139] = 2546;

        $r1[140] = 7906;

        $r1[141] = 7973;

        $r1[142] = 2546;

        $r1[143] = 2546;

        $r1[144] = 2546;

        $r1[145] = 2546;

        $r1[146] = 8040;

        $r1[147] = 8107;

        $r1[148] = 8174;

        $r1[149] = 8241;

        $r1[150] = 8308;

        $r1[151] = 2546;

        $r1[152] = 2546;

        $r1[153] = 8375;

        $r1[154] = 8442;

        $r1[155] = 8509;

        $r1[156] = 8576;

        $r1[157] = 2546;

        $r1[158] = 2546;

        $r1[159] = 2546;

        $r1[160] = 8643;

        $r1[161] = 8710;

        $r1[162] = 8777;

        $r1[163] = 2613;

        $r1[164] = 2680;

        $r1[165] = 2546;

        $r1[166] = 2747;

        $r1[167] = 2546;

        $r1[168] = 8844;

        $r1[169] = 8911;

        $r1[170] = 8978;

        $r1[171] = 9045;

        $r1[172] = 9112;

        $r1[173] = 9179;

        $r1[174] = 9246;

        $r1[175] = 3149;

        $r1[176] = 3216;

        $r1[177] = 2546;

        $r1[178] = 2546;

        $r1[179] = 2546;

        $r1[180] = 9313;

        $r1[181] = 9380;

        $r1[182] = 9447;

        $r1[183] = 9514;

        $r1[184] = 9581;

        $r1[185] = 9648;

        $r1[186] = 9715;

        $r1[187] = 9782;

        $r1[188] = 9849;

        $r1[189] = 2546;

        $r1[190] = 9916;

        $r1[191] = 9983;

        $r1[192] = 10050;

        $r1[193] = 4355;

        $r1[194] = 4422;

        $r1[195] = 2546;

        $r1[196] = 2546;

        $r1[197] = 4556;

        $r1[198] = 2546;

        $r1[199] = 10117;

        $r1[200] = 10184;

        $r1[201] = 10251;

        $r1[202] = 10318;

        $r1[203] = 10385;

        $r1[204] = 10452;

        $r1[205] = 10519;

        $r1[206] = 2546;

        $r1[207] = 5360;

        $r1[208] = 2546;

        $r1[209] = 5695;

        $r1[210] = 2546;

        $r1[211] = 5896;

        $r1[212] = 5963;

        $r1[213] = 10586;

        $r1[214] = 10653;

        $r1[215] = 2546;

        $r1[216] = 10720;

        $r1[217] = 10787;

        $r1[218] = 10854;

        $r1[219] = 10921;

        $r1[220] = 10988;

        $r1[221] = 11055;

        $r1[222] = 11122;

        $r1[223] = 11189;

        $r1[224] = 11256;

        $r1[225] = 6968;

        $r1[226] = 7035;

        $r1[227] = 11323;

        $r1[228] = 11390;

        $r1[229] = 7303;

        $r1[230] = 2546;

        $r1[231] = 7370;

        $r1[232] = 11457;

        $r1[233] = 11524;

        $r1[234] = 11591;

        $r1[235] = 11658;

        $r1[236] = 11725;

        $r1[237] = 11792;

        $r1[238] = 11859;

        $r1[239] = 11926;

        $r1[240] = 11993;

        $r1[241] = 12060;

        $r1[242] = 12127;

        $r1[243] = 12194;

        $r1[244] = 2546;

        $r1[245] = 12261;

        $r1[246] = 12328;

        $r1[247] = 12395;

        $r1[248] = 12462;

        $r1[249] = 12529;

        $r1[250] = 12596;

        $r1[251] = 12663;

        $r1[252] = 2546;

        $r1[253] = 8710;

        $r1[254] = 2546;

        $r1[255] = 8777;

        $r1[256] = 2546;

        $r1[257] = 2546;

        $r1[258] = 2546;

        $r1[259] = 12730;

        $r1[260] = 12797;

        $r1[261] = 12864;

        $r1[262] = 12931;

        $r1[263] = 2546;

        $r1[264] = 12998;

        $r1[265] = 13065;

        $r1[266] = 13132;

        $r1[267] = 13199;

        $r1[268] = 13266;

        $r1[269] = 13333;

        $r1[270] = 13400;

        $r1[271] = 13467;

        $r1[272] = 13534;

        $r1[273] = 2546;

        $r1[274] = 2546;

        $r1[275] = 13601;

        $r1[276] = 13668;

        $r1[277] = 13735;

        $r1[278] = 13802;

        $r1[279] = 2546;

        $r1[280] = 2546;

        $r1[281] = 2546;

        $r1[282] = 2546;

        $r1[283] = 13869;

        $r1[284] = 13936;

        $r1[285] = 14003;

        $r1[286] = 14070;

        $r1[287] = 14137;

        $r1[288] = 14204;

        $r1[289] = 2546;

        $r1[290] = 2546;

        $r1[291] = 14271;

        $r1[292] = 14338;

        $r1[293] = 14405;

        $r1[294] = 14472;

        $r1[295] = 14539;

        $r1[296] = 6901;

        $r1[297] = 14606;

        $r1[298] = 14673;

        $r1[299] = 14740;

        $r1[300] = 14807;

        $r1[301] = 14874;

        $r1[302] = 14941;

        $r1[303] = 15008;

        $r1[304] = 15075;

        $r1[305] = 15142;

        $r1[306] = 15209;

        $r1[307] = 15276;

        $r1[308] = 15343;

        $r1[309] = 2546;

        $r1[310] = 2546;

        $r1[311] = 2546;

        $r1[312] = 15410;

        $r1[313] = 15477;

        $r1[314] = 15544;

        $r1[315] = 15611;

        $r1[316] = 15678;

        $r1[317] = 15745;

        $r1[318] = 15812;

        $r1[319] = 15879;

        $r1[320] = 15946;

        $r1[321] = 2546;

        $r1[322] = 2546;

        $r1[323] = 16013;

        $r1[324] = 16080;

        $r1[325] = 16147;

        $r1[326] = 16214;

        $r1[327] = 16281;

        $r1[328] = 16348;

        $r1[329] = 16415;

        $r1[330] = 16482;

        $r1[331] = 16549;

        $r1[332] = 16616;

        $r1[333] = 16683;

        $r1[334] = 16750;

        $r1[335] = 16817;

        $r1[336] = 16884;

        $r1[337] = 16951;

        $r1[338] = 17018;

        $r1[339] = 17085;

        $r1[340] = 17152;

        $r1[341] = 17219;

        $r1[342] = 17286;

        $r1[343] = 17353;

        $r1[344] = 17420;

        $r1[345] = 17487;

        $r1[346] = 17554;

        $r1[347] = 2546;

        $r1[348] = 2546;

        $r1[349] = 2546;

        $r1[350] = 2546;

        $r1[351] = 17621;

        $r1[352] = 17688;

        $r1[353] = 17755;

        $r1[354] = 17822;

        $r1[355] = 2546;

        $r1[356] = 2546;

        $r1[357] = 17889;

        $r1[358] = 17956;

        $r1[359] = 18023;

        $r1[360] = 18090;

        $r1[361] = 2546;

        $r1[362] = 6901;

        $r1[363] = 18157;

        $r1[364] = 6901;

        $r1[365] = 18224;

        $r1[366] = 18291;

        $r1[367] = 18358;

        $r1[368] = 18425;

        $r1[369] = 18492;

        $r1[370] = 18559;

        $r1[371] = 18626;

        $r1[372] = 18693;

        $r1[373] = 2546;

        $r1[374] = 18760;

        $r1[375] = 18827;

        $r1[376] = 18894;

        $r1[377] = 18961;

        $r1[378] = 2546;

        $r1[379] = 19028;

        $r1[380] = 19095;

        $r1[381] = 19162;

        $r1[382] = 19229;

        $r1[383] = 19296;

        $r1[384] = 19363;

        $r1[385] = 2546;

        $r1[386] = 19430;

        $r1[387] = 19497;

        $r1[388] = 2546;

        $r1[389] = 19564;

        $r1[390] = 19631;

        $r1[391] = 6901;

        $r1[392] = 6901;

        $r1[393] = 6901;

        $r1[394] = 19698;

        $r1[395] = 19765;

        $r1[396] = 2546;

        $r1[397] = 19832;

        $r1[398] = 19899;

        $r1[399] = 19966;

        $r1[400] = 20033;

        $r1[401] = 20100;

        $r1[402] = 20167;

        $r1[403] = 20234;

        $r1[404] = 20301;

        $r1[405] = 2546;

        $r1[406] = 2546;

        $r1[407] = 20368;

        $r1[408] = 20435;

        $r1[409] = 20502;

        $r1[410] = 20569;

        $r1[411] = 6901;

        $r1[412] = 20636;

        $r1[413] = 20703;

        $r1[414] = 2546;

        $r1[415] = 20770;

        $r1[416] = 2546;

        $r1[417] = 20837;

        $r1[418] = 20904;

        $r1[419] = 2546;

        $r1[420] = 20971;

        $r1[421] = 2546;

        $r1[422] = 2546;

        $r1[423] = 2546;

        $r1[424] = 6901;

        $r1[425] = 2546;

        $r1[426] = 21038;

        $r1[427] = 2546;

        $r1[428] = 21105;

        $r1[429] = 2546;

        $r1[430] = 20971;

        $r1[431] = 2546;

        $r1[432] = 2546;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int[] yy_rowMap> = $r1;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int[] yy_unpack()>();

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: int[] yytrans> = $r2;

        $r3 = newarray (java.lang.String)[5];

        $r3[0] = "Unkown internal scanner error";

        $r3[1] = "Internal error: unknown state";

        $r3[2] = "Error: could not match input";

        $r3[3] = "Error: pushback value was too large";

        $r3[4] = "Error: skip value was too large";

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: java.lang.String[] YY_ERROR_MSG> = $r3;

        $r4 = newarray (byte)[433];

        $r4[0] = 0;

        $r4[1] = 0;

        $r4[2] = 0;

        $r4[3] = 0;

        $r4[4] = 0;

        $r4[5] = 1;

        $r4[6] = 1;

        $r4[7] = 0;

        $r4[8] = 1;

        $r4[9] = 0;

        $r4[10] = 0;

        $r4[11] = 1;

        $r4[12] = 0;

        $r4[13] = 1;

        $r4[14] = 1;

        $r4[15] = 1;

        $r4[16] = 1;

        $r4[17] = 1;

        $r4[18] = 1;

        $r4[19] = 0;

        $r4[20] = 0;

        $r4[21] = 1;

        $r4[22] = 1;

        $r4[23] = 1;

        $r4[24] = 1;

        $r4[25] = 1;

        $r4[26] = 1;

        $r4[27] = 0;

        $r4[28] = 1;

        $r4[29] = 1;

        $r4[30] = 1;

        $r4[31] = 0;

        $r4[32] = 1;

        $r4[33] = 1;

        $r4[34] = 1;

        $r4[35] = 1;

        $r4[36] = 0;

        $r4[37] = 0;

        $r4[38] = 9;

        $r4[39] = 9;

        $r4[40] = 9;

        $r4[41] = 9;

        $r4[42] = 1;

        $r4[43] = 1;

        $r4[44] = 9;

        $r4[45] = 9;

        $r4[46] = 1;

        $r4[47] = 1;

        $r4[48] = 1;

        $r4[49] = 1;

        $r4[50] = 1;

        $r4[51] = 1;

        $r4[52] = 1;

        $r4[53] = 1;

        $r4[54] = 1;

        $r4[55] = 1;

        $r4[56] = 1;

        $r4[57] = 1;

        $r4[58] = 9;

        $r4[59] = 1;

        $r4[60] = 1;

        $r4[61] = 1;

        $r4[62] = 1;

        $r4[63] = 1;

        $r4[64] = 1;

        $r4[65] = 1;

        $r4[66] = 1;

        $r4[67] = 9;

        $r4[68] = 1;

        $r4[69] = 1;

        $r4[70] = 1;

        $r4[71] = 1;

        $r4[72] = 1;

        $r4[73] = 1;

        $r4[74] = 1;

        $r4[75] = 9;

        $r4[76] = 9;

        $r4[77] = 1;

        $r4[78] = 1;

        $r4[79] = 1;

        $r4[80] = 1;

        $r4[81] = 1;

        $r4[82] = 1;

        $r4[83] = 1;

        $r4[84] = 1;

        $r4[85] = 9;

        $r4[86] = 3;

        $r4[87] = 1;

        $r4[88] = 1;

        $r4[89] = 1;

        $r4[90] = 9;

        $r4[91] = 3;

        $r4[92] = 1;

        $r4[93] = 1;

        $r4[94] = 9;

        $r4[95] = 1;

        $r4[96] = 1;

        $r4[97] = 9;

        $r4[98] = 3;

        $r4[99] = 1;

        $r4[100] = 1;

        $r4[101] = 1;

        $r4[102] = 9;

        $r4[103] = 1;

        $r4[104] = 9;

        $r4[105] = 1;

        $r4[106] = 9;

        $r4[107] = 1;

        $r4[108] = 1;

        $r4[109] = 1;

        $r4[110] = 1;

        $r4[111] = 1;

        $r4[112] = 1;

        $r4[113] = 9;

        $r4[114] = 1;

        $r4[115] = 1;

        $r4[116] = 1;

        $r4[117] = 1;

        $r4[118] = 9;

        $r4[119] = 1;

        $r4[120] = 1;

        $r4[121] = 1;

        $r4[122] = 9;

        $r4[123] = 9;

        $r4[124] = 1;

        $r4[125] = 1;

        $r4[126] = 1;

        $r4[127] = 1;

        $r4[128] = 1;

        $r4[129] = 1;

        $r4[130] = 1;

        $r4[131] = 1;

        $r4[132] = 9;

        $r4[133] = 1;

        $r4[134] = 1;

        $r4[135] = 1;

        $r4[136] = 1;

        $r4[137] = 1;

        $r4[138] = 1;

        $r4[139] = 9;

        $r4[140] = 1;

        $r4[141] = 1;

        $r4[142] = 9;

        $r4[143] = 9;

        $r4[144] = 9;

        $r4[145] = 9;

        $r4[146] = 1;

        $r4[147] = 1;

        $r4[148] = 1;

        $r4[149] = 1;

        $r4[150] = 1;

        $r4[151] = 9;

        $r4[152] = 9;

        $r4[153] = 1;

        $r4[154] = 1;

        $r4[155] = 1;

        $r4[156] = 1;

        $r4[157] = 9;

        $r4[158] = 9;

        $r4[159] = 9;

        $r4[160] = 1;

        $r4[161] = 1;

        $r4[162] = 1;

        $r4[163] = 0;

        $r4[164] = 0;

        $r4[165] = 9;

        $r4[166] = 0;

        $r4[167] = 9;

        $r4[168] = 0;

        $r4[169] = 0;

        $r4[170] = 0;

        $r4[171] = 0;

        $r4[172] = 0;

        $r4[173] = 0;

        $r4[174] = 0;

        $r4[175] = 0;

        $r4[176] = 0;

        $r4[177] = 9;

        $r4[178] = 9;

        $r4[179] = 9;

        $r4[180] = 1;

        $r4[181] = 1;

        $r4[182] = 1;

        $r4[183] = 0;

        $r4[184] = 0;

        $r4[185] = 0;

        $r4[186] = 1;

        $r4[187] = 1;

        $r4[188] = 1;

        $r4[189] = 9;

        $r4[190] = 1;

        $r4[191] = 1;

        $r4[192] = 1;

        $r4[193] = 0;

        $r4[194] = 0;

        $r4[195] = 9;

        $r4[196] = 9;

        $r4[197] = 0;

        $r4[198] = 9;

        $r4[199] = 0;

        $r4[200] = 0;

        $r4[201] = 0;

        $r4[202] = 0;

        $r4[203] = 0;

        $r4[204] = 0;

        $r4[205] = 0;

        $r4[206] = 13;

        $r4[207] = 2;

        $r4[208] = 13;

        $r4[209] = 2;

        $r4[210] = 13;

        $r4[211] = 0;

        $r4[212] = 0;

        $r4[213] = 0;

        $r4[214] = 0;

        $r4[215] = 9;

        $r4[216] = 0;

        $r4[217] = 0;

        $r4[218] = 1;

        $r4[219] = 0;

        $r4[220] = 0;

        $r4[221] = 0;

        $r4[222] = 1;

        $r4[223] = 0;

        $r4[224] = 1;

        $r4[225] = 0;

        $r4[226] = 0;

        $r4[227] = 0;

        $r4[228] = 0;

        $r4[229] = 0;

        $r4[230] = 9;

        $r4[231] = 0;

        $r4[232] = 1;

        $r4[233] = 1;

        $r4[234] = 1;

        $r4[235] = 1;

        $r4[236] = 1;

        $r4[237] = 1;

        $r4[238] = 1;

        $r4[239] = 1;

        $r4[240] = 0;

        $r4[241] = 0;

        $r4[242] = 0;

        $r4[243] = 0;

        $r4[244] = 9;

        $r4[245] = 1;

        $r4[246] = 1;

        $r4[247] = 1;

        $r4[248] = 0;

        $r4[249] = 0;

        $r4[250] = 0;

        $r4[251] = 0;

        $r4[252] = 9;

        $r4[253] = 0;

        $r4[254] = 9;

        $r4[255] = 0;

        $r4[256] = 9;

        $r4[257] = 9;

        $r4[258] = 9;

        $r4[259] = 0;

        $r4[260] = 0;

        $r4[261] = 0;

        $r4[262] = 0;

        $r4[263] = 9;

        $r4[264] = 1;

        $r4[265] = 1;

        $r4[266] = 0;

        $r4[267] = 0;

        $r4[268] = 0;

        $r4[269] = 1;

        $r4[270] = 1;

        $r4[271] = 1;

        $r4[272] = 1;

        $r4[273] = 9;

        $r4[274] = 9;

        $r4[275] = 0;

        $r4[276] = 0;

        $r4[277] = 0;

        $r4[278] = 0;

        $r4[279] = 9;

        $r4[280] = 9;

        $r4[281] = 9;

        $r4[282] = 9;

        $r4[283] = 1;

        $r4[284] = 0;

        $r4[285] = 0;

        $r4[286] = 0;

        $r4[287] = 0;

        $r4[288] = 0;

        $r4[289] = 9;

        $r4[290] = 9;

        $r4[291] = 1;

        $r4[292] = 1;

        $r4[293] = 1;

        $r4[294] = 1;

        $r4[295] = 1;

        $r4[296] = 1;

        $r4[297] = 1;

        $r4[298] = 1;

        $r4[299] = 0;

        $r4[300] = 0;

        $r4[301] = 0;

        $r4[302] = 0;

        $r4[303] = 1;

        $r4[304] = 1;

        $r4[305] = 0;

        $r4[306] = 0;

        $r4[307] = 0;

        $r4[308] = 0;

        $r4[309] = 9;

        $r4[310] = 9;

        $r4[311] = 9;

        $r4[312] = 0;

        $r4[313] = 0;

        $r4[314] = 3;

        $r4[315] = 3;

        $r4[316] = 0;

        $r4[317] = 0;

        $r4[318] = 0;

        $r4[319] = 1;

        $r4[320] = 1;

        $r4[321] = 9;

        $r4[322] = 9;

        $r4[323] = 0;

        $r4[324] = 0;

        $r4[325] = 0;

        $r4[326] = 0;

        $r4[327] = 0;

        $r4[328] = 0;

        $r4[329] = 0;

        $r4[330] = 1;

        $r4[331] = 1;

        $r4[332] = 1;

        $r4[333] = 1;

        $r4[334] = 1;

        $r4[335] = 1;

        $r4[336] = 1;

        $r4[337] = 0;

        $r4[338] = 0;

        $r4[339] = 0;

        $r4[340] = 0;

        $r4[341] = 3;

        $r4[342] = 3;

        $r4[343] = 0;

        $r4[344] = 0;

        $r4[345] = 0;

        $r4[346] = 0;

        $r4[347] = 9;

        $r4[348] = 9;

        $r4[349] = 13;

        $r4[350] = 13;

        $r4[351] = 0;

        $r4[352] = 0;

        $r4[353] = 0;

        $r4[354] = 1;

        $r4[355] = 9;

        $r4[356] = 9;

        $r4[357] = 0;

        $r4[358] = 0;

        $r4[359] = 0;

        $r4[360] = 1;

        $r4[361] = 9;

        $r4[362] = 1;

        $r4[363] = 1;

        $r4[364] = 1;

        $r4[365] = 1;

        $r4[366] = 1;

        $r4[367] = 1;

        $r4[368] = 1;

        $r4[369] = 0;

        $r4[370] = 0;

        $r4[371] = 0;

        $r4[372] = 0;

        $r4[373] = 13;

        $r4[374] = 0;

        $r4[375] = 0;

        $r4[376] = 0;

        $r4[377] = 0;

        $r4[378] = 9;

        $r4[379] = 0;

        $r4[380] = 0;

        $r4[381] = 0;

        $r4[382] = 1;

        $r4[383] = 0;

        $r4[384] = 0;

        $r4[385] = 9;

        $r4[386] = 0;

        $r4[387] = 0;

        $r4[388] = 9;

        $r4[389] = 1;

        $r4[390] = 1;

        $r4[391] = 1;

        $r4[392] = 1;

        $r4[393] = 1;

        $r4[394] = 0;

        $r4[395] = 0;

        $r4[396] = 9;

        $r4[397] = 0;

        $r4[398] = 0;

        $r4[399] = 0;

        $r4[400] = 0;

        $r4[401] = 0;

        $r4[402] = 0;

        $r4[403] = 0;

        $r4[404] = 1;

        $r4[405] = 9;

        $r4[406] = 9;

        $r4[407] = 0;

        $r4[408] = 1;

        $r4[409] = 0;

        $r4[410] = 1;

        $r4[411] = 1;

        $r4[412] = 0;

        $r4[413] = 0;

        $r4[414] = 9;

        $r4[415] = 0;

        $r4[416] = 9;

        $r4[417] = 0;

        $r4[418] = 0;

        $r4[419] = 9;

        $r4[420] = 0;

        $r4[421] = 9;

        $r4[422] = 9;

        $r4[423] = 9;

        $r4[424] = 1;

        $r4[425] = 9;

        $r4[426] = 0;

        $r4[427] = 9;

        $r4[428] = 0;

        $r4[429] = 9;

        $r4[430] = 1;

        $r4[431] = 9;

        $r4[432] = 9;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: byte[] YY_ATTRIBUTE> = $r4;

        staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void calcAsciiTables()>();

        $r5 = newarray (char)[200];

        $r5[0] = 256;

        $r5[1] = 308;

        $r5[2] = 321;

        $r5[3] = 330;

        $r5[4] = 384;

        $r5[5] = 461;

        $r5[6] = 500;

        $r5[7] = 506;

        $r5[8] = 592;

        $r5[9] = 699;

        $r5[10] = 902;

        $r5[11] = 904;

        $r5[12] = 908;

        $r5[13] = 910;

        $r5[14] = 931;

        $r5[15] = 976;

        $r5[16] = 986;

        $r5[17] = 988;

        $r5[18] = 990;

        $r5[19] = 992;

        $r5[20] = 994;

        $r5[21] = 1025;

        $r5[22] = 1038;

        $r5[23] = 1105;

        $r5[24] = 1118;

        $r5[25] = 1168;

        $r5[26] = 1223;

        $r5[27] = 1227;

        $r5[28] = 1232;

        $r5[29] = 1262;

        $r5[30] = 1272;

        $r5[31] = 1329;

        $r5[32] = 1369;

        $r5[33] = 1377;

        $r5[34] = 1488;

        $r5[35] = 1520;

        $r5[36] = 1569;

        $r5[37] = 1601;

        $r5[38] = 1649;

        $r5[39] = 1722;

        $r5[40] = 1728;

        $r5[41] = 1744;

        $r5[42] = 1749;

        $r5[43] = 1765;

        $r5[44] = 2309;

        $r5[45] = 2365;

        $r5[46] = 2392;

        $r5[47] = 2437;

        $r5[48] = 2447;

        $r5[49] = 2451;

        $r5[50] = 2474;

        $r5[51] = 2482;

        $r5[52] = 2486;

        $r5[53] = 2524;

        $r5[54] = 2527;

        $r5[55] = 2544;

        $r5[56] = 2565;

        $r5[57] = 2575;

        $r5[58] = 2579;

        $r5[59] = 2602;

        $r5[60] = 2610;

        $r5[61] = 2613;

        $r5[62] = 2616;

        $r5[63] = 2649;

        $r5[64] = 2654;

        $r5[65] = 2674;

        $r5[66] = 2693;

        $r5[67] = 2701;

        $r5[68] = 2703;

        $r5[69] = 2707;

        $r5[70] = 2730;

        $r5[71] = 2738;

        $r5[72] = 2741;

        $r5[73] = 2749;

        $r5[74] = 2784;

        $r5[75] = 2821;

        $r5[76] = 2831;

        $r5[77] = 2835;

        $r5[78] = 2858;

        $r5[79] = 2866;

        $r5[80] = 2870;

        $r5[81] = 2877;

        $r5[82] = 2908;

        $r5[83] = 2911;

        $r5[84] = 2949;

        $r5[85] = 2958;

        $r5[86] = 2962;

        $r5[87] = 2969;

        $r5[88] = 2972;

        $r5[89] = 2974;

        $r5[90] = 2979;

        $r5[91] = 2984;

        $r5[92] = 2990;

        $r5[93] = 2999;

        $r5[94] = 3077;

        $r5[95] = 3086;

        $r5[96] = 3090;

        $r5[97] = 3114;

        $r5[98] = 3125;

        $r5[99] = 3168;

        $r5[100] = 3205;

        $r5[101] = 3214;

        $r5[102] = 3218;

        $r5[103] = 3242;

        $r5[104] = 3253;

        $r5[105] = 3294;

        $r5[106] = 3296;

        $r5[107] = 3333;

        $r5[108] = 3342;

        $r5[109] = 3346;

        $r5[110] = 3370;

        $r5[111] = 3424;

        $r5[112] = 3585;

        $r5[113] = 3632;

        $r5[114] = 3634;

        $r5[115] = 3648;

        $r5[116] = 3713;

        $r5[117] = 3716;

        $r5[118] = 3719;

        $r5[119] = 3722;

        $r5[120] = 3725;

        $r5[121] = 3732;

        $r5[122] = 3737;

        $r5[123] = 3745;

        $r5[124] = 3749;

        $r5[125] = 3751;

        $r5[126] = 3754;

        $r5[127] = 3757;

        $r5[128] = 3760;

        $r5[129] = 3762;

        $r5[130] = 3773;

        $r5[131] = 3776;

        $r5[132] = 3904;

        $r5[133] = 3913;

        $r5[134] = 4256;

        $r5[135] = 4304;

        $r5[136] = 4352;

        $r5[137] = 4354;

        $r5[138] = 4357;

        $r5[139] = 4361;

        $r5[140] = 4363;

        $r5[141] = 4366;

        $r5[142] = 4412;

        $r5[143] = 4414;

        $r5[144] = 4416;

        $r5[145] = 4428;

        $r5[146] = 4430;

        $r5[147] = 4432;

        $r5[148] = 4436;

        $r5[149] = 4441;

        $r5[150] = 4447;

        $r5[151] = 4451;

        $r5[152] = 4453;

        $r5[153] = 4455;

        $r5[154] = 4457;

        $r5[155] = 4461;

        $r5[156] = 4466;

        $r5[157] = 4469;

        $r5[158] = 4510;

        $r5[159] = 4520;

        $r5[160] = 4523;

        $r5[161] = 4526;

        $r5[162] = 4535;

        $r5[163] = 4538;

        $r5[164] = 4540;

        $r5[165] = 4587;

        $r5[166] = 4592;

        $r5[167] = 4601;

        $r5[168] = 7680;

        $r5[169] = 7840;

        $r5[170] = 7936;

        $r5[171] = 7960;

        $r5[172] = 7968;

        $r5[173] = 8008;

        $r5[174] = 8016;

        $r5[175] = 8025;

        $r5[176] = 8027;

        $r5[177] = 8029;

        $r5[178] = 8031;

        $r5[179] = 8064;

        $r5[180] = 8118;

        $r5[181] = 8126;

        $r5[182] = 8130;

        $r5[183] = 8134;

        $r5[184] = 8144;

        $r5[185] = 8150;

        $r5[186] = 8160;

        $r5[187] = 8178;

        $r5[188] = 8182;

        $r5[189] = 8486;

        $r5[190] = 8490;

        $r5[191] = 8494;

        $r5[192] = 8576;

        $r5[193] = 12295;

        $r5[194] = 12321;

        $r5[195] = 12353;

        $r5[196] = 12449;

        $r5[197] = 12549;

        $r5[198] = 19968;

        $r5[199] = 44032;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] LETTER_RANGE_START> = $r5;

        $r6 = newarray (char)[200];

        $r6[0] = 305;

        $r6[1] = 318;

        $r6[2] = 328;

        $r6[3] = 382;

        $r6[4] = 451;

        $r6[5] = 496;

        $r6[6] = 501;

        $r6[7] = 535;

        $r6[8] = 680;

        $r6[9] = 705;

        $r6[10] = 902;

        $r6[11] = 906;

        $r6[12] = 908;

        $r6[13] = 929;

        $r6[14] = 974;

        $r6[15] = 982;

        $r6[16] = 986;

        $r6[17] = 988;

        $r6[18] = 990;

        $r6[19] = 992;

        $r6[20] = 1011;

        $r6[21] = 1036;

        $r6[22] = 1103;

        $r6[23] = 1116;

        $r6[24] = 1153;

        $r6[25] = 1220;

        $r6[26] = 1224;

        $r6[27] = 1228;

        $r6[28] = 1259;

        $r6[29] = 1269;

        $r6[30] = 1273;

        $r6[31] = 1366;

        $r6[32] = 1369;

        $r6[33] = 1414;

        $r6[34] = 1514;

        $r6[35] = 1522;

        $r6[36] = 1594;

        $r6[37] = 1610;

        $r6[38] = 1719;

        $r6[39] = 1726;

        $r6[40] = 1742;

        $r6[41] = 1747;

        $r6[42] = 1749;

        $r6[43] = 1766;

        $r6[44] = 2361;

        $r6[45] = 2365;

        $r6[46] = 2401;

        $r6[47] = 2444;

        $r6[48] = 2448;

        $r6[49] = 2472;

        $r6[50] = 2480;

        $r6[51] = 2482;

        $r6[52] = 2489;

        $r6[53] = 2525;

        $r6[54] = 2529;

        $r6[55] = 2545;

        $r6[56] = 2570;

        $r6[57] = 2576;

        $r6[58] = 2600;

        $r6[59] = 2608;

        $r6[60] = 2611;

        $r6[61] = 2614;

        $r6[62] = 2617;

        $r6[63] = 2652;

        $r6[64] = 2654;

        $r6[65] = 2676;

        $r6[66] = 2699;

        $r6[67] = 2701;

        $r6[68] = 2705;

        $r6[69] = 2728;

        $r6[70] = 2736;

        $r6[71] = 2739;

        $r6[72] = 2745;

        $r6[73] = 2749;

        $r6[74] = 2784;

        $r6[75] = 2828;

        $r6[76] = 2832;

        $r6[77] = 2856;

        $r6[78] = 2864;

        $r6[79] = 2867;

        $r6[80] = 2873;

        $r6[81] = 2877;

        $r6[82] = 2909;

        $r6[83] = 2913;

        $r6[84] = 2954;

        $r6[85] = 2960;

        $r6[86] = 2965;

        $r6[87] = 2970;

        $r6[88] = 2972;

        $r6[89] = 2975;

        $r6[90] = 2980;

        $r6[91] = 2986;

        $r6[92] = 2997;

        $r6[93] = 3001;

        $r6[94] = 3084;

        $r6[95] = 3088;

        $r6[96] = 3112;

        $r6[97] = 3123;

        $r6[98] = 3129;

        $r6[99] = 3169;

        $r6[100] = 3212;

        $r6[101] = 3216;

        $r6[102] = 3240;

        $r6[103] = 3251;

        $r6[104] = 3257;

        $r6[105] = 3294;

        $r6[106] = 3297;

        $r6[107] = 3340;

        $r6[108] = 3344;

        $r6[109] = 3368;

        $r6[110] = 3385;

        $r6[111] = 3425;

        $r6[112] = 3630;

        $r6[113] = 3632;

        $r6[114] = 3635;

        $r6[115] = 3653;

        $r6[116] = 3714;

        $r6[117] = 3716;

        $r6[118] = 3720;

        $r6[119] = 3722;

        $r6[120] = 3725;

        $r6[121] = 3735;

        $r6[122] = 3743;

        $r6[123] = 3747;

        $r6[124] = 3749;

        $r6[125] = 3751;

        $r6[126] = 3755;

        $r6[127] = 3758;

        $r6[128] = 3760;

        $r6[129] = 3763;

        $r6[130] = 3773;

        $r6[131] = 3780;

        $r6[132] = 3911;

        $r6[133] = 3945;

        $r6[134] = 4293;

        $r6[135] = 4342;

        $r6[136] = 4352;

        $r6[137] = 4355;

        $r6[138] = 4359;

        $r6[139] = 4361;

        $r6[140] = 4364;

        $r6[141] = 4370;

        $r6[142] = 4412;

        $r6[143] = 4414;

        $r6[144] = 4416;

        $r6[145] = 4428;

        $r6[146] = 4430;

        $r6[147] = 4432;

        $r6[148] = 4437;

        $r6[149] = 4441;

        $r6[150] = 4449;

        $r6[151] = 4451;

        $r6[152] = 4453;

        $r6[153] = 4455;

        $r6[154] = 4457;

        $r6[155] = 4462;

        $r6[156] = 4467;

        $r6[157] = 4469;

        $r6[158] = 4510;

        $r6[159] = 4520;

        $r6[160] = 4523;

        $r6[161] = 4527;

        $r6[162] = 4536;

        $r6[163] = 4538;

        $r6[164] = 4546;

        $r6[165] = 4587;

        $r6[166] = 4592;

        $r6[167] = 4601;

        $r6[168] = 7835;

        $r6[169] = 7929;

        $r6[170] = 7957;

        $r6[171] = 7965;

        $r6[172] = 8005;

        $r6[173] = 8013;

        $r6[174] = 8023;

        $r6[175] = 8025;

        $r6[176] = 8027;

        $r6[177] = 8029;

        $r6[178] = 8061;

        $r6[179] = 8116;

        $r6[180] = 8124;

        $r6[181] = 8126;

        $r6[182] = 8132;

        $r6[183] = 8140;

        $r6[184] = 8147;

        $r6[185] = 8155;

        $r6[186] = 8172;

        $r6[187] = 8180;

        $r6[188] = 8188;

        $r6[189] = 8486;

        $r6[190] = 8491;

        $r6[191] = 8494;

        $r6[192] = 8578;

        $r6[193] = 12295;

        $r6[194] = 12329;

        $r6[195] = 12436;

        $r6[196] = 12538;

        $r6[197] = 12588;

        $r6[198] = 40869;

        $r6[199] = 55203;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] LETTER_RANGE_END> = $r6;

        $r7 = newarray (char)[117];

        $r7[0] = 720;

        $r7[1] = 768;

        $r7[2] = 864;

        $r7[3] = 903;

        $r7[4] = 1155;

        $r7[5] = 1425;

        $r7[6] = 1443;

        $r7[7] = 1467;

        $r7[8] = 1471;

        $r7[9] = 1473;

        $r7[10] = 1476;

        $r7[11] = 1600;

        $r7[12] = 1611;

        $r7[13] = 1632;

        $r7[14] = 1648;

        $r7[15] = 1750;

        $r7[16] = 1757;

        $r7[17] = 1760;

        $r7[18] = 1767;

        $r7[19] = 1770;

        $r7[20] = 1776;

        $r7[21] = 2305;

        $r7[22] = 2364;

        $r7[23] = 2366;

        $r7[24] = 2381;

        $r7[25] = 2385;

        $r7[26] = 2402;

        $r7[27] = 2406;

        $r7[28] = 2433;

        $r7[29] = 2492;

        $r7[30] = 2494;

        $r7[31] = 2495;

        $r7[32] = 2496;

        $r7[33] = 2503;

        $r7[34] = 2507;

        $r7[35] = 2519;

        $r7[36] = 2530;

        $r7[37] = 2534;

        $r7[38] = 2562;

        $r7[39] = 2620;

        $r7[40] = 2622;

        $r7[41] = 2623;

        $r7[42] = 2624;

        $r7[43] = 2631;

        $r7[44] = 2635;

        $r7[45] = 2662;

        $r7[46] = 2672;

        $r7[47] = 2689;

        $r7[48] = 2748;

        $r7[49] = 2750;

        $r7[50] = 2759;

        $r7[51] = 2763;

        $r7[52] = 2790;

        $r7[53] = 2817;

        $r7[54] = 2876;

        $r7[55] = 2878;

        $r7[56] = 2887;

        $r7[57] = 2891;

        $r7[58] = 2902;

        $r7[59] = 2918;

        $r7[60] = 2946;

        $r7[61] = 3006;

        $r7[62] = 3014;

        $r7[63] = 3018;

        $r7[64] = 3031;

        $r7[65] = 3047;

        $r7[66] = 3073;

        $r7[67] = 3134;

        $r7[68] = 3142;

        $r7[69] = 3146;

        $r7[70] = 3157;

        $r7[71] = 3174;

        $r7[72] = 3202;

        $r7[73] = 3262;

        $r7[74] = 3270;

        $r7[75] = 3274;

        $r7[76] = 3285;

        $r7[77] = 3302;

        $r7[78] = 3330;

        $r7[79] = 3390;

        $r7[80] = 3398;

        $r7[81] = 3402;

        $r7[82] = 3415;

        $r7[83] = 3430;

        $r7[84] = 3633;

        $r7[85] = 3636;

        $r7[86] = 3654;

        $r7[87] = 3664;

        $r7[88] = 3761;

        $r7[89] = 3764;

        $r7[90] = 3771;

        $r7[91] = 3782;

        $r7[92] = 3784;

        $r7[93] = 3792;

        $r7[94] = 3864;

        $r7[95] = 3872;

        $r7[96] = 3893;

        $r7[97] = 3895;

        $r7[98] = 3897;

        $r7[99] = 3902;

        $r7[100] = 3903;

        $r7[101] = 3953;

        $r7[102] = 3974;

        $r7[103] = 3984;

        $r7[104] = 3991;

        $r7[105] = 3993;

        $r7[106] = 4017;

        $r7[107] = 4025;

        $r7[108] = 8400;

        $r7[109] = 8417;

        $r7[110] = 12293;

        $r7[111] = 12330;

        $r7[112] = 12337;

        $r7[113] = 12441;

        $r7[114] = 12442;

        $r7[115] = 12445;

        $r7[116] = 12540;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] NON_LETTER_RANGE_START> = $r7;

        $r8 = newarray (char)[117];

        $r8[0] = 721;

        $r8[1] = 837;

        $r8[2] = 865;

        $r8[3] = 903;

        $r8[4] = 1158;

        $r8[5] = 1441;

        $r8[6] = 1465;

        $r8[7] = 1469;

        $r8[8] = 1471;

        $r8[9] = 1474;

        $r8[10] = 1476;

        $r8[11] = 1600;

        $r8[12] = 1618;

        $r8[13] = 1641;

        $r8[14] = 1648;

        $r8[15] = 1756;

        $r8[16] = 1759;

        $r8[17] = 1764;

        $r8[18] = 1768;

        $r8[19] = 1773;

        $r8[20] = 1785;

        $r8[21] = 2307;

        $r8[22] = 2364;

        $r8[23] = 2380;

        $r8[24] = 2381;

        $r8[25] = 2388;

        $r8[26] = 2403;

        $r8[27] = 2415;

        $r8[28] = 2435;

        $r8[29] = 2492;

        $r8[30] = 2494;

        $r8[31] = 2495;

        $r8[32] = 2500;

        $r8[33] = 2504;

        $r8[34] = 2509;

        $r8[35] = 2519;

        $r8[36] = 2531;

        $r8[37] = 2543;

        $r8[38] = 2562;

        $r8[39] = 2620;

        $r8[40] = 2622;

        $r8[41] = 2623;

        $r8[42] = 2626;

        $r8[43] = 2632;

        $r8[44] = 2637;

        $r8[45] = 2671;

        $r8[46] = 2673;

        $r8[47] = 2691;

        $r8[48] = 2748;

        $r8[49] = 2757;

        $r8[50] = 2761;

        $r8[51] = 2765;

        $r8[52] = 2799;

        $r8[53] = 2819;

        $r8[54] = 2876;

        $r8[55] = 2883;

        $r8[56] = 2888;

        $r8[57] = 2893;

        $r8[58] = 2903;

        $r8[59] = 2927;

        $r8[60] = 2947;

        $r8[61] = 3010;

        $r8[62] = 3016;

        $r8[63] = 3021;

        $r8[64] = 3031;

        $r8[65] = 3055;

        $r8[66] = 3075;

        $r8[67] = 3140;

        $r8[68] = 3144;

        $r8[69] = 3149;

        $r8[70] = 3158;

        $r8[71] = 3183;

        $r8[72] = 3203;

        $r8[73] = 3268;

        $r8[74] = 3272;

        $r8[75] = 3277;

        $r8[76] = 3286;

        $r8[77] = 3311;

        $r8[78] = 3331;

        $r8[79] = 3395;

        $r8[80] = 3400;

        $r8[81] = 3405;

        $r8[82] = 3415;

        $r8[83] = 3439;

        $r8[84] = 3633;

        $r8[85] = 3642;

        $r8[86] = 3662;

        $r8[87] = 3673;

        $r8[88] = 3761;

        $r8[89] = 3769;

        $r8[90] = 3772;

        $r8[91] = 3782;

        $r8[92] = 3789;

        $r8[93] = 3801;

        $r8[94] = 3865;

        $r8[95] = 3881;

        $r8[96] = 3893;

        $r8[97] = 3895;

        $r8[98] = 3897;

        $r8[99] = 3902;

        $r8[100] = 3903;

        $r8[101] = 3972;

        $r8[102] = 3979;

        $r8[103] = 3989;

        $r8[104] = 3991;

        $r8[105] = 4013;

        $r8[106] = 4023;

        $r8[107] = 4025;

        $r8[108] = 8412;

        $r8[109] = 8417;

        $r8[110] = 12293;

        $r8[111] = 12335;

        $r8[112] = 12341;

        $r8[113] = 12441;

        $r8[114] = 12442;

        $r8[115] = 12446;

        $r8[116] = 12542;

        <org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: char[] NON_LETTER_RANGE_END> = $r8;

        return;
    }
}
