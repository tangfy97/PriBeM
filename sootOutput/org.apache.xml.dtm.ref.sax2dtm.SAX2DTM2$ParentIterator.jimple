public final class org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ParentIterator extends org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase
{
    private int _nodeType;
    private final org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0;

    public void <init>(org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2)
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 r1;
        int $i1;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ParentIterator r0;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ParentIterator;

        r1 := @parameter0: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseIterators)>(r1);

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ParentIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0> = r1;

        $i1 = (int) -1;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ParentIterator: int _nodeType> = $i1;

        return;
    }

    public org.apache.xml.dtm.DTMAxisIterator setStartNode(int)
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 $r2, $r3, $r4;
        org.apache.xml.dtm.DTMAxisIterator $r1;
        int $i0, $i1, i2, $i4, $i6;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ParentIterator r0;
        boolean $z0;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ParentIterator;

        i2 := @parameter0: int;

        if i2 != 0 goto label1;

        $r4 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ParentIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        i2 = virtualinvoke $r4.<org.apache.xml.dtm.ref.DTMDefaultBase: int getDocument()>();

     label1:
        $z0 = r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: boolean _isRestartable>;

        if $z0 == 0 goto label4;

        r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int _startNode> = i2;

        $i4 = (int) -1;

        if i2 == $i4 goto label2;

        $r3 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ParentIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $r2 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ParentIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i0 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeIdentity(int)>(i2);

        $i1 = virtualinvoke $r3.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _parent2(int)>($i0);

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode> = $i1;

        goto label3;

     label2:
        $i6 = (int) -1;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode> = $i6;

     label3:
        $r1 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: org.apache.xml.dtm.DTMAxisIterator resetPosition()>();

        return $r1;

     label4:
        return r0;
    }

    public org.apache.xml.dtm.DTMAxisIterator setNodeType(int)
    {
        int i0;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ParentIterator r0;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ParentIterator;

        i0 := @parameter0: int;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ParentIterator: int _nodeType> = i0;

        return r0;
    }

    public int next()
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 $r1, $r2, $r3, $r4, $r5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i16, $i18, $i20, $i22, $i24, $i26;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ParentIterator r0;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ParentIterator;

        i0 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode>;

        $i14 = (int) -1;

        if i0 != $i14 goto label1;

        $i16 = (int) -1;

        return $i16;

     label1:
        $i1 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ParentIterator: int _nodeType>;

        $i18 = (int) -1;

        if $i1 != $i18 goto label2;

        $i20 = (int) -1;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode> = $i20;

        $r5 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ParentIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i11 = virtualinvoke $r5.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeHandle(int)>(i0);

        $i12 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int returnNode(int)>($i11);

        return $i12;

     label2:
        $i2 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ParentIterator: int _nodeType>;

        if $i2 < 14 goto label3;

        $i7 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ParentIterator: int _nodeType>;

        $r3 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ParentIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i8 = virtualinvoke $r3.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _exptype2(int)>(i0);

        if $i7 != $i8 goto label4;

        $i22 = (int) -1;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode> = $i22;

        $r4 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ParentIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i9 = virtualinvoke $r4.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeHandle(int)>(i0);

        $i10 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int returnNode(int)>($i9);

        return $i10;

     label3:
        $i3 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ParentIterator: int _nodeType>;

        $r1 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ParentIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i4 = virtualinvoke $r1.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _type2(int)>(i0);

        if $i3 != $i4 goto label4;

        $i24 = (int) -1;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$InternalAxisIteratorBase: int _currentNode> = $i24;

        $r2 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$ParentIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i5 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeHandle(int)>(i0);

        $i6 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int returnNode(int)>($i5);

        return $i6;

     label4:
        $i26 = (int) -1;

        return $i26;
    }
}
