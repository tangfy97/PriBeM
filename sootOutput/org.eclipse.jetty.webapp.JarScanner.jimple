public abstract class org.eclipse.jetty.webapp.JarScanner extends org.eclipse.jetty.util.PatternMatcher
{
    private static final org.eclipse.jetty.util.log.Logger LOG;

    public void <init>()
    {
        org.eclipse.jetty.webapp.JarScanner r0;

        r0 := @this: org.eclipse.jetty.webapp.JarScanner;

        specialinvoke r0.<org.eclipse.jetty.util.PatternMatcher: void <init>()>();

        return;
    }

    public abstract void processEntry(java.net.URI, java.util.jar.JarEntry);

    public void scan(java.util.regex.Pattern, java.net.URI[], boolean) throws java.lang.Exception
    {
        java.net.URI[] r2;
        java.util.regex.Pattern r1;
        org.eclipse.jetty.webapp.JarScanner r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.webapp.JarScanner;

        r1 := @parameter0: java.util.regex.Pattern;

        r2 := @parameter1: java.net.URI[];

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.eclipse.jetty.util.PatternMatcher: void match(java.util.regex.Pattern,java.net.URI[],boolean)>(r1, r2, z0);

        return;
    }

    public void scan(java.util.regex.Pattern, java.lang.ClassLoader, boolean, boolean) throws java.lang.Exception
    {
        java.net.URL r5;
        java.net.URL[] $r1;
        java.net.URLClassLoader $r0;
        java.net.URI[] r2;
        int $i0, i1, $i2, i3, i4;
        java.net.URI $r6;
        boolean $z0, z1, z2;
        java.util.regex.Pattern r4;
        java.lang.ClassLoader r7;
        org.eclipse.jetty.webapp.JarScanner r3;

        r3 := @this: org.eclipse.jetty.webapp.JarScanner;

        r4 := @parameter0: java.util.regex.Pattern;

        r7 := @parameter1: java.lang.ClassLoader;

        z2 := @parameter2: boolean;

        z1 := @parameter3: boolean;

     label1:
        if r7 == null goto label6;

        $z0 = r7 instanceof java.net.URLClassLoader;

        if $z0 == 0 goto label4;

        $r0 = (java.net.URLClassLoader) r7;

        $r1 = virtualinvoke $r0.<java.net.URLClassLoader: java.net.URL[] getURLs()>();

        if $r1 == null goto label4;

        $i0 = lengthof $r1;

        r2 = newarray (java.net.URI)[$i0];

        i3 = 0;

        i1 = lengthof $r1;

        i4 = 0;

     label2:
        if i4 >= i1 goto label3;

        r5 = $r1[i4];

        $i2 = i3;

        i3 = i3 + 1;

        $r6 = virtualinvoke r5.<java.net.URL: java.net.URI toURI()>();

        r2[$i2] = $r6;

        i4 = i4 + 1;

        goto label2;

     label3:
        virtualinvoke r3.<org.eclipse.jetty.webapp.JarScanner: void scan(java.util.regex.Pattern,java.net.URI[],boolean)>(r4, r2, z2);

     label4:
        if z1 == 0 goto label5;

        r7 = virtualinvoke r7.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();

        goto label1;

     label5:
        r7 = null;

        goto label1;

     label6:
        return;
    }

    public void matched(java.net.URI) throws java.lang.Exception
    {
        java.lang.Throwable $r9;
        java.lang.Object[] $r0;
        java.util.jar.JarEntry r10;
        org.eclipse.jetty.util.resource.Resource $r5;
        java.util.jar.JarInputStream $r7;
        java.net.URI r1;
        org.eclipse.jetty.util.log.Logger $r2;
        java.lang.String $r3, $r4;
        org.eclipse.jetty.webapp.JarScanner r8;
        boolean $z0;
        java.io.InputStream $r6;

        r8 := @this: org.eclipse.jetty.webapp.JarScanner;

        r1 := @parameter0: java.net.URI;

        $r2 = <org.eclipse.jetty.webapp.JarScanner: org.eclipse.jetty.util.log.Logger LOG>;

        $r0 = newarray (java.lang.Object)[1];

        $r0[0] = r1;

        interfaceinvoke $r2.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("Search of {}", $r0);

        $r3 = virtualinvoke r1.<java.net.URI: java.lang.String toString()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean endsWith(java.lang.String)>(".jar");

        if $z0 == 0 goto label7;

        $r5 = staticinvoke <org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource newResource(java.net.URI)>(r1);

        $r6 = virtualinvoke $r5.<org.eclipse.jetty.util.resource.Resource: java.io.InputStream getInputStream()>();

        if $r6 != null goto label1;

        return;

     label1:
        $r7 = new java.util.jar.JarInputStream;

        specialinvoke $r7.<java.util.jar.JarInputStream: void <init>(java.io.InputStream)>($r6);

     label2:
        r10 = virtualinvoke $r7.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>();

     label3:
        if r10 == null goto label4;

        virtualinvoke r8.<org.eclipse.jetty.webapp.JarScanner: void processEntry(java.net.URI,java.util.jar.JarEntry)>(r1, r10);

        r10 = virtualinvoke $r7.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>();

        goto label3;

     label4:
        virtualinvoke $r7.<java.util.jar.JarInputStream: void close()>();

        goto label7;

     label5:
        $r9 := @caughtexception;

     label6:
        virtualinvoke $r7.<java.util.jar.JarInputStream: void close()>();

        throw $r9;

     label7:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/webapp/JarScanner;");

        <org.eclipse.jetty.webapp.JarScanner: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
