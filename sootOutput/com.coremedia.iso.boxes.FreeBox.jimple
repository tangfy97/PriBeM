public class com.coremedia.iso.boxes.FreeBox extends java.lang.Object implements com.coremedia.iso.boxes.Box
{
    public static final java.lang.String TYPE;
    java.nio.ByteBuffer data;
    java.util.List replacers;
    private com.coremedia.iso.boxes.Container parent;
    private long offset;
    static final boolean $assertionsDisabled;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <com.coremedia.iso.boxes.FreeBox: java.lang.String TYPE> = "free";

        $r0 = class "Lcom/coremedia/iso/boxes/FreeBox;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.coremedia.iso.boxes.FreeBox: boolean $assertionsDisabled> = $z1;

        return;
    }

    public void <init>()
    {
        byte[] $r2;
        com.coremedia.iso.boxes.FreeBox r0;
        java.util.LinkedList $r1;
        java.nio.ByteBuffer $r3;

        r0 := @this: com.coremedia.iso.boxes.FreeBox;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<com.coremedia.iso.boxes.FreeBox: java.util.List replacers> = $r1;

        $r2 = newarray (byte)[0];

        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r2);

        r0.<com.coremedia.iso.boxes.FreeBox: java.nio.ByteBuffer data> = $r3;

        return;
    }

    public void <init>(int)
    {
        com.coremedia.iso.boxes.FreeBox r0;
        int i0;
        java.util.LinkedList $r1;
        java.nio.ByteBuffer $r2;

        r0 := @this: com.coremedia.iso.boxes.FreeBox;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<com.coremedia.iso.boxes.FreeBox: java.util.List replacers> = $r1;

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i0);

        r0.<com.coremedia.iso.boxes.FreeBox: java.nio.ByteBuffer data> = $r2;

        return;
    }

    public long getOffset()
    {
        long $l0;
        com.coremedia.iso.boxes.FreeBox r0;

        r0 := @this: com.coremedia.iso.boxes.FreeBox;

        $l0 = r0.<com.coremedia.iso.boxes.FreeBox: long offset>;

        return $l0;
    }

    public java.nio.ByteBuffer getData()
    {
        com.coremedia.iso.boxes.FreeBox r0;
        java.nio.Buffer $r4;
        java.nio.ByteBuffer $r1, $r2, $r3, $r5;

        r0 := @this: com.coremedia.iso.boxes.FreeBox;

        $r1 = r0.<com.coremedia.iso.boxes.FreeBox: java.nio.ByteBuffer data>;

        if $r1 == null goto label1;

        $r2 = r0.<com.coremedia.iso.boxes.FreeBox: java.nio.ByteBuffer data>;

        $r3 = virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>();

        $r4 = virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r5 = (java.nio.ByteBuffer) $r4;

        return $r5;

     label1:
        return null;
    }

    public void setData(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.FreeBox r0;
        java.nio.ByteBuffer r1;

        r0 := @this: com.coremedia.iso.boxes.FreeBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        r0.<com.coremedia.iso.boxes.FreeBox: java.nio.ByteBuffer data> = r1;

        return;
    }

    public void getBox(java.nio.channels.WritableByteChannel) throws java.io.IOException
    {
        byte[] $r8;
        long $l2;
        java.nio.ByteBuffer $r5, $r6, $r9, $r10, $r11;
        int $i0, $i1;
        java.lang.String $r7;
        boolean $z0;
        java.util.Iterator $r2;
        com.coremedia.iso.boxes.FreeBox r0;
        com.coremedia.iso.boxes.Box r12;
        java.util.List $r1;
        java.nio.channels.WritableByteChannel r4;
        java.lang.Object $r3;

        r0 := @this: com.coremedia.iso.boxes.FreeBox;

        r4 := @parameter0: java.nio.channels.WritableByteChannel;

        $r1 = r0.<com.coremedia.iso.boxes.FreeBox: java.util.List replacers>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.coremedia.iso.boxes.Box) $r3;

        interfaceinvoke r12.<com.coremedia.iso.boxes.Box: void getBox(java.nio.channels.WritableByteChannel)>(r4);

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(8);

        $r6 = r0.<com.coremedia.iso.boxes.FreeBox: java.nio.ByteBuffer data>;

        $i0 = virtualinvoke $r6.<java.nio.ByteBuffer: int limit()>();

        $i1 = 8 + $i0;

        $l2 = (long) $i1;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>($r5, $l2);

        $r7 = "free";

        $r8 = virtualinvoke $r7.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r8);

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        interfaceinvoke r4.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>($r5);

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r9 = r0.<com.coremedia.iso.boxes.FreeBox: java.nio.ByteBuffer data>;

        virtualinvoke $r9.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r10 = r0.<com.coremedia.iso.boxes.FreeBox: java.nio.ByteBuffer data>;

        interfaceinvoke r4.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>($r10);

        $r11 = r0.<com.coremedia.iso.boxes.FreeBox: java.nio.ByteBuffer data>;

        virtualinvoke $r11.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        return;
    }

    public com.coremedia.iso.boxes.Container getParent()
    {
        com.coremedia.iso.boxes.Container $r1;
        com.coremedia.iso.boxes.FreeBox r0;

        r0 := @this: com.coremedia.iso.boxes.FreeBox;

        $r1 = r0.<com.coremedia.iso.boxes.FreeBox: com.coremedia.iso.boxes.Container parent>;

        return $r1;
    }

    public void setParent(com.coremedia.iso.boxes.Container)
    {
        com.coremedia.iso.boxes.Container r1;
        com.coremedia.iso.boxes.FreeBox r0;

        r0 := @this: com.coremedia.iso.boxes.FreeBox;

        r1 := @parameter0: com.coremedia.iso.boxes.Container;

        r0.<com.coremedia.iso.boxes.FreeBox: com.coremedia.iso.boxes.Container parent> = r1;

        return;
    }

    public long getSize()
    {
        java.util.Iterator $r2;
        com.coremedia.iso.boxes.FreeBox r0;
        com.coremedia.iso.boxes.Box r4;
        long $l0, $l2, l3, l4;
        java.nio.ByteBuffer $r5;
        java.util.List $r1;
        int $i1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.coremedia.iso.boxes.FreeBox;

        l3 = 8L;

        $r1 = r0.<com.coremedia.iso.boxes.FreeBox: java.util.List replacers>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.coremedia.iso.boxes.Box) $r3;

        $l0 = interfaceinvoke r4.<com.coremedia.iso.boxes.Box: long getSize()>();

        l3 = l3 + $l0;

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r5 = r0.<com.coremedia.iso.boxes.FreeBox: java.nio.ByteBuffer data>;

        $i1 = virtualinvoke $r5.<java.nio.ByteBuffer: int limit()>();

        $l2 = (long) $i1;

        l4 = l3 + $l2;

        return l4;
    }

    public java.lang.String getType()
    {
        com.coremedia.iso.boxes.FreeBox r0;

        r0 := @this: com.coremedia.iso.boxes.FreeBox;

        return "free";
    }

    public void parse(com.googlecode.mp4parser.DataSource, java.nio.ByteBuffer, long, com.coremedia.iso.BoxParser) throws java.io.IOException
    {
        long $l0, $l2, $l3, l4, $l8, $l9, $l10;
        java.lang.AssertionError $r8;
        java.nio.ByteBuffer r2, $r3, $r4, $r6;
        byte $b5, $b7;
        int $i1, $i6, $i11, $i12;
        boolean $z0;
        com.googlecode.mp4parser.DataSource r1;
        com.coremedia.iso.boxes.FreeBox r0;
        com.coremedia.iso.BoxParser r7;

        r0 := @this: com.coremedia.iso.boxes.FreeBox;

        r1 := @parameter0: com.googlecode.mp4parser.DataSource;

        r2 := @parameter1: java.nio.ByteBuffer;

        l4 := @parameter2: long;

        r7 := @parameter3: com.coremedia.iso.BoxParser;

        $l0 = interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: long position()>();

        $i1 = virtualinvoke r2.<java.nio.ByteBuffer: int remaining()>();

        $l2 = (long) $i1;

        $l3 = $l0 - $l2;

        r0.<com.coremedia.iso.boxes.FreeBox: long offset> = $l3;

        $b5 = l4 cmp 1048576L;

        $i11 = (int) $b5;

        if $i11 <= 0 goto label1;

        $l8 = interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: long position()>();

        $r6 = interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: java.nio.ByteBuffer map(long,long)>($l8, l4);

        r0.<com.coremedia.iso.boxes.FreeBox: java.nio.ByteBuffer data> = $r6;

        $l9 = interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: long position()>();

        $l10 = $l9 + l4;

        interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: void position(long)>($l10);

        goto label3;

     label1:
        $z0 = <com.coremedia.iso.boxes.FreeBox: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $b7 = l4 cmp 2147483647L;

        $i12 = (int) $b7;

        if $i12 < 0 goto label2;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label2:
        $i6 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>(l4);

        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i6);

        r0.<com.coremedia.iso.boxes.FreeBox: java.nio.ByteBuffer data> = $r3;

        $r4 = r0.<com.coremedia.iso.boxes.FreeBox: java.nio.ByteBuffer data>;

        interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: int read(java.nio.ByteBuffer)>($r4);

     label3:
        return;
    }

    public void addAndReplace(com.coremedia.iso.boxes.Box)
    {
        com.coremedia.iso.boxes.FreeBox r0;
        com.coremedia.iso.boxes.Box r1;
        long $l0;
        java.nio.ByteBuffer $r2, $r3, $r4;
        java.util.List $r5;
        int $i1;

        r0 := @this: com.coremedia.iso.boxes.FreeBox;

        r1 := @parameter0: com.coremedia.iso.boxes.Box;

        $r2 = r0.<com.coremedia.iso.boxes.FreeBox: java.nio.ByteBuffer data>;

        $l0 = interfaceinvoke r1.<com.coremedia.iso.boxes.Box: long getSize()>();

        $i1 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l0);

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i1);

        $r3 = r0.<com.coremedia.iso.boxes.FreeBox: java.nio.ByteBuffer data>;

        $r4 = virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();

        r0.<com.coremedia.iso.boxes.FreeBox: java.nio.ByteBuffer data> = $r4;

        $r5 = r0.<com.coremedia.iso.boxes.FreeBox: java.util.List replacers>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        com.coremedia.iso.boxes.FreeBox r0, r4;
        java.nio.ByteBuffer $r5, $r6, $r7, $r8;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        boolean $z0;

        r0 := @this: com.coremedia.iso.boxes.FreeBox;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

     label2:
        return 0;

     label3:
        r4 = (com.coremedia.iso.boxes.FreeBox) r1;

        $r5 = virtualinvoke r0.<com.coremedia.iso.boxes.FreeBox: java.nio.ByteBuffer getData()>();

        if $r5 == null goto label4;

        $r7 = virtualinvoke r0.<com.coremedia.iso.boxes.FreeBox: java.nio.ByteBuffer getData()>();

        $r8 = virtualinvoke r4.<com.coremedia.iso.boxes.FreeBox: java.nio.ByteBuffer getData()>();

        $z0 = virtualinvoke $r7.<java.nio.ByteBuffer: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label6;

        goto label5;

     label4:
        $r6 = virtualinvoke r4.<com.coremedia.iso.boxes.FreeBox: java.nio.ByteBuffer getData()>();

        if $r6 == null goto label6;

     label5:
        return 0;

     label6:
        return 1;
    }

    public int hashCode()
    {
        com.coremedia.iso.boxes.FreeBox r0;
        int $i0;
        java.nio.ByteBuffer $r1, $r2;

        r0 := @this: com.coremedia.iso.boxes.FreeBox;

        $r1 = r0.<com.coremedia.iso.boxes.FreeBox: java.nio.ByteBuffer data>;

        if $r1 == null goto label1;

        $r2 = r0.<com.coremedia.iso.boxes.FreeBox: java.nio.ByteBuffer data>;

        $i0 = virtualinvoke $r2.<java.nio.ByteBuffer: int hashCode()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }
}
