final class com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2 extends java.lang.Object implements com.google.gxp.compiler.base.CallableVisitor
{
    final java.lang.StringBuilder val$sb;
    final com.google.gxp.compiler.base.Callable val$callee;
    final com.google.gxp.compiler.base.ValidatedCall val$call;
    final com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor this$1;

    void <init>(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor, java.lang.StringBuilder, com.google.gxp.compiler.base.Callable, com.google.gxp.compiler.base.ValidatedCall)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor r1;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2 r0;
        java.lang.StringBuilder r2;
        com.google.gxp.compiler.base.ValidatedCall r4;
        com.google.gxp.compiler.base.Callable r3;

        r0 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2;

        r1 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor;

        r2 := @parameter1: java.lang.StringBuilder;

        r3 := @parameter2: com.google.gxp.compiler.base.Callable;

        r4 := @parameter3: com.google.gxp.compiler.base.ValidatedCall;

        r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor this$1> = r1;

        r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2: java.lang.StringBuilder val$sb> = r2;

        r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2: com.google.gxp.compiler.base.Callable val$callee> = r3;

        r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2: com.google.gxp.compiler.base.ValidatedCall val$call> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Void visitCallable(com.google.gxp.compiler.base.Callable)
    {
        com.google.gxp.compiler.base.TemplateName$FullyQualified $r3;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2 r0;
        java.util.Map $r11;
        java.lang.String $r4, $r13;
        com.google.gxp.compiler.base.Callable $r1, $r10, r15;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker $r9;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor $r6;
        java.util.List $r12;
        java.lang.StringBuilder $r2, $r5, $r8, $r14;
        com.google.gxp.compiler.base.ValidatedCall $r7;

        r0 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2;

        r15 := @parameter0: com.google.gxp.compiler.base.Callable;

        $r2 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2: java.lang.StringBuilder val$sb>;

        $r1 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2: com.google.gxp.compiler.base.Callable val$callee>;

        $r3 = interfaceinvoke $r1.<com.google.gxp.compiler.base.Callable: com.google.gxp.compiler.base.TemplateName$FullyQualified getName()>();

        $r4 = virtualinvoke $r3.<com.google.gxp.compiler.base.TemplateName$FullyQualified: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2: java.lang.StringBuilder val$sb>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".getGxpClosure(");

        $r8 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2: java.lang.StringBuilder val$sb>;

        $r6 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor this$1>;

        $r9 = $r6.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker this$0>;

        $r10 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2: com.google.gxp.compiler.base.Callable val$callee>;

        $r7 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2: com.google.gxp.compiler.base.ValidatedCall val$call>;

        $r11 = virtualinvoke $r7.<com.google.gxp.compiler.base.ValidatedCall: java.util.Map getAttributes()>();

        $r12 = staticinvoke <com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.util.List access$3900(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker,com.google.gxp.compiler.base.Callable,java.util.Map)>($r9, $r10, $r11);

        $r13 = staticinvoke <com.google.gxp.com.google.common.base.Join: java.lang.String join(java.lang.String,java.lang.Iterable)>(", ", $r12);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r14 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2: java.lang.StringBuilder val$sb>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        return null;
    }

    public java.lang.Void visitInstanceCallable(com.google.gxp.compiler.base.InstanceCallable)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor $r1;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker $r3;
        com.google.gxp.compiler.base.InstanceCallable r6;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2 r0;
        com.google.gxp.compiler.base.ValidatedCall $r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        r0 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2;

        r6 := @parameter0: com.google.gxp.compiler.base.InstanceCallable;

        $r4 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2: java.lang.StringBuilder val$sb>;

        $r1 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor this$1>;

        $r3 = $r1.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker this$0>;

        $r2 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2: com.google.gxp.compiler.base.ValidatedCall val$call>;

        $r5 = staticinvoke <com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String access$4700(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker,com.google.gxp.compiler.base.Expression)>($r3, $r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        return null;
    }

    public volatile java.lang.Object visitInstanceCallable(com.google.gxp.compiler.base.InstanceCallable)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2 r0;
        java.lang.Void $r2;
        com.google.gxp.compiler.base.InstanceCallable r1;

        r0 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2;

        r1 := @parameter0: com.google.gxp.compiler.base.InstanceCallable;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2: java.lang.Void visitInstanceCallable(com.google.gxp.compiler.base.InstanceCallable)>(r1);

        return $r2;
    }

    public volatile java.lang.Object visitCallable(com.google.gxp.compiler.base.Callable)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2 r0;
        java.lang.Void $r2;
        com.google.gxp.compiler.base.Callable r1;

        r0 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2;

        r1 := @parameter0: com.google.gxp.compiler.base.Callable;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$2: java.lang.Void visitCallable(com.google.gxp.compiler.base.Callable)>(r1);

        return $r2;
    }
}
