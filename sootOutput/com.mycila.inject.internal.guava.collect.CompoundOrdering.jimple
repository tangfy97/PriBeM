final class com.mycila.inject.internal.guava.collect.CompoundOrdering extends com.mycila.inject.internal.guava.collect.Ordering implements java.io.Serializable
{
    final com.mycila.inject.internal.guava.collect.ImmutableList comparators;
    private static final long serialVersionUID;

    void <init>(java.util.Comparator, java.util.Comparator)
    {
        com.mycila.inject.internal.guava.collect.CompoundOrdering r0;
        java.util.Comparator r1, r2;
        com.mycila.inject.internal.guava.collect.ImmutableList $r3;

        r0 := @this: com.mycila.inject.internal.guava.collect.CompoundOrdering;

        r1 := @parameter0: java.util.Comparator;

        r2 := @parameter1: java.util.Comparator;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.Ordering: void <init>()>();

        $r3 = staticinvoke <com.mycila.inject.internal.guava.collect.ImmutableList: com.mycila.inject.internal.guava.collect.ImmutableList of(java.lang.Object,java.lang.Object)>(r1, r2);

        r0.<com.mycila.inject.internal.guava.collect.CompoundOrdering: com.mycila.inject.internal.guava.collect.ImmutableList comparators> = $r3;

        return;
    }

    void <init>(java.lang.Iterable)
    {
        com.mycila.inject.internal.guava.collect.ImmutableList $r2;
        java.lang.Iterable r1;
        com.mycila.inject.internal.guava.collect.CompoundOrdering r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.CompoundOrdering;

        r1 := @parameter0: java.lang.Iterable;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.Ordering: void <init>()>();

        $r2 = staticinvoke <com.mycila.inject.internal.guava.collect.ImmutableList: com.mycila.inject.internal.guava.collect.ImmutableList copyOf(java.lang.Iterable)>(r1);

        r0.<com.mycila.inject.internal.guava.collect.CompoundOrdering: com.mycila.inject.internal.guava.collect.ImmutableList comparators> = $r2;

        return;
    }

    void <init>(java.util.List, java.util.Comparator)
    {
        java.util.List r2;
        com.mycila.inject.internal.guava.collect.CompoundOrdering r0;
        java.util.Comparator r4;
        com.mycila.inject.internal.guava.collect.ImmutableList $r6;
        com.mycila.inject.internal.guava.collect.ImmutableList$Builder $r1, $r3, $r5;

        r0 := @this: com.mycila.inject.internal.guava.collect.CompoundOrdering;

        r2 := @parameter0: java.util.List;

        r4 := @parameter1: java.util.Comparator;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.Ordering: void <init>()>();

        $r1 = new com.mycila.inject.internal.guava.collect.ImmutableList$Builder;

        specialinvoke $r1.<com.mycila.inject.internal.guava.collect.ImmutableList$Builder: void <init>()>();

        $r3 = virtualinvoke $r1.<com.mycila.inject.internal.guava.collect.ImmutableList$Builder: com.mycila.inject.internal.guava.collect.ImmutableList$Builder addAll(java.lang.Iterable)>(r2);

        $r5 = virtualinvoke $r3.<com.mycila.inject.internal.guava.collect.ImmutableList$Builder: com.mycila.inject.internal.guava.collect.ImmutableList$Builder add(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r5.<com.mycila.inject.internal.guava.collect.ImmutableList$Builder: com.mycila.inject.internal.guava.collect.ImmutableList build()>();

        r0.<com.mycila.inject.internal.guava.collect.CompoundOrdering: com.mycila.inject.internal.guava.collect.ImmutableList comparators> = $r6;

        return;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        java.util.Iterator $r2;
        com.mycila.inject.internal.guava.collect.CompoundOrdering r0;
        com.mycila.inject.internal.guava.collect.ImmutableList $r1;
        int $i0;
        java.lang.Object $r3, r5, r6;
        java.util.Comparator r4;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.CompoundOrdering;

        r5 := @parameter0: java.lang.Object;

        r6 := @parameter1: java.lang.Object;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.CompoundOrdering: com.mycila.inject.internal.guava.collect.ImmutableList comparators>;

        $r2 = virtualinvoke $r1.<com.mycila.inject.internal.guava.collect.ImmutableList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Comparator) $r3;

        $i0 = interfaceinvoke r4.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r5, r6);

        if $i0 == 0 goto label2;

        return $i0;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.CompoundOrdering r1, r2;
        java.lang.Object r0;
        com.mycila.inject.internal.guava.collect.ImmutableList $r3, $r4;
        boolean $z0, $z1;

        r1 := @this: com.mycila.inject.internal.guava.collect.CompoundOrdering;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof com.mycila.inject.internal.guava.collect.CompoundOrdering;

        if $z0 == 0 goto label2;

        r2 = (com.mycila.inject.internal.guava.collect.CompoundOrdering) r0;

        $r4 = r1.<com.mycila.inject.internal.guava.collect.CompoundOrdering: com.mycila.inject.internal.guava.collect.ImmutableList comparators>;

        $r3 = r2.<com.mycila.inject.internal.guava.collect.CompoundOrdering: com.mycila.inject.internal.guava.collect.ImmutableList comparators>;

        $z1 = virtualinvoke $r4.<com.mycila.inject.internal.guava.collect.ImmutableList: boolean equals(java.lang.Object)>($r3);

        return $z1;

     label2:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        com.mycila.inject.internal.guava.collect.ImmutableList $r1;
        com.mycila.inject.internal.guava.collect.CompoundOrdering r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.CompoundOrdering;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.CompoundOrdering: com.mycila.inject.internal.guava.collect.ImmutableList comparators>;

        $i0 = virtualinvoke $r1.<com.mycila.inject.internal.guava.collect.ImmutableList: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        com.mycila.inject.internal.guava.collect.CompoundOrdering r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        java.lang.String $r6;
        com.mycila.inject.internal.guava.collect.ImmutableList $r3;

        r2 := @this: com.mycila.inject.internal.guava.collect.CompoundOrdering;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ordering.compound(");

        $r3 = r2.<com.mycila.inject.internal.guava.collect.CompoundOrdering: com.mycila.inject.internal.guava.collect.ImmutableList comparators>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static void <clinit>()
    {
        <com.mycila.inject.internal.guava.collect.CompoundOrdering: long serialVersionUID> = 0L;

        return;
    }
}
