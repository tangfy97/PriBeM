class com.sun.lwuit.RunnableWrapper extends java.lang.Object implements java.lang.Runnable
{
    private static final java.lang.Object THREADPOOL_LOCK;
    private static java.util.Vector threadPool;
    private static int threadCount;
    private static int maxThreadCount;
    private static int availableThreads;
    private boolean done;
    private java.lang.Runnable internal;
    private int type;
    private java.lang.RuntimeException err;
    private com.sun.lwuit.Form parentForm;
    private com.sun.lwuit.Painter paint;
    private boolean reverse;

    public void <init>(com.sun.lwuit.Form, com.sun.lwuit.Painter, boolean)
    {
        com.sun.lwuit.Form r1;
        com.sun.lwuit.RunnableWrapper r0;
        com.sun.lwuit.Painter r2;
        boolean z0;

        r0 := @this: com.sun.lwuit.RunnableWrapper;

        r1 := @parameter0: com.sun.lwuit.Form;

        r2 := @parameter1: com.sun.lwuit.Painter;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.sun.lwuit.RunnableWrapper: boolean done> = 0;

        r0.<com.sun.lwuit.RunnableWrapper: com.sun.lwuit.Form parentForm> = r1;

        r0.<com.sun.lwuit.RunnableWrapper: com.sun.lwuit.Painter paint> = r2;

        r0.<com.sun.lwuit.RunnableWrapper: boolean reverse> = z0;

        return;
    }

    public void <init>(java.lang.Runnable, int)
    {
        int i0;
        java.lang.Runnable r1;
        com.sun.lwuit.RunnableWrapper r0;

        r0 := @this: com.sun.lwuit.RunnableWrapper;

        r1 := @parameter0: java.lang.Runnable;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.sun.lwuit.RunnableWrapper: boolean done> = 0;

        r0.<com.sun.lwuit.RunnableWrapper: java.lang.Runnable internal> = r1;

        r0.<com.sun.lwuit.RunnableWrapper: int type> = i0;

        return;
    }

    public java.lang.RuntimeException getErr()
    {
        java.lang.RuntimeException $r1;
        com.sun.lwuit.RunnableWrapper r0;

        r0 := @this: com.sun.lwuit.RunnableWrapper;

        $r1 = r0.<com.sun.lwuit.RunnableWrapper: java.lang.RuntimeException err>;

        return $r1;
    }

    public void setDone(boolean)
    {
        com.sun.lwuit.RunnableWrapper r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.RunnableWrapper;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.RunnableWrapper: boolean done> = z0;

        return;
    }

    public boolean isDone()
    {
        com.sun.lwuit.RunnableWrapper r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.RunnableWrapper;

        $z0 = r0.<com.sun.lwuit.RunnableWrapper: boolean done>;

        return $z0;
    }

    public void run()
    {
        java.lang.Runnable $r11, $r12, r33;
        com.sun.lwuit.plaf.Style $r18;
        java.util.Vector $r3, $r5, $r7;
        boolean $z0, $z1, $z2;
        com.sun.lwuit.Dialog r32;
        com.sun.lwuit.Painter $r15, $r19;
        java.lang.Throwable $r24, $r26, $r29, $r31;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        com.sun.lwuit.RunnableWrapper r0;
        com.sun.lwuit.Display $r8, $r22;
        com.sun.lwuit.Form $r1, $r16, $r17, $r23;
        java.lang.RuntimeException $r28;
        java.lang.InterruptedException $r25, $r27, $r30;
        java.lang.Object $r2, $r4, $r6, $r9, $r10, $r13, $r14, $r20, $r21;

        r0 := @this: com.sun.lwuit.RunnableWrapper;

        $r1 = r0.<com.sun.lwuit.RunnableWrapper: com.sun.lwuit.Form parentForm>;

        if $r1 == null goto label11;

        $r15 = r0.<com.sun.lwuit.RunnableWrapper: com.sun.lwuit.Painter paint>;

        if $r15 != null goto label01;

        $r22 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $r23 = r0.<com.sun.lwuit.RunnableWrapper: com.sun.lwuit.Form parentForm>;

        $z1 = r0.<com.sun.lwuit.RunnableWrapper: boolean reverse>;

        virtualinvoke $r22.<com.sun.lwuit.Display: void setCurrent(com.sun.lwuit.Form,boolean)>($r23, $z1);

        return;

     label01:
        $r16 = r0.<com.sun.lwuit.RunnableWrapper: com.sun.lwuit.Form parentForm>;

        r32 = (com.sun.lwuit.Dialog) $r16;

     label02:
        $z2 = virtualinvoke r32.<com.sun.lwuit.Dialog: boolean isDisposed()>();

        if $z2 != 0 goto label10;

     label03:
        $r20 = <com.sun.lwuit.Display: java.lang.Object lock>;

        entermonitor $r20;

     label04:
        $r21 = <com.sun.lwuit.Display: java.lang.Object lock>;

        virtualinvoke $r21.<java.lang.Object: void wait(long)>(40L);

        exitmonitor $r20;

     label05:
        goto label08;

     label06:
        $r31 := @caughtexception;

        exitmonitor $r20;

     label07:
        throw $r31;

     label08:
        goto label02;

     label09:
        $r30 := @caughtexception;

        goto label02;

     label10:
        $r17 = r0.<com.sun.lwuit.RunnableWrapper: com.sun.lwuit.Form parentForm>;

        $r18 = virtualinvoke $r17.<com.sun.lwuit.Form: com.sun.lwuit.plaf.Style getStyle()>();

        $r19 = r0.<com.sun.lwuit.RunnableWrapper: com.sun.lwuit.Painter paint>;

        virtualinvoke $r18.<com.sun.lwuit.plaf.Style: void setBgPainter(com.sun.lwuit.Painter)>($r19);

        goto label42;

     label11:
        $i0 = r0.<com.sun.lwuit.RunnableWrapper: int type>;

        tableswitch($i0)
        {
            case 0: goto label12;
            case 1: goto label18;
            case 2: goto label21;
            case 3: goto label30;
            case 4: goto label31;
            default: goto label42;
        };

     label12:
        $r12 = r0.<com.sun.lwuit.RunnableWrapper: java.lang.Runnable internal>;

        interfaceinvoke $r12.<java.lang.Runnable: void run()>();

        r0.<com.sun.lwuit.RunnableWrapper: boolean done> = 1;

        $r13 = <com.sun.lwuit.Display: java.lang.Object lock>;

        entermonitor $r13;

     label13:
        $r14 = <com.sun.lwuit.Display: java.lang.Object lock>;

        virtualinvoke $r14.<java.lang.Object: void notify()>();

        exitmonitor $r13;

     label14:
        goto label17;

     label15:
        $r29 := @caughtexception;

        exitmonitor $r13;

     label16:
        throw $r29;

     label17:
        goto label42;

     label18:
        $r11 = r0.<com.sun.lwuit.RunnableWrapper: java.lang.Runnable internal>;

        interfaceinvoke $r11.<java.lang.Runnable: void run()>();

     label19:
        goto label42;

     label20:
        $r28 := @caughtexception;

        r0.<com.sun.lwuit.RunnableWrapper: java.lang.RuntimeException err> = $r28;

        goto label42;

     label21:
        $z0 = r0.<com.sun.lwuit.RunnableWrapper: boolean done>;

        if $z0 != 0 goto label42;

        $r9 = <com.sun.lwuit.Display: java.lang.Object lock>;

        entermonitor $r9;

     label22:
        $r10 = <com.sun.lwuit.Display: java.lang.Object lock>;

        virtualinvoke $r10.<java.lang.Object: void wait(long)>(10L);

     label23:
        goto label25;

     label24:
        $r27 := @caughtexception;

        virtualinvoke $r27.<java.lang.InterruptedException: void printStackTrace()>();

     label25:
        exitmonitor $r9;

     label26:
        goto label29;

     label27:
        $r26 := @caughtexception;

        exitmonitor $r9;

     label28:
        throw $r26;

     label29:
        goto label21;

     label30:
        $r8 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        virtualinvoke $r8.<com.sun.lwuit.Display: void mainEDTLoop()>();

        goto label42;

     label31:
        r33 = null;

        $r2 = <com.sun.lwuit.RunnableWrapper: java.lang.Object THREADPOOL_LOCK>;

        entermonitor $r2;

     label32:
        $r3 = <com.sun.lwuit.RunnableWrapper: java.util.Vector threadPool>;

        $i1 = virtualinvoke $r3.<java.util.Vector: int size()>();

        if $i1 <= 0 goto label33;

        $r5 = <com.sun.lwuit.RunnableWrapper: java.util.Vector threadPool>;

        $r6 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>(0);

        r33 = (java.lang.Runnable) $r6;

        $r7 = <com.sun.lwuit.RunnableWrapper: java.util.Vector threadPool>;

        virtualinvoke $r7.<java.util.Vector: void removeElementAt(int)>(0);

        goto label36;

     label33:
        $i2 = <com.sun.lwuit.RunnableWrapper: int availableThreads>;

        $i3 = $i2 + 1;

        <com.sun.lwuit.RunnableWrapper: int availableThreads> = $i3;

        $r4 = <com.sun.lwuit.RunnableWrapper: java.lang.Object THREADPOOL_LOCK>;

        virtualinvoke $r4.<java.lang.Object: void wait()>();

        $i4 = <com.sun.lwuit.RunnableWrapper: int availableThreads>;

        $i5 = $i4 - 1;

        <com.sun.lwuit.RunnableWrapper: int availableThreads> = $i5;

     label34:
        goto label36;

     label35:
        $r25 := @caughtexception;

        virtualinvoke $r25.<java.lang.InterruptedException: void printStackTrace()>();

     label36:
        exitmonitor $r2;

     label37:
        goto label40;

     label38:
        $r24 := @caughtexception;

        exitmonitor $r2;

     label39:
        throw $r24;

     label40:
        if r33 == null goto label41;

        interfaceinvoke r33.<java.lang.Runnable: void run()>();

     label41:
        goto label31;

     label42:
        r0.<com.sun.lwuit.RunnableWrapper: boolean done> = 1;

        return;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.InterruptedException from label03 to label08 with label09;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
        catch java.lang.RuntimeException from label18 to label19 with label20;
        catch java.lang.InterruptedException from label22 to label23 with label24;
        catch java.lang.Throwable from label22 to label26 with label27;
        catch java.lang.Throwable from label27 to label28 with label27;
        catch java.lang.InterruptedException from label33 to label34 with label35;
        catch java.lang.Throwable from label32 to label37 with label38;
        catch java.lang.Throwable from label38 to label39 with label38;
    }

    static void pushToThreadPool(java.lang.Runnable)
    {
        java.lang.Throwable $r7;
        java.lang.Runnable r0;
        java.util.Vector $r9;
        java.lang.Thread $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r6;
        com.sun.lwuit.RunnableWrapper $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.Object $r8, $r10;

        r0 := @parameter0: java.lang.Runnable;

        $i0 = <com.sun.lwuit.RunnableWrapper: int availableThreads>;

        if $i0 != 0 goto label1;

        $i2 = <com.sun.lwuit.RunnableWrapper: int threadCount>;

        $i1 = <com.sun.lwuit.RunnableWrapper: int maxThreadCount>;

        if $i2 >= $i1 goto label1;

        $i3 = <com.sun.lwuit.RunnableWrapper: int threadCount>;

        $i4 = $i3 + 1;

        <com.sun.lwuit.RunnableWrapper: int threadCount> = $i4;

        $r1 = new java.lang.Thread;

        $r2 = new com.sun.lwuit.RunnableWrapper;

        specialinvoke $r2.<com.sun.lwuit.RunnableWrapper: void <init>(java.lang.Runnable,int)>(null, 4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invokeAndBlock");

        $i5 = <com.sun.lwuit.RunnableWrapper: int threadCount>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r2, $r6);

        virtualinvoke $r1.<java.lang.Thread: void start()>();

     label1:
        $r8 = <com.sun.lwuit.RunnableWrapper: java.lang.Object THREADPOOL_LOCK>;

        entermonitor $r8;

     label2:
        $r9 = <com.sun.lwuit.RunnableWrapper: java.util.Vector threadPool>;

        virtualinvoke $r9.<java.util.Vector: void addElement(java.lang.Object)>(r0);

        $r10 = <com.sun.lwuit.RunnableWrapper: java.lang.Object THREADPOOL_LOCK>;

        virtualinvoke $r10.<java.lang.Object: void notify()>();

        exitmonitor $r8;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r8;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;
        java.util.Vector $r1;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.sun.lwuit.RunnableWrapper: java.lang.Object THREADPOOL_LOCK> = $r0;

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        <com.sun.lwuit.RunnableWrapper: java.util.Vector threadPool> = $r1;

        <com.sun.lwuit.RunnableWrapper: int threadCount> = 0;

        <com.sun.lwuit.RunnableWrapper: int maxThreadCount> = 3;

        <com.sun.lwuit.RunnableWrapper: int availableThreads> = 0;

        return;
    }
}
