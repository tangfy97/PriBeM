final class com.hp.hpl.jena.rdf.arp.NTriple$1 extends java.lang.Object implements com.hp.hpl.jena.rdf.arp.StatementHandler
{
    int debugC;
    final int val$nStatements;

    void <init>(int)
    {
        int i0;
        com.hp.hpl.jena.rdf.arp.NTriple$1 r0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.NTriple$1;

        i0 := @parameter0: int;

        r0.<com.hp.hpl.jena.rdf.arp.NTriple$1: int val$nStatements> = i0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.rdf.arp.NTriple$1: int debugC> = 0;

        return;
    }

    public void statement(com.hp.hpl.jena.rdf.arp.AResource, com.hp.hpl.jena.rdf.arp.AResource, com.hp.hpl.jena.rdf.arp.AResource)
    {
        com.hp.hpl.jena.rdf.arp.AResource r1, r2, r3;
        com.hp.hpl.jena.rdf.arp.NTriple$1 r0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.NTriple$1;

        r1 := @parameter0: com.hp.hpl.jena.rdf.arp.AResource;

        r2 := @parameter1: com.hp.hpl.jena.rdf.arp.AResource;

        r3 := @parameter2: com.hp.hpl.jena.rdf.arp.AResource;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.NTriple$1: void statement(com.hp.hpl.jena.rdf.arp.AResource,com.hp.hpl.jena.rdf.arp.AResource,com.hp.hpl.jena.rdf.arp.ALiteral)>(null, null, null);

        return;
    }

    public void statement(com.hp.hpl.jena.rdf.arp.AResource, com.hp.hpl.jena.rdf.arp.AResource, com.hp.hpl.jena.rdf.arp.ALiteral)
    {
        com.hp.hpl.jena.rdf.arp.NTriple$1 r0;
        java.lang.Runtime $r1, $r3, $r4, $r5, $r6, $r12, $r16, $r17, $r20, $r24, $r25;
        java.lang.Exception $r28;
        java.lang.StringBuilder $r7, $r9, $r10, $r13, $r15, $r18, $r21, $r23, $r26;
        long $l6, $l7, $l8, $l11, $l12, $l13, $l15, $l16, $l17, $l18, $l19, $l21, $l22;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i9, $i10, $i14, $i20;
        java.lang.String $r11, $r19, $r27;
        java.io.PrintStream $r2, $r8, $r14, $r22;
        com.hp.hpl.jena.rdf.arp.AResource r29, r30;
        com.hp.hpl.jena.rdf.arp.ALiteral r31;

        r0 := @this: com.hp.hpl.jena.rdf.arp.NTriple$1;

        r29 := @parameter0: com.hp.hpl.jena.rdf.arp.AResource;

        r30 := @parameter1: com.hp.hpl.jena.rdf.arp.AResource;

        r31 := @parameter2: com.hp.hpl.jena.rdf.arp.ALiteral;

        $i0 = r0.<com.hp.hpl.jena.rdf.arp.NTriple$1: int debugC>;

        $i1 = $i0 + 1;

        r0.<com.hp.hpl.jena.rdf.arp.NTriple$1: int debugC> = $i1;

        $i2 = $i1 % 100;

        if $i2 != 0 goto label1;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("T: ");

        $i10 = r0.<com.hp.hpl.jena.rdf.arp.NTriple$1: int debugC>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r11);

        $r12 = staticinvoke <com.hp.hpl.jena.rdf.arp.NTriple: java.lang.Runtime access$100()>();

        virtualinvoke $r12.<java.lang.Runtime: void gc()>();

        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("M1: ");

        $r16 = staticinvoke <com.hp.hpl.jena.rdf.arp.NTriple: java.lang.Runtime access$100()>();

        $l11 = virtualinvoke $r16.<java.lang.Runtime: long totalMemory()>();

        $r17 = staticinvoke <com.hp.hpl.jena.rdf.arp.NTriple: java.lang.Runtime access$100()>();

        $l12 = virtualinvoke $r17.<java.lang.Runtime: long freeMemory()>();

        $l13 = $l11 - $l12;

        $i14 = staticinvoke <com.hp.hpl.jena.rdf.arp.NTriple: int access$200()>();

        $l15 = (long) $i14;

        $l16 = $l13 - $l15;

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l16);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r19);

        $r20 = staticinvoke <com.hp.hpl.jena.rdf.arp.NTriple: java.lang.Runtime access$100()>();

        virtualinvoke $r20.<java.lang.Runtime: void gc()>();

        $r22 = <java.lang.System: java.io.PrintStream out>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("M2: ");

        $r24 = staticinvoke <com.hp.hpl.jena.rdf.arp.NTriple: java.lang.Runtime access$100()>();

        $l17 = virtualinvoke $r24.<java.lang.Runtime: long totalMemory()>();

        $r25 = staticinvoke <com.hp.hpl.jena.rdf.arp.NTriple: java.lang.Runtime access$100()>();

        $l18 = virtualinvoke $r25.<java.lang.Runtime: long freeMemory()>();

        $l19 = $l17 - $l18;

        $i20 = staticinvoke <com.hp.hpl.jena.rdf.arp.NTriple: int access$200()>();

        $l21 = (long) $i20;

        $l22 = $l19 - $l21;

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l22);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r27);

     label1:
        $i3 = r0.<com.hp.hpl.jena.rdf.arp.NTriple$1: int debugC>;

        if $i3 != 1 goto label2;

        $r3 = staticinvoke <com.hp.hpl.jena.rdf.arp.NTriple: java.lang.Runtime access$100()>();

        virtualinvoke $r3.<java.lang.Runtime: void gc()>();

        $r4 = staticinvoke <com.hp.hpl.jena.rdf.arp.NTriple: java.lang.Runtime access$100()>();

        virtualinvoke $r4.<java.lang.Runtime: void gc()>();

        $r5 = staticinvoke <com.hp.hpl.jena.rdf.arp.NTriple: java.lang.Runtime access$100()>();

        $l6 = virtualinvoke $r5.<java.lang.Runtime: long totalMemory()>();

        $r6 = staticinvoke <com.hp.hpl.jena.rdf.arp.NTriple: java.lang.Runtime access$100()>();

        $l7 = virtualinvoke $r6.<java.lang.Runtime: long freeMemory()>();

        $l8 = $l6 - $l7;

        $i9 = (int) $l8;

        staticinvoke <com.hp.hpl.jena.rdf.arp.NTriple: int access$202(int)>($i9);

     label2:
        $i5 = r0.<com.hp.hpl.jena.rdf.arp.NTriple$1: int debugC>;

        $i4 = r0.<com.hp.hpl.jena.rdf.arp.NTriple$1: int val$nStatements>;

        if $i5 != $i4 goto label6;

        $r1 = staticinvoke <com.hp.hpl.jena.rdf.arp.NTriple: java.lang.Runtime access$100()>();

        virtualinvoke $r1.<java.lang.Runtime: void gc()>();

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Kill me now.");

     label3:
        staticinvoke <java.lang.Thread: void sleep(long)>(200000L);

     label4:
        goto label6;

     label5:
        $r28 := @caughtexception;

     label6:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }
}
