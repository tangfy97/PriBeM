public class org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder extends java.lang.Object
{
    private final org.codehaus.groovy.tools.groovydoc.GroovyDocTool tool;
    private final org.apache.tools.ant.types.Path sourcepath;
    private final org.codehaus.groovy.tools.groovydoc.SimpleGroovyRootDoc rootDoc;
    private static final char FS;
    private java.util.List links;

    public void <init>(org.codehaus.groovy.tools.groovydoc.GroovyDocTool, org.apache.tools.ant.types.Path, java.util.List)
    {
        org.codehaus.groovy.tools.groovydoc.GroovyDocTool r1;
        java.util.List r3;
        org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder r0;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyRootDoc $r4;
        org.apache.tools.ant.types.Path r2;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder;

        r1 := @parameter0: org.codehaus.groovy.tools.groovydoc.GroovyDocTool;

        r2 := @parameter1: org.apache.tools.ant.types.Path;

        r3 := @parameter2: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder: org.codehaus.groovy.tools.groovydoc.GroovyDocTool tool> = r1;

        r0.<org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder: org.apache.tools.ant.types.Path sourcepath> = r2;

        r0.<org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder: java.util.List links> = r3;

        $r4 = new org.codehaus.groovy.tools.groovydoc.SimpleGroovyRootDoc;

        specialinvoke $r4.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyRootDoc: void <init>(java.lang.String)>("root");

        r0.<org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder: org.codehaus.groovy.tools.groovydoc.SimpleGroovyRootDoc rootDoc> = $r4;

        return;
    }

    public java.util.Map getClassDocsFromSingleSource(java.lang.String, java.lang.String, java.lang.String) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.TokenStreamException
    {
        java.util.Map r4;
        int $i0, $i1;
        org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder r1;
        java.lang.String r0, r2, r3;

        r1 := @this: org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(".java");

        if $i0 <= 0 goto label1;

        r4 = specialinvoke r1.<org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder: java.util.Map parseJava(java.lang.String,java.lang.String,java.lang.String)>(r2, r0, r3);

        goto label3;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(".sourcefile");

        if $i1 <= 0 goto label2;

        r4 = specialinvoke r1.<org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder: java.util.Map parseJava(java.lang.String,java.lang.String,java.lang.String)>(r2, r0, r3);

        goto label3;

     label2:
        r4 = specialinvoke r1.<org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder: java.util.Map parseGroovy(java.lang.String,java.lang.String,java.lang.String)>(r2, r0, r3);

     label3:
        return r4;
    }

    private java.util.Map parseJava(java.lang.String, java.lang.String, java.lang.String) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.TokenStreamException
    {
        java.lang.String[] $r4;
        org.codehaus.groovy.antlr.treewalker.PreOrderTraversal $r7, $r9;
        org.codehaus.groovy.antlr.java.JavaRecognizer $r3;
        java.util.Map $r16;
        java.lang.String r2, r11, r12;
        org.codehaus.groovy.antlr.java.Groovifier $r8;
        org.codehaus.groovy.antlr.SourceBuffer $r0;
        org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal $r14;
        java.util.List $r13;
        org.codehaus.groovy.antlr.java.Java2GroovyConverter $r6;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler $r10, $r15;
        org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder r1;
        groovyjarjarantlr.collections.AST $r5;

        r1 := @this: org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder;

        r11 := @parameter0: java.lang.String;

        r12 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r0 = new org.codehaus.groovy.antlr.SourceBuffer;

        specialinvoke $r0.<org.codehaus.groovy.antlr.SourceBuffer: void <init>()>();

        $r3 = specialinvoke r1.<org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder: org.codehaus.groovy.antlr.java.JavaRecognizer getJavaParser(java.lang.String,org.codehaus.groovy.antlr.SourceBuffer)>(r2, $r0);

        $r4 = virtualinvoke $r3.<org.codehaus.groovy.antlr.java.JavaRecognizer: java.lang.String[] getTokenNames()>();

        virtualinvoke $r3.<org.codehaus.groovy.antlr.java.JavaRecognizer: void compilationUnit()>();

        $r5 = virtualinvoke $r3.<org.codehaus.groovy.antlr.java.JavaRecognizer: groovyjarjarantlr.collections.AST getAST()>();

        $r6 = new org.codehaus.groovy.antlr.java.Java2GroovyConverter;

        specialinvoke $r6.<org.codehaus.groovy.antlr.java.Java2GroovyConverter: void <init>(java.lang.String[])>($r4);

        $r7 = new org.codehaus.groovy.antlr.treewalker.PreOrderTraversal;

        specialinvoke $r7.<org.codehaus.groovy.antlr.treewalker.PreOrderTraversal: void <init>(org.codehaus.groovy.antlr.treewalker.Visitor)>($r6);

        interfaceinvoke $r7.<org.codehaus.groovy.antlr.AntlrASTProcessor: groovyjarjarantlr.collections.AST process(groovyjarjarantlr.collections.AST)>($r5);

        $r8 = new org.codehaus.groovy.antlr.java.Groovifier;

        specialinvoke $r8.<org.codehaus.groovy.antlr.java.Groovifier: void <init>(java.lang.String[])>($r4);

        $r9 = new org.codehaus.groovy.antlr.treewalker.PreOrderTraversal;

        specialinvoke $r9.<org.codehaus.groovy.antlr.treewalker.PreOrderTraversal: void <init>(org.codehaus.groovy.antlr.treewalker.Visitor)>($r8);

        interfaceinvoke $r9.<org.codehaus.groovy.antlr.AntlrASTProcessor: groovyjarjarantlr.collections.AST process(groovyjarjarantlr.collections.AST)>($r5);

        $r10 = new org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler;

        $r13 = r1.<org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder: java.util.List links>;

        specialinvoke $r10.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: void <init>(java.lang.String,java.lang.String,org.codehaus.groovy.antlr.SourceBuffer,java.util.List)>(r11, r12, $r0, $r13);

        $r14 = new org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal;

        specialinvoke $r14.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void <init>(org.codehaus.groovy.antlr.treewalker.Visitor)>($r10);

        interfaceinvoke $r14.<org.codehaus.groovy.antlr.AntlrASTProcessor: groovyjarjarantlr.collections.AST process(groovyjarjarantlr.collections.AST)>($r5);

        $r15 = (org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler) $r10;

        $r16 = virtualinvoke $r15.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.Map getGroovyClassDocs()>();

        return $r16;
    }

    private java.util.Map parseGroovy(java.lang.String, java.lang.String, java.lang.String) throws groovyjarjarantlr.RecognitionException, groovyjarjarantlr.TokenStreamException
    {
        org.codehaus.groovy.antlr.parser.GroovyRecognizer $r3;
        org.codehaus.groovy.antlr.SourceBuffer $r0;
        org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal $r9;
        java.util.List $r8;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler $r5, $r10;
        java.util.Map $r11;
        org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder r1;
        java.lang.String r2, r6, r7;
        groovyjarjarantlr.collections.AST $r4;

        r1 := @this: org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r0 = new org.codehaus.groovy.antlr.SourceBuffer;

        specialinvoke $r0.<org.codehaus.groovy.antlr.SourceBuffer: void <init>()>();

        $r3 = specialinvoke r1.<org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder: org.codehaus.groovy.antlr.parser.GroovyRecognizer getGroovyParser(java.lang.String,org.codehaus.groovy.antlr.SourceBuffer)>(r2, $r0);

        virtualinvoke $r3.<org.codehaus.groovy.antlr.parser.GroovyRecognizer: java.lang.String[] getTokenNames()>();

        virtualinvoke $r3.<org.codehaus.groovy.antlr.parser.GroovyRecognizer: void compilationUnit()>();

        $r4 = virtualinvoke $r3.<org.codehaus.groovy.antlr.parser.GroovyRecognizer: groovyjarjarantlr.collections.AST getAST()>();

        $r5 = new org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler;

        $r8 = r1.<org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder: java.util.List links>;

        specialinvoke $r5.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: void <init>(java.lang.String,java.lang.String,org.codehaus.groovy.antlr.SourceBuffer,java.util.List)>(r6, r7, $r0, $r8);

        $r9 = new org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal;

        specialinvoke $r9.<org.codehaus.groovy.antlr.treewalker.SourceCodeTraversal: void <init>(org.codehaus.groovy.antlr.treewalker.Visitor)>($r5);

        interfaceinvoke $r9.<org.codehaus.groovy.antlr.AntlrASTProcessor: groovyjarjarantlr.collections.AST process(groovyjarjarantlr.collections.AST)>($r4);

        $r10 = (org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler) $r5;

        $r11 = virtualinvoke $r10.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler: java.util.Map getGroovyClassDocs()>();

        return $r11;
    }

    private org.codehaus.groovy.antlr.java.JavaRecognizer getJavaParser(java.lang.String, org.codehaus.groovy.antlr.SourceBuffer)
    {
        org.codehaus.groovy.antlr.SourceBuffer r3;
        org.codehaus.groovy.antlr.UnicodeEscapingReader $r0;
        java.io.StringReader $r1;
        org.codehaus.groovy.antlr.java.JavaRecognizer $r5;
        org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder r6;
        java.lang.String r2;
        org.codehaus.groovy.antlr.java.JavaLexer $r4;

        r6 := @this: org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.codehaus.groovy.antlr.SourceBuffer;

        $r0 = new org.codehaus.groovy.antlr.UnicodeEscapingReader;

        $r1 = new java.io.StringReader;

        specialinvoke $r1.<java.io.StringReader: void <init>(java.lang.String)>(r2);

        specialinvoke $r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: void <init>(java.io.Reader,org.codehaus.groovy.antlr.SourceBuffer)>($r1, r3);

        $r4 = new org.codehaus.groovy.antlr.java.JavaLexer;

        specialinvoke $r4.<org.codehaus.groovy.antlr.java.JavaLexer: void <init>(java.io.Reader)>($r0);

        virtualinvoke $r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: void setLexer(groovyjarjarantlr.CharScanner)>($r4);

        $r5 = staticinvoke <org.codehaus.groovy.antlr.java.JavaRecognizer: org.codehaus.groovy.antlr.java.JavaRecognizer make(org.codehaus.groovy.antlr.java.JavaLexer)>($r4);

        virtualinvoke $r5.<org.codehaus.groovy.antlr.java.JavaRecognizer: void setSourceBuffer(org.codehaus.groovy.antlr.SourceBuffer)>(r3);

        return $r5;
    }

    private org.codehaus.groovy.antlr.parser.GroovyRecognizer getGroovyParser(java.lang.String, org.codehaus.groovy.antlr.SourceBuffer)
    {
        org.codehaus.groovy.antlr.SourceBuffer r3;
        org.codehaus.groovy.antlr.parser.GroovyRecognizer $r5;
        org.codehaus.groovy.antlr.UnicodeEscapingReader $r0;
        java.io.StringReader $r1;
        org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder r6;
        org.codehaus.groovy.antlr.parser.GroovyLexer $r4;
        java.lang.String r2;

        r6 := @this: org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.codehaus.groovy.antlr.SourceBuffer;

        $r0 = new org.codehaus.groovy.antlr.UnicodeEscapingReader;

        $r1 = new java.io.StringReader;

        specialinvoke $r1.<java.io.StringReader: void <init>(java.lang.String)>(r2);

        specialinvoke $r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: void <init>(java.io.Reader,org.codehaus.groovy.antlr.SourceBuffer)>($r1, r3);

        $r4 = new org.codehaus.groovy.antlr.parser.GroovyLexer;

        specialinvoke $r4.<org.codehaus.groovy.antlr.parser.GroovyLexer: void <init>(java.io.Reader)>($r0);

        virtualinvoke $r0.<org.codehaus.groovy.antlr.UnicodeEscapingReader: void setLexer(groovyjarjarantlr.CharScanner)>($r4);

        $r5 = staticinvoke <org.codehaus.groovy.antlr.parser.GroovyRecognizer: org.codehaus.groovy.antlr.parser.GroovyRecognizer make(org.codehaus.groovy.antlr.parser.GroovyLexer)>($r4);

        virtualinvoke $r5.<org.codehaus.groovy.antlr.parser.GroovyRecognizer: void setSourceBuffer(org.codehaus.groovy.antlr.SourceBuffer)>(r3);

        return $r5;
    }

    public void buildTree(java.util.List) throws java.io.IOException, groovyjarjarantlr.RecognitionException, groovyjarjarantlr.TokenStreamException
    {
        org.apache.tools.ant.types.resources.FileResource r8;
        org.apache.tools.ant.types.Path $r5;
        java.util.Map $r29;
        boolean $z0, $z1, $z2;
        org.codehaus.groovy.tools.groovydoc.GroovyDocTool $r24, $r27;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyRootDoc $r30, $r31, $r33;
        java.util.List r0;
        org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder r4;
        groovyjarjarantlr.RecognitionException $r41;
        org.codehaus.groovy.groovydoc.GroovyPackageDoc $r32;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyPackageDoc $r34, r47;
        java.lang.StringBuffer $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r36, $r38, $r39, $r42, $r44, $r45;
        java.lang.String r3, $r10, $r16, $r21, $r23, $r25, $r26, $r28, $r40, $r46;
        java.io.PrintStream $r37, $r43;
        java.util.Iterator $r1, $r6;
        java.io.File $r9, $r11, $r22;
        java.lang.Object $r2, $r7;
        groovyjarjarantlr.TokenStreamException $r35;

        r4 := @this: org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r2;

        $r5 = r4.<org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder: org.apache.tools.ant.types.Path sourcepath>;

        $r6 = virtualinvoke $r5.<org.apache.tools.ant.types.Path: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.tools.ant.types.resources.FileResource) $r7;

        $r9 = virtualinvoke r8.<org.apache.tools.ant.types.resources.FileResource: java.io.File getFile()>();

        $r10 = virtualinvoke $r9.<java.io.File: java.lang.String getAbsolutePath()>();

        $r11 = new java.io.File;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(47);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>($r16);

        $z2 = virtualinvoke $r11.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label08;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(47);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        $r22 = new java.io.File;

        specialinvoke $r22.<java.io.File: void <init>(java.lang.String)>($r21);

        $r23 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.lang.String getText(java.io.File)>($r22);

        $r24 = r4.<org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder: org.codehaus.groovy.tools.groovydoc.GroovyDocTool tool>;

        $r25 = virtualinvoke $r24.<org.codehaus.groovy.tools.groovydoc.GroovyDocTool: java.lang.String getPath(java.lang.String)>(r3);

        $r26 = virtualinvoke $r25.<java.lang.String: java.lang.String replace(char,char)>(92, 47);

        $r27 = r4.<org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder: org.codehaus.groovy.tools.groovydoc.GroovyDocTool tool>;

        $r28 = virtualinvoke $r27.<org.codehaus.groovy.tools.groovydoc.GroovyDocTool: java.lang.String getFile(java.lang.String)>(r3);

     label03:
        $r29 = virtualinvoke r4.<org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder: java.util.Map getClassDocsFromSingleSource(java.lang.String,java.lang.String,java.lang.String)>($r26, $r28, $r23);

        $r30 = r4.<org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder: org.codehaus.groovy.tools.groovydoc.SimpleGroovyRootDoc rootDoc>;

        virtualinvoke $r30.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyRootDoc: void putAllClasses(java.util.Map)>($r29);

        $r31 = r4.<org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder: org.codehaus.groovy.tools.groovydoc.SimpleGroovyRootDoc rootDoc>;

        $r32 = virtualinvoke $r31.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyRootDoc: org.codehaus.groovy.groovydoc.GroovyPackageDoc packageNamed(java.lang.String)>($r26);

        r47 = (org.codehaus.groovy.tools.groovydoc.SimpleGroovyPackageDoc) $r32;

        if r47 != null goto label04;

        $r34 = new org.codehaus.groovy.tools.groovydoc.SimpleGroovyPackageDoc;

        specialinvoke $r34.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyPackageDoc: void <init>(java.lang.String)>($r26);

        r47 = $r34;

     label04:
        virtualinvoke r47.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyPackageDoc: void putAll(java.util.Map)>($r29);

        $r33 = r4.<org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder: org.codehaus.groovy.tools.groovydoc.SimpleGroovyRootDoc rootDoc>;

        virtualinvoke $r33.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyRootDoc: void put(java.lang.String,org.codehaus.groovy.groovydoc.GroovyPackageDoc)>($r26, r47);

     label05:
        goto label08;

     label06:
        $r41 := @caughtexception;

        $r43 = <java.lang.System: java.io.PrintStream out>;

        $r42 = new java.lang.StringBuffer;

        specialinvoke $r42.<java.lang.StringBuffer: void <init>()>();

        $r44 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ignored due to RecognitionException: ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>($r46);

        goto label08;

     label07:
        $r35 := @caughtexception;

        $r37 = <java.lang.System: java.io.PrintStream out>;

        $r36 = new java.lang.StringBuffer;

        specialinvoke $r36.<java.lang.StringBuffer: void <init>()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ignored due to TokenStreamException: ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>($r40);

     label08:
        goto label02;

     label09:
        goto label01;

     label10:
        return;

        catch groovyjarjarantlr.RecognitionException from label03 to label05 with label06;
        catch groovyjarjarantlr.TokenStreamException from label03 to label05 with label07;
    }

    public org.codehaus.groovy.groovydoc.GroovyRootDoc getRootDoc()
    {
        org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder r0;
        org.codehaus.groovy.tools.groovydoc.SimpleGroovyRootDoc $r1, $r2;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder;

        $r1 = r0.<org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder: org.codehaus.groovy.tools.groovydoc.SimpleGroovyRootDoc rootDoc>;

        virtualinvoke $r1.<org.codehaus.groovy.tools.groovydoc.SimpleGroovyRootDoc: void resolve()>();

        $r2 = r0.<org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder: org.codehaus.groovy.tools.groovydoc.SimpleGroovyRootDoc rootDoc>;

        return $r2;
    }

    public static void <clinit>()
    {
        <org.codehaus.groovy.tools.groovydoc.GroovyRootDocBuilder: char FS> = 47;

        return;
    }
}
