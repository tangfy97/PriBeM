public class org.apache.pdfbox.cos.COSStream extends org.apache.pdfbox.cos.COSDictionary implements java.io.Closeable
{
    private static final org.apache.commons.logging.Log LOG;
    private static final int BUFFER_SIZE;
    private org.apache.pdfbox.io.RandomAccess file;
    private org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream;
    private org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream;

    private org.apache.pdfbox.io.RandomAccess clone(org.apache.pdfbox.io.RandomAccess)
    {
        org.apache.pdfbox.io.RandomAccessBuffer $r1, $r2;
        org.apache.pdfbox.io.RandomAccess r0;
        org.apache.pdfbox.cos.COSStream r3;
        boolean $z0;

        r3 := @this: org.apache.pdfbox.cos.COSStream;

        r0 := @parameter0: org.apache.pdfbox.io.RandomAccess;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = r0 instanceof org.apache.pdfbox.io.RandomAccessFile;

        if $z0 == 0 goto label2;

        return r0;

     label2:
        $r1 = (org.apache.pdfbox.io.RandomAccessBuffer) r0;

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.io.RandomAccessBuffer: org.apache.pdfbox.io.RandomAccessBuffer clone()>();

        return $r2;
    }

    public void <init>(org.apache.pdfbox.io.RandomAccess)
    {
        org.apache.pdfbox.io.RandomAccess r1, $r2;
        org.apache.pdfbox.cos.COSStream r0;

        r0 := @this: org.apache.pdfbox.cos.COSStream;

        r1 := @parameter0: org.apache.pdfbox.io.RandomAccess;

        specialinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess clone(org.apache.pdfbox.io.RandomAccess)>(r1);

        r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess file> = $r2;

        return;
    }

    public void <init>(org.apache.pdfbox.cos.COSDictionary, org.apache.pdfbox.io.RandomAccess)
    {
        org.apache.pdfbox.cos.COSDictionary r1;
        org.apache.pdfbox.io.RandomAccess r2, $r3;
        org.apache.pdfbox.cos.COSStream r0;

        r0 := @this: org.apache.pdfbox.cos.COSStream;

        r1 := @parameter0: org.apache.pdfbox.cos.COSDictionary;

        r2 := @parameter1: org.apache.pdfbox.io.RandomAccess;

        specialinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r1);

        $r3 = specialinvoke r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess clone(org.apache.pdfbox.io.RandomAccess)>(r2);

        r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess file> = $r3;

        return;
    }

    public void replaceWithStream(org.apache.pdfbox.cos.COSStream)
    {
        org.apache.pdfbox.io.RandomAccessFileOutputStream $r3, $r4;
        org.apache.pdfbox.io.RandomAccess $r2;
        org.apache.pdfbox.cos.COSStream r0, r1;

        r0 := @this: org.apache.pdfbox.cos.COSStream;

        r1 := @parameter0: org.apache.pdfbox.cos.COSStream;

        virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: void clear()>();

        virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: void addAll(org.apache.pdfbox.cos.COSDictionary)>(r1);

        $r2 = r1.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess file>;

        r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess file> = $r2;

        $r3 = r1.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream>;

        r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream> = $r3;

        $r4 = r1.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream>;

        r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream> = $r4;

        return;
    }

    public org.apache.pdfbox.io.RandomAccess getScratchFile()
    {
        org.apache.pdfbox.io.RandomAccess $r1;
        org.apache.pdfbox.cos.COSStream r0;

        r0 := @this: org.apache.pdfbox.cos.COSStream;

        $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess file>;

        return $r1;
    }

    public java.util.List getStreamTokens() throws java.io.IOException
    {
        org.apache.pdfbox.pdfparser.PDFStreamParser $r0;
        java.util.List $r2;
        org.apache.pdfbox.cos.COSStream r1;

        r1 := @this: org.apache.pdfbox.cos.COSStream;

        $r0 = new org.apache.pdfbox.pdfparser.PDFStreamParser;

        specialinvoke $r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: void <init>(org.apache.pdfbox.cos.COSStream)>(r1);

        virtualinvoke $r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: void parse()>();

        $r2 = virtualinvoke $r0.<org.apache.pdfbox.pdfparser.PDFStreamParser: java.util.List getTokens()>();

        return $r2;
    }

    public java.io.InputStream getFilteredStream() throws java.io.IOException
    {
        java.io.BufferedInputStream $r6;
        org.apache.pdfbox.io.RandomAccessFileInputStream $r4;
        long $l0, $l1;
        org.apache.pdfbox.io.RandomAccessFileOutputStream $r1, $r2, $r3;
        org.apache.pdfbox.io.RandomAccess $r5;
        org.apache.pdfbox.cos.COSStream r0;

        r0 := @this: org.apache.pdfbox.cos.COSStream;

        $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream>;

        if $r1 != null goto label1;

        specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void doEncode()>();

     label1:
        $r2 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream>;

        $l0 = virtualinvoke $r2.<org.apache.pdfbox.io.RandomAccessFileOutputStream: long getPosition()>();

        $r3 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream>;

        $l1 = virtualinvoke $r3.<org.apache.pdfbox.io.RandomAccessFileOutputStream: long getLength()>();

        $r4 = new org.apache.pdfbox.io.RandomAccessFileInputStream;

        $r5 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess file>;

        specialinvoke $r4.<org.apache.pdfbox.io.RandomAccessFileInputStream: void <init>(org.apache.pdfbox.io.RandomAccess,long,long)>($r5, $l0, $l1);

        $r6 = new java.io.BufferedInputStream;

        specialinvoke $r6.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r4, 16384);

        return $r6;
    }

    public long getFilteredLength() throws java.io.IOException
    {
        org.apache.pdfbox.io.RandomAccessFileOutputStream $r1, $r2;
        long $l0;
        org.apache.pdfbox.cos.COSStream r0;

        r0 := @this: org.apache.pdfbox.cos.COSStream;

        $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream>;

        if $r1 != null goto label1;

        specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void doEncode()>();

     label1:
        $r2 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream>;

        $l0 = virtualinvoke $r2.<org.apache.pdfbox.io.RandomAccessFileOutputStream: long getLength()>();

        return $l0;
    }

    public java.io.InputStream getUnfilteredStream() throws java.io.IOException
    {
        byte[] $r4;
        java.io.BufferedInputStream $r9;
        org.apache.pdfbox.io.RandomAccessFileInputStream $r7;
        long $l0, $l1;
        org.apache.pdfbox.io.RandomAccessFileOutputStream $r1, $r2, $r5, $r6;
        java.io.ByteArrayInputStream $r3;
        org.apache.pdfbox.io.RandomAccess $r8;
        org.apache.pdfbox.cos.COSStream r0;
        java.io.InputStream r10;

        r0 := @this: org.apache.pdfbox.cos.COSStream;

        $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream>;

        if $r1 != null goto label1;

        specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void doDecode()>();

     label1:
        $r2 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream>;

        if $r2 == null goto label2;

        $r5 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream>;

        $l0 = virtualinvoke $r5.<org.apache.pdfbox.io.RandomAccessFileOutputStream: long getPosition()>();

        $r6 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream>;

        $l1 = virtualinvoke $r6.<org.apache.pdfbox.io.RandomAccessFileOutputStream: long getLengthWritten()>();

        $r7 = new org.apache.pdfbox.io.RandomAccessFileInputStream;

        $r8 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess file>;

        specialinvoke $r7.<org.apache.pdfbox.io.RandomAccessFileInputStream: void <init>(org.apache.pdfbox.io.RandomAccess,long,long)>($r8, $l0, $l1);

        $r9 = new java.io.BufferedInputStream;

        specialinvoke $r9.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r7, 16384);

        r10 = $r9;

        goto label3;

     label2:
        $r3 = new java.io.ByteArrayInputStream;

        $r4 = newarray (byte)[0];

        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4);

        r10 = $r3;

     label3:
        return r10;
    }

    public java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor) throws org.apache.pdfbox.exceptions.COSVisitorException
    {
        org.apache.pdfbox.cos.ICOSVisitor r0;
        java.lang.Object $r2;
        org.apache.pdfbox.cos.COSStream r1;

        r1 := @this: org.apache.pdfbox.cos.COSStream;

        r0 := @parameter0: org.apache.pdfbox.cos.ICOSVisitor;

        $r2 = interfaceinvoke r0.<org.apache.pdfbox.cos.ICOSVisitor: java.lang.Object visitFromStream(org.apache.pdfbox.cos.COSStream)>(r1);

        return $r2;
    }

    private void doDecode() throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSArray r8;
        org.apache.pdfbox.io.RandomAccessFileOutputStream $r1;
        int $i0, i1;
        java.lang.String $r7;
        org.apache.pdfbox.cos.COSStream r0;
        boolean $z0, $z1;
        org.apache.pdfbox.cos.COSName r10, $r11;
        java.io.IOException $r3;
        org.apache.pdfbox.cos.COSBase $r2, $r9;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: org.apache.pdfbox.cos.COSStream;

        $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream>;

        r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream> = $r1;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getFilters()>();

        if $r2 != null goto label1;

        goto label6;

     label1:
        $z0 = $r2 instanceof org.apache.pdfbox.cos.COSName;

        if $z0 == 0 goto label2;

        $r11 = (org.apache.pdfbox.cos.COSName) $r2;

        specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void doDecode(org.apache.pdfbox.cos.COSName,int)>($r11, 0);

        goto label6;

     label2:
        $z1 = $r2 instanceof org.apache.pdfbox.cos.COSArray;

        if $z1 == 0 goto label5;

        r8 = (org.apache.pdfbox.cos.COSArray) $r2;

        i1 = 0;

     label3:
        $i0 = virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: int size()>();

        if i1 >= $i0 goto label4;

        $r9 = virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(i1);

        r10 = (org.apache.pdfbox.cos.COSName) $r9;

        specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void doDecode(org.apache.pdfbox.cos.COSName,int)>(r10, i1);

        i1 = i1 + 1;

        goto label3;

     label4:
        goto label6;

     label5:
        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown filter type:");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label6:
        return;
    }

    private void doDecode(org.apache.pdfbox.cos.COSName, int) throws java.io.IOException
    {
        java.io.BufferedInputStream r29, r30, $r33, $r36;
        byte $b3, $b5, $b8;
        org.apache.pdfbox.io.RandomAccess $r9, $r12, $r16, $r19, $r23;
        boolean z0, z1, z2, z3, z4;
        org.apache.pdfbox.filter.FilterManager $r1;
        org.apache.pdfbox.filter.Filter $r3;
        java.lang.Throwable $r24, $r26;
        long $l0, $l1, $l2, l6, l9;
        org.apache.pdfbox.io.RandomAccessFileOutputStream $r4, $r5, $r6, $r10, $r13, $r17, $r20, $r21, $r31, $r34, $r37;
        int i4, i7, i10, $i11;
        org.apache.pdfbox.cos.COSStream r0;
        org.apache.pdfbox.cos.COSName r2;
        org.apache.pdfbox.io.RandomAccessFileInputStream $r32, $r35;
        java.io.IOException $r25, $r27, r28;

        r0 := @this: org.apache.pdfbox.cos.COSStream;

        r2 := @parameter0: org.apache.pdfbox.cos.COSName;

        i4 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.filter.FilterManager getFilterManager()>();

        $r3 = virtualinvoke $r1.<org.apache.pdfbox.filter.FilterManager: org.apache.pdfbox.filter.Filter getFilter(org.apache.pdfbox.cos.COSName)>(r2);

        z0 = 0;

        z4 = 0;

        z3 = 0;

        z2 = 0;

        z1 = 0;

        r28 = null;

        $r4 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream>;

        $l0 = virtualinvoke $r4.<org.apache.pdfbox.io.RandomAccessFileOutputStream: long getPosition()>();

        $r5 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream>;

        $l1 = virtualinvoke $r5.<org.apache.pdfbox.io.RandomAccessFileOutputStream: long getLength()>();

        l6 = $l1;

        $r6 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream>;

        $l2 = virtualinvoke $r6.<org.apache.pdfbox.io.RandomAccessFileOutputStream: long getLengthWritten()>();

        $b3 = $l1 cmp 0L;

        if $b3 != 0 goto label01;

        $b5 = $l2 cmp 0L;

        if $b5 != 0 goto label01;

        $r21 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream>;

        staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r21);

        $r31 = new org.apache.pdfbox.io.RandomAccessFileOutputStream;

        $r23 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess file>;

        specialinvoke $r31.<org.apache.pdfbox.io.RandomAccessFileOutputStream: void <init>(org.apache.pdfbox.io.RandomAccess)>($r23);

        r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream> = $r31;

        z0 = 1;

        z2 = 1;

        goto label21;

     label01:
        i7 = 0;

     label02:
        $b8 = l6 cmp 0L;

        $i11 = (int) $b8;

        if $i11 <= 0 goto label11;

        if z3 != 0 goto label11;

        if i7 >= 5 goto label11;

        r29 = null;

     label03:
        $r33 = new java.io.BufferedInputStream;

        $r32 = new org.apache.pdfbox.io.RandomAccessFileInputStream;

        $r16 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess file>;

        specialinvoke $r32.<org.apache.pdfbox.io.RandomAccessFileInputStream: void <init>(org.apache.pdfbox.io.RandomAccess,long,long)>($r16, $l0, l6);

        specialinvoke $r33.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r32, 16384);

        r29 = $r33;

        $r17 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream>;

        staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r17);

        $r34 = new org.apache.pdfbox.io.RandomAccessFileOutputStream;

        $r19 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess file>;

        specialinvoke $r34.<org.apache.pdfbox.io.RandomAccessFileOutputStream: void <init>(org.apache.pdfbox.io.RandomAccess)>($r19);

        r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream> = $r34;

        $r20 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream>;

        interfaceinvoke $r3.<org.apache.pdfbox.filter.Filter: void decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)>($r33, $r20, r0, i4);

        z0 = 1;

        z4 = 1;

        z3 = 1;

        z2 = 1;

        z1 = 1;

     label04:
        goto label23;

     label05:
        goto label10;

     label06:
        $r27 := @caughtexception;

        l6 = l6 - 1L;

        r28 = $r27;

        goto label24;

     label07:
        goto label10;

     label08:
        $r26 := @caughtexception;

        goto label25;

     label09:
        throw $r26;

     label10:
        i7 = i7 + 1;

        goto label02;

     label11:
        if z4 != 0 goto label21;

        l9 = $l2;

        i10 = 0;

     label12:
        if z1 != 0 goto label21;

        if i10 >= 5 goto label21;

        r30 = null;

     label13:
        $r36 = new java.io.BufferedInputStream;

        $r35 = new org.apache.pdfbox.io.RandomAccessFileInputStream;

        $r9 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess file>;

        specialinvoke $r35.<org.apache.pdfbox.io.RandomAccessFileInputStream: void <init>(org.apache.pdfbox.io.RandomAccess,long,long)>($r9, $l0, l9);

        specialinvoke $r36.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r35, 16384);

        r30 = $r36;

        $r10 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream>;

        staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r10);

        $r37 = new org.apache.pdfbox.io.RandomAccessFileOutputStream;

        $r12 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess file>;

        specialinvoke $r37.<org.apache.pdfbox.io.RandomAccessFileOutputStream: void <init>(org.apache.pdfbox.io.RandomAccess)>($r12);

        r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream> = $r37;

        $r13 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream>;

        interfaceinvoke $r3.<org.apache.pdfbox.filter.Filter: void decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)>($r36, $r13, r0, i4);

        z0 = 1;

        z2 = 1;

        z1 = 1;

     label14:
        goto label26;

     label15:
        goto label20;

     label16:
        $r25 := @caughtexception;

        l9 = l9 - 1L;

        r28 = $r25;

        goto label27;

     label17:
        goto label20;

     label18:
        $r24 := @caughtexception;

        goto label28;

     label19:
        throw $r24;

     label20:
        i10 = i10 + 1;

        goto label12;

     label21:
        if z2 != 0 goto label22;

        throw r28;

     label22:
        return;

     label23:
        staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.InputStream)>($r33);

        goto label05;

     label24:
        staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.InputStream)>(r29);

        goto label07;

     label25:
        staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.InputStream)>(r29);

        goto label09;

     label26:
        staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.InputStream)>($r36);

        goto label15;

     label27:
        staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.InputStream)>(r30);

        goto label17;

     label28:
        staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.InputStream)>(r30);

        goto label19;

        catch java.io.IOException from label03 to label04 with label06;
        catch java.lang.Throwable from label03 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.io.IOException from label13 to label14 with label16;
        catch java.lang.Throwable from label13 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    private void doEncode() throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSName r5, $r6;
        org.apache.pdfbox.cos.COSArray r3;
        org.apache.pdfbox.io.RandomAccessFileOutputStream $r1;
        org.apache.pdfbox.cos.COSBase $r2, $r4;
        int $i0, i1, $i3;
        org.apache.pdfbox.cos.COSStream r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.pdfbox.cos.COSStream;

        $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream>;

        r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream> = $r1;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getFilters()>();

        if $r2 != null goto label1;

        goto label4;

     label1:
        $z0 = $r2 instanceof org.apache.pdfbox.cos.COSName;

        if $z0 == 0 goto label2;

        $r6 = (org.apache.pdfbox.cos.COSName) $r2;

        specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void doEncode(org.apache.pdfbox.cos.COSName,int)>($r6, 0);

        goto label4;

     label2:
        $z1 = $r2 instanceof org.apache.pdfbox.cos.COSArray;

        if $z1 == 0 goto label4;

        r3 = (org.apache.pdfbox.cos.COSArray) $r2;

        $i0 = virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: int size()>();

        i1 = $i0 - 1;

     label3:
        if i1 < 0 goto label4;

        $r4 = virtualinvoke r3.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(i1);

        r5 = (org.apache.pdfbox.cos.COSName) $r4;

        specialinvoke r0.<org.apache.pdfbox.cos.COSStream: void doEncode(org.apache.pdfbox.cos.COSName,int)>(r5, i1);

        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label3;

     label4:
        return;
    }

    private void doEncode(org.apache.pdfbox.cos.COSName, int) throws java.io.IOException
    {
        java.io.BufferedInputStream $r4;
        long $l0, $l1;
        org.apache.pdfbox.io.RandomAccessFileOutputStream $r6, $r8, $r9, $r10, $r12;
        org.apache.pdfbox.io.RandomAccess $r7, $r11;
        int i2;
        org.apache.pdfbox.cos.COSStream r0;
        org.apache.pdfbox.cos.COSName r2;
        org.apache.pdfbox.filter.FilterManager $r1;
        org.apache.pdfbox.io.RandomAccessFileInputStream $r5;
        org.apache.pdfbox.filter.Filter $r3;

        r0 := @this: org.apache.pdfbox.cos.COSStream;

        r2 := @parameter0: org.apache.pdfbox.cos.COSName;

        i2 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.filter.FilterManager getFilterManager()>();

        $r3 = virtualinvoke $r1.<org.apache.pdfbox.filter.FilterManager: org.apache.pdfbox.filter.Filter getFilter(org.apache.pdfbox.cos.COSName)>(r2);

        $r4 = new java.io.BufferedInputStream;

        $r5 = new org.apache.pdfbox.io.RandomAccessFileInputStream;

        $r7 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess file>;

        $r6 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream>;

        $l0 = virtualinvoke $r6.<org.apache.pdfbox.io.RandomAccessFileOutputStream: long getPosition()>();

        $r8 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream>;

        $l1 = virtualinvoke $r8.<org.apache.pdfbox.io.RandomAccessFileOutputStream: long getLength()>();

        specialinvoke $r5.<org.apache.pdfbox.io.RandomAccessFileInputStream: void <init>(org.apache.pdfbox.io.RandomAccess,long,long)>($r7, $l0, $l1);

        specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r5, 16384);

        $r9 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream>;

        staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r9);

        $r10 = new org.apache.pdfbox.io.RandomAccessFileOutputStream;

        $r11 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess file>;

        specialinvoke $r10.<org.apache.pdfbox.io.RandomAccessFileOutputStream: void <init>(org.apache.pdfbox.io.RandomAccess)>($r11);

        r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream> = $r10;

        $r12 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream>;

        interfaceinvoke $r3.<org.apache.pdfbox.filter.Filter: void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)>($r4, $r12, r0, i2);

        staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.InputStream)>($r4);

        return;
    }

    public org.apache.pdfbox.cos.COSBase getFilters()
    {
        org.apache.pdfbox.cos.COSName $r1;
        org.apache.pdfbox.cos.COSStream r0;
        org.apache.pdfbox.cos.COSBase $r2;

        r0 := @this: org.apache.pdfbox.cos.COSStream;

        $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FILTER>;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1);

        return $r2;
    }

    public java.io.OutputStream createFilteredStream() throws java.io.IOException
    {
        org.apache.pdfbox.io.RandomAccessFileOutputStream $r1, $r2, $r3, $r6;
        org.apache.pdfbox.io.RandomAccess $r4;
        org.apache.pdfbox.cos.COSStream r0;
        java.io.BufferedOutputStream $r5;

        r0 := @this: org.apache.pdfbox.cos.COSStream;

        $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream>;

        staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r1);

        r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream> = null;

        $r2 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream>;

        staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r2);

        $r3 = new org.apache.pdfbox.io.RandomAccessFileOutputStream;

        $r4 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess file>;

        specialinvoke $r3.<org.apache.pdfbox.io.RandomAccessFileOutputStream: void <init>(org.apache.pdfbox.io.RandomAccess)>($r4);

        r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream> = $r3;

        $r5 = new java.io.BufferedOutputStream;

        $r6 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream>;

        specialinvoke $r5.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r6, 16384);

        return $r5;
    }

    public java.io.OutputStream createFilteredStream(org.apache.pdfbox.cos.COSBase) throws java.io.IOException
    {
        java.io.BufferedOutputStream $r7;
        org.apache.pdfbox.io.RandomAccessFileOutputStream $r1, $r2, $r3, $r6, $r8;
        org.apache.pdfbox.cos.COSBase r5;
        org.apache.pdfbox.io.RandomAccess $r4;
        org.apache.pdfbox.cos.COSStream r0;

        r0 := @this: org.apache.pdfbox.cos.COSStream;

        r5 := @parameter0: org.apache.pdfbox.cos.COSBase;

        $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream>;

        staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r1);

        r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream> = null;

        $r2 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream>;

        staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r2);

        $r3 = new org.apache.pdfbox.io.RandomAccessFileOutputStream;

        $r4 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess file>;

        specialinvoke $r3.<org.apache.pdfbox.io.RandomAccessFileOutputStream: void <init>(org.apache.pdfbox.io.RandomAccess)>($r4);

        r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream> = $r3;

        $r6 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream>;

        virtualinvoke $r6.<org.apache.pdfbox.io.RandomAccessFileOutputStream: void setExpectedLength(org.apache.pdfbox.cos.COSBase)>(r5);

        $r7 = new java.io.BufferedOutputStream;

        $r8 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream>;

        specialinvoke $r7.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r8, 16384);

        return $r7;
    }

    public void setFilters(org.apache.pdfbox.cos.COSBase) throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSName $r2;
        org.apache.pdfbox.io.RandomAccessFileOutputStream $r3;
        org.apache.pdfbox.cos.COSBase r1;
        org.apache.pdfbox.cos.COSStream r0;

        r0 := @this: org.apache.pdfbox.cos.COSStream;

        r1 := @parameter0: org.apache.pdfbox.cos.COSBase;

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FILTER>;

        virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r2, r1);

        $r3 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream>;

        staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r3);

        r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream> = null;

        return;
    }

    public java.io.OutputStream createUnfilteredStream() throws java.io.IOException
    {
        org.apache.pdfbox.io.RandomAccessFileOutputStream $r1, $r2, $r3, $r6;
        org.apache.pdfbox.io.RandomAccess $r4;
        org.apache.pdfbox.cos.COSStream r0;
        java.io.BufferedOutputStream $r5;

        r0 := @this: org.apache.pdfbox.cos.COSStream;

        $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream>;

        staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r1);

        r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream> = null;

        $r2 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream>;

        staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r2);

        $r3 = new org.apache.pdfbox.io.RandomAccessFileOutputStream;

        $r4 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess file>;

        specialinvoke $r3.<org.apache.pdfbox.io.RandomAccessFileOutputStream: void <init>(org.apache.pdfbox.io.RandomAccess)>($r4);

        r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream> = $r3;

        $r5 = new java.io.BufferedOutputStream;

        $r6 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream>;

        specialinvoke $r5.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r6, 16384);

        return $r5;
    }

    public void close()
    {
        java.io.IOException $r7;
        org.apache.pdfbox.io.RandomAccessFileOutputStream $r2, $r3, $r4, $r5;
        org.apache.pdfbox.io.RandomAccess $r1, $r6;
        org.apache.commons.logging.Log $r8;
        org.apache.pdfbox.cos.COSStream r0;

        r0 := @this: org.apache.pdfbox.cos.COSStream;

     label1:
        $r1 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess file>;

        if $r1 == null goto label2;

        $r6 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess file>;

        interfaceinvoke $r6.<org.apache.pdfbox.io.RandomAccess: void close()>();

        r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccess file> = null;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = <org.apache.pdfbox.cos.COSStream: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("Exception occured when closing the file.", $r7);

     label4:
        $r2 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream>;

        if $r2 == null goto label5;

        $r5 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream filteredStream>;

        staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r5);

     label5:
        $r3 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream>;

        if $r3 == null goto label6;

        $r4 = r0.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.io.RandomAccessFileOutputStream unFilteredStream>;

        staticinvoke <org.apache.pdfbox.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r4);

     label6:
        virtualinvoke r0.<org.apache.pdfbox.cos.COSStream: void clear()>();

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        <org.apache.pdfbox.cos.COSStream: int BUFFER_SIZE> = 16384;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/pdfbox/cos/COSStream;");

        <org.apache.pdfbox.cos.COSStream: org.apache.commons.logging.Log LOG> = $r0;

        return;
    }
}
