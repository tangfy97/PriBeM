public class org.apache.poi.ss.util.SheetUtil extends java.lang.Object
{
    private static final char defaultChar;
    private static final double fontHeightMultiple;
    private static final org.apache.poi.ss.usermodel.FormulaEvaluator dummyEvaluator;
    private static final java.awt.font.FontRenderContext fontRenderContext;

    public void <init>()
    {
        org.apache.poi.ss.util.SheetUtil r0;

        r0 := @this: org.apache.poi.ss.util.SheetUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double getCellWidth(org.apache.poi.ss.usermodel.Cell, int, org.apache.poi.ss.usermodel.DataFormatter, boolean)
    {
        java.awt.geom.Rectangle2D $r13, $r36;
        org.apache.poi.ss.usermodel.Sheet $r0;
        java.awt.geom.AffineTransform $r15, $r16, $r17, $r38, $r39, $r40;
        org.apache.poi.ss.usermodel.FormulaEvaluator $r23;
        java.lang.Exception $r45;
        java.lang.StringBuilder $r5, $r6, $r7, $r27, $r29, $r30;
        org.apache.poi.ss.usermodel.CellStyle $r3, $r14, $r20, $r37, $r43;
        java.awt.font.TextLayout $r10, $r33;
        short $s3, $s5, $s7, $s8, $s9, $s13, $s14, $s15, $s16;
        org.apache.poi.ss.usermodel.Font $r4;
        java.lang.String $r8, $r21, $r25, $r28, $r31, r47;
        org.apache.poi.ss.usermodel.Workbook $r1;
        java.awt.font.FontRenderContext $r12, $r35;
        org.apache.poi.ss.usermodel.DataFormatter r22;
        org.apache.poi.ss.usermodel.Cell r46;
        boolean $z0, $z1, z2;
        java.awt.Shape $r18, $r41;
        org.apache.poi.ss.util.CellRangeAddress $r44;
        org.apache.poi.ss.usermodel.RichTextString $r24;
        java.text.AttributedString $r9, $r32;
        java.text.AttributedCharacterIterator $r11, $r34;
        java.awt.Rectangle $r19, $r42;
        java.lang.String[] $r26;
        int $i0, $i1, $i2, $i4, i6, $i10, $i11, $i12, $i17, $i18, $i19, $i20, $i21, i22, i23, i24, i25;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, d37;
        org.apache.poi.ss.usermodel.Row $r2;

        r46 := @parameter0: org.apache.poi.ss.usermodel.Cell;

        i6 := @parameter1: int;

        r22 := @parameter2: org.apache.poi.ss.usermodel.DataFormatter;

        z2 := @parameter3: boolean;

        $r0 = interfaceinvoke r46.<org.apache.poi.ss.usermodel.Cell: org.apache.poi.ss.usermodel.Sheet getSheet()>();

        $r1 = interfaceinvoke $r0.<org.apache.poi.ss.usermodel.Sheet: org.apache.poi.ss.usermodel.Workbook getWorkbook()>();

        $r2 = interfaceinvoke r46.<org.apache.poi.ss.usermodel.Cell: org.apache.poi.ss.usermodel.Row getRow()>();

        $i0 = interfaceinvoke r46.<org.apache.poi.ss.usermodel.Cell: int getColumnIndex()>();

        i22 = 1;

        i23 = 0;

     label01:
        $i1 = interfaceinvoke $r0.<org.apache.poi.ss.usermodel.Sheet: int getNumMergedRegions()>();

        if i23 >= $i1 goto label04;

        $r44 = interfaceinvoke $r0.<org.apache.poi.ss.usermodel.Sheet: org.apache.poi.ss.util.CellRangeAddress getMergedRegion(int)>(i23);

        $i17 = interfaceinvoke $r2.<org.apache.poi.ss.usermodel.Row: int getRowNum()>();

        $z1 = staticinvoke <org.apache.poi.ss.util.SheetUtil: boolean containsCell(org.apache.poi.ss.util.CellRangeAddress,int,int)>($r44, $i17, $i0);

        if $z1 == 0 goto label03;

        if z2 != 0 goto label02;

        return -1.0;

     label02:
        $i18 = virtualinvoke $r44.<org.apache.poi.ss.util.CellRangeAddress: int getFirstColumn()>();

        r46 = interfaceinvoke $r2.<org.apache.poi.ss.usermodel.Row: org.apache.poi.ss.usermodel.Cell getCell(int)>($i18);

        $i19 = virtualinvoke $r44.<org.apache.poi.ss.util.CellRangeAddress: int getLastColumn()>();

        $i20 = 1 + $i19;

        $i21 = virtualinvoke $r44.<org.apache.poi.ss.util.CellRangeAddress: int getFirstColumn()>();

        i22 = $i20 - $i21;

     label03:
        i23 = i23 + 1;

        goto label01;

     label04:
        $r3 = interfaceinvoke r46.<org.apache.poi.ss.usermodel.Cell: org.apache.poi.ss.usermodel.CellStyle getCellStyle()>();

        $i2 = interfaceinvoke r46.<org.apache.poi.ss.usermodel.Cell: int getCellType()>();

        i24 = $i2;

        if $i2 != 2 goto label05;

        i24 = interfaceinvoke r46.<org.apache.poi.ss.usermodel.Cell: int getCachedFormulaResultType()>();

     label05:
        $s3 = interfaceinvoke $r3.<org.apache.poi.ss.usermodel.CellStyle: short getFontIndex()>();

        $r4 = interfaceinvoke $r1.<org.apache.poi.ss.usermodel.Workbook: org.apache.poi.ss.usermodel.Font getFontAt(short)>($s3);

        d37 = -1.0;

        if i24 != 1 goto label11;

        $r24 = interfaceinvoke r46.<org.apache.poi.ss.usermodel.Cell: org.apache.poi.ss.usermodel.RichTextString getRichStringCellValue()>();

        $r25 = interfaceinvoke $r24.<org.apache.poi.ss.usermodel.RichTextString: java.lang.String getString()>();

        $r26 = virtualinvoke $r25.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\n");

        i25 = 0;

     label06:
        $i10 = lengthof $r26;

        if i25 >= $i10 goto label10;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = $r26[i25];

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r32 = new java.text.AttributedString;

        specialinvoke $r32.<java.text.AttributedString: void <init>(java.lang.String)>($r31);

        $i11 = virtualinvoke $r31.<java.lang.String: int length()>();

        staticinvoke <org.apache.poi.ss.util.SheetUtil: void copyAttributes(org.apache.poi.ss.usermodel.Font,java.text.AttributedString,int,int)>($r4, $r32, 0, $i11);

        $i12 = interfaceinvoke $r24.<org.apache.poi.ss.usermodel.RichTextString: int numFormattingRuns()>();

        if $i12 <= 0 goto label07;

     label07:
        $r33 = new java.awt.font.TextLayout;

        $r34 = virtualinvoke $r32.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>();

        $r35 = <org.apache.poi.ss.util.SheetUtil: java.awt.font.FontRenderContext fontRenderContext>;

        specialinvoke $r33.<java.awt.font.TextLayout: void <init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext)>($r34, $r35);

        $s13 = interfaceinvoke $r3.<org.apache.poi.ss.usermodel.CellStyle: short getRotation()>();

        if $s13 == 0 goto label08;

        $r38 = new java.awt.geom.AffineTransform;

        specialinvoke $r38.<java.awt.geom.AffineTransform: void <init>()>();

        $s15 = interfaceinvoke $r3.<org.apache.poi.ss.usermodel.CellStyle: short getRotation()>();

        $d25 = (double) $s15;

        $d26 = $d25 * 2.0;

        $d27 = $d26 * 3.141592653589793;

        $d28 = $d27 / 360.0;

        $r39 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double)>($d28);

        virtualinvoke $r38.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>($r39);

        $r40 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>(1.0, 2.0);

        virtualinvoke $r38.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>($r40);

        $r41 = virtualinvoke $r33.<java.awt.font.TextLayout: java.awt.Shape getOutline(java.awt.geom.AffineTransform)>($r38);

        $r42 = interfaceinvoke $r41.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        $d29 = virtualinvoke $r42.<java.awt.Rectangle: double getWidth()>();

        $d30 = (double) i22;

        $d32 = $d29 / $d30;

        $d31 = (double) i6;

        $d33 = $d32 / $d31;

        $r43 = interfaceinvoke r46.<org.apache.poi.ss.usermodel.Cell: org.apache.poi.ss.usermodel.CellStyle getCellStyle()>();

        $s16 = interfaceinvoke $r43.<org.apache.poi.ss.usermodel.CellStyle: short getIndention()>();

        $d34 = (double) $s16;

        $d35 = $d33 + $d34;

        d37 = staticinvoke <java.lang.Math: double max(double,double)>(d37, $d35);

        goto label09;

     label08:
        $r36 = virtualinvoke $r33.<java.awt.font.TextLayout: java.awt.geom.Rectangle2D getBounds()>();

        $d18 = virtualinvoke $r36.<java.awt.geom.Rectangle2D: double getWidth()>();

        $d19 = (double) i22;

        $d21 = $d18 / $d19;

        $d20 = (double) i6;

        $d22 = $d21 / $d20;

        $r37 = interfaceinvoke r46.<org.apache.poi.ss.usermodel.Cell: org.apache.poi.ss.usermodel.CellStyle getCellStyle()>();

        $s14 = interfaceinvoke $r37.<org.apache.poi.ss.usermodel.CellStyle: short getIndention()>();

        $d23 = (double) $s14;

        $d24 = $d22 + $d23;

        d37 = staticinvoke <java.lang.Math: double max(double,double)>(d37, $d24);

     label09:
        i25 = i25 + 1;

        goto label06;

     label10:
        goto label18;

     label11:
        r47 = null;

        if i24 != 0 goto label15;

     label12:
        $r23 = <org.apache.poi.ss.util.SheetUtil: org.apache.poi.ss.usermodel.FormulaEvaluator dummyEvaluator>;

        r47 = virtualinvoke r22.<org.apache.poi.ss.usermodel.DataFormatter: java.lang.String formatCellValue(org.apache.poi.ss.usermodel.Cell,org.apache.poi.ss.usermodel.FormulaEvaluator)>(r46, $r23);

     label13:
        goto label16;

     label14:
        $r45 := @caughtexception;

        $d36 = interfaceinvoke r46.<org.apache.poi.ss.usermodel.Cell: double getNumericCellValue()>();

        r47 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d36);

        goto label16;

     label15:
        if i24 != 4 goto label16;

        $z0 = interfaceinvoke r46.<org.apache.poi.ss.usermodel.Cell: boolean getBooleanCellValue()>();

        $r21 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0);

        r47 = virtualinvoke $r21.<java.lang.String: java.lang.String toUpperCase()>();

     label16:
        if r47 == null goto label18;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r47);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = new java.text.AttributedString;

        specialinvoke $r9.<java.text.AttributedString: void <init>(java.lang.String)>($r8);

        $i4 = virtualinvoke $r8.<java.lang.String: int length()>();

        staticinvoke <org.apache.poi.ss.util.SheetUtil: void copyAttributes(org.apache.poi.ss.usermodel.Font,java.text.AttributedString,int,int)>($r4, $r9, 0, $i4);

        $r10 = new java.awt.font.TextLayout;

        $r11 = virtualinvoke $r9.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>();

        $r12 = <org.apache.poi.ss.util.SheetUtil: java.awt.font.FontRenderContext fontRenderContext>;

        specialinvoke $r10.<java.awt.font.TextLayout: void <init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext)>($r11, $r12);

        $s5 = interfaceinvoke $r3.<org.apache.poi.ss.usermodel.CellStyle: short getRotation()>();

        if $s5 == 0 goto label17;

        $r15 = new java.awt.geom.AffineTransform;

        specialinvoke $r15.<java.awt.geom.AffineTransform: void <init>()>();

        $s8 = interfaceinvoke $r3.<org.apache.poi.ss.usermodel.CellStyle: short getRotation()>();

        $d7 = (double) $s8;

        $d8 = $d7 * 2.0;

        $d9 = $d8 * 3.141592653589793;

        $d10 = $d9 / 360.0;

        $r16 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double)>($d10);

        virtualinvoke $r15.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>($r16);

        $r17 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>(1.0, 2.0);

        virtualinvoke $r15.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>($r17);

        $r18 = virtualinvoke $r10.<java.awt.font.TextLayout: java.awt.Shape getOutline(java.awt.geom.AffineTransform)>($r15);

        $r19 = interfaceinvoke $r18.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        $d11 = virtualinvoke $r19.<java.awt.Rectangle: double getWidth()>();

        $d12 = (double) i22;

        $d14 = $d11 / $d12;

        $d13 = (double) i6;

        $d15 = $d14 / $d13;

        $r20 = interfaceinvoke r46.<org.apache.poi.ss.usermodel.Cell: org.apache.poi.ss.usermodel.CellStyle getCellStyle()>();

        $s9 = interfaceinvoke $r20.<org.apache.poi.ss.usermodel.CellStyle: short getIndention()>();

        $d16 = (double) $s9;

        $d17 = $d15 + $d16;

        d37 = staticinvoke <java.lang.Math: double max(double,double)>(-1.0, $d17);

        goto label18;

     label17:
        $r13 = virtualinvoke $r10.<java.awt.font.TextLayout: java.awt.geom.Rectangle2D getBounds()>();

        $d0 = virtualinvoke $r13.<java.awt.geom.Rectangle2D: double getWidth()>();

        $d1 = (double) i22;

        $d3 = $d0 / $d1;

        $d2 = (double) i6;

        $d4 = $d3 / $d2;

        $r14 = interfaceinvoke r46.<org.apache.poi.ss.usermodel.Cell: org.apache.poi.ss.usermodel.CellStyle getCellStyle()>();

        $s7 = interfaceinvoke $r14.<org.apache.poi.ss.usermodel.CellStyle: short getIndention()>();

        $d5 = (double) $s7;

        $d6 = $d4 + $d5;

        d37 = staticinvoke <java.lang.Math: double max(double,double)>(-1.0, $d6);

     label18:
        return d37;

        catch java.lang.Exception from label12 to label13 with label14;
    }

    public static double getColumnWidth(org.apache.poi.ss.usermodel.Sheet, int, boolean)
    {
        java.awt.font.TextLayout $r6;
        org.apache.poi.ss.usermodel.Font $r3;
        org.apache.poi.ss.usermodel.DataFormatter $r2;
        int i0, i1;
        org.apache.poi.ss.usermodel.Cell $r12;
        java.lang.String $r5;
        boolean z0, $z1;
        double $d0, d1;
        org.apache.poi.ss.usermodel.Sheet r0;
        java.util.Iterator $r9;
        java.text.AttributedString $r4;
        org.apache.poi.ss.usermodel.Workbook $r1;
        java.awt.font.FontRenderContext $r8;
        java.text.AttributedCharacterIterator $r7;
        float $f0;
        org.apache.poi.ss.usermodel.Row r11;
        java.lang.Object $r10;

        r0 := @parameter0: org.apache.poi.ss.usermodel.Sheet;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Sheet: org.apache.poi.ss.usermodel.Workbook getWorkbook()>();

        $r2 = new org.apache.poi.ss.usermodel.DataFormatter;

        specialinvoke $r2.<org.apache.poi.ss.usermodel.DataFormatter: void <init>()>();

        $r3 = interfaceinvoke $r1.<org.apache.poi.ss.usermodel.Workbook: org.apache.poi.ss.usermodel.Font getFontAt(short)>(0);

        $r4 = new java.text.AttributedString;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(48);

        specialinvoke $r4.<java.text.AttributedString: void <init>(java.lang.String)>($r5);

        staticinvoke <org.apache.poi.ss.util.SheetUtil: void copyAttributes(org.apache.poi.ss.usermodel.Font,java.text.AttributedString,int,int)>($r3, $r4, 0, 1);

        $r6 = new java.awt.font.TextLayout;

        $r7 = virtualinvoke $r4.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>();

        $r8 = <org.apache.poi.ss.util.SheetUtil: java.awt.font.FontRenderContext fontRenderContext>;

        specialinvoke $r6.<java.awt.font.TextLayout: void <init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext)>($r7, $r8);

        $f0 = virtualinvoke $r6.<java.awt.font.TextLayout: float getAdvance()>();

        i0 = (int) $f0;

        d1 = -1.0;

        $r9 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Sheet: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.apache.poi.ss.usermodel.Row) $r10;

        $r12 = interfaceinvoke r11.<org.apache.poi.ss.usermodel.Row: org.apache.poi.ss.usermodel.Cell getCell(int)>(i1);

        if $r12 != null goto label2;

        goto label1;

     label2:
        $d0 = staticinvoke <org.apache.poi.ss.util.SheetUtil: double getCellWidth(org.apache.poi.ss.usermodel.Cell,int,org.apache.poi.ss.usermodel.DataFormatter,boolean)>($r12, i0, $r2, z0);

        d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d0);

        goto label1;

     label3:
        return d1;
    }

    public static double getColumnWidth(org.apache.poi.ss.usermodel.Sheet, int, boolean, int, int)
    {
        java.awt.font.TextLayout $r6;
        org.apache.poi.ss.usermodel.Font $r3;
        org.apache.poi.ss.usermodel.DataFormatter $r2;
        int i0, i1, i2, i3, i4;
        org.apache.poi.ss.usermodel.Cell $r10;
        java.lang.String $r5;
        boolean z0;
        double $d0, d1;
        org.apache.poi.ss.usermodel.Sheet r0;
        java.text.AttributedString $r4;
        org.apache.poi.ss.usermodel.Workbook $r1;
        java.awt.font.FontRenderContext $r8;
        java.text.AttributedCharacterIterator $r7;
        float $f0;
        org.apache.poi.ss.usermodel.Row $r9;

        r0 := @parameter0: org.apache.poi.ss.usermodel.Sheet;

        i3 := @parameter1: int;

        z0 := @parameter2: boolean;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $r1 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Sheet: org.apache.poi.ss.usermodel.Workbook getWorkbook()>();

        $r2 = new org.apache.poi.ss.usermodel.DataFormatter;

        specialinvoke $r2.<org.apache.poi.ss.usermodel.DataFormatter: void <init>()>();

        $r3 = interfaceinvoke $r1.<org.apache.poi.ss.usermodel.Workbook: org.apache.poi.ss.usermodel.Font getFontAt(short)>(0);

        $r4 = new java.text.AttributedString;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(48);

        specialinvoke $r4.<java.text.AttributedString: void <init>(java.lang.String)>($r5);

        staticinvoke <org.apache.poi.ss.util.SheetUtil: void copyAttributes(org.apache.poi.ss.usermodel.Font,java.text.AttributedString,int,int)>($r3, $r4, 0, 1);

        $r6 = new java.awt.font.TextLayout;

        $r7 = virtualinvoke $r4.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>();

        $r8 = <org.apache.poi.ss.util.SheetUtil: java.awt.font.FontRenderContext fontRenderContext>;

        specialinvoke $r6.<java.awt.font.TextLayout: void <init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext)>($r7, $r8);

        $f0 = virtualinvoke $r6.<java.awt.font.TextLayout: float getAdvance()>();

        i0 = (int) $f0;

        d1 = -1.0;

        i4 = i1;

     label1:
        if i4 > i2 goto label4;

        $r9 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Sheet: org.apache.poi.ss.usermodel.Row getRow(int)>(i4);

        if $r9 == null goto label3;

        $r10 = interfaceinvoke $r9.<org.apache.poi.ss.usermodel.Row: org.apache.poi.ss.usermodel.Cell getCell(int)>(i3);

        if $r10 != null goto label2;

        goto label3;

     label2:
        $d0 = staticinvoke <org.apache.poi.ss.util.SheetUtil: double getCellWidth(org.apache.poi.ss.usermodel.Cell,int,org.apache.poi.ss.usermodel.DataFormatter,boolean)>($r10, i0, $r2, z0);

        d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d0);

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        return d1;
    }

    private static void copyAttributes(org.apache.poi.ss.usermodel.Font, java.text.AttributedString, int, int)
    {
        java.lang.Float $r5, $r8, $r10;
        java.awt.font.TextAttribute $r2, $r4, $r7, $r9, $r11;
        java.lang.Integer $r6;
        short $s2, $s3;
        org.apache.poi.ss.usermodel.Font r1;
        byte $b4;
        int i0, i1, $i5;
        java.lang.String $r3;
        boolean $z0;
        java.text.AttributedString r0;
        float $f0;

        r1 := @parameter0: org.apache.poi.ss.usermodel.Font;

        r0 := @parameter1: java.text.AttributedString;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r2 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute FAMILY>;

        $r3 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.Font: java.lang.String getFontName()>();

        virtualinvoke r0.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r2, $r3, i0, i1);

        $r4 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute SIZE>;

        $s2 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.Font: short getFontHeightInPoints()>();

        $f0 = (float) $s2;

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke r0.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object)>($r4, $r5);

        $s3 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.Font: short getBoldweight()>();

        $i5 = (int) $s3;

        if $i5 != 700 goto label1;

        $r11 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute WEIGHT>;

        $r10 = <java.awt.font.TextAttribute: java.lang.Float WEIGHT_BOLD>;

        virtualinvoke r0.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r11, $r10, i0, i1);

     label1:
        $z0 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.Font: boolean getItalic()>();

        if $z0 == 0 goto label2;

        $r9 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute POSTURE>;

        $r8 = <java.awt.font.TextAttribute: java.lang.Float POSTURE_OBLIQUE>;

        virtualinvoke r0.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r9, $r8, i0, i1);

     label2:
        $b4 = interfaceinvoke r1.<org.apache.poi.ss.usermodel.Font: byte getUnderline()>();

        if $b4 != 1 goto label3;

        $r7 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute UNDERLINE>;

        $r6 = <java.awt.font.TextAttribute: java.lang.Integer UNDERLINE_ON>;

        virtualinvoke r0.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r7, $r6, i0, i1);

     label3:
        return;
    }

    public static boolean containsCell(org.apache.poi.ss.util.CellRangeAddress, int, int)
    {
        org.apache.poi.ss.util.CellRangeAddress r0;
        int $i0, i1, $i2, $i3, i4, $i5;

        r0 := @parameter0: org.apache.poi.ss.util.CellRangeAddress;

        i1 := @parameter1: int;

        i4 := @parameter2: int;

        $i0 = virtualinvoke r0.<org.apache.poi.ss.util.CellRangeAddress: int getFirstRow()>();

        if $i0 > i1 goto label1;

        $i2 = virtualinvoke r0.<org.apache.poi.ss.util.CellRangeAddress: int getLastRow()>();

        if $i2 < i1 goto label1;

        $i3 = virtualinvoke r0.<org.apache.poi.ss.util.CellRangeAddress: int getFirstColumn()>();

        if $i3 > i4 goto label1;

        $i5 = virtualinvoke r0.<org.apache.poi.ss.util.CellRangeAddress: int getLastColumn()>();

        if $i5 < i4 goto label1;

        return 1;

     label1:
        return 0;
    }

    static void <clinit>()
    {
        java.awt.font.FontRenderContext $r1;
        org.apache.poi.ss.util.SheetUtil$1 $r0;

        <org.apache.poi.ss.util.SheetUtil: double fontHeightMultiple> = 2.0;

        <org.apache.poi.ss.util.SheetUtil: char defaultChar> = 48;

        $r0 = new org.apache.poi.ss.util.SheetUtil$1;

        specialinvoke $r0.<org.apache.poi.ss.util.SheetUtil$1: void <init>()>();

        <org.apache.poi.ss.util.SheetUtil: org.apache.poi.ss.usermodel.FormulaEvaluator dummyEvaluator> = $r0;

        $r1 = new java.awt.font.FontRenderContext;

        specialinvoke $r1.<java.awt.font.FontRenderContext: void <init>(java.awt.geom.AffineTransform,boolean,boolean)>(null, 1, 1);

        <org.apache.poi.ss.util.SheetUtil: java.awt.font.FontRenderContext fontRenderContext> = $r1;

        return;
    }
}
