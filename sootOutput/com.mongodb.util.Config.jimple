public class com.mongodb.util.Config extends java.util.Properties
{
    static java.lang.String[] _placesToLook;
    private static java.lang.String _configFile;
    private static final com.mongodb.util.Config INSTANCE;

    public static com.mongodb.util.Config get()
    {
        com.mongodb.util.Config $r0;

        $r0 = <com.mongodb.util.Config: com.mongodb.util.Config INSTANCE>;

        return $r0;
    }

    public static java.lang.String getInternalDomain()
    {
        com.mongodb.util.Config $r0;
        java.lang.String $r1;

        $r0 = staticinvoke <com.mongodb.util.Config: com.mongodb.util.Config get()>();

        $r1 = virtualinvoke $r0.<com.mongodb.util.Config: java.lang.String getProperty(java.lang.String,java.lang.String)>("internalDomain", "10gen.cc");

        return $r1;
    }

    public static java.lang.String getExternalDomain()
    {
        com.mongodb.util.Config $r0;
        java.lang.String $r1;

        $r0 = staticinvoke <com.mongodb.util.Config: com.mongodb.util.Config get()>();

        $r1 = virtualinvoke $r0.<com.mongodb.util.Config: java.lang.String getProperty(java.lang.String,java.lang.String)>("externalDomain", "10gen.com");

        return $r1;
    }

    public static java.lang.String getDataRoot()
    {
        com.mongodb.util.Config $r0;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r1, $r2, r6;
        boolean $z0;

        $r0 = staticinvoke <com.mongodb.util.Config: com.mongodb.util.Config get()>();

        $r1 = virtualinvoke $r0.<com.mongodb.util.Config: java.lang.String getTryEnvFirst(java.lang.String,java.lang.String)>("BASE", "/data/");

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        r6 = $r2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0 != 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        return r6;
    }

    private void <init>()
    {
        java.lang.String[] r3;
        int i0, i1;
        java.lang.String r4, $r6, $r9, $r11, $r17, $r20, $r26;
        boolean $z0;
        java.io.PrintStream $r14, $r22;
        java.util.Properties $r1;
        java.io.File $r5;
        com.mongodb.util.Config r0;
        java.lang.StringBuilder $r7, $r8, $r10, $r13, $r15, $r16, $r18, $r19, $r21, $r23, $r24, $r25;
        java.lang.ClassLoader $r2;
        java.io.InputStream $r12;

        r0 := @this: com.mongodb.util.Config;

        $r1 = staticinvoke <java.lang.System: java.util.Properties getProperties()>();

        specialinvoke r0.<java.util.Properties: void <init>(java.util.Properties)>($r1);

        $r2 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

        r3 = <com.mongodb.util.Config: java.lang.String[] _placesToLook>;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r4 = r3[i1];

        $r5 = new java.io.File;

        $r6 = <com.mongodb.util.Config: java.lang.String _configFile>;

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r4, $r6);

        $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label2;

        $r22 = <java.lang.System: java.io.PrintStream out>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loading config file from [");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r26);

        specialinvoke r0.<com.mongodb.util.Config: void _load(java.io.File)>($r5);

        goto label4;

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r9 = <com.mongodb.util.Config: java.lang.String _configFile>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = virtualinvoke $r2.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>($r11);

        if $r12 == null goto label3;

        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loading config from [");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r17 = <com.mongodb.util.Config: java.lang.String _configFile>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r20);

        specialinvoke r0.<com.mongodb.util.Config: void _load(java.io.InputStream)>($r12);

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    private void _load(java.io.File)
    {
        java.io.PrintStream $r5;
        java.io.FileInputStream $r10;
        java.io.File r2;
        java.io.FileNotFoundException $r3;
        com.mongodb.util.Config r0;
        int $i1;
        java.lang.StringBuilder $r6, $r7, $r8, $r11;
        java.lang.String $r9;

        r0 := @this: com.mongodb.util.Config;

        r2 := @parameter0: java.io.File;

     label1:
        $r10 = new java.io.FileInputStream;

        specialinvoke $r10.<java.io.FileInputStream: void <init>(java.io.File)>(r2);

        specialinvoke r0.<com.mongodb.util.Config: void _load(java.io.InputStream)>($r10);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t find : ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but should be impossible b/c only called if it exists.  exiting");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r9);

        $i1 = (int) -4;

        staticinvoke <java.lang.System: void exit(int)>($i1);

     label4:
        return;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
    }

    private void _load(java.io.InputStream)
    {
        java.io.PrintStream $r4;
        java.io.IOException $r2;
        com.mongodb.util.Config r0;
        int $i1;
        java.lang.StringBuilder $r5, $r6, $r7, $r9;
        java.lang.String $r8;
        java.io.InputStream r1;

        r0 := @this: com.mongodb.util.Config;

        r1 := @parameter0: java.io.InputStream;

     label1:
        virtualinvoke r0.<com.mongodb.util.Config: void load(java.io.InputStream)>(r1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error reading config file from stream : ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  exiting...");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);

        $i1 = (int) -4;

        staticinvoke <java.lang.System: void exit(int)>($i1);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean getBoolean(java.lang.String)
    {
        com.mongodb.util.Config r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.mongodb.util.Config;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.mongodb.util.Config: boolean getBoolean(java.lang.String,boolean)>(r1, 0);

        return $z0;
    }

    public boolean getBoolean(java.lang.String, boolean)
    {
        com.mongodb.util.Config r0;
        java.lang.String r1, $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10;

        r0 := @this: com.mongodb.util.Config;

        r1 := @parameter0: java.lang.String;

        z10 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<com.mongodb.util.Config: java.lang.String getProperty(java.lang.String)>(r1);

        if $r2 != null goto label1;

        return z10;

     label1:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("t");

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("T");

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("y");

        if $z2 != 0 goto label2;

        $z3 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("Y");

        if $z3 != 0 goto label2;

        $z4 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("1");

        if $z4 == 0 goto label3;

     label2:
        return 1;

     label3:
        $z5 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("n");

        if $z5 != 0 goto label4;

        $z6 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("N");

        if $z6 != 0 goto label4;

        $z7 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("f");

        if $z7 != 0 goto label4;

        $z8 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("F");

        if $z8 != 0 goto label4;

        $z9 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("0");

        if $z9 == 0 goto label5;

     label4:
        return 0;

     label5:
        return z10;
    }

    public long getLong(java.lang.String, long)
    {
        com.mongodb.util.Config r0;
        int $i0;
        long $l1, l2;
        java.lang.String r1, $r2, $r3;

        r0 := @this: com.mongodb.util.Config;

        r1 := @parameter0: java.lang.String;

        l2 := @parameter1: long;

        $r2 = virtualinvoke r0.<com.mongodb.util.Config: java.lang.String getProperty(java.lang.String)>(r1);

        if $r2 != null goto label1;

        return l2;

     label1:
        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        return l2;

     label2:
        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r3);

        return $l1;
    }

    public java.lang.String getTryEnvFirst(java.lang.String, java.lang.String)
    {
        com.mongodb.util.Config r2;
        int $i0;
        java.lang.String r0, $r1, r3, $r4, $r5;

        r2 := @this: com.mongodb.util.Config;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>(r0);

        if $r1 == null goto label1;

        $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        return $r1;

     label1:
        $r4 = virtualinvoke r2.<com.mongodb.util.Config: java.lang.String getProperty(java.lang.String,java.lang.String)>(r0, r3);

        return $r4;
    }

    public java.lang.Object setProperty(java.lang.String, java.lang.String)
    {
        com.mongodb.util.Config r1;
        java.lang.RuntimeException $r0;
        java.lang.String r2, r3;

        r1 := @this: com.mongodb.util.Config;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("can\'t set something on config");

        throw $r0;
    }

    public java.lang.Object put(java.lang.String, java.lang.String)
    {
        com.mongodb.util.Config r1;
        java.lang.RuntimeException $r0;
        java.lang.String r2, r3;

        r1 := @this: com.mongodb.util.Config;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("can\'t set something on config");

        throw $r0;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;
        java.lang.String $r2, $r5, $r7, $r10, $r12, $r15;
        com.mongodb.util.Config $r16;
        java.lang.StringBuilder $r1, $r3, $r4, $r6, $r8, $r9, $r11, $r13, $r14;

        $r0 = newarray (java.lang.String)[6];

        $r0[0] = "./";

        $r0[1] = "conf";

        $r0[2] = "/etc/";

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("ED_HOME");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0[3] = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("ED_HOME");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/conf");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0[4] = $r10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("ED_HOME");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/etc");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0[5] = $r15;

        <com.mongodb.util.Config: java.lang.String[] _placesToLook> = $r0;

        <com.mongodb.util.Config: java.lang.String _configFile> = "10gen.properties";

        $r16 = new com.mongodb.util.Config;

        specialinvoke $r16.<com.mongodb.util.Config: void <init>()>();

        <com.mongodb.util.Config: com.mongodb.util.Config INSTANCE> = $r16;

        return;
    }
}
