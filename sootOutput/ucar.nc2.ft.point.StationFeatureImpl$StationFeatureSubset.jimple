class ucar.nc2.ft.point.StationFeatureImpl$StationFeatureSubset extends ucar.nc2.ft.point.StationFeatureImpl
{
    ucar.nc2.ft.point.StationFeatureImpl 'from';
    final ucar.nc2.ft.point.StationFeatureImpl this$0;

    void <init>(ucar.nc2.ft.point.StationFeatureImpl, ucar.nc2.ft.point.StationFeatureImpl, ucar.nc2.units.DateRange)
    {
        ucar.nc2.units.DateUnit $r3;
        ucar.unidata.geoloc.Station $r4;
        ucar.nc2.units.DateRange r5, $r6, $r7, $r8, $r9;
        int $i1;
        ucar.nc2.ft.point.StationFeatureImpl$StationFeatureSubset r0;
        ucar.nc2.ft.point.StationFeatureImpl r1, r2;

        r0 := @this: ucar.nc2.ft.point.StationFeatureImpl$StationFeatureSubset;

        r1 := @parameter0: ucar.nc2.ft.point.StationFeatureImpl;

        r2 := @parameter1: ucar.nc2.ft.point.StationFeatureImpl;

        r5 := @parameter2: ucar.nc2.units.DateRange;

        r0.<ucar.nc2.ft.point.StationFeatureImpl$StationFeatureSubset: ucar.nc2.ft.point.StationFeatureImpl this$0> = r1;

        $r4 = r2.<ucar.nc2.ft.point.StationFeatureImpl: ucar.unidata.geoloc.Station s>;

        $r3 = r2.<ucar.nc2.ft.point.StationFeatureImpl: ucar.nc2.units.DateUnit timeUnit>;

        $i1 = (int) -1;

        specialinvoke r0.<ucar.nc2.ft.point.StationFeatureImpl: void <init>(ucar.unidata.geoloc.Station,ucar.nc2.units.DateUnit,int)>($r4, $r3, $i1);

        r0.<ucar.nc2.ft.point.StationFeatureImpl$StationFeatureSubset: ucar.nc2.ft.point.StationFeatureImpl 'from'> = r2;

        if r5 != null goto label1;

        $r8 = r2.<ucar.nc2.ft.point.StationFeatureImpl: ucar.nc2.units.DateRange dateRange>;

        r0.<ucar.nc2.ft.point.StationFeatureImpl$StationFeatureSubset: ucar.nc2.units.DateRange dateRange> = $r8;

        goto label4;

     label1:
        $r6 = r2.<ucar.nc2.ft.point.StationFeatureImpl: ucar.nc2.units.DateRange dateRange>;

        if $r6 != null goto label2;

        $r9 = r5;

        goto label3;

     label2:
        $r7 = r2.<ucar.nc2.ft.point.StationFeatureImpl: ucar.nc2.units.DateRange dateRange>;

        $r9 = virtualinvoke $r7.<ucar.nc2.units.DateRange: ucar.nc2.units.DateRange intersect(ucar.nc2.units.DateRange)>(r5);

     label3:
        r0.<ucar.nc2.ft.point.StationFeatureImpl$StationFeatureSubset: ucar.nc2.units.DateRange dateRange> = $r9;

     label4:
        return;
    }

    public ucar.nc2.ft.PointFeatureIterator getPointFeatureIterator(int) throws java.io.IOException
    {
        ucar.nc2.ft.point.PointIteratorFiltered $r0;
        ucar.nc2.ft.PointFeatureIterator $r3;
        ucar.nc2.units.DateRange $r4;
        int i0;
        ucar.nc2.ft.point.StationFeatureImpl$StationFeatureSubset r1;
        ucar.nc2.ft.point.StationFeatureImpl $r2;

        r1 := @this: ucar.nc2.ft.point.StationFeatureImpl$StationFeatureSubset;

        i0 := @parameter0: int;

        $r0 = new ucar.nc2.ft.point.PointIteratorFiltered;

        $r2 = r1.<ucar.nc2.ft.point.StationFeatureImpl$StationFeatureSubset: ucar.nc2.ft.point.StationFeatureImpl 'from'>;

        $r3 = virtualinvoke $r2.<ucar.nc2.ft.point.StationFeatureImpl: ucar.nc2.ft.PointFeatureIterator getPointFeatureIterator(int)>(i0);

        $r4 = r1.<ucar.nc2.ft.point.StationFeatureImpl$StationFeatureSubset: ucar.nc2.units.DateRange dateRange>;

        specialinvoke $r0.<ucar.nc2.ft.point.PointIteratorFiltered: void <init>(ucar.nc2.ft.PointFeatureIterator,ucar.unidata.geoloc.LatLonRect,ucar.nc2.units.DateRange)>($r3, null, $r4);

        return $r0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        int $i0;
        ucar.unidata.geoloc.Station $r2;
        java.lang.Object r1;
        ucar.nc2.ft.point.StationFeatureImpl$StationFeatureSubset r0;

        r0 := @this: ucar.nc2.ft.point.StationFeatureImpl$StationFeatureSubset;

        r1 := @parameter0: java.lang.Object;

        $r2 = (ucar.unidata.geoloc.Station) r1;

        $i0 = specialinvoke r0.<ucar.nc2.ft.point.StationFeatureImpl: int compareTo(ucar.unidata.geoloc.Station)>($r2);

        return $i0;
    }
}
