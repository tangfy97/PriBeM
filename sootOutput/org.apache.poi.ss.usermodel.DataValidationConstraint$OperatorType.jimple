public final class org.apache.poi.ss.usermodel.DataValidationConstraint$OperatorType extends java.lang.Object
{
    public static final int BETWEEN;
    public static final int NOT_BETWEEN;
    public static final int EQUAL;
    public static final int NOT_EQUAL;
    public static final int GREATER_THAN;
    public static final int LESS_THAN;
    public static final int GREATER_OR_EQUAL;
    public static final int LESS_OR_EQUAL;
    public static final int IGNORED;

    private void <init>()
    {
        org.apache.poi.ss.usermodel.DataValidationConstraint$OperatorType r0;

        r0 := @this: org.apache.poi.ss.usermodel.DataValidationConstraint$OperatorType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void validateSecondArg(int, java.lang.String)
    {
        int i0;
        java.lang.String r0;
        java.lang.IllegalArgumentException $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        lookupswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label1;
            default: goto label2;
        };

     label1:
        if r0 != null goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("expr2 must be supplied for \'between\' comparisons");

        throw $r1;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.poi.ss.usermodel.DataValidationConstraint$OperatorType: int IGNORED> = 0;

        <org.apache.poi.ss.usermodel.DataValidationConstraint$OperatorType: int LESS_OR_EQUAL> = 7;

        <org.apache.poi.ss.usermodel.DataValidationConstraint$OperatorType: int GREATER_OR_EQUAL> = 6;

        <org.apache.poi.ss.usermodel.DataValidationConstraint$OperatorType: int LESS_THAN> = 5;

        <org.apache.poi.ss.usermodel.DataValidationConstraint$OperatorType: int GREATER_THAN> = 4;

        <org.apache.poi.ss.usermodel.DataValidationConstraint$OperatorType: int NOT_EQUAL> = 3;

        <org.apache.poi.ss.usermodel.DataValidationConstraint$OperatorType: int EQUAL> = 2;

        <org.apache.poi.ss.usermodel.DataValidationConstraint$OperatorType: int NOT_BETWEEN> = 1;

        <org.apache.poi.ss.usermodel.DataValidationConstraint$OperatorType: int BETWEEN> = 0;

        return;
    }
}
