public class com.google.common.collect.ImmutableSortedMap extends com.google.common.collect.ImmutableSortedMapFauxverideShim implements java.util.SortedMap
{
    private static final java.util.Comparator NATURAL_ORDER;
    private static final com.google.common.collect.ImmutableSortedMap NATURAL_EMPTY_MAP;
    final transient com.google.common.collect.ImmutableList entries;
    private final transient java.util.Comparator comparator;
    final transient com.google.common.base.Function keyFunction;
    private transient com.google.common.collect.ImmutableSet entrySet;
    private transient com.google.common.collect.ImmutableSortedSet keySet;
    private transient com.google.common.collect.ImmutableCollection values;
    private static final long serialVersionUID;

    public static com.google.common.collect.ImmutableSortedMap of()
    {
        com.google.common.collect.ImmutableSortedMap $r0;

        $r0 = <com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedMap NATURAL_EMPTY_MAP>;

        return $r0;
    }

    private static com.google.common.collect.ImmutableSortedMap emptyMap(java.util.Comparator)
    {
        com.google.common.collect.ImmutableList $r3;
        java.util.Comparator r0, $r1;
        com.google.common.collect.ImmutableSortedMap $r2, $r4;
        boolean $z0;

        r0 := @parameter0: java.util.Comparator;

        $r1 = <com.google.common.collect.ImmutableSortedMap: java.util.Comparator NATURAL_ORDER>;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r4 = <com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedMap NATURAL_EMPTY_MAP>;

        return $r4;

     label1:
        $r2 = new com.google.common.collect.ImmutableSortedMap;

        $r3 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        specialinvoke $r2.<com.google.common.collect.ImmutableSortedMap: void <init>(com.google.common.collect.ImmutableList,java.util.Comparator)>($r3, r0);

        return $r2;
    }

    public static com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable, java.lang.Object)
    {
        java.util.Map$Entry $r3;
        com.google.common.collect.ImmutableList $r4;
        com.google.common.collect.Ordering $r5;
        java.lang.Comparable r1;
        java.lang.Object r2;
        com.google.common.collect.ImmutableSortedMap $r0;

        r1 := @parameter0: java.lang.Comparable;

        r2 := @parameter1: java.lang.Object;

        $r0 = new com.google.common.collect.ImmutableSortedMap;

        $r3 = staticinvoke <com.google.common.collect.ImmutableSortedMap: java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object)>(r1, r2);

        $r4 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>($r3);

        $r5 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        specialinvoke $r0.<com.google.common.collect.ImmutableSortedMap: void <init>(com.google.common.collect.ImmutableList,java.util.Comparator)>($r4, $r5);

        return $r0;
    }

    public static com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable, java.lang.Object, java.lang.Comparable, java.lang.Object)
    {
        com.google.common.collect.ImmutableSortedMap$Builder $r0, $r4, $r7;
        com.google.common.collect.Ordering $r1;
        java.lang.Comparable r2, r5;
        java.lang.Object r3, r6;
        com.google.common.collect.ImmutableSortedMap $r8;

        r2 := @parameter0: java.lang.Comparable;

        r3 := @parameter1: java.lang.Object;

        r5 := @parameter2: java.lang.Comparable;

        r6 := @parameter3: java.lang.Object;

        $r0 = new com.google.common.collect.ImmutableSortedMap$Builder;

        $r1 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        specialinvoke $r0.<com.google.common.collect.ImmutableSortedMap$Builder: void <init>(java.util.Comparator)>($r1);

        $r4 = virtualinvoke $r0.<com.google.common.collect.ImmutableSortedMap$Builder: com.google.common.collect.ImmutableSortedMap$Builder put(java.lang.Object,java.lang.Object)>(r2, r3);

        $r7 = virtualinvoke $r4.<com.google.common.collect.ImmutableSortedMap$Builder: com.google.common.collect.ImmutableSortedMap$Builder put(java.lang.Object,java.lang.Object)>(r5, r6);

        $r8 = virtualinvoke $r7.<com.google.common.collect.ImmutableSortedMap$Builder: com.google.common.collect.ImmutableSortedMap build()>();

        return $r8;
    }

    public static com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable, java.lang.Object, java.lang.Comparable, java.lang.Object, java.lang.Comparable, java.lang.Object)
    {
        com.google.common.collect.ImmutableSortedMap$Builder $r0, $r4, $r7, $r10;
        com.google.common.collect.Ordering $r1;
        java.lang.Comparable r2, r5, r8;
        java.lang.Object r3, r6, r9;
        com.google.common.collect.ImmutableSortedMap $r11;

        r2 := @parameter0: java.lang.Comparable;

        r3 := @parameter1: java.lang.Object;

        r5 := @parameter2: java.lang.Comparable;

        r6 := @parameter3: java.lang.Object;

        r8 := @parameter4: java.lang.Comparable;

        r9 := @parameter5: java.lang.Object;

        $r0 = new com.google.common.collect.ImmutableSortedMap$Builder;

        $r1 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        specialinvoke $r0.<com.google.common.collect.ImmutableSortedMap$Builder: void <init>(java.util.Comparator)>($r1);

        $r4 = virtualinvoke $r0.<com.google.common.collect.ImmutableSortedMap$Builder: com.google.common.collect.ImmutableSortedMap$Builder put(java.lang.Object,java.lang.Object)>(r2, r3);

        $r7 = virtualinvoke $r4.<com.google.common.collect.ImmutableSortedMap$Builder: com.google.common.collect.ImmutableSortedMap$Builder put(java.lang.Object,java.lang.Object)>(r5, r6);

        $r10 = virtualinvoke $r7.<com.google.common.collect.ImmutableSortedMap$Builder: com.google.common.collect.ImmutableSortedMap$Builder put(java.lang.Object,java.lang.Object)>(r8, r9);

        $r11 = virtualinvoke $r10.<com.google.common.collect.ImmutableSortedMap$Builder: com.google.common.collect.ImmutableSortedMap build()>();

        return $r11;
    }

    public static com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable, java.lang.Object, java.lang.Comparable, java.lang.Object, java.lang.Comparable, java.lang.Object, java.lang.Comparable, java.lang.Object)
    {
        com.google.common.collect.ImmutableSortedMap$Builder $r0, $r4, $r7, $r10, $r13;
        com.google.common.collect.Ordering $r1;
        java.lang.Comparable r2, r5, r8, r11;
        java.lang.Object r3, r6, r9, r12;
        com.google.common.collect.ImmutableSortedMap $r14;

        r2 := @parameter0: java.lang.Comparable;

        r3 := @parameter1: java.lang.Object;

        r5 := @parameter2: java.lang.Comparable;

        r6 := @parameter3: java.lang.Object;

        r8 := @parameter4: java.lang.Comparable;

        r9 := @parameter5: java.lang.Object;

        r11 := @parameter6: java.lang.Comparable;

        r12 := @parameter7: java.lang.Object;

        $r0 = new com.google.common.collect.ImmutableSortedMap$Builder;

        $r1 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        specialinvoke $r0.<com.google.common.collect.ImmutableSortedMap$Builder: void <init>(java.util.Comparator)>($r1);

        $r4 = virtualinvoke $r0.<com.google.common.collect.ImmutableSortedMap$Builder: com.google.common.collect.ImmutableSortedMap$Builder put(java.lang.Object,java.lang.Object)>(r2, r3);

        $r7 = virtualinvoke $r4.<com.google.common.collect.ImmutableSortedMap$Builder: com.google.common.collect.ImmutableSortedMap$Builder put(java.lang.Object,java.lang.Object)>(r5, r6);

        $r10 = virtualinvoke $r7.<com.google.common.collect.ImmutableSortedMap$Builder: com.google.common.collect.ImmutableSortedMap$Builder put(java.lang.Object,java.lang.Object)>(r8, r9);

        $r13 = virtualinvoke $r10.<com.google.common.collect.ImmutableSortedMap$Builder: com.google.common.collect.ImmutableSortedMap$Builder put(java.lang.Object,java.lang.Object)>(r11, r12);

        $r14 = virtualinvoke $r13.<com.google.common.collect.ImmutableSortedMap$Builder: com.google.common.collect.ImmutableSortedMap build()>();

        return $r14;
    }

    public static com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable, java.lang.Object, java.lang.Comparable, java.lang.Object, java.lang.Comparable, java.lang.Object, java.lang.Comparable, java.lang.Object, java.lang.Comparable, java.lang.Object)
    {
        com.google.common.collect.ImmutableSortedMap$Builder $r0, $r4, $r7, $r10, $r13, $r16;
        com.google.common.collect.ImmutableSortedMap $r17;
        com.google.common.collect.Ordering $r1;
        java.lang.Comparable r2, r5, r8, r11, r14;
        java.lang.Object r3, r6, r9, r12, r15;

        r2 := @parameter0: java.lang.Comparable;

        r3 := @parameter1: java.lang.Object;

        r5 := @parameter2: java.lang.Comparable;

        r6 := @parameter3: java.lang.Object;

        r8 := @parameter4: java.lang.Comparable;

        r9 := @parameter5: java.lang.Object;

        r11 := @parameter6: java.lang.Comparable;

        r12 := @parameter7: java.lang.Object;

        r14 := @parameter8: java.lang.Comparable;

        r15 := @parameter9: java.lang.Object;

        $r0 = new com.google.common.collect.ImmutableSortedMap$Builder;

        $r1 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        specialinvoke $r0.<com.google.common.collect.ImmutableSortedMap$Builder: void <init>(java.util.Comparator)>($r1);

        $r4 = virtualinvoke $r0.<com.google.common.collect.ImmutableSortedMap$Builder: com.google.common.collect.ImmutableSortedMap$Builder put(java.lang.Object,java.lang.Object)>(r2, r3);

        $r7 = virtualinvoke $r4.<com.google.common.collect.ImmutableSortedMap$Builder: com.google.common.collect.ImmutableSortedMap$Builder put(java.lang.Object,java.lang.Object)>(r5, r6);

        $r10 = virtualinvoke $r7.<com.google.common.collect.ImmutableSortedMap$Builder: com.google.common.collect.ImmutableSortedMap$Builder put(java.lang.Object,java.lang.Object)>(r8, r9);

        $r13 = virtualinvoke $r10.<com.google.common.collect.ImmutableSortedMap$Builder: com.google.common.collect.ImmutableSortedMap$Builder put(java.lang.Object,java.lang.Object)>(r11, r12);

        $r16 = virtualinvoke $r13.<com.google.common.collect.ImmutableSortedMap$Builder: com.google.common.collect.ImmutableSortedMap$Builder put(java.lang.Object,java.lang.Object)>(r14, r15);

        $r17 = virtualinvoke $r16.<com.google.common.collect.ImmutableSortedMap$Builder: com.google.common.collect.ImmutableSortedMap build()>();

        return $r17;
    }

    public static com.google.common.collect.ImmutableSortedMap copyOf(java.util.Map)
    {
        com.google.common.collect.Ordering $r0;
        com.google.common.collect.ImmutableSortedMap $r2;
        java.util.Map r1;

        r1 := @parameter0: java.util.Map;

        $r0 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        $r2 = staticinvoke <com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedMap copyOfInternal(java.util.Map,java.util.Comparator)>(r1, $r0);

        return $r2;
    }

    public static com.google.common.collect.ImmutableSortedMap copyOf(java.util.Map, java.util.Comparator)
    {
        java.util.Map r0;
        java.lang.Object $r2;
        java.util.Comparator r1, $r3;
        com.google.common.collect.ImmutableSortedMap $r4;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.util.Comparator;

        $r2 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (java.util.Comparator) $r2;

        $r4 = staticinvoke <com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedMap copyOfInternal(java.util.Map,java.util.Comparator)>(r0, $r3);

        return $r4;
    }

    public static com.google.common.collect.ImmutableSortedMap copyOfSorted(java.util.SortedMap)
    {
        java.util.Comparator $r1, r3;
        java.util.SortedMap r0;
        com.google.common.collect.ImmutableSortedMap $r2;

        r0 := @parameter0: java.util.SortedMap;

        $r1 = interfaceinvoke r0.<java.util.SortedMap: java.util.Comparator comparator()>();

        r3 = $r1;

        if $r1 != null goto label1;

        r3 = <com.google.common.collect.ImmutableSortedMap: java.util.Comparator NATURAL_ORDER>;

     label1:
        $r2 = staticinvoke <com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedMap copyOfInternal(java.util.Map,java.util.Comparator)>(r0, r3);

        return $r2;
    }

    private static com.google.common.collect.ImmutableSortedMap copyOfInternal(java.util.Map, java.util.Comparator)
    {
        java.lang.Object[] $r15;
        com.google.common.collect.ImmutableList $r3;
        java.util.Map r0;
        int i0, $i1;
        java.util.Map$Entry[] $r14, $r16;
        com.google.common.collect.ImmutableSortedMap $r2, r12;
        boolean $z0, $z1, $z2, z3, $z4;
        java.util.Map$Entry r5, $r8;
        java.util.Set $r13;
        java.util.List $r1;
        java.lang.Object $r6, $r7;
        java.util.Comparator r4, $r9, $r10;
        java.util.SortedMap r11;

        r0 := @parameter0: java.util.Map;

        r4 := @parameter1: java.util.Comparator;

        z3 = 0;

        $z0 = r0 instanceof java.util.SortedMap;

        if $z0 == 0 goto label4;

        r11 = (java.util.SortedMap) r0;

        $r9 = interfaceinvoke r11.<java.util.SortedMap: java.util.Comparator comparator()>();

        if $r9 != null goto label2;

        $r10 = <com.google.common.collect.ImmutableSortedMap: java.util.Comparator NATURAL_ORDER>;

        if r4 != $r10 goto label1;

        $z4 = 1;

        goto label3;

     label1:
        $z4 = 0;

        goto label3;

     label2:
        $z4 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

     label3:
        z3 = $z4;

     label4:
        if z3 == 0 goto label5;

        $z1 = r0 instanceof com.google.common.collect.ImmutableSortedMap;

        if $z1 == 0 goto label5;

        r12 = (com.google.common.collect.ImmutableSortedMap) r0;

        $z2 = virtualinvoke r12.<com.google.common.collect.ImmutableSortedMap: boolean isPartialView()>();

        if $z2 != 0 goto label5;

        return r12;

     label5:
        $r13 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r14 = newarray (java.util.Map$Entry)[0];

        $r15 = interfaceinvoke $r13.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r14);

        $r16 = (java.util.Map$Entry[]) $r15;

        i0 = 0;

     label6:
        $i1 = lengthof $r16;

        if i0 >= $i1 goto label7;

        r5 = $r16[i0];

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = staticinvoke <com.google.common.collect.ImmutableSortedMap: java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r16[i0] = $r8;

        i0 = i0 + 1;

        goto label6;

     label7:
        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r16);

        if z3 != 0 goto label8;

        staticinvoke <com.google.common.collect.ImmutableSortedMap: void sortEntries(java.util.List,java.util.Comparator)>($r1, r4);

        staticinvoke <com.google.common.collect.ImmutableSortedMap: void validateEntries(java.util.List,java.util.Comparator)>($r1, r4);

     label8:
        $r2 = new com.google.common.collect.ImmutableSortedMap;

        $r3 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.util.Collection)>($r1);

        specialinvoke $r2.<com.google.common.collect.ImmutableSortedMap: void <init>(com.google.common.collect.ImmutableList,java.util.Comparator)>($r3, r4);

        return $r2;
    }

    private static void sortEntries(java.util.List, java.util.Comparator)
    {
        java.util.List r2;
        com.google.common.collect.ImmutableSortedMap$1 $r0;
        java.util.Comparator r1;

        r2 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.Comparator;

        $r0 = new com.google.common.collect.ImmutableSortedMap$1;

        specialinvoke $r0.<com.google.common.collect.ImmutableSortedMap$1: void <init>(java.util.Comparator)>(r1);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r2, $r0);

        return;
    }

    private static void validateEntries(java.util.List, java.util.Comparator)
    {
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r16;
        java.util.Map$Entry $r3, $r6;
        java.lang.IllegalArgumentException $r8;
        java.util.List r0;
        java.lang.Object $r2, $r4, $r5, $r7, $r11, $r14;
        java.lang.StringBuilder $r9, $r10, $r12, $r13, $r15;
        java.util.Comparator r1;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.Comparator;

        i4 = 1;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i4 >= $i0 goto label3;

        $i1 = i4 - 1;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i1);

        $r3 = (java.util.Map$Entry) $r2;

        $r4 = interfaceinvoke $r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i4);

        $r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $i2 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r7);

        if $i2 != 0 goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate keys in mappings ");

        $i3 = i4 - 1;

        $r11 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i3);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r14 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i4);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r8;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return;
    }

    public static com.google.common.collect.ImmutableSortedMap$Builder naturalOrder()
    {
        com.google.common.collect.ImmutableSortedMap$Builder $r0;
        com.google.common.collect.Ordering $r1;

        $r0 = new com.google.common.collect.ImmutableSortedMap$Builder;

        $r1 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        specialinvoke $r0.<com.google.common.collect.ImmutableSortedMap$Builder: void <init>(java.util.Comparator)>($r1);

        return $r0;
    }

    public static com.google.common.collect.ImmutableSortedMap$Builder orderedBy(java.util.Comparator)
    {
        com.google.common.collect.ImmutableSortedMap$Builder $r0;
        java.util.Comparator r1;

        r1 := @parameter0: java.util.Comparator;

        $r0 = new com.google.common.collect.ImmutableSortedMap$Builder;

        specialinvoke $r0.<com.google.common.collect.ImmutableSortedMap$Builder: void <init>(java.util.Comparator)>(r1);

        return $r0;
    }

    public static com.google.common.collect.ImmutableSortedMap$Builder reverseOrder()
    {
        com.google.common.collect.ImmutableSortedMap$Builder $r0;
        com.google.common.collect.Ordering $r1, $r2;

        $r0 = new com.google.common.collect.ImmutableSortedMap$Builder;

        $r1 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        $r2 = virtualinvoke $r1.<com.google.common.collect.Ordering: com.google.common.collect.Ordering reverse()>();

        specialinvoke $r0.<com.google.common.collect.ImmutableSortedMap$Builder: void <init>(java.util.Comparator)>($r2);

        return $r0;
    }

    void <init>(com.google.common.collect.ImmutableList, java.util.Comparator)
    {
        com.google.common.collect.ImmutableList r2;
        com.google.common.collect.ImmutableSortedMap$2 $r1;
        java.util.Comparator r3;
        com.google.common.collect.ImmutableSortedMap r0;

        r0 := @this: com.google.common.collect.ImmutableSortedMap;

        r2 := @parameter0: com.google.common.collect.ImmutableList;

        r3 := @parameter1: java.util.Comparator;

        specialinvoke r0.<com.google.common.collect.ImmutableSortedMapFauxverideShim: void <init>()>();

        $r1 = new com.google.common.collect.ImmutableSortedMap$2;

        specialinvoke $r1.<com.google.common.collect.ImmutableSortedMap$2: void <init>(com.google.common.collect.ImmutableSortedMap)>(r0);

        r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.base.Function keyFunction> = $r1;

        r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableList entries> = r2;

        r0.<com.google.common.collect.ImmutableSortedMap: java.util.Comparator comparator> = r3;

        return;
    }

    public int size()
    {
        int $i0;
        com.google.common.collect.ImmutableList $r1;
        com.google.common.collect.ImmutableSortedMap r0;

        r0 := @this: com.google.common.collect.ImmutableSortedMap;

        $r1 = r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableList entries>;

        $i0 = virtualinvoke $r1.<com.google.common.collect.ImmutableList: int size()>();

        return $i0;
    }

    java.util.Comparator unsafeComparator()
    {
        java.util.Comparator $r1;
        com.google.common.collect.ImmutableSortedMap r0;

        r0 := @this: com.google.common.collect.ImmutableSortedMap;

        $r1 = r0.<com.google.common.collect.ImmutableSortedMap: java.util.Comparator comparator>;

        return $r1;
    }

    public java.lang.Object get(java.lang.Object)
    {
        java.util.Map$Entry $r9;
        com.google.common.base.Function $r2;
        java.lang.ClassCastException $r10;
        java.util.List $r4;
        com.google.common.collect.ImmutableList $r3, $r7;
        com.google.common.collect.SortedLists$Relation $r6;
        int $i0;
        java.lang.Object r0, $r8, $r11;
        java.util.Comparator $r5;
        com.google.common.collect.ImmutableSortedMap r1;

        r1 := @this: com.google.common.collect.ImmutableSortedMap;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return null;

     label1:
        $r3 = r1.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableList entries>;

        $r2 = r1.<com.google.common.collect.ImmutableSortedMap: com.google.common.base.Function keyFunction>;

        $r4 = staticinvoke <com.google.common.collect.Lists: java.util.List transform(java.util.List,com.google.common.base.Function)>($r3, $r2);

        $r5 = virtualinvoke r1.<com.google.common.collect.ImmutableSortedMap: java.util.Comparator unsafeComparator()>();

        $r6 = <com.google.common.collect.SortedLists$Relation: com.google.common.collect.SortedLists$Relation EQUAL>;

        $i0 = staticinvoke <com.google.common.collect.SortedLists: int binarySearch(java.util.List,java.lang.Object,java.util.Comparator,com.google.common.collect.SortedLists$Relation,boolean)>($r4, r0, $r5, $r6, 0);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        return null;

     label4:
        if $i0 < 0 goto label5;

        $r7 = r1.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableList entries>;

        $r8 = virtualinvoke $r7.<com.google.common.collect.ImmutableList: java.lang.Object get(int)>($i0);

        $r9 = (java.util.Map$Entry) $r8;

        $r11 = interfaceinvoke $r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        goto label6;

     label5:
        $r11 = null;

     label6:
        return $r11;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public boolean containsValue(java.lang.Object)
    {
        java.lang.Object r0;
        com.google.common.collect.UnmodifiableIterator $r2;
        com.google.common.collect.ImmutableSortedMap r1;
        boolean $z0;

        r1 := @this: com.google.common.collect.ImmutableSortedMap;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r1.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.UnmodifiableIterator valueIterator()>();

        $z0 = staticinvoke <com.google.common.collect.Iterators: boolean contains(java.util.Iterator,java.lang.Object)>($r2, r0);

        return $z0;
    }

    boolean isPartialView()
    {
        com.google.common.collect.ImmutableList $r1;
        com.google.common.collect.ImmutableSortedMap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableSortedMap;

        $r1 = r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableList entries>;

        $z0 = virtualinvoke $r1.<com.google.common.collect.ImmutableList: boolean isPartialView()>();

        return $z0;
    }

    public com.google.common.collect.ImmutableSet entrySet()
    {
        com.google.common.collect.ImmutableSet r1, $r2;
        com.google.common.collect.ImmutableSortedMap r0;

        r0 := @this: com.google.common.collect.ImmutableSortedMap;

        r1 = r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSet entrySet>;

        if r1 != null goto label1;

        $r2 = specialinvoke r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSet createEntrySet()>();

        r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSet entrySet> = $r2;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }

    private com.google.common.collect.ImmutableSet createEntrySet()
    {
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.collect.ImmutableSortedMap$EntrySet $r2;
        com.google.common.collect.ImmutableSortedMap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableSortedMap;

        $z0 = virtualinvoke r0.<com.google.common.collect.ImmutableSortedMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of()>();

        goto label2;

     label1:
        $r2 = new com.google.common.collect.ImmutableSortedMap$EntrySet;

        $r1 = $r2;

        specialinvoke $r2.<com.google.common.collect.ImmutableSortedMap$EntrySet: void <init>(com.google.common.collect.ImmutableSortedMap)>(r0);

     label2:
        return $r1;
    }

    public com.google.common.collect.ImmutableSortedSet keySet()
    {
        com.google.common.collect.ImmutableSortedSet r1, $r2;
        com.google.common.collect.ImmutableSortedMap r0;

        r0 := @this: com.google.common.collect.ImmutableSortedMap;

        r1 = r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedSet keySet>;

        if r1 != null goto label1;

        $r2 = specialinvoke r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedSet createKeySet()>();

        r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedSet keySet> = $r2;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }

    private com.google.common.collect.ImmutableSortedSet createKeySet()
    {
        com.google.common.collect.ImmutableSortedSet $r6;
        com.google.common.collect.ImmutableSortedMap$3 $r2;
        com.google.common.collect.ImmutableList $r3;
        com.google.common.collect.RegularImmutableSortedSet $r1;
        java.util.Comparator $r4, $r5;
        com.google.common.collect.ImmutableSortedMap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableSortedMap;

        $z0 = virtualinvoke r0.<com.google.common.collect.ImmutableSortedMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<com.google.common.collect.ImmutableSortedMap: java.util.Comparator comparator>;

        $r6 = staticinvoke <com.google.common.collect.ImmutableSortedSet: com.google.common.collect.ImmutableSortedSet emptySet(java.util.Comparator)>($r5);

        return $r6;

     label1:
        $r1 = new com.google.common.collect.RegularImmutableSortedSet;

        $r2 = new com.google.common.collect.ImmutableSortedMap$3;

        $r3 = r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableList entries>;

        specialinvoke $r2.<com.google.common.collect.ImmutableSortedMap$3: void <init>(com.google.common.collect.ImmutableSortedMap,com.google.common.collect.ImmutableList)>(r0, $r3);

        $r4 = r0.<com.google.common.collect.ImmutableSortedMap: java.util.Comparator comparator>;

        specialinvoke $r1.<com.google.common.collect.RegularImmutableSortedSet: void <init>(com.google.common.collect.ImmutableList,java.util.Comparator)>($r2, $r4);

        return $r1;
    }

    public com.google.common.collect.ImmutableCollection values()
    {
        com.google.common.collect.ImmutableSortedMap$Values $r3;
        com.google.common.collect.ImmutableCollection r1, $r2;
        com.google.common.collect.ImmutableSortedMap r0;

        r0 := @this: com.google.common.collect.ImmutableSortedMap;

        r1 = r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableCollection values>;

        if r1 != null goto label1;

        $r3 = new com.google.common.collect.ImmutableSortedMap$Values;

        $r2 = $r3;

        specialinvoke $r3.<com.google.common.collect.ImmutableSortedMap$Values: void <init>(com.google.common.collect.ImmutableSortedMap)>(r0);

        r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableCollection values> = $r3;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }

    com.google.common.collect.UnmodifiableIterator valueIterator()
    {
        com.google.common.collect.ImmutableSortedMap$4 $r3;
        com.google.common.collect.ImmutableList $r1;
        com.google.common.collect.UnmodifiableIterator $r2;
        com.google.common.collect.ImmutableSortedMap r0;

        r0 := @this: com.google.common.collect.ImmutableSortedMap;

        $r1 = r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableList entries>;

        $r2 = virtualinvoke $r1.<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()>();

        $r3 = new com.google.common.collect.ImmutableSortedMap$4;

        specialinvoke $r3.<com.google.common.collect.ImmutableSortedMap$4: void <init>(com.google.common.collect.ImmutableSortedMap,com.google.common.collect.UnmodifiableIterator)>(r0, $r2);

        return $r3;
    }

    public java.util.Comparator comparator()
    {
        java.util.Comparator $r1;
        com.google.common.collect.ImmutableSortedMap r0;

        r0 := @this: com.google.common.collect.ImmutableSortedMap;

        $r1 = r0.<com.google.common.collect.ImmutableSortedMap: java.util.Comparator comparator>;

        return $r1;
    }

    public java.lang.Object firstKey()
    {
        java.util.Map$Entry $r3;
        com.google.common.collect.ImmutableList $r1;
        java.lang.Object $r2, $r4;
        java.util.NoSuchElementException $r5;
        com.google.common.collect.ImmutableSortedMap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableSortedMap;

        $z0 = virtualinvoke r0.<com.google.common.collect.ImmutableSortedMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        throw $r5;

     label1:
        $r1 = r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableList entries>;

        $r2 = virtualinvoke $r1.<com.google.common.collect.ImmutableList: java.lang.Object get(int)>(0);

        $r3 = (java.util.Map$Entry) $r2;

        $r4 = interfaceinvoke $r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        return $r4;
    }

    public java.lang.Object lastKey()
    {
        java.util.Map$Entry $r3;
        com.google.common.collect.ImmutableList $r1;
        int $i0, $i1;
        java.lang.Object $r2, $r4;
        java.util.NoSuchElementException $r5;
        com.google.common.collect.ImmutableSortedMap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableSortedMap;

        $z0 = virtualinvoke r0.<com.google.common.collect.ImmutableSortedMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        throw $r5;

     label1:
        $r1 = r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableList entries>;

        $i0 = virtualinvoke r0.<com.google.common.collect.ImmutableSortedMap: int size()>();

        $i1 = $i0 - 1;

        $r2 = virtualinvoke $r1.<com.google.common.collect.ImmutableList: java.lang.Object get(int)>($i1);

        $r3 = (java.util.Map$Entry) $r2;

        $r4 = interfaceinvoke $r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        return $r4;
    }

    public com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object)
    {
        int $i0;
        java.lang.Object r1, $r2;
        com.google.common.collect.ImmutableSortedMap r0, $r3;

        r0 := @this: com.google.common.collect.ImmutableSortedMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $i0 = specialinvoke r0.<com.google.common.collect.ImmutableSortedMap: int findSubmapIndex(java.lang.Object)>($r2);

        $r3 = specialinvoke r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedMap createSubmap(int,int)>(0, $i0);

        return $r3;
    }

    public com.google.common.collect.ImmutableSortedMap subMap(java.lang.Object, java.lang.Object)
    {
        int $i0, $i1, $i2;
        java.lang.Object r0, r1;
        java.util.Comparator $r3;
        com.google.common.collect.ImmutableSortedMap r2, $r4;
        boolean $z0;

        r2 := @this: com.google.common.collect.ImmutableSortedMap;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = r2.<com.google.common.collect.ImmutableSortedMap: java.util.Comparator comparator>;

        $i0 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r0, r1);

        if $i0 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        $i1 = specialinvoke r2.<com.google.common.collect.ImmutableSortedMap: int findSubmapIndex(java.lang.Object)>(r0);

        $i2 = specialinvoke r2.<com.google.common.collect.ImmutableSortedMap: int findSubmapIndex(java.lang.Object)>(r1);

        $r4 = specialinvoke r2.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedMap createSubmap(int,int)>($i1, $i2);

        return $r4;
    }

    public com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object)
    {
        int $i0, $i1;
        java.lang.Object r1, $r2;
        com.google.common.collect.ImmutableSortedMap r0, $r3;

        r0 := @this: com.google.common.collect.ImmutableSortedMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $i0 = specialinvoke r0.<com.google.common.collect.ImmutableSortedMap: int findSubmapIndex(java.lang.Object)>($r2);

        $i1 = virtualinvoke r0.<com.google.common.collect.ImmutableSortedMap: int size()>();

        $r3 = specialinvoke r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedMap createSubmap(int,int)>($i0, $i1);

        return $r3;
    }

    private int findSubmapIndex(java.lang.Object)
    {
        com.google.common.base.Function $r1;
        java.util.List $r3;
        com.google.common.collect.ImmutableList $r2;
        com.google.common.collect.SortedLists$Relation $r5;
        int $i0;
        java.lang.Object r4;
        java.util.Comparator $r6;
        com.google.common.collect.ImmutableSortedMap r0;

        r0 := @this: com.google.common.collect.ImmutableSortedMap;

        r4 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableList entries>;

        $r1 = r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.base.Function keyFunction>;

        $r3 = staticinvoke <com.google.common.collect.Lists: java.util.List transform(java.util.List,com.google.common.base.Function)>($r2, $r1);

        $r6 = r0.<com.google.common.collect.ImmutableSortedMap: java.util.Comparator comparator>;

        $r5 = <com.google.common.collect.SortedLists$Relation: com.google.common.collect.SortedLists$Relation CEILING>;

        $i0 = staticinvoke <com.google.common.collect.SortedLists: int binarySearch(java.util.List,java.lang.Object,java.util.Comparator,com.google.common.collect.SortedLists$Relation,boolean)>($r3, r4, $r6, $r5, 0);

        return $i0;
    }

    private com.google.common.collect.ImmutableSortedMap createSubmap(int, int)
    {
        com.google.common.collect.ImmutableList $r4, $r5;
        int i0, i1;
        java.util.Comparator $r1, $r6;
        com.google.common.collect.ImmutableSortedMap r0, $r2, $r3;

        r0 := @this: com.google.common.collect.ImmutableSortedMap;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 >= i1 goto label1;

        $r3 = new com.google.common.collect.ImmutableSortedMap;

        $r4 = r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableList entries>;

        $r5 = virtualinvoke $r4.<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList subList(int,int)>(i0, i1);

        $r6 = r0.<com.google.common.collect.ImmutableSortedMap: java.util.Comparator comparator>;

        specialinvoke $r3.<com.google.common.collect.ImmutableSortedMap: void <init>(com.google.common.collect.ImmutableList,java.util.Comparator)>($r5, $r6);

        return $r3;

     label1:
        $r1 = r0.<com.google.common.collect.ImmutableSortedMap: java.util.Comparator comparator>;

        $r2 = staticinvoke <com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedMap emptyMap(java.util.Comparator)>($r1);

        return $r2;
    }

    java.lang.Object writeReplace()
    {
        com.google.common.collect.ImmutableSortedMap$SerializedForm $r0;
        com.google.common.collect.ImmutableSortedMap r1;

        r1 := @this: com.google.common.collect.ImmutableSortedMap;

        $r0 = new com.google.common.collect.ImmutableSortedMap$SerializedForm;

        specialinvoke $r0.<com.google.common.collect.ImmutableSortedMap$SerializedForm: void <init>(com.google.common.collect.ImmutableSortedMap)>(r1);

        return $r0;
    }

    public volatile com.google.common.collect.ImmutableSet keySet()
    {
        com.google.common.collect.ImmutableSortedSet $r1;
        com.google.common.collect.ImmutableSortedMap r0;

        r0 := @this: com.google.common.collect.ImmutableSortedMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedSet keySet()>();

        return $r1;
    }

    public volatile java.util.Set entrySet()
    {
        com.google.common.collect.ImmutableSet $r1;
        com.google.common.collect.ImmutableSortedMap r0;

        r0 := @this: com.google.common.collect.ImmutableSortedMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSet entrySet()>();

        return $r1;
    }

    public volatile java.util.Collection values()
    {
        com.google.common.collect.ImmutableCollection $r1;
        com.google.common.collect.ImmutableSortedMap r0;

        r0 := @this: com.google.common.collect.ImmutableSortedMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableCollection values()>();

        return $r1;
    }

    public volatile java.util.Set keySet()
    {
        com.google.common.collect.ImmutableSortedSet $r1;
        com.google.common.collect.ImmutableSortedMap r0;

        r0 := @this: com.google.common.collect.ImmutableSortedMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedSet keySet()>();

        return $r1;
    }

    public volatile java.util.SortedMap tailMap(java.lang.Object)
    {
        java.lang.Object r1;
        com.google.common.collect.ImmutableSortedMap r0, $r2;

        r0 := @this: com.google.common.collect.ImmutableSortedMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.util.SortedMap headMap(java.lang.Object)
    {
        java.lang.Object r1;
        com.google.common.collect.ImmutableSortedMap r0, $r2;

        r0 := @this: com.google.common.collect.ImmutableSortedMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.util.SortedMap subMap(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r1, r2;
        com.google.common.collect.ImmutableSortedMap r0, $r3;

        r0 := @this: com.google.common.collect.ImmutableSortedMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedMap subMap(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r3;
    }

    static void access$000(java.util.List, java.util.Comparator)
    {
        java.util.List r0;
        java.util.Comparator r1;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.Comparator;

        staticinvoke <com.google.common.collect.ImmutableSortedMap: void sortEntries(java.util.List,java.util.Comparator)>(r0, r1);

        return;
    }

    static void access$100(java.util.List, java.util.Comparator)
    {
        java.util.List r0;
        java.util.Comparator r1;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.Comparator;

        staticinvoke <com.google.common.collect.ImmutableSortedMap: void validateEntries(java.util.List,java.util.Comparator)>(r0, r1);

        return;
    }

    static void <clinit>()
    {
        com.google.common.collect.Ordering $r0;
        com.google.common.collect.ImmutableList $r2;
        java.util.Comparator $r3;
        com.google.common.collect.ImmutableSortedMap $r1;

        <com.google.common.collect.ImmutableSortedMap: long serialVersionUID> = 0L;

        $r0 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        <com.google.common.collect.ImmutableSortedMap: java.util.Comparator NATURAL_ORDER> = $r0;

        $r1 = new com.google.common.collect.ImmutableSortedMap;

        $r2 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        $r3 = <com.google.common.collect.ImmutableSortedMap: java.util.Comparator NATURAL_ORDER>;

        specialinvoke $r1.<com.google.common.collect.ImmutableSortedMap: void <init>(com.google.common.collect.ImmutableList,java.util.Comparator)>($r2, $r3);

        <com.google.common.collect.ImmutableSortedMap: com.google.common.collect.ImmutableSortedMap NATURAL_EMPTY_MAP> = $r1;

        return;
    }
}
