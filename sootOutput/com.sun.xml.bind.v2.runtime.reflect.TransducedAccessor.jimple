public abstract class com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor extends java.lang.Object
{

    public void <init>()
    {
        com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean useNamespace()
    {
        com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor;

        return 0;
    }

    public void declareNamespace(java.lang.Object, com.sun.xml.bind.v2.runtime.XMLSerializer) throws com.sun.xml.bind.api.AccessorException, org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor r0;
        java.lang.Object r1;
        com.sun.xml.bind.v2.runtime.XMLSerializer r2;

        r0 := @this: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.sun.xml.bind.v2.runtime.XMLSerializer;

        return;
    }

    public abstract java.lang.CharSequence print(java.lang.Object) throws com.sun.xml.bind.api.AccessorException, org.xml.sax.SAXException;

    public abstract void parse(java.lang.Object, java.lang.CharSequence) throws com.sun.xml.bind.api.AccessorException, org.xml.sax.SAXException;

    public abstract boolean hasValue(java.lang.Object) throws com.sun.xml.bind.api.AccessorException;

    public static com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor get(com.sun.xml.bind.v2.runtime.JAXBContextImpl, com.sun.xml.bind.v2.model.runtime.RuntimeNonElementRef)
    {
        com.sun.xml.bind.v2.model.runtime.RuntimeNonElementRef r0;
        com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo $r2;
        com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor$CompositeContextDependentTransducedAccessorImpl $r8;
        com.sun.xml.bind.v2.model.nav.ReflectionNavigator $r15;
        boolean $z0, $z1, $z2, $z3;
        com.sun.xml.bind.v2.runtime.JAXBContextImpl r6;
        com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor$IDREFTransducedAccessorImpl $r11;
        com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor$CompositeTransducedAccessorImpl $r5;
        com.sun.xml.bind.v2.runtime.reflect.Lister $r20;
        com.sun.xml.bind.v2.model.core.Adapter $r19;
        com.sun.xml.bind.v2.runtime.reflect.Accessor $r7, $r9, $r12, $r14;
        com.sun.xml.bind.v2.runtime.reflect.ListTransducedAccessorImpl $r13;
        java.lang.reflect.Type $r16;
        com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor $r10;
        java.lang.Class $r17;
        com.sun.xml.bind.v2.runtime.Transducer $r1;
        com.sun.xml.bind.v2.model.core.ID $r3, $r4, $r18;

        r6 := @parameter0: com.sun.xml.bind.v2.runtime.JAXBContextImpl;

        r0 := @parameter1: com.sun.xml.bind.v2.model.runtime.RuntimeNonElementRef;

        $r1 = staticinvoke <com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder: com.sun.xml.bind.v2.runtime.Transducer createTransducer(com.sun.xml.bind.v2.model.runtime.RuntimeNonElementRef)>(r0);

        $r2 = interfaceinvoke r0.<com.sun.xml.bind.v2.model.runtime.RuntimeNonElementRef: com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo getSource()>();

        $z0 = interfaceinvoke $r2.<com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: boolean isCollection()>();

        if $z0 == 0 goto label1;

        $r13 = new com.sun.xml.bind.v2.runtime.reflect.ListTransducedAccessorImpl;

        $r14 = interfaceinvoke $r2.<com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: com.sun.xml.bind.v2.runtime.reflect.Accessor getAccessor()>();

        $r15 = <com.sun.xml.bind.v2.model.nav.Navigator: com.sun.xml.bind.v2.model.nav.ReflectionNavigator REFLECTION>;

        $r16 = interfaceinvoke $r2.<com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: java.lang.reflect.Type getRawType()>();

        $r17 = virtualinvoke $r15.<com.sun.xml.bind.v2.model.nav.ReflectionNavigator: java.lang.Class erasure(java.lang.reflect.Type)>($r16);

        $r18 = interfaceinvoke $r2.<com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: com.sun.xml.bind.v2.model.core.ID id()>();

        $r19 = interfaceinvoke $r2.<com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: com.sun.xml.bind.v2.model.core.Adapter getAdapter()>();

        $r20 = staticinvoke <com.sun.xml.bind.v2.runtime.reflect.Lister: com.sun.xml.bind.v2.runtime.reflect.Lister create(java.lang.reflect.Type,com.sun.xml.bind.v2.model.core.ID,com.sun.xml.bind.v2.model.core.Adapter)>($r17, $r18, $r19);

        specialinvoke $r13.<com.sun.xml.bind.v2.runtime.reflect.ListTransducedAccessorImpl: void <init>(com.sun.xml.bind.v2.runtime.Transducer,com.sun.xml.bind.v2.runtime.reflect.Accessor,com.sun.xml.bind.v2.runtime.reflect.Lister)>($r1, $r14, $r20);

        return $r13;

     label1:
        $r3 = interfaceinvoke $r2.<com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: com.sun.xml.bind.v2.model.core.ID id()>();

        $r4 = <com.sun.xml.bind.v2.model.core.ID: com.sun.xml.bind.v2.model.core.ID IDREF>;

        if $r3 != $r4 goto label2;

        $r11 = new com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor$IDREFTransducedAccessorImpl;

        $r12 = interfaceinvoke $r2.<com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: com.sun.xml.bind.v2.runtime.reflect.Accessor getAccessor()>();

        specialinvoke $r11.<com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor$IDREFTransducedAccessorImpl: void <init>(com.sun.xml.bind.v2.runtime.reflect.Accessor)>($r12);

        return $r11;

     label2:
        $z1 = interfaceinvoke $r1.<com.sun.xml.bind.v2.runtime.Transducer: boolean isDefault()>();

        if $z1 == 0 goto label3;

        if r6 == null goto label3;

        $z2 = r6.<com.sun.xml.bind.v2.runtime.JAXBContextImpl: boolean fastBoot>;

        if $z2 != 0 goto label3;

        $r10 = staticinvoke <com.sun.xml.bind.v2.runtime.reflect.opt.OptimizedTransducedAccessorFactory: com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor get(com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo)>($r2);

        if $r10 == null goto label3;

        return $r10;

     label3:
        $z3 = interfaceinvoke $r1.<com.sun.xml.bind.v2.runtime.Transducer: boolean useNamespace()>();

        if $z3 == 0 goto label4;

        $r8 = new com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor$CompositeContextDependentTransducedAccessorImpl;

        $r9 = interfaceinvoke $r2.<com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: com.sun.xml.bind.v2.runtime.reflect.Accessor getAccessor()>();

        specialinvoke $r8.<com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor$CompositeContextDependentTransducedAccessorImpl: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.runtime.Transducer,com.sun.xml.bind.v2.runtime.reflect.Accessor)>(r6, $r1, $r9);

        return $r8;

     label4:
        $r5 = new com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor$CompositeTransducedAccessorImpl;

        $r7 = interfaceinvoke $r2.<com.sun.xml.bind.v2.model.runtime.RuntimePropertyInfo: com.sun.xml.bind.v2.runtime.reflect.Accessor getAccessor()>();

        specialinvoke $r5.<com.sun.xml.bind.v2.runtime.reflect.TransducedAccessor$CompositeTransducedAccessorImpl: void <init>(com.sun.xml.bind.v2.runtime.JAXBContextImpl,com.sun.xml.bind.v2.runtime.Transducer,com.sun.xml.bind.v2.runtime.reflect.Accessor)>(r6, $r1, $r7);

        return $r5;
    }

    public abstract void writeLeafElement(com.sun.xml.bind.v2.runtime.XMLSerializer, com.sun.xml.bind.v2.runtime.Name, java.lang.Object, java.lang.String) throws org.xml.sax.SAXException, com.sun.xml.bind.api.AccessorException, java.io.IOException, javax.xml.stream.XMLStreamException;

    public abstract void writeText(com.sun.xml.bind.v2.runtime.XMLSerializer, java.lang.Object, java.lang.String) throws com.sun.xml.bind.api.AccessorException, org.xml.sax.SAXException, java.io.IOException, javax.xml.stream.XMLStreamException;
}
