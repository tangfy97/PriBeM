class org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl extends java.lang.ThreadLocal implements org.aspectj.runtime.internal.cflowstack.ThreadCounter
{

    private void <init>()
    {
        org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl r0;

        r0 := @this: org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl;

        specialinvoke r0.<java.lang.ThreadLocal: void <init>()>();

        return;
    }

    public java.lang.Object initialValue()
    {
        org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl$Counter $r0;
        org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl r1;

        r1 := @this: org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl;

        $r0 = new org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl$Counter;

        specialinvoke $r0.<org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl$Counter: void <init>()>();

        return $r0;
    }

    public org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl$Counter getThreadCounter()
    {
        org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl$Counter $r2;
        java.lang.Object $r1;
        org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl r0;

        r0 := @this: org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl;

        $r1 = virtualinvoke r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r2 = (org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl$Counter) $r1;

        return $r2;
    }

    public void removeThreadCounter()
    {
        org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl r0;

        r0 := @this: org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl;

        virtualinvoke r0.<java.lang.ThreadLocal: void remove()>();

        return;
    }

    public void inc()
    {
        org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl$Counter $r1;
        int $i0, $i1;
        org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl r0;

        r0 := @this: org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl;

        $r1 = virtualinvoke r0.<org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl: org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl$Counter getThreadCounter()>();

        $i0 = $r1.<org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl$Counter: int value>;

        $i1 = $i0 + 1;

        $r1.<org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl$Counter: int value> = $i1;

        return;
    }

    public void dec()
    {
        org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl$Counter $r1;
        int $i0, $i1;
        org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl r0;

        r0 := @this: org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl;

        $r1 = virtualinvoke r0.<org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl: org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl$Counter getThreadCounter()>();

        $i0 = $r1.<org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl$Counter: int value>;

        $i1 = $i0 - 1;

        $r1.<org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl$Counter: int value> = $i1;

        return;
    }

    public boolean isNotZero()
    {
        org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl$Counter $r1;
        int $i0;
        org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl r0;
        boolean $z0;

        r0 := @this: org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl;

        $r1 = virtualinvoke r0.<org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl: org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl$Counter getThreadCounter()>();

        $i0 = $r1.<org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl$Counter: int value>;

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void <init>(org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$1)
    {
        org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl r0;
        org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$1 r1;

        r0 := @this: org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl;

        r1 := @parameter0: org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$1;

        specialinvoke r0.<org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl: void <init>()>();

        return;
    }
}
