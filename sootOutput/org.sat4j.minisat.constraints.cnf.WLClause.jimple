public abstract class org.sat4j.minisat.constraints.cnf.WLClause extends java.lang.Object implements org.sat4j.minisat.core.Propagatable, org.sat4j.minisat.core.Constr, java.io.Serializable
{
    private static final long serialVersionUID;
    protected double activity;
    protected final int[] lits;
    protected final org.sat4j.minisat.core.ILits voc;
    static final boolean $assertionsDisabled;

    public void <init>(org.sat4j.specs.IVecInt, org.sat4j.minisat.core.ILits)
    {
        org.sat4j.minisat.constraints.cnf.WLClause r0;
        org.sat4j.specs.IVecInt r1;
        java.lang.AssertionError $r5;
        int[] $r2, $r3;
        int $i0, $i1;
        org.sat4j.minisat.core.ILits r4;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.WLClause;

        r1 := @parameter0: org.sat4j.specs.IVecInt;

        r4 := @parameter1: org.sat4j.minisat.core.ILits;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = interfaceinvoke r1.<org.sat4j.specs.IVecInt: int size()>();

        $r2 = newarray (int)[$i0];

        r0.<org.sat4j.minisat.constraints.cnf.WLClause: int[] lits> = $r2;

        $r3 = r0.<org.sat4j.minisat.constraints.cnf.WLClause: int[] lits>;

        interfaceinvoke r1.<org.sat4j.specs.IVecInt: void moveTo(int[])>($r3);

        $z0 = <org.sat4j.minisat.constraints.cnf.WLClause: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i1 = interfaceinvoke r1.<org.sat4j.specs.IVecInt: int size()>();

        if $i1 == 0 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        r0.<org.sat4j.minisat.constraints.cnf.WLClause: org.sat4j.minisat.core.ILits voc> = r4;

        r0.<org.sat4j.minisat.constraints.cnf.WLClause: double activity> = 0.0;

        return;
    }

    public void calcReason(int, org.sat4j.specs.IVecInt)
    {
        org.sat4j.minisat.constraints.cnf.WLClause r0;
        org.sat4j.specs.IVecInt r2;
        java.lang.AssertionError $r5;
        byte $b4;
        int[] r1;
        int i0, $i1, $i2, $i3, i5, $i6, $i8;
        org.sat4j.minisat.core.ILits $r3;
        boolean $z0, $z1;

        r0 := @this: org.sat4j.minisat.constraints.cnf.WLClause;

        i0 := @parameter0: int;

        r2 := @parameter1: org.sat4j.specs.IVecInt;

        r1 = r0.<org.sat4j.minisat.constraints.cnf.WLClause: int[] lits>;

        $i8 = (int) -1;

        if i0 != $i8 goto label1;

        $b4 = 0;

        goto label2;

     label1:
        $b4 = 1;

     label2:
        i5 = $b4;

     label3:
        $i6 = lengthof r1;

        if i5 >= $i6 goto label5;

        $z0 = <org.sat4j.minisat.constraints.cnf.WLClause: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        $r3 = r0.<org.sat4j.minisat.constraints.cnf.WLClause: org.sat4j.minisat.core.ILits voc>;

        $i3 = r1[i5];

        $z1 = interfaceinvoke $r3.<org.sat4j.minisat.core.ILits: boolean isFalsified(int)>($i3);

        if $z1 != 0 goto label4;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label4:
        $i1 = r1[i5];

        $i2 = $i1 ^ 1;

        interfaceinvoke r2.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i2);

        i5 = i5 + 1;

        goto label3;

     label5:
        return;
    }

    public void remove(org.sat4j.minisat.core.UnitPropagationListener)
    {
        org.sat4j.minisat.constraints.cnf.WLClause r0;
        int[] $r1, $r4;
        int $i0, $i1, $i2, $i3;
        org.sat4j.minisat.core.UnitPropagationListener r7;
        org.sat4j.specs.IVec $r3, $r6;
        org.sat4j.minisat.core.ILits $r2, $r5;

        r0 := @this: org.sat4j.minisat.constraints.cnf.WLClause;

        r7 := @parameter0: org.sat4j.minisat.core.UnitPropagationListener;

        $r2 = r0.<org.sat4j.minisat.constraints.cnf.WLClause: org.sat4j.minisat.core.ILits voc>;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.WLClause: int[] lits>;

        $i0 = $r1[0];

        $i1 = $i0 ^ 1;

        $r3 = interfaceinvoke $r2.<org.sat4j.minisat.core.ILits: org.sat4j.specs.IVec watches(int)>($i1);

        interfaceinvoke $r3.<org.sat4j.specs.IVec: void remove(java.lang.Object)>(r0);

        $r5 = r0.<org.sat4j.minisat.constraints.cnf.WLClause: org.sat4j.minisat.core.ILits voc>;

        $r4 = r0.<org.sat4j.minisat.constraints.cnf.WLClause: int[] lits>;

        $i2 = $r4[1];

        $i3 = $i2 ^ 1;

        $r6 = interfaceinvoke $r5.<org.sat4j.minisat.core.ILits: org.sat4j.specs.IVec watches(int)>($i3);

        interfaceinvoke $r6.<org.sat4j.specs.IVec: void remove(java.lang.Object)>(r0);

        return;
    }

    public boolean simplify()
    {
        org.sat4j.minisat.constraints.cnf.WLClause r0;
        int[] r1;
        int i0, i1, i2;
        org.sat4j.minisat.core.ILits $r2;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.WLClause;

        r1 = r0.<org.sat4j.minisat.constraints.cnf.WLClause: int[] lits>;

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        i1 = r1[i2];

        $r2 = r0.<org.sat4j.minisat.constraints.cnf.WLClause: org.sat4j.minisat.core.ILits voc>;

        $z0 = interfaceinvoke $r2.<org.sat4j.minisat.core.ILits: boolean isSatisfied(int)>(i1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 0;
    }

    public boolean propagate(org.sat4j.minisat.core.UnitPropagationListener, int)
    {
        org.sat4j.minisat.constraints.cnf.WLClause r0;
        int[] r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i14, $i15, i16, i17, $i18, i19;
        org.sat4j.minisat.core.ILits $r2, $r4, $r5;
        boolean $z0, $z1;
        org.sat4j.minisat.core.UnitPropagationListener r3;

        r0 := @this: org.sat4j.minisat.constraints.cnf.WLClause;

        r3 := @parameter0: org.sat4j.minisat.core.UnitPropagationListener;

        i0 := @parameter1: int;

        r1 = r0.<org.sat4j.minisat.constraints.cnf.WLClause: int[] lits>;

        $i2 = r1[0];

        $i1 = i0 ^ 1;

        if $i2 != $i1 goto label1;

        $i14 = r1[1];

        r1[0] = $i14;

        $i15 = i0 ^ 1;

        r1[1] = $i15;

     label1:
        i16 = i0 ^ 1;

        i17 = 2;

     label2:
        $i18 = lengthof r1;

        if i17 >= $i18 goto label5;

        $r4 = r0.<org.sat4j.minisat.constraints.cnf.WLClause: org.sat4j.minisat.core.ILits voc>;

        $i9 = r1[i17];

        $z1 = interfaceinvoke $r4.<org.sat4j.minisat.core.ILits: boolean isFalsified(int)>($i9);

        if $z1 == 0 goto label3;

        i13 = i16;

        i16 = r1[i17];

        r1[i17] = i13;

        goto label4;

     label3:
        $i10 = r1[i17];

        r1[1] = $i10;

        r1[i17] = i16;

        $r5 = r0.<org.sat4j.minisat.constraints.cnf.WLClause: org.sat4j.minisat.core.ILits voc>;

        $i11 = r1[1];

        $i12 = $i11 ^ 1;

        interfaceinvoke $r5.<org.sat4j.minisat.core.ILits: void watch(int,org.sat4j.minisat.core.Propagatable)>($i12, r0);

        return 1;

     label4:
        i17 = i17 + 1;

        goto label2;

     label5:
        i19 = 2;

     label6:
        $i3 = lengthof r1;

        if i19 >= $i3 goto label7;

        $i8 = i19 - 1;

        $i7 = r1[i19];

        r1[$i8] = $i7;

        i19 = i19 + 1;

        goto label6;

     label7:
        $i4 = lengthof r1;

        $i5 = $i4 - 1;

        r1[$i5] = i16;

        $r2 = r0.<org.sat4j.minisat.constraints.cnf.WLClause: org.sat4j.minisat.core.ILits voc>;

        interfaceinvoke $r2.<org.sat4j.minisat.core.ILits: void watch(int,org.sat4j.minisat.core.Propagatable)>(i0, r0);

        $i6 = r1[0];

        $z0 = interfaceinvoke r3.<org.sat4j.minisat.core.UnitPropagationListener: boolean enqueue(int,org.sat4j.minisat.core.Constr)>($i6, r0);

        return $z0;
    }

    public boolean locked()
    {
        org.sat4j.minisat.constraints.cnf.WLClause r0;
        int[] $r1;
        int $i0;
        org.sat4j.minisat.core.Constr $r3;
        org.sat4j.minisat.core.ILits $r2;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.WLClause;

        $r2 = r0.<org.sat4j.minisat.constraints.cnf.WLClause: org.sat4j.minisat.core.ILits voc>;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.WLClause: int[] lits>;

        $i0 = $r1[0];

        $r3 = interfaceinvoke $r2.<org.sat4j.minisat.core.ILits: org.sat4j.minisat.core.Constr getReason(int)>($i0);

        if $r3 != r0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public double getActivity()
    {
        org.sat4j.minisat.constraints.cnf.WLClause r0;
        double $d0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.WLClause;

        $d0 = r0.<org.sat4j.minisat.constraints.cnf.WLClause: double activity>;

        return $d0;
    }

    public void setActivity(double)
    {
        org.sat4j.minisat.constraints.cnf.WLClause r0;
        double d0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.WLClause;

        d0 := @parameter0: double;

        r0.<org.sat4j.minisat.constraints.cnf.WLClause: double activity> = d0;

        return;
    }

    public java.lang.String toString()
    {
        org.sat4j.minisat.constraints.cnf.WLClause r1;
        int[] r2;
        java.lang.StringBuffer $r0;
        int i0, i1, i2;
        java.lang.String $r3, $r4, $r6;
        org.sat4j.minisat.core.ILits $r5;

        r1 := @this: org.sat4j.minisat.constraints.cnf.WLClause;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        r2 = r1.<org.sat4j.minisat.constraints.cnf.WLClause: int[] lits>;

        i0 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        i1 = r2[i2];

        $r4 = staticinvoke <org.sat4j.minisat.constraints.cnf.Lits: java.lang.String toString(int)>(i1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r5 = r1.<org.sat4j.minisat.constraints.cnf.WLClause: org.sat4j.minisat.core.ILits voc>;

        $r6 = interfaceinvoke $r5.<org.sat4j.minisat.core.ILits: java.lang.String valueToString(int)>(i1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        i2 = i2 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public int get(int)
    {
        org.sat4j.minisat.constraints.cnf.WLClause r0;
        int[] $r1;
        int i0, $i1;

        r0 := @this: org.sat4j.minisat.constraints.cnf.WLClause;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.WLClause: int[] lits>;

        $i1 = $r1[i0];

        return $i1;
    }

    public void rescaleBy(double)
    {
        org.sat4j.minisat.constraints.cnf.WLClause r0;
        double d0, $d1, $d2;

        r0 := @this: org.sat4j.minisat.constraints.cnf.WLClause;

        d0 := @parameter0: double;

        $d1 = r0.<org.sat4j.minisat.constraints.cnf.WLClause: double activity>;

        $d2 = $d1 * d0;

        r0.<org.sat4j.minisat.constraints.cnf.WLClause: double activity> = $d2;

        return;
    }

    public int size()
    {
        org.sat4j.minisat.constraints.cnf.WLClause r0;
        int $i0;
        int[] $r1;

        r0 := @this: org.sat4j.minisat.constraints.cnf.WLClause;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.WLClause: int[] lits>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public void assertConstraint(org.sat4j.minisat.core.UnitPropagationListener)
    {
        org.sat4j.minisat.constraints.cnf.WLClause r1;
        int[] $r2;
        org.sat4j.minisat.core.UnitPropagationListener r0;
        int $i0;
        java.lang.AssertionError $r3;
        boolean $z0, $z1;

        r1 := @this: org.sat4j.minisat.constraints.cnf.WLClause;

        r0 := @parameter0: org.sat4j.minisat.core.UnitPropagationListener;

        $r2 = r1.<org.sat4j.minisat.constraints.cnf.WLClause: int[] lits>;

        $i0 = $r2[0];

        $z0 = interfaceinvoke r0.<org.sat4j.minisat.core.UnitPropagationListener: boolean enqueue(int,org.sat4j.minisat.core.Constr)>($i0, r1);

        $z1 = <org.sat4j.minisat.constraints.cnf.WLClause: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        return;
    }

    public org.sat4j.minisat.core.ILits getVocabulary()
    {
        org.sat4j.minisat.constraints.cnf.WLClause r0;
        org.sat4j.minisat.core.ILits $r1;

        r0 := @this: org.sat4j.minisat.constraints.cnf.WLClause;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.WLClause: org.sat4j.minisat.core.ILits voc>;

        return $r1;
    }

    public int[] getLits()
    {
        org.sat4j.minisat.constraints.cnf.WLClause r0;
        int[] r1, $r2;
        int $i0, $i1;

        r0 := @this: org.sat4j.minisat.constraints.cnf.WLClause;

        $i0 = virtualinvoke r0.<org.sat4j.minisat.constraints.cnf.WLClause: int size()>();

        r1 = newarray (int)[$i0];

        $r2 = r0.<org.sat4j.minisat.constraints.cnf.WLClause: int[] lits>;

        $i1 = virtualinvoke r0.<org.sat4j.minisat.constraints.cnf.WLClause: int size()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i1);

        return r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.sat4j.minisat.constraints.cnf.WLClause r1, r7;
        java.lang.ClassCastException $r6;
        int[] $r2, $r3, r4, r5;
        int $i0, $i1, i2, i3, i4, i5, i6, i7;
        boolean z0;
        java.lang.Object r0;

        r1 := @this: org.sat4j.minisat.constraints.cnf.WLClause;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label01;

        return 0;

     label01:
        r7 = (org.sat4j.minisat.constraints.cnf.WLClause) r0;

        $r2 = r1.<org.sat4j.minisat.constraints.cnf.WLClause: int[] lits>;

        $i1 = lengthof $r2;

        $r3 = r7.<org.sat4j.minisat.constraints.cnf.WLClause: int[] lits>;

        $i0 = lengthof $r3;

        if $i1 == $i0 goto label03;

     label02:
        return 0;

     label03:
        r4 = r1.<org.sat4j.minisat.constraints.cnf.WLClause: int[] lits>;

        i2 = lengthof r4;

        i6 = 0;

     label04:
        if i6 >= i2 goto label10;

        i3 = r4[i6];

        z0 = 0;

        r5 = r7.<org.sat4j.minisat.constraints.cnf.WLClause: int[] lits>;

        i4 = lengthof r5;

        i7 = 0;

     label05:
        if i7 >= i4 goto label07;

        i5 = r5[i7];

        if i3 != i5 goto label06;

        z0 = 1;

        goto label07;

     label06:
        i7 = i7 + 1;

        goto label05;

     label07:
        if z0 != 0 goto label09;

     label08:
        return 0;

     label09:
        i6 = i6 + 1;

        goto label04;

     label10:
        return 1;

     label11:
        $r6 := @caughtexception;

        return 0;

        catch java.lang.ClassCastException from label01 to label02 with label11;
        catch java.lang.ClassCastException from label03 to label08 with label11;
        catch java.lang.ClassCastException from label09 to label10 with label11;
    }

    public int hashCode()
    {
        org.sat4j.minisat.constraints.cnf.WLClause r0;
        long $l5, l6;
        int[] r1, $r2;
        int i0, $i1, $i2, $i3, i4, i7;

        r0 := @this: org.sat4j.minisat.constraints.cnf.WLClause;

        l6 = 0L;

        r1 = r0.<org.sat4j.minisat.constraints.cnf.WLClause: int[] lits>;

        i0 = lengthof r1;

        i7 = 0;

     label1:
        if i7 >= i0 goto label2;

        i4 = r1[i7];

        $l5 = (long) i4;

        l6 = l6 + $l5;

        i7 = i7 + 1;

        goto label1;

     label2:
        $i2 = (int) l6;

        $r2 = r0.<org.sat4j.minisat.constraints.cnf.WLClause: int[] lits>;

        $i1 = lengthof $r2;

        $i3 = $i2 / $i1;

        return $i3;
    }

    public boolean canBePropagatedMultipleTimes()
    {
        org.sat4j.minisat.constraints.cnf.WLClause r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.WLClause;

        return 0;
    }

    public org.sat4j.minisat.core.Constr toConstraint()
    {
        org.sat4j.minisat.constraints.cnf.WLClause r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.WLClause;

        return r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.sat4j.minisat.constraints.cnf.WLClause: long serialVersionUID> = 1L;

        $r0 = class "Lorg/sat4j/minisat/constraints/cnf/WLClause;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.sat4j.minisat.constraints.cnf.WLClause: boolean $assertionsDisabled> = $z1;

        return;
    }
}
