public class org.fife.ui.rsyntaxtextarea.folding.Fold extends java.lang.Object implements java.lang.Comparable
{
    private int type;
    private org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea;
    private javax.swing.text.Position startOffs;
    private javax.swing.text.Position endOffs;
    private org.fife.ui.rsyntaxtextarea.folding.Fold parent;
    private java.util.List children;
    private boolean collapsed;
    private int childCollapsedLineCount;
    private int lastStartOffs;
    private int cachedStartLine;
    private int lastEndOffs;
    private int cachedEndLine;

    public void <init>(int, org.fife.ui.rsyntaxtextarea.RSyntaxTextArea, int) throws javax.swing.text.BadLocationException
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r0;
        javax.swing.text.Position $r3;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r1;
        int i0, i1, $i3, $i5;
        javax.swing.text.Document $r2;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        i0 := @parameter0: int;

        r1 := @parameter1: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i3 = (int) -1;

        r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int lastStartOffs> = $i3;

        $i5 = (int) -1;

        r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int lastEndOffs> = $i5;

        r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int type> = i0;

        r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea> = r1;

        $r2 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: javax.swing.text.Document getDocument()>();

        $r3 = interfaceinvoke $r2.<javax.swing.text.Document: javax.swing.text.Position createPosition(int)>(i1);

        r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: javax.swing.text.Position startOffs> = $r3;

        return;
    }

    public org.fife.ui.rsyntaxtextarea.folding.Fold createChild(int, int) throws javax.swing.text.BadLocationException
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold $r0, r1;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r2;
        java.util.ArrayList $r5;
        java.util.List $r3, $r4;
        int i0, i1;

        r1 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new org.fife.ui.rsyntaxtextarea.folding.Fold;

        $r2 = r1.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        specialinvoke $r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: void <init>(int,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,int)>(i0, $r2, i1);

        $r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold parent> = r1;

        $r3 = r1.<org.fife.ui.rsyntaxtextarea.folding.Fold: java.util.List children>;

        if $r3 != null goto label1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r1.<org.fife.ui.rsyntaxtextarea.folding.Fold: java.util.List children> = $r5;

     label1:
        $r4 = r1.<org.fife.ui.rsyntaxtextarea.folding.Fold: java.util.List children>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r0);

        return $r0;
    }

    public int compareTo(java.lang.Object)
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r1, $r3;
        javax.swing.text.Position $r2, $r4;
        int $i0, $i1, i2, $i4;
        java.lang.Object r0;
        boolean $z0;

        r1 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        r0 := @parameter0: java.lang.Object;

        $i4 = (int) -1;

        i2 = $i4;

        $z0 = r0 instanceof org.fife.ui.rsyntaxtextarea.folding.Fold;

        if $z0 == 0 goto label1;

        $r2 = r1.<org.fife.ui.rsyntaxtextarea.folding.Fold: javax.swing.text.Position startOffs>;

        $i0 = interfaceinvoke $r2.<javax.swing.text.Position: int getOffset()>();

        $r3 = (org.fife.ui.rsyntaxtextarea.folding.Fold) r0;

        $r4 = $r3.<org.fife.ui.rsyntaxtextarea.folding.Fold: javax.swing.text.Position startOffs>;

        $i1 = interfaceinvoke $r4.<javax.swing.text.Position: int getOffset()>();

        i2 = $i0 - $i1;

     label1:
        return i2;
    }

    public boolean containsLine(int)
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r0;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getStartLine()>();

        if i0 <= $i1 goto label1;

        $i2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getEndLine()>();

        if i0 > $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean containsOrStartsOnLine(int)
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r0;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getStartLine()>();

        if i0 < $i1 goto label1;

        $i2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getEndLine()>();

        if i0 > $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean containsOffset(int)
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r0;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r1;
        int i0, $i1, $i2, $i3;
        javax.swing.text.Document $r2;
        javax.swing.text.Element $r3;
        boolean z0, $z1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        i0 := @parameter0: int;

        z0 = 0;

        $i1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getStartOffset()>();

        if i0 <= $i1 goto label3;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        $r2 = virtualinvoke $r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: javax.swing.text.Document getDocument()>();

        $r3 = interfaceinvoke $r2.<javax.swing.text.Document: javax.swing.text.Element getDefaultRootElement()>();

        $i2 = interfaceinvoke $r3.<javax.swing.text.Element: int getElementIndex(int)>(i0);

        $i3 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getEndLine()>();

        if $i2 > $i3 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

     label3:
        return z0;
    }

    public boolean equals(java.lang.Object)
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r0;
        int $i0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int compareTo(java.lang.Object)>(r1);

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.fife.ui.rsyntaxtextarea.folding.Fold getChild(int)
    {
        java.util.List $r1;
        org.fife.ui.rsyntaxtextarea.folding.Fold r0, $r3;
        int i0;
        java.lang.Object $r2;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        i0 := @parameter0: int;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: java.util.List children>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.fife.ui.rsyntaxtextarea.folding.Fold) $r2;

        return $r3;
    }

    public int getChildCount()
    {
        java.util.List $r1, $r2;
        org.fife.ui.rsyntaxtextarea.folding.Fold r0;
        int $i0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: java.util.List children>;

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: java.util.List children>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

     label2:
        return $i0;
    }

    java.util.List getChildren()
    {
        java.util.List $r1;
        org.fife.ui.rsyntaxtextarea.folding.Fold r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: java.util.List children>;

        return $r1;
    }

    public int getCollapsedLineCount()
    {
        int $i0;
        org.fife.ui.rsyntaxtextarea.folding.Fold r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        $z0 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean collapsed>;

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getLineCount()>();

        goto label2;

     label1:
        $i0 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int childCollapsedLineCount>;

     label2:
        return $i0;
    }

    org.fife.ui.rsyntaxtextarea.folding.Fold getDeepestFoldContaining(int)
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r0, $r1, r2;
        int $i0, i1, i2;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        i1 := @parameter0: int;

        r2 = r0;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getChildCount()>();

        if i2 >= $i0 goto label3;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold getChild(int)>(i2);

        $z0 = virtualinvoke $r1.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean containsOffset(int)>(i1);

        if $z0 == 0 goto label2;

        r2 = virtualinvoke $r1.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold getDeepestFoldContaining(int)>(i1);

        goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return r2;
    }

    org.fife.ui.rsyntaxtextarea.folding.Fold getDeepestOpenFoldContaining(int)
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r0, $r1, r2;
        int $i0, i1, i2;
        boolean $z0, $z1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        i1 := @parameter0: int;

        r2 = r0;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getChildCount()>();

        if i2 >= $i0 goto label4;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold getChild(int)>(i2);

        $z0 = virtualinvoke $r1.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean containsOffset(int)>(i1);

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke $r1.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean isCollapsed()>();

        if $z1 == 0 goto label2;

        goto label4;

     label2:
        r2 = virtualinvoke $r1.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold getDeepestOpenFoldContaining(int)>(i1);

        goto label4;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return r2;
    }

    public int getEndLine()
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r0;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r1;
        int $i0, $i1, $i2, $i3;
        javax.swing.text.Document $r2;
        javax.swing.text.Element $r3;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        $i0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getEndOffset()>();

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int lastEndOffs>;

        if $i1 != $i0 goto label1;

        $i3 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int cachedEndLine>;

        return $i3;

     label1:
        r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int lastEndOffs> = $i0;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        $r2 = virtualinvoke $r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: javax.swing.text.Document getDocument()>();

        $r3 = interfaceinvoke $r2.<javax.swing.text.Document: javax.swing.text.Element getDefaultRootElement()>();

        $i2 = interfaceinvoke $r3.<javax.swing.text.Element: int getElementIndex(int)>($i0);

        r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int cachedEndLine> = $i2;

        return $i2;
    }

    public int getEndOffset()
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r0;
        javax.swing.text.Position $r1, $r2;
        int $i0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: javax.swing.text.Position endOffs>;

        if $r1 == null goto label1;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: javax.swing.text.Position endOffs>;

        $i0 = interfaceinvoke $r2.<javax.swing.text.Position: int getOffset()>();

        goto label2;

     label1:
        $i0 = 2147483647;

     label2:
        return $i0;
    }

    public int getFoldType()
    {
        int $i0;
        org.fife.ui.rsyntaxtextarea.folding.Fold r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        $i0 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int type>;

        return $i0;
    }

    public boolean getHasChildFolds()
    {
        int $i0;
        org.fife.ui.rsyntaxtextarea.folding.Fold r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        $i0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getChildCount()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.fife.ui.rsyntaxtextarea.folding.Fold getLastChild()
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r0, $r1;
        int $i0, $i1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        $i0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getChildCount()>();

        if $i0 != 0 goto label1;

        $r1 = null;

        goto label2;

     label1:
        $i1 = $i0 - 1;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold getChild(int)>($i1);

     label2:
        return $r1;
    }

    public int getLineCount()
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r0;
        int $i0, $i1, $i2;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        $i0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getEndLine()>();

        $i1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getStartLine()>();

        $i2 = $i0 - $i1;

        return $i2;
    }

    public org.fife.ui.rsyntaxtextarea.folding.Fold getParent()
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r0, $r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold parent>;

        return $r1;
    }

    public int getStartLine()
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r0;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r1;
        int $i0, $i1, $i2, $i3;
        javax.swing.text.Document $r2;
        javax.swing.text.Element $r3;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        $i0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getStartOffset()>();

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int lastStartOffs>;

        if $i1 != $i0 goto label1;

        $i3 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int cachedStartLine>;

        return $i3;

     label1:
        r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int lastStartOffs> = $i0;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        $r2 = virtualinvoke $r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: javax.swing.text.Document getDocument()>();

        $r3 = interfaceinvoke $r2.<javax.swing.text.Document: javax.swing.text.Element getDefaultRootElement()>();

        $i2 = interfaceinvoke $r3.<javax.swing.text.Element: int getElementIndex(int)>($i0);

        r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int cachedStartLine> = $i2;

        return $i2;
    }

    public int getStartOffset()
    {
        int $i0;
        org.fife.ui.rsyntaxtextarea.folding.Fold r0;
        javax.swing.text.Position $r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: javax.swing.text.Position startOffs>;

        $i0 = interfaceinvoke $r1.<javax.swing.text.Position: int getOffset()>();

        return $i0;
    }

    public int hashCode()
    {
        int $i0;
        org.fife.ui.rsyntaxtextarea.folding.Fold r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        $i0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getStartLine()>();

        return $i0;
    }

    public boolean isCollapsed()
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        $z0 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean collapsed>;

        return $z0;
    }

    public boolean isOnSingleLine()
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        $i0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getStartLine()>();

        $i1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getEndLine()>();

        if $i0 != $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean removeFromParent()
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r0, $r1, $r2;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold parent>;

        if $r1 == null goto label1;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold parent>;

        specialinvoke $r2.<org.fife.ui.rsyntaxtextarea.folding.Fold: void removeMostRecentChild()>();

        r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold parent> = null;

        return 1;

     label1:
        return 0;
    }

    private void removeMostRecentChild()
    {
        java.util.List $r1, $r2;
        org.fife.ui.rsyntaxtextarea.folding.Fold r0;
        int $i0, $i1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: java.util.List children>;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: java.util.List children>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>($i1);

        return;
    }

    public void setCollapsed(boolean)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        boolean z0, $z1, $z2, z3;
        org.fife.ui.rsyntaxtextarea.folding.Fold r0, $r1, $r9;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r2, $r3, $r7, $r8, $r10;
        javax.swing.text.Document $r4;
        javax.swing.text.Element $r5, $r6;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        z0 := @parameter0: boolean;

        $z1 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean collapsed>;

        if z0 == $z1 goto label5;

        $i0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getLineCount()>();

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int childCollapsedLineCount>;

        i8 = $i0 - $i1;

        if z0 != 0 goto label1;

        i8 = neg i8;

     label1:
        r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean collapsed> = z0;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold parent>;

        if $r1 == null goto label2;

        $r9 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold parent>;

        specialinvoke $r9.<org.fife.ui.rsyntaxtextarea.folding.Fold: void updateChildCollapsedLineCount(int)>(i8);

     label2:
        if z0 == 0 goto label4;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        $i2 = virtualinvoke $r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getSelectionStart()>();

        $r3 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        $r4 = virtualinvoke $r3.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: javax.swing.text.Document getDocument()>();

        $r5 = interfaceinvoke $r4.<javax.swing.text.Document: javax.swing.text.Element getDefaultRootElement()>();

        $i3 = interfaceinvoke $r5.<javax.swing.text.Element: int getElementIndex(int)>($i2);

        $z2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean containsLine(int)>($i3);

        z3 = $z2;

        if $z2 != 0 goto label3;

        $r8 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        $i6 = virtualinvoke $r8.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getSelectionEnd()>();

        if $i6 == $i2 goto label3;

        $i7 = interfaceinvoke $r5.<javax.swing.text.Element: int getElementIndex(int)>($i6);

        z3 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean containsLine(int)>($i7);

     label3:
        if z3 == 0 goto label4;

        $i4 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getStartLine()>();

        $r6 = interfaceinvoke $r5.<javax.swing.text.Element: javax.swing.text.Element getElement(int)>($i4);

        $i5 = interfaceinvoke $r6.<javax.swing.text.Element: int getEndOffset()>();

        i9 = $i5 - 1;

        $r7 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        virtualinvoke $r7.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void setCaretPosition(int)>(i9);

     label4:
        $r10 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        virtualinvoke $r10.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: void foldToggled(org.fife.ui.rsyntaxtextarea.folding.Fold)>(r0);

     label5:
        return;
    }

    public void setEndOffset(int) throws javax.swing.text.BadLocationException
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r0;
        javax.swing.text.Position $r3;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r1;
        int i0;
        javax.swing.text.Document $r2;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        i0 := @parameter0: int;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea textArea>;

        $r2 = virtualinvoke $r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: javax.swing.text.Document getDocument()>();

        $r3 = interfaceinvoke $r2.<javax.swing.text.Document: javax.swing.text.Position createPosition(int)>(i0);

        r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: javax.swing.text.Position endOffs> = $r3;

        return;
    }

    public void toggleCollapsedState()
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r0;
        boolean $z0, $z1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        $z0 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean collapsed>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: void setCollapsed(boolean)>($z1);

        return;
    }

    private void updateChildCollapsedLineCount(int)
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r0, $r1, $r2;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        i0 := @parameter0: int;

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int childCollapsedLineCount>;

        $i2 = $i1 + i0;

        r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: int childCollapsedLineCount> = $i2;

        $z0 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean collapsed>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold parent>;

        if $r1 == null goto label1;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold parent>;

        specialinvoke $r2.<org.fife.ui.rsyntaxtextarea.folding.Fold: void updateChildCollapsedLineCount(int)>(i0);

     label1:
        return;
    }

    public java.lang.String toString()
    {
        org.fife.ui.rsyntaxtextarea.folding.Fold r2;
        java.lang.StringBuffer $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8;
        int $i0, $i1;
        java.lang.String $r9;
        boolean $z0;

        r2 := @this: org.fife.ui.rsyntaxtextarea.folding.Fold;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[Fold: startOffs=");

        $i0 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getStartOffset()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", endOffs=");

        $i1 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getEndOffset()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", collapsed=");

        $z0 = r2.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean collapsed>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }
}
