public class org.apache.xmlbeans.XmlSimpleList extends java.lang.Object implements java.util.List, java.io.Serializable
{
    private static final long serialVersionUID;
    private java.util.List underlying;

    public void <init>(java.util.List)
    {
        java.util.List r1;
        org.apache.xmlbeans.XmlSimpleList r0;

        r0 := @this: org.apache.xmlbeans.XmlSimpleList;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.XmlSimpleList: java.util.List underlying> = r1;

        return;
    }

    public int size()
    {
        int $i0;
        java.util.List $r1;
        org.apache.xmlbeans.XmlSimpleList r0;

        r0 := @this: org.apache.xmlbeans.XmlSimpleList;

        $r1 = r0.<org.apache.xmlbeans.XmlSimpleList: java.util.List underlying>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        java.util.List $r1;
        org.apache.xmlbeans.XmlSimpleList r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.XmlSimpleList;

        $r1 = r0.<org.apache.xmlbeans.XmlSimpleList: java.util.List underlying>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        return $z0;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.List $r2;
        org.apache.xmlbeans.XmlSimpleList r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.XmlSimpleList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.xmlbeans.XmlSimpleList: java.util.List underlying>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsAll(java.util.Collection)
    {
        java.util.List $r2;
        org.apache.xmlbeans.XmlSimpleList r0;
        java.util.Collection r1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.XmlSimpleList;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<org.apache.xmlbeans.XmlSimpleList: java.util.List underlying>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean containsAll(java.util.Collection)>(r1);

        return $z0;
    }

    public java.lang.Object[] toArray()
    {
        java.util.List $r1;
        java.lang.Object[] $r2;
        org.apache.xmlbeans.XmlSimpleList r0;

        r0 := @this: org.apache.xmlbeans.XmlSimpleList;

        $r1 = r0.<org.apache.xmlbeans.XmlSimpleList: java.util.List underlying>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray()>();

        return $r2;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.util.List $r2;
        java.lang.Object[] r1, $r3;
        org.apache.xmlbeans.XmlSimpleList r0;

        r0 := @this: org.apache.xmlbeans.XmlSimpleList;

        r1 := @parameter0: java.lang.Object[];

        $r2 = r0.<org.apache.xmlbeans.XmlSimpleList: java.util.List underlying>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r1);

        return $r3;
    }

    public boolean add(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object r2;
        org.apache.xmlbeans.XmlSimpleList r1;

        r1 := @this: org.apache.xmlbeans.XmlSimpleList;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean addAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.xmlbeans.XmlSimpleList r1;
        java.util.Collection r2;

        r1 := @this: org.apache.xmlbeans.XmlSimpleList;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean remove(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object r2;
        org.apache.xmlbeans.XmlSimpleList r1;

        r1 := @this: org.apache.xmlbeans.XmlSimpleList;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.xmlbeans.XmlSimpleList r1;
        java.util.Collection r2;

        r1 := @this: org.apache.xmlbeans.XmlSimpleList;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.xmlbeans.XmlSimpleList r1;
        java.util.Collection r2;

        r1 := @this: org.apache.xmlbeans.XmlSimpleList;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void clear()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.xmlbeans.XmlSimpleList r1;

        r1 := @this: org.apache.xmlbeans.XmlSimpleList;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.lang.Object get(int)
    {
        java.util.List $r1;
        org.apache.xmlbeans.XmlSimpleList r0;
        int i0;
        java.lang.Object $r2;

        r0 := @this: org.apache.xmlbeans.XmlSimpleList;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xmlbeans.XmlSimpleList: java.util.List underlying>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        return $r2;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.xmlbeans.XmlSimpleList r1;
        int i0;
        java.lang.Object r2;

        r1 := @this: org.apache.xmlbeans.XmlSimpleList;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void add(int, java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.xmlbeans.XmlSimpleList r1;
        int i0;
        java.lang.Object r2;

        r1 := @this: org.apache.xmlbeans.XmlSimpleList;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.lang.Object remove(int)
    {
        int i0;
        java.lang.UnsupportedOperationException $r0;
        org.apache.xmlbeans.XmlSimpleList r1;

        r1 := @this: org.apache.xmlbeans.XmlSimpleList;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public int indexOf(java.lang.Object)
    {
        java.util.List $r2;
        org.apache.xmlbeans.XmlSimpleList r0;
        int $i0;
        java.lang.Object r1;

        r0 := @this: org.apache.xmlbeans.XmlSimpleList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.xmlbeans.XmlSimpleList: java.util.List underlying>;

        $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1);

        return $i0;
    }

    public int lastIndexOf(java.lang.Object)
    {
        java.util.List $r2;
        org.apache.xmlbeans.XmlSimpleList r0;
        int $i0;
        java.lang.Object r1;

        r0 := @this: org.apache.xmlbeans.XmlSimpleList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.xmlbeans.XmlSimpleList: java.util.List underlying>;

        $i0 = interfaceinvoke $r2.<java.util.List: int lastIndexOf(java.lang.Object)>(r1);

        return $i0;
    }

    public boolean addAll(int, java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.xmlbeans.XmlSimpleList r1;
        java.util.Collection r2;
        int i0;

        r1 := @this: org.apache.xmlbeans.XmlSimpleList;

        i0 := @parameter0: int;

        r2 := @parameter1: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.util.List subList(int, int)
    {
        java.util.List $r2, $r3;
        org.apache.xmlbeans.XmlSimpleList $r0, r1;
        int i0, i1;

        r1 := @this: org.apache.xmlbeans.XmlSimpleList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new org.apache.xmlbeans.XmlSimpleList;

        $r2 = r1.<org.apache.xmlbeans.XmlSimpleList: java.util.List underlying>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.List subList(int,int)>(i0, i1);

        specialinvoke $r0.<org.apache.xmlbeans.XmlSimpleList: void <init>(java.util.List)>($r3);

        return $r0;
    }

    public java.util.Iterator iterator()
    {
        org.apache.xmlbeans.XmlSimpleList$1 $r0;
        org.apache.xmlbeans.XmlSimpleList r1;

        r1 := @this: org.apache.xmlbeans.XmlSimpleList;

        $r0 = new org.apache.xmlbeans.XmlSimpleList$1;

        specialinvoke $r0.<org.apache.xmlbeans.XmlSimpleList$1: void <init>(org.apache.xmlbeans.XmlSimpleList)>(r1);

        return $r0;
    }

    public java.util.ListIterator listIterator()
    {
        org.apache.xmlbeans.XmlSimpleList r0;
        java.util.ListIterator $r1;

        r0 := @this: org.apache.xmlbeans.XmlSimpleList;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.XmlSimpleList: java.util.ListIterator listIterator(int)>(0);

        return $r1;
    }

    public java.util.ListIterator listIterator(int)
    {
        int i0;
        org.apache.xmlbeans.XmlSimpleList$2 $r0;
        org.apache.xmlbeans.XmlSimpleList r1;

        r1 := @this: org.apache.xmlbeans.XmlSimpleList;

        i0 := @parameter0: int;

        $r0 = new org.apache.xmlbeans.XmlSimpleList$2;

        specialinvoke $r0.<org.apache.xmlbeans.XmlSimpleList$2: void <init>(org.apache.xmlbeans.XmlSimpleList,int)>(r1, i0);

        return $r0;
    }

    private java.lang.String stringValue(java.lang.Object)
    {
        org.apache.xmlbeans.XmlSimpleList r4;
        java.lang.Object r0;
        java.lang.String $r1, $r3;
        org.apache.xmlbeans.SimpleValue $r2;
        boolean $z0;

        r4 := @this: org.apache.xmlbeans.XmlSimpleList;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.xmlbeans.SimpleValue;

        if $z0 == 0 goto label1;

        $r2 = (org.apache.xmlbeans.SimpleValue) r0;

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SimpleValue: java.lang.String stringValue()>();

        return $r3;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    public java.lang.String toString()
    {
        java.util.List $r1, $r2, $r7;
        org.apache.xmlbeans.XmlSimpleList r0;
        java.lang.StringBuffer $r5;
        int $i0, i1;
        java.lang.Object $r3, $r8;
        java.lang.String $r4, $r6, $r9;

        r0 := @this: org.apache.xmlbeans.XmlSimpleList;

        $r1 = r0.<org.apache.xmlbeans.XmlSimpleList: java.util.List underlying>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return "";

     label1:
        $r2 = r0.<org.apache.xmlbeans.XmlSimpleList: java.util.List underlying>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = specialinvoke r0.<org.apache.xmlbeans.XmlSimpleList: java.lang.String stringValue(java.lang.Object)>($r3);

        if $i0 != 1 goto label2;

        return $r4;

     label2:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(java.lang.String)>($r4);

        i1 = 1;

     label3:
        if i1 >= $i0 goto label4;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r7 = r0.<org.apache.xmlbeans.XmlSimpleList: java.util.List underlying>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i1);

        $r9 = specialinvoke r0.<org.apache.xmlbeans.XmlSimpleList: java.lang.String stringValue(java.lang.Object)>($r8);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        i1 = i1 + 1;

        goto label3;

     label4:
        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.List r3, $r4, $r5;
        org.apache.xmlbeans.XmlSimpleList r0, r2;
        int $i0, $i1, i2;
        java.lang.Object r1, $r6, $r7;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.XmlSimpleList;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.apache.xmlbeans.XmlSimpleList;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.apache.xmlbeans.XmlSimpleList) r1;

        r3 = r2.<org.apache.xmlbeans.XmlSimpleList: java.util.List underlying>;

        $r4 = r0.<org.apache.xmlbeans.XmlSimpleList: java.util.List underlying>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i0 == $i1 goto label3;

        return 0;

     label3:
        i2 = 0;

     label4:
        if i2 >= $i0 goto label8;

        $r5 = r0.<org.apache.xmlbeans.XmlSimpleList: java.util.List underlying>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i2);

        $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i2);

        if $r6 != null goto label5;

        if $r7 == null goto label7;

        goto label6;

     label5:
        $z1 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label7;

     label6:
        return 0;

     label7:
        i2 = i2 + 1;

        goto label4;

     label8:
        return 1;
    }

    public int hashCode()
    {
        java.util.List $r1, $r2;
        org.apache.xmlbeans.XmlSimpleList r0;
        int $i0, $i1, i2, i3, i4;
        java.lang.Object $r3;

        r0 := @this: org.apache.xmlbeans.XmlSimpleList;

        $r1 = r0.<org.apache.xmlbeans.XmlSimpleList: java.util.List underlying>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        i2 = 0;

        i3 = 0;

     label1:
        if i3 >= $i0 goto label2;

        $r2 = r0.<org.apache.xmlbeans.XmlSimpleList: java.util.List underlying>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i3);

        i4 = i2 * 19;

        $i1 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

        i2 = i4 + $i1;

        i3 = i3 + 1;

        goto label1;

     label2:
        return i2;
    }

    static java.util.List access$000(org.apache.xmlbeans.XmlSimpleList)
    {
        java.util.List $r1;
        org.apache.xmlbeans.XmlSimpleList r0;

        r0 := @parameter0: org.apache.xmlbeans.XmlSimpleList;

        $r1 = r0.<org.apache.xmlbeans.XmlSimpleList: java.util.List underlying>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.xmlbeans.XmlSimpleList: long serialVersionUID> = 1L;

        return;
    }
}
