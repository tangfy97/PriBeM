class org.aspectj.runtime.reflect.LockSignatureImpl extends org.aspectj.runtime.reflect.SignatureImpl implements org.aspectj.lang.reflect.LockSignature
{
    private java.lang.Class parameterType;

    void <init>(java.lang.Class)
    {
        java.lang.Class r1;
        org.aspectj.runtime.reflect.LockSignatureImpl r0;

        r0 := @this: org.aspectj.runtime.reflect.LockSignatureImpl;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.aspectj.runtime.reflect.SignatureImpl: void <init>(int,java.lang.String,java.lang.Class)>(8, "lock", r1);

        r0.<org.aspectj.runtime.reflect.LockSignatureImpl: java.lang.Class parameterType> = r1;

        return;
    }

    void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.aspectj.runtime.reflect.LockSignatureImpl r0;

        r0 := @this: org.aspectj.runtime.reflect.LockSignatureImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.aspectj.runtime.reflect.SignatureImpl: void <init>(java.lang.String)>(r1);

        return;
    }

    protected java.lang.String createToString(org.aspectj.runtime.reflect.StringMaker)
    {
        org.aspectj.runtime.reflect.LockSignatureImpl r0;
        org.aspectj.runtime.reflect.StringMaker r4;
        java.lang.StringBuffer $r2, $r3, $r7, $r8;
        java.lang.Class $r1, $r5, $r10;
        java.lang.String $r6, $r9;

        r0 := @this: org.aspectj.runtime.reflect.LockSignatureImpl;

        r4 := @parameter0: org.aspectj.runtime.reflect.StringMaker;

        $r1 = r0.<org.aspectj.runtime.reflect.LockSignatureImpl: java.lang.Class parameterType>;

        if $r1 != null goto label1;

        $r10 = virtualinvoke r0.<org.aspectj.runtime.reflect.SignatureImpl: java.lang.Class extractType(int)>(3);

        r0.<org.aspectj.runtime.reflect.LockSignatureImpl: java.lang.Class parameterType> = $r10;

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("lock(");

        $r5 = r0.<org.aspectj.runtime.reflect.LockSignatureImpl: java.lang.Class parameterType>;

        $r6 = virtualinvoke r4.<org.aspectj.runtime.reflect.StringMaker: java.lang.String makeTypeName(java.lang.Class)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }

    public java.lang.Class getParameterType()
    {
        java.lang.Class $r1, $r2, $r3;
        org.aspectj.runtime.reflect.LockSignatureImpl r0;

        r0 := @this: org.aspectj.runtime.reflect.LockSignatureImpl;

        $r1 = r0.<org.aspectj.runtime.reflect.LockSignatureImpl: java.lang.Class parameterType>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.aspectj.runtime.reflect.SignatureImpl: java.lang.Class extractType(int)>(3);

        r0.<org.aspectj.runtime.reflect.LockSignatureImpl: java.lang.Class parameterType> = $r3;

     label1:
        $r2 = r0.<org.aspectj.runtime.reflect.LockSignatureImpl: java.lang.Class parameterType>;

        return $r2;
    }
}
