public class org.tukaani.xz.index.BlockInfo extends java.lang.Object
{
    public int blockNumber;
    public long compressedOffset;
    public long uncompressedOffset;
    public long unpaddedSize;
    public long uncompressedSize;
    org.tukaani.xz.index.IndexDecoder index;

    public void <init>(org.tukaani.xz.index.IndexDecoder)
    {
        org.tukaani.xz.index.BlockInfo r0;
        int $i1;
        org.tukaani.xz.index.IndexDecoder r1;

        r0 := @this: org.tukaani.xz.index.BlockInfo;

        r1 := @parameter0: org.tukaani.xz.index.IndexDecoder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = (int) -1;

        r0.<org.tukaani.xz.index.BlockInfo: int blockNumber> = $i1;

        r0.<org.tukaani.xz.index.BlockInfo: long compressedOffset> = -1L;

        r0.<org.tukaani.xz.index.BlockInfo: long uncompressedOffset> = -1L;

        r0.<org.tukaani.xz.index.BlockInfo: long unpaddedSize> = -1L;

        r0.<org.tukaani.xz.index.BlockInfo: long uncompressedSize> = -1L;

        r0.<org.tukaani.xz.index.BlockInfo: org.tukaani.xz.index.IndexDecoder index> = r1;

        return;
    }

    public int getCheckType()
    {
        org.tukaani.xz.common.StreamFlags $r2;
        org.tukaani.xz.index.BlockInfo r0;
        int $i0;
        org.tukaani.xz.index.IndexDecoder $r1;

        r0 := @this: org.tukaani.xz.index.BlockInfo;

        $r1 = r0.<org.tukaani.xz.index.BlockInfo: org.tukaani.xz.index.IndexDecoder index>;

        $r2 = virtualinvoke $r1.<org.tukaani.xz.index.IndexDecoder: org.tukaani.xz.common.StreamFlags getStreamFlags()>();

        $i0 = $r2.<org.tukaani.xz.common.StreamFlags: int checkType>;

        return $i0;
    }

    public boolean hasNext()
    {
        org.tukaani.xz.index.BlockInfo r0;
        int $i0, $i1;
        org.tukaani.xz.index.IndexDecoder $r1;
        boolean $z0;

        r0 := @this: org.tukaani.xz.index.BlockInfo;

        $r1 = r0.<org.tukaani.xz.index.BlockInfo: org.tukaani.xz.index.IndexDecoder index>;

        $i0 = r0.<org.tukaani.xz.index.BlockInfo: int blockNumber>;

        $i1 = $i0 + 1;

        $z0 = virtualinvoke $r1.<org.tukaani.xz.index.IndexDecoder: boolean hasRecord(int)>($i1);

        return $z0;
    }

    public void setNext()
    {
        org.tukaani.xz.index.BlockInfo r0;
        int $i0, $i1;
        org.tukaani.xz.index.IndexDecoder $r1;

        r0 := @this: org.tukaani.xz.index.BlockInfo;

        $r1 = r0.<org.tukaani.xz.index.BlockInfo: org.tukaani.xz.index.IndexDecoder index>;

        $i0 = r0.<org.tukaani.xz.index.BlockInfo: int blockNumber>;

        $i1 = $i0 + 1;

        virtualinvoke $r1.<org.tukaani.xz.index.IndexDecoder: void setBlockInfo(org.tukaani.xz.index.BlockInfo,int)>(r0, $i1);

        return;
    }
}
