public class groovy.util.GroovyTestSuite extends junit.framework.TestSuite
{
    protected static java.lang.String file;
    protected final groovy.lang.GroovyClassLoader loader;
    static java.lang.Class class$groovy$util$GroovyTestSuite;
    static java.lang.Class class$junit$framework$Test;
    static java.lang.Class class$groovy$lang$Script;

    public void <init>()
    {
        groovy.util.GroovyTestSuite r0;
        java.lang.Class $r2, $r4;
        java.lang.ClassLoader $r3;
        groovy.lang.GroovyClassLoader $r1;

        r0 := @this: groovy.util.GroovyTestSuite;

        specialinvoke r0.<junit.framework.TestSuite: void <init>()>();

        $r1 = new groovy.lang.GroovyClassLoader;

        $r2 = <groovy.util.GroovyTestSuite: java.lang.Class class$groovy$util$GroovyTestSuite>;

        if $r2 != null goto label1;

        $r4 = staticinvoke <groovy.util.GroovyTestSuite: java.lang.Class class$(java.lang.String)>("groovy.util.GroovyTestSuite");

        <groovy.util.GroovyTestSuite: java.lang.Class class$groovy$util$GroovyTestSuite> = $r4;

        goto label2;

     label1:
        $r4 = <groovy.util.GroovyTestSuite: java.lang.Class class$groovy$util$GroovyTestSuite>;

     label2:
        $r3 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke $r1.<groovy.lang.GroovyClassLoader: void <init>(java.lang.ClassLoader)>($r3);

        r0.<groovy.util.GroovyTestSuite: groovy.lang.GroovyClassLoader loader> = $r1;

        return;
    }

    public static void main(java.lang.String[])
    {
        junit.framework.Test $r1;
        int $i0;
        java.lang.String[] r0;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 <= 0 goto label1;

        $r2 = r0[0];

        <groovy.util.GroovyTestSuite: java.lang.String file> = $r2;

     label1:
        $r1 = staticinvoke <groovy.util.GroovyTestSuite: junit.framework.Test suite()>();

        staticinvoke <junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>($r1);

        return;
    }

    public static junit.framework.Test suite()
    {
        groovy.util.GroovyTestSuite $r0;
        java.lang.StringBuffer $r3, $r4, $r5;
        java.lang.RuntimeException $r2;
        java.lang.String $r6;
        java.lang.Exception $r1;

        $r0 = new groovy.util.GroovyTestSuite;

        specialinvoke $r0.<groovy.util.GroovyTestSuite: void <init>()>();

     label1:
        virtualinvoke $r0.<groovy.util.GroovyTestSuite: void loadTestSuite()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not create the test suite: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r6, $r1);

        throw $r2;

     label4:
        return $r0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void loadTestSuite() throws java.lang.Exception
    {
        java.lang.String[] r9;
        groovy.util.GroovyTestSuite r7;
        org.codehaus.groovy.runtime.ScriptTestAdapter $r12;
        java.lang.StringBuffer $r2, $r4, $r5;
        java.lang.String $r0, $r1, $r6;
        boolean $z0, $z1;
        java.io.PrintStream $r3;
        java.lang.RuntimeException $r13;
        java.lang.Class $r8, $r10, $r11, $r14, $r15;

        r7 := @this: groovy.util.GroovyTestSuite;

        $r0 = <groovy.util.GroovyTestSuite: java.lang.String file>;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("test", $r0);

        if $r1 != null goto label1;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>("No filename given in the \'test\' system property so cannot run a Groovy unit test");

        throw $r13;

     label1:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Compiling: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r8 = virtualinvoke r7.<groovy.util.GroovyTestSuite: java.lang.Class compile(java.lang.String)>($r1);

        r9 = newarray (java.lang.String)[0];

        $r10 = <groovy.util.GroovyTestSuite: java.lang.Class class$junit$framework$Test>;

        if $r10 != null goto label2;

        $r14 = staticinvoke <groovy.util.GroovyTestSuite: java.lang.Class class$(java.lang.String)>("junit.framework.Test");

        <groovy.util.GroovyTestSuite: java.lang.Class class$junit$framework$Test> = $r14;

        goto label3;

     label2:
        $r14 = <groovy.util.GroovyTestSuite: java.lang.Class class$junit$framework$Test>;

     label3:
        $z0 = virtualinvoke $r14.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r8);

        if $z0 != 0 goto label6;

        $r11 = <groovy.util.GroovyTestSuite: java.lang.Class class$groovy$lang$Script>;

        if $r11 != null goto label4;

        $r15 = staticinvoke <groovy.util.GroovyTestSuite: java.lang.Class class$(java.lang.String)>("groovy.lang.Script");

        <groovy.util.GroovyTestSuite: java.lang.Class class$groovy$lang$Script> = $r15;

        goto label5;

     label4:
        $r15 = <groovy.util.GroovyTestSuite: java.lang.Class class$groovy$lang$Script>;

     label5:
        $z1 = virtualinvoke $r15.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r8);

        if $z1 == 0 goto label6;

        $r12 = new org.codehaus.groovy.runtime.ScriptTestAdapter;

        specialinvoke $r12.<org.codehaus.groovy.runtime.ScriptTestAdapter: void <init>(java.lang.Class,java.lang.String[])>($r8, r9);

        virtualinvoke r7.<groovy.util.GroovyTestSuite: void addTest(junit.framework.Test)>($r12);

        goto label7;

     label6:
        virtualinvoke r7.<groovy.util.GroovyTestSuite: void addTestSuite(java.lang.Class)>($r8);

     label7:
        return;
    }

    public java.lang.Class compile(java.lang.String) throws java.lang.Exception
    {
        groovy.util.GroovyTestSuite r0;
        java.lang.Class $r4;
        java.lang.String r2;
        groovy.lang.GroovyClassLoader $r3;
        java.io.File $r1;

        r0 := @this: groovy.util.GroovyTestSuite;

        r2 := @parameter0: java.lang.String;

        $r3 = r0.<groovy.util.GroovyTestSuite: groovy.lang.GroovyClassLoader loader>;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<groovy.lang.GroovyClassLoader: java.lang.Class parseClass(java.io.File)>($r1);

        return $r4;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        <groovy.util.GroovyTestSuite: java.lang.String file> = null;

        return;
    }
}
