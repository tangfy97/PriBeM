public class de.l3s.boilerpipe.filters.heuristics.SimpleBlockFusionProcessor extends java.lang.Object implements de.l3s.boilerpipe.BoilerpipeFilter
{
    public static final de.l3s.boilerpipe.filters.heuristics.SimpleBlockFusionProcessor INSTANCE;

    public void <init>()
    {
        de.l3s.boilerpipe.filters.heuristics.SimpleBlockFusionProcessor r0;

        r0 := @this: de.l3s.boilerpipe.filters.heuristics.SimpleBlockFusionProcessor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static de.l3s.boilerpipe.filters.heuristics.SimpleBlockFusionProcessor getInstance()
    {
        de.l3s.boilerpipe.filters.heuristics.SimpleBlockFusionProcessor $r0;

        $r0 = <de.l3s.boilerpipe.filters.heuristics.SimpleBlockFusionProcessor: de.l3s.boilerpipe.filters.heuristics.SimpleBlockFusionProcessor INSTANCE>;

        return $r0;
    }

    public boolean process(de.l3s.boilerpipe.document.TextDocument) throws de.l3s.boilerpipe.BoilerpipeProcessingException
    {
        de.l3s.boilerpipe.document.TextDocument r0;
        java.util.ListIterator $r3;
        java.util.List $r1;
        byte $b1;
        de.l3s.boilerpipe.document.TextBlock r5, r7;
        de.l3s.boilerpipe.filters.heuristics.SimpleBlockFusionProcessor r6;
        int $i0;
        float $f0, $f1;
        java.lang.Object $r2, $r4;
        boolean $z0, z1, $z2;

        r6 := @this: de.l3s.boilerpipe.filters.heuristics.SimpleBlockFusionProcessor;

        r0 := @parameter0: de.l3s.boilerpipe.document.TextDocument;

        $r1 = virtualinvoke r0.<de.l3s.boilerpipe.document.TextDocument: java.util.List getTextBlocks()>();

        z1 = 0;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= 2 goto label1;

        return 0;

     label1:
        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        r7 = (de.l3s.boilerpipe.document.TextBlock) $r2;

        $r3 = interfaceinvoke $r1.<java.util.List: java.util.ListIterator listIterator(int)>(1);

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (de.l3s.boilerpipe.document.TextBlock) $r4;

        $f0 = virtualinvoke r7.<de.l3s.boilerpipe.document.TextBlock: float getTextDensity()>();

        $f1 = virtualinvoke r5.<de.l3s.boilerpipe.document.TextBlock: float getTextDensity()>();

        $b1 = $f0 cmpl $f1;

        if $b1 != 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        if $z2 == 0 goto label5;

        virtualinvoke r7.<de.l3s.boilerpipe.document.TextBlock: void mergeNext(de.l3s.boilerpipe.document.TextBlock)>(r5);

        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        z1 = 1;

        goto label6;

     label5:
        r7 = r5;

     label6:
        goto label2;

     label7:
        return z1;
    }

    static void <clinit>()
    {
        de.l3s.boilerpipe.filters.heuristics.SimpleBlockFusionProcessor $r0;

        $r0 = new de.l3s.boilerpipe.filters.heuristics.SimpleBlockFusionProcessor;

        specialinvoke $r0.<de.l3s.boilerpipe.filters.heuristics.SimpleBlockFusionProcessor: void <init>()>();

        <de.l3s.boilerpipe.filters.heuristics.SimpleBlockFusionProcessor: de.l3s.boilerpipe.filters.heuristics.SimpleBlockFusionProcessor INSTANCE> = $r0;

        return;
    }
}
