public class org.bouncycastle.cms.KeyTransRecipientInformation extends org.bouncycastle.cms.RecipientInformation
{
    private org.bouncycastle.asn1.cms.KeyTransRecipientInfo info;

    public void <init>(org.bouncycastle.asn1.cms.KeyTransRecipientInfo, org.bouncycastle.asn1.x509.AlgorithmIdentifier, java.io.InputStream)
    {
        org.bouncycastle.cms.KeyTransRecipientInformation r0;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier r2;
        org.bouncycastle.asn1.cms.KeyTransRecipientInfo r1;
        java.io.InputStream r3;

        r0 := @this: org.bouncycastle.cms.KeyTransRecipientInformation;

        r1 := @parameter0: org.bouncycastle.asn1.cms.KeyTransRecipientInfo;

        r2 := @parameter1: org.bouncycastle.asn1.x509.AlgorithmIdentifier;

        r3 := @parameter2: java.io.InputStream;

        specialinvoke r0.<org.bouncycastle.cms.KeyTransRecipientInformation: void <init>(org.bouncycastle.asn1.cms.KeyTransRecipientInfo,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.io.InputStream)>(r1, r2, null, null, r3);

        return;
    }

    public void <init>(org.bouncycastle.asn1.cms.KeyTransRecipientInfo, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, java.io.InputStream)
    {
        org.bouncycastle.cms.KeyTransRecipientInformation r0;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier r2, r3;
        org.bouncycastle.asn1.cms.KeyTransRecipientInfo r1;
        java.io.InputStream r4;

        r0 := @this: org.bouncycastle.cms.KeyTransRecipientInformation;

        r1 := @parameter0: org.bouncycastle.asn1.cms.KeyTransRecipientInfo;

        r2 := @parameter1: org.bouncycastle.asn1.x509.AlgorithmIdentifier;

        r3 := @parameter2: org.bouncycastle.asn1.x509.AlgorithmIdentifier;

        r4 := @parameter3: java.io.InputStream;

        specialinvoke r0.<org.bouncycastle.cms.KeyTransRecipientInformation: void <init>(org.bouncycastle.asn1.cms.KeyTransRecipientInfo,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.io.InputStream)>(r1, r2, r3, null, r4);

        return;
    }

    void <init>(org.bouncycastle.asn1.cms.KeyTransRecipientInfo, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.asn1.x509.AlgorithmIdentifier, java.io.InputStream)
    {
        byte[] $r13, $r20;
        org.bouncycastle.asn1.DEREncodable $r9, $r17;
        org.bouncycastle.asn1.cms.KeyTransRecipientInfo r4;
        org.bouncycastle.asn1.ASN1OctetString $r18;
        org.bouncycastle.asn1.cms.RecipientIdentifier $r8;
        org.bouncycastle.cms.KeyTransRecipientInformation r0;
        java.math.BigInteger $r16;
        boolean $z0;
        org.bouncycastle.asn1.x509.X509Name $r12;
        org.bouncycastle.cms.RecipientId $r7, $r11, $r14, $r19;
        java.io.IOException $r21;
        org.bouncycastle.asn1.DERInteger $r15;
        java.lang.IllegalArgumentException $r22;
        org.bouncycastle.asn1.cms.IssuerAndSerialNumber $r10;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier r1, r2, r3, $r5;
        java.io.InputStream r6;

        r0 := @this: org.bouncycastle.cms.KeyTransRecipientInformation;

        r4 := @parameter0: org.bouncycastle.asn1.cms.KeyTransRecipientInfo;

        r1 := @parameter1: org.bouncycastle.asn1.x509.AlgorithmIdentifier;

        r2 := @parameter2: org.bouncycastle.asn1.x509.AlgorithmIdentifier;

        r3 := @parameter3: org.bouncycastle.asn1.x509.AlgorithmIdentifier;

        r6 := @parameter4: java.io.InputStream;

        $r5 = virtualinvoke r4.<org.bouncycastle.asn1.cms.KeyTransRecipientInfo: org.bouncycastle.asn1.x509.AlgorithmIdentifier getKeyEncryptionAlgorithm()>();

        specialinvoke r0.<org.bouncycastle.cms.RecipientInformation: void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.io.InputStream)>(r1, r2, r3, $r5, r6);

        r0.<org.bouncycastle.cms.KeyTransRecipientInformation: org.bouncycastle.asn1.cms.KeyTransRecipientInfo info> = r4;

        $r7 = new org.bouncycastle.cms.RecipientId;

        specialinvoke $r7.<org.bouncycastle.cms.RecipientId: void <init>()>();

        r0.<org.bouncycastle.cms.KeyTransRecipientInformation: org.bouncycastle.cms.RecipientId rid> = $r7;

        $r8 = virtualinvoke r4.<org.bouncycastle.asn1.cms.KeyTransRecipientInfo: org.bouncycastle.asn1.cms.RecipientIdentifier getRecipientIdentifier()>();

     label1:
        $z0 = virtualinvoke $r8.<org.bouncycastle.asn1.cms.RecipientIdentifier: boolean isTagged()>();

        if $z0 == 0 goto label2;

        $r17 = virtualinvoke $r8.<org.bouncycastle.asn1.cms.RecipientIdentifier: org.bouncycastle.asn1.DEREncodable getId()>();

        $r18 = staticinvoke <org.bouncycastle.asn1.ASN1OctetString: org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)>($r17);

        $r19 = r0.<org.bouncycastle.cms.KeyTransRecipientInformation: org.bouncycastle.cms.RecipientId rid>;

        $r20 = virtualinvoke $r18.<org.bouncycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        virtualinvoke $r19.<org.bouncycastle.cms.RecipientId: void setSubjectKeyIdentifier(byte[])>($r20);

        goto label3;

     label2:
        $r9 = virtualinvoke $r8.<org.bouncycastle.asn1.cms.RecipientIdentifier: org.bouncycastle.asn1.DEREncodable getId()>();

        $r10 = staticinvoke <org.bouncycastle.asn1.cms.IssuerAndSerialNumber: org.bouncycastle.asn1.cms.IssuerAndSerialNumber getInstance(java.lang.Object)>($r9);

        $r11 = r0.<org.bouncycastle.cms.KeyTransRecipientInformation: org.bouncycastle.cms.RecipientId rid>;

        $r12 = virtualinvoke $r10.<org.bouncycastle.asn1.cms.IssuerAndSerialNumber: org.bouncycastle.asn1.x509.X509Name getName()>();

        $r13 = virtualinvoke $r12.<org.bouncycastle.asn1.x509.X509Name: byte[] getEncoded()>();

        virtualinvoke $r11.<org.bouncycastle.cms.RecipientId: void setIssuer(byte[])>($r13);

        $r14 = r0.<org.bouncycastle.cms.KeyTransRecipientInformation: org.bouncycastle.cms.RecipientId rid>;

        $r15 = virtualinvoke $r10.<org.bouncycastle.asn1.cms.IssuerAndSerialNumber: org.bouncycastle.asn1.DERInteger getSerialNumber()>();

        $r16 = virtualinvoke $r15.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        virtualinvoke $r14.<org.bouncycastle.cms.RecipientId: void setSerialNumber(java.math.BigInteger)>($r16);

     label3:
        goto label5;

     label4:
        $r21 := @caughtexception;

        $r22 = new java.lang.IllegalArgumentException;

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid rid in KeyTransRecipientInformation");

        throw $r22;

     label5:
        return;

        catch java.io.IOException from label1 to label3 with label4;
    }

    private java.lang.String getExchangeEncryptionAlgorithmName(org.bouncycastle.asn1.DERObjectIdentifier)
    {
        org.bouncycastle.cms.KeyTransRecipientInformation r3;
        java.lang.String $r2;
        org.bouncycastle.asn1.DERObjectIdentifier r0, $r1;
        boolean $z0;

        r3 := @this: org.bouncycastle.cms.KeyTransRecipientInformation;

        r0 := @parameter0: org.bouncycastle.asn1.DERObjectIdentifier;

        $r1 = <org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier rsaEncryption>;

        $z0 = virtualinvoke $r1.<org.bouncycastle.asn1.DERObjectIdentifier: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        return "RSA/ECB/PKCS1Padding";

     label1:
        $r2 = virtualinvoke r0.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        return $r2;
    }

    protected java.security.Key getSessionKey(java.security.Key, java.security.Provider) throws org.bouncycastle.cms.CMSException
    {
        byte[] $r3, $r28, $r31, $r34, $r37;
        java.lang.IllegalStateException $r32;
        javax.crypto.spec.SecretKeySpec $r27, $r30, $r33, $r36;
        org.bouncycastle.asn1.cms.KeyTransRecipientInfo $r1;
        org.bouncycastle.asn1.ASN1OctetString $r2;
        java.security.GeneralSecurityException $r35;
        org.bouncycastle.cms.KeyTransRecipientInformation r0;
        org.bouncycastle.asn1.DERObjectIdentifier $r5, $r9;
        javax.crypto.IllegalBlockSizeException $r18;
        java.security.ProviderException $r26;
        java.security.Provider r12;
        java.security.Key r15, r38;
        java.security.NoSuchAlgorithmException $r24;
        java.security.InvalidKeyException $r22;
        org.bouncycastle.cms.CMSException $r17, $r19, $r21, $r23, $r25;
        javax.crypto.Cipher $r14;
        org.bouncycastle.cms.CMSEnvelopedHelper $r8, $r13;
        javax.crypto.NoSuchPaddingException $r20;
        java.lang.String $r6, $r10, $r11;
        java.lang.UnsupportedOperationException $r29;
        javax.crypto.BadPaddingException $r16;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r4, $r7;

        r0 := @this: org.bouncycastle.cms.KeyTransRecipientInformation;

        r15 := @parameter0: java.security.Key;

        r12 := @parameter1: java.security.Provider;

        $r1 = r0.<org.bouncycastle.cms.KeyTransRecipientInformation: org.bouncycastle.asn1.cms.KeyTransRecipientInfo info>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.cms.KeyTransRecipientInfo: org.bouncycastle.asn1.ASN1OctetString getEncryptedKey()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        $r4 = r0.<org.bouncycastle.cms.KeyTransRecipientInformation: org.bouncycastle.asn1.x509.AlgorithmIdentifier keyEncAlg>;

        $r5 = virtualinvoke $r4.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        $r6 = specialinvoke r0.<org.bouncycastle.cms.KeyTransRecipientInformation: java.lang.String getExchangeEncryptionAlgorithmName(org.bouncycastle.asn1.DERObjectIdentifier)>($r5);

        $r7 = virtualinvoke r0.<org.bouncycastle.cms.KeyTransRecipientInformation: org.bouncycastle.asn1.x509.AlgorithmIdentifier getActiveAlgID()>();

        $r8 = <org.bouncycastle.cms.CMSEnvelopedHelper: org.bouncycastle.cms.CMSEnvelopedHelper INSTANCE>;

        $r9 = virtualinvoke $r7.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        $r10 = virtualinvoke $r9.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $r11 = virtualinvoke $r8.<org.bouncycastle.cms.CMSEnvelopedHelper: java.lang.String getSymmetricCipherName(java.lang.String)>($r10);

     label01:
        $r13 = <org.bouncycastle.cms.CMSEnvelopedHelper: org.bouncycastle.cms.CMSEnvelopedHelper INSTANCE>;

        $r14 = virtualinvoke $r13.<org.bouncycastle.cms.CMSEnvelopedHelper: javax.crypto.Cipher getSymmetricCipher(java.lang.String,java.security.Provider)>($r6, r12);

     label02:
        virtualinvoke $r14.<javax.crypto.Cipher: void init(int,java.security.Key)>(4, r15);

        r38 = virtualinvoke $r14.<javax.crypto.Cipher: java.security.Key unwrap(byte[],java.lang.String,int)>($r3, $r11, 3);

     label03:
        goto label08;

     label04:
        $r35 := @caughtexception;

        virtualinvoke $r14.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, r15);

        $r36 = new javax.crypto.spec.SecretKeySpec;

        $r37 = virtualinvoke $r14.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3);

        specialinvoke $r36.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r37, $r11);

        r38 = $r36;

        goto label08;

     label05:
        $r32 := @caughtexception;

        virtualinvoke $r14.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, r15);

        $r33 = new javax.crypto.spec.SecretKeySpec;

        $r34 = virtualinvoke $r14.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3);

        specialinvoke $r33.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r34, $r11);

        r38 = $r33;

        goto label08;

     label06:
        $r29 := @caughtexception;

        virtualinvoke $r14.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, r15);

        $r30 = new javax.crypto.spec.SecretKeySpec;

        $r31 = virtualinvoke $r14.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3);

        specialinvoke $r30.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r31, $r11);

        r38 = $r30;

        goto label08;

     label07:
        $r26 := @caughtexception;

        virtualinvoke $r14.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, r15);

        $r27 = new javax.crypto.spec.SecretKeySpec;

        $r28 = virtualinvoke $r14.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3);

        specialinvoke $r27.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r28, $r11);

        r38 = $r27;

     label08:
        return r38;

     label09:
        $r24 := @caughtexception;

        $r25 = new org.bouncycastle.cms.CMSException;

        specialinvoke $r25.<org.bouncycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("can\'t find algorithm.", $r24);

        throw $r25;

     label10:
        $r22 := @caughtexception;

        $r23 = new org.bouncycastle.cms.CMSException;

        specialinvoke $r23.<org.bouncycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("key invalid in message.", $r22);

        throw $r23;

     label11:
        $r20 := @caughtexception;

        $r21 = new org.bouncycastle.cms.CMSException;

        specialinvoke $r21.<org.bouncycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("required padding not supported.", $r20);

        throw $r21;

     label12:
        $r18 := @caughtexception;

        $r19 = new org.bouncycastle.cms.CMSException;

        specialinvoke $r19.<org.bouncycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("illegal blocksize in message.", $r18);

        throw $r19;

     label13:
        $r16 := @caughtexception;

        $r17 = new org.bouncycastle.cms.CMSException;

        specialinvoke $r17.<org.bouncycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("bad padding in message.", $r16);

        throw $r17;

        catch java.security.GeneralSecurityException from label02 to label03 with label04;
        catch java.lang.IllegalStateException from label02 to label03 with label05;
        catch java.lang.UnsupportedOperationException from label02 to label03 with label06;
        catch java.security.ProviderException from label02 to label03 with label07;
        catch java.security.NoSuchAlgorithmException from label01 to label08 with label09;
        catch java.security.InvalidKeyException from label01 to label08 with label10;
        catch javax.crypto.NoSuchPaddingException from label01 to label08 with label11;
        catch javax.crypto.IllegalBlockSizeException from label01 to label08 with label12;
        catch javax.crypto.BadPaddingException from label01 to label08 with label13;
    }

    public org.bouncycastle.cms.CMSTypedStream getContentStream(java.security.Key, java.lang.String) throws org.bouncycastle.cms.CMSException, java.security.NoSuchProviderException
    {
        java.security.Key r1;
        org.bouncycastle.cms.KeyTransRecipientInformation r0;
        org.bouncycastle.cms.CMSTypedStream $r4;
        java.lang.String r2;
        java.security.Provider $r3;

        r0 := @this: org.bouncycastle.cms.KeyTransRecipientInformation;

        r1 := @parameter0: java.security.Key;

        r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <org.bouncycastle.cms.CMSUtils: java.security.Provider getProvider(java.lang.String)>(r2);

        $r4 = virtualinvoke r0.<org.bouncycastle.cms.KeyTransRecipientInformation: org.bouncycastle.cms.CMSTypedStream getContentStream(java.security.Key,java.security.Provider)>(r1, $r3);

        return $r4;
    }

    public org.bouncycastle.cms.CMSTypedStream getContentStream(java.security.Key, java.security.Provider) throws org.bouncycastle.cms.CMSException
    {
        java.security.Key r1, $r3;
        org.bouncycastle.cms.KeyTransRecipientInformation r0;
        org.bouncycastle.cms.CMSTypedStream $r4;
        java.security.Provider r2;

        r0 := @this: org.bouncycastle.cms.KeyTransRecipientInformation;

        r1 := @parameter0: java.security.Key;

        r2 := @parameter1: java.security.Provider;

        $r3 = virtualinvoke r0.<org.bouncycastle.cms.KeyTransRecipientInformation: java.security.Key getSessionKey(java.security.Key,java.security.Provider)>(r1, r2);

        $r4 = virtualinvoke r0.<org.bouncycastle.cms.KeyTransRecipientInformation: org.bouncycastle.cms.CMSTypedStream getContentFromSessionKey(java.security.Key,java.security.Provider)>($r3, r2);

        return $r4;
    }
}
