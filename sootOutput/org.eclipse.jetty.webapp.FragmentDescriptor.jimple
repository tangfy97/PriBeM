public class org.eclipse.jetty.webapp.FragmentDescriptor extends org.eclipse.jetty.webapp.WebDescriptor
{
    public static final java.lang.String NAMELESS;
    protected static int _counter;
    protected org.eclipse.jetty.webapp.FragmentDescriptor$OtherType _otherType;
    protected java.util.List _befores;
    protected java.util.List _afters;
    protected java.lang.String _name;

    public void <init>(org.eclipse.jetty.util.resource.Resource) throws java.lang.Exception
    {
        org.eclipse.jetty.util.resource.Resource r1;
        org.eclipse.jetty.webapp.FragmentDescriptor$OtherType $r2;
        org.eclipse.jetty.webapp.FragmentDescriptor r0;
        java.util.ArrayList $r3, $r4;

        r0 := @this: org.eclipse.jetty.webapp.FragmentDescriptor;

        r1 := @parameter0: org.eclipse.jetty.util.resource.Resource;

        specialinvoke r0.<org.eclipse.jetty.webapp.WebDescriptor: void <init>(org.eclipse.jetty.util.resource.Resource)>(r1);

        $r2 = <org.eclipse.jetty.webapp.FragmentDescriptor$OtherType: org.eclipse.jetty.webapp.FragmentDescriptor$OtherType None>;

        r0.<org.eclipse.jetty.webapp.FragmentDescriptor: org.eclipse.jetty.webapp.FragmentDescriptor$OtherType _otherType> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.eclipse.jetty.webapp.FragmentDescriptor: java.util.List _befores> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.eclipse.jetty.webapp.FragmentDescriptor: java.util.List _afters> = $r4;

        return;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        org.eclipse.jetty.webapp.FragmentDescriptor r0;

        r0 := @this: org.eclipse.jetty.webapp.FragmentDescriptor;

        $r1 = r0.<org.eclipse.jetty.webapp.FragmentDescriptor: java.lang.String _name>;

        return $r1;
    }

    public void parse() throws java.lang.Exception
    {
        org.eclipse.jetty.webapp.FragmentDescriptor r0;

        r0 := @this: org.eclipse.jetty.webapp.FragmentDescriptor;

        specialinvoke r0.<org.eclipse.jetty.webapp.WebDescriptor: void parse()>();

        virtualinvoke r0.<org.eclipse.jetty.webapp.FragmentDescriptor: void processName()>();

        return;
    }

    public void processName()
    {
        org.eclipse.jetty.webapp.FragmentDescriptor r0;
        org.eclipse.jetty.xml.XmlParser$Node $r1, $r2;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6, $r7;

        r0 := @this: org.eclipse.jetty.webapp.FragmentDescriptor;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.webapp.FragmentDescriptor: org.eclipse.jetty.xml.XmlParser$Node getRoot()>();

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.xml.XmlParser$Node: org.eclipse.jetty.xml.XmlParser$Node get(java.lang.String)>("name");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@@-NAMELESS-@@");

        $i0 = <org.eclipse.jetty.webapp.FragmentDescriptor: int _counter>;

        $i1 = $i0 + 1;

        <org.eclipse.jetty.webapp.FragmentDescriptor: int _counter> = $i1;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.eclipse.jetty.webapp.FragmentDescriptor: java.lang.String _name> = $r6;

        if $r2 == null goto label1;

        $r7 = virtualinvoke $r2.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        if $r7 == null goto label1;

        $i2 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i2 <= 0 goto label1;

        r0.<org.eclipse.jetty.webapp.FragmentDescriptor: java.lang.String _name> = $r7;

     label1:
        return;
    }

    public void processOrdering()
    {
        org.eclipse.jetty.xml.XmlParser$Node $r1, $r2;
        org.eclipse.jetty.webapp.FragmentDescriptor r0;

        r0 := @this: org.eclipse.jetty.webapp.FragmentDescriptor;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.webapp.FragmentDescriptor: org.eclipse.jetty.xml.XmlParser$Node getRoot()>();

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.xml.XmlParser$Node: org.eclipse.jetty.xml.XmlParser$Node get(java.lang.String)>("ordering");

        if $r2 != null goto label1;

        return;

     label1:
        r0.<org.eclipse.jetty.webapp.FragmentDescriptor: boolean _isOrdered> = 1;

        virtualinvoke r0.<org.eclipse.jetty.webapp.FragmentDescriptor: void processBefores(org.eclipse.jetty.xml.XmlParser$Node)>($r2);

        virtualinvoke r0.<org.eclipse.jetty.webapp.FragmentDescriptor: void processAfters(org.eclipse.jetty.xml.XmlParser$Node)>($r2);

        return;
    }

    public void processBefores(org.eclipse.jetty.xml.XmlParser$Node)
    {
        java.lang.IllegalStateException $r12;
        org.eclipse.jetty.webapp.FragmentDescriptor$OtherType $r9, $r10, $r11;
        org.eclipse.jetty.webapp.FragmentDescriptor r6;
        org.eclipse.jetty.xml.XmlParser$Node r0, $r1, r19;
        java.lang.String $r4, $r5, $r8, $r18;
        java.net.URI $r16;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r2;
        java.util.List $r7;
        org.eclipse.jetty.util.resource.Resource $r15;
        java.lang.Object $r3;
        java.lang.StringBuilder $r13, $r14, $r17;

        r6 := @this: org.eclipse.jetty.webapp.FragmentDescriptor;

        r0 := @parameter0: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: org.eclipse.jetty.xml.XmlParser$Node get(java.lang.String)>("before");

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke $r1.<org.eclipse.jetty.xml.XmlParser$Node: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label7;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $z0 = $r3 instanceof org.eclipse.jetty.xml.XmlParser$Node;

        if $z0 != 0 goto label3;

        goto label2;

     label3:
        r19 = (org.eclipse.jetty.xml.XmlParser$Node) $r3;

        $r4 = virtualinvoke r19.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getTag()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("others");

        if $z1 == 0 goto label5;

        $r10 = r6.<org.eclipse.jetty.webapp.FragmentDescriptor: org.eclipse.jetty.webapp.FragmentDescriptor$OtherType _otherType>;

        $r9 = <org.eclipse.jetty.webapp.FragmentDescriptor$OtherType: org.eclipse.jetty.webapp.FragmentDescriptor$OtherType None>;

        if $r10 == $r9 goto label4;

        $r12 = new java.lang.IllegalStateException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate <other> clause detected in ");

        $r15 = r6.<org.eclipse.jetty.webapp.FragmentDescriptor: org.eclipse.jetty.util.resource.Resource _xml>;

        $r16 = virtualinvoke $r15.<org.eclipse.jetty.util.resource.Resource: java.net.URI getURI()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r18);

        throw $r12;

     label4:
        $r11 = <org.eclipse.jetty.webapp.FragmentDescriptor$OtherType: org.eclipse.jetty.webapp.FragmentDescriptor$OtherType Before>;

        r6.<org.eclipse.jetty.webapp.FragmentDescriptor: org.eclipse.jetty.webapp.FragmentDescriptor$OtherType _otherType> = $r11;

        goto label6;

     label5:
        $r5 = virtualinvoke r19.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getTag()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("name");

        if $z2 == 0 goto label6;

        $r7 = r6.<org.eclipse.jetty.webapp.FragmentDescriptor: java.util.List _befores>;

        $r8 = virtualinvoke r19.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8);

     label6:
        goto label2;

     label7:
        return;
    }

    public void processAfters(org.eclipse.jetty.xml.XmlParser$Node)
    {
        java.lang.IllegalStateException $r12;
        org.eclipse.jetty.webapp.FragmentDescriptor$OtherType $r9, $r10, $r11;
        org.eclipse.jetty.webapp.FragmentDescriptor r6;
        org.eclipse.jetty.xml.XmlParser$Node r0, $r1, r19;
        java.lang.String $r4, $r5, $r8, $r18;
        java.net.URI $r16;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r2;
        java.util.List $r7;
        org.eclipse.jetty.util.resource.Resource $r15;
        java.lang.Object $r3;
        java.lang.StringBuilder $r13, $r14, $r17;

        r6 := @this: org.eclipse.jetty.webapp.FragmentDescriptor;

        r0 := @parameter0: org.eclipse.jetty.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node: org.eclipse.jetty.xml.XmlParser$Node get(java.lang.String)>("after");

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke $r1.<org.eclipse.jetty.xml.XmlParser$Node: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label7;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $z0 = $r3 instanceof org.eclipse.jetty.xml.XmlParser$Node;

        if $z0 != 0 goto label3;

        goto label2;

     label3:
        r19 = (org.eclipse.jetty.xml.XmlParser$Node) $r3;

        $r4 = virtualinvoke r19.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getTag()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("others");

        if $z1 == 0 goto label5;

        $r10 = r6.<org.eclipse.jetty.webapp.FragmentDescriptor: org.eclipse.jetty.webapp.FragmentDescriptor$OtherType _otherType>;

        $r9 = <org.eclipse.jetty.webapp.FragmentDescriptor$OtherType: org.eclipse.jetty.webapp.FragmentDescriptor$OtherType After>;

        if $r10 == $r9 goto label4;

        $r12 = new java.lang.IllegalStateException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate <other> clause detected in ");

        $r15 = r6.<org.eclipse.jetty.webapp.FragmentDescriptor: org.eclipse.jetty.util.resource.Resource _xml>;

        $r16 = virtualinvoke $r15.<org.eclipse.jetty.util.resource.Resource: java.net.URI getURI()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r18);

        throw $r12;

     label4:
        $r11 = <org.eclipse.jetty.webapp.FragmentDescriptor$OtherType: org.eclipse.jetty.webapp.FragmentDescriptor$OtherType After>;

        r6.<org.eclipse.jetty.webapp.FragmentDescriptor: org.eclipse.jetty.webapp.FragmentDescriptor$OtherType _otherType> = $r11;

        goto label6;

     label5:
        $r5 = virtualinvoke r19.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String getTag()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("name");

        if $z2 == 0 goto label6;

        $r7 = r6.<org.eclipse.jetty.webapp.FragmentDescriptor: java.util.List _afters>;

        $r8 = virtualinvoke r19.<org.eclipse.jetty.xml.XmlParser$Node: java.lang.String toString(boolean,boolean)>(0, 1);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8);

     label6:
        goto label2;

     label7:
        return;
    }

    public java.util.List getBefores()
    {
        java.util.List $r1, $r2;
        org.eclipse.jetty.webapp.FragmentDescriptor r0;

        r0 := @this: org.eclipse.jetty.webapp.FragmentDescriptor;

        $r1 = r0.<org.eclipse.jetty.webapp.FragmentDescriptor: java.util.List _befores>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public java.util.List getAfters()
    {
        java.util.List $r1, $r2;
        org.eclipse.jetty.webapp.FragmentDescriptor r0;

        r0 := @this: org.eclipse.jetty.webapp.FragmentDescriptor;

        $r1 = r0.<org.eclipse.jetty.webapp.FragmentDescriptor: java.util.List _afters>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public org.eclipse.jetty.webapp.FragmentDescriptor$OtherType getOtherType()
    {
        org.eclipse.jetty.webapp.FragmentDescriptor$OtherType $r1;
        org.eclipse.jetty.webapp.FragmentDescriptor r0;

        r0 := @this: org.eclipse.jetty.webapp.FragmentDescriptor;

        $r1 = r0.<org.eclipse.jetty.webapp.FragmentDescriptor: org.eclipse.jetty.webapp.FragmentDescriptor$OtherType _otherType>;

        return $r1;
    }

    public java.util.List getOrdering()
    {
        org.eclipse.jetty.webapp.FragmentDescriptor r0;

        r0 := @this: org.eclipse.jetty.webapp.FragmentDescriptor;

        return null;
    }

    static void <clinit>()
    {
        <org.eclipse.jetty.webapp.FragmentDescriptor: java.lang.String NAMELESS> = "@@-NAMELESS-@@";

        <org.eclipse.jetty.webapp.FragmentDescriptor: int _counter> = 0;

        return;
    }
}
