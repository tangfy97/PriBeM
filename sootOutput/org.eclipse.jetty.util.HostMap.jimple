public class org.eclipse.jetty.util.HostMap extends java.util.HashMap
{

    public void <init>()
    {
        org.eclipse.jetty.util.HostMap r0;

        r0 := @this: org.eclipse.jetty.util.HostMap;

        specialinvoke r0.<java.util.HashMap: void <init>(int)>(11);

        return;
    }

    public void <init>(int)
    {
        int i0;
        org.eclipse.jetty.util.HostMap r0;

        r0 := @this: org.eclipse.jetty.util.HostMap;

        i0 := @parameter0: int;

        specialinvoke r0.<java.util.HashMap: void <init>(int)>(i0);

        return;
    }

    public java.lang.Object put(java.lang.String, java.lang.Object) throws java.lang.IllegalArgumentException
    {
        org.eclipse.jetty.util.HostMap r0;
        java.lang.Object r2, $r3;
        java.lang.String r1;

        r0 := @this: org.eclipse.jetty.util.HostMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = specialinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r3;
    }

    public java.lang.Object get(java.lang.Object)
    {
        org.eclipse.jetty.util.HostMap r0;
        java.lang.Object r1, $r2;

        r0 := @this: org.eclipse.jetty.util.HostMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        return $r2;
    }

    public java.lang.Object getLazyMatches(java.lang.String)
    {
        java.util.HashSet $r1;
        int $i0, $i1;
        java.lang.String r0, r10;
        boolean $z0, $z1;
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        java.util.Set $r3, $r8;
        org.eclipse.jetty.util.HostMap r2;
        java.util.List $r9;
        java.lang.Object $r5, $r7, r11;

        r2 := @this: org.eclipse.jetty.util.HostMap;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r8 = specialinvoke r2.<java.util.HashMap: java.util.Set entrySet()>();

        $r9 = staticinvoke <org.eclipse.jetty.util.LazyList: java.util.List getList(java.lang.Object)>($r8);

        return $r9;

     label1:
        r10 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

     label2:
        virtualinvoke $r1.<java.util.HashSet: boolean add(java.lang.Object)>(r10);

        $i0 = virtualinvoke r10.<java.lang.String: int indexOf(int)>(46);

        if $i0 <= 0 goto label3;

        $i1 = $i0 + 1;

        r10 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int)>($i1);

     label3:
        if $i0 > 0 goto label2;

        r11 = null;

        $r3 = specialinvoke r2.<java.util.HashMap: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = virtualinvoke $r1.<java.util.HashSet: boolean contains(java.lang.Object)>($r7);

        if $z1 == 0 goto label5;

        r11 = staticinvoke <org.eclipse.jetty.util.LazyList: java.lang.Object add(java.lang.Object,java.lang.Object)>(r11, r6);

     label5:
        goto label4;

     label6:
        return r11;
    }

    public volatile java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        org.eclipse.jetty.util.HostMap r0;
        java.lang.Object r1, r2, $r4;
        java.lang.String $r3;

        r0 := @this: org.eclipse.jetty.util.HostMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String) r1;

        $r4 = virtualinvoke r0.<org.eclipse.jetty.util.HostMap: java.lang.Object put(java.lang.String,java.lang.Object)>($r3, r2);

        return $r4;
    }
}
