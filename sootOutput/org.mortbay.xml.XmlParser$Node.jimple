public class org.mortbay.xml.XmlParser$Node extends java.util.AbstractList
{
    org.mortbay.xml.XmlParser$Node _parent;
    private java.util.ArrayList _list;
    private java.lang.String _tag;
    private org.mortbay.xml.XmlParser$Attribute[] _attrs;
    private boolean _lastString;
    private java.lang.String _path;

    void <init>(org.mortbay.xml.XmlParser$Node, java.lang.String, org.xml.sax.Attributes)
    {
        org.mortbay.xml.XmlParser$Attribute $r8;
        org.mortbay.xml.XmlParser$Attribute[] $r4, $r7;
        org.xml.sax.Attributes r3;
        int $i0, $i1, i2;
        org.mortbay.xml.XmlParser$Node r0, r1;
        java.lang.String r2, $r5, r6, $r9;
        boolean $z0;

        r0 := @this: org.mortbay.xml.XmlParser$Node;

        r1 := @parameter0: org.mortbay.xml.XmlParser$Node;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.xml.sax.Attributes;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        r0.<org.mortbay.xml.XmlParser$Node: boolean _lastString> = 0;

        r0.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Node _parent> = r1;

        r0.<org.mortbay.xml.XmlParser$Node: java.lang.String _tag> = r2;

        if r3 == null goto label4;

        $i0 = interfaceinvoke r3.<org.xml.sax.Attributes: int getLength()>();

        $r4 = newarray (org.mortbay.xml.XmlParser$Attribute)[$i0];

        r0.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Attribute[] _attrs> = $r4;

        i2 = 0;

     label1:
        $i1 = interfaceinvoke r3.<org.xml.sax.Attributes: int getLength()>();

        if i2 >= $i1 goto label4;

        $r5 = interfaceinvoke r3.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i2);

        r6 = $r5;

        if $r5 == null goto label2;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label3;

     label2:
        r6 = interfaceinvoke r3.<org.xml.sax.Attributes: java.lang.String getQName(int)>(i2);

     label3:
        $r7 = r0.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Attribute[] _attrs>;

        $r8 = new org.mortbay.xml.XmlParser$Attribute;

        $r9 = interfaceinvoke r3.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i2);

        specialinvoke $r8.<org.mortbay.xml.XmlParser$Attribute: void <init>(java.lang.String,java.lang.String)>(r6, $r9);

        $r7[i2] = $r8;

        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    public org.mortbay.xml.XmlParser$Node getParent()
    {
        org.mortbay.xml.XmlParser$Node r0, $r1;

        r0 := @this: org.mortbay.xml.XmlParser$Node;

        $r1 = r0.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Node _parent>;

        return $r1;
    }

    public java.lang.String getTag()
    {
        org.mortbay.xml.XmlParser$Node r0;
        java.lang.String $r1;

        r0 := @this: org.mortbay.xml.XmlParser$Node;

        $r1 = r0.<org.mortbay.xml.XmlParser$Node: java.lang.String _tag>;

        return $r1;
    }

    public java.lang.String getPath()
    {
        java.lang.StringBuffer $r3, $r4, $r6, $r10, $r13, $r14, $r16;
        org.mortbay.xml.XmlParser$Node r0, $r2, $r8, $r11;
        java.lang.String $r1, $r5, $r7, $r9, $r12, $r15, $r17, $r18;

        r0 := @this: org.mortbay.xml.XmlParser$Node;

        $r1 = r0.<org.mortbay.xml.XmlParser$Node: java.lang.String _path>;

        if $r1 != null goto label2;

        $r2 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Node getParent()>();

        if $r2 == null goto label1;

        $r8 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Node getParent()>();

        $r9 = virtualinvoke $r8.<org.mortbay.xml.XmlParser$Node: java.lang.String getTag()>();

        if $r9 == null goto label1;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Node getParent()>();

        $r12 = virtualinvoke $r11.<org.mortbay.xml.XmlParser$Node: java.lang.String getPath()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r15 = r0.<org.mortbay.xml.XmlParser$Node: java.lang.String _tag>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.mortbay.xml.XmlParser$Node: java.lang.String _path> = $r17;

        goto label2;

     label1:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r5 = r0.<org.mortbay.xml.XmlParser$Node: java.lang.String _tag>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.mortbay.xml.XmlParser$Node: java.lang.String _path> = $r7;

     label2:
        $r18 = r0.<org.mortbay.xml.XmlParser$Node: java.lang.String _path>;

        return $r18;
    }

    public org.mortbay.xml.XmlParser$Attribute[] getAttributes()
    {
        org.mortbay.xml.XmlParser$Node r0;
        org.mortbay.xml.XmlParser$Attribute[] $r1;

        r0 := @this: org.mortbay.xml.XmlParser$Node;

        $r1 = r0.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Attribute[] _attrs>;

        return $r1;
    }

    public java.lang.String getAttribute(java.lang.String)
    {
        org.mortbay.xml.XmlParser$Node r0;
        java.lang.String r1, $r2;

        r0 := @this: org.mortbay.xml.XmlParser$Node;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.lang.String getAttribute(java.lang.String,java.lang.String)>(r1, null);

        return $r2;
    }

    public java.lang.String getAttribute(java.lang.String, java.lang.String)
    {
        org.mortbay.xml.XmlParser$Attribute $r6, $r9;
        org.mortbay.xml.XmlParser$Attribute[] $r1, $r4, $r5, $r8;
        int $i0, i1;
        org.mortbay.xml.XmlParser$Node r0;
        java.lang.String r2, r3, $r7, $r10;
        boolean $z0;

        r0 := @this: org.mortbay.xml.XmlParser$Node;

        r3 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r1 = r0.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Attribute[] _attrs>;

        if $r1 == null goto label1;

        if r3 != null goto label2;

     label1:
        return r2;

     label2:
        i1 = 0;

     label3:
        $r4 = r0.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Attribute[] _attrs>;

        $i0 = lengthof $r4;

        if i1 >= $i0 goto label5;

        $r5 = r0.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Attribute[] _attrs>;

        $r6 = $r5[i1];

        $r7 = virtualinvoke $r6.<org.mortbay.xml.XmlParser$Attribute: java.lang.String getName()>();

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label4;

        $r8 = r0.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Attribute[] _attrs>;

        $r9 = $r8[i1];

        $r10 = virtualinvoke $r9.<org.mortbay.xml.XmlParser$Attribute: java.lang.String getValue()>();

        return $r10;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return r2;
    }

    public int size()
    {
        int $i0;
        org.mortbay.xml.XmlParser$Node r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: org.mortbay.xml.XmlParser$Node;

        $r1 = r0.<org.mortbay.xml.XmlParser$Node: java.util.ArrayList _list>;

        if $r1 == null goto label1;

        $r2 = r0.<org.mortbay.xml.XmlParser$Node: java.util.ArrayList _list>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        return $i0;

     label1:
        return 0;
    }

    public java.lang.Object get(int)
    {
        int i0;
        org.mortbay.xml.XmlParser$Node r0;
        java.lang.Object $r3;
        java.util.ArrayList $r1, $r2;

        r0 := @this: org.mortbay.xml.XmlParser$Node;

        i0 := @parameter0: int;

        $r1 = r0.<org.mortbay.xml.XmlParser$Node: java.util.ArrayList _list>;

        if $r1 == null goto label1;

        $r2 = r0.<org.mortbay.xml.XmlParser$Node: java.util.ArrayList _list>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        return $r3;

     label1:
        return null;
    }

    public org.mortbay.xml.XmlParser$Node get(java.lang.String)
    {
        java.util.ArrayList $r1, $r2, $r3;
        int $i0, i1;
        org.mortbay.xml.XmlParser$Node r0, r5;
        java.lang.Object $r4;
        java.lang.String r6, $r7;
        boolean $z0, $z1;

        r0 := @this: org.mortbay.xml.XmlParser$Node;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<org.mortbay.xml.XmlParser$Node: java.util.ArrayList _list>;

        if $r1 == null goto label3;

        i1 = 0;

     label1:
        $r2 = r0.<org.mortbay.xml.XmlParser$Node: java.util.ArrayList _list>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label3;

        $r3 = r0.<org.mortbay.xml.XmlParser$Node: java.util.ArrayList _list>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $z0 = $r4 instanceof org.mortbay.xml.XmlParser$Node;

        if $z0 == 0 goto label2;

        r5 = (org.mortbay.xml.XmlParser$Node) $r4;

        $r7 = r5.<org.mortbay.xml.XmlParser$Node: java.lang.String _tag>;

        $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label2;

        return r5;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public void add(int, java.lang.Object)
    {
        java.util.ArrayList $r1, $r3, $r4, $r5, $r7, $r8, $r14;
        java.lang.StringBuffer $r6, $r11, $r12;
        int i0, $i1, i2;
        org.mortbay.xml.XmlParser$Node r0;
        java.lang.String $r10, $r13;
        boolean $z0, $z1;
        java.lang.Object r2, $r9;

        r0 := @this: org.mortbay.xml.XmlParser$Node;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.Object;

        $r1 = r0.<org.mortbay.xml.XmlParser$Node: java.util.ArrayList _list>;

        if $r1 != null goto label1;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r0.<org.mortbay.xml.XmlParser$Node: java.util.ArrayList _list> = $r14;

     label1:
        $z0 = r2 instanceof java.lang.String;

        if $z0 == 0 goto label4;

        $z1 = r0.<org.mortbay.xml.XmlParser$Node: boolean _lastString>;

        if $z1 == 0 goto label2;

        $r5 = r0.<org.mortbay.xml.XmlParser$Node: java.util.ArrayList _list>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i2 = $i1 - 1;

        $r7 = r0.<org.mortbay.xml.XmlParser$Node: java.util.ArrayList _list>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r8 = r0.<org.mortbay.xml.XmlParser$Node: java.util.ArrayList _list>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r10 = (java.lang.String) $r9;

        $r11 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r7.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i2, $r13);

        goto label3;

     label2:
        $r4 = r0.<org.mortbay.xml.XmlParser$Node: java.util.ArrayList _list>;

        virtualinvoke $r4.<java.util.ArrayList: void add(int,java.lang.Object)>(i0, r2);

     label3:
        r0.<org.mortbay.xml.XmlParser$Node: boolean _lastString> = 1;

        goto label5;

     label4:
        r0.<org.mortbay.xml.XmlParser$Node: boolean _lastString> = 0;

        $r3 = r0.<org.mortbay.xml.XmlParser$Node: java.util.ArrayList _list>;

        virtualinvoke $r3.<java.util.ArrayList: void add(int,java.lang.Object)>(i0, r2);

     label5:
        return;
    }

    public void clear()
    {
        org.mortbay.xml.XmlParser$Node r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: org.mortbay.xml.XmlParser$Node;

        $r1 = r0.<org.mortbay.xml.XmlParser$Node: java.util.ArrayList _list>;

        if $r1 == null goto label1;

        $r2 = r0.<org.mortbay.xml.XmlParser$Node: java.util.ArrayList _list>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

     label1:
        r0.<org.mortbay.xml.XmlParser$Node: java.util.ArrayList _list> = null;

        return;
    }

    public java.lang.String getString(java.lang.String, boolean, boolean)
    {
        org.mortbay.xml.XmlParser$Node r0, $r2;
        java.lang.String r1, $r3, r4;
        boolean z0, z1;

        r0 := @this: org.mortbay.xml.XmlParser$Node;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r2 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Node get(java.lang.String)>(r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke $r2.<org.mortbay.xml.XmlParser$Node: java.lang.String toString(boolean)>(z0);

        r4 = $r3;

        if $r3 == null goto label2;

        if z1 == 0 goto label2;

        r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

     label2:
        return r4;
    }

    public synchronized java.lang.String toString()
    {
        org.mortbay.xml.XmlParser$Node r0;
        java.lang.String $r1;

        r0 := @this: org.mortbay.xml.XmlParser$Node;

        $r1 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.lang.String toString(boolean)>(1);

        return $r1;
    }

    public synchronized java.lang.String toString(boolean)
    {
        java.lang.Throwable $r3;
        java.lang.StringBuffer $r0;
        org.mortbay.xml.XmlParser$Node r1;
        java.lang.String $r2;
        boolean z0;

        r1 := @this: org.mortbay.xml.XmlParser$Node;

        z0 := @parameter0: boolean;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        entermonitor $r0;

     label1:
        specialinvoke r1.<org.mortbay.xml.XmlParser$Node: void toString(java.lang.StringBuffer,boolean)>($r0, z0);

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        exitmonitor $r0;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public synchronized java.lang.String toString(boolean, boolean)
    {
        org.mortbay.xml.XmlParser$Node r0;
        java.lang.String $r1, r2;
        boolean z0, z1;

        r0 := @this: org.mortbay.xml.XmlParser$Node;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<org.mortbay.xml.XmlParser$Node: java.lang.String toString(boolean)>(z0);

        r2 = $r1;

        if $r1 == null goto label1;

        if z1 == 0 goto label1;

        r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

     label1:
        return r2;
    }

    private synchronized void toString(java.lang.StringBuffer, boolean)
    {
        java.util.ArrayList $r3, $r16, $r17;
        java.lang.StringBuffer r1;
        int $i0, i1, i2, $i3;
        org.mortbay.xml.XmlParser$Node r0, $r6;
        java.lang.String $r2, $r5, $r7, $r12, $r15;
        boolean z0, $z1;
        org.mortbay.xml.XmlParser$Attribute $r11, $r14;
        org.mortbay.xml.XmlParser$Attribute[] $r8, $r9, $r10, $r13;
        java.lang.Object $r4;

        r0 := @this: org.mortbay.xml.XmlParser$Node;

        r1 := @parameter0: java.lang.StringBuffer;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label02;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<");

        $r7 = r0.<org.mortbay.xml.XmlParser$Node: java.lang.String _tag>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r8 = r0.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Attribute[] _attrs>;

        if $r8 == null goto label02;

        i1 = 0;

     label01:
        $r9 = r0.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Attribute[] _attrs>;

        $i0 = lengthof $r9;

        if i1 >= $i0 goto label02;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r10 = r0.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Attribute[] _attrs>;

        $r11 = $r10[i1];

        $r12 = virtualinvoke $r11.<org.mortbay.xml.XmlParser$Attribute: java.lang.String getName()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=\"");

        $r13 = r0.<org.mortbay.xml.XmlParser$Node: org.mortbay.xml.XmlParser$Attribute[] _attrs>;

        $r14 = $r13[i1];

        $r15 = virtualinvoke $r14.<org.mortbay.xml.XmlParser$Attribute: java.lang.String getValue()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        i1 = i1 + 1;

        goto label01;

     label02:
        $r16 = r0.<org.mortbay.xml.XmlParser$Node: java.util.ArrayList _list>;

        if $r16 == null goto label09;

        if z0 == 0 goto label03;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

     label03:
        i2 = 0;

     label04:
        $r17 = r0.<org.mortbay.xml.XmlParser$Node: java.util.ArrayList _list>;

        $i3 = virtualinvoke $r17.<java.util.ArrayList: int size()>();

        if i2 >= $i3 goto label08;

        $r3 = r0.<org.mortbay.xml.XmlParser$Node: java.util.ArrayList _list>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        if $r4 != null goto label05;

        goto label07;

     label05:
        $z1 = $r4 instanceof org.mortbay.xml.XmlParser$Node;

        if $z1 == 0 goto label06;

        $r6 = (org.mortbay.xml.XmlParser$Node) $r4;

        specialinvoke $r6.<org.mortbay.xml.XmlParser$Node: void toString(java.lang.StringBuffer,boolean)>(r1, z0);

        goto label07;

     label06:
        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

     label07:
        i2 = i2 + 1;

        goto label04;

     label08:
        if z0 == 0 goto label10;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</");

        $r2 = r0.<org.mortbay.xml.XmlParser$Node: java.lang.String _tag>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

        goto label10;

     label09:
        if z0 == 0 goto label10;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/>");

     label10:
        return;
    }

    public java.util.Iterator iterator(java.lang.String)
    {
        org.mortbay.xml.XmlParser$Node r1;
        java.lang.String r2;
        org.mortbay.xml.XmlParser$Node$1 $r0;

        r1 := @this: org.mortbay.xml.XmlParser$Node;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.mortbay.xml.XmlParser$Node$1;

        specialinvoke $r0.<org.mortbay.xml.XmlParser$Node$1: void <init>(org.mortbay.xml.XmlParser$Node,java.lang.String)>(r1, r2);

        return $r0;
    }

    static java.util.ArrayList access$600(org.mortbay.xml.XmlParser$Node)
    {
        org.mortbay.xml.XmlParser$Node r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: org.mortbay.xml.XmlParser$Node;

        $r1 = r0.<org.mortbay.xml.XmlParser$Node: java.util.ArrayList _list>;

        return $r1;
    }

    static java.lang.String access$700(org.mortbay.xml.XmlParser$Node)
    {
        org.mortbay.xml.XmlParser$Node r0;
        java.lang.String $r1;

        r0 := @parameter0: org.mortbay.xml.XmlParser$Node;

        $r1 = r0.<org.mortbay.xml.XmlParser$Node: java.lang.String _tag>;

        return $r1;
    }
}
