final class org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort extends java.lang.Object implements java.util.concurrent.Callable
{
    private final java.util.concurrent.locks.Lock lock;
    private final org.apache.lucene.search.IndexSearcher searcher;
    private final org.apache.lucene.search.Weight weight;
    private final int nDocs;
    private final org.apache.lucene.search.TopFieldCollector hq;
    private final org.apache.lucene.search.Sort sort;
    private final org.apache.lucene.search.IndexSearcher$LeafSlice slice;
    private final org.apache.lucene.search.FieldDoc after;
    private final boolean doDocScores;
    private final boolean doMaxScore;
    private final org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort$FakeScorer fakeScorer;
    static final boolean $assertionsDisabled;

    public void <init>(java.util.concurrent.locks.Lock, org.apache.lucene.search.IndexSearcher, org.apache.lucene.search.IndexSearcher$LeafSlice, org.apache.lucene.search.Weight, org.apache.lucene.search.FieldDoc, int, org.apache.lucene.search.TopFieldCollector, org.apache.lucene.search.Sort, boolean, boolean)
    {
        org.apache.lucene.search.IndexSearcher$LeafSlice r7;
        org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort r0;
        org.apache.lucene.search.Sort r6;
        org.apache.lucene.search.Weight r4;
        org.apache.lucene.search.FieldDoc r8;
        java.util.concurrent.locks.Lock r2;
        org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort$FakeScorer $r1;
        int i0;
        org.apache.lucene.search.TopFieldCollector r5;
        org.apache.lucene.search.IndexSearcher r3;
        boolean z0, z1;

        r0 := @this: org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort;

        r2 := @parameter0: java.util.concurrent.locks.Lock;

        r3 := @parameter1: org.apache.lucene.search.IndexSearcher;

        r7 := @parameter2: org.apache.lucene.search.IndexSearcher$LeafSlice;

        r4 := @parameter3: org.apache.lucene.search.Weight;

        r8 := @parameter4: org.apache.lucene.search.FieldDoc;

        i0 := @parameter5: int;

        r5 := @parameter6: org.apache.lucene.search.TopFieldCollector;

        r6 := @parameter7: org.apache.lucene.search.Sort;

        z0 := @parameter8: boolean;

        z1 := @parameter9: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort$FakeScorer;

        specialinvoke $r1.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort$FakeScorer: void <init>(org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort)>(r0);

        r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort$FakeScorer fakeScorer> = $r1;

        r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: java.util.concurrent.locks.Lock lock> = r2;

        r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: org.apache.lucene.search.IndexSearcher searcher> = r3;

        r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: org.apache.lucene.search.Weight weight> = r4;

        r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: int nDocs> = i0;

        r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: org.apache.lucene.search.TopFieldCollector hq> = r5;

        r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: org.apache.lucene.search.Sort sort> = r6;

        r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: org.apache.lucene.search.IndexSearcher$LeafSlice slice> = r7;

        r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: org.apache.lucene.search.FieldDoc after> = r8;

        r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: boolean doDocScores> = z0;

        r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: boolean doMaxScore> = z1;

        return;
    }

    public org.apache.lucene.search.TopFieldDocs call() throws java.io.IOException
    {
        org.apache.lucene.search.ScoreDoc r17;
        org.apache.lucene.search.FieldDoc $r6;
        org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort$FakeScorer $r13, $r18, $r19;
        byte $b1;
        org.apache.lucene.search.ScoreDoc[] $r23;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.lucene.search.Sort $r5, $r21;
        java.util.List $r4;
        float $f0, $f1, $f2, $f3;
        org.apache.lucene.search.TopFieldCollector $r12, $r14, $r15, $r16, $r20;
        org.apache.lucene.search.TopFieldDocs $r8;
        org.apache.lucene.search.IndexSearcher $r3;
        org.apache.lucene.search.IndexSearcher$LeafSlice $r1, $r10, $r24;
        java.lang.Throwable $r27;
        org.apache.lucene.search.Weight $r7;
        java.lang.AssertionError $r30;
        org.apache.lucene.index.AtomicReaderContext[] $r2, $r11, $r25;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10;
        org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort r0;
        java.util.concurrent.locks.Lock $r9, $r28, $r29;
        org.apache.lucene.index.AtomicReaderContext $r22;

        r0 := @this: org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort;

        $z0 = <org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $r24 = r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: org.apache.lucene.search.IndexSearcher$LeafSlice slice>;

        $r25 = $r24.<org.apache.lucene.search.IndexSearcher$LeafSlice: org.apache.lucene.index.AtomicReaderContext[] leaves>;

        $i8 = lengthof $r25;

        if $i8 == 1 goto label01;

        $r30 = new java.lang.AssertionError;

        specialinvoke $r30.<java.lang.AssertionError: void <init>()>();

        throw $r30;

     label01:
        $r3 = r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: org.apache.lucene.search.IndexSearcher searcher>;

        $r1 = r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: org.apache.lucene.search.IndexSearcher$LeafSlice slice>;

        $r2 = $r1.<org.apache.lucene.search.IndexSearcher$LeafSlice: org.apache.lucene.index.AtomicReaderContext[] leaves>;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        $r7 = r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: org.apache.lucene.search.Weight weight>;

        $r6 = r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: org.apache.lucene.search.FieldDoc after>;

        $i0 = r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: int nDocs>;

        $r5 = r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: org.apache.lucene.search.Sort sort>;

        $z1 = r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: boolean doDocScores>;

        if $z1 != 0 goto label02;

        $r21 = r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: org.apache.lucene.search.Sort sort>;

        $z4 = virtualinvoke $r21.<org.apache.lucene.search.Sort: boolean needsScores()>();

        if $z4 == 0 goto label03;

     label02:
        $z5 = 1;

        goto label04;

     label03:
        $z5 = 0;

     label04:
        $z2 = r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: boolean doMaxScore>;

        $r8 = virtualinvoke $r3.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.TopFieldDocs search(java.util.List,org.apache.lucene.search.Weight,org.apache.lucene.search.FieldDoc,int,org.apache.lucene.search.Sort,boolean,boolean,boolean)>($r4, $r7, $r6, $i0, $r5, 1, $z5, $z2);

        $r9 = r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: java.util.concurrent.locks.Lock lock>;

        interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void lock()>();

     label05:
        $r10 = r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: org.apache.lucene.search.IndexSearcher$LeafSlice slice>;

        $r11 = $r10.<org.apache.lucene.search.IndexSearcher$LeafSlice: org.apache.lucene.index.AtomicReaderContext[] leaves>;

        $r22 = $r11[0];

        $i6 = $r22.<org.apache.lucene.index.AtomicReaderContext: int docBase>;

        $r12 = r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: org.apache.lucene.search.TopFieldCollector hq>;

        virtualinvoke $r12.<org.apache.lucene.search.TopFieldCollector: void setNextReader(org.apache.lucene.index.AtomicReaderContext)>($r22);

        $r14 = r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: org.apache.lucene.search.TopFieldCollector hq>;

        $r13 = r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort$FakeScorer fakeScorer>;

        virtualinvoke $r14.<org.apache.lucene.search.TopFieldCollector: void setScorer(org.apache.lucene.search.Scorer)>($r13);

        $r23 = $r8.<org.apache.lucene.search.TopFieldDocs: org.apache.lucene.search.ScoreDoc[] scoreDocs>;

        $i7 = lengthof $r23;

        i9 = 0;

     label06:
        if i9 >= $i7 goto label07;

        r17 = $r23[i9];

        $r18 = r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort$FakeScorer fakeScorer>;

        $i2 = r17.<org.apache.lucene.search.ScoreDoc: int doc>;

        $i3 = $i2 - $i6;

        $r18.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort$FakeScorer: int doc> = $i3;

        $r19 = r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort$FakeScorer fakeScorer>;

        $f3 = r17.<org.apache.lucene.search.ScoreDoc: float score>;

        $r19.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort$FakeScorer: float score> = $f3;

        $r20 = r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: org.apache.lucene.search.TopFieldCollector hq>;

        $i4 = r17.<org.apache.lucene.search.ScoreDoc: int doc>;

        $i5 = $i4 - $i6;

        virtualinvoke $r20.<org.apache.lucene.search.TopFieldCollector: void collect(int)>($i5);

        i9 = i9 + 1;

        goto label06;

     label07:
        $z3 = r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: boolean doMaxScore>;

        if $z3 == 0 goto label08;

        $f0 = virtualinvoke $r8.<org.apache.lucene.search.TopFieldDocs: float getMaxScore()>();

        $r15 = r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: org.apache.lucene.search.TopFieldCollector hq>;

        $f1 = $r15.<org.apache.lucene.search.TopFieldCollector: float maxScore>;

        $b1 = $f0 cmpl $f1;

        $i10 = (int) $b1;

        if $i10 <= 0 goto label08;

        $r16 = r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: org.apache.lucene.search.TopFieldCollector hq>;

        $f2 = virtualinvoke $r8.<org.apache.lucene.search.TopFieldDocs: float getMaxScore()>();

        $r16.<org.apache.lucene.search.TopFieldCollector: float maxScore> = $f2;

     label08:
        $r29 = r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: java.util.concurrent.locks.Lock lock>;

        interfaceinvoke $r29.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label11;

     label09:
        $r27 := @caughtexception;

     label10:
        $r28 = r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: java.util.concurrent.locks.Lock lock>;

        interfaceinvoke $r28.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r27;

     label11:
        return $r8;

        catch java.lang.Throwable from label05 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        org.apache.lucene.search.TopFieldDocs $r1;
        org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort r0;

        r0 := @this: org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort;

        $r1 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: org.apache.lucene.search.TopFieldDocs call()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/search/IndexSearcher;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: boolean $assertionsDisabled> = $z1;

        return;
    }
}
