public class org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder extends java.lang.Object
{
    byte[][] stringTable;
    byte[] data;
    byte[] uncompData;
    int tableIndex;
    int bitsToGet;
    int bytePointer;
    int bitPointer;
    int dstIndex;
    int w;
    int h;
    int predictor;
    int samplesPerPixel;
    int nextData;
    int nextBits;
    int[] andTable;

    public void <init>(int, int, int)
    {
        org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder r0;
        int[] $r1;
        int i0, i1, i2;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: byte[] data> = null;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int bitsToGet> = 9;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int nextData> = 0;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int nextBits> = 0;

        $r1 = newarray (int)[4];

        $r1[0] = 511;

        $r1[1] = 1023;

        $r1[2] = 2047;

        $r1[3] = 4095;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int[] andTable> = $r1;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int w> = i0;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int predictor> = i1;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int samplesPerPixel> = i2;

        return;
    }

    public byte[] decode(byte[], byte[], int)
    {
        byte[] r0, r2, $r4, $r7, $r9, r11, r12;
        byte $b0, $b11, $b12, $b14, $b18, $b19, $b21;
        byte[][] $r3, $r5, $r6, $r8;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder r1;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i13, $i15, $i16, $i17, $i20, i22, $i23, $i24, i25, i26, i27, $i28, $i29;
        java.lang.UnsupportedOperationException $r13;

        r1 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder;

        r0 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        i1 := @parameter2: int;

        $b0 = r0[0];

        if $b0 != 0 goto label01;

        $b21 = r0[1];

        if $b21 != 1 goto label01;

        $r13 = new java.lang.UnsupportedOperationException;

        specialinvoke $r13.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("TIFFLZWDecoder0");

        throw $r13;

     label01:
        virtualinvoke r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: void initializeStringTable()>();

        r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: byte[] data> = r0;

        r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int h> = i1;

        r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: byte[] uncompData> = r2;

        r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int bytePointer> = 0;

        r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int bitPointer> = 0;

        r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int dstIndex> = 0;

        r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int nextData> = 0;

        r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int nextBits> = 0;

        i22 = 0;

        goto label06;

     label02:
        if $i23 != 256 goto label04;

        virtualinvoke r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: void initializeStringTable()>();

        $i20 = virtualinvoke r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int getNextCode()>();

        if $i20 != 257 goto label03;

        goto label07;

     label03:
        $r8 = r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: byte[][] stringTable>;

        $r9 = $r8[$i20];

        virtualinvoke r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: void writeString(byte[])>($r9);

        i22 = $i20;

        goto label06;

     label04:
        $i17 = r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int tableIndex>;

        if $i23 >= $i17 goto label05;

        $r5 = r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: byte[][] stringTable>;

        r11 = $r5[$i23];

        virtualinvoke r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: void writeString(byte[])>(r11);

        $r6 = r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: byte[][] stringTable>;

        $r7 = $r6[i22];

        $b19 = r11[0];

        virtualinvoke r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: void addStringToTable(byte[],byte)>($r7, $b19);

        i22 = $i23;

        goto label06;

     label05:
        $r3 = r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: byte[][] stringTable>;

        r12 = $r3[i22];

        $b18 = r12[0];

        $r4 = virtualinvoke r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: byte[] composeString(byte[],byte)>(r12, $b18);

        virtualinvoke r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: void writeString(byte[])>($r4);

        virtualinvoke r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: void addStringToTable(byte[])>($r4);

        i22 = $i23;

     label06:
        $i23 = virtualinvoke r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int getNextCode()>();

        if $i23 == 257 goto label07;

        $i16 = r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int dstIndex>;

        $i15 = lengthof r2;

        if $i16 != $i15 goto label02;

     label07:
        $i24 = r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int predictor>;

        if $i24 != 2 goto label12;

        i25 = 0;

        goto label11;

     label08:
        $i5 = r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int samplesPerPixel>;

        $i2 = r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int w>;

        $i3 = i25 * $i2;

        $i4 = $i3 + 1;

        i26 = $i5 * $i4;

        i27 = r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int samplesPerPixel>;

        goto label10;

     label09:
        $b12 = r2[i26];

        $i9 = r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int samplesPerPixel>;

        $i10 = i26 - $i9;

        $b11 = r2[$i10];

        $i28 = (int) $b12;

        $i29 = (int) $b11;

        $i13 = $i28 + $i29;

        $b14 = (byte) $i13;

        r2[i26] = $b14;

        i26 = i26 + 1;

        i27 = i27 + 1;

     label10:
        $i7 = r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int w>;

        $i6 = r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int samplesPerPixel>;

        $i8 = $i7 * $i6;

        if i27 < $i8 goto label09;

        i25 = i25 + 1;

     label11:
        if i25 < i1 goto label08;

     label12:
        return r2;
    }

    public void initializeStringTable()
    {
        byte[] $r2, $r5;
        byte[][] $r1, $r3, $r4;
        byte $b0;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder r0;
        int i1;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder;

        $r1 = newarray (byte[])[4096];

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: byte[][] stringTable> = $r1;

        i1 = 0;

        goto label2;

     label1:
        $r3 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: byte[][] stringTable>;

        $r2 = newarray (byte)[1];

        $r3[i1] = $r2;

        $r4 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: byte[][] stringTable>;

        $r5 = $r4[i1];

        $b0 = (byte) i1;

        $r5[0] = $b0;

        i1 = i1 + 1;

     label2:
        if i1 < 256 goto label1;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int tableIndex> = 258;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int bitsToGet> = 9;

        return;
    }

    public void writeString(byte[])
    {
        byte[] r0, $r2;
        byte $b3;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder r1;
        int $i0, $i1, $i2, i4;

        r1 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder;

        r0 := @parameter0: byte[];

        i4 = 0;

        goto label2;

     label1:
        $r2 = r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: byte[] uncompData>;

        $i1 = r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int dstIndex>;

        $i2 = $i1 + 1;

        r1.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int dstIndex> = $i2;

        $b3 = r0[i4];

        $r2[$i1] = $b3;

        i4 = i4 + 1;

     label2:
        $i0 = lengthof r0;

        if i4 < $i0 goto label1;

        return;
    }

    public void addStringToTable(byte[], byte)
    {
        byte[] r0, r1;
        byte[][] $r3;
        byte b2;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder r2;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7;

        r2 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder;

        r0 := @parameter0: byte[];

        b2 := @parameter1: byte;

        i0 = lengthof r0;

        $i1 = i0 + 1;

        r1 = newarray (byte)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, i0);

        r1[i0] = b2;

        $r3 = r2.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: byte[][] stringTable>;

        $i3 = r2.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int tableIndex>;

        $i4 = $i3 + 1;

        r2.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int tableIndex> = $i4;

        $r3[$i3] = r1;

        $i5 = r2.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int tableIndex>;

        if $i5 != 511 goto label1;

        r2.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int bitsToGet> = 10;

        goto label3;

     label1:
        $i6 = r2.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int tableIndex>;

        if $i6 != 1023 goto label2;

        r2.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int bitsToGet> = 11;

        goto label3;

     label2:
        $i7 = r2.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int tableIndex>;

        if $i7 != 2047 goto label3;

        r2.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int bitsToGet> = 12;

     label3:
        return;
    }

    public void addStringToTable(byte[])
    {
        byte[] r2;
        byte[][] $r1;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder;

        r2 := @parameter0: byte[];

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: byte[][] stringTable>;

        $i0 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int tableIndex>;

        $i1 = $i0 + 1;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int tableIndex> = $i1;

        $r1[$i0] = r2;

        $i2 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int tableIndex>;

        if $i2 != 511 goto label1;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int bitsToGet> = 10;

        goto label3;

     label1:
        $i3 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int tableIndex>;

        if $i3 != 1023 goto label2;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int bitsToGet> = 11;

        goto label3;

     label2:
        $i4 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int tableIndex>;

        if $i4 != 2047 goto label3;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int bitsToGet> = 12;

     label3:
        return;
    }

    public byte[] composeString(byte[], byte)
    {
        byte[] r0, r1;
        byte b2;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder r2;
        int i0, $i1;

        r2 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder;

        r0 := @parameter0: byte[];

        b2 := @parameter1: byte;

        i0 = lengthof r0;

        $i1 = i0 + 1;

        r1 = newarray (byte)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, i0);

        r1[i0] = b2;

        return r1;
    }

    public int getNextCode()
    {
        byte[] $r1, $r3;
        byte $b4, $b26;
        int[] $r2;
        short $s5, $s27, $s32, $s34;
        org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder r0;
        int $i0, $i1, $i2, $i3, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i28, $i29, $i30, $i31, $i33, $i35;
        java.lang.ArrayIndexOutOfBoundsException $r4;

        r0 := @this: org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder;

     label1:
        $i0 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int nextData>;

        $i3 = $i0 << 8;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: byte[] data>;

        $i1 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int bytePointer>;

        $i2 = $i1 + 1;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int bytePointer> = $i2;

        $b4 = $r1[$i1];

        $s32 = (short) $b4;

        $s5 = $s32 & 255;

        $i33 = (int) $s5;

        $i6 = $i3 | $i33;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int nextData> = $i6;

        $i7 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int nextBits>;

        $i8 = $i7 + 8;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int nextBits> = $i8;

        $i10 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int nextBits>;

        $i9 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int bitsToGet>;

        if $i10 >= $i9 goto label2;

        $i22 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int nextData>;

        $i25 = $i22 << 8;

        $r3 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: byte[] data>;

        $i23 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int bytePointer>;

        $i24 = $i23 + 1;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int bytePointer> = $i24;

        $b26 = $r3[$i23];

        $s34 = (short) $b26;

        $s27 = $s34 & 255;

        $i35 = (int) $s27;

        $i28 = $i25 | $i35;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int nextData> = $i28;

        $i29 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int nextBits>;

        $i30 = $i29 + 8;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int nextBits> = $i30;

     label2:
        $i14 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int nextData>;

        $i12 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int nextBits>;

        $i11 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int bitsToGet>;

        $i13 = $i12 - $i11;

        $i18 = $i14 >> $i13;

        $r2 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int[] andTable>;

        $i15 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int bitsToGet>;

        $i16 = $i15 - 9;

        $i17 = $r2[$i16];

        $i31 = $i18 & $i17;

        $i20 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int nextBits>;

        $i19 = r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int bitsToGet>;

        $i21 = $i20 - $i19;

        r0.<org.apache.batik.ext.awt.image.codec.tiff.TIFFLZWDecoder: int nextBits> = $i21;

        return $i31;

     label3:
        $r4 := @caughtexception;

        return 257;

        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label3 with label3;
    }
}
