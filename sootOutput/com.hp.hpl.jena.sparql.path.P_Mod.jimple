public class com.hp.hpl.jena.sparql.path.P_Mod extends com.hp.hpl.jena.sparql.path.P_Path1
{
    public static final long UNSET;
    public static final long INF;
    private final long min;
    private final long max;

    public void <init>(com.hp.hpl.jena.sparql.path.Path, long, long)
    {
        com.hp.hpl.jena.sparql.path.Path r1;
        com.hp.hpl.jena.sparql.path.P_Mod r0;
        long l0, l1;

        r0 := @this: com.hp.hpl.jena.sparql.path.P_Mod;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.Path;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        specialinvoke r0.<com.hp.hpl.jena.sparql.path.P_Path1: void <init>(com.hp.hpl.jena.sparql.path.Path)>(r1);

        r0.<com.hp.hpl.jena.sparql.path.P_Mod: long min> = l0;

        r0.<com.hp.hpl.jena.sparql.path.P_Mod: long max> = l1;

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.PathVisitor)
    {
        com.hp.hpl.jena.sparql.path.PathVisitor r0;
        com.hp.hpl.jena.sparql.path.P_Mod r1;

        r1 := @this: com.hp.hpl.jena.sparql.path.P_Mod;

        r0 := @parameter0: com.hp.hpl.jena.sparql.path.PathVisitor;

        interfaceinvoke r0.<com.hp.hpl.jena.sparql.path.PathVisitor: void visit(com.hp.hpl.jena.sparql.path.P_Mod)>(r1);

        return;
    }

    public long getMin()
    {
        long $l0;
        com.hp.hpl.jena.sparql.path.P_Mod r0;

        r0 := @this: com.hp.hpl.jena.sparql.path.P_Mod;

        $l0 = r0.<com.hp.hpl.jena.sparql.path.P_Mod: long min>;

        return $l0;
    }

    public long getMax()
    {
        long $l0;
        com.hp.hpl.jena.sparql.path.P_Mod r0;

        r0 := @this: com.hp.hpl.jena.sparql.path.P_Mod;

        $l0 = r0.<com.hp.hpl.jena.sparql.path.P_Mod: long max>;

        return $l0;
    }

    public int hashCode()
    {
        com.hp.hpl.jena.sparql.path.P_Mod r0;
        long $l0, $l2;
        com.hp.hpl.jena.sparql.path.Path $r1;
        int $i1, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: com.hp.hpl.jena.sparql.path.P_Mod;

        $l0 = r0.<com.hp.hpl.jena.sparql.path.P_Mod: long min>;

        $i1 = (int) $l0;

        $i4 = 402 ^ $i1;

        $l2 = r0.<com.hp.hpl.jena.sparql.path.P_Mod: long max>;

        $i3 = (int) $l2;

        $i5 = $i4 ^ $i3;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.path.P_Mod: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        $i6 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i7 = $i5 ^ $i6;

        return $i7;
    }

    public boolean equalTo(com.hp.hpl.jena.sparql.path.Path, com.hp.hpl.jena.sparql.util.NodeIsomorphismMap)
    {
        com.hp.hpl.jena.sparql.path.P_Mod r1, r2;
        long $l0, $l1, $l3, $l4;
        com.hp.hpl.jena.sparql.path.Path r0, $r3, $r4;
        byte $b2, $b5;
        com.hp.hpl.jena.sparql.util.NodeIsomorphismMap r5;
        boolean $z0, $z1, $z2;

        r2 := @this: com.hp.hpl.jena.sparql.path.P_Mod;

        r0 := @parameter0: com.hp.hpl.jena.sparql.path.Path;

        r5 := @parameter1: com.hp.hpl.jena.sparql.util.NodeIsomorphismMap;

        $z0 = r0 instanceof com.hp.hpl.jena.sparql.path.P_Mod;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (com.hp.hpl.jena.sparql.path.P_Mod) r0;

        $l1 = r1.<com.hp.hpl.jena.sparql.path.P_Mod: long min>;

        $l0 = r2.<com.hp.hpl.jena.sparql.path.P_Mod: long min>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label2;

        $l4 = r1.<com.hp.hpl.jena.sparql.path.P_Mod: long max>;

        $l3 = r2.<com.hp.hpl.jena.sparql.path.P_Mod: long max>;

        $b5 = $l4 cmp $l3;

        if $b5 != 0 goto label2;

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.sparql.path.P_Mod: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_Mod: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        $z1 = interfaceinvoke $r3.<com.hp.hpl.jena.sparql.path.Path: boolean equalTo(com.hp.hpl.jena.sparql.path.Path,com.hp.hpl.jena.sparql.util.NodeIsomorphismMap)>($r4, r5);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean isFixedLength()
    {
        com.hp.hpl.jena.sparql.path.P_Mod r0;
        long $l0, $l1, $l3;
        byte $b2, $b4;
        int $i5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.path.P_Mod;

        $l1 = r0.<com.hp.hpl.jena.sparql.path.P_Mod: long max>;

        $l0 = r0.<com.hp.hpl.jena.sparql.path.P_Mod: long min>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label1;

        $l3 = r0.<com.hp.hpl.jena.sparql.path.P_Mod: long min>;

        $b4 = $l3 cmp 0L;

        $i5 = (int) $b4;

        if $i5 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public long getFixedLength()
    {
        long $l0;
        com.hp.hpl.jena.sparql.path.P_Mod r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.path.P_Mod;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.path.P_Mod: boolean isFixedLength()>();

        if $z0 != 0 goto label1;

        return -1L;

     label1:
        $l0 = r0.<com.hp.hpl.jena.sparql.path.P_Mod: long min>;

        return $l0;
    }

    public boolean isZeroOrMore()
    {
        byte $b1, $b3;
        com.hp.hpl.jena.sparql.path.P_Mod r0;
        int $i4;
        long $l0, $l2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.path.P_Mod;

        $l0 = r0.<com.hp.hpl.jena.sparql.path.P_Mod: long min>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $l2 = r0.<com.hp.hpl.jena.sparql.path.P_Mod: long max>;

        $b3 = $l2 cmp 0L;

        $i4 = (int) $b3;

        if $i4 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isOneOrMore()
    {
        byte $b1, $b3;
        com.hp.hpl.jena.sparql.path.P_Mod r0;
        int $i4;
        long $l0, $l2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.path.P_Mod;

        $l0 = r0.<com.hp.hpl.jena.sparql.path.P_Mod: long min>;

        $b1 = $l0 cmp 1L;

        if $b1 != 0 goto label1;

        $l2 = r0.<com.hp.hpl.jena.sparql.path.P_Mod: long max>;

        $b3 = $l2 cmp 0L;

        $i4 = (int) $b3;

        if $i4 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isZeroOrOne()
    {
        byte $b1, $b3;
        com.hp.hpl.jena.sparql.path.P_Mod r0;
        long $l0, $l2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.path.P_Mod;

        $l0 = r0.<com.hp.hpl.jena.sparql.path.P_Mod: long min>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $l2 = r0.<com.hp.hpl.jena.sparql.path.P_Mod: long max>;

        $b3 = $l2 cmp 1L;

        if $b3 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static void <clinit>()
    {
        <com.hp.hpl.jena.sparql.path.P_Mod: long INF> = -2L;

        <com.hp.hpl.jena.sparql.path.P_Mod: long UNSET> = -1L;

        return;
    }
}
