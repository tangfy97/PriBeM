class org.waveprotocol.wave.client.editor.extract.TypingExtractor$1 extends java.lang.Object implements org.waveprotocol.wave.client.scheduler.Scheduler$Task
{
    final org.waveprotocol.wave.client.editor.extract.TypingExtractor this$0;

    void <init>(org.waveprotocol.wave.client.editor.extract.TypingExtractor)
    {
        org.waveprotocol.wave.client.editor.extract.TypingExtractor$1 r0;
        org.waveprotocol.wave.client.editor.extract.TypingExtractor r1;

        r0 := @this: org.waveprotocol.wave.client.editor.extract.TypingExtractor$1;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.extract.TypingExtractor;

        r0.<org.waveprotocol.wave.client.editor.extract.TypingExtractor$1: org.waveprotocol.wave.client.editor.extract.TypingExtractor this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void execute()
    {
        org.waveprotocol.wave.client.editor.extract.TypingExtractor$1 r0;
        org.waveprotocol.wave.client.editor.extract.TypingExtractor $r1;

        r0 := @this: org.waveprotocol.wave.client.editor.extract.TypingExtractor$1;

        $r1 = r0.<org.waveprotocol.wave.client.editor.extract.TypingExtractor$1: org.waveprotocol.wave.client.editor.extract.TypingExtractor this$0>;

        virtualinvoke $r1.<org.waveprotocol.wave.client.editor.extract.TypingExtractor: void flush()>();

        return;
    }
}
