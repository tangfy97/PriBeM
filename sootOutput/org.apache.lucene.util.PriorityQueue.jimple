public abstract class org.apache.lucene.util.PriorityQueue extends java.lang.Object
{
    private int size;
    private final int maxSize;
    private final java.lang.Object[] heap;

    public void <init>(int)
    {
        int i0;
        org.apache.lucene.util.PriorityQueue r0;

        r0 := @this: org.apache.lucene.util.PriorityQueue;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.lucene.util.PriorityQueue: void <init>(int,boolean)>(i0, 1);

        return;
    }

    public void <init>(int, boolean)
    {
        java.lang.Object[] $r2, $r3, $r4, $r6, $r7;
        org.apache.lucene.util.PriorityQueue r0;
        int i0, $i1, i2, i3;
        java.lang.Object $r1, $r5;
        boolean z0;

        r0 := @this: org.apache.lucene.util.PriorityQueue;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.util.PriorityQueue: int size> = 0;

        if 0 != i0 goto label1;

        i2 = 2;

        goto label3;

     label1:
        if i0 != 2147483647 goto label2;

        i2 = 2147483647;

        goto label3;

     label2:
        i2 = i0 + 1;

     label3:
        $r6 = newarray (java.lang.Object)[i2];

        $r7 = (java.lang.Object[]) $r6;

        r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap> = $r7;

        r0.<org.apache.lucene.util.PriorityQueue: int maxSize> = i0;

        if z0 == 0 goto label6;

        $r1 = virtualinvoke r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object getSentinelObject()>();

        if $r1 == null goto label6;

        $r2 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        $r2[1] = $r1;

        i3 = 2;

     label4:
        $r3 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        $i1 = lengthof $r3;

        if i3 >= $i1 goto label5;

        $r4 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        $r5 = virtualinvoke r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object getSentinelObject()>();

        $r4[i3] = $r5;

        i3 = i3 + 1;

        goto label4;

     label5:
        r0.<org.apache.lucene.util.PriorityQueue: int size> = i0;

     label6:
        return;
    }

    protected abstract boolean lessThan(java.lang.Object, java.lang.Object);

    protected java.lang.Object getSentinelObject()
    {
        org.apache.lucene.util.PriorityQueue r0;

        r0 := @this: org.apache.lucene.util.PriorityQueue;

        return null;
    }

    public final java.lang.Object add(java.lang.Object)
    {
        java.lang.Object[] $r2, $r3;
        org.apache.lucene.util.PriorityQueue r0;
        int $i0, $i1, $i2;
        java.lang.Object r1, $r4;

        r0 := @this: org.apache.lucene.util.PriorityQueue;

        r1 := @parameter0: java.lang.Object;

        $i0 = r0.<org.apache.lucene.util.PriorityQueue: int size>;

        $i1 = $i0 + 1;

        r0.<org.apache.lucene.util.PriorityQueue: int size> = $i1;

        $r2 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        $i2 = r0.<org.apache.lucene.util.PriorityQueue: int size>;

        $r2[$i2] = r1;

        specialinvoke r0.<org.apache.lucene.util.PriorityQueue: void upHeap()>();

        $r3 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        $r4 = $r3[1];

        return $r4;
    }

    public java.lang.Object insertWithOverflow(java.lang.Object)
    {
        java.lang.Object[] $r2, $r4, $r6;
        org.apache.lucene.util.PriorityQueue r0;
        int $i0, $i1, $i2;
        java.lang.Object r1, $r3, r5;
        boolean $z0;

        r0 := @this: org.apache.lucene.util.PriorityQueue;

        r1 := @parameter0: java.lang.Object;

        $i1 = r0.<org.apache.lucene.util.PriorityQueue: int size>;

        $i0 = r0.<org.apache.lucene.util.PriorityQueue: int maxSize>;

        if $i1 >= $i0 goto label1;

        virtualinvoke r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object add(java.lang.Object)>(r1);

        return null;

     label1:
        $i2 = r0.<org.apache.lucene.util.PriorityQueue: int size>;

        if $i2 <= 0 goto label2;

        $r2 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        $r3 = $r2[1];

        $z0 = virtualinvoke r0.<org.apache.lucene.util.PriorityQueue: boolean lessThan(java.lang.Object,java.lang.Object)>(r1, $r3);

        if $z0 != 0 goto label2;

        $r4 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        r5 = $r4[1];

        $r6 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        $r6[1] = r1;

        virtualinvoke r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object updateTop()>();

        return r5;

     label2:
        return r1;
    }

    public final java.lang.Object top()
    {
        org.apache.lucene.util.PriorityQueue r0;
        java.lang.Object $r2;
        java.lang.Object[] $r1;

        r0 := @this: org.apache.lucene.util.PriorityQueue;

        $r1 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        $r2 = $r1[1];

        return $r2;
    }

    public final java.lang.Object pop()
    {
        java.lang.Object[] $r1, $r3, $r5, $r6;
        org.apache.lucene.util.PriorityQueue r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object r2, $r4;

        r0 := @this: org.apache.lucene.util.PriorityQueue;

        $i0 = r0.<org.apache.lucene.util.PriorityQueue: int size>;

        if $i0 <= 0 goto label1;

        $r1 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        r2 = $r1[1];

        $r5 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        $r3 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        $i1 = r0.<org.apache.lucene.util.PriorityQueue: int size>;

        $r4 = $r3[$i1];

        $r5[1] = $r4;

        $r6 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        $i2 = r0.<org.apache.lucene.util.PriorityQueue: int size>;

        $r6[$i2] = null;

        $i3 = r0.<org.apache.lucene.util.PriorityQueue: int size>;

        $i4 = $i3 - 1;

        r0.<org.apache.lucene.util.PriorityQueue: int size> = $i4;

        specialinvoke r0.<org.apache.lucene.util.PriorityQueue: void downHeap()>();

        return r2;

     label1:
        return null;
    }

    public final java.lang.Object updateTop()
    {
        org.apache.lucene.util.PriorityQueue r0;
        java.lang.Object $r2;
        java.lang.Object[] $r1;

        r0 := @this: org.apache.lucene.util.PriorityQueue;

        specialinvoke r0.<org.apache.lucene.util.PriorityQueue: void downHeap()>();

        $r1 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        $r2 = $r1[1];

        return $r2;
    }

    public final int size()
    {
        int $i0;
        org.apache.lucene.util.PriorityQueue r0;

        r0 := @this: org.apache.lucene.util.PriorityQueue;

        $i0 = r0.<org.apache.lucene.util.PriorityQueue: int size>;

        return $i0;
    }

    public final void clear()
    {
        java.lang.Object[] $r1;
        int $i0, i1;
        org.apache.lucene.util.PriorityQueue r0;

        r0 := @this: org.apache.lucene.util.PriorityQueue;

        i1 = 0;

     label1:
        $i0 = r0.<org.apache.lucene.util.PriorityQueue: int size>;

        if i1 > $i0 goto label2;

        $r1 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        $r1[i1] = null;

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<org.apache.lucene.util.PriorityQueue: int size> = 0;

        return;
    }

    private final void upHeap()
    {
        java.lang.Object[] $r1, $r3, $r4, $r6, $r8;
        org.apache.lucene.util.PriorityQueue r0;
        int i0, i1;
        java.lang.Object r2, $r5, $r7;
        boolean $z0;

        r0 := @this: org.apache.lucene.util.PriorityQueue;

        i0 = r0.<org.apache.lucene.util.PriorityQueue: int size>;

        $r1 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        r2 = $r1[i0];

        i1 = i0 >>> 1;

     label1:
        if i1 <= 0 goto label2;

        $r4 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        $r5 = $r4[i1];

        $z0 = virtualinvoke r0.<org.apache.lucene.util.PriorityQueue: boolean lessThan(java.lang.Object,java.lang.Object)>(r2, $r5);

        if $z0 == 0 goto label2;

        $r8 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        $r6 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        $r7 = $r6[i1];

        $r8[i0] = $r7;

        i0 = i1;

        i1 = i1 >>> 1;

        goto label1;

     label2:
        $r3 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        $r3[i0] = r2;

        return;
    }

    private final void downHeap()
    {
        java.lang.Object[] $r1, $r3, $r4, $r6, $r8, $r9, $r10, $r13, $r14;
        org.apache.lucene.util.PriorityQueue r0;
        int $i0, $i1, i2, i3, $i4, i5;
        boolean $z0, $z1, $z2;
        java.lang.Object r2, $r5, $r7, $r11, $r12, $r15, $r16;

        r0 := @this: org.apache.lucene.util.PriorityQueue;

        i2 = 1;

        $r1 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        r2 = $r1[1];

        i3 = 2;

        $i0 = r0.<org.apache.lucene.util.PriorityQueue: int size>;

        if 3 > $i0 goto label1;

        $r13 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        $r16 = $r13[3];

        $r14 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        $r15 = $r14[2];

        $z2 = virtualinvoke r0.<org.apache.lucene.util.PriorityQueue: boolean lessThan(java.lang.Object,java.lang.Object)>($r16, $r15);

        if $z2 == 0 goto label1;

        i3 = 3;

     label1:
        $i4 = r0.<org.apache.lucene.util.PriorityQueue: int size>;

        if i3 > $i4 goto label2;

        $r4 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        $r5 = $r4[i3];

        $z0 = virtualinvoke r0.<org.apache.lucene.util.PriorityQueue: boolean lessThan(java.lang.Object,java.lang.Object)>($r5, r2);

        if $z0 == 0 goto label2;

        $r8 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        $r6 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        $r7 = $r6[i3];

        $r8[i2] = $r7;

        i2 = i3;

        i3 = i3 << 1;

        i5 = i3 + 1;

        $i1 = r0.<org.apache.lucene.util.PriorityQueue: int size>;

        if i5 > $i1 goto label1;

        $r9 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        $r12 = $r9[i5];

        $r10 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        $r11 = $r10[i3];

        $z1 = virtualinvoke r0.<org.apache.lucene.util.PriorityQueue: boolean lessThan(java.lang.Object,java.lang.Object)>($r12, $r11);

        if $z1 == 0 goto label1;

        i3 = i5;

        goto label1;

     label2:
        $r3 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        $r3[i2] = r2;

        return;
    }

    protected final java.lang.Object[] getHeapArray()
    {
        org.apache.lucene.util.PriorityQueue r0;
        java.lang.Object[] $r1, $r2;

        r0 := @this: org.apache.lucene.util.PriorityQueue;

        $r1 = r0.<org.apache.lucene.util.PriorityQueue: java.lang.Object[] heap>;

        $r2 = (java.lang.Object[]) $r1;

        return $r2;
    }
}
