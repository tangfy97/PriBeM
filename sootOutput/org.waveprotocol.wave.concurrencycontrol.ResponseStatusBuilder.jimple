public final class org.waveprotocol.wave.concurrencycontrol.ResponseStatusBuilder extends java.lang.Object
{
    private org.waveprotocol.wave.concurrencycontrol.ResponseStatus$ResponseCode status;
    private java.lang.String failureReason;

    public void <init>()
    {
        org.waveprotocol.wave.concurrencycontrol.ResponseStatusBuilder r0;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.ResponseStatusBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.concurrencycontrol.ResponseStatusBuilder setStatus(org.waveprotocol.wave.concurrencycontrol.ResponseStatus$ResponseCode)
    {
        org.waveprotocol.wave.concurrencycontrol.ResponseStatusBuilder r0;
        org.waveprotocol.wave.concurrencycontrol.ResponseStatus$ResponseCode r1;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.ResponseStatusBuilder;

        r1 := @parameter0: org.waveprotocol.wave.concurrencycontrol.ResponseStatus$ResponseCode;

        r0.<org.waveprotocol.wave.concurrencycontrol.ResponseStatusBuilder: org.waveprotocol.wave.concurrencycontrol.ResponseStatus$ResponseCode status> = r1;

        return r0;
    }

    public org.waveprotocol.wave.concurrencycontrol.ResponseStatusBuilder clearFailureReason()
    {
        org.waveprotocol.wave.concurrencycontrol.ResponseStatusBuilder r0;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.ResponseStatusBuilder;

        r0.<org.waveprotocol.wave.concurrencycontrol.ResponseStatusBuilder: java.lang.String failureReason> = null;

        return r0;
    }

    public org.waveprotocol.wave.concurrencycontrol.ResponseStatusBuilder setFailureReason(java.lang.String)
    {
        org.waveprotocol.wave.concurrencycontrol.ResponseStatusBuilder r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.ResponseStatusBuilder;

        r1 := @parameter0: java.lang.String;

        r0.<org.waveprotocol.wave.concurrencycontrol.ResponseStatusBuilder: java.lang.String failureReason> = r1;

        return r0;
    }

    public org.waveprotocol.wave.concurrencycontrol.ResponseStatus build(org.waveprotocol.wave.concurrencycontrol.ResponseStatusBuilder$Factory)
    {
        org.waveprotocol.wave.concurrencycontrol.ResponseStatusBuilder$Factory r0;
        org.waveprotocol.wave.concurrencycontrol.ResponseStatus$ResponseCode $r3;
        org.waveprotocol.wave.concurrencycontrol.ResponseStatus $r1;
        org.waveprotocol.wave.concurrencycontrol.ResponseStatusBuilder r2;
        java.lang.String $r4;

        r2 := @this: org.waveprotocol.wave.concurrencycontrol.ResponseStatusBuilder;

        r0 := @parameter0: org.waveprotocol.wave.concurrencycontrol.ResponseStatusBuilder$Factory;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.concurrencycontrol.ResponseStatusBuilder$Factory: org.waveprotocol.wave.concurrencycontrol.ResponseStatus create()>();

        $r3 = r2.<org.waveprotocol.wave.concurrencycontrol.ResponseStatusBuilder: org.waveprotocol.wave.concurrencycontrol.ResponseStatus$ResponseCode status>;

        interfaceinvoke $r1.<org.waveprotocol.wave.concurrencycontrol.ResponseStatus: void setStatus(org.waveprotocol.wave.concurrencycontrol.ResponseStatus$ResponseCode)>($r3);

        $r4 = r2.<org.waveprotocol.wave.concurrencycontrol.ResponseStatusBuilder: java.lang.String failureReason>;

        interfaceinvoke $r1.<org.waveprotocol.wave.concurrencycontrol.ResponseStatus: void setFailureReason(java.lang.String)>($r4);

        return $r1;
    }
}
