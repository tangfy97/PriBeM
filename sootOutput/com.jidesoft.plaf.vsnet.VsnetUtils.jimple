class com.jidesoft.plaf.vsnet.VsnetUtils extends java.lang.Object
{
    static final java.awt.Color DARK_GREEN;
    static final java.awt.Color DARK_MAGENTA;
    private static double RATIO1;
    private static double RATIO2;
    private static double RATIO3;

    void <init>()
    {
        com.jidesoft.plaf.vsnet.VsnetUtils r0;

        r0 := @this: com.jidesoft.plaf.vsnet.VsnetUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.awt.Color getLighterColor(java.awt.Color)
    {
        java.awt.Color r0, $r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @parameter0: java.awt.Color;

        $r1 = <java.awt.Color: java.awt.Color BLACK>;

        $z0 = virtualinvoke $r1.<java.awt.Color: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r2 = <java.awt.Color: java.awt.Color WHITE>;

        $z1 = virtualinvoke $r2.<java.awt.Color: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        return r0;

     label2:
        $r3 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r0, 0.93F);

        return $r3;
    }

    static java.awt.Color getMenuSelectionColor(java.awt.Color)
    {
        java.awt.Color r0, $r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @parameter0: java.awt.Color;

        $r1 = <com.jidesoft.plaf.vsnet.VsnetUtils: java.awt.Color DARK_GREEN>;

        $z0 = virtualinvoke $r1.<java.awt.Color: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $r2 = <com.jidesoft.plaf.vsnet.VsnetUtils: java.awt.Color DARK_MAGENTA>;

        $z1 = virtualinvoke $r2.<java.awt.Color: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

     label1:
        return r0;

     label2:
        $r3 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r0, 0.8555F);

        return $r3;
    }

    static java.awt.Color getMenuBackgroundColor(java.awt.Color)
    {
        java.awt.Color r0, $r1;

        r0 := @parameter0: java.awt.Color;

        $r1 = staticinvoke <com.jidesoft.plaf.vsnet.VsnetUtils: java.awt.Color getLighterColor(java.awt.Color)>(r0);

        return $r1;
    }

    static java.awt.Color getToolBarBackgroundColor(java.awt.Color)
    {
        java.awt.Color r0, $r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @parameter0: java.awt.Color;

        $r1 = <java.awt.Color: java.awt.Color BLACK>;

        $z0 = virtualinvoke $r1.<java.awt.Color: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r2 = <java.awt.Color: java.awt.Color WHITE>;

        $z1 = virtualinvoke $r2.<java.awt.Color: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        return r0;

     label2:
        $r3 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r0, 0.645F);

        return $r3;
    }

    static java.awt.Color getGripperForegroundColor(java.awt.Color)
    {
        java.awt.Color r0;
        javax.swing.plaf.ColorUIResource $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;

        r0 := @parameter0: java.awt.Color;

        $i0 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        $i1 = staticinvoke <com.jidesoft.plaf.vsnet.VsnetUtils: int getGripperValue(int)>($i0);

        i6 = $i1;

        $i2 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        $i3 = staticinvoke <com.jidesoft.plaf.vsnet.VsnetUtils: int getGripperValue(int)>($i2);

        i7 = $i3;

        $i4 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        $i5 = staticinvoke <com.jidesoft.plaf.vsnet.VsnetUtils: int getGripperValue(int)>($i4);

        i8 = $i5;

        if $i1 < 255 goto label1;

        i6 = 255;

     label1:
        if $i3 < 255 goto label2;

        i7 = 255;

     label2:
        if $i5 < 255 goto label3;

        i8 = 255;

     label3:
        $r1 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r1.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(i6, i7, i8);

        return $r1;
    }

    static int getGripperValue(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        i0 := @parameter0: int;

        if i0 != 255 goto label1;

        return 0;

     label1:
        if i0 < 0 goto label2;

        if i0 > 64 goto label2;

        $i5 = i0 * 33;

        $i6 = $i5 / 64;

        $i7 = $i6 + 123;

        return $i7;

     label2:
        $i1 = i0 - 65;

        $i2 = $i1 * 157;

        $i3 = $i2 / 189;

        $i4 = $i3 + 33;

        return $i4;
    }

    static java.awt.Color getDefaultBackgroundColor(java.awt.Color)
    {
        java.awt.Color r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, i11, $i12, $i13, i14;
        javax.swing.plaf.ColorUIResource $r1, $r2, $r3, r4;

        r0 := @parameter0: java.awt.Color;

        $i0 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        if $i0 != 212 goto label1;

        $i3 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        if $i3 != 208 goto label1;

        $i4 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        if $i4 != 200 goto label1;

        $r3 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r3.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(247, 243, 233);

        r4 = $r3;

        goto label6;

     label1:
        $i5 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        if $i5 != 236 goto label2;

        $i1 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        if $i1 != 233 goto label2;

        $i2 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        if $i2 != 216 goto label2;

        $r2 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r2.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(255, 251, 233);

        r4 = $r2;

        goto label6;

     label2:
        $i6 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        $i7 = $i6 + 35;

        i8 = $i7;

        $i9 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        $i10 = $i9 + 35;

        i11 = $i10;

        $i12 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        $i13 = $i12 + 35;

        i14 = $i13;

        if $i7 < 255 goto label3;

        i8 = 255;

     label3:
        if $i10 < 255 goto label4;

        i11 = 255;

     label4:
        if $i13 < 255 goto label5;

        i14 = 255;

     label5:
        $r1 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r1.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(i8, i11, i14);

        r4 = $r1;

     label6:
        return r4;
    }

    public static void setColorRatios(double, double, double)
    {
        double d0, d1, d2;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        <com.jidesoft.plaf.vsnet.VsnetUtils: double RATIO1> = d0;

        <com.jidesoft.plaf.vsnet.VsnetUtils: double RATIO2> = d1;

        <com.jidesoft.plaf.vsnet.VsnetUtils: double RATIO3> = d2;

        return;
    }

    static int getLightColor(int, double)
    {
        int i0, $i1, $i2;
        double d0, $d1, $d2, $d3, $d4;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $i1 = 255 - i0;

        $d1 = (double) $i1;

        $d3 = $d1 * d0;

        $d2 = (double) i0;

        $d4 = $d3 + $d2;

        $i2 = (int) $d4;

        return $i2;
    }

    static java.awt.Color getLighterColor(java.awt.Color, float)
    {
        java.awt.Color r0, $r1, $r2, $r3;
        float f0;
        boolean $z0, $z1;

        r0 := @parameter0: java.awt.Color;

        f0 := @parameter1: float;

        $r1 = <com.jidesoft.plaf.vsnet.VsnetUtils: java.awt.Color DARK_GREEN>;

        $z0 = virtualinvoke $r1.<java.awt.Color: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $r2 = <com.jidesoft.plaf.vsnet.VsnetUtils: java.awt.Color DARK_MAGENTA>;

        $z1 = virtualinvoke $r2.<java.awt.Color: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

     label1:
        return r0;

     label2:
        $r3 = staticinvoke <com.jidesoft.utils.ColorUtils: java.awt.Color getDerivedColor(java.awt.Color,float)>(r0, f0);

        return $r3;
    }

    static java.awt.Color getSelectedAndRolloverButtonColor(java.awt.Color)
    {
        java.awt.Color r0, $r1;
        float $f0;
        double $d0;

        r0 := @parameter0: java.awt.Color;

        $d0 = <com.jidesoft.plaf.vsnet.VsnetUtils: double RATIO1>;

        $f0 = (float) $d0;

        $r1 = staticinvoke <com.jidesoft.plaf.vsnet.VsnetUtils: java.awt.Color getLighterColor(java.awt.Color,float)>(r0, $f0);

        return $r1;
    }

    static java.awt.Color getRolloverButtonColor(java.awt.Color)
    {
        java.awt.Color r0, $r1;
        float $f0;
        double $d0;

        r0 := @parameter0: java.awt.Color;

        $d0 = <com.jidesoft.plaf.vsnet.VsnetUtils: double RATIO2>;

        $f0 = (float) $d0;

        $r1 = staticinvoke <com.jidesoft.plaf.vsnet.VsnetUtils: java.awt.Color getLighterColor(java.awt.Color,float)>(r0, $f0);

        return $r1;
    }

    static java.awt.Color getSelectedButtonColor(java.awt.Color)
    {
        java.awt.Color r0, $r1;
        float $f0;
        double $d0;

        r0 := @parameter0: java.awt.Color;

        $d0 = <com.jidesoft.plaf.vsnet.VsnetUtils: double RATIO3>;

        $f0 = (float) $d0;

        $r1 = staticinvoke <com.jidesoft.plaf.vsnet.VsnetUtils: java.awt.Color getLighterColor(java.awt.Color,float)>(r0, $f0);

        return $r1;
    }

    static java.awt.Color getButtonBorderColor(java.awt.Color)
    {
        java.awt.Color r0, $r1, $r3, $r4;
        javax.swing.plaf.ColorUIResource $r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.awt.Color;

        $r1 = <com.jidesoft.plaf.vsnet.VsnetUtils: java.awt.Color DARK_GREEN>;

        $z0 = virtualinvoke $r1.<java.awt.Color: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $r4 = <com.jidesoft.plaf.vsnet.VsnetUtils: java.awt.Color DARK_MAGENTA>;

        $z1 = virtualinvoke $r4.<java.awt.Color: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

     label1:
        $r2 = new javax.swing.plaf.ColorUIResource;

        $r3 = <java.awt.Color: java.awt.Color WHITE>;

        specialinvoke $r2.<javax.swing.plaf.ColorUIResource: void <init>(java.awt.Color)>($r3);

        return $r2;

     label2:
        return r0;
    }

    static void <clinit>()
    {
        java.awt.Color $r0, $r1;

        $r0 = new java.awt.Color;

        specialinvoke $r0.<java.awt.Color: void <init>(int,int,int)>(0, 128, 0);

        <com.jidesoft.plaf.vsnet.VsnetUtils: java.awt.Color DARK_GREEN> = $r0;

        $r1 = new java.awt.Color;

        specialinvoke $r1.<java.awt.Color: void <init>(int,int,int)>(128, 0, 128);

        <com.jidesoft.plaf.vsnet.VsnetUtils: java.awt.Color DARK_MAGENTA> = $r1;

        <com.jidesoft.plaf.vsnet.VsnetUtils: double RATIO1> = 0.8;

        <com.jidesoft.plaf.vsnet.VsnetUtils: double RATIO2> = 0.9200000166893005;

        <com.jidesoft.plaf.vsnet.VsnetUtils: double RATIO3> = 0.8600000143051147;

        return;
    }
}
