public class groovy.ui.GroovySocketServer extends java.lang.Object implements java.lang.Runnable
{
    private java.net.URL url;
    private groovy.lang.GroovyShell groovy;
    private boolean isScriptFile;
    private java.lang.String scriptFilenameOrText;
    private boolean autoOutput;

    public void <init>(groovy.lang.GroovyShell, boolean, java.lang.String, boolean, int)
    {
        java.net.URL $r3;
        java.net.InetAddress $r4;
        java.lang.StringBuffer $r6, $r8, $r9;
        java.lang.Thread $r11;
        int i0;
        java.lang.String r2, $r5, $r10;
        boolean z0, z1;
        java.io.PrintStream $r7;
        java.io.IOException $r12;
        groovy.lang.GroovyShell r1;
        groovy.ui.GroovySocketServer r0;

        r0 := @this: groovy.ui.GroovySocketServer;

        r1 := @parameter0: groovy.lang.GroovyShell;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        z1 := @parameter3: boolean;

        i0 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<groovy.ui.GroovySocketServer: groovy.lang.GroovyShell groovy> = r1;

        r0.<groovy.ui.GroovySocketServer: boolean isScriptFile> = z0;

        r0.<groovy.ui.GroovySocketServer: java.lang.String scriptFilenameOrText> = r2;

        r0.<groovy.ui.GroovySocketServer: boolean autoOutput> = z1;

     label1:
        $r3 = new java.net.URL;

        $r4 = staticinvoke <java.net.InetAddress: java.net.InetAddress getLocalHost()>();

        $r5 = virtualinvoke $r4.<java.net.InetAddress: java.lang.String getHostAddress()>();

        specialinvoke $r3.<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String)>("http", $r5, i0, "/");

        r0.<groovy.ui.GroovySocketServer: java.net.URL url> = $r3;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("groovy is listening on port ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        virtualinvoke $r12.<java.io.IOException: void printStackTrace()>();

     label4:
        $r11 = new java.lang.Thread;

        specialinvoke $r11.<java.lang.Thread: void <init>(java.lang.Runnable)>(r0);

        virtualinvoke $r11.<java.lang.Thread: void start()>();

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void run()
    {
        java.net.Socket $r6;
        groovy.ui.GroovySocketServer$GroovyClientConnection $r5;
        java.net.URL $r2;
        groovy.lang.Script r13;
        java.net.ServerSocket $r0;
        int $i0;
        java.lang.String $r3, $r9;
        boolean $z0, $z1;
        java.io.FileInputStream $r8;
        groovy.lang.GroovyShell $r4, $r10;
        java.io.File $r11;
        java.lang.Exception $r12;
        groovy.ui.GroovySocketServer r1;
        groovy.ui.GroovyMain $r7;

        r1 := @this: groovy.ui.GroovySocketServer;

     label1:
        $r0 = new java.net.ServerSocket;

        $r2 = r1.<groovy.ui.GroovySocketServer: java.net.URL url>;

        $i0 = virtualinvoke $r2.<java.net.URL: int getPort()>();

        specialinvoke $r0.<java.net.ServerSocket: void <init>(int)>($i0);

     label2:
        $z0 = r1.<groovy.ui.GroovySocketServer: boolean isScriptFile>;

        if $z0 == 0 goto label3;

        $r7 = new groovy.ui.GroovyMain;

        specialinvoke $r7.<groovy.ui.GroovyMain: void <init>()>();

        $r10 = r1.<groovy.ui.GroovySocketServer: groovy.lang.GroovyShell groovy>;

        $r8 = new java.io.FileInputStream;

        $r9 = r1.<groovy.ui.GroovySocketServer: java.lang.String scriptFilenameOrText>;

        $r11 = virtualinvoke $r7.<groovy.ui.GroovyMain: java.io.File huntForTheScriptFile(java.lang.String)>($r9);

        specialinvoke $r8.<java.io.FileInputStream: void <init>(java.io.File)>($r11);

        r13 = virtualinvoke $r10.<groovy.lang.GroovyShell: groovy.lang.Script parse(java.io.InputStream)>($r8);

        goto label4;

     label3:
        $r4 = r1.<groovy.ui.GroovySocketServer: groovy.lang.GroovyShell groovy>;

        $r3 = r1.<groovy.ui.GroovySocketServer: java.lang.String scriptFilenameOrText>;

        r13 = virtualinvoke $r4.<groovy.lang.GroovyShell: groovy.lang.Script parse(java.lang.String)>($r3);

     label4:
        $r5 = new groovy.ui.GroovySocketServer$GroovyClientConnection;

        $z1 = r1.<groovy.ui.GroovySocketServer: boolean autoOutput>;

        $r6 = virtualinvoke $r0.<java.net.ServerSocket: java.net.Socket accept()>();

        specialinvoke $r5.<groovy.ui.GroovySocketServer$GroovyClientConnection: void <init>(groovy.ui.GroovySocketServer,groovy.lang.Script,boolean,java.net.Socket)>(r1, r13, $z1, $r6);

        goto label2;

     label5:
        $r12 := @caughtexception;

        virtualinvoke $r12.<java.lang.Exception: void printStackTrace()>();

        return;

        catch java.lang.Exception from label1 to label5 with label5;
    }
}
