public class org.apache.cxf.transports.http.configuration.HTTPClientPolicy extends org.apache.cxf.wsdl.TExtensibilityElementImpl
{
    protected java.lang.Long connectionTimeout;
    protected java.lang.Long receiveTimeout;
    protected java.lang.Long asyncExecuteTimeout;
    protected java.lang.Boolean asyncExecuteTimeoutRejection;
    protected java.lang.Boolean autoRedirect;
    protected java.lang.Integer maxRetransmits;
    protected java.lang.Boolean allowChunking;
    protected java.lang.Integer chunkingThreshold;
    protected java.lang.Integer chunkLength;
    protected java.lang.String accept;
    protected java.lang.String acceptLanguage;
    protected java.lang.String acceptEncoding;
    protected java.lang.String contentType;
    protected java.lang.String host;
    protected org.apache.cxf.transports.http.configuration.ConnectionType connection;
    protected java.lang.String cacheControl;
    protected java.lang.String cookie;
    protected java.lang.String browserType;
    protected java.lang.String referer;
    protected java.lang.String decoupledEndpoint;
    protected java.lang.String proxyServer;
    protected java.lang.Integer proxyServerPort;
    protected java.lang.String nonProxyHosts;
    protected org.apache.cxf.transports.http.configuration.ProxyServerType proxyServerType;
    protected java.beans.PropertyChangeSupport propertyListener;

    public void <init>()
    {
        java.beans.PropertyChangeSupport $r1;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        specialinvoke r0.<org.apache.cxf.wsdl.TExtensibilityElementImpl: void <init>()>();

        $r1 = new java.beans.PropertyChangeSupport;

        specialinvoke $r1.<java.beans.PropertyChangeSupport: void <init>(java.lang.Object)>(r0);

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener> = $r1;

        return;
    }

    public java.lang.String getAccept()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String $r1;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String accept>;

        return $r1;
    }

    public void setAccept(java.lang.String)
    {
        java.beans.PropertyChangeSupport $r3;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener>;

        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String accept>;

        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("accept", $r2, r1);

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String accept> = r1;

        return;
    }

    public boolean isSetAccept()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String accept>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getAcceptLanguage()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String $r1;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String acceptLanguage>;

        return $r1;
    }

    public void setAcceptLanguage(java.lang.String)
    {
        java.beans.PropertyChangeSupport $r3;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener>;

        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String acceptLanguage>;

        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("acceptLanguage", $r2, r1);

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String acceptLanguage> = r1;

        return;
    }

    public boolean isSetAcceptLanguage()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String acceptLanguage>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getAcceptEncoding()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String $r1;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String acceptEncoding>;

        return $r1;
    }

    public void setAcceptEncoding(java.lang.String)
    {
        java.beans.PropertyChangeSupport $r3;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener>;

        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String acceptEncoding>;

        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("acceptEncoding", $r2, r1);

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String acceptEncoding> = r1;

        return;
    }

    public boolean isSetAcceptEncoding()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String acceptEncoding>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getContentType()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String $r1;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String contentType>;

        return $r1;
    }

    public void setContentType(java.lang.String)
    {
        java.beans.PropertyChangeSupport $r3;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener>;

        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String contentType>;

        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("contentType", $r2, r1);

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String contentType> = r1;

        return;
    }

    public boolean isSetContentType()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String contentType>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getHost()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String $r1;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String host>;

        return $r1;
    }

    public void setHost(java.lang.String)
    {
        java.beans.PropertyChangeSupport $r3;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener>;

        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String host>;

        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("host", $r2, r1);

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String host> = r1;

        return;
    }

    public boolean isSetHost()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String host>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setConnection(org.apache.cxf.transports.http.configuration.ConnectionType)
    {
        java.beans.PropertyChangeSupport $r3;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        org.apache.cxf.transports.http.configuration.ConnectionType r1, $r2;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r1 := @parameter0: org.apache.cxf.transports.http.configuration.ConnectionType;

        $r3 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener>;

        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: org.apache.cxf.transports.http.configuration.ConnectionType connection>;

        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("connection", $r2, r1);

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: org.apache.cxf.transports.http.configuration.ConnectionType connection> = r1;

        return;
    }

    public boolean isSetConnection()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        org.apache.cxf.transports.http.configuration.ConnectionType $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: org.apache.cxf.transports.http.configuration.ConnectionType connection>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getCacheControl()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String $r1;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String cacheControl>;

        return $r1;
    }

    public void setCacheControl(java.lang.String)
    {
        java.beans.PropertyChangeSupport $r3;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener>;

        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String cacheControl>;

        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("cacheControl", $r2, r1);

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String cacheControl> = r1;

        return;
    }

    public boolean isSetCacheControl()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String cacheControl>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getCookie()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String $r1;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String cookie>;

        return $r1;
    }

    public void setCookie(java.lang.String)
    {
        java.beans.PropertyChangeSupport $r3;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener>;

        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String cookie>;

        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("cookie", $r2, r1);

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String cookie> = r1;

        return;
    }

    public boolean isSetCookie()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String cookie>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getBrowserType()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String $r1;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String browserType>;

        return $r1;
    }

    public void setBrowserType(java.lang.String)
    {
        java.beans.PropertyChangeSupport $r3;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener>;

        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String browserType>;

        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("browserType", $r2, r1);

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String browserType> = r1;

        return;
    }

    public boolean isSetBrowserType()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String browserType>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getReferer()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String $r1;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String referer>;

        return $r1;
    }

    public void setReferer(java.lang.String)
    {
        java.beans.PropertyChangeSupport $r3;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener>;

        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String referer>;

        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("referer", $r2, r1);

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String referer> = r1;

        return;
    }

    public boolean isSetReferer()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String referer>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getDecoupledEndpoint()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String $r1;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String decoupledEndpoint>;

        return $r1;
    }

    public void setDecoupledEndpoint(java.lang.String)
    {
        java.beans.PropertyChangeSupport $r3;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener>;

        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String decoupledEndpoint>;

        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("decoupledEndpoint", $r2, r1);

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String decoupledEndpoint> = r1;

        return;
    }

    public boolean isSetDecoupledEndpoint()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String decoupledEndpoint>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getProxyServer()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String $r1;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String proxyServer>;

        return $r1;
    }

    public void setProxyServer(java.lang.String)
    {
        java.beans.PropertyChangeSupport $r3;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener>;

        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String proxyServer>;

        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("proxyServer", $r2, r1);

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String proxyServer> = r1;

        return;
    }

    public boolean isSetProxyServer()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String proxyServer>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getNonProxyHosts()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String $r1;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String nonProxyHosts>;

        return $r1;
    }

    public void setNonProxyHosts(java.lang.String)
    {
        java.beans.PropertyChangeSupport $r3;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener>;

        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String nonProxyHosts>;

        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("nonProxyHosts", $r2, r1);

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String nonProxyHosts> = r1;

        return;
    }

    public boolean isSetNonProxyHosts()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.String nonProxyHosts>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setProxyServerType(org.apache.cxf.transports.http.configuration.ProxyServerType)
    {
        java.beans.PropertyChangeSupport $r3;
        org.apache.cxf.transports.http.configuration.ProxyServerType r1, $r2;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r1 := @parameter0: org.apache.cxf.transports.http.configuration.ProxyServerType;

        $r3 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener>;

        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: org.apache.cxf.transports.http.configuration.ProxyServerType proxyServerType>;

        virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("proxyServerType", $r2, r1);

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: org.apache.cxf.transports.http.configuration.ProxyServerType proxyServerType> = r1;

        return;
    }

    public boolean isSetProxyServerType()
    {
        org.apache.cxf.transports.http.configuration.ProxyServerType $r1;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: org.apache.cxf.transports.http.configuration.ProxyServerType proxyServerType>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setConnectionTimeout(long)
    {
        java.lang.Long $r2, $r3, $r4;
        java.beans.PropertyChangeSupport $r1;
        long l0;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener>;

        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Long connectionTimeout>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r1.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("connectionTimeout", $r2, $r3);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Long connectionTimeout> = $r4;

        return;
    }

    public void unsetConnectionTimeout()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Long connectionTimeout> = null;

        return;
    }

    public boolean isSetConnectionTimeout()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.Long $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Long connectionTimeout>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public long getConnectionTimeout()
    {
        java.lang.Long $r1, $r2;
        long $l0;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Long connectionTimeout>;

        if null != $r1 goto label1;

        return 30000L;

     label1:
        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Long connectionTimeout>;

        $l0 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        return $l0;
    }

    public void setReceiveTimeout(long)
    {
        java.lang.Long $r2, $r3, $r4;
        java.beans.PropertyChangeSupport $r1;
        long l0;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener>;

        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Long receiveTimeout>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r1.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("receiveTimeout", $r2, $r3);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Long receiveTimeout> = $r4;

        return;
    }

    public void unsetReceiveTimeout()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Long receiveTimeout> = null;

        return;
    }

    public boolean isSetReceiveTimeout()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.Long $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Long receiveTimeout>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public long getReceiveTimeout()
    {
        java.lang.Long $r1, $r2;
        long $l0;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Long receiveTimeout>;

        if null != $r1 goto label1;

        return 60000L;

     label1:
        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Long receiveTimeout>;

        $l0 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        return $l0;
    }

    public void setAsyncExecuteTimeout(long)
    {
        java.lang.Long $r2, $r3, $r4;
        java.beans.PropertyChangeSupport $r1;
        long l0;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener>;

        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Long asyncExecuteTimeout>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r1.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("asyncExecuteTimeout", $r2, $r3);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Long asyncExecuteTimeout> = $r4;

        return;
    }

    public void unsetAsyncExecuteTimeout()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Long asyncExecuteTimeout> = null;

        return;
    }

    public boolean isSetAsyncExecuteTimeout()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.Long $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Long asyncExecuteTimeout>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public long getAsyncExecuteTimeout()
    {
        java.lang.Long $r1, $r2;
        long $l0;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Long asyncExecuteTimeout>;

        if null != $r1 goto label1;

        return 5000L;

     label1:
        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Long asyncExecuteTimeout>;

        $l0 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        return $l0;
    }

    public void setAsyncExecuteTimeoutRejection(boolean)
    {
        java.beans.PropertyChangeSupport $r1;
        java.lang.Boolean $r2, $r3, $r4;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        boolean z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener>;

        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Boolean asyncExecuteTimeoutRejection>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke $r1.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("asyncExecuteTimeoutRejection", $r2, $r3);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Boolean asyncExecuteTimeoutRejection> = $r4;

        return;
    }

    public void unsetAsyncExecuteTimeoutRejection()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Boolean asyncExecuteTimeoutRejection> = null;

        return;
    }

    public boolean isSetAsyncExecuteTimeoutRejection()
    {
        java.lang.Boolean $r1;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Boolean asyncExecuteTimeoutRejection>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isAsyncExecuteTimeoutRejection()
    {
        java.lang.Boolean $r1, $r2;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Boolean asyncExecuteTimeoutRejection>;

        if null != $r1 goto label1;

        return 0;

     label1:
        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Boolean asyncExecuteTimeoutRejection>;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public void setAutoRedirect(boolean)
    {
        java.beans.PropertyChangeSupport $r1;
        java.lang.Boolean $r2, $r3, $r4;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        boolean z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener>;

        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Boolean autoRedirect>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke $r1.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("autoRedirect", $r2, $r3);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Boolean autoRedirect> = $r4;

        return;
    }

    public void unsetAutoRedirect()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Boolean autoRedirect> = null;

        return;
    }

    public boolean isSetAutoRedirect()
    {
        java.lang.Boolean $r1;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Boolean autoRedirect>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isAutoRedirect()
    {
        java.lang.Boolean $r1, $r2;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Boolean autoRedirect>;

        if null != $r1 goto label1;

        return 0;

     label1:
        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Boolean autoRedirect>;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public void setMaxRetransmits(int)
    {
        int i0;
        java.beans.PropertyChangeSupport $r1;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.Integer $r2, $r3, $r4;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener>;

        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Integer maxRetransmits>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r1.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("maxRetransmits", $r2, $r3);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Integer maxRetransmits> = $r4;

        return;
    }

    public void unsetMaxRetransmits()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Integer maxRetransmits> = null;

        return;
    }

    public boolean isSetMaxRetransmits()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.Integer $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Integer maxRetransmits>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getMaxRetransmits()
    {
        int $i0, $i2;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.Integer $r1, $r2;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Integer maxRetransmits>;

        if null != $r1 goto label1;

        $i2 = (int) -1;

        return $i2;

     label1:
        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Integer maxRetransmits>;

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public void setAllowChunking(boolean)
    {
        java.beans.PropertyChangeSupport $r1;
        java.lang.Boolean $r2, $r3, $r4;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        boolean z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener>;

        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Boolean allowChunking>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke $r1.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("allowChunking", $r2, $r3);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Boolean allowChunking> = $r4;

        return;
    }

    public void unsetAllowChunking()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Boolean allowChunking> = null;

        return;
    }

    public boolean isSetAllowChunking()
    {
        java.lang.Boolean $r1;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Boolean allowChunking>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isAllowChunking()
    {
        java.lang.Boolean $r1, $r2;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Boolean allowChunking>;

        if null != $r1 goto label1;

        return 1;

     label1:
        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Boolean allowChunking>;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public void setChunkingThreshold(int)
    {
        int i0;
        java.beans.PropertyChangeSupport $r1;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.Integer $r2, $r3, $r4;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener>;

        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Integer chunkingThreshold>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r1.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("chunkingThreshold", $r2, $r3);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Integer chunkingThreshold> = $r4;

        return;
    }

    public void unsetChunkingThreshold()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Integer chunkingThreshold> = null;

        return;
    }

    public boolean isSetChunkingThreshold()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.Integer $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Integer chunkingThreshold>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getChunkingThreshold()
    {
        int $i0;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.Integer $r1, $r2;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Integer chunkingThreshold>;

        if null != $r1 goto label1;

        return 4096;

     label1:
        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Integer chunkingThreshold>;

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public void setChunkLength(int)
    {
        int i0;
        java.beans.PropertyChangeSupport $r1;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.Integer $r2, $r3, $r4;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener>;

        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Integer chunkLength>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r1.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("chunkLength", $r2, $r3);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Integer chunkLength> = $r4;

        return;
    }

    public void unsetChunkLength()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Integer chunkLength> = null;

        return;
    }

    public boolean isSetChunkLength()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.Integer $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Integer chunkLength>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getChunkLength()
    {
        int $i0, $i2;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.Integer $r1, $r2;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Integer chunkLength>;

        if null != $r1 goto label1;

        $i2 = (int) -1;

        return $i2;

     label1:
        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Integer chunkLength>;

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public org.apache.cxf.transports.http.configuration.ConnectionType getConnection()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        org.apache.cxf.transports.http.configuration.ConnectionType $r1, $r2, $r3;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: org.apache.cxf.transports.http.configuration.ConnectionType connection>;

        if null != $r1 goto label1;

        $r3 = staticinvoke <org.apache.cxf.transports.http.configuration.ConnectionType: org.apache.cxf.transports.http.configuration.ConnectionType fromValue(java.lang.String)>("Keep-Alive");

        return $r3;

     label1:
        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: org.apache.cxf.transports.http.configuration.ConnectionType connection>;

        return $r2;
    }

    public void setProxyServerPort(int)
    {
        int i0;
        java.beans.PropertyChangeSupport $r1;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.Integer $r2, $r3, $r4;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener>;

        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Integer proxyServerPort>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r1.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("proxyServerPort", $r2, $r3);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Integer proxyServerPort> = $r4;

        return;
    }

    public void unsetProxyServerPort()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Integer proxyServerPort> = null;

        return;
    }

    public boolean isSetProxyServerPort()
    {
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.Integer $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Integer proxyServerPort>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getProxyServerPort()
    {
        int $i0;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.lang.Integer $r1;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.lang.Integer proxyServerPort>;

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public org.apache.cxf.transports.http.configuration.ProxyServerType getProxyServerType()
    {
        org.apache.cxf.transports.http.configuration.ProxyServerType $r1, $r2, $r3;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        $r1 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: org.apache.cxf.transports.http.configuration.ProxyServerType proxyServerType>;

        if null != $r1 goto label1;

        $r3 = staticinvoke <org.apache.cxf.transports.http.configuration.ProxyServerType: org.apache.cxf.transports.http.configuration.ProxyServerType fromValue(java.lang.String)>("HTTP");

        return $r3;

     label1:
        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: org.apache.cxf.transports.http.configuration.ProxyServerType proxyServerType>;

        return $r2;
    }

    public void addPropertyChangeListener(java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeSupport $r2;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.beans.PropertyChangeListener r1;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r1 := @parameter0: java.beans.PropertyChangeListener;

        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener>;

        virtualinvoke $r2.<java.beans.PropertyChangeSupport: void addPropertyChangeListener(java.beans.PropertyChangeListener)>(r1);

        return;
    }

    public void removePropertyChangeListener(java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeSupport $r2;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy r0;
        java.beans.PropertyChangeListener r1;

        r0 := @this: org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        r1 := @parameter0: java.beans.PropertyChangeListener;

        $r2 = r0.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: java.beans.PropertyChangeSupport propertyListener>;

        virtualinvoke $r2.<java.beans.PropertyChangeSupport: void removePropertyChangeListener(java.beans.PropertyChangeListener)>(r1);

        return;
    }
}
