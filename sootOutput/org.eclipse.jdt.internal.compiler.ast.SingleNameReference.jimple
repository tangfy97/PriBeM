public class org.eclipse.jdt.internal.compiler.ast.SingleNameReference extends org.eclipse.jdt.internal.compiler.ast.NameReference implements org.eclipse.jdt.internal.compiler.ast.OperatorIds
{
    public static final int READ;
    public static final int WRITE;
    public char[] token;
    public org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors;
    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding genericCast;

    public void <init>(char[], long)
    {
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r0;
        int $i2, $i3;
        char[] r1;
        long l0, $l1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        r1 := @parameter0: char[];

        l0 := @parameter1: long;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.NameReference: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: char[] token> = r1;

        $l1 = l0 >>> 32;

        $i2 = (int) $l1;

        r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int sourceStart> = $i2;

        $i3 = (int) l0;

        r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int sourceEnd> = $i3;

        return;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseAssignment(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo, org.eclipse.jdt.internal.compiler.ast.Assignment, boolean)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r4, $r5, $r7, $r8, $r10, $r15, $r18, $r22;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r14, r23;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding $r17, r21;
        byte $b8;
        org.eclipse.jdt.internal.compiler.ast.Expression $r11, $r20;
        org.eclipse.jdt.internal.compiler.flow.FlowContext r6;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r1;
        org.eclipse.jdt.internal.compiler.ast.Assignment r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r3;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r12, r19;
        long $l6, $l7;
        org.eclipse.jdt.internal.compiler.lookup.Binding $r2, $r9, $r13, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r6 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowContext;

        r19 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        r0 := @parameter3: org.eclipse.jdt.internal.compiler.ast.Assignment;

        z1 := @parameter4: boolean;

        $i0 = r19.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: int tagBits>;

        $i1 = $i0 & 1;

        if $i1 != 0 goto label01;

        $z14 = 1;

        goto label02;

     label01:
        $z14 = 0;

     label02:
        z0 = $z14;

        if z1 == 0 goto label08;

        $i13 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i14 = $i13 & 7;

        tableswitch($i14)
        {
            case 1: goto label03;
            case 2: goto label05;
            default: goto label08;
        };

     label03:
        $r16 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        $r17 = (org.eclipse.jdt.internal.compiler.lookup.FieldBinding) $r16;

        $z11 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isBlankFinal()>();

        if $z11 == 0 goto label04;

        $z12 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: boolean needBlankFinalFieldInitializationCheck(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>($r17);

        if $z12 == 0 goto label04;

        $z13 = virtualinvoke r19.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>($r17);

        if $z13 != 0 goto label04;

        $r18 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void uninitializedBlankFinalField(org.eclipse.jdt.internal.compiler.lookup.FieldBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r17, r1);

     label04:
        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: void manageSyntheticAccessIfNecessary(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo,boolean)>(r3, r19, 1);

        goto label08;

     label05:
        $r13 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        $r14 = (org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding) $r13;

        $z10 = virtualinvoke r19.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r14);

        if $z10 != 0 goto label06;

        $r15 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void uninitializedLocalVariable(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r14, r1);

     label06:
        if z0 == 0 goto label07;

        $r14.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int useFlag> = 1;

        goto label08;

     label07:
        $i15 = $r14.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int useFlag>;

        if $i15 != 0 goto label08;

        $r14.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int useFlag> = 2;

     label08:
        $r20 = r0.<org.eclipse.jdt.internal.compiler.ast.Assignment: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        if $r20 == null goto label09;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.Assignment: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r12 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r3, r6, r19);

        r19 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalInits()>();

     label09:
        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i3 = $i2 & 7;

        tableswitch($i3)
        {
            case 1: goto label10;
            case 2: goto label14;
            default: goto label24;
        };

     label10:
        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: void manageSyntheticAccessIfNecessary(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo,boolean)>(r3, r19, 0);

        $r9 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        r21 = (org.eclipse.jdt.internal.compiler.lookup.FieldBinding) $r9;

        $z6 = virtualinvoke r21.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isFinal()>();

        if $z6 == 0 goto label24;

        if z1 != 0 goto label13;

        $z7 = virtualinvoke r21.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isBlankFinal()>();

        if $z7 == 0 goto label13;

        $z8 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: boolean allowBlankFinalFieldAssignment(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r21);

        if $z8 == 0 goto label13;

        $z9 = virtualinvoke r19.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isPotentiallyAssigned(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r21);

        if $z9 == 0 goto label11;

        $r10 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void duplicateInitializationOfBlankFinalField(org.eclipse.jdt.internal.compiler.lookup.FieldBinding,org.eclipse.jdt.internal.compiler.ast.Reference)>(r21, r1);

        goto label12;

     label11:
        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.flow.FlowContext: void recordSettingFinal(org.eclipse.jdt.internal.compiler.lookup.VariableBinding,org.eclipse.jdt.internal.compiler.ast.Reference,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r21, r1, r19);

     label12:
        virtualinvoke r19.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: void markAsDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r21);

        goto label24;

     label13:
        $r22 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void cannotAssignToFinalField(org.eclipse.jdt.internal.compiler.lookup.FieldBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r21, r1);

        goto label24;

     label14:
        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        r23 = (org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding) $r2;

        $z2 = virtualinvoke r19.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r23);

        if $z2 != 0 goto label15;

        $i11 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i12 = $i11 | 8;

        r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits> = $i12;

        goto label16;

     label15:
        $i4 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i17 = (int) -9;

        $i5 = $i4 & $i17;

        r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits> = $i5;

     label16:
        $z3 = virtualinvoke r23.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: boolean isFinal()>();

        if $z3 == 0 goto label22;

        $i9 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i10 = $i9 & 8160;

        if $i10 != 0 goto label21;

        if z0 == 0 goto label17;

        if z1 != 0 goto label18;

     label17:
        $z4 = virtualinvoke r23.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: boolean isBlankFinal()>();

        if $z4 != 0 goto label19;

     label18:
        $r8 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void cannotAssignToFinalLocal(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r23, r1);

        goto label23;

     label19:
        $z5 = virtualinvoke r19.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isPotentiallyAssigned(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r23);

        if $z5 == 0 goto label20;

        $r7 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void duplicateInitializationOfFinalLocal(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r23, r1);

        goto label23;

     label20:
        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.flow.FlowContext: void recordSettingFinal(org.eclipse.jdt.internal.compiler.lookup.VariableBinding,org.eclipse.jdt.internal.compiler.ast.Reference,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r23, r1, r19);

        goto label23;

     label21:
        $r5 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void cannotAssignToFinalOuterLocal(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r23, r1);

        goto label23;

     label22:
        $l6 = r23.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: long tagBits>;

        $l7 = $l6 & 1024L;

        $b8 = $l7 cmp 0L;

        if $b8 == 0 goto label23;

        $r4 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void parameterAssignment(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r23, r1);

     label23:
        virtualinvoke r19.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: void markAsDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r23);

     label24:
        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: void manageEnclosingInstanceAccessIfNecessary(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r3, r19);

        return r19;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r1;
        org.eclipse.jdt.internal.compiler.flow.FlowContext r2;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r0;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r3, $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowContext;

        r3 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo,boolean)>(r1, r2, r3, 1);

        return $r4;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo, boolean)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r4;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r5, $r6;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r3;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r1;
        long $l5;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding $r10;
        org.eclipse.jdt.internal.compiler.lookup.Binding $r2, $r9;
        byte $b6;
        org.eclipse.jdt.internal.compiler.flow.FlowContext r8;
        int $i0, $i1, $i2, $i3, $i4, $i7;
        boolean $z0, z1, $z2, $z3, $z4;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r0;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r7;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r8 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowContext;

        r1 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        z1 := @parameter3: boolean;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i1 = $i0 & 7;

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label4;
            default: goto label7;
        };

     label1:
        if z1 != 0 goto label2;

        $r7 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $l5 = $r7.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long complianceLevel>;

        $b6 = $l5 cmp 3145728L;

        $i7 = (int) $b6;

        if $i7 < 0 goto label3;

     label2:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: void manageSyntheticAccessIfNecessary(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo,boolean)>(r4, r1, 1);

     label3:
        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        $r10 = (org.eclipse.jdt.internal.compiler.lookup.FieldBinding) $r9;

        $z4 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isBlankFinal()>();

        if $z4 == 0 goto label7;

        $z2 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: boolean needBlankFinalFieldInitializationCheck(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>($r10);

        if $z2 == 0 goto label7;

        $z3 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>($r10);

        if $z3 != 0 goto label7;

        $r6 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void uninitializedBlankFinalField(org.eclipse.jdt.internal.compiler.lookup.FieldBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r10, r0);

        goto label7;

     label4:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        $r3 = (org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding) $r2;

        $z0 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r3);

        if $z0 != 0 goto label5;

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void uninitializedLocalVariable(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r3, r0);

     label5:
        $i2 = r1.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: int tagBits>;

        $i3 = $i2 & 1;

        if $i3 != 0 goto label6;

        $r3.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int useFlag> = 1;

        goto label7;

     label6:
        $i4 = $r3.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int useFlag>;

        if $i4 != 0 goto label7;

        $r3.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int useFlag> = 2;

     label7:
        if z1 == 0 goto label8;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: void manageEnclosingInstanceAccessIfNecessary(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r4, r1);

     label8:
        return r1;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding checkFieldAccess(org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r10, $r12, $r13, $r15, $r20;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r2, $r8;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r5;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r14, $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.eclipse.jdt.internal.compiler.impl.Constant $r3, $r18, $r19;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r0;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r6;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r4;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r7, $r11, $r17;
        org.eclipse.jdt.internal.compiler.lookup.Binding $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i17;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r9, r16, $r21;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        r2 = (org.eclipse.jdt.internal.compiler.lookup.FieldBinding) $r1;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.impl.Constant constant()>();

        r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r3;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i15 = (int) -8;

        $i1 = $i0 & $i15;

        r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i3 = $i2 | 1;

        r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits> = $i3;

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodScope methodScope()>();

        $z0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isStatic()>();

        if $z0 == 0 goto label2;

        r16 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z5 = virtualinvoke r16.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isEnum()>();

        if $z5 == 0 goto label4;

        $r17 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding enclosingSourceType()>();

        $r19 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r18 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r19 != $r18 goto label4;

        $z6 = $r5.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: boolean isStatic>;

        if $z6 != 0 goto label4;

        if $r17 == r16 goto label1;

        $r21 = $r17.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding superclass>;

        if $r21 != r16 goto label4;

     label1:
        $z7 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: boolean isInsideInitializerOrConstructor()>();

        if $z7 == 0 goto label4;

        $r20 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r20.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void enumStaticFieldUsedDuringInitialization(org.eclipse.jdt.internal.compiler.lookup.FieldBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r0);

        goto label4;

     label2:
        $r6 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $i4 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int getSeverity(long)>(4194304L);

        $i17 = (int) -1;

        if $i4 == $i17 goto label3;

        $r15 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unqualifiedFieldAccess(org.eclipse.jdt.internal.compiler.ast.NameReference,org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r0, r2);

     label3:
        $z1 = $r5.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: boolean isStatic>;

        if $z1 == 0 goto label4;

        $r13 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void staticFieldAccessToNonStaticVariable(org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r0, r2);

        $r14 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        return $r14;

     label4:
        $i12 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i13 = $i12 & 8192;

        if $i13 == 0 goto label5;

        $z8 = 1;

        goto label6;

     label5:
        $z8 = 0;

     label6:
        $z2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: boolean isFieldUseDeprecated(org.eclipse.jdt.internal.compiler.lookup.FieldBinding,org.eclipse.jdt.internal.compiler.lookup.Scope,boolean)>(r2, r4, $z8);

        if $z2 == 0 goto label7;

        $r12 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void deprecatedField(org.eclipse.jdt.internal.compiler.lookup.FieldBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r0);

     label7:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i6 = $i5 & 8192;

        if $i6 != 0 goto label9;

        $r7 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding enclosingSourceType()>();

        $r8 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.FieldBinding original()>();

        $r9 = $r8.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        if $r7 != $r9 goto label9;

        $i7 = $r5.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: int lastVisibleFieldID>;

        if $i7 < 0 goto label9;

        $i9 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: int id>;

        $i8 = $r5.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: int lastVisibleFieldID>;

        if $i9 < $i8 goto label9;

        $z3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isStatic()>();

        if $z3 == 0 goto label8;

        $z4 = $r5.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: boolean isStatic>;

        if $z4 == 0 goto label9;

     label8:
        $r10 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r11 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding enclosingSourceType()>();

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void forwardReference(org.eclipse.jdt.internal.compiler.ast.Reference,int,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0, 0, $r11);

        $i10 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i11 = $i10 | 536870912;

        r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits> = $i11;

     label9:
        $r22 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        return $r22;
    }

    public void computeConversion(org.eclipse.jdt.internal.compiler.lookup.Scope, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r13;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r7, $r8;
        char[][] $r16;
        byte $b5;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r0, r1, r9, $r10, $r11, $r17, $r18, $r19, $r20;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r2;
        long $l3, $l4;
        org.eclipse.jdt.internal.compiler.lookup.Binding $r4, $r5, $r6;
        int $i0, $i1, $i2;
        org.eclipse.jdt.internal.compiler.lookup.Scope r3;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r12;
        org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding $r14;
        char[] $r15;

        r2 := @this: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Scope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r1 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        $i0 = r2.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label5;

        $r4 = r2.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        if $r4 == null goto label5;

        $r5 = r2.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        $z0 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.Binding: boolean isValidBinding()>();

        if $z0 == 0 goto label5;

        $r6 = r2.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        r7 = (org.eclipse.jdt.internal.compiler.lookup.FieldBinding) $r6;

        $r8 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.FieldBinding original()>();

        r9 = $r8.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        if $r8 == r7 goto label5;

        $r10 = r7.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        if r9 == $r10 goto label5;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i2 == 1 goto label5;

        $l3 = r9.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: long tagBits>;

        $l4 = $l3 & 536870912L;

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label5;

        $z1 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z1 != 0 goto label3;

        $z3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z3 == 0 goto label3;

        $r17 = r1;

        goto label4;

     label3:
        $r17 = r0;

     label4:
        $r18 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.TypeBinding boxing(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r17);

        $r19 = virtualinvoke r9.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding genericCast(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r18);

        r2.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding genericCast> = $r19;

        $r20 = r2.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding genericCast>;

        $z4 = $r20 instanceof org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        if $z4 == 0 goto label5;

        $r11 = r2.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding genericCast>;

        r12 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r11;

        $z2 = virtualinvoke r12.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean canBeSeenBy(org.eclipse.jdt.internal.compiler.lookup.Scope)>(r3);

        if $z2 != 0 goto label5;

        $r13 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r14 = new org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding;

        $r15 = virtualinvoke r12.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] shortReadableName()>();

        $r16 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[][] splitOn(char,char[])>(46, $r15);

        specialinvoke $r14.<org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding: void <init>(char[][],org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,int)>($r16, r12, 2);

        virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void invalidType(org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r2, $r14);

     label5:
        specialinvoke r2.<org.eclipse.jdt.internal.compiler.ast.NameReference: void computeConversion(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r3, r0, r1);

        return;
    }

    public void generateAssignment(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream, org.eclipse.jdt.internal.compiler.ast.Assignment, boolean)
    {
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r62;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding $r29;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] $r30, $r46, $r47, $r53, $r54, $r60;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r11, $r13, $r17, $r20, $r21, $r27;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r57, $r58, $r61;
        org.eclipse.jdt.internal.compiler.impl.Constant $r5, $r6, $r15, $r42, $r43;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r2, $r38, $r50;
        org.eclipse.jdt.internal.compiler.ast.BinaryExpression r56;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r7;
        java.lang.Object[] $r33;
        org.eclipse.jdt.internal.compiler.lookup.Binding $r3, $r28, $r39, $r40, $r51, $r52;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r8;
        org.eclipse.jdt.internal.compiler.ast.CastExpression $r24;
        org.eclipse.jdt.internal.compiler.ast.Expression $r1, $r4, $r9, $r14, $r16, $r18, $r22, $r23, $r25, $r34, $r35, $r36, $r37, $r41, $r44, $r45, $r48, $r49, $r55, $r59;
        boolean $z0, z1, $z2, $z3, $z4, $z5, $z6;
        org.eclipse.jdt.internal.compiler.ast.Assignment r0;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r31;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, $i24, $i25, i26, $i27, $i28, $i29, $i31;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r32;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r10, $r12, $r19, $r26;

        r2 := @this: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        r7 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r8 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0 := @parameter2: org.eclipse.jdt.internal.compiler.ast.Assignment;

        z1 := @parameter3: boolean;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.Assignment: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $z0 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.Expression: boolean isCompactableOperation()>();

        if $z0 == 0 goto label09;

        $r34 = r0.<org.eclipse.jdt.internal.compiler.ast.Assignment: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        r56 = (org.eclipse.jdt.internal.compiler.ast.BinaryExpression) $r34;

        $i11 = r56.<org.eclipse.jdt.internal.compiler.ast.BinaryExpression: int bits>;

        $i12 = $i11 & 4032;

        i23 = $i12 >> 6;

        $r35 = r56.<org.eclipse.jdt.internal.compiler.ast.BinaryExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $z5 = $r35 instanceof org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        if $z5 == 0 goto label04;

        $r49 = r56.<org.eclipse.jdt.internal.compiler.ast.BinaryExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $r50 = (org.eclipse.jdt.internal.compiler.ast.SingleNameReference) $r49;

        $r52 = $r50.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        $r51 = r2.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        if $r52 != $r51 goto label04;

        $r53 = r2.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        if $r53 != null goto label01;

        $r57 = null;

        goto label02;

     label01:
        $r54 = r2.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        $r57 = $r54[1];

     label02:
        $r55 = r56.<org.eclipse.jdt.internal.compiler.ast.BinaryExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $i21 = r56.<org.eclipse.jdt.internal.compiler.ast.BinaryExpression: int implicitConversion>;

        virtualinvoke $r50.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: void generateCompoundAssignment(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.ast.Expression,int,int,boolean)>(r7, r8, $r57, $r55, i23, $i21, z1);

        if z1 == 0 goto label03;

        $i22 = r0.<org.eclipse.jdt.internal.compiler.ast.Assignment: int implicitConversion>;

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i22);

     label03:
        return;

     label04:
        $r36 = r56.<org.eclipse.jdt.internal.compiler.ast.BinaryExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $z6 = $r36 instanceof org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        if $z6 == 0 goto label09;

        if i23 == 14 goto label05;

        if i23 != 15 goto label09;

     label05:
        $r37 = r56.<org.eclipse.jdt.internal.compiler.ast.BinaryExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $r38 = (org.eclipse.jdt.internal.compiler.ast.SingleNameReference) $r37;

        $r40 = $r38.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        $r39 = r2.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        if $r40 != $r39 goto label09;

        $r41 = r56.<org.eclipse.jdt.internal.compiler.ast.BinaryExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $r43 = $r41.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r42 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r43 == $r42 goto label09;

        $r44 = r56.<org.eclipse.jdt.internal.compiler.ast.BinaryExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $i13 = $r44.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion>;

        $i14 = $i13 & 255;

        $i15 = $i14 >> 4;

        if $i15 == 11 goto label09;

        $r45 = r56.<org.eclipse.jdt.internal.compiler.ast.BinaryExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $i16 = $r45.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion>;

        $i17 = $i16 & 255;

        $i18 = $i17 >> 4;

        if $i18 == 11 goto label09;

        $r46 = r2.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        if $r46 != null goto label06;

        $r58 = null;

        goto label07;

     label06:
        $r47 = r2.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        $r58 = $r47[1];

     label07:
        $r48 = r56.<org.eclipse.jdt.internal.compiler.ast.BinaryExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $i19 = r56.<org.eclipse.jdt.internal.compiler.ast.BinaryExpression: int implicitConversion>;

        virtualinvoke $r38.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: void generateCompoundAssignment(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.ast.Expression,int,int,boolean)>(r7, r8, $r58, $r48, i23, $i19, z1);

        if z1 == 0 goto label08;

        $i20 = r0.<org.eclipse.jdt.internal.compiler.ast.Assignment: int implicitConversion>;

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i20);

     label08:
        return;

     label09:
        $i24 = r2.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i25 = $i24 & 7;

        tableswitch($i25)
        {
            case 1: goto label10;
            case 2: goto label16;
            default: goto label27;
        };

     label10:
        i26 = r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $r28 = r2.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding codegenBinding>;

        $r29 = (org.eclipse.jdt.internal.compiler.lookup.FieldBinding) $r28;

        $z4 = virtualinvoke $r29.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isStatic()>();

        if $z4 != 0 goto label12;

        $i6 = r2.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i7 = $i6 & 8160;

        if $i7 == 0 goto label11;

        $r31 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding enclosingSourceType()>();

        $i8 = r2.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i9 = $i8 & 8160;

        $i10 = $i9 >> 5;

        $r32 = virtualinvoke $r31.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingTypeAt(int)>($i10);

        $r33 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: java.lang.Object[] getEmulationPath(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,boolean,boolean)>($r32, 1, 0);

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateOuterAccess(java.lang.Object[],org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.lookup.Scope)>($r33, r2, $r32, r7);

        goto label12;

     label11:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: void generateReceiver(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r8);

     label12:
        $i27 = r2.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int sourceStart>;

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i26, $i27);

        $r59 = r0.<org.eclipse.jdt.internal.compiler.ast.Assignment: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        virtualinvoke $r59.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r7, r8, 1);

        $r60 = r2.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        if $r60 != null goto label13;

        $r61 = null;

        goto label14;

     label13:
        $r30 = r2.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        $r61 = $r30[1];

     label14:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: void fieldStore(org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.lookup.FieldBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding,boolean)>(r8, $r29, $r61, z1);

        if z1 == 0 goto label15;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.ast.Assignment: int implicitConversion>;

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i5);

     label15:
        return;

     label16:
        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding codegenBinding>;

        r62 = (org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding) $r3;

        $i0 = r62.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int resolvedPosition>;

        $i31 = (int) -1;

        if $i0 == $i31 goto label17;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.Assignment: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r7, r8, 1);

        goto label23;

     label17:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.Assignment: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r6 = $r4.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r5 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r6 == $r5 goto label18;

        if z1 == 0 goto label22;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.Assignment: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r15 = $r14.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.Assignment: int implicitConversion>;

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateConstant(org.eclipse.jdt.internal.compiler.impl.Constant,int)>($r15, $i2);

        goto label22;

     label18:
        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.Assignment: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r7, r8, 1);

        if z1 == 0 goto label19;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.ast.Assignment: int implicitConversion>;

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i1);

        goto label22;

     label19:
        $r11 = r62.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $r10 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding LONG>;

        if $r11 == $r10 goto label20;

        $r13 = r62.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $r12 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding DOUBLE>;

        if $r13 != $r12 goto label21;

     label20:
        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void pop2()>();

        goto label22;

     label21:
        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void pop()>();

     label22:
        return;

     label23:
        $r17 = r62.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $z2 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isArrayType()>();

        if $z2 == 0 goto label25;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.Assignment: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r20 = $r18.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r19 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding NULL>;

        if $r20 == $r19 goto label24;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.ast.Assignment: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $z3 = $r22 instanceof org.eclipse.jdt.internal.compiler.ast.CastExpression;

        if $z3 == 0 goto label25;

        $r23 = r0.<org.eclipse.jdt.internal.compiler.ast.Assignment: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r24 = (org.eclipse.jdt.internal.compiler.ast.CastExpression) $r23;

        $r25 = virtualinvoke $r24.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression innermostCastedExpression()>();

        $r27 = $r25.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r26 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding NULL>;

        if $r27 != $r26 goto label25;

     label24:
        $r21 = r62.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void checkcast(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r21);

     label25:
        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void store(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding,boolean)>(r62, z1);

        $i28 = r2.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i29 = $i28 & 8;

        if $i29 == 0 goto label26;

        $i4 = r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        virtualinvoke r62.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: void recordInitializationStartPC(int)>($i4);

     label26:
        if z1 == 0 goto label27;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.ast.Assignment: int implicitConversion>;

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i3);

     label27:
        return;
    }

    public void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream, boolean)
    {
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r36;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] $r13, $r14, $r16, $r22, $r24, $r35;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding $r27, $r28, r34;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r5, $r7, $r8, $r21, $r29, $r31, $r32, $r37;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r15, $r17, $r23, $r25;
        org.eclipse.jdt.internal.compiler.impl.Constant $r2, $r3, $r11, $r12, $r33;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r6;
        java.lang.Object[] $r20;
        org.eclipse.jdt.internal.compiler.lookup.Binding $r4, $r10, $r26;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        boolean z0, $z1, z3, $z4, $z5;
        org.eclipse.jdt.internal.compiler.lookup.VariableBinding[] $r9;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r18;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r19, $r30;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        r6 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        z0 := @parameter2: boolean;

        i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r2 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r3 == $r2 goto label02;

        if z0 == 0 goto label01;

        $r33 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $i25 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int implicitConversion>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateConstant(org.eclipse.jdt.internal.compiler.impl.Constant,int)>($r33, $i25);

     label01:
        $i24 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int sourceStart>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i0, $i24);

        return;

     label02:
        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i2 = $i1 & 7;

        tableswitch($i2)
        {
            case 1: goto label03;
            case 2: goto label15;
            default: goto label18;
        };

     label03:
        $r10 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding codegenBinding>;

        r34 = (org.eclipse.jdt.internal.compiler.lookup.FieldBinding) $r10;

        $r11 = virtualinvoke r34.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.impl.Constant constant()>();

        $r12 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r11 == $r12 goto label05;

        if z0 == 0 goto label04;

        $i22 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int implicitConversion>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateConstant(org.eclipse.jdt.internal.compiler.impl.Constant,int)>($r11, $i22);

     label04:
        $i21 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int sourceStart>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i0, $i21);

        return;

     label05:
        $z1 = virtualinvoke r34.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isStatic()>();

        if $z1 == 0 goto label09;

        if z0 != 0 goto label06;

        $r26 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        $r27 = (org.eclipse.jdt.internal.compiler.lookup.FieldBinding) $r26;

        $r28 = virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.FieldBinding original()>();

        $r30 = $r28.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r29 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding actualReceiverType>;

        $r31 = virtualinvoke $r29.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        if $r30 != $r31 goto label06;

        $i18 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int implicitConversion>;

        $i19 = $i18 & 1024;

        if $i19 != 0 goto label06;

        $r32 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding genericCast>;

        if $r32 != null goto label06;

        $i20 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int sourceStart>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i0, $i20);

        return;

     label06:
        $r35 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        if $r35 == null goto label07;

        $r22 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        $r23 = $r22[0];

        if $r23 != null goto label08;

     label07:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void getstatic(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r34);

        goto label19;

     label08:
        $r24 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        $r25 = $r24[0];

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokestatic(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r25);

        goto label19;

     label09:
        if z0 != 0 goto label10;

        $i15 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int implicitConversion>;

        $i16 = $i15 & 1024;

        if $i16 != 0 goto label10;

        $r21 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding genericCast>;

        if $r21 != null goto label10;

        $i17 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int sourceStart>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i0, $i17);

        return;

     label10:
        $i26 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i27 = $i26 & 8160;

        if $i27 == 0 goto label11;

        $r18 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding enclosingSourceType()>();

        $i12 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i13 = $i12 & 8160;

        $i14 = $i13 >> 5;

        $r19 = virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingTypeAt(int)>($i14);

        $r20 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: java.lang.Object[] getEmulationPath(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,boolean,boolean)>($r19, 1, 0);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateOuterAccess(java.lang.Object[],org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.lookup.Scope)>($r20, r1, $r19, r6);

        goto label12;

     label11:
        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: void generateReceiver(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r0);

     label12:
        $r13 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        if $r13 == null goto label13;

        $r14 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        $r15 = $r14[0];

        if $r15 != null goto label14;

     label13:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void getfield(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r34);

        goto label19;

     label14:
        $r16 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        $r17 = $r16[0];

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokestatic(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r17);

        goto label19;

     label15:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding codegenBinding>;

        r36 = (org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding) $r4;

        if z0 != 0 goto label16;

        $i9 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int implicitConversion>;

        $i10 = $i9 & 1024;

        if $i10 != 0 goto label16;

        $i11 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int sourceStart>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i0, $i11);

        return;

     label16:
        $i3 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i4 = $i3 & 8160;

        if $i4 == 0 goto label17;

        $r9 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.VariableBinding[] getEmulationPath(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r36);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateOuterAccess(java.lang.Object[],org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.lookup.Scope)>($r9, r1, r36, r6);

        goto label19;

     label17:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void load(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r36);

        goto label19;

     label18:
        $i23 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int sourceStart>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i0, $i23);

        return;

     label19:
        $r37 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding genericCast>;

        if $r37 == null goto label20;

        $r8 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding genericCast>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void checkcast(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r8);

     label20:
        if z0 == 0 goto label21;

        $i8 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int implicitConversion>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i8);

        goto label29;

     label21:
        $i5 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int implicitConversion>;

        $i6 = $i5 & 1024;

        if $i6 == 0 goto label22;

        $z5 = 1;

        $z4 = 1;

        goto label23;

     label22:
        $z5 = 0;

        $z4 = 0;

     label23:
        z3 = $z4;

        if $z5 == 0 goto label24;

        $i7 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int implicitConversion>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i7);

     label24:
        if z3 == 0 goto label25;

        $r7 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding postConversionType(org.eclipse.jdt.internal.compiler.lookup.Scope)>(r6);

        $i28 = $r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        goto label26;

     label25:
        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $i28 = $r5.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

     label26:
        tableswitch($i28)
        {
            case 7: goto label27;
            case 8: goto label27;
            default: goto label28;
        };

     label27:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void pop2()>();

        goto label29;

     label28:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void pop()>();

     label29:
        $i29 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int sourceStart>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i0, $i29);

        return;
    }

    public void generateCompoundAssignment(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream, org.eclipse.jdt.internal.compiler.ast.Expression, int, int, boolean)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r6;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r1;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r2;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] $r3, $r4;
        org.eclipse.jdt.internal.compiler.ast.Expression r5;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r0;
        int i0, i1;
        boolean z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r5 := @parameter2: org.eclipse.jdt.internal.compiler.ast.Expression;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        z0 := @parameter5: boolean;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        if $r3 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        $r6 = $r4[1];

     label2:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: void generateCompoundAssignment(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.ast.Expression,int,int,boolean)>(r1, r2, $r6, r5, i0, i1, z0);

        return;
    }

    public void generateCompoundAssignment(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream, org.eclipse.jdt.internal.compiler.lookup.MethodBinding, org.eclipse.jdt.internal.compiler.ast.Expression, int, int, boolean)
    {
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r35, r36;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding $r15, $r21;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] $r22, $r23, $r25, $r30, $r31, $r33;
        org.eclipse.jdt.internal.compiler.ast.IntLiteral $r17;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r2, $r10, $r12, $r16, $r19;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r14, $r24, $r26, $r32, $r34;
        org.eclipse.jdt.internal.compiler.impl.Constant $r6, $r7, $r18;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r4;
        java.lang.Object[] $r29;
        org.eclipse.jdt.internal.compiler.lookup.Binding $r1, $r8, $r13, $r20;
        short $s10, $s13;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r3;
        org.eclipse.jdt.internal.compiler.ast.Expression r5;
        boolean z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r27;
        int $i0, $i1, $i2, $i3, i4, i5, $i6, $i7, $i8, $i9, $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i19, i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r28;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r9, $r11;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r14 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r5 := @parameter3: org.eclipse.jdt.internal.compiler.ast.Expression;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        z0 := @parameter6: boolean;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i1 = $i0 & 7;

        tableswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label09;
            default: goto label20;
        };

     label01:
        $r20 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding codegenBinding>;

        $r21 = (org.eclipse.jdt.internal.compiler.lookup.FieldBinding) $r20;

        $z1 = virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isStatic()>();

        if $z1 == 0 goto label04;

        $r30 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        if $r30 == null goto label02;

        $r31 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        $r32 = $r31[0];

        if $r32 != null goto label03;

     label02:
        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void getstatic(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>($r21);

        goto label20;

     label03:
        $r33 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        $r34 = $r33[0];

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokestatic(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r34);

        goto label20;

     label04:
        $i15 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i16 = $i15 & 8160;

        if $i16 == 0 goto label05;

        $r27 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding enclosingSourceType()>();

        $i17 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i18 = $i17 & 8160;

        $i19 = $i18 >> 5;

        $r28 = virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingTypeAt(int)>($i19);

        $r29 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: java.lang.Object[] getEmulationPath(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,boolean,boolean)>($r28, 1, 0);

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateOuterAccess(java.lang.Object[],org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.lookup.Scope)>($r29, r0, $r28, r4);

        goto label06;

     label05:
        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aload_0()>();

     label06:
        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

        $r22 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        if $r22 == null goto label07;

        $r23 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        $r24 = $r23[0];

        if $r24 != null goto label08;

     label07:
        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void getfield(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>($r21);

        goto label20;

     label08:
        $r25 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        $r26 = $r25[0];

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokestatic(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r26);

        goto label20;

     label09:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding codegenBinding>;

        r35 = (org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding) $r1;

        $r2 = r35.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $i2 = $r2.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        tableswitch($i2)
        {
            case 10: goto label12;
            case 11: goto label10;
            default: goto label19;
        };

     label10:
        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateStringConcatenationAppend(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.ast.Expression)>(r4, r0, r5);

        if z0 == 0 goto label11;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

     label11:
        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void store(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding,boolean)>(r35, 0);

        return;

     label12:
        $r6 = r5.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r7 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r6 == $r7 goto label19;

        $i7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.impl.Constant: int typeID()>();

        if $i7 == 9 goto label19;

        $i8 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.impl.Constant: int typeID()>();

        if $i8 == 8 goto label19;

        tableswitch(i4)
        {
            case 13: goto label16;
            case 14: goto label13;
            default: goto label19;
        };

     label13:
        $i9 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.impl.Constant: int intValue()>();

        $s10 = (short) $i9;

        $i26 = (int) $s10;

        if $i9 == $i26 goto label14;

        goto label19;

     label14:
        $i11 = r35.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int resolvedPosition>;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iinc(int,int)>($i11, $i9);

        if z0 == 0 goto label15;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void load(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r35);

     label15:
        return;

     label16:
        $i12 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.impl.Constant: int intValue()>();

        i20 = neg $i12;

        $s13 = (short) i20;

        $i27 = (int) $s13;

        if i20 == $i27 goto label17;

        goto label19;

     label17:
        $i14 = r35.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int resolvedPosition>;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iinc(int,int)>($i14, i20);

        if z0 == 0 goto label18;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void load(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r35);

     label18:
        return;

     label19:
        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void load(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r35);

     label20:
        $i21 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int implicitConversion>;

        $i22 = $i21 & 255;

        $i23 = $i22 >> 4;

        lookupswitch($i23)
        {
            case 0: goto label21;
            case 1: goto label21;
            case 11: goto label21;
            default: goto label22;
        };

     label21:
        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateStringConcatenationAppend(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.ast.Expression)>(r4, null, r5);

        goto label26;

     label22:
        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding genericCast>;

        if $r16 == null goto label23;

        $r19 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding genericCast>;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void checkcast(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r19);

     label23:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int implicitConversion>;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i3);

        $r17 = <org.eclipse.jdt.internal.compiler.ast.IntLiteral: org.eclipse.jdt.internal.compiler.ast.IntLiteral One>;

        if r5 != $r17 goto label24;

        $r18 = r5.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int implicitConversion>;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateConstant(org.eclipse.jdt.internal.compiler.impl.Constant,int)>($r18, $i6);

        goto label25;

     label24:
        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r4, r3, 1);

     label25:
        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void sendOperator(int,int)>(i4, $i23);

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>(i5);

     label26:
        $i24 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i25 = $i24 & 7;

        tableswitch($i25)
        {
            case 1: goto label27;
            case 2: goto label28;
            default: goto label32;
        };

     label27:
        $r13 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding codegenBinding>;

        $r15 = (org.eclipse.jdt.internal.compiler.lookup.FieldBinding) $r13;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: void fieldStore(org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.lookup.FieldBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding,boolean)>(r3, $r15, r14, z0);

        return;

     label28:
        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding codegenBinding>;

        r36 = (org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding) $r8;

        if z0 == 0 goto label31;

        $r10 = r36.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $r9 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding LONG>;

        if $r10 == $r9 goto label29;

        $r12 = r36.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $r11 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding DOUBLE>;

        if $r12 != $r11 goto label30;

     label29:
        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup2()>();

        goto label31;

     label30:
        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

     label31:
        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void store(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding,boolean)>(r36, 0);

     label32:
        return;
    }

    public void generatePostIncrement(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream, org.eclipse.jdt.internal.compiler.ast.CompoundAssignment, boolean)
    {
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r38;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding $r11;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] $r12, $r13, $r19, $r21, $r27, $r28, $r30, $r36;
        org.eclipse.jdt.internal.compiler.ast.CompoundAssignment r5;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r3, $r7, $r9, $r18, $r32, r33;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r20, $r22, $r29, $r31, $r37;
        org.eclipse.jdt.internal.compiler.impl.Constant $r35, $r40;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r23;
        java.lang.Object[] $r26;
        org.eclipse.jdt.internal.compiler.lookup.Binding $r1, $r10;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r4;
        org.eclipse.jdt.internal.compiler.ast.Expression $r34, $r39;
        boolean z0, $z1, $z2;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r24;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i23;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r25;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r2, $r6, $r8, $r14, $r15, $r16, $r17;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        r23 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r4 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r5 := @parameter2: org.eclipse.jdt.internal.compiler.ast.CompoundAssignment;

        z0 := @parameter3: boolean;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i1 = $i0 & 7;

        tableswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label20;
            default: goto label27;
        };

     label01:
        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding codegenBinding>;

        $r11 = (org.eclipse.jdt.internal.compiler.lookup.FieldBinding) $r10;

        $z1 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isStatic()>();

        if $z1 == 0 goto label04;

        $r27 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        if $r27 == null goto label02;

        $r28 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        $r29 = $r28[0];

        if $r29 != null goto label03;

     label02:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void getstatic(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>($r11);

        goto label09;

     label03:
        $r30 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        $r31 = $r30[0];

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokestatic(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r31);

        goto label09;

     label04:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i6 = $i5 & 8160;

        if $i6 == 0 goto label05;

        $r24 = virtualinvoke r23.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding enclosingSourceType()>();

        $i7 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i8 = $i7 & 8160;

        $i9 = $i8 >> 5;

        $r25 = virtualinvoke $r24.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingTypeAt(int)>($i9);

        $r26 = virtualinvoke r23.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: java.lang.Object[] getEmulationPath(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,boolean,boolean)>($r25, 1, 0);

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateOuterAccess(java.lang.Object[],org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.lookup.Scope)>($r26, r0, $r25, r23);

        goto label06;

     label05:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aload_0()>();

     label06:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        if $r12 == null goto label07;

        $r19 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        $r20 = $r19[0];

        if $r20 != null goto label08;

     label07:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void getfield(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>($r11);

        goto label09;

     label08:
        $r21 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        $r22 = $r21[0];

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokestatic(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r22);

     label09:
        $r32 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding genericCast>;

        if $r32 == null goto label10;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding genericCast>;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void checkcast(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r18);

        r33 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding genericCast>;

        goto label11;

     label10:
        r33 = $r11.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

     label11:
        if z0 == 0 goto label17;

        $z2 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isStatic()>();

        if $z2 == 0 goto label14;

        $r16 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding LONG>;

        if r33 == $r16 goto label12;

        $r17 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding DOUBLE>;

        if r33 != $r17 goto label13;

     label12:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup2()>();

        goto label17;

     label13:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

        goto label17;

     label14:
        $r14 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding LONG>;

        if r33 == $r14 goto label15;

        $r15 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding DOUBLE>;

        if r33 != $r15 goto label16;

     label15:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup2_x1()>();

        goto label17;

     label16:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup_x1()>();

     label17:
        $i10 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int implicitConversion>;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i10);

        $r34 = r5.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r35 = $r34.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int implicitConversion>;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateConstant(org.eclipse.jdt.internal.compiler.impl.Constant,int)>($r35, $i11);

        $i12 = r5.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: int operator>;

        $i13 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int implicitConversion>;

        $i14 = $i13 & 15;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void sendOperator(int,int)>($i12, $i14);

        $i15 = r5.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: int preAssignImplicitConversion>;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i15);

        $r36 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        if $r36 != null goto label18;

        $r37 = null;

        goto label19;

     label18:
        $r13 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        $r37 = $r13[1];

     label19:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: void fieldStore(org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.lookup.FieldBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding,boolean)>(r4, $r11, $r37, 0);

        return;

     label20:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding codegenBinding>;

        r38 = (org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding) $r1;

        $r3 = r38.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $r2 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding INT>;

        if $r3 != $r2 goto label23;

        if z0 == 0 goto label21;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void load(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r38);

     label21:
        $i2 = r5.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: int operator>;

        if $i2 != 14 goto label22;

        $i4 = r38.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int resolvedPosition>;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iinc(int,int)>($i4, 1);

        goto label27;

     label22:
        $i3 = r38.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int resolvedPosition>;

        $i23 = (int) -1;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iinc(int,int)>($i3, $i23);

        goto label27;

     label23:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void load(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r38);

        if z0 == 0 goto label26;

        $r7 = r38.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $r6 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding LONG>;

        if $r7 == $r6 goto label24;

        $r9 = r38.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $r8 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding DOUBLE>;

        if $r9 != $r8 goto label25;

     label24:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup2()>();

        goto label26;

     label25:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

     label26:
        $i16 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int implicitConversion>;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i16);

        $r39 = r5.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r40 = $r39.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $i17 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int implicitConversion>;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateConstant(org.eclipse.jdt.internal.compiler.impl.Constant,int)>($r40, $i17);

        $i18 = r5.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: int operator>;

        $i19 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int implicitConversion>;

        $i20 = $i19 & 15;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void sendOperator(int,int)>($i18, $i20);

        $i21 = r5.<org.eclipse.jdt.internal.compiler.ast.CompoundAssignment: int preAssignImplicitConversion>;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i21);

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void store(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding,boolean)>(r38, 0);

     label27:
        return;
    }

    public void generateReceiver(org.eclipse.jdt.internal.compiler.codegen.CodeStream)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aload_0()>();

        return;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] genericTypeArguments()
    {
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        return null;
    }

    public org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding localVariableBinding()
    {
        org.eclipse.jdt.internal.compiler.lookup.Binding $r1;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i1 = $i0 & 7;

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        goto label3;

     label2:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        $r2 = (org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding) $r1;

        return $r2;

     label3:
        return null;
    }

    public void manageEnclosingInstanceAccessIfNecessary(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r4;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r6;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r0;
        org.eclipse.jdt.internal.compiler.lookup.Binding $r5;
        org.eclipse.jdt.internal.compiler.impl.Constant $r2, $r3;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: int tagBits>;

        $i1 = $i0 & 1;

        if $i1 != 0 goto label3;

        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i3 = $i2 & 8160;

        if $i3 == 0 goto label1;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r2 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r3 == $r2 goto label2;

     label1:
        return;

     label2:
        $i4 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i5 = $i4 & 7;

        if $i5 != 2 goto label3;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        $r6 = (org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding) $r5;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: void emulateOuterAccess(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r6);

     label3:
        return;
    }

    public void manageSyntheticAccessIfNecessary(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowInfo, boolean)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r25;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r5, $r6, $r17;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] $r19, $r20, $r26;
        byte $b7, $b9, $b14;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r7, $r14, $r15, $r32;
        boolean $z0, $z1, $z2, z3, $z4, $z5;
        org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding $r24;
        org.eclipse.jdt.internal.compiler.impl.Constant $r2, $r3, $r9, $r10;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r1;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r12;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r11;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r13, $r21, $r23, $r29;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r0;
        long $l6, $l8;
        org.eclipse.jdt.internal.compiler.lookup.Binding $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i10, $i11, $i12, $i13, $i15, $i16;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r8, $r16, $r18, $r22, $r27, $r31, $r33;
        org.eclipse.jdt.internal.compiler.lookup.PackageBinding $r28, $r30;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        r11 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        z3 := @parameter2: boolean;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: int tagBits>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label01;

        return;

     label01:
        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r2 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r3 == $r2 goto label02;

        return;

     label02:
        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i3 = $i2 & 1;

        if $i3 == 0 goto label11;

        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        r5 = (org.eclipse.jdt.internal.compiler.lookup.FieldBinding) $r4;

        $r6 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.FieldBinding original()>();

        r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding codegenBinding> = $r6;

        $i4 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i5 = $i4 & 8160;

        if $i5 == 0 goto label07;

        $z2 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isPrivate()>();

        if $z2 != 0 goto label03;

        $z4 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isProtected()>();

        if $z4 == 0 goto label07;

        $r27 = $r6.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r28 = virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.PackageBinding getPackage()>();

        $r29 = virtualinvoke r11.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding enclosingSourceType()>();

        $r30 = virtualinvoke $r29.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.PackageBinding getPackage()>();

        if $r28 == $r30 goto label07;

     label03:
        $r19 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        if $r19 != null goto label04;

        $r26 = newarray (org.eclipse.jdt.internal.compiler.lookup.MethodBinding)[2];

        r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors> = $r26;

     label04:
        $r20 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] syntheticAccessors>;

        if z3 == 0 goto label05;

        $b14 = 0;

        goto label06;

     label05:
        $b14 = 1;

     label06:
        $r21 = virtualinvoke r11.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding enclosingSourceType()>();

        $i11 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i12 = $i11 & 8160;

        $i13 = $i12 >> 5;

        $r22 = virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingTypeAt(int)>($i13);

        $r23 = (org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding) $r22;

        $r24 = virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding addSyntheticMethod(org.eclipse.jdt.internal.compiler.lookup.FieldBinding,boolean)>($r6, z3);

        $r20[$b14] = $r24;

        $r25 = virtualinvoke r11.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r25.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void needToEmulateFieldAccess(org.eclipse.jdt.internal.compiler.lookup.FieldBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode,boolean)>($r6, r1, z3);

        return;

     label07:
        $r31 = r5.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r32 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding actualReceiverType>;

        if $r31 == $r32 goto label11;

        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding actualReceiverType>;

        $z0 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isArrayType()>();

        if $z0 != 0 goto label11;

        $r8 = r5.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        if $r8 == null goto label11;

        $r9 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.impl.Constant constant()>();

        $r10 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r9 != $r10 goto label11;

        $r12 = virtualinvoke r11.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $l6 = $r12.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long targetJDK>;

        $b7 = $l6 cmp 3014656L;

        $i15 = (int) $b7;

        if $i15 < 0 goto label09;

        $l8 = $r12.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long complianceLevel>;

        $b9 = $l8 cmp 3145728L;

        $i16 = (int) $b9;

        if $i16 >= 0 goto label08;

        $z1 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isStatic()>();

        if $z1 != 0 goto label09;

     label08:
        $r18 = r5.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $i10 = $r18.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: int id>;

        if $i10 != 1 goto label10;

     label09:
        $r33 = r5.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z5 = virtualinvoke $r33.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean canBeSeenBy(org.eclipse.jdt.internal.compiler.lookup.Scope)>(r11);

        if $z5 != 0 goto label11;

     label10:
        $r13 = virtualinvoke r11.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding enclosingSourceType()>();

        $r14 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding actualReceiverType>;

        $r15 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        $r16 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r15;

        $r17 = virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.FieldBinding getUpdatedFieldBinding(org.eclipse.jdt.internal.compiler.lookup.FieldBinding,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r6, $r16);

        r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding codegenBinding> = $r17;

     label11:
        return;
    }

    public int nullStatus(org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r3;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r4;
        org.eclipse.jdt.internal.compiler.lookup.Binding $r2;
        org.eclipse.jdt.internal.compiler.impl.Constant $r1, $r5, $r6;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r0;
        int $i0, $i1, $i3, $i5, $i7;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        if $r1 == null goto label1;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r5 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r6 == $r5 goto label1;

        $i3 = (int) -1;

        return $i3;

     label1:
        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i1 = $i0 & 7;

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label6;
        };

     label2:
        return 0;

     label3:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        r3 = (org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding) $r2;

        if r3 == null goto label6;

        $z0 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isDefinitelyNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r3);

        if $z0 == 0 goto label4;

        return 1;

     label4:
        $z1 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: boolean isDefinitelyNonNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r3);

        if $z1 == 0 goto label5;

        $i5 = (int) -1;

        return $i5;

     label5:
        return 0;

     label6:
        $i7 = (int) -1;

        return $i7;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding postConversionType(org.eclipse.jdt.internal.compiler.lookup.Scope)
    {
        org.eclipse.jdt.internal.compiler.lookup.Scope r2;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r0;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r1, r4;
        int $i0, $i1, $i2, $i3, $i4;
        org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Scope;

        r4 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding genericCast>;

        if $r1 == null goto label01;

        r4 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding genericCast>;

     label01:
        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int implicitConversion>;

        $i1 = $i0 & 255;

        $i2 = $i1 >> 4;

        tableswitch($i2)
        {
            case 2: goto label05;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label02;
            case 6: goto label10;
            case 7: goto label08;
            case 8: goto label09;
            case 9: goto label07;
            case 10: goto label06;
            default: goto label10;
        };

     label02:
        r4 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding BOOLEAN>;

        goto label10;

     label03:
        r4 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding BYTE>;

        goto label10;

     label04:
        r4 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding SHORT>;

        goto label10;

     label05:
        r4 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding CHAR>;

        goto label10;

     label06:
        r4 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding INT>;

        goto label10;

     label07:
        r4 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding FLOAT>;

        goto label10;

     label08:
        r4 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding LONG>;

        goto label10;

     label09:
        r4 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding DOUBLE>;

     label10:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int implicitConversion>;

        $i4 = $i3 & 512;

        if $i4 == 0 goto label11;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment()>();

        r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.TypeBinding computeBoxingType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r4);

     label11:
        return r4;
    }

    public java.lang.StringBuffer printExpression(int, java.lang.StringBuffer)
    {
        java.lang.StringBuffer r0, $r3;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r1;
        int i0;
        char[] $r2;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.StringBuffer;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: char[] token>;

        $r3 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r2);

        return $r3;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding reportError(org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r4;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r5, $r9, $r11;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding $r13;
        org.eclipse.jdt.internal.compiler.lookup.Binding $r2, $r3, $r6, $r8, $r10, $r12;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r7;
        boolean $z0, $z1, $z2;
        org.eclipse.jdt.internal.compiler.impl.Constant $r1;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $r1 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r1;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        $z0 = $r2 instanceof org.eclipse.jdt.internal.compiler.lookup.ProblemFieldBinding;

        if $z0 == 0 goto label1;

        $r11 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        $r13 = (org.eclipse.jdt.internal.compiler.lookup.FieldBinding) $r12;

        virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void invalidField(org.eclipse.jdt.internal.compiler.ast.NameReference,org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r0, $r13);

        goto label4;

     label1:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        $z1 = $r3 instanceof org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding;

        if $z1 != 0 goto label2;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        $z2 = $r8 instanceof org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding;

        if $z2 == 0 goto label3;

     label2:
        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        $r7 = (org.eclipse.jdt.internal.compiler.lookup.TypeBinding) $r6;

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void invalidType(org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0, $r7);

        goto label4;

     label3:
        $r9 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unresolvableReference(org.eclipse.jdt.internal.compiler.ast.NameReference,org.eclipse.jdt.internal.compiler.lookup.Binding)>(r0, $r10);

     label4:
        return null;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r13, $r18, $r19;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r20;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding $r23;
        byte $b12;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r1, $r8, $r12, $r15, $r22, r25, $r27;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.eclipse.jdt.internal.compiler.lookup.VariableBinding r24;
        org.eclipse.jdt.internal.compiler.impl.Constant $r9, $r26;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r3;
        long $l10, $l11;
        org.eclipse.jdt.internal.compiler.lookup.Binding $r5, $r6, $r7, $r10, $r14, $r16, $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i25, $i27;
        org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment $r11;
        char[] $r4, $r21;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding actualReceiverType>;

        if $r1 == null goto label01;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding actualReceiverType>;

        $r21 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: char[] token>;

        $r23 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.FieldBinding getField(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,char[],org.eclipse.jdt.internal.compiler.lookup.InvocationSite)>($r22, $r21, r0);

        r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding> = $r23;

        goto label02;

     label01:
        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding enclosingSourceType()>();

        r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding actualReceiverType> = $r3;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: char[] token>;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i1 = $i0 & 7;

        $r5 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.Binding getBinding(char[],int,org.eclipse.jdt.internal.compiler.lookup.InvocationSite,boolean)>($r4, $i1, r0, 1);

        r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding> = $r5;

     label02:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding codegenBinding> = $r6;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        $z0 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.Binding: boolean isValidBinding()>();

        if $z0 == 0 goto label16;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i3 = $i2 & 7;

        tableswitch($i3)
        {
            case 3: goto label03;
            case 4: goto label14;
            case 5: goto label16;
            case 6: goto label16;
            case 7: goto label03;
            default: goto label16;
        };

     label03:
        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        $z2 = $r14 instanceof org.eclipse.jdt.internal.compiler.lookup.VariableBinding;

        if $z2 == 0 goto label13;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        r24 = (org.eclipse.jdt.internal.compiler.lookup.VariableBinding) $r16;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        $z3 = $r17 instanceof org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        if $z3 == 0 goto label07;

        $i16 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i25 = (int) -8;

        $i17 = $i16 & $i25;

        r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits> = $i17;

        $i18 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i19 = $i18 | 2;

        r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits> = $i19;

        $z4 = virtualinvoke r24.<org.eclipse.jdt.internal.compiler.lookup.VariableBinding: boolean isFinal()>();

        if $z4 != 0 goto label04;

        $i20 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i21 = $i20 & 8160;

        if $i21 == 0 goto label04;

        $r19 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r20 = (org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding) r24;

        virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void cannotReferToNonFinalOuterLocal(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r20, r0);

     label04:
        r25 = r24.<org.eclipse.jdt.internal.compiler.lookup.VariableBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $i22 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i23 = $i22 & 8192;

        if $i23 != 0 goto label05;

        $r26 = virtualinvoke r24.<org.eclipse.jdt.internal.compiler.lookup.VariableBinding: org.eclipse.jdt.internal.compiler.impl.Constant constant()>();

        goto label06;

     label05:
        $r26 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

     label06:
        r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r26;

        goto label08;

     label07:
        r25 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding checkFieldAccess(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r2);

     label08:
        if r25 == null goto label12;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i9 = $i8 & 8192;

        if $i9 != 0 goto label09;

        $i15 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int sourceEnd>;

        $r27 = virtualinvoke r25.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding capture(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r2, $i15);

        goto label10;

     label09:
        $r27 = r25;

     label10:
        r25 = $r27;

        r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = $r27;

        $l10 = $r27.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: long tagBits>;

        $l11 = $l10 & 128L;

        $b12 = $l11 cmp 0L;

        if $b12 == 0 goto label12;

        $i13 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i14 = $i13 & 2;

        if $i14 != 0 goto label11;

        $r18 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void invalidType(org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0, $r27);

     label11:
        return null;

     label12:
        return r25;

     label13:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i27 = (int) -8;

        $i5 = $i4 & $i27;

        r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits> = $i5;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits>;

        $i7 = $i6 | 4;

        r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int bits> = $i7;

     label14:
        $r9 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r9;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.Binding binding>;

        $r15 = (org.eclipse.jdt.internal.compiler.lookup.TypeBinding) $r10;

        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: boolean isTypeUseDeprecated(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.Scope)>($r15, r2);

        if $z1 == 0 goto label15;

        $r13 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void deprecatedType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r15, r0);

     label15:
        $r11 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment()>();

        $r12 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.TypeBinding convertToRawType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,boolean)>($r15, 0);

        r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = $r12;

        return $r12;

     label16:
        $r8 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding reportError(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r2);

        r0.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = $r8;

        return $r8;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.SingleNameReference,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.SingleNameReference,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        return;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.SingleNameReference,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r1, r2);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.SingleNameReference,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r1, r2);

        return;
    }

    public java.lang.String unboundReferenceErrorName()
    {
        char[] $r2;
        java.lang.String $r0;
        org.eclipse.jdt.internal.compiler.ast.SingleNameReference r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.SingleNameReference;

        $r0 = new java.lang.String;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.SingleNameReference: char[] token>;

        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r2);

        return $r0;
    }

    public static void <clinit>()
    {
        <org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int WRITE> = 1;

        <org.eclipse.jdt.internal.compiler.ast.SingleNameReference: int READ> = 0;

        return;
    }
}
