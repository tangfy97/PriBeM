public class org.hamcrest.core.StringContains extends org.hamcrest.core.SubstringMatcher
{

    public void <init>(java.lang.String)
    {
        org.hamcrest.core.StringContains r0;
        java.lang.String r1;

        r0 := @this: org.hamcrest.core.StringContains;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.hamcrest.core.SubstringMatcher: void <init>(java.lang.String)>(r1);

        return;
    }

    protected boolean evalSubstringOf(java.lang.String)
    {
        org.hamcrest.core.StringContains r1;
        int $i0;
        java.lang.String r0, $r2;
        boolean $z0;

        r1 := @this: org.hamcrest.core.StringContains;

        r0 := @parameter0: java.lang.String;

        $r2 = r1.<org.hamcrest.core.StringContains: java.lang.String substring>;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>($r2);

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected java.lang.String relationship()
    {
        org.hamcrest.core.StringContains r0;

        r0 := @this: org.hamcrest.core.StringContains;

        return "containing";
    }

    public static org.hamcrest.Matcher containsString(java.lang.String)
    {
        org.hamcrest.core.StringContains $r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.hamcrest.core.StringContains;

        specialinvoke $r0.<org.hamcrest.core.StringContains: void <init>(java.lang.String)>(r1);

        return $r0;
    }
}
