public class ucar.nc2.ft.fmrc.FmrcInv$RunSeq extends java.lang.Object
{
    private final java.util.HashMap coordMap;
    private final java.util.List vars;
    private int id;
    private java.util.List timeList;
    private ucar.nc2.ft.fmrc.TimeCoord timeCoordUnion;
    private boolean isInterval;
    final ucar.nc2.ft.fmrc.FmrcInv this$0;

    void <init>(ucar.nc2.ft.fmrc.FmrcInv, java.util.List)
    {
        java.util.Date $r11, r30;
        ucar.nc2.ft.fmrc.FmrcInv r1;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        java.util.List r4, $r5;
        java.lang.StringBuilder $r15, $r16, $r18, $r21, $r22, $r24;
        ucar.nc2.ft.fmrc.TimeCoord $r12, $r13, $r26, $r28;
        ucar.nc2.ft.fmrc.FmrcInv$RunSeq r0;
        java.util.HashMap $r3, $r10, $r29;
        java.util.ArrayList $r2;
        int $i0, $i1;
        java.lang.String $r17, $r19, $r23, $r25;
        org.slf4j.Logger $r14;
        java.util.Iterator $r6, $r7;
        java.lang.IllegalArgumentException $r20;
        ucar.nc2.ft.fmrc.FmrInv$GridVariable r9;
        java.lang.Object $r8, $r27;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv$RunSeq;

        r1 := @parameter0: ucar.nc2.ft.fmrc.FmrcInv;

        r4 := @parameter1: java.util.List;

        r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: ucar.nc2.ft.fmrc.FmrcInv this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: java.util.List vars> = $r2;

        r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: java.util.List timeList> = null;

        r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: ucar.nc2.ft.fmrc.TimeCoord timeCoordUnion> = null;

        $r3 = new java.util.HashMap;

        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        $i1 = 2 * $i0;

        specialinvoke $r3.<java.util.HashMap: void <init>(int)>($i1);

        r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: java.util.HashMap coordMap> = $r3;

        $r5 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv: java.util.List access$600(ucar.nc2.ft.fmrc.FmrcInv)>(r1);

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r27 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r30 = (java.util.Date) $r27;

        $r29 = r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: java.util.HashMap coordMap>;

        $r28 = <ucar.nc2.ft.fmrc.TimeCoord: ucar.nc2.ft.fmrc.TimeCoord EMPTY>;

        virtualinvoke $r29.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r30, $r28);

        goto label1;

     label2:
        z5 = 1;

        $r7 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (ucar.nc2.ft.fmrc.FmrInv$GridVariable) $r8;

        $r10 = r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: java.util.HashMap coordMap>;

        $r11 = virtualinvoke r9.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: java.util.Date getRunDate()>();

        $r12 = virtualinvoke r9.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: ucar.nc2.ft.fmrc.TimeCoord getTimeExpected()>();

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12);

        if z5 == 0 goto label4;

        $r26 = virtualinvoke r9.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: ucar.nc2.ft.fmrc.TimeCoord getTimeCoord()>();

        $z4 = virtualinvoke $r26.<ucar.nc2.ft.fmrc.TimeCoord: boolean isInterval()>();

        r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: boolean isInterval> = $z4;

        goto label5;

     label4:
        $z2 = r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: boolean isInterval>;

        $r13 = virtualinvoke r9.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: ucar.nc2.ft.fmrc.TimeCoord getTimeCoord()>();

        $z3 = virtualinvoke $r13.<ucar.nc2.ft.fmrc.TimeCoord: boolean isInterval()>();

        if $z2 == $z3 goto label5;

        $r14 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv: org.slf4j.Logger access$700()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mixed intervals for grid ");

        $r17 = virtualinvoke r9.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: java.lang.String getName()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<org.slf4j.Logger: void error(java.lang.String)>($r19);

        $r20 = new java.lang.IllegalArgumentException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mixed intervals for grid ");

        $r23 = virtualinvoke r9.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: java.lang.String getName()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        throw $r20;

     label5:
        z5 = 0;

        goto label3;

     label6:
        return;
    }

    public boolean isInterval()
    {
        ucar.nc2.ft.fmrc.FmrcInv$RunSeq r0;
        boolean $z0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv$RunSeq;

        $z0 = r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: boolean isInterval>;

        return $z0;
    }

    public java.util.List getTimes()
    {
        ucar.nc2.ft.fmrc.FmrcInv$RunSeq r0;
        java.util.List $r1, $r2;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv$RunSeq;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: java.util.List timeList>;

        if $r1 != null goto label1;

        virtualinvoke r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: ucar.nc2.ft.fmrc.TimeCoord getUnionTimeCoord()>();

     label1:
        $r2 = r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: java.util.List timeList>;

        return $r2;
    }

    public java.lang.String getName()
    {
        ucar.nc2.ft.fmrc.FmrcInv$RunSeq r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv$RunSeq;

        $i0 = r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: int id>;

        if $i0 != 0 goto label1;

        $r4 = "time";

        goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("time");

        $i1 = r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: int id>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r4;
    }

    public int getNTimeOffsets()
    {
        ucar.nc2.ft.fmrc.TimeCoord r5;
        ucar.nc2.ft.fmrc.FmrcInv$RunSeq r0;
        java.util.Iterator $r3;
        java.util.Collection $r2;
        java.util.HashMap $r1;
        int $i0, i1;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv$RunSeq;

        i1 = 0;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: java.util.HashMap coordMap>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (ucar.nc2.ft.fmrc.TimeCoord) $r4;

        $i0 = virtualinvoke r5.<ucar.nc2.ft.fmrc.TimeCoord: int getNCoords()>();

        i1 = staticinvoke <java.lang.Math: int max(int,int)>(i1, $i0);

        goto label1;

     label2:
        return i1;
    }

    public ucar.nc2.ft.fmrc.TimeCoord getUnionTimeCoord()
    {
        ucar.nc2.ft.fmrc.TimeCoord $r1, $r2, $r12, r14, $r15;
        ucar.nc2.ft.fmrc.FmrcInv$RunSeq r0;
        java.util.Date $r11;
        java.util.HashMap $r4;
        ucar.nc2.ft.fmrc.FmrcInv $r9;
        java.util.ArrayList $r3;
        ucar.nc2.ft.fmrc.FmrcInv$RunSeq$1 $r7;
        boolean $z0;
        java.util.Iterator $r6;
        java.util.Collection $r5;
        java.util.List $r8, $r10, $r16;
        java.lang.Object $r13;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv$RunSeq;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: ucar.nc2.ft.fmrc.TimeCoord timeCoordUnion>;

        if $r1 != null goto label4;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: java.util.List timeList> = $r3;

        $r4 = r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: java.util.HashMap coordMap>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r13 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r14 = (ucar.nc2.ft.fmrc.TimeCoord) $r13;

        if r14 == null goto label2;

        $r15 = <ucar.nc2.ft.fmrc.TimeCoord: ucar.nc2.ft.fmrc.TimeCoord EMPTY>;

        if r14 == $r15 goto label2;

        $r16 = r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: java.util.List timeList>;

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>(r14);

     label2:
        goto label1;

     label3:
        $r8 = r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: java.util.List timeList>;

        $r7 = new ucar.nc2.ft.fmrc.FmrcInv$RunSeq$1;

        specialinvoke $r7.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq$1: void <init>(ucar.nc2.ft.fmrc.FmrcInv$RunSeq)>(r0);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r8, $r7);

        $r10 = r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: java.util.List timeList>;

        $r9 = r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: ucar.nc2.ft.fmrc.FmrcInv this$0>;

        $r11 = staticinvoke <ucar.nc2.ft.fmrc.FmrcInv: java.util.Date access$500(ucar.nc2.ft.fmrc.FmrcInv)>($r9);

        $r12 = staticinvoke <ucar.nc2.ft.fmrc.TimeCoord: ucar.nc2.ft.fmrc.TimeCoord makeUnion(java.util.List,java.util.Date)>($r10, $r11);

        r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: ucar.nc2.ft.fmrc.TimeCoord timeCoordUnion> = $r12;

     label4:
        $r2 = r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: ucar.nc2.ft.fmrc.TimeCoord timeCoordUnion>;

        return $r2;
    }

    boolean equalsData(java.util.List)
    {
        ucar.nc2.ft.fmrc.TimeCoord $r7, r12, $r13;
        ucar.nc2.ft.fmrc.FmrcInv$RunSeq r4;
        java.util.Date $r6, $r10;
        java.util.HashMap $r5, $r9;
        java.util.ArrayList $r14, r15;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r1, $r2;
        ucar.nc2.ft.fmrc.FmrInv$GridVariable r16, r17;
        java.util.List r0;
        java.lang.Object $r3, $r8, $r11;

        r4 := @this: ucar.nc2.ft.fmrc.FmrcInv$RunSeq;

        r0 := @parameter0: java.util.List;

        r15 = null;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r8 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r16 = (ucar.nc2.ft.fmrc.FmrInv$GridVariable) $r8;

        $r9 = r4.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: java.util.HashMap coordMap>;

        $r10 = virtualinvoke r16.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: java.util.Date getRunDate()>();

        $r11 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r10);

        r12 = (ucar.nc2.ft.fmrc.TimeCoord) $r11;

        if r12 != null goto label3;

        if r15 != null goto label2;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r15 = $r14;

     label2:
        interfaceinvoke r15.<java.util.List: boolean add(java.lang.Object)>(r16);

        goto label4;

     label3:
        $r13 = virtualinvoke r16.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: ucar.nc2.ft.fmrc.TimeCoord getTimeExpected()>();

        $z2 = virtualinvoke r12.<ucar.nc2.ft.fmrc.TimeCoord: boolean equalsData(ucar.nc2.ft.fmrc.TimeCoord)>($r13);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        goto label1;

     label5:
        if r15 == null goto label7;

        $r2 = interfaceinvoke r15.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r17 = (ucar.nc2.ft.fmrc.FmrInv$GridVariable) $r3;

        $r5 = r4.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: java.util.HashMap coordMap>;

        $r6 = virtualinvoke r17.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: java.util.Date getRunDate()>();

        $r7 = virtualinvoke r17.<ucar.nc2.ft.fmrc.FmrInv$GridVariable: ucar.nc2.ft.fmrc.TimeCoord getTimeExpected()>();

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        goto label6;

     label7:
        return 1;
    }

    void addVariable(ucar.nc2.ft.fmrc.FmrcInv$UberGrid)
    {
        ucar.nc2.ft.fmrc.FmrcInv$RunSeq r0;
        java.util.List $r2;
        ucar.nc2.ft.fmrc.FmrcInv$UberGrid r1;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv$RunSeq;

        r1 := @parameter0: ucar.nc2.ft.fmrc.FmrcInv$UberGrid;

        $r2 = r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: java.util.List vars>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.util.List getUberGrids()
    {
        ucar.nc2.ft.fmrc.FmrcInv$RunSeq r0;
        java.util.List $r1;

        r0 := @this: ucar.nc2.ft.fmrc.FmrcInv$RunSeq;

        $r1 = r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: java.util.List vars>;

        return $r1;
    }

    static int access$002(ucar.nc2.ft.fmrc.FmrcInv$RunSeq, int)
    {
        int i0;
        ucar.nc2.ft.fmrc.FmrcInv$RunSeq r0;

        r0 := @parameter0: ucar.nc2.ft.fmrc.FmrcInv$RunSeq;

        i0 := @parameter1: int;

        r0.<ucar.nc2.ft.fmrc.FmrcInv$RunSeq: int id> = i0;

        return i0;
    }
}
