final class com.ctc.wstx.sw.XmlWriterWrapper$RawWrapper extends com.ctc.wstx.sw.XmlWriterWrapper
{

    protected void <init>(com.ctc.wstx.sw.XmlWriter)
    {
        com.ctc.wstx.sw.XmlWriter r1;
        com.ctc.wstx.sw.XmlWriterWrapper$RawWrapper r0;

        r0 := @this: com.ctc.wstx.sw.XmlWriterWrapper$RawWrapper;

        r1 := @parameter0: com.ctc.wstx.sw.XmlWriter;

        specialinvoke r0.<com.ctc.wstx.sw.XmlWriterWrapper: void <init>(com.ctc.wstx.sw.XmlWriter)>(r1);

        return;
    }

    public void write(char[], int, int) throws java.io.IOException
    {
        com.ctc.wstx.sw.XmlWriter $r2;
        com.ctc.wstx.sw.XmlWriterWrapper$RawWrapper r0;
        int i0, i1;
        char[] r1;

        r0 := @this: com.ctc.wstx.sw.XmlWriterWrapper$RawWrapper;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.ctc.wstx.sw.XmlWriterWrapper$RawWrapper: com.ctc.wstx.sw.XmlWriter mWriter>;

        virtualinvoke $r2.<com.ctc.wstx.sw.XmlWriter: void writeRaw(char[],int,int)>(r1, i0, i1);

        return;
    }

    public void write(java.lang.String, int, int) throws java.io.IOException
    {
        com.ctc.wstx.sw.XmlWriter $r2;
        com.ctc.wstx.sw.XmlWriterWrapper$RawWrapper r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.sw.XmlWriterWrapper$RawWrapper;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.ctc.wstx.sw.XmlWriterWrapper$RawWrapper: com.ctc.wstx.sw.XmlWriter mWriter>;

        virtualinvoke $r2.<com.ctc.wstx.sw.XmlWriter: void writeRaw(java.lang.String,int,int)>(r1, i0, i1);

        return;
    }

    public final void write(java.lang.String) throws java.io.IOException
    {
        com.ctc.wstx.sw.XmlWriter $r2;
        com.ctc.wstx.sw.XmlWriterWrapper$RawWrapper r0;
        int $i0;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.sw.XmlWriterWrapper$RawWrapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ctc.wstx.sw.XmlWriterWrapper$RawWrapper: com.ctc.wstx.sw.XmlWriter mWriter>;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        virtualinvoke $r2.<com.ctc.wstx.sw.XmlWriter: void writeRaw(java.lang.String,int,int)>(r1, 0, $i0);

        return;
    }
}
