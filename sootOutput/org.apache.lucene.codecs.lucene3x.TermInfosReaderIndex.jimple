class org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex extends java.lang.Object
{
    private static final int MAX_PAGE_BITS;
    private org.apache.lucene.index.Term[] fields;
    private int totalIndexInterval;
    private java.util.Comparator comparator;
    private final org.apache.lucene.util.PagedBytes$PagedBytesDataInput dataInput;
    private final org.apache.lucene.util.packed.PackedInts$Reader indexToDataOffset;
    private final int indexSize;
    private final int skipInterval;

    void <init>(org.apache.lucene.codecs.lucene3x.SegmentTermEnum, int, long, int) throws java.io.IOException
    {
        org.apache.lucene.index.Term $r15, $r24;
        org.apache.lucene.index.Term[] $r7, $r8, $r12;
        org.apache.lucene.util.packed.PackedInts$Mutable $r10;
        boolean $z0, $z1, $z2;
        org.apache.lucene.codecs.lucene3x.TermInfo $r19;
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum r2;
        org.apache.lucene.util.packed.GrowableWriter $r22;
        long $l1, l8, $l9, $l10, l11, $l18, $l19, $l20, $l24;
        org.apache.lucene.util.PagedBytes $r21;
        java.util.ArrayList $r23;
        int i0, $i2, i3, $i4, $i5, $i6, $i7, $i12, $i13, i14, $i15, $i16, $i17, $i21, i22, i23, $i25, $i26, $i27, i28, i29, $i31;
        java.lang.String $r14, $r16, $r17, r18, $r20;
        org.apache.lucene.util.PagedBytes$PagedBytesDataOutput $r4;
        org.apache.lucene.util.PagedBytes$PagedBytesDataInput $r9;
        double $d0, $d1;
        org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex r0;
        java.lang.Object $r13;
        java.util.Comparator $r1;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex;

        r2 := @parameter0: org.apache.lucene.codecs.lucene3x.SegmentTermEnum;

        i3 := @parameter1: int;

        l8 := @parameter2: long;

        i0 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.apache.lucene.util.BytesRef: java.util.Comparator getUTF8SortedAsUTF16Comparator()>();

        r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: java.util.Comparator comparator> = $r1;

        r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: int totalIndexInterval> = i0;

        $l1 = r2.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: long size>;

        $i2 = (int) $l1;

        $i4 = $i2 - 1;

        $i5 = $i4 / i3;

        $i6 = 1 + $i5;

        r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: int indexSize> = $i6;

        $i7 = r2.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: int skipInterval>;

        r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: int skipInterval> = $i7;

        $d0 = (double) l8;

        $d1 = $d0 * 1.5;

        $l10 = (long) $d1;

        $l9 = (long) i3;

        l11 = $l10 / $l9;

        $r21 = new org.apache.lucene.util.PagedBytes;

        $i12 = staticinvoke <org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: int estimatePageBits(long)>(l11);

        specialinvoke $r21.<org.apache.lucene.util.PagedBytes: void <init>(int)>($i12);

        $r4 = virtualinvoke $r21.<org.apache.lucene.util.PagedBytes: org.apache.lucene.util.PagedBytes$PagedBytesDataOutput getDataOutput()>();

        $i13 = staticinvoke <org.apache.lucene.util.MathUtil: int log(long,int)>(l8, 2);

        i14 = 1 + $i13;

        $r22 = new org.apache.lucene.util.packed.GrowableWriter;

        $i15 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: int indexSize>;

        specialinvoke $r22.<org.apache.lucene.util.packed.GrowableWriter: void <init>(int,int,float)>(i14, $i15, 0.2F);

        r18 = null;

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        $i31 = (int) -1;

        i22 = $i31;

        i23 = 0;

     label01:
        $z0 = virtualinvoke r2.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: boolean next()>();

        if $z0 == 0 goto label08;

        $r15 = virtualinvoke r2.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.index.Term term()>();

        if r18 == null goto label02;

        $r17 = virtualinvoke $r15.<org.apache.lucene.index.Term: java.lang.String field()>();

        $z2 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z2 != 0 goto label03;

     label02:
        $r16 = virtualinvoke $r15.<org.apache.lucene.index.Term: java.lang.String field()>();

        r18 = $r16;

        interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>($r16);

        i22 = i22 + 1;

     label03:
        $r19 = virtualinvoke r2.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: org.apache.lucene.codecs.lucene3x.TermInfo termInfo()>();

        $l24 = virtualinvoke $r4.<org.apache.lucene.util.PagedBytes$PagedBytesDataOutput: long getPosition()>();

        virtualinvoke $r22.<org.apache.lucene.util.packed.GrowableWriter: void set(int,long)>(i23, $l24);

        virtualinvoke $r4.<org.apache.lucene.util.PagedBytes$PagedBytesDataOutput: void writeVInt(int)>(i22);

        $r20 = virtualinvoke $r15.<org.apache.lucene.index.Term: java.lang.String text()>();

        virtualinvoke $r4.<org.apache.lucene.util.PagedBytes$PagedBytesDataOutput: void writeString(java.lang.String)>($r20);

        $i25 = $r19.<org.apache.lucene.codecs.lucene3x.TermInfo: int docFreq>;

        virtualinvoke $r4.<org.apache.lucene.util.PagedBytes$PagedBytesDataOutput: void writeVInt(int)>($i25);

        $i26 = $r19.<org.apache.lucene.codecs.lucene3x.TermInfo: int docFreq>;

        $i27 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: int skipInterval>;

        if $i26 < $i27 goto label04;

        $i21 = $r19.<org.apache.lucene.codecs.lucene3x.TermInfo: int skipOffset>;

        virtualinvoke $r4.<org.apache.lucene.util.PagedBytes$PagedBytesDataOutput: void writeVInt(int)>($i21);

     label04:
        $l18 = $r19.<org.apache.lucene.codecs.lucene3x.TermInfo: long freqPointer>;

        virtualinvoke $r4.<org.apache.lucene.util.PagedBytes$PagedBytesDataOutput: void writeVLong(long)>($l18);

        $l19 = $r19.<org.apache.lucene.codecs.lucene3x.TermInfo: long proxPointer>;

        virtualinvoke $r4.<org.apache.lucene.util.PagedBytes$PagedBytesDataOutput: void writeVLong(long)>($l19);

        $l20 = r2.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: long indexPointer>;

        virtualinvoke $r4.<org.apache.lucene.util.PagedBytes$PagedBytesDataOutput: void writeVLong(long)>($l20);

        i28 = 1;

     label05:
        if i28 >= i3 goto label07;

        $z1 = virtualinvoke r2.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: boolean next()>();

        if $z1 != 0 goto label06;

        goto label07;

     label06:
        i28 = i28 + 1;

        goto label05;

     label07:
        i23 = i23 + 1;

        goto label01;

     label08:
        $i16 = interfaceinvoke $r23.<java.util.List: int size()>();

        $r7 = newarray (org.apache.lucene.index.Term)[$i16];

        r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: org.apache.lucene.index.Term[] fields> = $r7;

        i29 = 0;

     label09:
        $r8 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: org.apache.lucene.index.Term[] fields>;

        $i17 = lengthof $r8;

        if i29 >= $i17 goto label10;

        $r12 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: org.apache.lucene.index.Term[] fields>;

        $r24 = new org.apache.lucene.index.Term;

        $r13 = interfaceinvoke $r23.<java.util.List: java.lang.Object get(int)>(i29);

        $r14 = (java.lang.String) $r13;

        specialinvoke $r24.<org.apache.lucene.index.Term: void <init>(java.lang.String)>($r14);

        $r12[i29] = $r24;

        i29 = i29 + 1;

        goto label09;

     label10:
        virtualinvoke $r21.<org.apache.lucene.util.PagedBytes: org.apache.lucene.util.PagedBytes$Reader freeze(boolean)>(1);

        $r9 = virtualinvoke $r21.<org.apache.lucene.util.PagedBytes: org.apache.lucene.util.PagedBytes$PagedBytesDataInput getDataInput()>();

        r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: org.apache.lucene.util.PagedBytes$PagedBytesDataInput dataInput> = $r9;

        $r10 = virtualinvoke $r22.<org.apache.lucene.util.packed.GrowableWriter: org.apache.lucene.util.packed.PackedInts$Mutable getMutable()>();

        r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: org.apache.lucene.util.packed.PackedInts$Reader indexToDataOffset> = $r10;

        return;
    }

    private static int estimatePageBits(long)
    {
        int $i1, $i2, $i3, $i4;
        long l0;

        l0 := @parameter0: long;

        $i1 = staticinvoke <java.lang.Long: int numberOfLeadingZeros(long)>(l0);

        $i2 = 64 - $i1;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i2, 18);

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i3, 4);

        return $i4;
    }

    void seekEnum(org.apache.lucene.codecs.lucene3x.SegmentTermEnum, int) throws java.io.IOException
    {
        org.apache.lucene.index.Term r5, $r6;
        long $l1, $l6, $l7, $l8, $l10, $l11, $l12, $l13;
        int i0, $i2, $i3, $i4, $i5, $i9, $i14;
        org.apache.lucene.index.Term[] $r4;
        java.lang.String $r7, $r8;
        org.apache.lucene.util.PagedBytes$PagedBytesDataInput $r1, $r2;
        org.apache.lucene.codecs.lucene3x.TermInfo $r9;
        org.apache.lucene.codecs.lucene3x.SegmentTermEnum r10;
        org.apache.lucene.util.packed.PackedInts$Reader $r3;
        org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex r0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex;

        r10 := @parameter0: org.apache.lucene.codecs.lucene3x.SegmentTermEnum;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: org.apache.lucene.util.PagedBytes$PagedBytesDataInput dataInput>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: org.apache.lucene.util.PagedBytes$PagedBytesDataInput clone()>();

        $r3 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: org.apache.lucene.util.packed.PackedInts$Reader indexToDataOffset>;

        $l1 = interfaceinvoke $r3.<org.apache.lucene.util.packed.PackedInts$Reader: long get(int)>(i0);

        virtualinvoke $r2.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: void setPosition(long)>($l1);

        $i2 = virtualinvoke $r2.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: int readVInt()>();

        $r4 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: org.apache.lucene.index.Term[] fields>;

        r5 = $r4[$i2];

        $r6 = new org.apache.lucene.index.Term;

        $r7 = virtualinvoke r5.<org.apache.lucene.index.Term: java.lang.String field()>();

        $r8 = virtualinvoke $r2.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: java.lang.String readString()>();

        specialinvoke $r6.<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String)>($r7, $r8);

        $r9 = new org.apache.lucene.codecs.lucene3x.TermInfo;

        specialinvoke $r9.<org.apache.lucene.codecs.lucene3x.TermInfo: void <init>()>();

        $i3 = virtualinvoke $r2.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: int readVInt()>();

        $r9.<org.apache.lucene.codecs.lucene3x.TermInfo: int docFreq> = $i3;

        $i5 = $r9.<org.apache.lucene.codecs.lucene3x.TermInfo: int docFreq>;

        $i4 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: int skipInterval>;

        if $i5 < $i4 goto label1;

        $i14 = virtualinvoke $r2.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: int readVInt()>();

        $r9.<org.apache.lucene.codecs.lucene3x.TermInfo: int skipOffset> = $i14;

        goto label2;

     label1:
        $r9.<org.apache.lucene.codecs.lucene3x.TermInfo: int skipOffset> = 0;

     label2:
        $l6 = virtualinvoke $r2.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: long readVLong()>();

        $r9.<org.apache.lucene.codecs.lucene3x.TermInfo: long freqPointer> = $l6;

        $l7 = virtualinvoke $r2.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: long readVLong()>();

        $r9.<org.apache.lucene.codecs.lucene3x.TermInfo: long proxPointer> = $l7;

        $l8 = virtualinvoke $r2.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: long readVLong()>();

        $l11 = (long) i0;

        $i9 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: int totalIndexInterval>;

        $l10 = (long) $i9;

        $l12 = $l11 * $l10;

        $l13 = $l12 - 1L;

        virtualinvoke r10.<org.apache.lucene.codecs.lucene3x.SegmentTermEnum: void seek(long,long,org.apache.lucene.index.Term,org.apache.lucene.codecs.lucene3x.TermInfo)>($l8, $l13, $r6, $r9);

        return;
    }

    int getIndexOffset(org.apache.lucene.index.Term) throws java.io.IOException
    {
        org.apache.lucene.util.BytesRef $r3;
        org.apache.lucene.index.Term r4;
        org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex r0;
        int $i0, $i1, i2, $i3, i4, i5;
        org.apache.lucene.util.PagedBytes$PagedBytesDataInput $r1, $r2;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex;

        r4 := @parameter0: org.apache.lucene.index.Term;

        i4 = 0;

        $i0 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: int indexSize>;

        i5 = $i0 - 1;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: org.apache.lucene.util.PagedBytes$PagedBytesDataInput dataInput>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: org.apache.lucene.util.PagedBytes$PagedBytesDataInput clone()>();

        $r3 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r3.<org.apache.lucene.util.BytesRef: void <init>()>();

     label1:
        if i5 < i4 goto label5;

        $i1 = i4 + i5;

        i2 = $i1 >>> 1;

        $i3 = specialinvoke r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: int compareTo(org.apache.lucene.index.Term,int,org.apache.lucene.util.PagedBytes$PagedBytesDataInput,org.apache.lucene.util.BytesRef)>(r4, i2, $r2, $r3);

        if $i3 >= 0 goto label2;

        i5 = i2 - 1;

        goto label4;

     label2:
        if $i3 <= 0 goto label3;

        i4 = i2 + 1;

        goto label4;

     label3:
        return i2;

     label4:
        goto label1;

     label5:
        return i5;
    }

    org.apache.lucene.index.Term getTerm(int) throws java.io.IOException
    {
        org.apache.lucene.index.Term r5, $r6;
        long $l1;
        org.apache.lucene.util.packed.PackedInts$Reader $r3;
        org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex r0;
        int i0, $i2;
        org.apache.lucene.index.Term[] $r4;
        java.lang.String $r7, $r8;
        org.apache.lucene.util.PagedBytes$PagedBytesDataInput $r1, $r2;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: org.apache.lucene.util.PagedBytes$PagedBytesDataInput dataInput>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: org.apache.lucene.util.PagedBytes$PagedBytesDataInput clone()>();

        $r3 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: org.apache.lucene.util.packed.PackedInts$Reader indexToDataOffset>;

        $l1 = interfaceinvoke $r3.<org.apache.lucene.util.packed.PackedInts$Reader: long get(int)>(i0);

        virtualinvoke $r2.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: void setPosition(long)>($l1);

        $i2 = virtualinvoke $r2.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: int readVInt()>();

        $r4 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: org.apache.lucene.index.Term[] fields>;

        r5 = $r4[$i2];

        $r6 = new org.apache.lucene.index.Term;

        $r7 = virtualinvoke r5.<org.apache.lucene.index.Term: java.lang.String field()>();

        $r8 = virtualinvoke $r2.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: java.lang.String readString()>();

        specialinvoke $r6.<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String)>($r7, $r8);

        return $r6;
    }

    int length()
    {
        int $i0;
        org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex r0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex;

        $i0 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: int indexSize>;

        return $i0;
    }

    int compareTo(org.apache.lucene.index.Term, int) throws java.io.IOException
    {
        org.apache.lucene.util.BytesRef $r4;
        org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex r0;
        org.apache.lucene.index.Term r1;
        int i0, $i1;
        org.apache.lucene.util.PagedBytes$PagedBytesDataInput $r2, $r3;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex;

        r1 := @parameter0: org.apache.lucene.index.Term;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: org.apache.lucene.util.PagedBytes$PagedBytesDataInput dataInput>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: org.apache.lucene.util.PagedBytes$PagedBytesDataInput clone()>();

        $r4 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r4.<org.apache.lucene.util.BytesRef: void <init>()>();

        $i1 = specialinvoke r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: int compareTo(org.apache.lucene.index.Term,int,org.apache.lucene.util.PagedBytes$PagedBytesDataInput,org.apache.lucene.util.BytesRef)>(r1, i0, $r3, $r4);

        return $i1;
    }

    private int compareTo(org.apache.lucene.index.Term, int, org.apache.lucene.util.PagedBytes$PagedBytesDataInput, org.apache.lucene.util.BytesRef) throws java.io.IOException
    {
        byte[] $r4;
        org.apache.lucene.util.BytesRef r3, $r6;
        org.apache.lucene.index.Term r1;
        org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.util.Comparator $r5;
        org.apache.lucene.util.PagedBytes$PagedBytesDataInput r2;

        r0 := @this: org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex;

        r1 := @parameter0: org.apache.lucene.index.Term;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.lucene.util.PagedBytes$PagedBytesDataInput;

        r3 := @parameter3: org.apache.lucene.util.BytesRef;

        $i1 = specialinvoke r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: int compareField(org.apache.lucene.index.Term,int,org.apache.lucene.util.PagedBytes$PagedBytesDataInput)>(r1, i0, r2);

        if $i1 != 0 goto label1;

        $i2 = virtualinvoke r2.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: int readVInt()>();

        r3.<org.apache.lucene.util.BytesRef: int length> = $i2;

        $i3 = r3.<org.apache.lucene.util.BytesRef: int length>;

        virtualinvoke r3.<org.apache.lucene.util.BytesRef: void grow(int)>($i3);

        $r4 = r3.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i4 = r3.<org.apache.lucene.util.BytesRef: int length>;

        virtualinvoke r2.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: void readBytes(byte[],int,int)>($r4, 0, $i4);

        $r5 = r0.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: java.util.Comparator comparator>;

        $r6 = virtualinvoke r1.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes()>();

        $i5 = interfaceinvoke $r5.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r6, r3);

        return $i5;

     label1:
        return $i1;
    }

    private int compareField(org.apache.lucene.index.Term, int, org.apache.lucene.util.PagedBytes$PagedBytesDataInput) throws java.io.IOException
    {
        org.apache.lucene.index.Term r3, $r6;
        long $l1;
        org.apache.lucene.util.packed.PackedInts$Reader $r2;
        org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex r1;
        int i0, $i2, $i3;
        java.lang.String $r4, $r7;
        org.apache.lucene.index.Term[] $r5;
        org.apache.lucene.util.PagedBytes$PagedBytesDataInput r0;

        r1 := @this: org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex;

        r3 := @parameter0: org.apache.lucene.index.Term;

        i0 := @parameter1: int;

        r0 := @parameter2: org.apache.lucene.util.PagedBytes$PagedBytesDataInput;

        $r2 = r1.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: org.apache.lucene.util.packed.PackedInts$Reader indexToDataOffset>;

        $l1 = interfaceinvoke $r2.<org.apache.lucene.util.packed.PackedInts$Reader: long get(int)>(i0);

        virtualinvoke r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: void setPosition(long)>($l1);

        $r4 = virtualinvoke r3.<org.apache.lucene.index.Term: java.lang.String field()>();

        $r5 = r1.<org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: org.apache.lucene.index.Term[] fields>;

        $i2 = virtualinvoke r0.<org.apache.lucene.util.PagedBytes$PagedBytesDataInput: int readVInt()>();

        $r6 = $r5[$i2];

        $r7 = virtualinvoke $r6.<org.apache.lucene.index.Term: java.lang.String field()>();

        $i3 = virtualinvoke $r4.<java.lang.String: int compareTo(java.lang.String)>($r7);

        return $i3;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.codecs.lucene3x.TermInfosReaderIndex: int MAX_PAGE_BITS> = 18;

        return;
    }
}
