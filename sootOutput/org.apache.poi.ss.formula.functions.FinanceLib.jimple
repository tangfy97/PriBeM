public final class org.apache.poi.ss.formula.functions.FinanceLib extends java.lang.Object
{

    private void <init>()
    {
        org.apache.poi.ss.formula.functions.FinanceLib r0;

        r0 := @this: org.apache.poi.ss.formula.functions.FinanceLib;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double fv(double, double, double, double, boolean)
    {
        byte $b0;
        double d0, d1, d2, $d3, $d4, d5, $d6, $d7, d8, $d9, $d10, $d11, $d12, $d13, d14, $d15;
        boolean z0;

        d0 := @parameter0: double;

        d2 := @parameter1: double;

        d5 := @parameter2: double;

        d8 := @parameter3: double;

        z0 := @parameter4: boolean;

        $b0 = d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d12 = d2 * d5;

        $d13 = d8 + $d12;

        d14 = -1.0 * $d13;

        goto label4;

     label1:
        d1 = d0 + 1.0;

        $d3 = staticinvoke <java.lang.Math: double pow(double,double)>(d1, d2);

        $d4 = 1.0 - $d3;

        if z0 == 0 goto label2;

        $d15 = d1;

        goto label3;

     label2:
        $d15 = 1.0;

     label3:
        $d6 = $d4 * $d15;

        $d7 = $d6 * d5;

        $d9 = $d7 / d0;

        $d10 = staticinvoke <java.lang.Math: double pow(double,double)>(d1, d2);

        $d11 = d8 * $d10;

        d14 = $d9 - $d11;

     label4:
        return d14;
    }

    public static double pv(double, double, double, double, boolean)
    {
        byte $b0;
        double d0, d1, d2, $d3, $d4, $d5, d6, $d7, d8, $d9, $d10, $d11, $d12, $d13, d14, $d15;
        boolean z0;

        d0 := @parameter0: double;

        d2 := @parameter1: double;

        d6 := @parameter2: double;

        d8 := @parameter3: double;

        z0 := @parameter4: boolean;

        $b0 = d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d12 = d2 * d6;

        $d13 = $d12 + d8;

        d14 = -1.0 * $d13;

        goto label4;

     label1:
        d1 = d0 + 1.0;

        $d3 = staticinvoke <java.lang.Math: double pow(double,double)>(d1, d2);

        $d4 = 1.0 - $d3;

        $d5 = $d4 / d0;

        if z0 == 0 goto label2;

        $d15 = d1;

        goto label3;

     label2:
        $d15 = 1.0;

     label3:
        $d7 = $d5 * $d15;

        $d9 = $d7 * d6;

        $d10 = $d9 - d8;

        $d11 = staticinvoke <java.lang.Math: double pow(double,double)>(d1, d2);

        d14 = $d10 / $d11;

     label4:
        return d14;
    }

    public static double npv(double, double[])
    {
        double[] r0;
        int i0, i1;
        double d0, d1, $d2, $d3, d4, d5;

        d0 := @parameter0: double;

        r0 := @parameter1: double[];

        d4 = 0.0;

        d1 = d0 + 1.0;

        d5 = d1;

        i1 = 0;

        i0 = lengthof r0;

     label1:
        if i1 >= i0 goto label2;

        $d2 = r0[i1];

        $d3 = $d2 / d5;

        d4 = d4 + $d3;

        d5 = d5 * d1;

        i1 = i1 + 1;

        goto label1;

     label2:
        return d4;
    }

    public static double pmt(double, double, double, double, boolean)
    {
        byte $b0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, d14, $d15;
        boolean z0;

        d0 := @parameter0: double;

        d4 := @parameter1: double;

        d3 := @parameter2: double;

        d2 := @parameter3: double;

        z0 := @parameter4: boolean;

        $b0 = d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d12 = d2 + d3;

        $d13 = -1.0 * $d12;

        d14 = $d13 / d4;

        goto label4;

     label1:
        d1 = d0 + 1.0;

        $d5 = staticinvoke <java.lang.Math: double pow(double,double)>(d1, d4);

        $d6 = d3 * $d5;

        $d7 = d2 + $d6;

        $d8 = $d7 * d0;

        if z0 == 0 goto label2;

        $d15 = d1;

        goto label3;

     label2:
        $d15 = 1.0;

     label3:
        $d9 = staticinvoke <java.lang.Math: double pow(double,double)>(d1, d4);

        $d10 = 1.0 - $d9;

        $d11 = $d15 * $d10;

        d14 = $d8 / $d11;

     label4:
        return d14;
    }

    public static double nper(double, double, double, double, boolean)
    {
        byte $b0, $b1, $b2;
        int $i3, $i4;
        double d0, d1, d2, $d3, d4, $d5, $d6, d7, $d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, d19, $d20, $d21, $d22;
        boolean z0;

        d0 := @parameter0: double;

        d2 := @parameter1: double;

        d9 := @parameter2: double;

        d4 := @parameter3: double;

        z0 := @parameter4: boolean;

        $b0 = d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d17 = d4 + d9;

        $d18 = -1.0 * $d17;

        d19 = $d18 / d2;

        goto label8;

     label1:
        d1 = d0 + 1.0;

        if z0 == 0 goto label2;

        $d20 = d1;

        goto label3;

     label2:
        $d20 = 1.0;

     label3:
        $d3 = $d20 * d2;

        $d16 = $d3 / d0;

        $d5 = $d16 - d4;

        $b1 = $d5 cmpg 0.0;

        $i3 = (int) $b1;

        if $i3 >= 0 goto label4;

        $d15 = d4 - $d16;

        $d21 = staticinvoke <java.lang.Math: double log(double)>($d15);

        goto label5;

     label4:
        $d6 = $d16 - d4;

        $d21 = staticinvoke <java.lang.Math: double log(double)>($d6);

     label5:
        d7 = $d21;

        $d8 = $d16 - d4;

        $b2 = $d8 cmpg 0.0;

        $i4 = (int) $b2;

        if $i4 >= 0 goto label6;

        $d13 = neg d9;

        $d14 = $d13 - $d16;

        $d22 = staticinvoke <java.lang.Math: double log(double)>($d14);

        goto label7;

     label6:
        $d10 = d9 + $d16;

        $d22 = staticinvoke <java.lang.Math: double log(double)>($d10);

     label7:
        $d11 = staticinvoke <java.lang.Math: double log(double)>(d1);

        $d12 = d7 - $d22;

        d19 = $d12 / $d11;

     label8:
        return d19;
    }
}
