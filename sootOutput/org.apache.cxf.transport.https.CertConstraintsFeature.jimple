public class org.apache.cxf.transport.https.CertConstraintsFeature extends org.apache.cxf.feature.AbstractFeature
{
    org.apache.cxf.configuration.security.CertificateConstraintsType contraints;

    public void <init>()
    {
        org.apache.cxf.transport.https.CertConstraintsFeature r0;

        r0 := @this: org.apache.cxf.transport.https.CertConstraintsFeature;

        specialinvoke r0.<org.apache.cxf.feature.AbstractFeature: void <init>()>();

        return;
    }

    public void initialize(org.apache.cxf.endpoint.Server, org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r4;
        org.apache.cxf.endpoint.Server r2;
        org.apache.cxf.transport.https.CertConstraints $r6;
        org.apache.cxf.configuration.security.CertificateConstraintsType $r1, $r5;
        org.apache.cxf.endpoint.Endpoint $r3, $r7;
        java.lang.Class $r8;
        java.lang.String $r9;
        org.apache.cxf.transport.https.CertConstraintsFeature r0;

        r0 := @this: org.apache.cxf.transport.https.CertConstraintsFeature;

        r2 := @parameter0: org.apache.cxf.endpoint.Server;

        r4 := @parameter1: org.apache.cxf.Bus;

        $r1 = r0.<org.apache.cxf.transport.https.CertConstraintsFeature: org.apache.cxf.configuration.security.CertificateConstraintsType contraints>;

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = interfaceinvoke r2.<org.apache.cxf.endpoint.Server: org.apache.cxf.endpoint.Endpoint getEndpoint()>();

        virtualinvoke r0.<org.apache.cxf.transport.https.CertConstraintsFeature: void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)>($r3, r4);

        $r5 = r0.<org.apache.cxf.transport.https.CertConstraintsFeature: org.apache.cxf.configuration.security.CertificateConstraintsType contraints>;

        $r6 = staticinvoke <org.apache.cxf.transport.https.CertConstraintsJaxBUtils: org.apache.cxf.transport.https.CertConstraints createCertConstraints(org.apache.cxf.configuration.security.CertificateConstraintsType)>($r5);

        $r7 = interfaceinvoke r2.<org.apache.cxf.endpoint.Server: org.apache.cxf.endpoint.Endpoint getEndpoint()>();

        $r8 = class "Lorg/apache/cxf/transport/https/CertConstraints;";

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r7.<org.apache.cxf.endpoint.Endpoint: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r6);

        return;
    }

    public void initialize(org.apache.cxf.endpoint.Client, org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r3;
        org.apache.cxf.transport.https.CertConstraints $r5;
        org.apache.cxf.endpoint.Client r2;
        org.apache.cxf.configuration.security.CertificateConstraintsType $r1, $r4;
        org.apache.cxf.endpoint.Endpoint $r6;
        java.lang.Class $r7;
        java.lang.String $r8;
        org.apache.cxf.transport.https.CertConstraintsFeature r0;

        r0 := @this: org.apache.cxf.transport.https.CertConstraintsFeature;

        r2 := @parameter0: org.apache.cxf.endpoint.Client;

        r3 := @parameter1: org.apache.cxf.Bus;

        $r1 = r0.<org.apache.cxf.transport.https.CertConstraintsFeature: org.apache.cxf.configuration.security.CertificateConstraintsType contraints>;

        if $r1 != null goto label1;

        return;

     label1:
        virtualinvoke r0.<org.apache.cxf.transport.https.CertConstraintsFeature: void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)>(r2, r3);

        $r4 = r0.<org.apache.cxf.transport.https.CertConstraintsFeature: org.apache.cxf.configuration.security.CertificateConstraintsType contraints>;

        $r5 = staticinvoke <org.apache.cxf.transport.https.CertConstraintsJaxBUtils: org.apache.cxf.transport.https.CertConstraints createCertConstraints(org.apache.cxf.configuration.security.CertificateConstraintsType)>($r4);

        $r6 = interfaceinvoke r2.<org.apache.cxf.endpoint.Client: org.apache.cxf.endpoint.Endpoint getEndpoint()>();

        $r7 = class "Lorg/apache/cxf/transport/https/CertConstraints;";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r6.<org.apache.cxf.endpoint.Endpoint: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r5);

        return;
    }

    public void initialize(org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r2;
        org.apache.cxf.transport.https.CertConstraints $r4;
        java.lang.Class $r5;
        java.lang.String $r6;
        org.apache.cxf.transport.https.CertConstraintsFeature r0;
        org.apache.cxf.configuration.security.CertificateConstraintsType $r1, $r3;

        r0 := @this: org.apache.cxf.transport.https.CertConstraintsFeature;

        r2 := @parameter0: org.apache.cxf.Bus;

        $r1 = r0.<org.apache.cxf.transport.https.CertConstraintsFeature: org.apache.cxf.configuration.security.CertificateConstraintsType contraints>;

        if $r1 != null goto label1;

        return;

     label1:
        virtualinvoke r0.<org.apache.cxf.transport.https.CertConstraintsFeature: void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)>(r2, r2);

        $r3 = r0.<org.apache.cxf.transport.https.CertConstraintsFeature: org.apache.cxf.configuration.security.CertificateConstraintsType contraints>;

        $r4 = staticinvoke <org.apache.cxf.transport.https.CertConstraintsJaxBUtils: org.apache.cxf.transport.https.CertConstraints createCertConstraints(org.apache.cxf.configuration.security.CertificateConstraintsType)>($r3);

        $r5 = class "Lorg/apache/cxf/transport/https/CertConstraints;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke r2.<org.apache.cxf.Bus: void setProperty(java.lang.String,java.lang.Object)>($r6, $r4);

        return;
    }

    protected void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider, org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r7;
        org.apache.cxf.transport.https.CertConstraintsInterceptor $r4, $r6;
        org.apache.cxf.configuration.security.CertificateConstraintsType $r1;
        java.util.List $r3, $r5;
        org.apache.cxf.interceptor.InterceptorProvider r2;
        org.apache.cxf.transport.https.CertConstraintsFeature r0;

        r0 := @this: org.apache.cxf.transport.https.CertConstraintsFeature;

        r2 := @parameter0: org.apache.cxf.interceptor.InterceptorProvider;

        r7 := @parameter1: org.apache.cxf.Bus;

        $r1 = r0.<org.apache.cxf.transport.https.CertConstraintsFeature: org.apache.cxf.configuration.security.CertificateConstraintsType contraints>;

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = interfaceinvoke r2.<org.apache.cxf.interceptor.InterceptorProvider: java.util.List getInInterceptors()>();

        $r4 = <org.apache.cxf.transport.https.CertConstraintsInterceptor: org.apache.cxf.transport.https.CertConstraintsInterceptor INSTANCE>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r5 = interfaceinvoke r2.<org.apache.cxf.interceptor.InterceptorProvider: java.util.List getInFaultInterceptors()>();

        $r6 = <org.apache.cxf.transport.https.CertConstraintsInterceptor: org.apache.cxf.transport.https.CertConstraintsInterceptor INSTANCE>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

        return;
    }

    public void setCertificateConstraints(org.apache.cxf.configuration.security.CertificateConstraintsType)
    {
        org.apache.cxf.transport.https.CertConstraintsFeature r0;
        org.apache.cxf.configuration.security.CertificateConstraintsType r1;

        r0 := @this: org.apache.cxf.transport.https.CertConstraintsFeature;

        r1 := @parameter0: org.apache.cxf.configuration.security.CertificateConstraintsType;

        r0.<org.apache.cxf.transport.https.CertConstraintsFeature: org.apache.cxf.configuration.security.CertificateConstraintsType contraints> = r1;

        return;
    }

    public org.apache.cxf.configuration.security.CertificateConstraintsType getCertificateConstraints()
    {
        org.apache.cxf.transport.https.CertConstraintsFeature r0;
        org.apache.cxf.configuration.security.CertificateConstraintsType $r1;

        r0 := @this: org.apache.cxf.transport.https.CertConstraintsFeature;

        $r1 = r0.<org.apache.cxf.transport.https.CertConstraintsFeature: org.apache.cxf.configuration.security.CertificateConstraintsType contraints>;

        return $r1;
    }
}
