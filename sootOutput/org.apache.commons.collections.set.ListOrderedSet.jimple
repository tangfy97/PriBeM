public class org.apache.commons.collections.set.ListOrderedSet extends org.apache.commons.collections.set.AbstractSerializableSetDecorator implements java.util.Set
{
    private static final long serialVersionUID;
    protected final java.util.List setOrder;

    public static org.apache.commons.collections.set.ListOrderedSet decorate(java.util.Set, java.util.List)
    {
        org.apache.commons.collections.set.ListOrderedSet $r3;
        java.util.Set r0;
        java.lang.IllegalArgumentException $r2, $r4, $r5;
        java.util.List r1;
        int $i0, $i1;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: java.util.List;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Set must not be null");

        throw $r5;

     label1:
        if r1 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("List must not be null");

        throw $r4;

     label2:
        $i0 = interfaceinvoke r0.<java.util.Set: int size()>();

        if $i0 > 0 goto label3;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i1 <= 0 goto label4;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Set and List must be empty");

        throw $r2;

     label4:
        $r3 = new org.apache.commons.collections.set.ListOrderedSet;

        specialinvoke $r3.<org.apache.commons.collections.set.ListOrderedSet: void <init>(java.util.Set,java.util.List)>(r0, r1);

        return $r3;
    }

    public static org.apache.commons.collections.set.ListOrderedSet decorate(java.util.Set)
    {
        java.util.Set r1;
        org.apache.commons.collections.set.ListOrderedSet $r0;

        r1 := @parameter0: java.util.Set;

        $r0 = new org.apache.commons.collections.set.ListOrderedSet;

        specialinvoke $r0.<org.apache.commons.collections.set.ListOrderedSet: void <init>(java.util.Set)>(r1);

        return $r0;
    }

    public static org.apache.commons.collections.set.ListOrderedSet decorate(java.util.List)
    {
        java.util.HashSet $r1;
        java.util.List r0;
        org.apache.commons.collections.set.ListOrderedSet $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @parameter0: java.util.List;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("List must not be null");

        throw $r3;

     label1:
        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>(r0);

        interfaceinvoke r0.<java.util.List: boolean retainAll(java.util.Collection)>($r1);

        $r2 = new org.apache.commons.collections.set.ListOrderedSet;

        specialinvoke $r2.<org.apache.commons.collections.set.ListOrderedSet: void <init>(java.util.Set,java.util.List)>($r1, r0);

        return $r2;
    }

    public void <init>()
    {
        java.util.HashSet $r1;
        org.apache.commons.collections.set.ListOrderedSet r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.collections.set.ListOrderedSet;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        specialinvoke r0.<org.apache.commons.collections.set.AbstractSerializableSetDecorator: void <init>(java.util.Set)>($r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.collections.set.ListOrderedSet: java.util.List setOrder> = $r2;

        return;
    }

    protected void <init>(java.util.Set)
    {
        java.util.Set r1;
        org.apache.commons.collections.set.ListOrderedSet r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.collections.set.ListOrderedSet;

        r1 := @parameter0: java.util.Set;

        specialinvoke r0.<org.apache.commons.collections.set.AbstractSerializableSetDecorator: void <init>(java.util.Set)>(r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        r0.<org.apache.commons.collections.set.ListOrderedSet: java.util.List setOrder> = $r2;

        return;
    }

    protected void <init>(java.util.Set, java.util.List)
    {
        org.apache.commons.collections.set.ListOrderedSet r0;
        java.util.List r2;
        java.util.Set r1;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.apache.commons.collections.set.ListOrderedSet;

        r1 := @parameter0: java.util.Set;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<org.apache.commons.collections.set.AbstractSerializableSetDecorator: void <init>(java.util.Set)>(r1);

        if r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("List must not be null");

        throw $r3;

     label1:
        r0.<org.apache.commons.collections.set.ListOrderedSet: java.util.List setOrder> = r2;

        return;
    }

    public java.util.List asList()
    {
        org.apache.commons.collections.set.ListOrderedSet r0;
        java.util.List $r1, $r2;

        r0 := @this: org.apache.commons.collections.set.ListOrderedSet;

        $r1 = r0.<org.apache.commons.collections.set.ListOrderedSet: java.util.List setOrder>;

        $r2 = staticinvoke <org.apache.commons.collections.list.UnmodifiableList: java.util.List decorate(java.util.List)>($r1);

        return $r2;
    }

    public void clear()
    {
        org.apache.commons.collections.set.ListOrderedSet r0;
        java.util.List $r2;
        java.util.Collection $r1;

        r0 := @this: org.apache.commons.collections.set.ListOrderedSet;

        $r1 = r0.<org.apache.commons.collections.set.ListOrderedSet: java.util.Collection collection>;

        interfaceinvoke $r1.<java.util.Collection: void clear()>();

        $r2 = r0.<org.apache.commons.collections.set.ListOrderedSet: java.util.List setOrder>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        return;
    }

    public java.util.Iterator iterator()
    {
        org.apache.commons.collections.set.ListOrderedSet$OrderedSetIterator $r0;
        org.apache.commons.collections.set.ListOrderedSet r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        java.util.Collection $r4;

        r1 := @this: org.apache.commons.collections.set.ListOrderedSet;

        $r0 = new org.apache.commons.collections.set.ListOrderedSet$OrderedSetIterator;

        $r2 = r1.<org.apache.commons.collections.set.ListOrderedSet: java.util.List setOrder>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        $r4 = r1.<org.apache.commons.collections.set.ListOrderedSet: java.util.Collection collection>;

        specialinvoke $r0.<org.apache.commons.collections.set.ListOrderedSet$OrderedSetIterator: void <init>(java.util.Iterator,java.util.Collection,org.apache.commons.collections.set.ListOrderedSet$1)>($r3, $r4, null);

        return $r0;
    }

    public boolean add(java.lang.Object)
    {
        org.apache.commons.collections.set.ListOrderedSet r0;
        java.util.Collection $r2, $r3, $r5;
        java.util.List $r4;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections.set.ListOrderedSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.set.ListOrderedSet: java.util.Collection collection>;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.commons.collections.set.ListOrderedSet: java.util.Collection collection>;

        $z2 = interfaceinvoke $r5.<java.util.Collection: boolean add(java.lang.Object)>(r1);

        return $z2;

     label1:
        $r3 = r0.<org.apache.commons.collections.set.ListOrderedSet: java.util.Collection collection>;

        $z1 = interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>(r1);

        $r4 = r0.<org.apache.commons.collections.set.ListOrderedSet: java.util.List setOrder>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r1);

        return $z1;
    }

    public boolean addAll(java.util.Collection)
    {
        org.apache.commons.collections.set.ListOrderedSet r3;
        java.util.Iterator $r1;
        java.util.Collection r0;
        java.lang.Object $r2;
        boolean $z0, $z1, z2;

        r3 := @this: org.apache.commons.collections.set.ListOrderedSet;

        r0 := @parameter0: java.util.Collection;

        z2 = 0;

        $r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $z1 = virtualinvoke r3.<org.apache.commons.collections.set.ListOrderedSet: boolean add(java.lang.Object)>($r2);

        z2 = z2 | $z1;

        goto label1;

     label2:
        return z2;
    }

    public boolean remove(java.lang.Object)
    {
        org.apache.commons.collections.set.ListOrderedSet r0;
        java.util.List $r3;
        java.util.Collection $r2;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.set.ListOrderedSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.set.ListOrderedSet: java.util.Collection collection>;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean remove(java.lang.Object)>(r1);

        $r3 = r0.<org.apache.commons.collections.set.ListOrderedSet: java.util.List setOrder>;

        interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean removeAll(java.util.Collection)
    {
        org.apache.commons.collections.set.ListOrderedSet r3;
        java.util.Iterator $r1;
        java.util.Collection r0;
        java.lang.Object $r2;
        boolean $z0, $z1, z2;

        r3 := @this: org.apache.commons.collections.set.ListOrderedSet;

        r0 := @parameter0: java.util.Collection;

        z2 = 0;

        $r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $z1 = virtualinvoke r3.<org.apache.commons.collections.set.ListOrderedSet: boolean remove(java.lang.Object)>($r2);

        z2 = z2 | $z1;

        goto label1;

     label2:
        return z2;
    }

    public boolean retainAll(java.util.Collection)
    {
        org.apache.commons.collections.set.ListOrderedSet r0;
        java.util.Iterator $r5;
        java.util.Collection r1, $r2, $r3, $r7;
        java.util.List $r4, $r8;
        int $i0;
        java.lang.Object $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections.set.ListOrderedSet;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<org.apache.commons.collections.set.ListOrderedSet: java.util.Collection collection>;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean retainAll(java.util.Collection)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<org.apache.commons.collections.set.ListOrderedSet: java.util.Collection collection>;

        $i0 = interfaceinvoke $r3.<java.util.Collection: int size()>();

        if $i0 != 0 goto label2;

        $r8 = r0.<org.apache.commons.collections.set.ListOrderedSet: java.util.List setOrder>;

        interfaceinvoke $r8.<java.util.List: void clear()>();

        goto label5;

     label2:
        $r4 = r0.<org.apache.commons.collections.set.ListOrderedSet: java.util.List setOrder>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = r0.<org.apache.commons.collections.set.ListOrderedSet: java.util.Collection collection>;

        $z2 = interfaceinvoke $r7.<java.util.Collection: boolean contains(java.lang.Object)>($r6);

        if $z2 != 0 goto label4;

        interfaceinvoke $r5.<java.util.Iterator: void remove()>();

     label4:
        goto label3;

     label5:
        return $z0;
    }

    public java.lang.Object[] toArray()
    {
        org.apache.commons.collections.set.ListOrderedSet r0;
        java.util.List $r1;
        java.lang.Object[] $r2;

        r0 := @this: org.apache.commons.collections.set.ListOrderedSet;

        $r1 = r0.<org.apache.commons.collections.set.ListOrderedSet: java.util.List setOrder>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray()>();

        return $r2;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        org.apache.commons.collections.set.ListOrderedSet r0;
        java.util.List $r2;
        java.lang.Object[] r1, $r3;

        r0 := @this: org.apache.commons.collections.set.ListOrderedSet;

        r1 := @parameter0: java.lang.Object[];

        $r2 = r0.<org.apache.commons.collections.set.ListOrderedSet: java.util.List setOrder>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r1);

        return $r3;
    }

    public java.lang.Object get(int)
    {
        org.apache.commons.collections.set.ListOrderedSet r0;
        java.util.List $r1;
        int i0;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.collections.set.ListOrderedSet;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.collections.set.ListOrderedSet: java.util.List setOrder>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        return $r2;
    }

    public int indexOf(java.lang.Object)
    {
        org.apache.commons.collections.set.ListOrderedSet r0;
        java.util.List $r2;
        int $i0;
        java.lang.Object r1;

        r0 := @this: org.apache.commons.collections.set.ListOrderedSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.set.ListOrderedSet: java.util.List setOrder>;

        $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1);

        return $i0;
    }

    public void add(int, java.lang.Object)
    {
        org.apache.commons.collections.set.ListOrderedSet r0;
        java.util.List $r3;
        java.util.Collection $r2;
        int i0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.set.ListOrderedSet;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.commons.collections.set.ListOrderedSet: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r2 = r0.<org.apache.commons.collections.set.ListOrderedSet: java.util.Collection collection>;

        interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>(r1);

        $r3 = r0.<org.apache.commons.collections.set.ListOrderedSet: java.util.List setOrder>;

        interfaceinvoke $r3.<java.util.List: void add(int,java.lang.Object)>(i0, r1);

     label1:
        return;
    }

    public boolean addAll(int, java.util.Collection)
    {
        org.apache.commons.collections.set.ListOrderedSet r3;
        java.util.Iterator $r1;
        java.util.Collection r0, $r4;
        java.util.List $r5;
        int i0;
        java.lang.Object $r2;
        boolean $z0, $z1, z2;

        r3 := @this: org.apache.commons.collections.set.ListOrderedSet;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.Collection;

        z2 = 0;

        $r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $z1 = virtualinvoke r3.<org.apache.commons.collections.set.ListOrderedSet: boolean contains(java.lang.Object)>($r2);

        if $z1 != 0 goto label2;

        $r4 = r3.<org.apache.commons.collections.set.ListOrderedSet: java.util.Collection collection>;

        interfaceinvoke $r4.<java.util.Collection: boolean add(java.lang.Object)>($r2);

        $r5 = r3.<org.apache.commons.collections.set.ListOrderedSet: java.util.List setOrder>;

        interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>(i0, $r2);

        i0 = i0 + 1;

        z2 = 1;

     label2:
        goto label1;

     label3:
        return z2;
    }

    public java.lang.Object remove(int)
    {
        org.apache.commons.collections.set.ListOrderedSet r0;
        java.util.List $r1;
        int i0;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.collections.set.ListOrderedSet;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.collections.set.ListOrderedSet: java.util.List setOrder>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>(i0);

        virtualinvoke r0.<org.apache.commons.collections.set.ListOrderedSet: boolean remove(java.lang.Object)>($r2);

        return $r2;
    }

    public java.lang.String toString()
    {
        org.apache.commons.collections.set.ListOrderedSet r0;
        java.util.List $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.collections.set.ListOrderedSet;

        $r1 = r0.<org.apache.commons.collections.set.ListOrderedSet: java.util.List setOrder>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections.set.ListOrderedSet: long serialVersionUID> = -228664372470420141L;

        return;
    }
}
