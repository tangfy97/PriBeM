class com.google.inject.internal.Exceptions extends java.lang.Object
{

    void <init>()
    {
        com.google.inject.internal.Exceptions r0;

        r0 := @this: com.google.inject.internal.Exceptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.RuntimeException throwCleanly(java.lang.reflect.InvocationTargetException)
    {
        java.lang.Throwable $r1, r5;
        com.google.inject.internal.Exceptions$UnhandledCheckedUserException $r2;
        java.lang.Error $r3;
        java.lang.RuntimeException $r4;
        java.lang.reflect.InvocationTargetException r0;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.reflect.InvocationTargetException;

        r5 = r0;

        $r1 = virtualinvoke r0.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r1 == null goto label1;

        r5 = virtualinvoke r0.<java.lang.Throwable: java.lang.Throwable getCause()>();

     label1:
        $z0 = r5 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label2;

        $r4 = (java.lang.RuntimeException) r5;

        throw $r4;

     label2:
        $z1 = r5 instanceof java.lang.Error;

        if $z1 == 0 goto label3;

        $r3 = (java.lang.Error) r5;

        throw $r3;

     label3:
        $r2 = new com.google.inject.internal.Exceptions$UnhandledCheckedUserException;

        specialinvoke $r2.<com.google.inject.internal.Exceptions$UnhandledCheckedUserException: void <init>(java.lang.Throwable)>(r5);

        throw $r2;
    }
}
