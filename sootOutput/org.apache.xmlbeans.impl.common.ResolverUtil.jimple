public class org.apache.xmlbeans.impl.common.ResolverUtil extends java.lang.Object
{
    private static org.xml.sax.EntityResolver _entityResolver;
    static java.lang.Class class$java$lang$String;

    public void <init>()
    {
        org.apache.xmlbeans.impl.common.ResolverUtil r0;

        r0 := @this: org.apache.xmlbeans.impl.common.ResolverUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.xml.sax.EntityResolver getGlobalEntityResolver()
    {
        org.xml.sax.EntityResolver $r0;

        $r0 = <org.apache.xmlbeans.impl.common.ResolverUtil: org.xml.sax.EntityResolver _entityResolver>;

        return $r0;
    }

    public static org.xml.sax.EntityResolver resolverForCatalog(java.lang.String)
    {
        java.lang.Object[] $r4, $r13;
        java.lang.String[] $r9;
        java.lang.reflect.Constructor $r3, $r12;
        java.lang.String r0;
        java.lang.reflect.Method $r8;
        org.xml.sax.EntityResolver $r15;
        java.lang.Class[] $r2, $r6, $r11;
        java.lang.Exception $r16;
        java.lang.Class $r1, $r7, $r10, $r17;
        java.lang.Object $r5, $r14;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.xml.resolver.CatalogManager");

        $r2 = newarray (java.lang.Class)[0];

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r2);

        $r4 = newarray (java.lang.Object)[0];

        $r5 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r4);

        $r6 = newarray (java.lang.Class)[1];

        $r7 = <org.apache.xmlbeans.impl.common.ResolverUtil: java.lang.Class class$java$lang$String>;

        if $r7 != null goto label2;

        $r17 = staticinvoke <org.apache.xmlbeans.impl.common.ResolverUtil: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xmlbeans.impl.common.ResolverUtil: java.lang.Class class$java$lang$String> = $r17;

        goto label3;

     label2:
        $r17 = <org.apache.xmlbeans.impl.common.ResolverUtil: java.lang.Class class$java$lang$String>;

     label3:
        $r6[0] = $r17;

        $r8 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setCatalogFiles", $r6);

        $r9 = newarray (java.lang.String)[1];

        $r9[0] = r0;

        virtualinvoke $r8.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r5, $r9);

        $r10 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.xml.resolver.tools.CatalogResolver");

        $r11 = newarray (java.lang.Class)[1];

        $r11[0] = $r1;

        $r12 = virtualinvoke $r10.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r11);

        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = $r5;

        $r14 = virtualinvoke $r12.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r13);

        $r15 = (org.xml.sax.EntityResolver) $r14;

     label4:
        return $r15;

     label5:
        $r16 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r1;
        java.lang.Object $r2;
        java.lang.String $r0;
        org.xml.sax.EntityResolver $r3;
        java.lang.Exception $r4;

        <org.apache.xmlbeans.impl.common.ResolverUtil: org.xml.sax.EntityResolver _entityResolver> = null;

     label1:
        $r0 = staticinvoke <org.apache.xmlbeans.SystemProperties: java.lang.String getProperty(java.lang.String)>("xmlbean.entityResolver");

        if $r0 == null goto label2;

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r0);

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object newInstance()>();

        $r3 = (org.xml.sax.EntityResolver) $r2;

        <org.apache.xmlbeans.impl.common.ResolverUtil: org.xml.sax.EntityResolver _entityResolver> = $r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        <org.apache.xmlbeans.impl.common.ResolverUtil: org.xml.sax.EntityResolver _entityResolver> = null;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
