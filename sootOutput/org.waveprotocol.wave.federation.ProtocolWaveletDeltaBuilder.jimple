public final class org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder extends java.lang.Object
{
    private org.waveprotocol.wave.federation.ProtocolHashedVersion hashedVersion;
    private java.lang.String author;
    private final java.util.List operation;
    private final java.util.List addressPath;

    public void <init>()
    {
        org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder: java.util.List operation> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder: java.util.List addressPath> = $r2;

        return;
    }

    public org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder setHashedVersion(org.waveprotocol.wave.federation.ProtocolHashedVersion)
    {
        org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder r0;
        org.waveprotocol.wave.federation.ProtocolHashedVersion r1;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolHashedVersion;

        r0.<org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder: org.waveprotocol.wave.federation.ProtocolHashedVersion hashedVersion> = r1;

        return r0;
    }

    public org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder setAuthor(java.lang.String)
    {
        org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder;

        r1 := @parameter0: java.lang.String;

        r0.<org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder: java.lang.String author> = r1;

        return r0;
    }

    public org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder addAllOperation(java.util.List)
    {
        java.util.List r0;
        org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder r2;
        java.util.Iterator $r1;
        org.waveprotocol.wave.federation.ProtocolWaveletOperation r4;
        java.lang.Object $r3;
        boolean $z0;

        r2 := @this: org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.waveprotocol.wave.federation.ProtocolWaveletOperation) $r3;

        virtualinvoke r2.<org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder: org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder addOperation(org.waveprotocol.wave.federation.ProtocolWaveletOperation)>(r4);

        goto label1;

     label2:
        return r2;
    }

    public org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder setOperation(int, org.waveprotocol.wave.federation.ProtocolWaveletOperation)
    {
        org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder r0;
        java.util.List $r2;
        int i0;
        org.waveprotocol.wave.federation.ProtocolWaveletOperation r1;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: org.waveprotocol.wave.federation.ProtocolWaveletOperation;

        $r2 = r0.<org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder: java.util.List operation>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return r0;
    }

    public org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder addOperation(org.waveprotocol.wave.federation.ProtocolWaveletOperation)
    {
        org.waveprotocol.wave.federation.ProtocolWaveletOperation r1;
        org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder r0;
        java.util.List $r2;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolWaveletOperation;

        $r2 = r0.<org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder: java.util.List operation>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder clearOperation()
    {
        org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder r0;
        java.util.List $r1;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder;

        $r1 = r0.<org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder: java.util.List operation>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return r0;
    }

    public org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder addAllAddressPath(java.util.List)
    {
        org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder r0;
        java.util.List r1, $r2;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder: java.util.List addressPath>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return r0;
    }

    public org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder setAddressPath(int, java.lang.String)
    {
        org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder r0;
        java.util.List $r2;
        int i0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder: java.util.List addressPath>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return r0;
    }

    public org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder addAddressPath(java.lang.String)
    {
        org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder r0;
        java.util.List $r2;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder: java.util.List addressPath>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder clearAddressPath()
    {
        org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder r0;
        java.util.List $r1;

        r0 := @this: org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder;

        $r1 = r0.<org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder: java.util.List addressPath>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return r0;
    }

    public org.waveprotocol.wave.federation.ProtocolWaveletDelta build(org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder$Factory)
    {
        org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder r2;
        java.util.List $r5, $r6;
        org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder$Factory r0;
        org.waveprotocol.wave.federation.ProtocolWaveletDelta $r1;
        org.waveprotocol.wave.federation.ProtocolHashedVersion $r3;
        java.lang.String $r4;

        r2 := @this: org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder;

        r0 := @parameter0: org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder$Factory;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder$Factory: org.waveprotocol.wave.federation.ProtocolWaveletDelta create()>();

        $r3 = r2.<org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder: org.waveprotocol.wave.federation.ProtocolHashedVersion hashedVersion>;

        interfaceinvoke $r1.<org.waveprotocol.wave.federation.ProtocolWaveletDelta: void setHashedVersion(org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r3);

        $r4 = r2.<org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder: java.lang.String author>;

        interfaceinvoke $r1.<org.waveprotocol.wave.federation.ProtocolWaveletDelta: void setAuthor(java.lang.String)>($r4);

        interfaceinvoke $r1.<org.waveprotocol.wave.federation.ProtocolWaveletDelta: void clearOperation()>();

        $r5 = r2.<org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder: java.util.List operation>;

        interfaceinvoke $r1.<org.waveprotocol.wave.federation.ProtocolWaveletDelta: void addAllOperation(java.util.List)>($r5);

        interfaceinvoke $r1.<org.waveprotocol.wave.federation.ProtocolWaveletDelta: void clearAddressPath()>();

        $r6 = r2.<org.waveprotocol.wave.federation.ProtocolWaveletDeltaBuilder: java.util.List addressPath>;

        interfaceinvoke $r1.<org.waveprotocol.wave.federation.ProtocolWaveletDelta: void addAllAddressPath(java.util.List)>($r6);

        return $r1;
    }
}
