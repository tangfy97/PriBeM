public class ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset extends ucar.nc2.dt.trajectory.TrajectoryObsDatasetImpl implements ucar.nc2.dt.TypedDatasetFactoryIF
{
    private static java.lang.String dimName;
    private static java.lang.String dimVarName;
    private static java.lang.String latVarName;
    private static java.lang.String lonVarName;
    private static java.lang.String elevVarName;
    private static java.lang.String trajId;
    ucar.nc2.dataset.NetcdfDataset localNCD;

    public static boolean isValidFile(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dt.trajectory.TrajectoryObsDatasetImpl$Config $r1;
        ucar.nc2.dataset.NetcdfDataset r0;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r1 = staticinvoke <ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: ucar.nc2.dt.trajectory.TrajectoryObsDatasetImpl$Config buildConfig(ucar.nc2.dataset.NetcdfDataset)>(r0);

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static ucar.nc2.dt.trajectory.TrajectoryObsDatasetImpl$Config buildConfig(ucar.nc2.dataset.NetcdfDataset)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        ucar.nc2.Group $r1, $r7, $r16, $r25, $r34;
        java.util.List $r2, $r10, $r19, $r28, $r37;
        ucar.nc2.Attribute $r14, $r23, $r32, $r41;
        int $i0, $i1, $i2, $i3, $i4;
        ucar.nc2.dt.trajectory.TrajectoryObsDatasetImpl$Config $r6;
        ucar.nc2.Variable $r9, $r18, $r27, $r36;
        java.lang.String $r4, $r5, $r8, $r12, $r13, $r15, $r17, $r21, $r22, $r24, $r26, $r30, $r31, $r33, $r35, $r39, $r40, $r42, $r43;
        java.lang.Object $r3, $r11, $r20, $r29, $r38;
        ucar.nc2.Dimension r44, r45, r46, r47, r48;
        ucar.nc2.dataset.NetcdfDataset r0;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r2 = virtualinvoke $r1.<ucar.nc2.Group: java.util.List getDimensions()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 == 1 goto label01;

        return null;

     label01:
        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        r44 = (ucar.nc2.Dimension) $r3;

        $r4 = virtualinvoke r44.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r5 = <ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: java.lang.String dimName>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label02;

        return null;

     label02:
        $r6 = new ucar.nc2.dt.trajectory.TrajectoryObsDatasetImpl$Config;

        specialinvoke $r6.<ucar.nc2.dt.trajectory.TrajectoryObsDatasetImpl$Config: void <init>()>();

        virtualinvoke $r6.<ucar.nc2.dt.trajectory.TrajectoryObsDatasetImpl$Config: void setTrajectoryDim(ucar.nc2.Dimension)>(r44);

        $r7 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r8 = <ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: java.lang.String dimVarName>;

        $r9 = virtualinvoke $r7.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r8);

        if $r9 != null goto label03;

        return null;

     label03:
        $r10 = virtualinvoke $r9.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

        if $i1 == 1 goto label04;

        return null;

     label04:
        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(0);

        r45 = (ucar.nc2.Dimension) $r11;

        $r12 = virtualinvoke r45.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r13 = <ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: java.lang.String dimName>;

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 != 0 goto label05;

        return null;

     label05:
        $r14 = virtualinvoke $r9.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("units");

        $r15 = virtualinvoke $r14.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $z2 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>($r15, "km");

        if $z2 != 0 goto label06;

        return null;

     label06:
        virtualinvoke $r6.<ucar.nc2.dt.trajectory.TrajectoryObsDatasetImpl$Config: void setDimensionVar(ucar.nc2.Variable)>($r9);

        $r16 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r17 = <ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: java.lang.String latVarName>;

        $r18 = virtualinvoke $r16.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r17);

        if $r18 != null goto label07;

        return null;

     label07:
        $r19 = virtualinvoke $r18.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $i2 = interfaceinvoke $r19.<java.util.List: int size()>();

        if $i2 == 1 goto label08;

        return null;

     label08:
        $r20 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>(0);

        r46 = (ucar.nc2.Dimension) $r20;

        $r21 = virtualinvoke r46.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r22 = <ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: java.lang.String dimName>;

        $z3 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z3 != 0 goto label09;

        return null;

     label09:
        $r23 = virtualinvoke $r18.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("units");

        $r24 = virtualinvoke $r23.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $z4 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>($r24, "deg");

        if $z4 != 0 goto label10;

        return null;

     label10:
        virtualinvoke $r6.<ucar.nc2.dt.trajectory.TrajectoryObsDatasetImpl$Config: void setLatVar(ucar.nc2.Variable)>($r18);

        $r25 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r26 = <ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: java.lang.String lonVarName>;

        $r27 = virtualinvoke $r25.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r26);

        if $r27 != null goto label11;

        return null;

     label11:
        $r28 = virtualinvoke $r27.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $i3 = interfaceinvoke $r28.<java.util.List: int size()>();

        if $i3 == 1 goto label12;

        return null;

     label12:
        $r29 = interfaceinvoke $r28.<java.util.List: java.lang.Object get(int)>(0);

        r47 = (ucar.nc2.Dimension) $r29;

        $r30 = virtualinvoke r47.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r31 = <ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: java.lang.String dimName>;

        $z5 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        if $z5 != 0 goto label13;

        return null;

     label13:
        $r32 = virtualinvoke $r27.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("units");

        $r33 = virtualinvoke $r32.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $z6 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>($r33, "deg");

        if $z6 != 0 goto label14;

        return null;

     label14:
        virtualinvoke $r6.<ucar.nc2.dt.trajectory.TrajectoryObsDatasetImpl$Config: void setLonVar(ucar.nc2.Variable)>($r27);

        $r34 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r35 = <ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: java.lang.String elevVarName>;

        $r36 = virtualinvoke $r34.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r35);

        if $r36 != null goto label15;

        return null;

     label15:
        $r37 = virtualinvoke $r36.<ucar.nc2.Variable: java.util.List getDimensions()>();

        $i4 = interfaceinvoke $r37.<java.util.List: int size()>();

        if $i4 == 1 goto label16;

        return null;

     label16:
        $r38 = interfaceinvoke $r37.<java.util.List: java.lang.Object get(int)>(0);

        r48 = (ucar.nc2.Dimension) $r38;

        $r39 = virtualinvoke r48.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r40 = <ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: java.lang.String dimName>;

        $z7 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>($r40);

        if $z7 != 0 goto label17;

        return null;

     label17:
        $r41 = virtualinvoke $r36.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("units");

        $r42 = virtualinvoke $r41.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        $z8 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>($r42, "km");

        if $z8 != 0 goto label18;

        return null;

     label18:
        virtualinvoke $r6.<ucar.nc2.dt.trajectory.TrajectoryObsDatasetImpl$Config: void setElevVar(ucar.nc2.Variable)>($r36);

        $r43 = <ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: java.lang.String trajId>;

        virtualinvoke $r6.<ucar.nc2.dt.trajectory.TrajectoryObsDatasetImpl$Config: void setTrajectoryId(java.lang.String)>($r43);

        return $r6;
    }

    public java.util.Date getStartDate()
    {
        java.util.Date $r6;
        long $l0, $l1;
        java.util.Calendar $r0;
        ucar.nc2.Attribute $r3;
        ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset r1;
        java.lang.Number $r4;
        ucar.nc2.dataset.NetcdfDataset $r2, $r5;
        double $d0;

        r1 := @this: ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset;

        $r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r2 = r1.<ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: ucar.nc2.dataset.NetcdfDataset localNCD>;

        $r3 = virtualinvoke $r2.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("start_time");

        $r4 = virtualinvoke $r3.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $l0 = (long) $d0;

        $l1 = $l0 * 1000L;

        virtualinvoke $r0.<java.util.Calendar: void setTimeInMillis(long)>($l1);

        $r5 = r1.<ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: ucar.nc2.dataset.NetcdfDataset localNCD>;

        $r6 = virtualinvoke r1.<ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: java.util.Date getTime(ucar.nc2.dataset.NetcdfDataset)>($r5);

        return $r6;
    }

    public java.util.Date getEndDate()
    {
        java.util.Date $r9, $r10;
        long $l0, $l1, l2;
        java.util.Calendar $r0;
        ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset r1;
        java.lang.Number $r4, $r7;
        double $d0, $d1, d2;
        ucar.nc2.Attribute $r3, $r6;
        ucar.nc2.dataset.NetcdfDataset $r2, $r5, $r8;

        r1 := @this: ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset;

        $r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r2 = r1.<ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: ucar.nc2.dataset.NetcdfDataset localNCD>;

        $r3 = virtualinvoke $r2.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("stop_time");

        $r4 = virtualinvoke $r3.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = r1.<ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: ucar.nc2.dataset.NetcdfDataset localNCD>;

        $r6 = virtualinvoke $r5.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("start_time");

        $r7 = virtualinvoke $r6.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $d1 = virtualinvoke $r7.<java.lang.Number: double doubleValue()>();

        d2 = $d0 - $d1;

        $r8 = r1.<ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: ucar.nc2.dataset.NetcdfDataset localNCD>;

        $r9 = virtualinvoke r1.<ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: java.util.Date getTime(ucar.nc2.dataset.NetcdfDataset)>($r8);

        $l0 = virtualinvoke $r9.<java.util.Date: long getTime()>();

        $l1 = (long) d2;

        l2 = $l0 + $l1;

        virtualinvoke $r0.<java.util.Calendar: void setTimeInMillis(long)>(l2);

        $r10 = virtualinvoke $r0.<java.util.Calendar: java.util.Date getTime()>();

        return $r10;
    }

    java.util.Date getTime(ucar.nc2.dataset.NetcdfDataset)
    {
        java.util.GregorianCalendar $r1;
        java.util.TimeZone $r2;
        java.util.Date $r3;
        ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        ucar.nc2.dataset.NetcdfDataset r0;

        r4 := @this: ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $i0 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: int readAttributeInteger(ucar.nc2.Variable,java.lang.String,int)>(null, "year", 0);

        $i1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: int readAttributeInteger(ucar.nc2.Variable,java.lang.String,int)>(null, "month", 0);

        $i2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: int readAttributeInteger(ucar.nc2.Variable,java.lang.String,int)>(null, "day", 0);

        $i3 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: int readAttributeInteger(ucar.nc2.Variable,java.lang.String,int)>(null, "hour", 0);

        $i4 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: int readAttributeInteger(ucar.nc2.Variable,java.lang.String,int)>(null, "minute", 0);

        $i5 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: int readAttributeInteger(ucar.nc2.Variable,java.lang.String,int)>(null, "second", 0);

        $r1 = new java.util.GregorianCalendar;

        $r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        specialinvoke $r1.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>($r2);

        virtualinvoke $r1.<java.util.Calendar: void clear()>();

        $i6 = $i1 - 1;

        virtualinvoke $r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($i0, $i6, $i2, $i3, $i4, $i5);

        $r3 = virtualinvoke $r1.<java.util.Calendar: java.util.Date getTime()>();

        return $r3;
    }

    protected void setStartDate()
    {
        ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset r0;

        r0 := @this: ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset;

        return;
    }

    protected void setEndDate()
    {
        ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset r0;

        r0 := @this: ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset;

        return;
    }

    public boolean isMine(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.NetcdfDataset r0;
        ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset r1;
        boolean $z0;

        r1 := @this: ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $z0 = staticinvoke <ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: boolean isValidFile(ucar.nc2.dataset.NetcdfDataset)>(r0);

        return $z0;
    }

    public ucar.nc2.dt.TypedDataset open(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask, java.lang.StringBuilder) throws java.io.IOException
    {
        ucar.nc2.util.CancelTask r3;
        ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset $r0, r2;
        java.lang.StringBuilder r4;
        ucar.nc2.dataset.NetcdfDataset r1;

        r2 := @this: ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter1: ucar.nc2.util.CancelTask;

        r4 := @parameter2: java.lang.StringBuilder;

        $r0 = new ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset;

        specialinvoke $r0.<ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        return $r0;
    }

    public ucar.nc2.constants.FeatureType getScientificDataType()
    {
        ucar.nc2.constants.FeatureType $r0;
        ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset r1;

        r1 := @this: ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset;

        $r0 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType TRAJECTORY>;

        return $r0;
    }

    public void <init>()
    {
        ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset r0;

        r0 := @this: ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset;

        specialinvoke r0.<ucar.nc2.dt.trajectory.TrajectoryObsDatasetImpl: void <init>()>();

        return;
    }

    public void <init>(ucar.nc2.dataset.NetcdfDataset) throws java.io.IOException
    {
        ucar.nc2.dt.trajectory.TrajectoryObsDatasetImpl$Config $r2;
        ucar.nc2.dataset.NetcdfDataset r1;
        ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset r0;

        r0 := @this: ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        specialinvoke r0.<ucar.nc2.dt.trajectory.TrajectoryObsDatasetImpl: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        r0.<ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: ucar.nc2.dataset.NetcdfDataset localNCD> = r1;

        $r2 = staticinvoke <ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: ucar.nc2.dt.trajectory.TrajectoryObsDatasetImpl$Config buildConfig(ucar.nc2.dataset.NetcdfDataset)>(r1);

        virtualinvoke r0.<ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: void setTrajectoryInfo(ucar.nc2.dt.trajectory.TrajectoryObsDatasetImpl$Config)>($r2);

        return;
    }

    static void <clinit>()
    {
        <ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: java.lang.String dimName> = "MSL_alt";

        <ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: java.lang.String dimVarName> = "MSL_alt";

        <ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: java.lang.String latVarName> = "Lat";

        <ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: java.lang.String lonVarName> = "Lon";

        <ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: java.lang.String elevVarName> = "MSL_alt";

        <ucar.nc2.dt.trajectory.COSMICTrajectoryObsDataset: java.lang.String trajId> = "trajectory data";

        return;
    }
}
