class org.waveprotocol.wave.model.supplement.GadgetStateCollection$2 extends java.lang.Object implements org.waveprotocol.wave.model.util.ReadableStringSet$Proc
{
    final org.waveprotocol.wave.model.supplement.GadgetStateCollection this$0;

    void <init>(org.waveprotocol.wave.model.supplement.GadgetStateCollection)
    {
        org.waveprotocol.wave.model.supplement.GadgetStateCollection r1;
        org.waveprotocol.wave.model.supplement.GadgetStateCollection$2 r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.GadgetStateCollection$2;

        r1 := @parameter0: org.waveprotocol.wave.model.supplement.GadgetStateCollection;

        r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection$2: org.waveprotocol.wave.model.supplement.GadgetStateCollection this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void apply(java.lang.String)
    {
        org.waveprotocol.wave.model.supplement.GadgetStateCollection $r1;
        org.waveprotocol.wave.model.supplement.GadgetState $r5;
        java.lang.Object $r4;
        org.waveprotocol.wave.model.util.StringMap $r2;
        java.lang.String r3;
        org.waveprotocol.wave.model.supplement.GadgetStateCollection$2 r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.GadgetStateCollection$2;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.GadgetStateCollection$2: org.waveprotocol.wave.model.supplement.GadgetStateCollection this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.model.supplement.GadgetStateCollection: org.waveprotocol.wave.model.util.StringMap access$000(org.waveprotocol.wave.model.supplement.GadgetStateCollection)>($r1);

        $r4 = interfaceinvoke $r2.<org.waveprotocol.wave.model.util.StringMap: java.lang.Object get(java.lang.String)>(r3);

        $r5 = (org.waveprotocol.wave.model.supplement.GadgetState) $r4;

        interfaceinvoke $r5.<org.waveprotocol.wave.model.supplement.GadgetState: void remove()>();

        return;
    }
}
