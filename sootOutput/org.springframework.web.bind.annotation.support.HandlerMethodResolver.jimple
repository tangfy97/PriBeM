public class org.springframework.web.bind.'annotation'.support.HandlerMethodResolver extends java.lang.Object
{
    private final java.util.Set handlerMethods;
    private final java.util.Set initBinderMethods;
    private final java.util.Set modelAttributeMethods;
    private org.springframework.web.bind.'annotation'.RequestMapping typeLevelMapping;
    private boolean sessionAttributesFound;
    private final java.util.Set sessionAttributeNames;
    private final java.util.Set sessionAttributeTypes;
    private final java.util.Set actualSessionAttributeNames;

    public void <init>()
    {
        org.springframework.web.bind.'annotation'.support.HandlerMethodResolver r0;
        java.util.Set $r7;
        java.util.HashSet $r4, $r5, $r6;
        java.util.LinkedHashSet $r1, $r2, $r3;

        r0 := @this: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashSet;

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>()>();

        r0.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: java.util.Set handlerMethods> = $r1;

        $r2 = new java.util.LinkedHashSet;

        specialinvoke $r2.<java.util.LinkedHashSet: void <init>()>();

        r0.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: java.util.Set initBinderMethods> = $r2;

        $r3 = new java.util.LinkedHashSet;

        specialinvoke $r3.<java.util.LinkedHashSet: void <init>()>();

        r0.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: java.util.Set modelAttributeMethods> = $r3;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r0.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: java.util.Set sessionAttributeNames> = $r4;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r0.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: java.util.Set sessionAttributeTypes> = $r5;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>(int)>(4);

        $r7 = staticinvoke <java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>($r6);

        r0.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: java.util.Set actualSessionAttributeNames> = $r7;

        return;
    }

    public void init(java.lang.Class)
    {
        org.springframework.web.bind.'annotation'.support.HandlerMethodResolver r8;
        org.springframework.web.bind.'annotation'.RequestMapping $r11;
        java.lang.String[] $r14;
        org.springframework.web.bind.'annotation'.support.HandlerMethodResolver$1 $r7;
        org.springframework.web.bind.'annotation'.SessionAttributes r24;
        java.util.LinkedHashSet $r0;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r5;
        java.util.Collection $r4, $r16, $r20;
        java.lang.Class[] $r2, $r18;
        java.util.Set $r13, $r17;
        java.util.List $r3, $r15, $r19;
        org.springframework.util.ReflectionUtils$MethodFilter $r9;
        java.lang.'annotation'.Annotation $r10, $r12;
        java.lang.Class r1, r21, r22, $r23;
        java.lang.Object $r6;

        r8 := @this: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver;

        r1 := @parameter0: java.lang.Class;

        $r0 = new java.util.LinkedHashSet;

        specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>();

        r21 = null;

        $z0 = staticinvoke <java.lang.reflect.Proxy: boolean isProxyClass(java.lang.Class)>(r1);

        if $z0 != 0 goto label1;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>(r1);

        r21 = r1;

     label1:
        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        $r4 = (java.util.Collection) $r3;

        interfaceinvoke $r0.<java.util.Set: boolean addAll(java.util.Collection)>($r4);

        $r5 = interfaceinvoke $r0.<java.util.Set: java.util.Iterator iterator()>();

        goto label5;

     label2:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r22 = (java.lang.Class) $r6;

        if r21 == null goto label3;

        $r23 = r21;

        goto label4;

     label3:
        $r23 = r22;

     label4:
        $r7 = new org.springframework.web.bind.'annotation'.support.HandlerMethodResolver$1;

        specialinvoke $r7.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver$1: void <init>(org.springframework.web.bind.'annotation'.support.HandlerMethodResolver,java.lang.Class)>(r8, $r23);

        $r9 = <org.springframework.util.ReflectionUtils: org.springframework.util.ReflectionUtils$MethodFilter USER_DECLARED_METHODS>;

        staticinvoke <org.springframework.util.ReflectionUtils: void doWithMethods(java.lang.Class,org.springframework.util.ReflectionUtils$MethodCallback,org.springframework.util.ReflectionUtils$MethodFilter)>(r22, $r7, $r9);

     label5:
        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label2;

        $r10 = staticinvoke <org.springframework.core.'annotation'.AnnotationUtils: java.lang.'annotation'.Annotation findAnnotation(java.lang.Class,java.lang.Class)>(r1, class "Lorg/springframework/web/bind/annotation/RequestMapping;");

        $r11 = (org.springframework.web.bind.'annotation'.RequestMapping) $r10;

        r8.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: org.springframework.web.bind.'annotation'.RequestMapping typeLevelMapping> = $r11;

        $r12 = staticinvoke <org.springframework.core.'annotation'.AnnotationUtils: java.lang.'annotation'.Annotation findAnnotation(java.lang.Class,java.lang.Class)>(r1, class "Lorg/springframework/web/bind/annotation/SessionAttributes;");

        r24 = (org.springframework.web.bind.'annotation'.SessionAttributes) $r12;

        if r24 == null goto label6;

        $z3 = 1;

        goto label7;

     label6:
        $z3 = 0;

     label7:
        r8.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: boolean sessionAttributesFound> = $z3;

        $z1 = r8.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: boolean sessionAttributesFound>;

        if $z1 == 0 goto label8;

        $r13 = r8.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: java.util.Set sessionAttributeNames>;

        $r14 = interfaceinvoke r24.<org.springframework.web.bind.'annotation'.SessionAttributes: java.lang.String[] value()>();

        $r15 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r14);

        $r16 = (java.util.Collection) $r15;

        interfaceinvoke $r13.<java.util.Set: boolean addAll(java.util.Collection)>($r16);

        $r17 = r8.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: java.util.Set sessionAttributeTypes>;

        $r18 = interfaceinvoke r24.<org.springframework.web.bind.'annotation'.SessionAttributes: java.lang.Class[] types()>();

        $r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r18);

        $r20 = (java.util.Collection) $r19;

        interfaceinvoke $r17.<java.util.Set: boolean addAll(java.util.Collection)>($r20);

     label8:
        return;
    }

    protected boolean isHandlerMethod(java.lang.reflect.Method)
    {
        java.lang.'annotation'.Annotation $r1;
        org.springframework.web.bind.'annotation'.support.HandlerMethodResolver r2;
        java.lang.reflect.Method r0;

        r2 := @this: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver;

        r0 := @parameter0: java.lang.reflect.Method;

        $r1 = staticinvoke <org.springframework.core.'annotation'.AnnotationUtils: java.lang.'annotation'.Annotation findAnnotation(java.lang.reflect.Method,java.lang.Class)>(r0, class "Lorg/springframework/web/bind/annotation/RequestMapping;");

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    protected boolean isInitBinderMethod(java.lang.reflect.Method)
    {
        java.lang.'annotation'.Annotation $r1;
        org.springframework.web.bind.'annotation'.support.HandlerMethodResolver r2;
        java.lang.reflect.Method r0;

        r2 := @this: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver;

        r0 := @parameter0: java.lang.reflect.Method;

        $r1 = staticinvoke <org.springframework.core.'annotation'.AnnotationUtils: java.lang.'annotation'.Annotation findAnnotation(java.lang.reflect.Method,java.lang.Class)>(r0, class "Lorg/springframework/web/bind/annotation/InitBinder;");

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    protected boolean isModelAttributeMethod(java.lang.reflect.Method)
    {
        java.lang.'annotation'.Annotation $r1;
        org.springframework.web.bind.'annotation'.support.HandlerMethodResolver r2;
        java.lang.reflect.Method r0;

        r2 := @this: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver;

        r0 := @parameter0: java.lang.reflect.Method;

        $r1 = staticinvoke <org.springframework.core.'annotation'.AnnotationUtils: java.lang.'annotation'.Annotation findAnnotation(java.lang.reflect.Method,java.lang.Class)>(r0, class "Lorg/springframework/web/bind/annotation/ModelAttribute;");

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean hasHandlerMethods()
    {
        org.springframework.web.bind.'annotation'.support.HandlerMethodResolver r0;
        java.util.Set $r1;
        boolean $z0, $z1;

        r0 := @this: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver;

        $r1 = r0.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: java.util.Set handlerMethods>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $z1 = 0;

        goto label2;

     label1:
        $z1 = 1;

     label2:
        return $z1;
    }

    public final java.util.Set getHandlerMethods()
    {
        org.springframework.web.bind.'annotation'.support.HandlerMethodResolver r0;
        java.util.Set $r1;

        r0 := @this: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver;

        $r1 = r0.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: java.util.Set handlerMethods>;

        return $r1;
    }

    public final java.util.Set getInitBinderMethods()
    {
        org.springframework.web.bind.'annotation'.support.HandlerMethodResolver r0;
        java.util.Set $r1;

        r0 := @this: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver;

        $r1 = r0.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: java.util.Set initBinderMethods>;

        return $r1;
    }

    public final java.util.Set getModelAttributeMethods()
    {
        org.springframework.web.bind.'annotation'.support.HandlerMethodResolver r0;
        java.util.Set $r1;

        r0 := @this: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver;

        $r1 = r0.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: java.util.Set modelAttributeMethods>;

        return $r1;
    }

    public boolean hasTypeLevelMapping()
    {
        org.springframework.web.bind.'annotation'.support.HandlerMethodResolver r0;
        org.springframework.web.bind.'annotation'.RequestMapping $r1;

        r0 := @this: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver;

        $r1 = r0.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: org.springframework.web.bind.'annotation'.RequestMapping typeLevelMapping>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public org.springframework.web.bind.'annotation'.RequestMapping getTypeLevelMapping()
    {
        org.springframework.web.bind.'annotation'.support.HandlerMethodResolver r0;
        org.springframework.web.bind.'annotation'.RequestMapping $r1;

        r0 := @this: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver;

        $r1 = r0.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: org.springframework.web.bind.'annotation'.RequestMapping typeLevelMapping>;

        return $r1;
    }

    public boolean hasSessionAttributes()
    {
        org.springframework.web.bind.'annotation'.support.HandlerMethodResolver r0;
        boolean $z0;

        r0 := @this: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver;

        $z0 = r0.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: boolean sessionAttributesFound>;

        return $z0;
    }

    public boolean isSessionAttribute(java.lang.String, java.lang.Class)
    {
        org.springframework.web.bind.'annotation'.support.HandlerMethodResolver r0;
        java.util.Set $r2, $r3, $r5;
        java.lang.Class r4;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Class;

        $r2 = r0.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: java.util.Set sessionAttributeNames>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r5 = r0.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: java.util.Set sessionAttributeTypes>;

        $z1 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>(r4);

        if $z1 == 0 goto label2;

     label1:
        $r3 = r0.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: java.util.Set actualSessionAttributeNames>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return 1;

     label2:
        return 0;
    }

    public java.util.Set getActualSessionAttributeNames()
    {
        org.springframework.web.bind.'annotation'.support.HandlerMethodResolver r0;
        java.util.Set $r1;

        r0 := @this: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver;

        $r1 = r0.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: java.util.Set actualSessionAttributeNames>;

        return $r1;
    }

    static java.util.Set access$0(org.springframework.web.bind.'annotation'.support.HandlerMethodResolver)
    {
        org.springframework.web.bind.'annotation'.support.HandlerMethodResolver r0;
        java.util.Set $r1;

        r0 := @parameter0: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver;

        $r1 = r0.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: java.util.Set handlerMethods>;

        return $r1;
    }

    static java.util.Set access$1(org.springframework.web.bind.'annotation'.support.HandlerMethodResolver)
    {
        org.springframework.web.bind.'annotation'.support.HandlerMethodResolver r0;
        java.util.Set $r1;

        r0 := @parameter0: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver;

        $r1 = r0.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: java.util.Set initBinderMethods>;

        return $r1;
    }

    static java.util.Set access$2(org.springframework.web.bind.'annotation'.support.HandlerMethodResolver)
    {
        org.springframework.web.bind.'annotation'.support.HandlerMethodResolver r0;
        java.util.Set $r1;

        r0 := @parameter0: org.springframework.web.bind.'annotation'.support.HandlerMethodResolver;

        $r1 = r0.<org.springframework.web.bind.'annotation'.support.HandlerMethodResolver: java.util.Set modelAttributeMethods>;

        return $r1;
    }
}
