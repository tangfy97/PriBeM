public final class javax.xml.bind.DatatypeConverter extends java.lang.Object
{
    private static javax.xml.bind.DatatypeConverterInterface theConverter;
    private static final javax.xml.bind.JAXBPermission SET_DATATYPE_CONVERTER_PERMISSION;

    private void <init>()
    {
        javax.xml.bind.DatatypeConverter r0;

        r0 := @this: javax.xml.bind.DatatypeConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void setDatatypeConverter(javax.xml.bind.DatatypeConverterInterface)
    {
        javax.xml.bind.JAXBPermission $r3;
        java.lang.String $r5;
        java.lang.IllegalArgumentException $r4;
        javax.xml.bind.DatatypeConverterInterface r0, $r1;
        java.lang.SecurityManager $r2;

        r0 := @parameter0: javax.xml.bind.DatatypeConverterInterface;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = staticinvoke <javax.xml.bind.Messages: java.lang.String format(java.lang.String)>("DatatypeConverter.ConverterMustNotBeNull");

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label1:
        $r1 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r1 != null goto label3;

        $r2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if $r2 == null goto label2;

        $r3 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.JAXBPermission SET_DATATYPE_CONVERTER_PERMISSION>;

        virtualinvoke $r2.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r3);

     label2:
        <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter> = r0;

     label3:
        return;
    }

    private static synchronized void initConverter()
    {
        javax.xml.bind.DatatypeConverterImpl $r0;

        $r0 = new javax.xml.bind.DatatypeConverterImpl;

        specialinvoke $r0.<javax.xml.bind.DatatypeConverterImpl: void <init>()>();

        <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter> = $r0;

        return;
    }

    public static java.lang.String parseString(java.lang.String)
    {
        java.lang.String r1, $r3;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r3 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: java.lang.String parseString(java.lang.String)>(r1);

        return $r3;
    }

    public static java.math.BigInteger parseInteger(java.lang.String)
    {
        java.math.BigInteger $r3;
        java.lang.String r1;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r3 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: java.math.BigInteger parseInteger(java.lang.String)>(r1);

        return $r3;
    }

    public static int parseInt(java.lang.String)
    {
        int $i0;
        java.lang.String r1;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $i0 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: int parseInt(java.lang.String)>(r1);

        return $i0;
    }

    public static long parseLong(java.lang.String)
    {
        long $l0;
        java.lang.String r1;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $l0 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: long parseLong(java.lang.String)>(r1);

        return $l0;
    }

    public static short parseShort(java.lang.String)
    {
        short $s0;
        java.lang.String r1;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $s0 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: short parseShort(java.lang.String)>(r1);

        return $s0;
    }

    public static java.math.BigDecimal parseDecimal(java.lang.String)
    {
        java.math.BigDecimal $r3;
        java.lang.String r1;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r3 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: java.math.BigDecimal parseDecimal(java.lang.String)>(r1);

        return $r3;
    }

    public static float parseFloat(java.lang.String)
    {
        float $f0;
        java.lang.String r1;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $f0 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: float parseFloat(java.lang.String)>(r1);

        return $f0;
    }

    public static double parseDouble(java.lang.String)
    {
        java.lang.String r1;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;
        double $d0;

        r1 := @parameter0: java.lang.String;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $d0 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: double parseDouble(java.lang.String)>(r1);

        return $d0;
    }

    public static boolean parseBoolean(java.lang.String)
    {
        java.lang.String r1;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $z0 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: boolean parseBoolean(java.lang.String)>(r1);

        return $z0;
    }

    public static byte parseByte(java.lang.String)
    {
        byte $b0;
        java.lang.String r1;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $b0 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: byte parseByte(java.lang.String)>(r1);

        return $b0;
    }

    public static javax.xml.namespace.QName parseQName(java.lang.String, javax.xml.namespace.NamespaceContext)
    {
        javax.xml.namespace.NamespaceContext r2;
        java.lang.String r1;
        javax.xml.namespace.QName $r4;
        javax.xml.bind.DatatypeConverterInterface $r0, $r3;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.xml.namespace.NamespaceContext;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r3 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r4 = interfaceinvoke $r3.<javax.xml.bind.DatatypeConverterInterface: javax.xml.namespace.QName parseQName(java.lang.String,javax.xml.namespace.NamespaceContext)>(r1, r2);

        return $r4;
    }

    public static java.util.Calendar parseDateTime(java.lang.String)
    {
        java.util.Calendar $r3;
        java.lang.String r1;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r3 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: java.util.Calendar parseDateTime(java.lang.String)>(r1);

        return $r3;
    }

    public static byte[] parseBase64Binary(java.lang.String)
    {
        byte[] $r3;
        java.lang.String r1;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r3 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: byte[] parseBase64Binary(java.lang.String)>(r1);

        return $r3;
    }

    public static byte[] parseHexBinary(java.lang.String)
    {
        byte[] $r3;
        java.lang.String r1;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r3 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: byte[] parseHexBinary(java.lang.String)>(r1);

        return $r3;
    }

    public static long parseUnsignedInt(java.lang.String)
    {
        long $l0;
        java.lang.String r1;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $l0 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: long parseUnsignedInt(java.lang.String)>(r1);

        return $l0;
    }

    public static int parseUnsignedShort(java.lang.String)
    {
        int $i0;
        java.lang.String r1;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $i0 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: int parseUnsignedShort(java.lang.String)>(r1);

        return $i0;
    }

    public static java.util.Calendar parseTime(java.lang.String)
    {
        java.util.Calendar $r3;
        java.lang.String r1;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r3 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: java.util.Calendar parseTime(java.lang.String)>(r1);

        return $r3;
    }

    public static java.util.Calendar parseDate(java.lang.String)
    {
        java.util.Calendar $r3;
        java.lang.String r1;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r3 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: java.util.Calendar parseDate(java.lang.String)>(r1);

        return $r3;
    }

    public static java.lang.String parseAnySimpleType(java.lang.String)
    {
        java.lang.String r1, $r3;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r3 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: java.lang.String parseAnySimpleType(java.lang.String)>(r1);

        return $r3;
    }

    public static java.lang.String printString(java.lang.String)
    {
        java.lang.String r1, $r3;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r3 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: java.lang.String printString(java.lang.String)>(r1);

        return $r3;
    }

    public static java.lang.String printInteger(java.math.BigInteger)
    {
        java.math.BigInteger r1;
        java.lang.String $r3;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;

        r1 := @parameter0: java.math.BigInteger;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r3 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: java.lang.String printInteger(java.math.BigInteger)>(r1);

        return $r3;
    }

    public static java.lang.String printInt(int)
    {
        int i0;
        java.lang.String $r2;
        javax.xml.bind.DatatypeConverterInterface $r0, $r1;

        i0 := @parameter0: int;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r1 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r2 = interfaceinvoke $r1.<javax.xml.bind.DatatypeConverterInterface: java.lang.String printInt(int)>(i0);

        return $r2;
    }

    public static java.lang.String printLong(long)
    {
        long l0;
        java.lang.String $r2;
        javax.xml.bind.DatatypeConverterInterface $r0, $r1;

        l0 := @parameter0: long;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r1 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r2 = interfaceinvoke $r1.<javax.xml.bind.DatatypeConverterInterface: java.lang.String printLong(long)>(l0);

        return $r2;
    }

    public static java.lang.String printShort(short)
    {
        short s0;
        java.lang.String $r2;
        javax.xml.bind.DatatypeConverterInterface $r0, $r1;

        s0 := @parameter0: short;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r1 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r2 = interfaceinvoke $r1.<javax.xml.bind.DatatypeConverterInterface: java.lang.String printShort(short)>(s0);

        return $r2;
    }

    public static java.lang.String printDecimal(java.math.BigDecimal)
    {
        java.math.BigDecimal r1;
        java.lang.String $r3;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;

        r1 := @parameter0: java.math.BigDecimal;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r3 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: java.lang.String printDecimal(java.math.BigDecimal)>(r1);

        return $r3;
    }

    public static java.lang.String printFloat(float)
    {
        float f0;
        java.lang.String $r2;
        javax.xml.bind.DatatypeConverterInterface $r0, $r1;

        f0 := @parameter0: float;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r1 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r2 = interfaceinvoke $r1.<javax.xml.bind.DatatypeConverterInterface: java.lang.String printFloat(float)>(f0);

        return $r2;
    }

    public static java.lang.String printDouble(double)
    {
        java.lang.String $r2;
        javax.xml.bind.DatatypeConverterInterface $r0, $r1;
        double d0;

        d0 := @parameter0: double;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r1 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r2 = interfaceinvoke $r1.<javax.xml.bind.DatatypeConverterInterface: java.lang.String printDouble(double)>(d0);

        return $r2;
    }

    public static java.lang.String printBoolean(boolean)
    {
        java.lang.String $r2;
        javax.xml.bind.DatatypeConverterInterface $r0, $r1;
        boolean z0;

        z0 := @parameter0: boolean;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r1 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r2 = interfaceinvoke $r1.<javax.xml.bind.DatatypeConverterInterface: java.lang.String printBoolean(boolean)>(z0);

        return $r2;
    }

    public static java.lang.String printByte(byte)
    {
        byte b0;
        java.lang.String $r2;
        javax.xml.bind.DatatypeConverterInterface $r0, $r1;

        b0 := @parameter0: byte;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r1 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r2 = interfaceinvoke $r1.<javax.xml.bind.DatatypeConverterInterface: java.lang.String printByte(byte)>(b0);

        return $r2;
    }

    public static java.lang.String printQName(javax.xml.namespace.QName, javax.xml.namespace.NamespaceContext)
    {
        javax.xml.namespace.NamespaceContext r2;
        javax.xml.namespace.QName r1;
        java.lang.String $r4;
        javax.xml.bind.DatatypeConverterInterface $r0, $r3;

        r1 := @parameter0: javax.xml.namespace.QName;

        r2 := @parameter1: javax.xml.namespace.NamespaceContext;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r3 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r4 = interfaceinvoke $r3.<javax.xml.bind.DatatypeConverterInterface: java.lang.String printQName(javax.xml.namespace.QName,javax.xml.namespace.NamespaceContext)>(r1, r2);

        return $r4;
    }

    public static java.lang.String printDateTime(java.util.Calendar)
    {
        java.util.Calendar r1;
        java.lang.String $r3;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;

        r1 := @parameter0: java.util.Calendar;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r3 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: java.lang.String printDateTime(java.util.Calendar)>(r1);

        return $r3;
    }

    public static java.lang.String printBase64Binary(byte[])
    {
        byte[] r1;
        java.lang.String $r3;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;

        r1 := @parameter0: byte[];

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r3 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: java.lang.String printBase64Binary(byte[])>(r1);

        return $r3;
    }

    public static java.lang.String printHexBinary(byte[])
    {
        byte[] r1;
        java.lang.String $r3;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;

        r1 := @parameter0: byte[];

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r3 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: java.lang.String printHexBinary(byte[])>(r1);

        return $r3;
    }

    public static java.lang.String printUnsignedInt(long)
    {
        long l0;
        java.lang.String $r2;
        javax.xml.bind.DatatypeConverterInterface $r0, $r1;

        l0 := @parameter0: long;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r1 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r2 = interfaceinvoke $r1.<javax.xml.bind.DatatypeConverterInterface: java.lang.String printUnsignedInt(long)>(l0);

        return $r2;
    }

    public static java.lang.String printUnsignedShort(int)
    {
        int i0;
        java.lang.String $r2;
        javax.xml.bind.DatatypeConverterInterface $r0, $r1;

        i0 := @parameter0: int;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r1 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r2 = interfaceinvoke $r1.<javax.xml.bind.DatatypeConverterInterface: java.lang.String printUnsignedShort(int)>(i0);

        return $r2;
    }

    public static java.lang.String printTime(java.util.Calendar)
    {
        java.util.Calendar r1;
        java.lang.String $r3;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;

        r1 := @parameter0: java.util.Calendar;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r3 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: java.lang.String printTime(java.util.Calendar)>(r1);

        return $r3;
    }

    public static java.lang.String printDate(java.util.Calendar)
    {
        java.util.Calendar r1;
        java.lang.String $r3;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;

        r1 := @parameter0: java.util.Calendar;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r3 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: java.lang.String printDate(java.util.Calendar)>(r1);

        return $r3;
    }

    public static java.lang.String printAnySimpleType(java.lang.String)
    {
        java.lang.String r1, $r3;
        javax.xml.bind.DatatypeConverterInterface $r0, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        if $r0 != null goto label1;

        staticinvoke <javax.xml.bind.DatatypeConverter: void initConverter()>();

     label1:
        $r2 = <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter>;

        $r3 = interfaceinvoke $r2.<javax.xml.bind.DatatypeConverterInterface: java.lang.String printAnySimpleType(java.lang.String)>(r1);

        return $r3;
    }

    static void <clinit>()
    {
        javax.xml.bind.JAXBPermission $r0;

        <javax.xml.bind.DatatypeConverter: javax.xml.bind.DatatypeConverterInterface theConverter> = null;

        $r0 = new javax.xml.bind.JAXBPermission;

        specialinvoke $r0.<javax.xml.bind.JAXBPermission: void <init>(java.lang.String)>("setDatatypeConverter");

        <javax.xml.bind.DatatypeConverter: javax.xml.bind.JAXBPermission SET_DATATYPE_CONVERTER_PERMISSION> = $r0;

        return;
    }
}
