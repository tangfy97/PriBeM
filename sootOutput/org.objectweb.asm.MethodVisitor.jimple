public abstract class org.objectweb.asm.MethodVisitor extends java.lang.Object
{
    protected final int api;
    protected org.objectweb.asm.MethodVisitor mv;

    public void <init>(int)
    {
        int i0;
        org.objectweb.asm.MethodVisitor r0;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        specialinvoke r0.<org.objectweb.asm.MethodVisitor: void <init>(int,org.objectweb.asm.MethodVisitor)>(i0, null);

        return;
    }

    public void <init>(int, org.objectweb.asm.MethodVisitor)
    {
        org.objectweb.asm.MethodVisitor r0, r1;
        int i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: org.objectweb.asm.MethodVisitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 == 262144 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        r0.<org.objectweb.asm.MethodVisitor: int api> = i0;

        r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv> = r1;

        return;
    }

    public org.objectweb.asm.AnnotationVisitor visitAnnotationDefault()
    {
        org.objectweb.asm.AnnotationVisitor $r3;
        org.objectweb.asm.MethodVisitor r0, $r1, $r2;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        $r1 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r2 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        $r3 = virtualinvoke $r2.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.AnnotationVisitor visitAnnotationDefault()>();

        return $r3;

     label1:
        return null;
    }

    public org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)
    {
        org.objectweb.asm.AnnotationVisitor $r4;
        org.objectweb.asm.MethodVisitor r0, $r1, $r3;
        java.lang.String r2;
        boolean z0;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        r2 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r3 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        $r4 = virtualinvoke $r3.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>(r2, z0);

        return $r4;

     label1:
        return null;
    }

    public org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int, java.lang.String, boolean)
    {
        org.objectweb.asm.AnnotationVisitor $r4;
        org.objectweb.asm.MethodVisitor r0, $r1, $r3;
        int i0;
        java.lang.String r2;
        boolean z0;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r1 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r3 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        $r4 = virtualinvoke $r3.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>(i0, r2, z0);

        return $r4;

     label1:
        return null;
    }

    public void visitAttribute(org.objectweb.asm.Attribute)
    {
        org.objectweb.asm.MethodVisitor r0, $r1, $r3;
        org.objectweb.asm.Attribute r2;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        r2 := @parameter0: org.objectweb.asm.Attribute;

        $r1 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r3 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r3.<org.objectweb.asm.MethodVisitor: void visitAttribute(org.objectweb.asm.Attribute)>(r2);

     label1:
        return;
    }

    public void visitCode()
    {
        org.objectweb.asm.MethodVisitor r0, $r1, $r2;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        $r1 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r2 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r2.<org.objectweb.asm.MethodVisitor: void visitCode()>();

     label1:
        return;
    }

    public void visitFrame(int, int, java.lang.Object[], int, java.lang.Object[])
    {
        org.objectweb.asm.MethodVisitor r0, $r1, $r4;
        java.lang.Object[] r2, r3;
        int i0, i1, i2;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: java.lang.Object[];

        i2 := @parameter3: int;

        r3 := @parameter4: java.lang.Object[];

        $r1 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r4 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r4.<org.objectweb.asm.MethodVisitor: void visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])>(i0, i1, r2, i2, r3);

     label1:
        return;
    }

    public void visitInsn(int)
    {
        org.objectweb.asm.MethodVisitor r0, $r1, $r2;
        int i0;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        $r1 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r2 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r2.<org.objectweb.asm.MethodVisitor: void visitInsn(int)>(i0);

     label1:
        return;
    }

    public void visitIntInsn(int, int)
    {
        org.objectweb.asm.MethodVisitor r0, $r1, $r2;
        int i0, i1;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r2 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r2.<org.objectweb.asm.MethodVisitor: void visitIntInsn(int,int)>(i0, i1);

     label1:
        return;
    }

    public void visitVarInsn(int, int)
    {
        org.objectweb.asm.MethodVisitor r0, $r1, $r2;
        int i0, i1;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r2 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r2.<org.objectweb.asm.MethodVisitor: void visitVarInsn(int,int)>(i0, i1);

     label1:
        return;
    }

    public void visitTypeInsn(int, java.lang.String)
    {
        org.objectweb.asm.MethodVisitor r0, $r1, $r3;
        int i0;
        java.lang.String r2;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        $r1 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r3 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r3.<org.objectweb.asm.MethodVisitor: void visitTypeInsn(int,java.lang.String)>(i0, r2);

     label1:
        return;
    }

    public void visitFieldInsn(int, java.lang.String, java.lang.String, java.lang.String)
    {
        org.objectweb.asm.MethodVisitor r0, $r1, $r5;
        int i0;
        java.lang.String r2, r3, r4;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r1 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r5 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r5.<org.objectweb.asm.MethodVisitor: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>(i0, r2, r3, r4);

     label1:
        return;
    }

    public void visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String)
    {
        org.objectweb.asm.MethodVisitor r0, $r1, $r5;
        int i0;
        java.lang.String r2, r3, r4;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r1 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r5 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r5.<org.objectweb.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>(i0, r2, r3, r4);

     label1:
        return;
    }

    public transient void visitInvokeDynamicInsn(java.lang.String, java.lang.String, org.objectweb.asm.Handle, java.lang.Object[])
    {
        org.objectweb.asm.Handle r4;
        org.objectweb.asm.MethodVisitor r0, $r1, $r6;
        java.lang.Object[] r5;
        java.lang.String r2, r3;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: org.objectweb.asm.Handle;

        r5 := @parameter3: java.lang.Object[];

        $r1 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r6 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r6.<org.objectweb.asm.MethodVisitor: void visitInvokeDynamicInsn(java.lang.String,java.lang.String,org.objectweb.asm.Handle,java.lang.Object[])>(r2, r3, r4, r5);

     label1:
        return;
    }

    public void visitJumpInsn(int, org.objectweb.asm.Label)
    {
        org.objectweb.asm.MethodVisitor r0, $r1, $r3;
        int i0;
        org.objectweb.asm.Label r2;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        r2 := @parameter1: org.objectweb.asm.Label;

        $r1 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r3 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r3.<org.objectweb.asm.MethodVisitor: void visitJumpInsn(int,org.objectweb.asm.Label)>(i0, r2);

     label1:
        return;
    }

    public void visitLabel(org.objectweb.asm.Label)
    {
        org.objectweb.asm.MethodVisitor r0, $r1, $r3;
        org.objectweb.asm.Label r2;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        r2 := @parameter0: org.objectweb.asm.Label;

        $r1 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r3 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r3.<org.objectweb.asm.MethodVisitor: void visitLabel(org.objectweb.asm.Label)>(r2);

     label1:
        return;
    }

    public void visitLdcInsn(java.lang.Object)
    {
        org.objectweb.asm.MethodVisitor r0, $r1, $r3;
        java.lang.Object r2;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r3 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r3.<org.objectweb.asm.MethodVisitor: void visitLdcInsn(java.lang.Object)>(r2);

     label1:
        return;
    }

    public void visitIincInsn(int, int)
    {
        org.objectweb.asm.MethodVisitor r0, $r1, $r2;
        int i0, i1;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r2 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r2.<org.objectweb.asm.MethodVisitor: void visitIincInsn(int,int)>(i0, i1);

     label1:
        return;
    }

    public transient void visitTableSwitchInsn(int, int, org.objectweb.asm.Label, org.objectweb.asm.Label[])
    {
        org.objectweb.asm.MethodVisitor r0, $r1, $r4;
        int i0, i1;
        org.objectweb.asm.Label r2;
        org.objectweb.asm.Label[] r3;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: org.objectweb.asm.Label;

        r3 := @parameter3: org.objectweb.asm.Label[];

        $r1 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r4 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r4.<org.objectweb.asm.MethodVisitor: void visitTableSwitchInsn(int,int,org.objectweb.asm.Label,org.objectweb.asm.Label[])>(i0, i1, r2, r3);

     label1:
        return;
    }

    public void visitLookupSwitchInsn(org.objectweb.asm.Label, int[], org.objectweb.asm.Label[])
    {
        org.objectweb.asm.MethodVisitor r0, $r1, $r5;
        int[] r3;
        org.objectweb.asm.Label r2;
        org.objectweb.asm.Label[] r4;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        r2 := @parameter0: org.objectweb.asm.Label;

        r3 := @parameter1: int[];

        r4 := @parameter2: org.objectweb.asm.Label[];

        $r1 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r5 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r5.<org.objectweb.asm.MethodVisitor: void visitLookupSwitchInsn(org.objectweb.asm.Label,int[],org.objectweb.asm.Label[])>(r2, r3, r4);

     label1:
        return;
    }

    public void visitMultiANewArrayInsn(java.lang.String, int)
    {
        org.objectweb.asm.MethodVisitor r0, $r1, $r3;
        int i0;
        java.lang.String r2;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r3 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r3.<org.objectweb.asm.MethodVisitor: void visitMultiANewArrayInsn(java.lang.String,int)>(r2, i0);

     label1:
        return;
    }

    public void visitTryCatchBlock(org.objectweb.asm.Label, org.objectweb.asm.Label, org.objectweb.asm.Label, java.lang.String)
    {
        org.objectweb.asm.MethodVisitor r0, $r1, $r6;
        org.objectweb.asm.Label r2, r3, r4;
        java.lang.String r5;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        r2 := @parameter0: org.objectweb.asm.Label;

        r3 := @parameter1: org.objectweb.asm.Label;

        r4 := @parameter2: org.objectweb.asm.Label;

        r5 := @parameter3: java.lang.String;

        $r1 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r6 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r6.<org.objectweb.asm.MethodVisitor: void visitTryCatchBlock(org.objectweb.asm.Label,org.objectweb.asm.Label,org.objectweb.asm.Label,java.lang.String)>(r2, r3, r4, r5);

     label1:
        return;
    }

    public void visitLocalVariable(java.lang.String, java.lang.String, java.lang.String, org.objectweb.asm.Label, org.objectweb.asm.Label, int)
    {
        org.objectweb.asm.MethodVisitor r0, $r1, $r7;
        org.objectweb.asm.Label r5, r6;
        int i0;
        java.lang.String r2, r3, r4;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: org.objectweb.asm.Label;

        r6 := @parameter4: org.objectweb.asm.Label;

        i0 := @parameter5: int;

        $r1 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r7 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r7.<org.objectweb.asm.MethodVisitor: void visitLocalVariable(java.lang.String,java.lang.String,java.lang.String,org.objectweb.asm.Label,org.objectweb.asm.Label,int)>(r2, r3, r4, r5, r6, i0);

     label1:
        return;
    }

    public void visitLineNumber(int, org.objectweb.asm.Label)
    {
        org.objectweb.asm.MethodVisitor r0, $r1, $r3;
        int i0;
        org.objectweb.asm.Label r2;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        r2 := @parameter1: org.objectweb.asm.Label;

        $r1 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r3 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r3.<org.objectweb.asm.MethodVisitor: void visitLineNumber(int,org.objectweb.asm.Label)>(i0, r2);

     label1:
        return;
    }

    public void visitMaxs(int, int)
    {
        org.objectweb.asm.MethodVisitor r0, $r1, $r2;
        int i0, i1;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r2 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r2.<org.objectweb.asm.MethodVisitor: void visitMaxs(int,int)>(i0, i1);

     label1:
        return;
    }

    public void visitEnd()
    {
        org.objectweb.asm.MethodVisitor r0, $r1, $r2;

        r0 := @this: org.objectweb.asm.MethodVisitor;

        $r1 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        if $r1 == null goto label1;

        $r2 = r0.<org.objectweb.asm.MethodVisitor: org.objectweb.asm.MethodVisitor mv>;

        virtualinvoke $r2.<org.objectweb.asm.MethodVisitor: void visitEnd()>();

     label1:
        return;
    }
}
