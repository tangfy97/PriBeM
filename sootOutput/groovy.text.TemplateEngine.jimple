public abstract class groovy.text.TemplateEngine extends java.lang.Object
{

    public void <init>()
    {
        groovy.text.TemplateEngine r0;

        r0 := @this: groovy.text.TemplateEngine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract groovy.text.Template createTemplate(java.io.Reader) throws org.codehaus.groovy.control.CompilationFailedException, java.lang.ClassNotFoundException, java.io.IOException;

    public groovy.text.Template createTemplate(java.lang.String) throws org.codehaus.groovy.control.CompilationFailedException, java.lang.ClassNotFoundException, java.io.IOException
    {
        java.io.StringReader $r1;
        groovy.text.TemplateEngine r0;
        groovy.text.Template $r3;
        java.lang.String r2;

        r0 := @this: groovy.text.TemplateEngine;

        r2 := @parameter0: java.lang.String;

        $r1 = new java.io.StringReader;

        specialinvoke $r1.<java.io.StringReader: void <init>(java.lang.String)>(r2);

        $r3 = virtualinvoke r0.<groovy.text.TemplateEngine: groovy.text.Template createTemplate(java.io.Reader)>($r1);

        return $r3;
    }

    public groovy.text.Template createTemplate(java.io.File) throws org.codehaus.groovy.control.CompilationFailedException, java.lang.ClassNotFoundException, java.io.IOException
    {
        java.lang.Throwable $r4;
        groovy.text.TemplateEngine r2;
        groovy.text.Template $r3;
        java.io.FileReader $r0;
        java.io.File r1;

        r2 := @this: groovy.text.TemplateEngine;

        r1 := @parameter0: java.io.File;

        $r0 = new java.io.FileReader;

        specialinvoke $r0.<java.io.FileReader: void <init>(java.io.File)>(r1);

     label1:
        $r3 = virtualinvoke r2.<groovy.text.TemplateEngine: groovy.text.Template createTemplate(java.io.Reader)>($r0);

     label2:
        specialinvoke r2.<groovy.text.TemplateEngine: void closeReaderQuietly(java.io.Reader)>($r0);

        return $r3;

     label3:
        $r4 := @caughtexception;

     label4:
        specialinvoke r2.<groovy.text.TemplateEngine: void closeReaderQuietly(java.io.Reader)>($r0);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public groovy.text.Template createTemplate(java.net.URL) throws org.codehaus.groovy.control.CompilationFailedException, java.lang.ClassNotFoundException, java.io.IOException
    {
        java.lang.Throwable $r5;
        java.net.URL r1;
        groovy.text.TemplateEngine r3;
        groovy.text.Template $r4;
        java.io.InputStreamReader $r0;
        java.io.InputStream $r2;

        r3 := @this: groovy.text.TemplateEngine;

        r1 := @parameter0: java.net.URL;

        $r0 = new java.io.InputStreamReader;

        $r2 = virtualinvoke r1.<java.net.URL: java.io.InputStream openStream()>();

        specialinvoke $r0.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r2);

     label1:
        $r4 = virtualinvoke r3.<groovy.text.TemplateEngine: groovy.text.Template createTemplate(java.io.Reader)>($r0);

     label2:
        specialinvoke r3.<groovy.text.TemplateEngine: void closeReaderQuietly(java.io.Reader)>($r0);

        return $r4;

     label3:
        $r5 := @caughtexception;

     label4:
        specialinvoke r3.<groovy.text.TemplateEngine: void closeReaderQuietly(java.io.Reader)>($r0);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void closeReaderQuietly(java.io.Reader)
    {
        java.io.Reader r0;
        java.lang.Exception $r1;
        groovy.text.TemplateEngine r2;

        r2 := @this: groovy.text.TemplateEngine;

        r0 := @parameter0: java.io.Reader;

        if r0 == null goto label4;

     label1:
        virtualinvoke r0.<java.io.Reader: void close()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
