public final class org.apache.xerces.stax.events.CommentImpl extends org.apache.xerces.stax.events.XMLEventImpl implements javax.xml.stream.events.Comment
{
    private final java.lang.String fText;

    public void <init>(java.lang.String, javax.xml.stream.Location)
    {
        org.apache.xerces.stax.events.CommentImpl r0;
        javax.xml.stream.Location r1;
        java.lang.String r2, $r3;

        r0 := @this: org.apache.xerces.stax.events.CommentImpl;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: javax.xml.stream.Location;

        specialinvoke r0.<org.apache.xerces.stax.events.XMLEventImpl: void <init>(int,javax.xml.stream.Location)>(5, r1);

        if r2 == null goto label1;

        $r3 = r2;

        goto label2;

     label1:
        $r3 = "";

     label2:
        r0.<org.apache.xerces.stax.events.CommentImpl: java.lang.String fText> = $r3;

        return;
    }

    public java.lang.String getText()
    {
        org.apache.xerces.stax.events.CommentImpl r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xerces.stax.events.CommentImpl;

        $r1 = r0.<org.apache.xerces.stax.events.CommentImpl: java.lang.String fText>;

        return $r1;
    }

    public void writeAsEncodedUnicode(java.io.Writer) throws javax.xml.stream.XMLStreamException
    {
        org.apache.xerces.stax.events.CommentImpl r1;
        javax.xml.stream.XMLStreamException $r4;
        java.io.Writer r0;
        java.io.IOException $r3;
        java.lang.String $r2;

        r1 := @this: org.apache.xerces.stax.events.CommentImpl;

        r0 := @parameter0: java.io.Writer;

     label1:
        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("<!--");

        $r2 = r1.<org.apache.xerces.stax.events.CommentImpl: java.lang.String fText>;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>($r2);

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("-->");

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r4.<javax.xml.stream.XMLStreamException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
