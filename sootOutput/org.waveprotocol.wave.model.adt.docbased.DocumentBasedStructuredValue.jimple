public final class org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue extends java.lang.Object implements org.waveprotocol.wave.model.adt.ObservableStructuredValue, org.waveprotocol.wave.model.util.AttributeListener, org.waveprotocol.wave.model.util.DeletionListener
{
    private final org.waveprotocol.wave.model.document.MutableDocument document;
    private final java.lang.Object element;
    private final org.waveprotocol.wave.model.util.Serializer serializer;
    private final java.lang.Class keyClass;
    private final org.waveprotocol.wave.model.util.CopyOnWriteSet listeners;
    static final boolean $assertionsDisabled;

    public static org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue create(org.waveprotocol.wave.model.document.util.DocumentEventRouter, java.lang.Object, org.waveprotocol.wave.model.util.Serializer, java.lang.Class)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue $r0;
        org.waveprotocol.wave.model.util.Serializer r4;
        org.waveprotocol.wave.model.document.ObservableMutableDocument $r2;
        java.lang.Object r3;
        java.lang.Class r5;
        org.waveprotocol.wave.model.document.util.DocumentEventRouter r1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.DocumentEventRouter;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: org.waveprotocol.wave.model.util.Serializer;

        r5 := @parameter3: java.lang.Class;

        $r0 = new org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue;

        $r2 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.util.DocumentEventRouter: org.waveprotocol.wave.model.document.ObservableMutableDocument getDocument()>();

        specialinvoke $r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: void <init>(org.waveprotocol.wave.model.document.MutableDocument,java.lang.Object,org.waveprotocol.wave.model.util.Serializer,java.lang.Class)>($r2, r3, r4, r5);

        interfaceinvoke r1.<org.waveprotocol.wave.model.document.util.DocumentEventRouter: org.waveprotocol.wave.model.document.util.ListenerRegistration addAttributeListener(java.lang.Object,org.waveprotocol.wave.model.util.AttributeListener)>(r3, $r0);

        interfaceinvoke r1.<org.waveprotocol.wave.model.document.util.DocumentEventRouter: org.waveprotocol.wave.model.document.util.ListenerRegistration addDeletionListener(java.lang.Object,org.waveprotocol.wave.model.util.DeletionListener)>(r3, $r0);

        return $r0;
    }

    public static org.waveprotocol.wave.model.adt.docbased.Initializer createInitialiser(org.waveprotocol.wave.model.util.Serializer, java.util.Map)
    {
        org.waveprotocol.wave.model.util.Serializer r2;
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue$1 $r0;
        java.util.Map r1;

        r2 := @parameter0: org.waveprotocol.wave.model.util.Serializer;

        r1 := @parameter1: java.util.Map;

        $r0 = new org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue$1;

        specialinvoke $r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue$1: void <init>(java.util.Map,org.waveprotocol.wave.model.util.Serializer)>(r1, r2);

        return $r0;
    }

    private void <init>(org.waveprotocol.wave.model.document.MutableDocument, java.lang.Object, org.waveprotocol.wave.model.util.Serializer, java.lang.Class)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue r0;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r1;
        org.waveprotocol.wave.model.util.Serializer r4;
        java.lang.Object r3;
        java.lang.Class r5;
        org.waveprotocol.wave.model.document.MutableDocument r2;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue;

        r2 := @parameter0: org.waveprotocol.wave.model.document.MutableDocument;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: org.waveprotocol.wave.model.util.Serializer;

        r5 := @parameter3: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.waveprotocol.wave.model.util.CopyOnWriteSet: org.waveprotocol.wave.model.util.CopyOnWriteSet create()>();

        r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners> = $r1;

        r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: org.waveprotocol.wave.model.document.MutableDocument document> = r2;

        r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: java.lang.Object element> = r3;

        r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: org.waveprotocol.wave.model.util.Serializer serializer> = r4;

        r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: java.lang.Class keyClass> = r5;

        return;
    }

    public java.lang.Object get(java.lang.Enum)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue r0;
        org.waveprotocol.wave.model.util.Serializer $r6;
        org.waveprotocol.wave.model.document.MutableDocument $r2;
        java.lang.Enum r1;
        java.lang.Object $r3, $r7;
        java.lang.String $r4, $r5;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue;

        r1 := @parameter0: java.lang.Enum;

        $r2 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: org.waveprotocol.wave.model.document.MutableDocument document>;

        $r3 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: java.lang.Object element>;

        $r4 = virtualinvoke r1.<java.lang.Enum: java.lang.String toString()>();

        $r5 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.String getAttribute(java.lang.Object,java.lang.String)>($r3, $r4);

        $r6 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: org.waveprotocol.wave.model.util.Serializer serializer>;

        $r7 = interfaceinvoke $r6.<org.waveprotocol.wave.model.util.Serializer: java.lang.Object fromString(java.lang.String)>($r5);

        return $r7;
    }

    public void set(java.lang.Enum, java.lang.Object)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue r0;
        org.waveprotocol.wave.model.util.Serializer $r2;
        org.waveprotocol.wave.model.document.MutableDocument $r5;
        java.lang.Enum r4;
        java.lang.Object r1, $r6;
        java.lang.String $r3, $r7;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue;

        r4 := @parameter0: java.lang.Enum;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: org.waveprotocol.wave.model.util.Serializer serializer>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.util.Serializer: java.lang.String toString(java.lang.Object)>(r1);

        $r5 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: org.waveprotocol.wave.model.document.MutableDocument document>;

        $r6 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: java.lang.Object element>;

        $r7 = virtualinvoke r4.<java.lang.Enum: java.lang.String toString()>();

        interfaceinvoke $r5.<org.waveprotocol.wave.model.document.MutableDocument: void setElementAttribute(java.lang.Object,java.lang.String,java.lang.String)>($r6, $r7, $r3);

        return;
    }

    public void set(java.util.Map)
    {
        java.util.HashMap $r0;
        java.lang.Enum $r13;
        java.util.Map r1;
        java.lang.String $r11, $r14;
        boolean $z0;
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue r4;
        java.util.Map$Entry r8;
        java.util.Iterator $r3;
        org.waveprotocol.wave.model.util.Serializer $r9;
        java.util.Set $r2;
        org.waveprotocol.wave.model.document.MutableDocument $r6;
        java.lang.Object $r5, $r7, $r10, $r12;

        r4 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue;

        r1 := @parameter0: java.util.Map;

        $r0 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: java.util.HashMap newHashMap()>();

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r7;

        $r9 = r4.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: org.waveprotocol.wave.model.util.Serializer serializer>;

        $r10 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = interfaceinvoke $r9.<org.waveprotocol.wave.model.util.Serializer: java.lang.String toString(java.lang.Object)>($r10);

        $r12 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (java.lang.Enum) $r12;

        $r14 = virtualinvoke $r13.<java.lang.Enum: java.lang.String toString()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r11);

        goto label1;

     label2:
        $r6 = r4.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: org.waveprotocol.wave.model.document.MutableDocument document>;

        $r5 = r4.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: java.lang.Object element>;

        interfaceinvoke $r6.<org.waveprotocol.wave.model.document.MutableDocument: void updateElementAttributes(java.lang.Object,java.util.Map)>($r5, $r0);

        return;
    }

    public void onAttributesChanged(java.lang.Object, java.util.Map, java.util.Map)
    {
        java.lang.Enum r8;
        java.util.Map r9, r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue r2;
        java.util.Set $r5, $r6;
        java.lang.Object[] $r4;
        java.util.HashMap $r0, $r1;
        java.lang.AssertionError $r7, $r26;
        int $i0, i1;
        java.lang.String $r10, $r11, $r14, $r20, $r21, $r22;
        org.waveprotocol.wave.model.util.Serializer $r16, $r18;
        java.lang.Enum[] $r25;
        java.lang.Class $r3;
        java.lang.Object $r12, $r15, $r17, $r19, r23, $r24;

        r2 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue;

        r23 := @parameter0: java.lang.Object;

        r9 := @parameter1: java.util.Map;

        r13 := @parameter2: java.util.Map;

        $z0 = <org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r24 = r2.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: java.lang.Object element>;

        $z7 = virtualinvoke r23.<java.lang.Object: boolean equals(java.lang.Object)>($r24);

        if $z7 != 0 goto label1;

        $r26 = new java.lang.AssertionError;

        specialinvoke $r26.<java.lang.AssertionError: void <init>(java.lang.Object)>("Received event for unrelated element");

        throw $r26;

     label1:
        $r0 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: java.util.HashMap newHashMap()>();

        $r1 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: java.util.HashMap newHashMap()>();

        $r3 = r2.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: java.lang.Class keyClass>;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object[] getEnumConstants()>();

        $r25 = (java.lang.Enum[]) $r4;

        $i0 = lengthof $r25;

        i1 = 0;

     label2:
        if i1 >= $i0 goto label5;

        r8 = $r25[i1];

        $r10 = virtualinvoke r8.<java.lang.Enum: java.lang.String toString()>();

        $z4 = interfaceinvoke r9.<java.util.Map: boolean containsKey(java.lang.Object)>($r10);

        if $z4 != 0 goto label3;

        $r20 = virtualinvoke r8.<java.lang.Enum: java.lang.String toString()>();

        $z6 = interfaceinvoke r13.<java.util.Map: boolean containsKey(java.lang.Object)>($r20);

        if $z6 == 0 goto label4;

     label3:
        $r11 = virtualinvoke r8.<java.lang.Enum: java.lang.String toString()>();

        $r12 = interfaceinvoke r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        $r21 = (java.lang.String) $r12;

        $r14 = virtualinvoke r8.<java.lang.Enum: java.lang.String toString()>();

        $r15 = interfaceinvoke r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14);

        $r22 = (java.lang.String) $r15;

        $r16 = r2.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: org.waveprotocol.wave.model.util.Serializer serializer>;

        $r17 = interfaceinvoke $r16.<org.waveprotocol.wave.model.util.Serializer: java.lang.Object fromString(java.lang.String)>($r21);

        $r18 = r2.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: org.waveprotocol.wave.model.util.Serializer serializer>;

        $r19 = interfaceinvoke $r18.<org.waveprotocol.wave.model.util.Serializer: java.lang.Object fromString(java.lang.String)>($r22);

        $z5 = staticinvoke <org.waveprotocol.wave.model.util.ValueUtils: boolean notEqual(java.lang.Object,java.lang.Object)>($r17, $r19);

        if $z5 == 0 goto label4;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, $r17);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, $r19);

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        $z1 = <org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: boolean $assertionsDisabled>;

        if $z1 != 0 goto label6;

        $r5 = interfaceinvoke $r0.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $z3 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z3 != 0 goto label6;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label6:
        $z2 = interfaceinvoke $r0.<java.util.Map: boolean isEmpty()>();

        if $z2 != 0 goto label7;

        specialinvoke r2.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: void triggerOnValuesChanged(java.util.Map,java.util.Map)>($r0, $r1);

     label7:
        return;
    }

    public void onDeleted()
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue r0;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue;

        specialinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: void triggerOnDeleted()>();

        return;
    }

    private void triggerOnValuesChanged(java.util.Map, java.util.Map)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue r0;
        java.util.Iterator $r2;
        org.waveprotocol.wave.model.adt.ObservableStructuredValue$Listener r4;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r1;
        java.util.Map r5, r6;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue;

        r5 := @parameter0: java.util.Map;

        r6 := @parameter1: java.util.Map;

        $r1 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.waveprotocol.wave.model.adt.ObservableStructuredValue$Listener) $r3;

        interfaceinvoke r4.<org.waveprotocol.wave.model.adt.ObservableStructuredValue$Listener: void onValuesChanged(java.util.Map,java.util.Map)>(r5, r6);

        goto label1;

     label2:
        return;
    }

    private void triggerOnDeleted()
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue r0;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        org.waveprotocol.wave.model.adt.ObservableStructuredValue$Listener r4;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue;

        $r1 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.waveprotocol.wave.model.adt.ObservableStructuredValue$Listener) $r3;

        interfaceinvoke r4.<org.waveprotocol.wave.model.adt.ObservableStructuredValue$Listener: void onDeleted()>();

        goto label1;

     label2:
        return;
    }

    public void addListener(org.waveprotocol.wave.model.adt.ObservableStructuredValue$Listener)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue r0;
        org.waveprotocol.wave.model.adt.ObservableStructuredValue$Listener r1;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r2;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue;

        r1 := @parameter0: org.waveprotocol.wave.model.adt.ObservableStructuredValue$Listener;

        $r2 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeListener(org.waveprotocol.wave.model.adt.ObservableStructuredValue$Listener)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue r0;
        org.waveprotocol.wave.model.adt.ObservableStructuredValue$Listener r1;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r2;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue;

        r1 := @parameter0: org.waveprotocol.wave.model.adt.ObservableStructuredValue$Listener;

        $r2 = r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public volatile void removeListener(java.lang.Object)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue r0;
        java.lang.Object r1;
        org.waveprotocol.wave.model.adt.ObservableStructuredValue$Listener $r2;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.adt.ObservableStructuredValue$Listener) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: void removeListener(org.waveprotocol.wave.model.adt.ObservableStructuredValue$Listener)>($r2);

        return;
    }

    public volatile void addListener(java.lang.Object)
    {
        org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue r0;
        java.lang.Object r1;
        org.waveprotocol.wave.model.adt.ObservableStructuredValue$Listener $r2;

        r0 := @this: org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.adt.ObservableStructuredValue$Listener) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: void addListener(org.waveprotocol.wave.model.adt.ObservableStructuredValue$Listener)>($r2);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/model/adt/docbased/DocumentBasedStructuredValue;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: boolean $assertionsDisabled> = $z1;

        return;
    }
}
