public class org.apache.lucene.search.NRTManager$TrackingIndexWriter extends java.lang.Object
{
    private final org.apache.lucene.index.IndexWriter writer;
    private final java.util.concurrent.atomic.AtomicLong indexingGen;

    public void <init>(org.apache.lucene.index.IndexWriter)
    {
        org.apache.lucene.search.NRTManager$TrackingIndexWriter r0;
        java.util.concurrent.atomic.AtomicLong $r1;
        org.apache.lucene.index.IndexWriter r2;

        r0 := @this: org.apache.lucene.search.NRTManager$TrackingIndexWriter;

        r2 := @parameter0: org.apache.lucene.index.IndexWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(1L);

        r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: java.util.concurrent.atomic.AtomicLong indexingGen> = $r1;

        r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: org.apache.lucene.index.IndexWriter writer> = r2;

        return;
    }

    public long updateDocument(org.apache.lucene.index.Term, java.lang.Iterable, org.apache.lucene.analysis.Analyzer) throws java.io.IOException
    {
        org.apache.lucene.search.NRTManager$TrackingIndexWriter r0;
        java.util.concurrent.atomic.AtomicLong $r5;
        org.apache.lucene.index.IndexWriter $r4;
        org.apache.lucene.analysis.Analyzer r3;
        org.apache.lucene.index.Term r1;
        long $l0;
        java.lang.Iterable r2;

        r0 := @this: org.apache.lucene.search.NRTManager$TrackingIndexWriter;

        r1 := @parameter0: org.apache.lucene.index.Term;

        r2 := @parameter1: java.lang.Iterable;

        r3 := @parameter2: org.apache.lucene.analysis.Analyzer;

        $r4 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: org.apache.lucene.index.IndexWriter writer>;

        virtualinvoke $r4.<org.apache.lucene.index.IndexWriter: void updateDocument(org.apache.lucene.index.Term,java.lang.Iterable,org.apache.lucene.analysis.Analyzer)>(r1, r2, r3);

        $r5 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: java.util.concurrent.atomic.AtomicLong indexingGen>;

        $l0 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public long updateDocument(org.apache.lucene.index.Term, java.lang.Iterable) throws java.io.IOException
    {
        org.apache.lucene.search.NRTManager$TrackingIndexWriter r0;
        java.util.concurrent.atomic.AtomicLong $r4;
        org.apache.lucene.index.IndexWriter $r3;
        org.apache.lucene.index.Term r1;
        long $l0;
        java.lang.Iterable r2;

        r0 := @this: org.apache.lucene.search.NRTManager$TrackingIndexWriter;

        r1 := @parameter0: org.apache.lucene.index.Term;

        r2 := @parameter1: java.lang.Iterable;

        $r3 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: org.apache.lucene.index.IndexWriter writer>;

        virtualinvoke $r3.<org.apache.lucene.index.IndexWriter: void updateDocument(org.apache.lucene.index.Term,java.lang.Iterable)>(r1, r2);

        $r4 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: java.util.concurrent.atomic.AtomicLong indexingGen>;

        $l0 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public long updateDocuments(org.apache.lucene.index.Term, java.lang.Iterable, org.apache.lucene.analysis.Analyzer) throws java.io.IOException
    {
        org.apache.lucene.search.NRTManager$TrackingIndexWriter r0;
        java.util.concurrent.atomic.AtomicLong $r5;
        org.apache.lucene.index.IndexWriter $r4;
        org.apache.lucene.analysis.Analyzer r3;
        org.apache.lucene.index.Term r1;
        long $l0;
        java.lang.Iterable r2;

        r0 := @this: org.apache.lucene.search.NRTManager$TrackingIndexWriter;

        r1 := @parameter0: org.apache.lucene.index.Term;

        r2 := @parameter1: java.lang.Iterable;

        r3 := @parameter2: org.apache.lucene.analysis.Analyzer;

        $r4 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: org.apache.lucene.index.IndexWriter writer>;

        virtualinvoke $r4.<org.apache.lucene.index.IndexWriter: void updateDocuments(org.apache.lucene.index.Term,java.lang.Iterable,org.apache.lucene.analysis.Analyzer)>(r1, r2, r3);

        $r5 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: java.util.concurrent.atomic.AtomicLong indexingGen>;

        $l0 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public long updateDocuments(org.apache.lucene.index.Term, java.lang.Iterable) throws java.io.IOException
    {
        org.apache.lucene.search.NRTManager$TrackingIndexWriter r0;
        java.util.concurrent.atomic.AtomicLong $r4;
        org.apache.lucene.index.IndexWriter $r3;
        org.apache.lucene.index.Term r1;
        long $l0;
        java.lang.Iterable r2;

        r0 := @this: org.apache.lucene.search.NRTManager$TrackingIndexWriter;

        r1 := @parameter0: org.apache.lucene.index.Term;

        r2 := @parameter1: java.lang.Iterable;

        $r3 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: org.apache.lucene.index.IndexWriter writer>;

        virtualinvoke $r3.<org.apache.lucene.index.IndexWriter: void updateDocuments(org.apache.lucene.index.Term,java.lang.Iterable)>(r1, r2);

        $r4 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: java.util.concurrent.atomic.AtomicLong indexingGen>;

        $l0 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public long deleteDocuments(org.apache.lucene.index.Term) throws java.io.IOException
    {
        org.apache.lucene.search.NRTManager$TrackingIndexWriter r0;
        java.util.concurrent.atomic.AtomicLong $r3;
        org.apache.lucene.index.IndexWriter $r2;
        org.apache.lucene.index.Term r1;
        long $l0;

        r0 := @this: org.apache.lucene.search.NRTManager$TrackingIndexWriter;

        r1 := @parameter0: org.apache.lucene.index.Term;

        $r2 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: org.apache.lucene.index.IndexWriter writer>;

        virtualinvoke $r2.<org.apache.lucene.index.IndexWriter: void deleteDocuments(org.apache.lucene.index.Term)>(r1);

        $r3 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: java.util.concurrent.atomic.AtomicLong indexingGen>;

        $l0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public transient long deleteDocuments(org.apache.lucene.index.Term[]) throws java.io.IOException
    {
        org.apache.lucene.search.NRTManager$TrackingIndexWriter r0;
        java.util.concurrent.atomic.AtomicLong $r3;
        org.apache.lucene.index.IndexWriter $r2;
        long $l0;
        org.apache.lucene.index.Term[] r1;

        r0 := @this: org.apache.lucene.search.NRTManager$TrackingIndexWriter;

        r1 := @parameter0: org.apache.lucene.index.Term[];

        $r2 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: org.apache.lucene.index.IndexWriter writer>;

        virtualinvoke $r2.<org.apache.lucene.index.IndexWriter: void deleteDocuments(org.apache.lucene.index.Term[])>(r1);

        $r3 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: java.util.concurrent.atomic.AtomicLong indexingGen>;

        $l0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public long deleteDocuments(org.apache.lucene.search.Query) throws java.io.IOException
    {
        org.apache.lucene.search.NRTManager$TrackingIndexWriter r0;
        org.apache.lucene.search.Query r1;
        java.util.concurrent.atomic.AtomicLong $r3;
        org.apache.lucene.index.IndexWriter $r2;
        long $l0;

        r0 := @this: org.apache.lucene.search.NRTManager$TrackingIndexWriter;

        r1 := @parameter0: org.apache.lucene.search.Query;

        $r2 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: org.apache.lucene.index.IndexWriter writer>;

        virtualinvoke $r2.<org.apache.lucene.index.IndexWriter: void deleteDocuments(org.apache.lucene.search.Query)>(r1);

        $r3 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: java.util.concurrent.atomic.AtomicLong indexingGen>;

        $l0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public transient long deleteDocuments(org.apache.lucene.search.Query[]) throws java.io.IOException
    {
        org.apache.lucene.search.NRTManager$TrackingIndexWriter r0;
        java.util.concurrent.atomic.AtomicLong $r3;
        org.apache.lucene.index.IndexWriter $r2;
        long $l0;
        org.apache.lucene.search.Query[] r1;

        r0 := @this: org.apache.lucene.search.NRTManager$TrackingIndexWriter;

        r1 := @parameter0: org.apache.lucene.search.Query[];

        $r2 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: org.apache.lucene.index.IndexWriter writer>;

        virtualinvoke $r2.<org.apache.lucene.index.IndexWriter: void deleteDocuments(org.apache.lucene.search.Query[])>(r1);

        $r3 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: java.util.concurrent.atomic.AtomicLong indexingGen>;

        $l0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public long deleteAll() throws java.io.IOException
    {
        org.apache.lucene.search.NRTManager$TrackingIndexWriter r0;
        java.util.concurrent.atomic.AtomicLong $r2;
        org.apache.lucene.index.IndexWriter $r1;
        long $l0;

        r0 := @this: org.apache.lucene.search.NRTManager$TrackingIndexWriter;

        $r1 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: org.apache.lucene.index.IndexWriter writer>;

        virtualinvoke $r1.<org.apache.lucene.index.IndexWriter: void deleteAll()>();

        $r2 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: java.util.concurrent.atomic.AtomicLong indexingGen>;

        $l0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public long addDocument(java.lang.Iterable, org.apache.lucene.analysis.Analyzer) throws java.io.IOException
    {
        org.apache.lucene.search.NRTManager$TrackingIndexWriter r0;
        java.util.concurrent.atomic.AtomicLong $r4;
        org.apache.lucene.index.IndexWriter $r3;
        org.apache.lucene.analysis.Analyzer r2;
        long $l0;
        java.lang.Iterable r1;

        r0 := @this: org.apache.lucene.search.NRTManager$TrackingIndexWriter;

        r1 := @parameter0: java.lang.Iterable;

        r2 := @parameter1: org.apache.lucene.analysis.Analyzer;

        $r3 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: org.apache.lucene.index.IndexWriter writer>;

        virtualinvoke $r3.<org.apache.lucene.index.IndexWriter: void addDocument(java.lang.Iterable,org.apache.lucene.analysis.Analyzer)>(r1, r2);

        $r4 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: java.util.concurrent.atomic.AtomicLong indexingGen>;

        $l0 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public long addDocuments(java.lang.Iterable, org.apache.lucene.analysis.Analyzer) throws java.io.IOException
    {
        org.apache.lucene.search.NRTManager$TrackingIndexWriter r0;
        java.util.concurrent.atomic.AtomicLong $r4;
        org.apache.lucene.index.IndexWriter $r3;
        org.apache.lucene.analysis.Analyzer r2;
        long $l0;
        java.lang.Iterable r1;

        r0 := @this: org.apache.lucene.search.NRTManager$TrackingIndexWriter;

        r1 := @parameter0: java.lang.Iterable;

        r2 := @parameter1: org.apache.lucene.analysis.Analyzer;

        $r3 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: org.apache.lucene.index.IndexWriter writer>;

        virtualinvoke $r3.<org.apache.lucene.index.IndexWriter: void addDocuments(java.lang.Iterable,org.apache.lucene.analysis.Analyzer)>(r1, r2);

        $r4 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: java.util.concurrent.atomic.AtomicLong indexingGen>;

        $l0 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public long addDocument(java.lang.Iterable) throws java.io.IOException
    {
        org.apache.lucene.search.NRTManager$TrackingIndexWriter r0;
        java.util.concurrent.atomic.AtomicLong $r3;
        org.apache.lucene.index.IndexWriter $r2;
        long $l0;
        java.lang.Iterable r1;

        r0 := @this: org.apache.lucene.search.NRTManager$TrackingIndexWriter;

        r1 := @parameter0: java.lang.Iterable;

        $r2 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: org.apache.lucene.index.IndexWriter writer>;

        virtualinvoke $r2.<org.apache.lucene.index.IndexWriter: void addDocument(java.lang.Iterable)>(r1);

        $r3 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: java.util.concurrent.atomic.AtomicLong indexingGen>;

        $l0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public long addDocuments(java.lang.Iterable) throws java.io.IOException
    {
        org.apache.lucene.search.NRTManager$TrackingIndexWriter r0;
        java.util.concurrent.atomic.AtomicLong $r3;
        org.apache.lucene.index.IndexWriter $r2;
        long $l0;
        java.lang.Iterable r1;

        r0 := @this: org.apache.lucene.search.NRTManager$TrackingIndexWriter;

        r1 := @parameter0: java.lang.Iterable;

        $r2 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: org.apache.lucene.index.IndexWriter writer>;

        virtualinvoke $r2.<org.apache.lucene.index.IndexWriter: void addDocuments(java.lang.Iterable)>(r1);

        $r3 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: java.util.concurrent.atomic.AtomicLong indexingGen>;

        $l0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public transient long addIndexes(org.apache.lucene.store.Directory[]) throws java.io.IOException
    {
        org.apache.lucene.search.NRTManager$TrackingIndexWriter r0;
        org.apache.lucene.store.Directory[] r1;
        java.util.concurrent.atomic.AtomicLong $r3;
        org.apache.lucene.index.IndexWriter $r2;
        long $l0;

        r0 := @this: org.apache.lucene.search.NRTManager$TrackingIndexWriter;

        r1 := @parameter0: org.apache.lucene.store.Directory[];

        $r2 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: org.apache.lucene.index.IndexWriter writer>;

        virtualinvoke $r2.<org.apache.lucene.index.IndexWriter: void addIndexes(org.apache.lucene.store.Directory[])>(r1);

        $r3 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: java.util.concurrent.atomic.AtomicLong indexingGen>;

        $l0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public transient long addIndexes(org.apache.lucene.index.IndexReader[]) throws java.io.IOException
    {
        org.apache.lucene.search.NRTManager$TrackingIndexWriter r0;
        java.util.concurrent.atomic.AtomicLong $r3;
        org.apache.lucene.index.IndexWriter $r2;
        long $l0;
        org.apache.lucene.index.IndexReader[] r1;

        r0 := @this: org.apache.lucene.search.NRTManager$TrackingIndexWriter;

        r1 := @parameter0: org.apache.lucene.index.IndexReader[];

        $r2 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: org.apache.lucene.index.IndexWriter writer>;

        virtualinvoke $r2.<org.apache.lucene.index.IndexWriter: void addIndexes(org.apache.lucene.index.IndexReader[])>(r1);

        $r3 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: java.util.concurrent.atomic.AtomicLong indexingGen>;

        $l0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public long getGeneration()
    {
        org.apache.lucene.search.NRTManager$TrackingIndexWriter r0;
        java.util.concurrent.atomic.AtomicLong $r1;
        long $l0;

        r0 := @this: org.apache.lucene.search.NRTManager$TrackingIndexWriter;

        $r1 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: java.util.concurrent.atomic.AtomicLong indexingGen>;

        $l0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l0;
    }

    public org.apache.lucene.index.IndexWriter getIndexWriter()
    {
        org.apache.lucene.search.NRTManager$TrackingIndexWriter r0;
        org.apache.lucene.index.IndexWriter $r1;

        r0 := @this: org.apache.lucene.search.NRTManager$TrackingIndexWriter;

        $r1 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: org.apache.lucene.index.IndexWriter writer>;

        return $r1;
    }

    long getAndIncrementGeneration()
    {
        org.apache.lucene.search.NRTManager$TrackingIndexWriter r0;
        java.util.concurrent.atomic.AtomicLong $r1;
        long $l0;

        r0 := @this: org.apache.lucene.search.NRTManager$TrackingIndexWriter;

        $r1 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: java.util.concurrent.atomic.AtomicLong indexingGen>;

        $l0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: long getAndIncrement()>();

        return $l0;
    }

    public long tryDeleteDocument(org.apache.lucene.index.IndexReader, int) throws java.io.IOException
    {
        org.apache.lucene.search.NRTManager$TrackingIndexWriter r0;
        java.util.concurrent.atomic.AtomicLong $r3;
        org.apache.lucene.index.IndexWriter $r2;
        int i0;
        long $l1;
        org.apache.lucene.index.IndexReader r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.NRTManager$TrackingIndexWriter;

        r1 := @parameter0: org.apache.lucene.index.IndexReader;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: org.apache.lucene.index.IndexWriter writer>;

        $z0 = virtualinvoke $r2.<org.apache.lucene.index.IndexWriter: boolean tryDeleteDocument(org.apache.lucene.index.IndexReader,int)>(r1, i0);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.lucene.search.NRTManager$TrackingIndexWriter: java.util.concurrent.atomic.AtomicLong indexingGen>;

        $l1 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicLong: long get()>();

        return $l1;

     label1:
        return -1L;
    }
}
