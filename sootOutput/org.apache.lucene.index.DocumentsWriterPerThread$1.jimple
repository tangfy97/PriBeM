final class org.apache.lucene.index.DocumentsWriterPerThread$1 extends org.apache.lucene.index.DocumentsWriterPerThread$IndexingChain
{

    void <init>()
    {
        org.apache.lucene.index.DocumentsWriterPerThread$1 r0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterPerThread$1;

        specialinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThread$IndexingChain: void <init>()>();

        return;
    }

    org.apache.lucene.index.DocConsumer getChain(org.apache.lucene.index.DocumentsWriterPerThread)
    {
        org.apache.lucene.index.TermVectorsConsumer $r0;
        org.apache.lucene.index.TermsHash $r3, $r4;
        org.apache.lucene.index.DocFieldProcessor $r12;
        org.apache.lucene.index.DocValuesProcessor $r10;
        org.apache.lucene.index.DocumentsWriterPerThread$1 r13;
        org.apache.lucene.index.DocInverter $r6;
        org.apache.lucene.index.FreqProxTermsWriter $r2;
        org.apache.lucene.index.NormsConsumer $r5;
        org.apache.lucene.index.TwoStoredFieldsConsumers $r8;
        org.apache.lucene.index.StoredFieldsProcessor $r9;
        org.apache.lucene.util.Counter $r11;
        org.apache.lucene.index.DocumentsWriterPerThread$DocState $r7;
        org.apache.lucene.index.DocumentsWriterPerThread r1;

        r13 := @this: org.apache.lucene.index.DocumentsWriterPerThread$1;

        r1 := @parameter0: org.apache.lucene.index.DocumentsWriterPerThread;

        $r0 = new org.apache.lucene.index.TermVectorsConsumer;

        specialinvoke $r0.<org.apache.lucene.index.TermVectorsConsumer: void <init>(org.apache.lucene.index.DocumentsWriterPerThread)>(r1);

        $r2 = new org.apache.lucene.index.FreqProxTermsWriter;

        specialinvoke $r2.<org.apache.lucene.index.FreqProxTermsWriter: void <init>()>();

        $r3 = new org.apache.lucene.index.TermsHash;

        $r4 = new org.apache.lucene.index.TermsHash;

        specialinvoke $r4.<org.apache.lucene.index.TermsHash: void <init>(org.apache.lucene.index.DocumentsWriterPerThread,org.apache.lucene.index.TermsHashConsumer,boolean,org.apache.lucene.index.TermsHash)>(r1, $r0, 0, null);

        specialinvoke $r3.<org.apache.lucene.index.TermsHash: void <init>(org.apache.lucene.index.DocumentsWriterPerThread,org.apache.lucene.index.TermsHashConsumer,boolean,org.apache.lucene.index.TermsHash)>(r1, $r2, 1, $r4);

        $r5 = new org.apache.lucene.index.NormsConsumer;

        specialinvoke $r5.<org.apache.lucene.index.NormsConsumer: void <init>()>();

        $r6 = new org.apache.lucene.index.DocInverter;

        $r7 = r1.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        specialinvoke $r6.<org.apache.lucene.index.DocInverter: void <init>(org.apache.lucene.index.DocumentsWriterPerThread$DocState,org.apache.lucene.index.InvertedDocConsumer,org.apache.lucene.index.InvertedDocEndConsumer)>($r7, $r3, $r5);

        $r8 = new org.apache.lucene.index.TwoStoredFieldsConsumers;

        $r9 = new org.apache.lucene.index.StoredFieldsProcessor;

        specialinvoke $r9.<org.apache.lucene.index.StoredFieldsProcessor: void <init>(org.apache.lucene.index.DocumentsWriterPerThread)>(r1);

        $r10 = new org.apache.lucene.index.DocValuesProcessor;

        $r11 = r1.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.Counter bytesUsed>;

        specialinvoke $r10.<org.apache.lucene.index.DocValuesProcessor: void <init>(org.apache.lucene.util.Counter)>($r11);

        specialinvoke $r8.<org.apache.lucene.index.TwoStoredFieldsConsumers: void <init>(org.apache.lucene.index.StoredFieldsConsumer,org.apache.lucene.index.StoredFieldsConsumer)>($r9, $r10);

        $r12 = new org.apache.lucene.index.DocFieldProcessor;

        specialinvoke $r12.<org.apache.lucene.index.DocFieldProcessor: void <init>(org.apache.lucene.index.DocumentsWriterPerThread,org.apache.lucene.index.DocFieldConsumer,org.apache.lucene.index.StoredFieldsConsumer)>(r1, $r6, $r8);

        return $r12;
    }
}
