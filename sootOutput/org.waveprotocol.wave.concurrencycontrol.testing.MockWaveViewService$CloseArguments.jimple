public class org.waveprotocol.wave.concurrencycontrol.testing.MockWaveViewService$CloseArguments extends java.lang.Object
{
    public final org.waveprotocol.wave.model.id.WaveId waveId;
    public final java.lang.String channelId;
    public final org.waveprotocol.wave.concurrencycontrol.channel.WaveViewService$CloseCallback callback;

    private void <init>(org.waveprotocol.wave.model.id.WaveId, java.lang.String, org.waveprotocol.wave.concurrencycontrol.channel.WaveViewService$CloseCallback)
    {
        org.waveprotocol.wave.concurrencycontrol.channel.WaveViewService$CloseCallback r3;
        org.waveprotocol.wave.model.id.WaveId r1;
        java.lang.String r2;
        org.waveprotocol.wave.concurrencycontrol.testing.MockWaveViewService$CloseArguments r0;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.testing.MockWaveViewService$CloseArguments;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveId;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.waveprotocol.wave.concurrencycontrol.channel.WaveViewService$CloseCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.concurrencycontrol.testing.MockWaveViewService$CloseArguments: org.waveprotocol.wave.model.id.WaveId waveId> = r1;

        r0.<org.waveprotocol.wave.concurrencycontrol.testing.MockWaveViewService$CloseArguments: java.lang.String channelId> = r2;

        r0.<org.waveprotocol.wave.concurrencycontrol.testing.MockWaveViewService$CloseArguments: org.waveprotocol.wave.concurrencycontrol.channel.WaveViewService$CloseCallback callback> = r3;

        return;
    }

    void <init>(org.waveprotocol.wave.model.id.WaveId, java.lang.String, org.waveprotocol.wave.concurrencycontrol.channel.WaveViewService$CloseCallback, org.waveprotocol.wave.concurrencycontrol.testing.MockWaveViewService$1)
    {
        org.waveprotocol.wave.concurrencycontrol.channel.WaveViewService$CloseCallback r3;
        org.waveprotocol.wave.model.id.WaveId r1;
        org.waveprotocol.wave.concurrencycontrol.testing.MockWaveViewService$1 r4;
        java.lang.String r2;
        org.waveprotocol.wave.concurrencycontrol.testing.MockWaveViewService$CloseArguments r0;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.testing.MockWaveViewService$CloseArguments;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveId;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.waveprotocol.wave.concurrencycontrol.channel.WaveViewService$CloseCallback;

        r4 := @parameter3: org.waveprotocol.wave.concurrencycontrol.testing.MockWaveViewService$1;

        specialinvoke r0.<org.waveprotocol.wave.concurrencycontrol.testing.MockWaveViewService$CloseArguments: void <init>(org.waveprotocol.wave.model.id.WaveId,java.lang.String,org.waveprotocol.wave.concurrencycontrol.channel.WaveViewService$CloseCallback)>(r1, r2, r3);

        return;
    }
}
