public class com.hp.hpl.jena.sparql.algebra.optimize.TransformDistinctToReduced extends com.hp.hpl.jena.sparql.algebra.TransformCopy
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.algebra.optimize.TransformDistinctToReduced r0;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.optimize.TransformDistinctToReduced;

        specialinvoke r0.<com.hp.hpl.jena.sparql.algebra.TransformCopy: void <init>()>();

        return;
    }

    public com.hp.hpl.jena.sparql.algebra.Op transform(com.hp.hpl.jena.sparql.algebra.op.OpDistinct, com.hp.hpl.jena.sparql.algebra.Op)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpDistinct r2;
        com.hp.hpl.jena.sparql.algebra.op.OpProject r4;
        com.hp.hpl.jena.sparql.algebra.optimize.TransformDistinctToReduced r1;
        com.hp.hpl.jena.sparql.algebra.Op r0, $r3, $r5, $r6, $r7;
        boolean $z0, $z1, $z2;

        r1 := @this: com.hp.hpl.jena.sparql.algebra.optimize.TransformDistinctToReduced;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpDistinct;

        r0 := @parameter1: com.hp.hpl.jena.sparql.algebra.Op;

        $z0 = r0 instanceof com.hp.hpl.jena.sparql.algebra.op.OpOrder;

        if $z0 == 0 goto label1;

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.algebra.op.OpReduced: com.hp.hpl.jena.sparql.algebra.Op create(com.hp.hpl.jena.sparql.algebra.Op)>(r0);

        return $r7;

     label1:
        $z1 = r0 instanceof com.hp.hpl.jena.sparql.algebra.op.OpProject;

        if $z1 == 0 goto label2;

        r4 = (com.hp.hpl.jena.sparql.algebra.op.OpProject) r0;

        $r5 = virtualinvoke r4.<com.hp.hpl.jena.sparql.algebra.op.OpProject: com.hp.hpl.jena.sparql.algebra.Op getSubOp()>();

        $z2 = $r5 instanceof com.hp.hpl.jena.sparql.algebra.op.OpOrder;

        if $z2 == 0 goto label2;

        $r6 = staticinvoke <com.hp.hpl.jena.sparql.algebra.op.OpReduced: com.hp.hpl.jena.sparql.algebra.Op create(com.hp.hpl.jena.sparql.algebra.Op)>(r0);

        return $r6;

     label2:
        $r3 = specialinvoke r1.<com.hp.hpl.jena.sparql.algebra.TransformCopy: com.hp.hpl.jena.sparql.algebra.Op transform(com.hp.hpl.jena.sparql.algebra.op.OpDistinct,com.hp.hpl.jena.sparql.algebra.Op)>(r2, r0);

        return $r3;
    }
}
