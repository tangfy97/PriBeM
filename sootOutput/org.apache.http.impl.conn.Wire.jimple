public class org.apache.http.impl.conn.Wire extends java.lang.Object
{
    private final org.apache.commons.logging.Log log;

    public void <init>(org.apache.commons.logging.Log)
    {
        org.apache.http.impl.conn.Wire r0;
        org.apache.commons.logging.Log r1;

        r0 := @this: org.apache.http.impl.conn.Wire;

        r1 := @parameter0: org.apache.commons.logging.Log;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.http.impl.conn.Wire: org.apache.commons.logging.Log log> = r1;

        return;
    }

    private void wire(java.lang.String, java.io.InputStream) throws java.io.IOException
    {
        char $c1;
        org.apache.http.impl.conn.Wire r3;
        int $i0, $i2, $i4;
        org.apache.commons.logging.Log $r4, $r7;
        java.lang.StringBuilder $r9;
        java.lang.String r2, $r5, $r6, $r8;
        java.io.InputStream r1;

        r3 := @this: org.apache.http.impl.conn.Wire;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.InputStream;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

     label1:
        $i2 = virtualinvoke r1.<java.io.InputStream: int read()>();

        $i4 = (int) -1;

        if $i2 == $i4 goto label6;

        if $i2 != 13 goto label2;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[\\r]");

        goto label1;

     label2:
        if $i2 != 10 goto label3;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[\\n]\"");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>(0, "\"");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>(0, r2);

        $r7 = r3.<org.apache.http.impl.conn.Wire: org.apache.commons.logging.Log log>;

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r8);

        virtualinvoke $r9.<java.lang.StringBuilder: void setLength(int)>(0);

        goto label1;

     label3:
        if $i2 < 32 goto label4;

        if $i2 <= 127 goto label5;

     label4:
        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        goto label1;

     label5:
        $c1 = (char) $i2;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        goto label1;

     label6:
        $i0 = virtualinvoke $r9.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label7;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>(0, 34);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>(0, r2);

        $r4 = r3.<org.apache.http.impl.conn.Wire: org.apache.commons.logging.Log log>;

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r5);

     label7:
        return;
    }

    public boolean enabled()
    {
        org.apache.http.impl.conn.Wire r0;
        org.apache.commons.logging.Log $r1;
        boolean $z0;

        r0 := @this: org.apache.http.impl.conn.Wire;

        $r1 = r0.<org.apache.http.impl.conn.Wire: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        return $z0;
    }

    public void output(java.io.InputStream) throws java.io.IOException
    {
        org.apache.http.impl.conn.Wire r1;
        java.lang.IllegalArgumentException $r2;
        java.io.InputStream r0;

        r1 := @this: org.apache.http.impl.conn.Wire;

        r0 := @parameter0: java.io.InputStream;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Output may not be null");

        throw $r2;

     label1:
        specialinvoke r1.<org.apache.http.impl.conn.Wire: void wire(java.lang.String,java.io.InputStream)>(">> ", r0);

        return;
    }

    public void input(java.io.InputStream) throws java.io.IOException
    {
        org.apache.http.impl.conn.Wire r1;
        java.lang.IllegalArgumentException $r2;
        java.io.InputStream r0;

        r1 := @this: org.apache.http.impl.conn.Wire;

        r0 := @parameter0: java.io.InputStream;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Input may not be null");

        throw $r2;

     label1:
        specialinvoke r1.<org.apache.http.impl.conn.Wire: void wire(java.lang.String,java.io.InputStream)>("<< ", r0);

        return;
    }

    public void output(byte[], int, int) throws java.io.IOException
    {
        byte[] r0;
        org.apache.http.impl.conn.Wire r1;
        java.io.ByteArrayInputStream $r2;
        int i0, i1;
        java.lang.IllegalArgumentException $r3;

        r1 := @this: org.apache.http.impl.conn.Wire;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Output may not be null");

        throw $r3;

     label1:
        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>(r0, i0, i1);

        specialinvoke r1.<org.apache.http.impl.conn.Wire: void wire(java.lang.String,java.io.InputStream)>(">> ", $r2);

        return;
    }

    public void input(byte[], int, int) throws java.io.IOException
    {
        byte[] r0;
        org.apache.http.impl.conn.Wire r1;
        java.io.ByteArrayInputStream $r2;
        int i0, i1;
        java.lang.IllegalArgumentException $r3;

        r1 := @this: org.apache.http.impl.conn.Wire;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Input may not be null");

        throw $r3;

     label1:
        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>(r0, i0, i1);

        specialinvoke r1.<org.apache.http.impl.conn.Wire: void wire(java.lang.String,java.io.InputStream)>("<< ", $r2);

        return;
    }

    public void output(byte[]) throws java.io.IOException
    {
        byte[] r0;
        org.apache.http.impl.conn.Wire r1;
        java.io.ByteArrayInputStream $r2;
        java.lang.IllegalArgumentException $r3;

        r1 := @this: org.apache.http.impl.conn.Wire;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Output may not be null");

        throw $r3;

     label1:
        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>(r0);

        specialinvoke r1.<org.apache.http.impl.conn.Wire: void wire(java.lang.String,java.io.InputStream)>(">> ", $r2);

        return;
    }

    public void input(byte[]) throws java.io.IOException
    {
        byte[] r0;
        org.apache.http.impl.conn.Wire r1;
        java.io.ByteArrayInputStream $r2;
        java.lang.IllegalArgumentException $r3;

        r1 := @this: org.apache.http.impl.conn.Wire;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Input may not be null");

        throw $r3;

     label1:
        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>(r0);

        specialinvoke r1.<org.apache.http.impl.conn.Wire: void wire(java.lang.String,java.io.InputStream)>("<< ", $r2);

        return;
    }

    public void output(int) throws java.io.IOException
    {
        byte[] $r1;
        org.apache.http.impl.conn.Wire r0;
        byte $b1;
        int i0;

        r0 := @this: org.apache.http.impl.conn.Wire;

        i0 := @parameter0: int;

        $r1 = newarray (byte)[1];

        $b1 = (byte) i0;

        $r1[0] = $b1;

        virtualinvoke r0.<org.apache.http.impl.conn.Wire: void output(byte[])>($r1);

        return;
    }

    public void input(int) throws java.io.IOException
    {
        byte[] $r1;
        org.apache.http.impl.conn.Wire r0;
        byte $b1;
        int i0;

        r0 := @this: org.apache.http.impl.conn.Wire;

        i0 := @parameter0: int;

        $r1 = newarray (byte)[1];

        $b1 = (byte) i0;

        $r1[0] = $b1;

        virtualinvoke r0.<org.apache.http.impl.conn.Wire: void input(byte[])>($r1);

        return;
    }

    public void output(java.lang.String) throws java.io.IOException
    {
        byte[] $r2;
        org.apache.http.impl.conn.Wire r1;
        java.lang.String r0;
        java.lang.IllegalArgumentException $r3;

        r1 := @this: org.apache.http.impl.conn.Wire;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Output may not be null");

        throw $r3;

     label1:
        $r2 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r1.<org.apache.http.impl.conn.Wire: void output(byte[])>($r2);

        return;
    }

    public void input(java.lang.String) throws java.io.IOException
    {
        byte[] $r2;
        org.apache.http.impl.conn.Wire r1;
        java.lang.String r0;
        java.lang.IllegalArgumentException $r3;

        r1 := @this: org.apache.http.impl.conn.Wire;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Input may not be null");

        throw $r3;

     label1:
        $r2 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r1.<org.apache.http.impl.conn.Wire: void input(byte[])>($r2);

        return;
    }
}
