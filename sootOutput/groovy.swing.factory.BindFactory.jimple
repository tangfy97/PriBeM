public class groovy.swing.factory.BindFactory extends groovy.util.AbstractFactory implements groovy.lang.GroovyObject
{
    private final java.util.Map syntheticBindings;
    transient groovy.lang.MetaClass metaClass;
    public static java.lang.Long __timeStamp;
    public static java.lang.Long __timeStamp__239_neverHappen1239119696928;
    static java.lang.Class class$org$codehaus$groovy$binding$FullBinding;
    static java.lang.Class class$java$lang$Class;
    static java.lang.Class class$org$codehaus$groovy$binding$EventTriggerBinding;
    static java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter;
    static java.lang.Class class$groovy$swing$binding$JSliderProperties;
    static java.lang.Class class$org$codehaus$groovy$binding$TriggerBinding;
    static java.lang.Class class$java$util$Map;
    static java.lang.Class class$java$util$Map$Entry;
    static java.lang.Class class$groovy$swing$binding$AbstractButtonProperties;
    static java.lang.Class class$0;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$org$codehaus$groovy$binding$ClosureSourceBinding;
    static java.lang.Class class$java$util$HashMap;
    static java.lang.Class class$org$codehaus$groovy$binding$TargetBinding;
    static java.lang.Class class$java$lang$Object;
    static java.lang.Class class$java$util$Iterator;
    static java.lang.Class class$java$lang$Boolean;
    static java.lang.Class class$groovy$swing$binding$JTextComponentProperties;
    static java.lang.Class class$java$lang$RuntimeException;
    static java.lang.Class class$org$codehaus$groovy$binding$PropertyBinding;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$groovy$lang$Closure;

    public void <init>()
    {
        java.util.Map $r16, $r19, $r23, $r27;
        java.lang.Object[] $r6, $r17, $r21, $r25;
        groovy.swing.factory.BindFactory r0;
        groovy.lang.MetaClass $r9, $r11;
        java.lang.Class $r1, r2, $r3, r4, $r5, $r12, $r14, $r18, $r22, $r26, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36;
        java.lang.Object $r7, $r8, $r10, $r13, $r15, $r20, $r24, $r28;

        r0 := @this: groovy.swing.factory.BindFactory;

        specialinvoke r0.<groovy.util.AbstractFactory: void <init>()>();

        $r1 = <groovy.swing.factory.BindFactory: java.lang.Class class$0>;

        if $r1 != null goto label01;

        $r29 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.BindFactory");

        <groovy.swing.factory.BindFactory: java.lang.Class class$0> = $r29;

        goto label02;

     label01:
        $r29 = <groovy.swing.factory.BindFactory: java.lang.Class class$0>;

     label02:
        r2 = $r29;

        $r3 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r3 != null goto label03;

        $r30 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass> = $r30;

        goto label04;

     label03:
        $r30 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        r4 = $r30;

        $r5 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

        if $r5 != null goto label05;

        $r31 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.ScriptBytecodeAdapter");

        <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter> = $r31;

        goto label06;

     label05:
        $r31 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

     label06:
        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r0;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeStaticMethodN(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r2, $r31, "initMetaClass", $r6);

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r7, r4);

        $r9 = (groovy.lang.MetaClass) $r8;

        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r9, r4);

        $r11 = (groovy.lang.MetaClass) $r10;

        r0.<groovy.swing.factory.BindFactory: groovy.lang.MetaClass metaClass> = $r11;

        $r12 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$util$HashMap>;

        if $r12 != null goto label07;

        $r32 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("java.util.HashMap");

        <groovy.swing.factory.BindFactory: java.lang.Class class$java$util$HashMap> = $r32;

        goto label08;

     label07:
        $r32 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$util$HashMap>;

     label08:
        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r2, $r32);

        $r14 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$util$Map>;

        if $r14 != null goto label09;

        $r33 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("java.util.Map");

        <groovy.swing.factory.BindFactory: java.lang.Class class$java$util$Map> = $r33;

        goto label10;

     label09:
        $r33 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$util$Map>;

     label10:
        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r13, $r33);

        $r16 = (java.util.Map) $r15;

        r0.<groovy.swing.factory.BindFactory: java.util.Map syntheticBindings> = $r16;

        $r19 = r0.<groovy.swing.factory.BindFactory: java.util.Map syntheticBindings>;

        $r17 = newarray (java.lang.Object)[1];

        $r18 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$swing$binding$JTextComponentProperties>;

        if $r18 != null goto label11;

        $r34 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.binding.JTextComponentProperties");

        <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$swing$binding$JTextComponentProperties> = $r34;

        goto label12;

     label11:
        $r34 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$swing$binding$JTextComponentProperties>;

     label12:
        $r20 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r2, $r34, "getSyntheticProperties");

        $r17[0] = $r20;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r2, $r19, "putAll", $r17);

        $r23 = r0.<groovy.swing.factory.BindFactory: java.util.Map syntheticBindings>;

        $r21 = newarray (java.lang.Object)[1];

        $r22 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$swing$binding$AbstractButtonProperties>;

        if $r22 != null goto label13;

        $r35 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.binding.AbstractButtonProperties");

        <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$swing$binding$AbstractButtonProperties> = $r35;

        goto label14;

     label13:
        $r35 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$swing$binding$AbstractButtonProperties>;

     label14:
        $r24 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r2, $r35, "getSyntheticProperties");

        $r21[0] = $r24;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r2, $r23, "putAll", $r21);

        $r27 = r0.<groovy.swing.factory.BindFactory: java.util.Map syntheticBindings>;

        $r25 = newarray (java.lang.Object)[1];

        $r26 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$swing$binding$JSliderProperties>;

        if $r26 != null goto label15;

        $r36 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.binding.JSliderProperties");

        <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$swing$binding$JSliderProperties> = $r36;

        goto label16;

     label15:
        $r36 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$swing$binding$JSliderProperties>;

     label16:
        $r28 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r2, $r36, "getSyntheticProperties");

        $r25[0] = $r28;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r2, $r27, "putAll", $r25);

        return;
    }

    public java.lang.Object newInstance(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object, java.util.Map) throws java.lang.InstantiationException, java.lang.IllegalAccessException
    {
        java.util.Map r4, $r80;
        java.lang.Object[] $r5, $r7, $r13, $r15, $r18, $r20, $r25, $r30, $r32, $r37, $r39, $r43, $r46, $r58, $r60, $r65, $r72, $r77, $r79, $r96, $r101, $r104, $r106;
        org.codehaus.groovy.runtime.GStringImpl $r19, $r78, $r105;
        org.codehaus.groovy.runtime.wrappers.Wrapper $r87;
        java.lang.Boolean $r54, $r124, $r131, $r138, $r140;
        java.lang.Class $r0, r1, $r2, $r9, $r11, $r17, $r27, $r29, $r34, $r36, $r41, $r48, $r52, $r62, $r64, $r67, $r70, $r74, $r83, $r85, $r89, $r92, $r98, $r100, $r103, $r110, $r111, $r112, $r113, $r115, $r116, $r117, $r118, $r119, $r120, $r122, r123, $r125, $r126, $r127, $r128, $r129, $r132, $r133, $r134, $r135, $r136, $r137, $r139, $r141;
        java.lang.Object r3, $r6, $r8, $r10, $r12, $r14, $r16, r21, $r23, $r26, $r28, $r31, $r33, $r35, $r38, $r40, $r42, $r44, $r49, $r50, $r53, $r55, $r59, $r61, $r63, $r66, $r68, $r69, $r71, $r73, $r75, $r81, $r84, $r88, $r90, $r91, $r93, $r97, $r99, $r108, r114, r121;
        groovy.lang.Closure $r47, $r57;
        java.lang.Throwable $r24, $r109;
        groovy.swing.factory.BindFactory r76;
        java.lang.String $r56, $r86, $r94, $r102;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        groovy.util.FactoryBuilderSupport r45;
        org.codehaus.groovy.binding.FullBinding $r51, $r95, r130;
        java.lang.String[] $r22, $r82, $r107;

        r76 := @this: groovy.swing.factory.BindFactory;

        r45 := @parameter0: groovy.util.FactoryBuilderSupport;

        r21 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.util.Map;

        $r0 = <groovy.swing.factory.BindFactory: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r110 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.BindFactory");

        <groovy.swing.factory.BindFactory: java.lang.Class class$0> = $r110;

        goto label02;

     label01:
        $r110 = <groovy.swing.factory.BindFactory: java.lang.Class class$0>;

     label02:
        r1 = $r110;

        $r2 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r111 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass> = $r111;

        goto label04;

     label03:
        $r111 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>(r3, null);

        if $z0 == 0 goto label07;

        $r103 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$RuntimeException>;

        if $r103 != null goto label05;

        $r112 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("java.lang.RuntimeException");

        <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$RuntimeException> = $r112;

        goto label06;

     label05:
        $r112 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$RuntimeException>;

     label06:
        $r104 = newarray (java.lang.Object)[1];

        $r105 = new org.codehaus.groovy.runtime.GStringImpl;

        $r106 = newarray (java.lang.Object)[1];

        $r106[0] = r21;

        $r107 = newarray (java.lang.String)[2];

        $r107[0] = "";

        $r107[1] = " elements do not accept a value argument.";

        specialinvoke $r105.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r106, $r107);

        $r104[0] = $r105;

        $r108 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r112, $r104);

        $r109 = (java.lang.Throwable) $r108;

        throw $r109;

     label07:
        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = "source";

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r4, "remove", $r5);

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = "target";

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r4, "remove", $r7);

        $r9 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$TargetBinding>;

        if $r9 != null goto label08;

        $r113 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.binding.TargetBinding");

        <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$TargetBinding> = $r113;

        goto label09;

     label08:
        $r113 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$TargetBinding>;

     label09:
        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r113);

        r114 = (org.codehaus.groovy.binding.TargetBinding) $r10;

        $z1 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>($r8, null);

        if $z1 == 0 goto label14;

        $r96 = newarray (java.lang.Object)[1];

        $r96[0] = "targetProperty";

        $r97 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r4, "remove", $r96);

        $r98 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$String>;

        if $r98 != null goto label10;

        $r115 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$String> = $r115;

        goto label11;

     label10:
        $r115 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$String>;

     label11:
        $r99 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r97, $r115);

        $r102 = (java.lang.String) $r99;

        $r100 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$PropertyBinding>;

        if $r100 != null goto label12;

        $r116 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.binding.PropertyBinding");

        <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$PropertyBinding> = $r116;

        goto label13;

     label12:
        $r116 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$PropertyBinding>;

     label13:
        $r101 = newarray (java.lang.Object)[2];

        $r101[0] = $r8;

        $r101[1] = $r102;

        r114 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r116, $r101);

        goto label14;

     label14:
        $r11 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$FullBinding>;

        if $r11 != null goto label15;

        $r117 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.binding.FullBinding");

        <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$FullBinding> = $r117;

        goto label16;

     label15:
        $r117 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$FullBinding>;

     label16:
        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r117);

        $r95 = (org.codehaus.groovy.binding.FullBinding) $r12;

        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = "sourceProperty";

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r4, "containsKey", $r13);

        $z2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r14);

        if $z2 == 0 goto label40;

        $r60 = newarray (java.lang.Object)[1];

        $r60[0] = "sourceProperty";

        $r61 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r4, "remove", $r60);

        $r62 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$String>;

        if $r62 != null goto label17;

        $r118 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$String> = $r118;

        goto label18;

     label17:
        $r118 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$String>;

     label18:
        $r63 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r61, $r118);

        $r94 = (java.lang.String) $r63;

        $r64 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$PropertyBinding>;

        if $r64 != null goto label19;

        $r119 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.binding.PropertyBinding");

        <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$PropertyBinding> = $r119;

        goto label20;

     label19:
        $r119 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$PropertyBinding>;

     label20:
        $r65 = newarray (java.lang.Object)[2];

        $r65[0] = $r6;

        $r65[1] = $r94;

        $r66 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r119, $r65);

        $r67 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$TriggerBinding>;

        if $r67 != null goto label21;

        $r120 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.binding.TriggerBinding");

        <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$TriggerBinding> = $r120;

        goto label22;

     label21:
        $r120 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$TriggerBinding>;

     label22:
        $r68 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r120);

        r121 = (org.codehaus.groovy.binding.TriggerBinding) $r68;

        $r69 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r6, "getClass");

        $r70 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$Class>;

        if $r70 != null goto label23;

        $r122 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$Class> = $r122;

        goto label24;

     label23:
        $r122 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$Class>;

     label24:
        $r71 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r69, $r122);

        r123 = (java.lang.Class) $r71;

     label25:
        $z12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>(r121, null);

        if $z12 == 0 goto label26;

        $z11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>(r123, null);

        if $z11 == 0 goto label26;

        $r124 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label27;

     label26:
        $r124 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label27:
        $z13 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r124);

        if $z13 == 0 goto label36;

        $r80 = r76.<groovy.swing.factory.BindFactory: java.util.Map syntheticBindings>;

        $r77 = newarray (java.lang.Object)[1];

        $r78 = new org.codehaus.groovy.runtime.GStringImpl;

        $r79 = newarray (java.lang.Object)[2];

        $r81 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r123, "name");

        $r79[0] = $r81;

        $r79[1] = $r94;

        $r82 = newarray (java.lang.String)[3];

        $r82[0] = "";

        $r82[1] = "#";

        $r82[2] = "";

        specialinvoke $r78.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r79, $r82);

        $r83 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$String>;

        if $r83 != null goto label28;

        $r125 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$String> = $r125;

        goto label29;

     label28:
        $r125 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$String>;

     label29:
        $r84 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object asType(java.lang.Object,java.lang.Class)>($r78, $r125);

        $r86 = (java.lang.String) $r84;

        $r85 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$String>;

        if $r85 != null goto label30;

        $r126 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$String> = $r126;

        goto label31;

     label30:
        $r126 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$String>;

     label31:
        $r87 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: org.codehaus.groovy.runtime.wrappers.Wrapper createPojoWrapper(java.lang.Object,java.lang.Class)>($r86, $r126);

        $r77[0] = $r87;

        $r88 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r80, "get", $r77);

        $r89 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$TriggerBinding>;

        if $r89 != null goto label32;

        $r127 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.binding.TriggerBinding");

        <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$TriggerBinding> = $r127;

        goto label33;

     label32:
        $r127 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$TriggerBinding>;

     label33:
        $r90 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r88, $r127);

        r121 = (org.codehaus.groovy.binding.TriggerBinding) $r90;

        $r91 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r123, "getSuperclass");

        $r92 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$Class>;

        if $r92 != null goto label34;

        $r128 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$Class> = $r128;

        goto label35;

     label34:
        $r128 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$Class>;

     label35:
        $r93 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r91, $r128);

        r123 = (java.lang.Class) $r93;

        goto label25;

     label36:
        $z10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>(r121, null);

        if $z10 == 0 goto label37;

        r121 = $r66;

        goto label37;

     label37:
        $r72 = newarray (java.lang.Object)[2];

        $r72[0] = $r66;

        $r72[1] = r114;

        $r73 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r121, "createBinding", $r72);

        $r74 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$FullBinding>;

        if $r74 != null goto label38;

        $r129 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.binding.FullBinding");

        <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$FullBinding> = $r129;

        goto label39;

     label38:
        $r129 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$FullBinding>;

     label39:
        $r75 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r73, $r129);

        r130 = (org.codehaus.groovy.binding.FullBinding) $r75;

        goto label56;

     label40:
        $r15 = newarray (java.lang.Object)[1];

        $r15[0] = "sourceEvent";

        $r16 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r4, "containsKey", $r15);

        $z3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r16);

        if $z3 == 0 goto label41;

        $r58 = newarray (java.lang.Object)[1];

        $r58[0] = "sourceValue";

        $r59 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r4, "containsKey", $r58);

        $z9 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r59);

        if $z9 == 0 goto label41;

        $r131 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label42;

     label41:
        $r131 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label42:
        $z14 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r131);

        if $z14 == 0 goto label53;

        $r25 = newarray (java.lang.Object)[1];

        $r25[0] = "sourceValue";

        $r26 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r4, "remove", $r25);

        $r27 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$Closure>;

        if $r27 != null goto label43;

        $r132 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.Closure");

        <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$Closure> = $r132;

        goto label44;

     label43:
        $r132 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$Closure>;

     label44:
        $r28 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r26, $r132);

        $r57 = (groovy.lang.Closure) $r28;

        $r29 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$ClosureSourceBinding>;

        if $r29 != null goto label45;

        $r133 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.binding.ClosureSourceBinding");

        <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$ClosureSourceBinding> = $r133;

        goto label46;

     label45:
        $r133 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$ClosureSourceBinding>;

     label46:
        $r30 = newarray (java.lang.Object)[1];

        $r30[0] = $r57;

        $r31 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r133, $r30);

        $r32 = newarray (java.lang.Object)[1];

        $r32[0] = "sourceEvent";

        $r33 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r4, "remove", $r32);

        $r34 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$String>;

        if $r34 != null goto label47;

        $r134 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$String> = $r134;

        goto label48;

     label47:
        $r134 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$String>;

     label48:
        $r35 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r33, $r134);

        $r56 = (java.lang.String) $r35;

        $r36 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$EventTriggerBinding>;

        if $r36 != null goto label49;

        $r135 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.binding.EventTriggerBinding");

        <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$EventTriggerBinding> = $r135;

        goto label50;

     label49:
        $r135 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$EventTriggerBinding>;

     label50:
        $r37 = newarray (java.lang.Object)[2];

        $r37[0] = $r6;

        $r37[1] = $r56;

        $r38 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r135, $r37);

        $r39 = newarray (java.lang.Object)[2];

        $r39[0] = $r31;

        $r39[1] = r114;

        $r40 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r38, "createBinding", $r39);

        $r41 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$FullBinding>;

        if $r41 != null goto label51;

        $r136 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.binding.FullBinding");

        <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$FullBinding> = $r136;

        goto label52;

     label51:
        $r136 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$FullBinding>;

     label52:
        $r42 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r40, $r136);

        r130 = (org.codehaus.groovy.binding.FullBinding) $r42;

        goto label56;

     label53:
        $r17 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$RuntimeException>;

        if $r17 != null goto label54;

        $r137 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("java.lang.RuntimeException");

        <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$RuntimeException> = $r137;

        goto label55;

     label54:
        $r137 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$RuntimeException>;

     label55:
        $r18 = newarray (java.lang.Object)[1];

        $r19 = new org.codehaus.groovy.runtime.GStringImpl;

        $r20 = newarray (java.lang.Object)[1];

        $r20[0] = r21;

        $r22 = newarray (java.lang.String)[2];

        $r22[0] = "";

        $r22[1] = " does not have suffient attributes to initialize";

        specialinvoke $r19.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r20, $r22);

        $r18[0] = $r19;

        $r23 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r137, $r18);

        $r24 = (java.lang.Throwable) $r23;

        throw $r24;

     label56:
        $r43 = newarray (java.lang.Object)[1];

        $r43[0] = "bind";

        $r44 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r4, "remove", $r43);

        $z4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r44, null);

        if $z4 == 0 goto label58;

     label57:
        $r138 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label63;

     label58:
        $z5 = $r44 instanceof java.lang.Boolean;

        if $z5 == 0 goto label61;

        $r52 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$Boolean>;

        if $r52 != null goto label59;

        $r139 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$Boolean> = $r139;

        goto label60;

     label59:
        $r139 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$Boolean>;

     label60:
        $r53 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r44, $r139);

        $r54 = (java.lang.Boolean) $r53;

        $r55 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r54, "booleanValue");

        $z8 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r55);

        if $z8 == 0 goto label61;

        $r140 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label62;

     label61:
        $r140 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label62:
        $z15 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r140);

        if $z15 != 0 goto label57;

        $r138 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label63:
        $z6 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r138);

        if $z6 == 0 goto label64;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r130, "bind");

        goto label64;

     label64:
        $z7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>($r8, null);

        if $z7 == 0 goto label65;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r130, "update");

        goto label65;

     label65:
        $r46 = newarray (java.lang.Object)[1];

        $r47 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: groovy.lang.Closure getMethodPointer(java.lang.Object,java.lang.String)>(r130, "unbind");

        $r46[0] = $r47;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r45, "addDisposalClosure", $r46);

        $r51 = r130;

        $r48 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$Object>;

        if $r48 != null goto label66;

        $r141 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$Object> = $r141;

        goto label67;

     label66:
        $r141 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$Object>;

     label67:
        $r49 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r51, $r141);

        $r50 = (java.lang.Object) $r49;

        return $r50;
    }

    public static java.lang.Object bindingAttributeDelegate(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        boolean $z0, $z1;
        org.codehaus.groovy.binding.FullBinding $r23;
        java.lang.Exception $r28, $r30;
        java.lang.Throwable $r27, $r29;
        java.lang.Object[] $r19, $r22;
        java.lang.String $r24;
        java.util.Map$Entry $r25;
        java.util.Iterator $r26;
        java.lang.Class $r0, r1, $r2, $r6, $r9, $r13, $r16, $r18, $r32, $r33, $r34, $r36, $r37, $r38, $r39;
        java.lang.Object r3, $r4, $r5, $r7, $r8, $r10, $r11, $r12, $r14, $r15, $r17, r20, $r21, r31, $r35;

        r31 := @parameter0: java.lang.Object;

        r20 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r0 = <groovy.swing.factory.BindFactory: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r32 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.BindFactory");

        <groovy.swing.factory.BindFactory: java.lang.Class class$0> = $r32;

        goto label02;

     label01:
        $r32 = <groovy.swing.factory.BindFactory: java.lang.Class class$0>;

     label02:
        r1 = $r32;

        $r2 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r33 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass> = $r33;

        goto label04;

     label03:
        $r33 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r3, "entrySet");

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r4, "iterator");

        $r6 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$util$Iterator>;

        if $r6 != null goto label05;

        $r34 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("java.util.Iterator");

        <groovy.swing.factory.BindFactory: java.lang.Class class$java$util$Iterator> = $r34;

        goto label06;

     label05:
        $r34 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$util$Iterator>;

     label06:
        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r5, $r34);

        $r26 = (java.util.Iterator) $r7;

     label07:
        $r35 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r26, "hasNext");

        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r35);

        if $z1 == 0 goto label26;

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r26, "next");

        $r9 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$util$Map$Entry>;

        if $r9 != null goto label08;

        $r36 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("java.util.Map$Entry");

        <groovy.swing.factory.BindFactory: java.lang.Class class$java$util$Map$Entry> = $r36;

        goto label09;

     label08:
        $r36 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$util$Map$Entry>;

     label09:
        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r8, $r36);

        $r25 = (java.util.Map$Entry) $r10;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r25, "key");

        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r11, "toString");

        $r13 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$String>;

        if $r13 != null goto label10;

        $r37 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$String> = $r37;

        goto label11;

     label10:
        $r37 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$lang$String>;

     label11:
        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r12, $r37);

        $r24 = (java.lang.String) $r14;

        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r25, "value");

        $z0 = $r15 instanceof org.codehaus.groovy.binding.FullBinding;

        if $z0 == 0 goto label25;

        $r16 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$FullBinding>;

        if $r16 != null goto label12;

        $r38 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.binding.FullBinding");

        <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$FullBinding> = $r38;

        goto label13;

     label12:
        $r38 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$FullBinding>;

     label13:
        $r17 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r15, $r38);

        $r23 = (org.codehaus.groovy.binding.FullBinding) $r17;

        $r18 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$PropertyBinding>;

        if $r18 != null goto label14;

        $r39 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.binding.PropertyBinding");

        <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$PropertyBinding> = $r39;

        goto label15;

     label14:
        $r39 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$binding$PropertyBinding>;

     label15:
        $r19 = newarray (java.lang.Object)[2];

        $r19[0] = r20;

        $r19[1] = $r24;

        $r21 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r39, $r19);

        $r22 = newarray (java.lang.Object)[1];

        $r22[0] = $r21;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r23, "setTargetBinding", $r22);

     label16:
        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r23, "update");

        goto label18;

     label17:
        $r30 := @caughtexception;

        goto label18;

     label18:
        goto label20;

     label19:
        $r29 := @caughtexception;

        throw $r29;

     label20:
        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r23, "rebind");

        goto label22;

     label21:
        $r28 := @caughtexception;

        goto label22;

     label22:
        goto label24;

     label23:
        $r27 := @caughtexception;

        throw $r27;

     label24:
        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r26, "remove");

        goto label25;

     label25:
        goto label07;

     label26:
        return null;

        catch java.lang.Exception from label16 to label17 with label17;
        catch java.lang.Throwable from label16 to label18 with label19;
        catch java.lang.Exception from label20 to label21 with label21;
        catch java.lang.Throwable from label20 to label22 with label23;
    }

    public groovy.lang.MetaClass getMetaClass()
    {
        java.lang.Object[] $r10;
        groovy.swing.factory.BindFactory r4;
        boolean $z0;
        groovy.lang.MetaClass $r5, $r6, $r8, $r13, $r15;
        java.lang.Class $r0, r1, $r2, r3, $r9, $r16, $r17, $r18;
        java.lang.Object $r7, $r11, $r12, $r14;

        r4 := @this: groovy.swing.factory.BindFactory;

        $r0 = <groovy.swing.factory.BindFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r16 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.BindFactory");

        <groovy.swing.factory.BindFactory: java.lang.Class class$0> = $r16;

        goto label2;

     label1:
        $r16 = <groovy.swing.factory.BindFactory: java.lang.Class class$0>;

     label2:
        r1 = $r16;

        $r2 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r17 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass> = $r17;

        goto label4;

     label3:
        $r17 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        r3 = $r17;

        $r5 = r4.<groovy.swing.factory.BindFactory: groovy.lang.MetaClass metaClass>;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r5, null);

        if $z0 == 0 goto label7;

        $r9 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

        if $r9 != null goto label5;

        $r18 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.ScriptBytecodeAdapter");

        <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter> = $r18;

        goto label6;

     label5:
        $r18 = <groovy.swing.factory.BindFactory: java.lang.Class class$org$codehaus$groovy$runtime$ScriptBytecodeAdapter>;

     label6:
        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r4;

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeStaticMethodN(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])>(r1, $r18, "initMetaClass", $r10);

        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r11, r3);

        $r13 = (groovy.lang.MetaClass) $r12;

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r13, r3);

        $r15 = (groovy.lang.MetaClass) $r14;

        r4.<groovy.swing.factory.BindFactory: groovy.lang.MetaClass metaClass> = $r15;

        goto label7;

     label7:
        $r6 = r4.<groovy.swing.factory.BindFactory: groovy.lang.MetaClass metaClass>;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, r3);

        $r8 = (groovy.lang.MetaClass) $r7;

        return $r8;
    }

    public void setMetaClass(groovy.lang.MetaClass)
    {
        groovy.lang.MetaClass r3;
        groovy.swing.factory.BindFactory r2;
        java.lang.Class $r0, $r1, $r4, $r5;

        r2 := @this: groovy.swing.factory.BindFactory;

        r3 := @parameter0: groovy.lang.MetaClass;

        $r0 = <groovy.swing.factory.BindFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r4 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.BindFactory");

        <groovy.swing.factory.BindFactory: java.lang.Class class$0> = $r4;

        goto label2;

     label1:
        $r4 = <groovy.swing.factory.BindFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r5 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass> = $r5;

        goto label4;

     label3:
        $r5 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        r2.<groovy.swing.factory.BindFactory: groovy.lang.MetaClass metaClass> = r3;

        return;
    }

    public java.lang.Object invokeMethod(java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClass $r3;
        groovy.swing.factory.BindFactory r2;
        java.lang.Class $r0, $r1, $r7, $r8;
        java.lang.Object r5, $r6;
        java.lang.String r4;

        r2 := @this: groovy.swing.factory.BindFactory;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object;

        $r0 = <groovy.swing.factory.BindFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.BindFactory");

        <groovy.swing.factory.BindFactory: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <groovy.swing.factory.BindFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = virtualinvoke r2.<groovy.swing.factory.BindFactory: groovy.lang.MetaClass getMetaClass()>();

        $r6 = interfaceinvoke $r3.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r2, r4, r5);

        return $r6;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        groovy.lang.MetaClass $r3;
        groovy.swing.factory.BindFactory r2;
        java.lang.Class $r0, $r1, $r6, $r7;
        java.lang.Object $r5;
        java.lang.String r4;

        r2 := @this: groovy.swing.factory.BindFactory;

        r4 := @parameter0: java.lang.String;

        $r0 = <groovy.swing.factory.BindFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.BindFactory");

        <groovy.swing.factory.BindFactory: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <groovy.swing.factory.BindFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = virtualinvoke r2.<groovy.swing.factory.BindFactory: groovy.lang.MetaClass getMetaClass()>();

        $r5 = interfaceinvoke $r3.<groovy.lang.MetaClass: java.lang.Object getProperty(java.lang.Object,java.lang.String)>(r2, r4);

        return $r5;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClass $r3;
        groovy.swing.factory.BindFactory r2;
        java.lang.Class $r0, $r1, $r6, $r7;
        java.lang.Object r5;
        java.lang.String r4;

        r2 := @this: groovy.swing.factory.BindFactory;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object;

        $r0 = <groovy.swing.factory.BindFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.BindFactory");

        <groovy.swing.factory.BindFactory: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <groovy.swing.factory.BindFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = virtualinvoke r2.<groovy.swing.factory.BindFactory: groovy.lang.MetaClass getMetaClass()>();

        interfaceinvoke $r3.<groovy.lang.MetaClass: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>(r2, r4, r5);

        return;
    }

    static void <clinit>()
    {
        java.lang.Long $r2, $r3, $r4, $r5;
        java.lang.Class $r0, $r1, $r6, $r7;

        $r0 = <groovy.swing.factory.BindFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.BindFactory");

        <groovy.swing.factory.BindFactory: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <groovy.swing.factory.BindFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r2 = new java.lang.Long;

        specialinvoke $r2.<java.lang.Long: void <init>(long)>(1239119696928L);

        $r3 = (java.lang.Long) $r2;

        <groovy.swing.factory.BindFactory: java.lang.Long __timeStamp> = $r3;

        $r4 = new java.lang.Long;

        specialinvoke $r4.<java.lang.Long: void <init>(long)>(0L);

        $r5 = (java.lang.Long) $r4;

        <groovy.swing.factory.BindFactory: java.lang.Long __timeStamp__239_neverHappen1239119696928> = $r5;

        return;
    }

    public final java.util.Map getSyntheticBindings()
    {
        groovy.swing.factory.BindFactory r2;
        java.util.Map $r4, $r6;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r5;

        r2 := @this: groovy.swing.factory.BindFactory;

        $r0 = <groovy.swing.factory.BindFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.BindFactory");

        <groovy.swing.factory.BindFactory: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <groovy.swing.factory.BindFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <groovy.swing.factory.BindFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r2.<groovy.swing.factory.BindFactory: java.util.Map syntheticBindings>;

        $r3 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$util$Map>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <groovy.swing.factory.BindFactory: java.lang.Class class$(java.lang.String)>("java.util.Map");

        <groovy.swing.factory.BindFactory: java.lang.Class class$java$util$Map> = $r9;

        goto label6;

     label5:
        $r9 = <groovy.swing.factory.BindFactory: java.lang.Class class$java$util$Map>;

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r9);

        $r6 = (java.util.Map) $r5;

        return $r6;
    }

    void super$1$wait()
    {
        groovy.swing.factory.BindFactory r0;

        r0 := @this: groovy.swing.factory.BindFactory;

        specialinvoke r0.<java.lang.Object: void wait()>();

        return;
    }

    java.lang.String super$1$toString()
    {
        groovy.swing.factory.BindFactory r0;
        java.lang.String $r1;

        r0 := @this: groovy.swing.factory.BindFactory;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    boolean super$2$isLeaf()
    {
        groovy.swing.factory.BindFactory r0;
        boolean $z0;

        r0 := @this: groovy.swing.factory.BindFactory;

        $z0 = specialinvoke r0.<groovy.util.AbstractFactory: boolean isLeaf()>();

        return $z0;
    }

    void super$2$setChild(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.util.FactoryBuilderSupport r1;
        groovy.swing.factory.BindFactory r0;
        java.lang.Object r2, r3;

        r0 := @this: groovy.swing.factory.BindFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.util.AbstractFactory: void setChild(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    void super$1$wait(long, int)
    {
        int i1;
        groovy.swing.factory.BindFactory r0;
        long l0;

        r0 := @this: groovy.swing.factory.BindFactory;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void wait(long,int)>(l0, i1);

        return;
    }

    void super$1$notify()
    {
        groovy.swing.factory.BindFactory r0;

        r0 := @this: groovy.swing.factory.BindFactory;

        specialinvoke r0.<java.lang.Object: void notify()>();

        return;
    }

    void super$2$onNodeCompleted(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.util.FactoryBuilderSupport r1;
        groovy.swing.factory.BindFactory r0;
        java.lang.Object r2, r3;

        r0 := @this: groovy.swing.factory.BindFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.util.AbstractFactory: void onNodeCompleted(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    java.lang.Class super$1$getClass()
    {
        groovy.swing.factory.BindFactory r0;
        java.lang.Class $r1;

        r0 := @this: groovy.swing.factory.BindFactory;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        return $r1;
    }

    void super$1$notifyAll()
    {
        groovy.swing.factory.BindFactory r0;

        r0 := @this: groovy.swing.factory.BindFactory;

        specialinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    void super$1$finalize()
    {
        groovy.swing.factory.BindFactory r0;

        r0 := @this: groovy.swing.factory.BindFactory;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    void super$1$wait(long)
    {
        groovy.swing.factory.BindFactory r0;
        long l0;

        r0 := @this: groovy.swing.factory.BindFactory;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void wait(long)>(l0);

        return;
    }

    void super$2$setParent(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.util.FactoryBuilderSupport r1;
        groovy.swing.factory.BindFactory r0;
        java.lang.Object r2, r3;

        r0 := @this: groovy.swing.factory.BindFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.util.AbstractFactory: void setParent(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    boolean super$2$onHandleNodeAttributes(groovy.util.FactoryBuilderSupport, java.lang.Object, java.util.Map)
    {
        groovy.util.FactoryBuilderSupport r1;
        java.util.Map r3;
        groovy.swing.factory.BindFactory r0;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: groovy.swing.factory.BindFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.util.Map;

        $z0 = specialinvoke r0.<groovy.util.AbstractFactory: boolean onHandleNodeAttributes(groovy.util.FactoryBuilderSupport,java.lang.Object,java.util.Map)>(r1, r2, r3);

        return $z0;
    }

    java.lang.Object super$1$clone()
    {
        groovy.swing.factory.BindFactory r0;
        java.lang.Object $r1;

        r0 := @this: groovy.swing.factory.BindFactory;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    boolean super$1$equals(java.lang.Object)
    {
        groovy.swing.factory.BindFactory r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: groovy.swing.factory.BindFactory;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    int super$1$hashCode()
    {
        int $i0;
        groovy.swing.factory.BindFactory r0;

        r0 := @this: groovy.swing.factory.BindFactory;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
