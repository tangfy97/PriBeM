public class org.apache.cxf.common.util.ExtensionInvocationHandler extends java.lang.Object implements java.lang.reflect.InvocationHandler
{
    private java.lang.Object obj;

    public void <init>(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.cxf.common.util.ExtensionInvocationHandler r0;

        r0 := @this: org.apache.cxf.common.util.ExtensionInvocationHandler;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.common.util.ExtensionInvocationHandler: java.lang.Object obj> = r1;

        return;
    }

    public java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable
    {
        java.lang.Object[] r0;
        org.apache.cxf.common.util.ExtensionInvocationHandler r1;
        int $i0, $i1, i2;
        java.lang.String $r5;
        java.lang.reflect.Method r4, $r7;
        java.lang.Class[] $r6, r13;
        java.lang.Object $r2, $r8, $r9, $r10, r12;
        java.lang.Class $r3, $r11;

        r1 := @this: org.apache.cxf.common.util.ExtensionInvocationHandler;

        r12 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.reflect.Method;

        r0 := @parameter2: java.lang.Object[];

        if r0 == null goto label2;

        $i0 = lengthof r0;

        r13 = newarray (java.lang.Class)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label2;

        $r10 = r0[i2];

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.Class getClass()>();

        r13[i2] = $r11;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r2 = r1.<org.apache.cxf.common.util.ExtensionInvocationHandler: java.lang.Object obj>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.String getName()>();

        $r6 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r7 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r5, $r6);

        $r8 = r1.<org.apache.cxf.common.util.ExtensionInvocationHandler: java.lang.Object obj>;

        $r9 = virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r8, r0);

        return $r9;
    }
}
