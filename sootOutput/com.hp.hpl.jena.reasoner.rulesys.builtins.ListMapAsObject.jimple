public class com.hp.hpl.jena.reasoner.rulesys.builtins.ListMapAsObject extends com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin
{

    public void <init>()
    {
        com.hp.hpl.jena.reasoner.rulesys.builtins.ListMapAsObject r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.ListMapAsObject;

        specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin: void <init>()>();

        return;
    }

    public java.lang.String getName()
    {
        com.hp.hpl.jena.reasoner.rulesys.builtins.ListMapAsObject r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.ListMapAsObject;

        return "listMapAsObject";
    }

    public int getArgLength()
    {
        com.hp.hpl.jena.reasoner.rulesys.builtins.ListMapAsObject r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.ListMapAsObject;

        return 3;
    }

    public void headAction(com.hp.hpl.jena.graph.Node[], int, com.hp.hpl.jena.reasoner.rulesys.RuleContext)
    {
        com.hp.hpl.jena.reasoner.rulesys.RuleContext r1;
        com.hp.hpl.jena.graph.Node[] r2;
        java.util.Iterator $r7;
        com.hp.hpl.jena.graph.Node $r3, $r4, $r5, r9;
        com.hp.hpl.jena.graph.Triple $r10;
        java.util.List $r6;
        com.hp.hpl.jena.reasoner.rulesys.builtins.ListMapAsObject r0;
        int i0;
        java.lang.Object $r8;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.ListMapAsObject;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node[];

        i0 := @parameter1: int;

        r1 := @parameter2: com.hp.hpl.jena.reasoner.rulesys.RuleContext;

        virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.builtins.ListMapAsObject: void checkArgs(int,com.hp.hpl.jena.reasoner.rulesys.RuleContext)>(i0, r1);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.builtins.ListMapAsObject: com.hp.hpl.jena.graph.Node getArg(int,com.hp.hpl.jena.graph.Node[],com.hp.hpl.jena.reasoner.rulesys.RuleContext)>(0, r2, r1);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.builtins.ListMapAsObject: com.hp.hpl.jena.graph.Node getArg(int,com.hp.hpl.jena.graph.Node[],com.hp.hpl.jena.reasoner.rulesys.RuleContext)>(1, r2, r1);

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.builtins.ListMapAsObject: com.hp.hpl.jena.graph.Node getArg(int,com.hp.hpl.jena.graph.Node[],com.hp.hpl.jena.reasoner.rulesys.RuleContext)>(2, r2, r1);

        $r6 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.Util: java.util.List convertList(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.reasoner.rulesys.RuleContext)>($r5, r1);

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.hp.hpl.jena.graph.Node) $r8;

        $r10 = new com.hp.hpl.jena.graph.Triple;

        specialinvoke $r10.<com.hp.hpl.jena.graph.Triple: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r3, $r4, r9);

        interfaceinvoke r1.<com.hp.hpl.jena.reasoner.rulesys.RuleContext: void add(com.hp.hpl.jena.graph.Triple)>($r10);

        goto label1;

     label2:
        return;
    }
}
