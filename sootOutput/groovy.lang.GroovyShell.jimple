public class groovy.lang.GroovyShell extends groovy.lang.GroovyObjectSupport
{
    public static final java.lang.String[] EMPTY_ARGS;
    private groovy.lang.Binding context;
    private int counter;
    private org.codehaus.groovy.control.CompilerConfiguration config;
    private groovy.lang.GroovyClassLoader loader;
    static java.lang.Class class$groovy$lang$GroovyShell;
    static java.lang.Class class$groovy$lang$Script;
    static java.lang.Class array$Ljava$lang$String;
    static java.lang.Class class$java$lang$Runnable;

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        staticinvoke <groovy.ui.GroovyMain: void main(java.lang.String[])>(r0);

        return;
    }

    public void <init>()
    {
        groovy.lang.Binding $r1;
        groovy.lang.GroovyShell r0;

        r0 := @this: groovy.lang.GroovyShell;

        $r1 = new groovy.lang.Binding;

        specialinvoke $r1.<groovy.lang.Binding: void <init>()>();

        specialinvoke r0.<groovy.lang.GroovyShell: void <init>(java.lang.ClassLoader,groovy.lang.Binding)>(null, $r1);

        return;
    }

    public void <init>(groovy.lang.Binding)
    {
        groovy.lang.Binding r1;
        groovy.lang.GroovyShell r0;

        r0 := @this: groovy.lang.GroovyShell;

        r1 := @parameter0: groovy.lang.Binding;

        specialinvoke r0.<groovy.lang.GroovyShell: void <init>(java.lang.ClassLoader,groovy.lang.Binding)>(null, r1);

        return;
    }

    public void <init>(org.codehaus.groovy.control.CompilerConfiguration)
    {
        groovy.lang.Binding $r1;
        org.codehaus.groovy.control.CompilerConfiguration r2;
        groovy.lang.GroovyShell r0;

        r0 := @this: groovy.lang.GroovyShell;

        r2 := @parameter0: org.codehaus.groovy.control.CompilerConfiguration;

        $r1 = new groovy.lang.Binding;

        specialinvoke $r1.<groovy.lang.Binding: void <init>()>();

        specialinvoke r0.<groovy.lang.GroovyShell: void <init>(groovy.lang.Binding,org.codehaus.groovy.control.CompilerConfiguration)>($r1, r2);

        return;
    }

    public void <init>(groovy.lang.Binding, org.codehaus.groovy.control.CompilerConfiguration)
    {
        groovy.lang.Binding r1;
        org.codehaus.groovy.control.CompilerConfiguration r2;
        groovy.lang.GroovyShell r0;

        r0 := @this: groovy.lang.GroovyShell;

        r1 := @parameter0: groovy.lang.Binding;

        r2 := @parameter1: org.codehaus.groovy.control.CompilerConfiguration;

        specialinvoke r0.<groovy.lang.GroovyShell: void <init>(java.lang.ClassLoader,groovy.lang.Binding,org.codehaus.groovy.control.CompilerConfiguration)>(null, r1, r2);

        return;
    }

    public void <init>(java.lang.ClassLoader, groovy.lang.Binding)
    {
        java.lang.ClassLoader r1;
        groovy.lang.Binding r2;
        org.codehaus.groovy.control.CompilerConfiguration $r3;
        groovy.lang.GroovyShell r0;

        r0 := @this: groovy.lang.GroovyShell;

        r1 := @parameter0: java.lang.ClassLoader;

        r2 := @parameter1: groovy.lang.Binding;

        $r3 = <org.codehaus.groovy.control.CompilerConfiguration: org.codehaus.groovy.control.CompilerConfiguration DEFAULT>;

        specialinvoke r0.<groovy.lang.GroovyShell: void <init>(java.lang.ClassLoader,groovy.lang.Binding,org.codehaus.groovy.control.CompilerConfiguration)>(r1, r2, $r3);

        return;
    }

    public void <init>(java.lang.ClassLoader)
    {
        java.lang.ClassLoader r1;
        groovy.lang.Binding $r2;
        org.codehaus.groovy.control.CompilerConfiguration $r3;
        groovy.lang.GroovyShell r0;

        r0 := @this: groovy.lang.GroovyShell;

        r1 := @parameter0: java.lang.ClassLoader;

        $r2 = new groovy.lang.Binding;

        specialinvoke $r2.<groovy.lang.Binding: void <init>()>();

        $r3 = <org.codehaus.groovy.control.CompilerConfiguration: org.codehaus.groovy.control.CompilerConfiguration DEFAULT>;

        specialinvoke r0.<groovy.lang.GroovyShell: void <init>(java.lang.ClassLoader,groovy.lang.Binding,org.codehaus.groovy.control.CompilerConfiguration)>(r1, $r2, $r3);

        return;
    }

    public void <init>(java.lang.ClassLoader, groovy.lang.Binding, org.codehaus.groovy.control.CompilerConfiguration)
    {
        org.codehaus.groovy.control.CompilerConfiguration r2;
        java.lang.IllegalArgumentException $r5, $r6;
        groovy.lang.GroovyShell r0;
        groovy.lang.GroovyShell$1 $r9;
        java.lang.Class $r4, $r8;
        java.lang.Object $r10;
        java.lang.ClassLoader r3, $r7;
        groovy.lang.Binding r1;
        groovy.lang.GroovyClassLoader $r11;

        r0 := @this: groovy.lang.GroovyShell;

        r3 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: groovy.lang.Binding;

        r2 := @parameter2: org.codehaus.groovy.control.CompilerConfiguration;

        specialinvoke r0.<groovy.lang.GroovyObjectSupport: void <init>()>();

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Binding must not be null.");

        throw $r6;

     label1:
        if r2 != null goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Compiler configuration must not be null.");

        throw $r5;

     label2:
        if r3 == null goto label3;

        $r7 = r3;

        goto label6;

     label3:
        $r4 = <groovy.lang.GroovyShell: java.lang.Class class$groovy$lang$GroovyShell>;

        if $r4 != null goto label4;

        $r8 = staticinvoke <groovy.lang.GroovyShell: java.lang.Class class$(java.lang.String)>("groovy.lang.GroovyShell");

        <groovy.lang.GroovyShell: java.lang.Class class$groovy$lang$GroovyShell> = $r8;

        goto label5;

     label4:
        $r8 = <groovy.lang.GroovyShell: java.lang.Class class$groovy$lang$GroovyShell>;

     label5:
        $r7 = virtualinvoke $r8.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label6:
        $r9 = new groovy.lang.GroovyShell$1;

        specialinvoke $r9.<groovy.lang.GroovyShell$1: void <init>(groovy.lang.GroovyShell,java.lang.ClassLoader,org.codehaus.groovy.control.CompilerConfiguration)>(r0, $r7, r2);

        $r10 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r9);

        $r11 = (groovy.lang.GroovyClassLoader) $r10;

        r0.<groovy.lang.GroovyShell: groovy.lang.GroovyClassLoader loader> = $r11;

        r0.<groovy.lang.GroovyShell: groovy.lang.Binding context> = r1;

        r0.<groovy.lang.GroovyShell: org.codehaus.groovy.control.CompilerConfiguration config> = r2;

        return;
    }

    public void initializeBinding()
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        groovy.lang.Binding $r1;
        groovy.lang.GroovyShell r0;

        r0 := @this: groovy.lang.GroovyShell;

        $r1 = r0.<groovy.lang.GroovyShell: groovy.lang.Binding context>;

        $r2 = virtualinvoke $r1.<groovy.lang.Binding: java.util.Map getVariables()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("shell");

        if $r3 != null goto label1;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("shell", r0);

     label1:
        return;
    }

    public void resetLoadedClasses()
    {
        groovy.lang.GroovyClassLoader $r1;
        groovy.lang.GroovyShell r0;

        r0 := @this: groovy.lang.GroovyShell;

        $r1 = r0.<groovy.lang.GroovyShell: groovy.lang.GroovyClassLoader loader>;

        virtualinvoke $r1.<groovy.lang.GroovyClassLoader: void clearCache()>();

        return;
    }

    public void <init>(groovy.lang.GroovyShell)
    {
        groovy.lang.Binding $r2;
        groovy.lang.GroovyClassLoader $r3;
        groovy.lang.GroovyShell r0, r1;

        r0 := @this: groovy.lang.GroovyShell;

        r1 := @parameter0: groovy.lang.GroovyShell;

        $r3 = r1.<groovy.lang.GroovyShell: groovy.lang.GroovyClassLoader loader>;

        $r2 = r1.<groovy.lang.GroovyShell: groovy.lang.Binding context>;

        specialinvoke r0.<groovy.lang.GroovyShell: void <init>(java.lang.ClassLoader,groovy.lang.Binding)>($r3, $r2);

        return;
    }

    public groovy.lang.Binding getContext()
    {
        groovy.lang.Binding $r1;
        groovy.lang.GroovyShell r0;

        r0 := @this: groovy.lang.GroovyShell;

        $r1 = r0.<groovy.lang.GroovyShell: groovy.lang.Binding context>;

        return $r1;
    }

    public groovy.lang.GroovyClassLoader getClassLoader()
    {
        groovy.lang.GroovyClassLoader $r1;
        groovy.lang.GroovyShell r0;

        r0 := @this: groovy.lang.GroovyShell;

        $r1 = r0.<groovy.lang.GroovyShell: groovy.lang.GroovyClassLoader loader>;

        return $r1;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        java.lang.Object $r2, r3;
        java.lang.String r1;
        groovy.lang.GroovyShell r0;

        r0 := @this: groovy.lang.GroovyShell;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<groovy.lang.GroovyShell: java.lang.Object getVariable(java.lang.String)>(r1);

        r3 = $r2;

        if $r2 != null goto label1;

        r3 = specialinvoke r0.<groovy.lang.GroovyObjectSupport: java.lang.Object getProperty(java.lang.String)>(r1);

     label1:
        return r3;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        groovy.lang.GroovyRuntimeException $r3;
        java.lang.Object r2;
        java.lang.String r1;
        groovy.lang.GroovyShell r0;

        r0 := @this: groovy.lang.GroovyShell;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        virtualinvoke r0.<groovy.lang.GroovyShell: void setVariable(java.lang.String,java.lang.Object)>(r1, r2);

     label1:
        specialinvoke r0.<groovy.lang.GroovyObjectSupport: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch groovy.lang.GroovyRuntimeException from label1 to label2 with label3;
    }

    public java.lang.Object run(java.io.File, java.util.List) throws org.codehaus.groovy.control.CompilationFailedException, java.io.IOException
    {
        java.lang.Object[] $r4;
        java.lang.String[] r1, $r5, $r6;
        groovy.lang.GroovyShell r2;
        java.io.File r3;
        java.util.List r0;
        int $i0;
        java.lang.Object $r7;

        r2 := @this: groovy.lang.GroovyShell;

        r3 := @parameter0: java.io.File;

        r0 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        r1 = newarray (java.lang.String)[$i0];

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r1);

        $r5 = (java.lang.String[]) $r4;

        $r6 = (java.lang.String[]) $r5;

        $r7 = virtualinvoke r2.<groovy.lang.GroovyShell: java.lang.Object run(java.io.File,java.lang.String[])>(r3, $r6);

        return $r7;
    }

    public java.lang.Object run(java.lang.String, java.lang.String, java.util.List) throws org.codehaus.groovy.control.CompilationFailedException
    {
        java.util.List r0;
        int $i0;
        java.lang.String[] r1;
        java.lang.Object $r5;
        java.lang.String r3, r4;
        groovy.lang.GroovyShell r2;

        r2 := @this: groovy.lang.GroovyShell;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r0 := @parameter2: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        r1 = newarray (java.lang.String)[$i0];

        interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r1);

        $r5 = virtualinvoke r2.<groovy.lang.GroovyShell: java.lang.Object run(java.lang.String,java.lang.String,java.lang.String[])>(r3, r4, r1);

        return $r5;
    }

    public java.lang.Object run(java.io.File, java.lang.String[]) throws org.codehaus.groovy.control.CompilationFailedException, java.io.IOException
    {
        java.lang.String[] r8;
        java.lang.StringBuffer $r12, $r14, $r15;
        java.lang.Thread $r2;
        int $i0, i1;
        java.lang.String $r1, $r10, $r16;
        boolean $z0, $z1, $z2;
        java.io.PrintStream $r13;
        java.security.PrivilegedActionException $r18;
        java.io.IOException $r22;
        java.lang.RuntimeException $r21;
        java.io.File r0;
        groovy.lang.GroovyShell r4;
        java.lang.Exception $r19, $r20;
        groovy.lang.GroovyShell$2 $r6;
        groovy.lang.GroovyShell$1DoSetContext $r3;
        org.codehaus.groovy.control.CompilationFailedException $r17, $r23;
        java.lang.Object $r7, $r9;
        java.lang.Class $r11;
        groovy.lang.GroovyClassLoader $r5;

        r4 := @this: groovy.lang.GroovyShell;

        r0 := @parameter0: java.io.File;

        r8 := @parameter1: java.lang.String[];

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getName()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        i1 = $i0 + 1;

        if $i0 < 0 goto label1;

        $r10 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(i1);

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("java");

        if $z0 == 0 goto label1;

        $r13 = <java.lang.System: java.io.PrintStream err>;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("error: cannot compile file with .java extension: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r16);

        $r17 = new org.codehaus.groovy.control.CompilationFailedException;

        specialinvoke $r17.<org.codehaus.groovy.control.CompilationFailedException: void <init>(int,org.codehaus.groovy.control.ProcessingUnit)>(0, null);

        throw $r17;

     label1:
        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = new groovy.lang.GroovyShell$1DoSetContext;

        $r5 = r4.<groovy.lang.GroovyShell: groovy.lang.GroovyClassLoader loader>;

        specialinvoke $r3.<groovy.lang.GroovyShell$1DoSetContext: void <init>(groovy.lang.GroovyShell,java.lang.ClassLoader,java.lang.Thread)>(r4, $r5, $r2);

        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r3);

     label2:
        $r6 = new groovy.lang.GroovyShell$2;

        specialinvoke $r6.<groovy.lang.GroovyShell$2: void <init>(groovy.lang.GroovyShell,java.io.File)>(r4, r0);

        $r7 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r6);

        $r11 = (java.lang.Class) $r7;

     label3:
        goto label7;

     label4:
        $r18 := @caughtexception;

        $r19 = virtualinvoke $r18.<java.security.PrivilegedActionException: java.lang.Exception getException()>();

        $z1 = $r19 instanceof org.codehaus.groovy.control.CompilationFailedException;

        if $z1 == 0 goto label5;

        $r23 = (org.codehaus.groovy.control.CompilationFailedException) $r19;

        throw $r23;

     label5:
        $z2 = $r19 instanceof java.io.IOException;

        if $z2 == 0 goto label6;

        $r22 = (java.io.IOException) $r19;

        throw $r22;

     label6:
        $r20 = virtualinvoke $r18.<java.security.PrivilegedActionException: java.lang.Exception getException()>();

        $r21 = (java.lang.RuntimeException) $r20;

        throw $r21;

     label7:
        $r9 = specialinvoke r4.<groovy.lang.GroovyShell: java.lang.Object runMainOrTestOrRunnable(java.lang.Class,java.lang.String[])>($r11, r8);

        return $r9;

        catch java.security.PrivilegedActionException from label2 to label3 with label4;
    }

    private java.lang.Object runMainOrTestOrRunnable(java.lang.Class, java.lang.String[])
    {
        java.lang.Object[] $r4;
        java.lang.NoSuchMethodException $r11;
        java.lang.String[] r5;
        groovy.lang.Script r21;
        java.lang.InstantiationException $r19;
        groovy.lang.Binding $r9;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.IllegalAccessException $r18;
        groovy.lang.GroovyRuntimeException $r13;
        java.lang.Class[] $r2;
        groovy.lang.GroovyShell r8;
        java.lang.Class r0, $r1, $r3, $r12, $r20, $r22, $r23;
        java.lang.Object $r6, $r7, $r10, $r14, $r15, $r16, $r17;

        r8 := @this: groovy.lang.GroovyShell;

        r0 := @parameter0: java.lang.Class;

        r5 := @parameter1: java.lang.String[];

        if r0 != null goto label01;

        return null;

     label01:
        $r1 = <groovy.lang.GroovyShell: java.lang.Class class$groovy$lang$Script>;

        if $r1 != null goto label02;

        $r20 = staticinvoke <groovy.lang.GroovyShell: java.lang.Class class$(java.lang.String)>("groovy.lang.Script");

        <groovy.lang.GroovyShell: java.lang.Class class$groovy$lang$Script> = $r20;

        goto label03;

     label02:
        $r20 = <groovy.lang.GroovyShell: java.lang.Class class$groovy$lang$Script>;

     label03:
        $z0 = virtualinvoke $r20.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 == 0 goto label10;

        r21 = null;

     label04:
        $r7 = virtualinvoke r0.<java.lang.Class: java.lang.Object newInstance()>();

        r21 = (groovy.lang.Script) $r7;

     label05:
        goto label08;

     label06:
        $r19 := @caughtexception;

        goto label08;

     label07:
        $r18 := @caughtexception;

     label08:
        if r21 == null goto label10;

        $r9 = r8.<groovy.lang.GroovyShell: groovy.lang.Binding context>;

        virtualinvoke r21.<groovy.lang.Script: void setBinding(groovy.lang.Binding)>($r9);

        virtualinvoke r21.<groovy.lang.Script: void setProperty(java.lang.String,java.lang.Object)>("args", r5);

        $r10 = virtualinvoke r21.<groovy.lang.Script: java.lang.Object run()>();

     label09:
        return $r10;

     label10:
        $r2 = newarray (java.lang.Class)[1];

        $r3 = <groovy.lang.GroovyShell: java.lang.Class array$Ljava$lang$String>;

        if $r3 != null goto label11;

        $r22 = staticinvoke <groovy.lang.GroovyShell: java.lang.Class class$(java.lang.String)>("[Ljava.lang.String;");

        <groovy.lang.GroovyShell: java.lang.Class array$Ljava$lang$String> = $r22;

        goto label12;

     label11:
        $r22 = <groovy.lang.GroovyShell: java.lang.Class array$Ljava$lang$String>;

     label12:
        $r2[0] = $r22;

        virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("main", $r2);

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r5;

        $r6 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r0, "main", $r4);

     label13:
        return $r6;

     label14:
        $r11 := @caughtexception;

        $r12 = <groovy.lang.GroovyShell: java.lang.Class class$java$lang$Runnable>;

        if $r12 != null goto label15;

        $r23 = staticinvoke <groovy.lang.GroovyShell: java.lang.Class class$(java.lang.String)>("java.lang.Runnable");

        <groovy.lang.GroovyShell: java.lang.Class class$java$lang$Runnable> = $r23;

        goto label16;

     label15:
        $r23 = <groovy.lang.GroovyShell: java.lang.Class class$java$lang$Runnable>;

     label16:
        $z1 = virtualinvoke $r23.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z1 == 0 goto label17;

        $r17 = specialinvoke r8.<groovy.lang.GroovyShell: java.lang.Object runRunnable(java.lang.Class,java.lang.String[])>(r0, r5);

        return $r17;

     label17:
        $z2 = specialinvoke r8.<groovy.lang.GroovyShell: boolean isJUnit3Test(java.lang.Class)>(r0);

        if $z2 == 0 goto label18;

        $r16 = specialinvoke r8.<groovy.lang.GroovyShell: java.lang.Object runJUnit3Test(java.lang.Class)>(r0);

        return $r16;

     label18:
        $z3 = specialinvoke r8.<groovy.lang.GroovyShell: boolean isJUnit4Test(java.lang.Class)>(r0);

        if $z3 == 0 goto label19;

        $r15 = specialinvoke r8.<groovy.lang.GroovyShell: java.lang.Object runJUnit4Test(java.lang.Class)>(r0);

        return $r15;

     label19:
        $z4 = specialinvoke r8.<groovy.lang.GroovyShell: boolean isTestNgTest(java.lang.Class)>(r0);

        if $z4 == 0 goto label20;

        $r14 = specialinvoke r8.<groovy.lang.GroovyShell: java.lang.Object runTestNgTest(java.lang.Class)>(r0);

        return $r14;

     label20:
        $r13 = new groovy.lang.GroovyRuntimeException;

        specialinvoke $r13.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String)>("This script or class could not be run.\nIt should either: \n- have a main method, \n- be a JUnit test, TestNG test or extend GroovyTestCase, \n- or implement the Runnable interface.");

        throw $r13;

        catch java.lang.InstantiationException from label04 to label05 with label06;
        catch java.lang.IllegalAccessException from label04 to label05 with label07;
        catch java.lang.NoSuchMethodException from label01 to label09 with label14;
        catch java.lang.NoSuchMethodException from label10 to label13 with label14;
    }

    private java.lang.Object runRunnable(java.lang.Class, java.lang.String[])
    {
        java.lang.Throwable $r10, $r16, r20;
        java.lang.Object[] $r5, $r14;
        java.lang.NoSuchMethodException $r9, $r11;
        java.lang.String[] $r2, r6;
        java.lang.reflect.Constructor $r4, $r13, r18;
        java.lang.Runnable r19;
        groovy.lang.GroovyRuntimeException $r8;
        java.lang.Class[] $r1, $r12;
        groovy.lang.GroovyShell r17;
        java.lang.Class r0, $r3;
        java.lang.Object $r7, $r15;

        r17 := @this: groovy.lang.GroovyShell;

        r0 := @parameter0: java.lang.Class;

        r6 := @parameter1: java.lang.String[];

        r18 = null;

        r19 = null;

        r20 = null;

     label01:
        $r1 = newarray (java.lang.Class)[1];

        $r2 = newarray (java.lang.String)[0];

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r1[0] = $r3;

        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r1);

        r18 = $r4;

     label02:
        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r6;

        $r7 = virtualinvoke $r4.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r5);

        r19 = (java.lang.Runnable) $r7;

     label03:
        goto label05;

     label04:
        $r16 := @caughtexception;

        r20 = $r16;

     label05:
        goto label13;

     label06:
        $r11 := @caughtexception;

     label07:
        $r12 = newarray (java.lang.Class)[0];

        $r13 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r12);

        r18 = $r13;

     label08:
        $r14 = newarray (java.lang.Object)[0];

        $r15 = virtualinvoke $r13.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r14);

        r19 = (java.lang.Runnable) $r15;

     label09:
        goto label11;

     label10:
        $r10 := @caughtexception;

        r20 = $r10;

     label11:
        goto label13;

     label12:
        $r9 := @caughtexception;

        r20 = $r9;

     label13:
        if r18 == null goto label14;

        if r19 == null goto label14;

        interfaceinvoke r19.<java.lang.Runnable: void run()>();

        goto label15;

     label14:
        $r8 = new groovy.lang.GroovyRuntimeException;

        specialinvoke $r8.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("This script or class was runnable but could not be run. ", r20);

        throw $r8;

     label15:
        return null;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.NoSuchMethodException from label01 to label05 with label06;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.NoSuchMethodException from label07 to label11 with label12;
    }

    private java.lang.Object runJUnit3Test(java.lang.Class)
    {
        java.lang.Object[] $r0, $r3;
        groovy.lang.GroovyRuntimeException $r6;
        groovy.lang.GroovyShell r7;
        java.lang.Class r1;
        java.lang.Object $r2, $r4;
        java.lang.ClassNotFoundException $r5;

        r7 := @this: groovy.lang.GroovyShell;

        r1 := @parameter0: java.lang.Class;

     label1:
        $r0 = newarray (java.lang.Object)[1];

        $r0[0] = r1;

        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeConstructorOf(java.lang.String,java.lang.Object)>("junit.framework.TestSuite", $r0);

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r2;

        $r4 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeStaticMethod(java.lang.String,java.lang.String,java.lang.Object)>("junit.textui.TestRunner", "run", $r3);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new groovy.lang.GroovyRuntimeException;

        specialinvoke $r6.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String)>("Failed to run the unit test. JUnit is not on the Classpath.");

        throw $r6;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    private java.lang.Object runJUnit4Test(java.lang.Class)
    {
        java.lang.Object[] $r0;
        groovy.lang.GroovyRuntimeException $r4;
        java.lang.Class r1;
        java.lang.Object $r2;
        java.lang.ClassNotFoundException $r3;
        groovy.lang.GroovyShell r5;

        r5 := @this: groovy.lang.GroovyShell;

        r1 := @parameter0: java.lang.Class;

     label1:
        $r0 = newarray (java.lang.Object)[1];

        $r0[0] = r1;

        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeStaticMethod(java.lang.String,java.lang.String,java.lang.Object)>("org.codehaus.groovy.vmplugin.v5.JUnit4Utils", "realRunJUnit4Test", $r0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new groovy.lang.GroovyRuntimeException;

        specialinvoke $r4.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String)>("Failed to run the JUnit 4 test.");

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    private java.lang.Object runTestNgTest(java.lang.Class)
    {
        java.lang.Object[] $r0;
        groovy.lang.GroovyRuntimeException $r4;
        java.lang.Class r1;
        java.lang.Object $r2;
        java.lang.ClassNotFoundException $r3;
        groovy.lang.GroovyShell r5;

        r5 := @this: groovy.lang.GroovyShell;

        r1 := @parameter0: java.lang.Class;

     label1:
        $r0 = newarray (java.lang.Object)[1];

        $r0[0] = r1;

        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeStaticMethod(java.lang.String,java.lang.String,java.lang.Object)>("org.codehaus.groovy.vmplugin.v5.TestNgUtils", "realRunTestNgTest", $r0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new groovy.lang.GroovyRuntimeException;

        specialinvoke $r4.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String)>("Failed to run the TestNG test.");

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    private boolean isJUnit3Test(java.lang.Class)
    {
        java.lang.Throwable $r4;
        groovy.lang.GroovyShell r0;
        java.lang.Class $r2, r3;
        java.lang.ClassNotFoundException $r5;
        groovy.lang.GroovyClassLoader $r1;
        boolean $z0, z1;

        r0 := @this: groovy.lang.GroovyShell;

        r3 := @parameter0: java.lang.Class;

        z1 = 0;

     label1:
        $r1 = r0.<groovy.lang.GroovyShell: groovy.lang.GroovyClassLoader loader>;

        $r2 = virtualinvoke $r1.<groovy.lang.GroovyClassLoader: java.lang.Class loadClass(java.lang.String)>("junit.framework.TestCase");

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r3);

        if $z0 == 0 goto label2;

        z1 = 1;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

     label6:
        return z1;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label4 with label5;
    }

    private boolean isJUnit4Test(java.lang.Class)
    {
        java.lang.Object[] $r1;
        groovy.lang.GroovyRuntimeException $r9;
        char $c0;
        groovy.lang.GroovyShell r3;
        int $i1;
        java.lang.Boolean $r6;
        java.lang.Class r2;
        java.lang.Object $r5;
        java.lang.ClassNotFoundException $r7;
        java.lang.String $r0;
        groovy.lang.GroovyClassLoader $r4;
        boolean z0;

        r3 := @this: groovy.lang.GroovyShell;

        r2 := @parameter0: java.lang.Class;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.version");

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(2);

        $i1 = (int) $c0;

        if $i1 >= 53 goto label1;

        return 0;

     label1:
        z0 = 0;

     label2:
        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = r2;

        $r4 = r3.<groovy.lang.GroovyShell: groovy.lang.GroovyClassLoader loader>;

        $r1[1] = $r4;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeStaticMethod(java.lang.String,java.lang.String,java.lang.Object)>("org.codehaus.groovy.vmplugin.v5.JUnit4Utils", "realIsJUnit4Test", $r1);

        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        if $r5 != $r6 goto label3;

        z0 = 1;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        $r9 = new groovy.lang.GroovyRuntimeException;

        specialinvoke $r9.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String)>("Failed to invoke the JUnit 4 helper class.");

        throw $r9;

     label5:
        return z0;

        catch java.lang.ClassNotFoundException from label2 to label3 with label4;
    }

    private boolean isTestNgTest(java.lang.Class)
    {
        java.lang.Object[] $r1;
        groovy.lang.GroovyRuntimeException $r9;
        char $c0;
        groovy.lang.GroovyShell r3;
        int $i1;
        java.lang.Boolean $r6;
        java.lang.Class r2;
        java.lang.Object $r5;
        java.lang.ClassNotFoundException $r7;
        java.lang.String $r0;
        groovy.lang.GroovyClassLoader $r4;
        boolean z0;

        r3 := @this: groovy.lang.GroovyShell;

        r2 := @parameter0: java.lang.Class;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.version");

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(2);

        $i1 = (int) $c0;

        if $i1 >= 53 goto label1;

        return 0;

     label1:
        z0 = 0;

     label2:
        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = r2;

        $r4 = r3.<groovy.lang.GroovyShell: groovy.lang.GroovyClassLoader loader>;

        $r1[1] = $r4;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeStaticMethod(java.lang.String,java.lang.String,java.lang.Object)>("org.codehaus.groovy.vmplugin.v5.TestNgUtils", "realIsTestNgTest", $r1);

        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        if $r5 != $r6 goto label3;

        z0 = 1;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        $r9 = new groovy.lang.GroovyRuntimeException;

        specialinvoke $r9.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String)>("Failed to invoke the TestNG helper class.");

        throw $r9;

     label5:
        return z0;

        catch java.lang.ClassNotFoundException from label2 to label3 with label4;
    }

    public java.lang.Object run(java.lang.String, java.lang.String, java.lang.String[]) throws org.codehaus.groovy.control.CompilationFailedException
    {
        byte[] $r5;
        java.lang.String[] r7;
        org.codehaus.groovy.control.CompilerConfiguration $r3;
        groovy.lang.GroovyShell r0;
        java.io.ByteArrayInputStream $r1;
        org.codehaus.groovy.control.CompilationFailedException $r10;
        java.lang.Object $r8;
        java.lang.String r2, $r4, r6;
        java.io.UnsupportedEncodingException $r9;

        r0 := @this: groovy.lang.GroovyShell;

        r2 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String[];

     label1:
        $r1 = new java.io.ByteArrayInputStream;

        $r3 = r0.<groovy.lang.GroovyShell: org.codehaus.groovy.control.CompilerConfiguration config>;

        $r4 = virtualinvoke $r3.<org.codehaus.groovy.control.CompilerConfiguration: java.lang.String getSourceEncoding()>();

        $r5 = virtualinvoke r2.<java.lang.String: byte[] getBytes(java.lang.String)>($r4);

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5);

        $r8 = virtualinvoke r0.<groovy.lang.GroovyShell: java.lang.Object run(java.io.InputStream,java.lang.String,java.lang.String[])>($r1, r6, r7);

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        $r10 = new org.codehaus.groovy.control.CompilationFailedException;

        specialinvoke $r10.<org.codehaus.groovy.control.CompilationFailedException: void <init>(int,org.codehaus.groovy.control.ProcessingUnit,java.lang.Throwable)>(0, null, $r9);

        throw $r10;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public java.lang.Object run(java.io.InputStream, java.lang.String, java.lang.String[]) throws org.codehaus.groovy.control.CompilationFailedException
    {
        groovy.lang.GroovyCodeSource r5;
        java.lang.String[] r7;
        groovy.lang.GroovyShell$3 $r0;
        groovy.lang.GroovyShell r1;
        java.lang.Object $r4, $r8;
        java.lang.Class $r6;
        java.lang.String r3;
        java.io.InputStream r2;

        r1 := @this: groovy.lang.GroovyShell;

        r2 := @parameter0: java.io.InputStream;

        r3 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String[];

        $r0 = new groovy.lang.GroovyShell$3;

        specialinvoke $r0.<groovy.lang.GroovyShell$3: void <init>(groovy.lang.GroovyShell,java.io.InputStream,java.lang.String)>(r1, r2, r3);

        $r4 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        r5 = (groovy.lang.GroovyCodeSource) $r4;

        $r6 = specialinvoke r1.<groovy.lang.GroovyShell: java.lang.Class parseClass(groovy.lang.GroovyCodeSource)>(r5);

        $r8 = specialinvoke r1.<groovy.lang.GroovyShell: java.lang.Object runMainOrTestOrRunnable(java.lang.Class,java.lang.String[])>($r6, r7);

        return $r8;
    }

    public java.lang.Object getVariable(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r4;
        java.lang.String r3;
        groovy.lang.Binding $r1;
        groovy.lang.GroovyShell r0;

        r0 := @this: groovy.lang.GroovyShell;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<groovy.lang.GroovyShell: groovy.lang.Binding context>;

        $r2 = virtualinvoke $r1.<groovy.lang.Binding: java.util.Map getVariables()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        return $r4;
    }

    public void setVariable(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String r1;
        groovy.lang.Binding $r3;
        groovy.lang.GroovyShell r0;

        r0 := @this: groovy.lang.GroovyShell;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<groovy.lang.GroovyShell: groovy.lang.Binding context>;

        virtualinvoke $r3.<groovy.lang.Binding: void setVariable(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public java.lang.Object evaluate(groovy.lang.GroovyCodeSource) throws org.codehaus.groovy.control.CompilationFailedException
    {
        groovy.lang.GroovyCodeSource r1;
        java.lang.Object $r3;
        groovy.lang.Script $r2;
        groovy.lang.GroovyShell r0;

        r0 := @this: groovy.lang.GroovyShell;

        r1 := @parameter0: groovy.lang.GroovyCodeSource;

        $r2 = virtualinvoke r0.<groovy.lang.GroovyShell: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>(r1);

        $r3 = virtualinvoke $r2.<groovy.lang.Script: java.lang.Object run()>();

        return $r3;
    }

    public java.lang.Object evaluate(java.lang.String, java.lang.String) throws org.codehaus.groovy.control.CompilationFailedException
    {
        byte[] $r5;
        org.codehaus.groovy.control.CompilerConfiguration $r3;
        groovy.lang.GroovyShell r0;
        java.io.ByteArrayInputStream $r1;
        org.codehaus.groovy.control.CompilationFailedException $r9;
        java.lang.Object $r7;
        java.lang.String r2, $r4, r6;
        java.io.UnsupportedEncodingException $r8;

        r0 := @this: groovy.lang.GroovyShell;

        r2 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

     label1:
        $r1 = new java.io.ByteArrayInputStream;

        $r3 = r0.<groovy.lang.GroovyShell: org.codehaus.groovy.control.CompilerConfiguration config>;

        $r4 = virtualinvoke $r3.<org.codehaus.groovy.control.CompilerConfiguration: java.lang.String getSourceEncoding()>();

        $r5 = virtualinvoke r2.<java.lang.String: byte[] getBytes(java.lang.String)>($r4);

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5);

        $r7 = virtualinvoke r0.<groovy.lang.GroovyShell: java.lang.Object evaluate(java.io.InputStream,java.lang.String)>($r1, r6);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        $r9 = new org.codehaus.groovy.control.CompilationFailedException;

        specialinvoke $r9.<org.codehaus.groovy.control.CompilationFailedException: void <init>(int,org.codehaus.groovy.control.ProcessingUnit,java.lang.Throwable)>(0, null, $r8);

        throw $r9;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public java.lang.Object evaluate(java.lang.String, java.lang.String, java.lang.String) throws org.codehaus.groovy.control.CompilationFailedException
    {
        byte[] $r6;
        groovy.lang.GroovyCodeSource $r1;
        org.codehaus.groovy.control.CompilerConfiguration $r4;
        groovy.lang.GroovyShell r0;
        java.io.ByteArrayInputStream $r2;
        org.codehaus.groovy.control.CompilationFailedException $r11;
        java.lang.Object $r9;
        java.lang.String r3, $r5, r7, r8;
        java.io.UnsupportedEncodingException $r10;

        r0 := @this: groovy.lang.GroovyShell;

        r3 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.String;

     label1:
        $r1 = new groovy.lang.GroovyCodeSource;

        $r2 = new java.io.ByteArrayInputStream;

        $r4 = r0.<groovy.lang.GroovyShell: org.codehaus.groovy.control.CompilerConfiguration config>;

        $r5 = virtualinvoke $r4.<org.codehaus.groovy.control.CompilerConfiguration: java.lang.String getSourceEncoding()>();

        $r6 = virtualinvoke r3.<java.lang.String: byte[] getBytes(java.lang.String)>($r5);

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r6);

        specialinvoke $r1.<groovy.lang.GroovyCodeSource: void <init>(java.io.InputStream,java.lang.String,java.lang.String)>($r2, r7, r8);

        $r9 = virtualinvoke r0.<groovy.lang.GroovyShell: java.lang.Object evaluate(groovy.lang.GroovyCodeSource)>($r1);

     label2:
        return $r9;

     label3:
        $r10 := @caughtexception;

        $r11 = new org.codehaus.groovy.control.CompilationFailedException;

        specialinvoke $r11.<org.codehaus.groovy.control.CompilationFailedException: void <init>(int,org.codehaus.groovy.control.ProcessingUnit,java.lang.Throwable)>(0, null, $r10);

        throw $r11;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public java.lang.Object evaluate(java.io.File) throws org.codehaus.groovy.control.CompilationFailedException, java.io.IOException
    {
        groovy.lang.GroovyCodeSource $r1;
        java.lang.Object $r3;
        groovy.lang.GroovyShell r0;
        java.io.File r2;

        r0 := @this: groovy.lang.GroovyShell;

        r2 := @parameter0: java.io.File;

        $r1 = new groovy.lang.GroovyCodeSource;

        specialinvoke $r1.<groovy.lang.GroovyCodeSource: void <init>(java.io.File)>(r2);

        $r3 = virtualinvoke r0.<groovy.lang.GroovyShell: java.lang.Object evaluate(groovy.lang.GroovyCodeSource)>($r1);

        return $r3;
    }

    public java.lang.Object evaluate(java.lang.String) throws org.codehaus.groovy.control.CompilationFailedException
    {
        byte[] $r5;
        org.codehaus.groovy.control.CompilerConfiguration $r3;
        groovy.lang.GroovyShell r0;
        java.io.ByteArrayInputStream $r1;
        org.codehaus.groovy.control.CompilationFailedException $r9;
        java.lang.Object $r7;
        java.lang.String r2, $r4, $r6;
        java.io.UnsupportedEncodingException $r8;

        r0 := @this: groovy.lang.GroovyShell;

        r2 := @parameter0: java.lang.String;

     label1:
        $r1 = new java.io.ByteArrayInputStream;

        $r3 = r0.<groovy.lang.GroovyShell: org.codehaus.groovy.control.CompilerConfiguration config>;

        $r4 = virtualinvoke $r3.<org.codehaus.groovy.control.CompilerConfiguration: java.lang.String getSourceEncoding()>();

        $r5 = virtualinvoke r2.<java.lang.String: byte[] getBytes(java.lang.String)>($r4);

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5);

        $r6 = virtualinvoke r0.<groovy.lang.GroovyShell: java.lang.String generateScriptName()>();

        $r7 = virtualinvoke r0.<groovy.lang.GroovyShell: java.lang.Object evaluate(java.io.InputStream,java.lang.String)>($r1, $r6);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        $r9 = new org.codehaus.groovy.control.CompilationFailedException;

        specialinvoke $r9.<org.codehaus.groovy.control.CompilationFailedException: void <init>(int,org.codehaus.groovy.control.ProcessingUnit,java.lang.Throwable)>(0, null, $r8);

        throw $r9;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public java.lang.Object evaluate(java.io.InputStream) throws org.codehaus.groovy.control.CompilationFailedException
    {
        java.lang.Object $r3;
        java.lang.String $r2;
        groovy.lang.GroovyShell r0;
        java.io.InputStream r1;

        r0 := @this: groovy.lang.GroovyShell;

        r1 := @parameter0: java.io.InputStream;

        $r2 = virtualinvoke r0.<groovy.lang.GroovyShell: java.lang.String generateScriptName()>();

        $r3 = virtualinvoke r0.<groovy.lang.GroovyShell: java.lang.Object evaluate(java.io.InputStream,java.lang.String)>(r1, $r2);

        return $r3;
    }

    public java.lang.Object evaluate(java.io.InputStream, java.lang.String) throws org.codehaus.groovy.control.CompilationFailedException
    {
        java.lang.Throwable $r6;
        groovy.lang.Script $r3, r8;
        groovy.lang.GroovyShell r0;
        java.lang.Object $r4;
        java.lang.Class $r5, $r7;
        java.lang.String r2;
        java.io.InputStream r1;

        r0 := @this: groovy.lang.GroovyShell;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

        r8 = null;

     label1:
        $r3 = virtualinvoke r0.<groovy.lang.GroovyShell: groovy.lang.Script parse(java.io.InputStream,java.lang.String)>(r1, r2);

        r8 = $r3;

        $r4 = virtualinvoke $r3.<groovy.lang.Script: java.lang.Object run()>();

     label2:
        if $r3 == null goto label3;

        $r5 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: void removeClass(java.lang.Class)>($r5);

     label3:
        return $r4;

     label4:
        $r6 := @caughtexception;

     label5:
        if r8 == null goto label6;

        $r7 = virtualinvoke r8.<java.lang.Object: java.lang.Class getClass()>();

        staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: void removeClass(java.lang.Class)>($r7);

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public groovy.lang.Script parse(java.io.InputStream, java.lang.String) throws org.codehaus.groovy.control.CompilationFailedException
    {
        java.lang.Object $r4;
        groovy.lang.GroovyCodeSource r5;
        java.lang.String r3;
        groovy.lang.Script $r6;
        groovy.lang.GroovyShell$4 $r0;
        groovy.lang.GroovyShell r1;
        java.io.InputStream r2;

        r1 := @this: groovy.lang.GroovyShell;

        r2 := @parameter0: java.io.InputStream;

        r3 := @parameter1: java.lang.String;

        $r0 = new groovy.lang.GroovyShell$4;

        specialinvoke $r0.<groovy.lang.GroovyShell$4: void <init>(groovy.lang.GroovyShell,java.io.InputStream,java.lang.String)>(r1, r2, r3);

        $r4 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        r5 = (groovy.lang.GroovyCodeSource) $r4;

        $r6 = virtualinvoke r1.<groovy.lang.GroovyShell: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>(r5);

        return $r6;
    }

    private java.lang.Class parseClass(groovy.lang.GroovyCodeSource) throws org.codehaus.groovy.control.CompilationFailedException
    {
        groovy.lang.GroovyCodeSource r1;
        java.lang.Class $r3;
        groovy.lang.GroovyClassLoader $r2;
        groovy.lang.GroovyShell r0;

        r0 := @this: groovy.lang.GroovyShell;

        r1 := @parameter0: groovy.lang.GroovyCodeSource;

        $r2 = r0.<groovy.lang.GroovyShell: groovy.lang.GroovyClassLoader loader>;

        $r3 = virtualinvoke $r2.<groovy.lang.GroovyClassLoader: java.lang.Class parseClass(groovy.lang.GroovyCodeSource,boolean)>(r1, 0);

        return $r3;
    }

    public groovy.lang.Script parse(groovy.lang.GroovyCodeSource) throws org.codehaus.groovy.control.CompilationFailedException
    {
        groovy.lang.GroovyCodeSource r1;
        java.lang.Class $r2;
        groovy.lang.Binding $r3;
        groovy.lang.Script $r4;
        groovy.lang.GroovyShell r0;

        r0 := @this: groovy.lang.GroovyShell;

        r1 := @parameter0: groovy.lang.GroovyCodeSource;

        $r2 = specialinvoke r0.<groovy.lang.GroovyShell: java.lang.Class parseClass(groovy.lang.GroovyCodeSource)>(r1);

        $r3 = r0.<groovy.lang.GroovyShell: groovy.lang.Binding context>;

        $r4 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.Script createScript(java.lang.Class,groovy.lang.Binding)>($r2, $r3);

        return $r4;
    }

    public groovy.lang.Script parse(java.io.File) throws org.codehaus.groovy.control.CompilationFailedException, java.io.IOException
    {
        groovy.lang.GroovyCodeSource $r1;
        groovy.lang.Script $r3;
        groovy.lang.GroovyShell r0;
        java.io.File r2;

        r0 := @this: groovy.lang.GroovyShell;

        r2 := @parameter0: java.io.File;

        $r1 = new groovy.lang.GroovyCodeSource;

        specialinvoke $r1.<groovy.lang.GroovyCodeSource: void <init>(java.io.File)>(r2);

        $r3 = virtualinvoke r0.<groovy.lang.GroovyShell: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>($r1);

        return $r3;
    }

    public groovy.lang.Script parse(java.lang.String) throws org.codehaus.groovy.control.CompilationFailedException
    {
        byte[] $r5;
        org.codehaus.groovy.control.CompilerConfiguration $r3;
        groovy.lang.Script $r7;
        groovy.lang.GroovyShell r0;
        java.io.ByteArrayInputStream $r1;
        org.codehaus.groovy.control.CompilationFailedException $r9;
        java.lang.String r2, $r4, $r6;
        java.io.UnsupportedEncodingException $r8;

        r0 := @this: groovy.lang.GroovyShell;

        r2 := @parameter0: java.lang.String;

     label1:
        $r1 = new java.io.ByteArrayInputStream;

        $r3 = r0.<groovy.lang.GroovyShell: org.codehaus.groovy.control.CompilerConfiguration config>;

        $r4 = virtualinvoke $r3.<org.codehaus.groovy.control.CompilerConfiguration: java.lang.String getSourceEncoding()>();

        $r5 = virtualinvoke r2.<java.lang.String: byte[] getBytes(java.lang.String)>($r4);

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5);

        $r6 = virtualinvoke r0.<groovy.lang.GroovyShell: java.lang.String generateScriptName()>();

        $r7 = virtualinvoke r0.<groovy.lang.GroovyShell: groovy.lang.Script parse(java.io.InputStream,java.lang.String)>($r1, $r6);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        $r9 = new org.codehaus.groovy.control.CompilationFailedException;

        specialinvoke $r9.<org.codehaus.groovy.control.CompilationFailedException: void <init>(int,org.codehaus.groovy.control.ProcessingUnit,java.lang.Throwable)>(0, null, $r8);

        throw $r9;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public groovy.lang.Script parse(java.lang.String, java.lang.String) throws org.codehaus.groovy.control.CompilationFailedException
    {
        byte[] $r5;
        org.codehaus.groovy.control.CompilerConfiguration $r3;
        groovy.lang.Script $r7;
        groovy.lang.GroovyShell r0;
        java.io.ByteArrayInputStream $r1;
        org.codehaus.groovy.control.CompilationFailedException $r9;
        java.lang.String r2, $r4, r6;
        java.io.UnsupportedEncodingException $r8;

        r0 := @this: groovy.lang.GroovyShell;

        r2 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

     label1:
        $r1 = new java.io.ByteArrayInputStream;

        $r3 = r0.<groovy.lang.GroovyShell: org.codehaus.groovy.control.CompilerConfiguration config>;

        $r4 = virtualinvoke $r3.<org.codehaus.groovy.control.CompilerConfiguration: java.lang.String getSourceEncoding()>();

        $r5 = virtualinvoke r2.<java.lang.String: byte[] getBytes(java.lang.String)>($r4);

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5);

        $r7 = virtualinvoke r0.<groovy.lang.GroovyShell: groovy.lang.Script parse(java.io.InputStream,java.lang.String)>($r1, r6);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        $r9 = new org.codehaus.groovy.control.CompilationFailedException;

        specialinvoke $r9.<org.codehaus.groovy.control.CompilationFailedException: void <init>(int,org.codehaus.groovy.control.ProcessingUnit,java.lang.Throwable)>(0, null, $r8);

        throw $r9;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public groovy.lang.Script parse(java.io.InputStream) throws org.codehaus.groovy.control.CompilationFailedException
    {
        java.lang.String $r2;
        groovy.lang.Script $r3;
        groovy.lang.GroovyShell r0;
        java.io.InputStream r1;

        r0 := @this: groovy.lang.GroovyShell;

        r1 := @parameter0: java.io.InputStream;

        $r2 = virtualinvoke r0.<groovy.lang.GroovyShell: java.lang.String generateScriptName()>();

        $r3 = virtualinvoke r0.<groovy.lang.GroovyShell: groovy.lang.Script parse(java.io.InputStream,java.lang.String)>(r1, $r2);

        return $r3;
    }

    protected synchronized java.lang.String generateScriptName()
    {
        groovy.lang.GroovyShell r2;
        java.lang.StringBuffer $r0, $r1, $r3, $r4;
        int $i0, $i1;
        java.lang.String $r5;

        r2 := @this: groovy.lang.GroovyShell;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Script");

        $i0 = r2.<groovy.lang.GroovyShell: int counter>;

        $i1 = $i0 + 1;

        r2.<groovy.lang.GroovyShell: int counter> = $i1;

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".groovy");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static groovy.lang.GroovyClassLoader access$000(groovy.lang.GroovyShell)
    {
        groovy.lang.GroovyClassLoader $r1;
        groovy.lang.GroovyShell r0;

        r0 := @parameter0: groovy.lang.GroovyShell;

        $r1 = r0.<groovy.lang.GroovyShell: groovy.lang.GroovyClassLoader loader>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[0];

        <groovy.lang.GroovyShell: java.lang.String[] EMPTY_ARGS> = $r0;

        return;
    }
}
