public final class org.apache.poi.hdgf.chunks.ChunkHeaderV4V5 extends org.apache.poi.hdgf.chunks.ChunkHeader
{
    protected short unknown2;
    protected short unknown3;

    public void <init>()
    {
        org.apache.poi.hdgf.chunks.ChunkHeaderV4V5 r0;

        r0 := @this: org.apache.poi.hdgf.chunks.ChunkHeaderV4V5;

        specialinvoke r0.<org.apache.poi.hdgf.chunks.ChunkHeader: void <init>()>();

        return;
    }

    public short getUnknown2()
    {
        short $s0;
        org.apache.poi.hdgf.chunks.ChunkHeaderV4V5 r0;

        r0 := @this: org.apache.poi.hdgf.chunks.ChunkHeaderV4V5;

        $s0 = r0.<org.apache.poi.hdgf.chunks.ChunkHeaderV4V5: short unknown2>;

        return $s0;
    }

    public short getUnknown3()
    {
        short $s0;
        org.apache.poi.hdgf.chunks.ChunkHeaderV4V5 r0;

        r0 := @this: org.apache.poi.hdgf.chunks.ChunkHeaderV4V5;

        $s0 = r0.<org.apache.poi.hdgf.chunks.ChunkHeaderV4V5: short unknown3>;

        return $s0;
    }

    protected static int getHeaderSize()
    {
        return 12;
    }

    public int getSizeInBytes()
    {
        int $i0;
        org.apache.poi.hdgf.chunks.ChunkHeaderV4V5 r0;

        r0 := @this: org.apache.poi.hdgf.chunks.ChunkHeaderV4V5;

        $i0 = staticinvoke <org.apache.poi.hdgf.chunks.ChunkHeaderV4V5: int getHeaderSize()>();

        return $i0;
    }

    public boolean hasTrailer()
    {
        org.apache.poi.hdgf.chunks.ChunkHeaderV4V5 r0;

        r0 := @this: org.apache.poi.hdgf.chunks.ChunkHeaderV4V5;

        return 0;
    }

    public boolean hasSeparator()
    {
        org.apache.poi.hdgf.chunks.ChunkHeaderV4V5 r0;

        r0 := @this: org.apache.poi.hdgf.chunks.ChunkHeaderV4V5;

        return 0;
    }

    public java.nio.charset.Charset getChunkCharset()
    {
        java.nio.charset.Charset $r0;
        org.apache.poi.hdgf.chunks.ChunkHeaderV4V5 r1;

        r1 := @this: org.apache.poi.hdgf.chunks.ChunkHeaderV4V5;

        $r0 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("ASCII");

        return $r0;
    }
}
