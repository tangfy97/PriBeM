public class org.apache.pdfbox.pdfwriter.ContentStreamWriter extends java.lang.Object
{
    private java.io.OutputStream output;
    public static final byte[] SPACE;
    public static final byte[] EOL;

    public void <init>(java.io.OutputStream)
    {
        java.io.OutputStream r1;
        org.apache.pdfbox.pdfwriter.ContentStreamWriter r0;

        r0 := @this: org.apache.pdfbox.pdfwriter.ContentStreamWriter;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: java.io.OutputStream output> = r1;

        return;
    }

    public void writeTokens(java.util.List, int, int) throws java.io.IOException
    {
        java.io.OutputStream $r1, $r4;
        java.util.List r2;
        int i0, i1, i2;
        java.lang.Object $r3;
        org.apache.pdfbox.pdfwriter.ContentStreamWriter r0;

        r0 := @this: org.apache.pdfbox.pdfwriter.ContentStreamWriter;

        r2 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = i0;

     label1:
        if i2 >= i1 goto label2;

        $r3 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        specialinvoke r0.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: void writeObject(java.lang.Object)>($r3);

        $r4 = r0.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: java.io.OutputStream output>;

        virtualinvoke $r4.<java.io.OutputStream: void write(int)>(32);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r1 = r0.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: java.io.OutputStream output>;

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        return;
    }

    private void writeObject(java.lang.Object) throws java.io.IOException
    {
        byte[] $r10, $r11, $r15, $r22, $r23, $r26, $r31, $r33, $r35, $r39, $r41, $r46, $r49, $r51, $r53, $r56;
        org.apache.pdfbox.cos.COSFloat $r65;
        org.apache.pdfbox.cos.COSBoolean $r61;
        java.util.Set $r18, $r37;
        org.apache.pdfbox.cos.COSBase $r29, $r55;
        java.lang.StringBuilder $r2, $r3, $r4;
        org.apache.pdfbox.util.PDFOperator r71;
        org.apache.pdfbox.cos.COSString $r67;
        java.lang.String $r5, $r6, $r9, $r13, $r20;
        org.apache.pdfbox.util.ImageParameters $r16;
        java.util.Map$Entry r70;
        java.io.IOException $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.apache.pdfbox.cos.COSDictionary $r17, r69;
        org.apache.pdfbox.cos.COSArray r68;
        org.apache.pdfbox.cos.COSInteger $r63;
        int $i0, i1;
        org.apache.pdfbox.pdfwriter.ContentStreamWriter r7;
        java.io.OutputStream $r8, $r12, $r14, $r21, $r24, $r25, $r30, $r32, $r34, $r36, $r40, $r42, $r47, $r50, $r52, $r54, $r57, $r58, $r60, $r62, $r64, $r66;
        org.apache.pdfbox.cos.COSName r28, $r59;
        java.util.Iterator $r19, $r38;
        java.lang.Object r0, $r27, $r43, $r44, $r45, $r48;

        r7 := @this: org.apache.pdfbox.pdfwriter.ContentStreamWriter;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.pdfbox.cos.COSString;

        if $z0 == 0 goto label01;

        $r67 = (org.apache.pdfbox.cos.COSString) r0;

        $r66 = r7.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: java.io.OutputStream output>;

        virtualinvoke $r67.<org.apache.pdfbox.cos.COSString: void writePDF(java.io.OutputStream)>($r66);

        goto label18;

     label01:
        $z1 = r0 instanceof org.apache.pdfbox.cos.COSFloat;

        if $z1 == 0 goto label02;

        $r65 = (org.apache.pdfbox.cos.COSFloat) r0;

        $r64 = r7.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: java.io.OutputStream output>;

        virtualinvoke $r65.<org.apache.pdfbox.cos.COSFloat: void writePDF(java.io.OutputStream)>($r64);

        goto label18;

     label02:
        $z2 = r0 instanceof org.apache.pdfbox.cos.COSInteger;

        if $z2 == 0 goto label03;

        $r63 = (org.apache.pdfbox.cos.COSInteger) r0;

        $r62 = r7.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: java.io.OutputStream output>;

        virtualinvoke $r63.<org.apache.pdfbox.cos.COSInteger: void writePDF(java.io.OutputStream)>($r62);

        goto label18;

     label03:
        $z3 = r0 instanceof org.apache.pdfbox.cos.COSBoolean;

        if $z3 == 0 goto label04;

        $r61 = (org.apache.pdfbox.cos.COSBoolean) r0;

        $r60 = r7.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: java.io.OutputStream output>;

        virtualinvoke $r61.<org.apache.pdfbox.cos.COSBoolean: void writePDF(java.io.OutputStream)>($r60);

        goto label18;

     label04:
        $z4 = r0 instanceof org.apache.pdfbox.cos.COSName;

        if $z4 == 0 goto label05;

        $r59 = (org.apache.pdfbox.cos.COSName) r0;

        $r58 = r7.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: java.io.OutputStream output>;

        virtualinvoke $r59.<org.apache.pdfbox.cos.COSName: void writePDF(java.io.OutputStream)>($r58);

        goto label18;

     label05:
        $z5 = r0 instanceof org.apache.pdfbox.cos.COSArray;

        if $z5 == 0 goto label08;

        r68 = (org.apache.pdfbox.cos.COSArray) r0;

        $r52 = r7.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: java.io.OutputStream output>;

        $r51 = <org.apache.pdfbox.pdfwriter.COSWriter: byte[] ARRAY_OPEN>;

        virtualinvoke $r52.<java.io.OutputStream: void write(byte[])>($r51);

        i1 = 0;

     label06:
        $i0 = virtualinvoke r68.<org.apache.pdfbox.cos.COSArray: int size()>();

        if i1 >= $i0 goto label07;

        $r55 = virtualinvoke r68.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(i1);

        specialinvoke r7.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: void writeObject(java.lang.Object)>($r55);

        $r57 = r7.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: java.io.OutputStream output>;

        $r56 = <org.apache.pdfbox.pdfwriter.ContentStreamWriter: byte[] SPACE>;

        virtualinvoke $r57.<java.io.OutputStream: void write(byte[])>($r56);

        i1 = i1 + 1;

        goto label06;

     label07:
        $r54 = r7.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: java.io.OutputStream output>;

        $r53 = <org.apache.pdfbox.pdfwriter.COSWriter: byte[] ARRAY_CLOSE>;

        virtualinvoke $r54.<java.io.OutputStream: void write(byte[])>($r53);

        goto label18;

     label08:
        $z6 = r0 instanceof org.apache.pdfbox.cos.COSDictionary;

        if $z6 == 0 goto label12;

        r69 = (org.apache.pdfbox.cos.COSDictionary) r0;

        $r36 = r7.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: java.io.OutputStream output>;

        $r35 = <org.apache.pdfbox.pdfwriter.COSWriter: byte[] DICT_OPEN>;

        virtualinvoke $r36.<java.io.OutputStream: void write(byte[])>($r35);

        $r37 = virtualinvoke r69.<org.apache.pdfbox.cos.COSDictionary: java.util.Set entrySet()>();

        $r38 = interfaceinvoke $r37.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z10 = interfaceinvoke $r38.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label11;

        $r43 = interfaceinvoke $r38.<java.util.Iterator: java.lang.Object next()>();

        r70 = (java.util.Map$Entry) $r43;

        $r44 = interfaceinvoke r70.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r44 == null goto label10;

        $r45 = interfaceinvoke r70.<java.util.Map$Entry: java.lang.Object getKey()>();

        specialinvoke r7.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: void writeObject(java.lang.Object)>($r45);

        $r47 = r7.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: java.io.OutputStream output>;

        $r46 = <org.apache.pdfbox.pdfwriter.ContentStreamWriter: byte[] SPACE>;

        virtualinvoke $r47.<java.io.OutputStream: void write(byte[])>($r46);

        $r48 = interfaceinvoke r70.<java.util.Map$Entry: java.lang.Object getValue()>();

        specialinvoke r7.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: void writeObject(java.lang.Object)>($r48);

        $r50 = r7.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: java.io.OutputStream output>;

        $r49 = <org.apache.pdfbox.pdfwriter.ContentStreamWriter: byte[] SPACE>;

        virtualinvoke $r50.<java.io.OutputStream: void write(byte[])>($r49);

     label10:
        goto label09;

     label11:
        $r40 = r7.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: java.io.OutputStream output>;

        $r39 = <org.apache.pdfbox.pdfwriter.COSWriter: byte[] DICT_CLOSE>;

        virtualinvoke $r40.<java.io.OutputStream: void write(byte[])>($r39);

        $r42 = r7.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: java.io.OutputStream output>;

        $r41 = <org.apache.pdfbox.pdfwriter.ContentStreamWriter: byte[] SPACE>;

        virtualinvoke $r42.<java.io.OutputStream: void write(byte[])>($r41);

        goto label18;

     label12:
        $z7 = r0 instanceof org.apache.pdfbox.util.PDFOperator;

        if $z7 == 0 goto label17;

        r71 = (org.apache.pdfbox.util.PDFOperator) r0;

        $r6 = virtualinvoke r71.<org.apache.pdfbox.util.PDFOperator: java.lang.String getOperation()>();

        $z8 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("BI");

        if $z8 == 0 goto label15;

        $r14 = r7.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: java.io.OutputStream output>;

        $r13 = "BI";

        $r15 = virtualinvoke $r13.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        virtualinvoke $r14.<java.io.OutputStream: void write(byte[])>($r15);

        $r16 = virtualinvoke r71.<org.apache.pdfbox.util.PDFOperator: org.apache.pdfbox.util.ImageParameters getImageParameters()>();

        $r17 = virtualinvoke $r16.<org.apache.pdfbox.util.ImageParameters: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        $r18 = virtualinvoke $r17.<org.apache.pdfbox.cos.COSDictionary: java.util.Set keySet()>();

        $r19 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label13:
        $z9 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label14;

        $r27 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r28 = (org.apache.pdfbox.cos.COSName) $r27;

        $r29 = virtualinvoke $r17.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r28);

        $r30 = r7.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: java.io.OutputStream output>;

        virtualinvoke r28.<org.apache.pdfbox.cos.COSName: void writePDF(java.io.OutputStream)>($r30);

        $r32 = r7.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: java.io.OutputStream output>;

        $r31 = <org.apache.pdfbox.pdfwriter.ContentStreamWriter: byte[] SPACE>;

        virtualinvoke $r32.<java.io.OutputStream: void write(byte[])>($r31);

        specialinvoke r7.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: void writeObject(java.lang.Object)>($r29);

        $r34 = r7.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: java.io.OutputStream output>;

        $r33 = <org.apache.pdfbox.pdfwriter.ContentStreamWriter: byte[] EOL>;

        virtualinvoke $r34.<java.io.OutputStream: void write(byte[])>($r33);

        goto label13;

     label14:
        $r21 = r7.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: java.io.OutputStream output>;

        $r20 = "ID";

        $r22 = virtualinvoke $r20.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        virtualinvoke $r21.<java.io.OutputStream: void write(byte[])>($r22);

        $r24 = r7.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: java.io.OutputStream output>;

        $r23 = <org.apache.pdfbox.pdfwriter.ContentStreamWriter: byte[] EOL>;

        virtualinvoke $r24.<java.io.OutputStream: void write(byte[])>($r23);

        $r25 = r7.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: java.io.OutputStream output>;

        $r26 = virtualinvoke r71.<org.apache.pdfbox.util.PDFOperator: byte[] getImageData()>();

        virtualinvoke $r25.<java.io.OutputStream: void write(byte[])>($r26);

        goto label16;

     label15:
        $r8 = r7.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: java.io.OutputStream output>;

        $r9 = virtualinvoke r71.<org.apache.pdfbox.util.PDFOperator: java.lang.String getOperation()>();

        $r10 = virtualinvoke $r9.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        virtualinvoke $r8.<java.io.OutputStream: void write(byte[])>($r10);

        $r12 = r7.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: java.io.OutputStream output>;

        $r11 = <org.apache.pdfbox.pdfwriter.ContentStreamWriter: byte[] EOL>;

        virtualinvoke $r12.<java.io.OutputStream: void write(byte[])>($r11);

     label16:
        goto label18;

     label17:
        $r1 = new java.io.IOException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error:Unknown type in content stream:");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label18:
        return;
    }

    public void writeTokens(java.util.List) throws java.io.IOException
    {
        int $i0;
        java.util.List r1;
        org.apache.pdfbox.pdfwriter.ContentStreamWriter r0;

        r0 := @this: org.apache.pdfbox.pdfwriter.ContentStreamWriter;

        r1 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        virtualinvoke r0.<org.apache.pdfbox.pdfwriter.ContentStreamWriter: void writeTokens(java.util.List,int,int)>(r1, 0, $i0);

        return;
    }

    static void <clinit>()
    {
        byte[] $r0, $r1;

        $r0 = newarray (byte)[1];

        $r0[0] = 32;

        <org.apache.pdfbox.pdfwriter.ContentStreamWriter: byte[] SPACE> = $r0;

        $r1 = newarray (byte)[1];

        $r1[0] = 10;

        <org.apache.pdfbox.pdfwriter.ContentStreamWriter: byte[] EOL> = $r1;

        return;
    }
}
