public class com.ctc.wstx.compat.Jdk14Impl extends com.ctc.wstx.compat.Jdk13Impl
{

    public void <init>()
    {
        com.ctc.wstx.compat.Jdk14Impl r0;

        r0 := @this: com.ctc.wstx.compat.Jdk14Impl;

        specialinvoke r0.<com.ctc.wstx.compat.Jdk13Impl: void <init>(boolean)>(1);

        return;
    }

    protected void <init>(boolean)
    {
        com.ctc.wstx.compat.Jdk14Impl r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.compat.Jdk14Impl;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.compat.Jdk13Impl: void <init>(boolean)>(1);

        return;
    }

    public final boolean leakingThreadLocal()
    {
        com.ctc.wstx.compat.Jdk14Impl r0;

        r0 := @this: com.ctc.wstx.compat.Jdk14Impl;

        return 0;
    }

    public java.util.HashMap getInsertOrderedMap()
    {
        java.util.LinkedHashMap $r0;
        com.ctc.wstx.compat.Jdk14Impl r1;

        r1 := @this: com.ctc.wstx.compat.Jdk14Impl;

        $r0 = new java.util.LinkedHashMap;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>();

        return $r0;
    }

    public java.util.HashMap getInsertOrderedMap(int)
    {
        java.util.LinkedHashMap $r0;
        int i0;
        com.ctc.wstx.compat.Jdk14Impl r1;

        r1 := @this: com.ctc.wstx.compat.Jdk14Impl;

        i0 := @parameter0: int;

        $r0 = new java.util.LinkedHashMap;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>(int)>(i0);

        return $r0;
    }

    public java.util.HashMap getLRULimitMap(int)
    {
        int i0;
        com.ctc.wstx.compat.Jdk14Impl$LimitMap $r0;
        com.ctc.wstx.compat.Jdk14Impl r1;

        r1 := @this: com.ctc.wstx.compat.Jdk14Impl;

        i0 := @parameter0: int;

        $r0 = new com.ctc.wstx.compat.Jdk14Impl$LimitMap;

        specialinvoke $r0.<com.ctc.wstx.compat.Jdk14Impl$LimitMap: void <init>(int,int,float)>(i0, i0, 0.8F);

        return $r0;
    }

    public boolean setInitCause(java.lang.Throwable, java.lang.Throwable)
    {
        java.lang.Throwable r0, $r1, r2;
        com.ctc.wstx.compat.Jdk14Impl r3;

        r3 := @this: com.ctc.wstx.compat.Jdk14Impl;

        r0 := @parameter0: java.lang.Throwable;

        r2 := @parameter1: java.lang.Throwable;

        $r1 = virtualinvoke r0.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r1 != null goto label1;

        virtualinvoke r0.<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>(r2);

     label1:
        return 1;
    }
}
