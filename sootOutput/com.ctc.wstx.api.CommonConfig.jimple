abstract class com.ctc.wstx.api.CommonConfig extends java.lang.Object implements org.codehaus.stax2.XMLStreamProperties
{
    protected static final java.lang.String IMPL_NAME;
    protected static final java.lang.String IMPL_VERSION;
    static final int PROP_IMPL_NAME;
    static final int PROP_IMPL_VERSION;
    static final int PROP_SUPPORTS_XML11;
    static final int PROP_SUPPORTS_XMLID;
    static final java.util.HashMap sStdProperties;

    protected void <init>()
    {
        com.ctc.wstx.api.CommonConfig r0;

        r0 := @this: com.ctc.wstx.api.CommonConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.Object getProperty(java.lang.String)
    {
        com.ctc.wstx.api.CommonConfig r0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuffer $r4, $r5, $r6, $r7;
        int $i0, $i1;
        java.lang.Object $r2, $r9;
        java.lang.String r1, $r8;

        r0 := @this: com.ctc.wstx.api.CommonConfig;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<com.ctc.wstx.api.CommonConfig: int findPropertyId(java.lang.String)>(r1);

        if $i0 < 0 goto label1;

        $r9 = virtualinvoke r0.<com.ctc.wstx.api.CommonConfig: java.lang.Object getProperty(int)>($i0);

        return $r9;

     label1:
        $i1 = virtualinvoke r0.<com.ctc.wstx.api.CommonConfig: int findStdPropertyId(java.lang.String)>(r1);

        if $i1 >= 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized property \'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label2:
        $r2 = virtualinvoke r0.<com.ctc.wstx.api.CommonConfig: java.lang.Object getStdProperty(int)>($i1);

        return $r2;
    }

    public final boolean isPropertySupported(java.lang.String)
    {
        com.ctc.wstx.api.CommonConfig r0;
        int $i0, $i1;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.CommonConfig;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<com.ctc.wstx.api.CommonConfig: int findPropertyId(java.lang.String)>(r1);

        if $i0 >= 0 goto label1;

        $i1 = virtualinvoke r0.<com.ctc.wstx.api.CommonConfig: int findStdPropertyId(java.lang.String)>(r1);

        if $i1 < 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public final boolean setProperty(java.lang.String, java.lang.Object)
    {
        com.ctc.wstx.api.CommonConfig r0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuffer $r4, $r5, $r6, $r7;
        int $i0, $i1;
        java.lang.Object r2;
        java.lang.String r1, $r8;
        boolean $z0, $z1;

        r0 := @this: com.ctc.wstx.api.CommonConfig;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $i0 = virtualinvoke r0.<com.ctc.wstx.api.CommonConfig: int findPropertyId(java.lang.String)>(r1);

        if $i0 < 0 goto label1;

        $z1 = virtualinvoke r0.<com.ctc.wstx.api.CommonConfig: boolean setProperty(java.lang.String,int,java.lang.Object)>(r1, $i0, r2);

        return $z1;

     label1:
        $i1 = virtualinvoke r0.<com.ctc.wstx.api.CommonConfig: int findStdPropertyId(java.lang.String)>(r1);

        if $i1 >= 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized property \'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label2:
        $z0 = virtualinvoke r0.<com.ctc.wstx.api.CommonConfig: boolean setStdProperty(java.lang.String,int,java.lang.Object)>(r1, $i1, r2);

        return $z0;
    }

    protected abstract int findPropertyId(java.lang.String);

    protected boolean doesSupportXml11()
    {
        com.ctc.wstx.api.CommonConfig r0;

        r0 := @this: com.ctc.wstx.api.CommonConfig;

        return 1;
    }

    protected abstract java.lang.Object getProperty(int);

    protected abstract boolean setProperty(java.lang.String, int, java.lang.Object);

    protected int findStdPropertyId(java.lang.String)
    {
        com.ctc.wstx.api.CommonConfig r4;
        int $i0, $i2;
        java.util.HashMap $r1;
        java.lang.Object $r2;
        java.lang.String r0;
        java.lang.Integer r3;

        r4 := @this: com.ctc.wstx.api.CommonConfig;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.ctc.wstx.api.CommonConfig: java.util.HashMap sStdProperties>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (java.lang.Integer) $r2;

        if r3 != null goto label1;

        $i2 = (int) -1;

        $i0 = $i2;

        goto label2;

     label1:
        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

     label2:
        return $i0;
    }

    protected boolean setStdProperty(java.lang.String, int, java.lang.Object)
    {
        com.ctc.wstx.api.CommonConfig r0;
        int i0;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.api.CommonConfig;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        return 0;
    }

    protected java.lang.Object getStdProperty(int)
    {
        com.ctc.wstx.api.CommonConfig r0;
        java.lang.Error $r1;
        java.lang.StringBuffer $r2, $r3, $r4, $r5;
        int i0;
        java.lang.Boolean $r7;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: com.ctc.wstx.api.CommonConfig;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label6;
        };

     label1:
        return "woodstox";

     label2:
        return "3.2";

     label3:
        $z0 = virtualinvoke r0.<com.ctc.wstx.api.CommonConfig: boolean doesSupportXml11()>();

        if $z0 == 0 goto label4;

        $r7 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label5;

     label4:
        $r7 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label5:
        return $r7;

     label6:
        $r1 = new java.lang.Error;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Internal error: no handler for property with internal id ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.Error: void <init>(java.lang.String)>($r6);

        throw $r1;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0, $r2, $r4, $r6, $r8, $r10;
        java.lang.Integer $r1, $r3, $r5, $r7, $r9;

        <com.ctc.wstx.api.CommonConfig: int PROP_SUPPORTS_XMLID> = 4;

        <com.ctc.wstx.api.CommonConfig: int PROP_SUPPORTS_XML11> = 3;

        <com.ctc.wstx.api.CommonConfig: int PROP_IMPL_VERSION> = 2;

        <com.ctc.wstx.api.CommonConfig: int PROP_IMPL_NAME> = 1;

        <com.ctc.wstx.api.CommonConfig: java.lang.String IMPL_VERSION> = "3.2";

        <com.ctc.wstx.api.CommonConfig: java.lang.String IMPL_NAME> = "woodstox";

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>(int)>(16);

        <com.ctc.wstx.api.CommonConfig: java.util.HashMap sStdProperties> = $r0;

        $r2 = <com.ctc.wstx.api.CommonConfig: java.util.HashMap sStdProperties>;

        $r1 = new java.lang.Integer;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(1);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.codehaus.stax2.implName", $r1);

        $r4 = <com.ctc.wstx.api.CommonConfig: java.util.HashMap sStdProperties>;

        $r3 = new java.lang.Integer;

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>(2);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.codehaus.stax2.implVersion", $r3);

        $r6 = <com.ctc.wstx.api.CommonConfig: java.util.HashMap sStdProperties>;

        $r5 = new java.lang.Integer;

        specialinvoke $r5.<java.lang.Integer: void <init>(int)>(3);

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.codehaus.stax2.supportsXml11", $r5);

        $r8 = <com.ctc.wstx.api.CommonConfig: java.util.HashMap sStdProperties>;

        $r7 = new java.lang.Integer;

        specialinvoke $r7.<java.lang.Integer: void <init>(int)>(3);

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.codehaus.stax2.supportsXml11", $r7);

        $r10 = <com.ctc.wstx.api.CommonConfig: java.util.HashMap sStdProperties>;

        $r9 = new java.lang.Integer;

        specialinvoke $r9.<java.lang.Integer: void <init>(int)>(1);

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://java.sun.com/xml/stream/properties/implementation-name", $r9);

        return;
    }
}
