public class org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom extends java.lang.Object
{
    public static final int TITLE_SLIDE;
    public static final int TITLE_BODY_SLIDE;
    public static final int TITLE_MASTER_SLIDE;
    public static final int MASTER_SLIDE;
    public static final int MASTER_NOTES;
    public static final int NOTES_TITLE_BODY;
    public static final int HANDOUT;
    public static final int TITLE_ONLY;
    public static final int TITLE_2_COLUMN_BODY;
    public static final int TITLE_2_ROW_BODY;
    public static final int TITLE_2_COLUNM_RIGHT_2_ROW_BODY;
    public static final int TITLE_2_COLUNM_LEFT_2_ROW_BODY;
    public static final int TITLE_2_ROW_BOTTOM_2_COLUMN_BODY;
    public static final int TITLE_2_ROW_TOP_2_COLUMN_BODY;
    public static final int FOUR_OBJECTS;
    public static final int BIG_OBJECT;
    public static final int BLANK_SLIDE;
    public static final int VERTICAL_TITLE_BODY_LEFT;
    public static final int VERTICAL_TITLE_2_ROW_BODY_LEFT;
    private int geometry;
    private byte[] placeholderIDs;

    public int getGeometryType()
    {
        int $i0;
        org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom r0;

        r0 := @this: org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom;

        $i0 = r0.<org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: int geometry>;

        return $i0;
    }

    public void setGeometryType(int)
    {
        int i0;
        org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom r0;

        r0 := @this: org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: int geometry> = i0;

        return;
    }

    public void <init>(byte[])
    {
        byte[] r1, $r2, $r3;
        java.lang.RuntimeException $r4;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;
        org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom r0;

        r0 := @this: org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = lengthof r1;

        if $i0 == 12 goto label1;

        $r4 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SSlideLayoutAtom created with byte array not 12 bytes long - was ");

        $i2 = lengthof r1;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes in size");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        $i1 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, 0);

        r0.<org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: int geometry> = $i1;

        $r2 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: byte[] placeholderIDs> = $r2;

        $r3 = r0.<org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: byte[] placeholderIDs>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 4, $r3, 0, 8);

        return;
    }

    public void writeOut(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        byte[] $r2;
        int $i0;
        org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom r0;

        r0 := @this: org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom;

        r1 := @parameter0: java.io.OutputStream;

        $i0 = r0.<org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: int geometry>;

        staticinvoke <org.apache.poi.hslf.record.Record: void writeLittleEndian(int,java.io.OutputStream)>($i0, r1);

        $r2 = r0.<org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: byte[] placeholderIDs>;

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r2);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: int VERTICAL_TITLE_2_ROW_BODY_LEFT> = 17;

        <org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: int VERTICAL_TITLE_BODY_LEFT> = 17;

        <org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: int BLANK_SLIDE> = 16;

        <org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: int BIG_OBJECT> = 15;

        <org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: int FOUR_OBJECTS> = 14;

        <org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: int TITLE_2_ROW_TOP_2_COLUMN_BODY> = 13;

        <org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: int TITLE_2_ROW_BOTTOM_2_COLUMN_BODY> = 12;

        <org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: int TITLE_2_COLUNM_LEFT_2_ROW_BODY> = 11;

        <org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: int TITLE_2_COLUNM_RIGHT_2_ROW_BODY> = 10;

        <org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: int TITLE_2_ROW_BODY> = 9;

        <org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: int TITLE_2_COLUMN_BODY> = 8;

        <org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: int TITLE_ONLY> = 7;

        <org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: int HANDOUT> = 6;

        <org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: int NOTES_TITLE_BODY> = 5;

        <org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: int MASTER_NOTES> = 4;

        <org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: int MASTER_SLIDE> = 3;

        <org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: int TITLE_MASTER_SLIDE> = 2;

        <org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: int TITLE_BODY_SLIDE> = 1;

        <org.apache.poi.hslf.record.SlideAtom$SSlideLayoutAtom: int TITLE_SLIDE> = 0;

        return;
    }
}
