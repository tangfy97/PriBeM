public class org.apache.batik.bridge.svg12.SVG12BridgeExtension extends org.apache.batik.bridge.SVGBridgeExtension
{

    public void <init>()
    {
        org.apache.batik.bridge.svg12.SVG12BridgeExtension r0;

        r0 := @this: org.apache.batik.bridge.svg12.SVG12BridgeExtension;

        specialinvoke r0.<org.apache.batik.bridge.SVGBridgeExtension: void <init>()>();

        return;
    }

    public float getPriority()
    {
        org.apache.batik.bridge.svg12.SVG12BridgeExtension r0;

        r0 := @this: org.apache.batik.bridge.svg12.SVG12BridgeExtension;

        return 0.0F;
    }

    public java.util.Iterator getImplementedExtensions()
    {
        java.util.List $r0;
        org.apache.batik.bridge.svg12.SVG12BridgeExtension r2;
        java.util.Iterator $r1;

        r2 := @this: org.apache.batik.bridge.svg12.SVG12BridgeExtension;

        $r0 = <java.util.Collections: java.util.List EMPTY_LIST>;

        $r1 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

        return $r1;
    }

    public java.lang.String getAuthor()
    {
        org.apache.batik.bridge.svg12.SVG12BridgeExtension r0;

        r0 := @this: org.apache.batik.bridge.svg12.SVG12BridgeExtension;

        return "The Apache Batik Team.";
    }

    public java.lang.String getContactAddress()
    {
        org.apache.batik.bridge.svg12.SVG12BridgeExtension r0;

        r0 := @this: org.apache.batik.bridge.svg12.SVG12BridgeExtension;

        return "batik-dev@xmlgraphics.apache.org";
    }

    public java.lang.String getURL()
    {
        org.apache.batik.bridge.svg12.SVG12BridgeExtension r0;

        r0 := @this: org.apache.batik.bridge.svg12.SVG12BridgeExtension;

        return "http://xml.apache.org/batik";
    }

    public java.lang.String getDescription()
    {
        org.apache.batik.bridge.svg12.SVG12BridgeExtension r0;

        r0 := @this: org.apache.batik.bridge.svg12.SVG12BridgeExtension;

        return "The required SVG 1.2 tags";
    }

    public void registerTags(org.apache.batik.bridge.BridgeContext)
    {
        org.apache.batik.bridge.svg12.SVGMultiImageElementBridge $r3;
        org.apache.batik.bridge.svg12.SVGSolidColorElementBridge $r4;
        org.apache.batik.bridge.svg12.XBLShadowTreeElementBridge $r6;
        org.apache.batik.bridge.svg12.SVGFlowRootElementBridge $r2;
        org.apache.batik.bridge.svg12.SVG12BridgeExtension r0;
        org.apache.batik.bridge.BridgeContext r1;
        org.apache.batik.bridge.svg12.SVG12TextElementBridge $r5;
        org.apache.batik.bridge.svg12.XBLContentElementBridge $r7;
        org.apache.batik.bridge.svg12.BindableElementBridge $r8;

        r0 := @this: org.apache.batik.bridge.svg12.SVG12BridgeExtension;

        r1 := @parameter0: org.apache.batik.bridge.BridgeContext;

        specialinvoke r0.<org.apache.batik.bridge.SVGBridgeExtension: void registerTags(org.apache.batik.bridge.BridgeContext)>(r1);

        $r2 = new org.apache.batik.bridge.svg12.SVGFlowRootElementBridge;

        specialinvoke $r2.<org.apache.batik.bridge.svg12.SVGFlowRootElementBridge: void <init>()>();

        virtualinvoke r1.<org.apache.batik.bridge.BridgeContext: void putBridge(org.apache.batik.bridge.Bridge)>($r2);

        $r3 = new org.apache.batik.bridge.svg12.SVGMultiImageElementBridge;

        specialinvoke $r3.<org.apache.batik.bridge.svg12.SVGMultiImageElementBridge: void <init>()>();

        virtualinvoke r1.<org.apache.batik.bridge.BridgeContext: void putBridge(org.apache.batik.bridge.Bridge)>($r3);

        $r4 = new org.apache.batik.bridge.svg12.SVGSolidColorElementBridge;

        specialinvoke $r4.<org.apache.batik.bridge.svg12.SVGSolidColorElementBridge: void <init>()>();

        virtualinvoke r1.<org.apache.batik.bridge.BridgeContext: void putBridge(org.apache.batik.bridge.Bridge)>($r4);

        $r5 = new org.apache.batik.bridge.svg12.SVG12TextElementBridge;

        specialinvoke $r5.<org.apache.batik.bridge.svg12.SVG12TextElementBridge: void <init>()>();

        virtualinvoke r1.<org.apache.batik.bridge.BridgeContext: void putBridge(org.apache.batik.bridge.Bridge)>($r5);

        $r6 = new org.apache.batik.bridge.svg12.XBLShadowTreeElementBridge;

        specialinvoke $r6.<org.apache.batik.bridge.svg12.XBLShadowTreeElementBridge: void <init>()>();

        virtualinvoke r1.<org.apache.batik.bridge.BridgeContext: void putBridge(org.apache.batik.bridge.Bridge)>($r6);

        $r7 = new org.apache.batik.bridge.svg12.XBLContentElementBridge;

        specialinvoke $r7.<org.apache.batik.bridge.svg12.XBLContentElementBridge: void <init>()>();

        virtualinvoke r1.<org.apache.batik.bridge.BridgeContext: void putBridge(org.apache.batik.bridge.Bridge)>($r7);

        $r8 = new org.apache.batik.bridge.svg12.BindableElementBridge;

        specialinvoke $r8.<org.apache.batik.bridge.svg12.BindableElementBridge: void <init>()>();

        virtualinvoke r1.<org.apache.batik.bridge.BridgeContext: void setDefaultBridge(org.apache.batik.bridge.Bridge)>($r8);

        virtualinvoke r1.<org.apache.batik.bridge.BridgeContext: void putReservedNamespaceURI(java.lang.String)>(null);

        virtualinvoke r1.<org.apache.batik.bridge.BridgeContext: void putReservedNamespaceURI(java.lang.String)>("http://www.w3.org/2000/svg");

        virtualinvoke r1.<org.apache.batik.bridge.BridgeContext: void putReservedNamespaceURI(java.lang.String)>("http://www.w3.org/2004/xbl");

        return;
    }

    public boolean isDynamicElement(org.w3c.dom.Element)
    {
        org.apache.batik.bridge.svg12.SVG12BridgeExtension r5;
        org.w3c.dom.Element r0;
        java.lang.String $r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r5 := @this: org.apache.batik.bridge.svg12.SVG12BridgeExtension;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $r2 = "http://www.w3.org/2004/xbl";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = "http://www.w3.org/2000/svg";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r4 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("script");

        if $z2 != 0 goto label3;

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("handler");

        if $z3 != 0 goto label3;

        $z4 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("animate");

        if $z4 != 0 goto label3;

        $z5 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("set");

        if $z5 == 0 goto label4;

     label3:
        return 1;

     label4:
        return 0;
    }
}
