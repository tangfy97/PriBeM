class com.hp.hpl.jena.sparql.expr.aggregate.AggSumDistinct$AccSumDistinct extends com.hp.hpl.jena.sparql.expr.aggregate.AccumulatorDistinctExpr
{
    private com.hp.hpl.jena.sparql.expr.NodeValue total;
    final com.hp.hpl.jena.sparql.expr.aggregate.AggSumDistinct this$0;

    public void <init>(com.hp.hpl.jena.sparql.expr.aggregate.AggSumDistinct, com.hp.hpl.jena.sparql.expr.Expr)
    {
        com.hp.hpl.jena.sparql.expr.aggregate.AggSumDistinct$AccSumDistinct r0;
        com.hp.hpl.jena.sparql.expr.aggregate.AggSumDistinct r1;
        com.hp.hpl.jena.sparql.expr.Expr r2;

        r0 := @this: com.hp.hpl.jena.sparql.expr.aggregate.AggSumDistinct$AccSumDistinct;

        r1 := @parameter0: com.hp.hpl.jena.sparql.expr.aggregate.AggSumDistinct;

        r2 := @parameter1: com.hp.hpl.jena.sparql.expr.Expr;

        r0.<com.hp.hpl.jena.sparql.expr.aggregate.AggSumDistinct$AccSumDistinct: com.hp.hpl.jena.sparql.expr.aggregate.AggSumDistinct this$0> = r1;

        specialinvoke r0.<com.hp.hpl.jena.sparql.expr.aggregate.AccumulatorDistinctExpr: void <init>(com.hp.hpl.jena.sparql.expr.Expr)>(r2);

        r0.<com.hp.hpl.jena.sparql.expr.aggregate.AggSumDistinct$AccSumDistinct: com.hp.hpl.jena.sparql.expr.NodeValue total> = null;

        return;
    }

    public void accumulateDistinct(com.hp.hpl.jena.sparql.expr.NodeValue, com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.function.FunctionEnv)
    {
        com.hp.hpl.jena.sparql.expr.NodeValue r0, $r7, $r8, $r9;
        com.hp.hpl.jena.sparql.expr.aggregate.AggSumDistinct$AccSumDistinct r6;
        com.hp.hpl.jena.sparql.engine.binding.Binding r10;
        com.hp.hpl.jena.sparql.expr.ExprEvalException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        com.hp.hpl.jena.sparql.function.FunctionEnv r11;
        boolean $z0;

        r6 := @this: com.hp.hpl.jena.sparql.expr.aggregate.AggSumDistinct$AccSumDistinct;

        r0 := @parameter0: com.hp.hpl.jena.sparql.expr.NodeValue;

        r10 := @parameter1: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r11 := @parameter2: com.hp.hpl.jena.sparql.function.FunctionEnv;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.NodeValue: boolean isNumber()>();

        if $z0 == 0 goto label2;

        $r7 = r6.<com.hp.hpl.jena.sparql.expr.aggregate.AggSumDistinct$AccSumDistinct: com.hp.hpl.jena.sparql.expr.NodeValue total>;

        if $r7 != null goto label1;

        r6.<com.hp.hpl.jena.sparql.expr.aggregate.AggSumDistinct$AccSumDistinct: com.hp.hpl.jena.sparql.expr.NodeValue total> = r0;

        goto label3;

     label1:
        $r8 = r6.<com.hp.hpl.jena.sparql.expr.aggregate.AggSumDistinct$AccSumDistinct: com.hp.hpl.jena.sparql.expr.NodeValue total>;

        $r9 = staticinvoke <com.hp.hpl.jena.sparql.expr.nodevalue.XSDFuncOp: com.hp.hpl.jena.sparql.expr.NodeValue numAdd(com.hp.hpl.jena.sparql.expr.NodeValue,com.hp.hpl.jena.sparql.expr.NodeValue)>(r0, $r8);

        r6.<com.hp.hpl.jena.sparql.expr.aggregate.AggSumDistinct$AccSumDistinct: com.hp.hpl.jena.sparql.expr.NodeValue total> = $r9;

        goto label3;

     label2:
        $r1 = new com.hp.hpl.jena.sparql.expr.ExprEvalException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a number: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<com.hp.hpl.jena.sparql.expr.ExprEvalException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label3:
        return;
    }

    public com.hp.hpl.jena.sparql.expr.NodeValue getAccValue()
    {
        com.hp.hpl.jena.sparql.expr.aggregate.AggSumDistinct$AccSumDistinct r0;
        com.hp.hpl.jena.sparql.expr.NodeValue $r1;

        r0 := @this: com.hp.hpl.jena.sparql.expr.aggregate.AggSumDistinct$AccSumDistinct;

        $r1 = r0.<com.hp.hpl.jena.sparql.expr.aggregate.AggSumDistinct$AccSumDistinct: com.hp.hpl.jena.sparql.expr.NodeValue total>;

        return $r1;
    }

    protected void accumulateError(com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.function.FunctionEnv)
    {
        com.hp.hpl.jena.sparql.expr.aggregate.AggSumDistinct$AccSumDistinct r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding r1;
        com.hp.hpl.jena.sparql.function.FunctionEnv r2;

        r0 := @this: com.hp.hpl.jena.sparql.expr.aggregate.AggSumDistinct$AccSumDistinct;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r2 := @parameter1: com.hp.hpl.jena.sparql.function.FunctionEnv;

        return;
    }
}
