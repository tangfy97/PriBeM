public abstract class org.apache.lucene.index.FilterDirectoryReader extends org.apache.lucene.index.DirectoryReader
{
    protected final org.apache.lucene.index.DirectoryReader in;

    public void <init>(org.apache.lucene.index.DirectoryReader)
    {
        org.apache.lucene.index.FilterDirectoryReader$StandardReaderWrapper $r2;
        org.apache.lucene.index.FilterDirectoryReader r0;
        org.apache.lucene.index.DirectoryReader r1;

        r0 := @this: org.apache.lucene.index.FilterDirectoryReader;

        r1 := @parameter0: org.apache.lucene.index.DirectoryReader;

        $r2 = new org.apache.lucene.index.FilterDirectoryReader$StandardReaderWrapper;

        specialinvoke $r2.<org.apache.lucene.index.FilterDirectoryReader$StandardReaderWrapper: void <init>()>();

        specialinvoke r0.<org.apache.lucene.index.FilterDirectoryReader: void <init>(org.apache.lucene.index.DirectoryReader,org.apache.lucene.index.FilterDirectoryReader$SubReaderWrapper)>(r1, $r2);

        return;
    }

    public void <init>(org.apache.lucene.index.DirectoryReader, org.apache.lucene.index.FilterDirectoryReader$SubReaderWrapper)
    {
        java.util.List $r4;
        org.apache.lucene.index.FilterDirectoryReader r0;
        org.apache.lucene.index.DirectoryReader r1;
        org.apache.lucene.store.Directory $r2;
        org.apache.lucene.index.FilterDirectoryReader$SubReaderWrapper r3;
        org.apache.lucene.index.AtomicReader[] $r5;

        r0 := @this: org.apache.lucene.index.FilterDirectoryReader;

        r1 := @parameter0: org.apache.lucene.index.DirectoryReader;

        r3 := @parameter1: org.apache.lucene.index.FilterDirectoryReader$SubReaderWrapper;

        $r2 = virtualinvoke r1.<org.apache.lucene.index.DirectoryReader: org.apache.lucene.store.Directory directory()>();

        $r4 = virtualinvoke r1.<org.apache.lucene.index.DirectoryReader: java.util.List getSequentialSubReaders()>();

        $r5 = staticinvoke <org.apache.lucene.index.FilterDirectoryReader$SubReaderWrapper: org.apache.lucene.index.AtomicReader[] access$000(org.apache.lucene.index.FilterDirectoryReader$SubReaderWrapper,java.util.List)>(r3, $r4);

        specialinvoke r0.<org.apache.lucene.index.DirectoryReader: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.index.AtomicReader[])>($r2, $r5);

        r0.<org.apache.lucene.index.FilterDirectoryReader: org.apache.lucene.index.DirectoryReader in> = r1;

        return;
    }

    protected abstract org.apache.lucene.index.DirectoryReader doWrapDirectoryReader(org.apache.lucene.index.DirectoryReader);

    private final org.apache.lucene.index.DirectoryReader wrapDirectoryReader(org.apache.lucene.index.DirectoryReader)
    {
        org.apache.lucene.index.FilterDirectoryReader r1;
        org.apache.lucene.index.DirectoryReader r0, $r2;

        r1 := @this: org.apache.lucene.index.FilterDirectoryReader;

        r0 := @parameter0: org.apache.lucene.index.DirectoryReader;

        if r0 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<org.apache.lucene.index.FilterDirectoryReader: org.apache.lucene.index.DirectoryReader doWrapDirectoryReader(org.apache.lucene.index.DirectoryReader)>(r0);

     label2:
        return $r2;
    }

    protected final org.apache.lucene.index.DirectoryReader doOpenIfChanged() throws java.io.IOException
    {
        org.apache.lucene.index.FilterDirectoryReader r0;
        org.apache.lucene.index.DirectoryReader $r1, $r2, $r3;

        r0 := @this: org.apache.lucene.index.FilterDirectoryReader;

        $r1 = r0.<org.apache.lucene.index.FilterDirectoryReader: org.apache.lucene.index.DirectoryReader in>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.DirectoryReader: org.apache.lucene.index.DirectoryReader doOpenIfChanged()>();

        $r3 = specialinvoke r0.<org.apache.lucene.index.FilterDirectoryReader: org.apache.lucene.index.DirectoryReader wrapDirectoryReader(org.apache.lucene.index.DirectoryReader)>($r2);

        return $r3;
    }

    protected final org.apache.lucene.index.DirectoryReader doOpenIfChanged(org.apache.lucene.index.IndexCommit) throws java.io.IOException
    {
        org.apache.lucene.index.IndexCommit r1;
        org.apache.lucene.index.FilterDirectoryReader r0;
        org.apache.lucene.index.DirectoryReader $r2, $r3, $r4;

        r0 := @this: org.apache.lucene.index.FilterDirectoryReader;

        r1 := @parameter0: org.apache.lucene.index.IndexCommit;

        $r2 = r0.<org.apache.lucene.index.FilterDirectoryReader: org.apache.lucene.index.DirectoryReader in>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.DirectoryReader: org.apache.lucene.index.DirectoryReader doOpenIfChanged(org.apache.lucene.index.IndexCommit)>(r1);

        $r4 = specialinvoke r0.<org.apache.lucene.index.FilterDirectoryReader: org.apache.lucene.index.DirectoryReader wrapDirectoryReader(org.apache.lucene.index.DirectoryReader)>($r3);

        return $r4;
    }

    protected final org.apache.lucene.index.DirectoryReader doOpenIfChanged(org.apache.lucene.index.IndexWriter, boolean) throws java.io.IOException
    {
        org.apache.lucene.index.IndexWriter r1;
        org.apache.lucene.index.FilterDirectoryReader r0;
        org.apache.lucene.index.DirectoryReader $r2, $r3, $r4;
        boolean z0;

        r0 := @this: org.apache.lucene.index.FilterDirectoryReader;

        r1 := @parameter0: org.apache.lucene.index.IndexWriter;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.apache.lucene.index.FilterDirectoryReader: org.apache.lucene.index.DirectoryReader in>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.DirectoryReader: org.apache.lucene.index.DirectoryReader doOpenIfChanged(org.apache.lucene.index.IndexWriter,boolean)>(r1, z0);

        $r4 = specialinvoke r0.<org.apache.lucene.index.FilterDirectoryReader: org.apache.lucene.index.DirectoryReader wrapDirectoryReader(org.apache.lucene.index.DirectoryReader)>($r3);

        return $r4;
    }

    public long getVersion()
    {
        long $l0;
        org.apache.lucene.index.FilterDirectoryReader r0;
        org.apache.lucene.index.DirectoryReader $r1;

        r0 := @this: org.apache.lucene.index.FilterDirectoryReader;

        $r1 = r0.<org.apache.lucene.index.FilterDirectoryReader: org.apache.lucene.index.DirectoryReader in>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.index.DirectoryReader: long getVersion()>();

        return $l0;
    }

    public boolean isCurrent() throws java.io.IOException
    {
        org.apache.lucene.index.FilterDirectoryReader r0;
        org.apache.lucene.index.DirectoryReader $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.FilterDirectoryReader;

        $r1 = r0.<org.apache.lucene.index.FilterDirectoryReader: org.apache.lucene.index.DirectoryReader in>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.index.DirectoryReader: boolean isCurrent()>();

        return $z0;
    }

    public org.apache.lucene.index.IndexCommit getIndexCommit() throws java.io.IOException
    {
        org.apache.lucene.index.IndexCommit $r2;
        org.apache.lucene.index.FilterDirectoryReader r0;
        org.apache.lucene.index.DirectoryReader $r1;

        r0 := @this: org.apache.lucene.index.FilterDirectoryReader;

        $r1 = r0.<org.apache.lucene.index.FilterDirectoryReader: org.apache.lucene.index.DirectoryReader in>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.DirectoryReader: org.apache.lucene.index.IndexCommit getIndexCommit()>();

        return $r2;
    }

    protected void doClose() throws java.io.IOException
    {
        org.apache.lucene.index.FilterDirectoryReader r0;
        org.apache.lucene.index.DirectoryReader $r1;

        r0 := @this: org.apache.lucene.index.FilterDirectoryReader;

        $r1 = r0.<org.apache.lucene.index.FilterDirectoryReader: org.apache.lucene.index.DirectoryReader in>;

        virtualinvoke $r1.<org.apache.lucene.index.DirectoryReader: void doClose()>();

        return;
    }
}
