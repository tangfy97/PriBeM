class com.mycila.inject.legacy.LegacyProvider$MethodLegacyProvider extends com.mycila.inject.legacy.LegacyProvider
{
    private final com.mycila.inject.legacy.LegacyProvider instance;
    private final java.lang.reflect.Method method;

    transient void <init>(com.mycila.inject.legacy.LegacyProvider, java.lang.Class, java.lang.String, com.google.inject.Key[])
    {
        com.mycila.inject.legacy.LegacyProvider r3;
        java.lang.Class r1;
        com.google.inject.Key[] r2;
        java.lang.String r4;
        java.lang.reflect.Method $r5;
        com.mycila.inject.legacy.LegacyProvider$MethodLegacyProvider r0;

        r0 := @this: com.mycila.inject.legacy.LegacyProvider$MethodLegacyProvider;

        r3 := @parameter0: com.mycila.inject.legacy.LegacyProvider;

        r1 := @parameter1: java.lang.Class;

        r4 := @parameter2: java.lang.String;

        r2 := @parameter3: com.google.inject.Key[];

        specialinvoke r0.<com.mycila.inject.legacy.LegacyProvider: void <init>(java.lang.Class,com.google.inject.Key[],com.mycila.inject.legacy.LegacyProvider$1)>(r1, r2, null);

        r0.<com.mycila.inject.legacy.LegacyProvider$MethodLegacyProvider: com.mycila.inject.legacy.LegacyProvider instance> = r3;

        $r5 = staticinvoke <com.mycila.inject.legacy.LegacyProvider: java.lang.reflect.Method access$400(java.lang.Class,java.lang.String,com.google.inject.Key[])>(r1, r4, r2);

        r0.<com.mycila.inject.legacy.LegacyProvider$MethodLegacyProvider: java.lang.reflect.Method method> = $r5;

        return;
    }

    public java.lang.Object get(com.google.inject.Injector)
    {
        com.mycila.inject.internal.MethodInvoker $r5;
        java.lang.Object[] $r6;
        java.lang.RuntimeException $r8;
        java.lang.Exception $r7;
        com.google.inject.Injector r1;
        com.mycila.inject.legacy.LegacyProvider $r2;
        java.lang.Object $r3;
        java.lang.reflect.Method $r4;
        com.mycila.inject.legacy.LegacyProvider$MethodLegacyProvider r0;

        r0 := @this: com.mycila.inject.legacy.LegacyProvider$MethodLegacyProvider;

        r1 := @parameter0: com.google.inject.Injector;

        $r2 = r0.<com.mycila.inject.legacy.LegacyProvider$MethodLegacyProvider: com.mycila.inject.legacy.LegacyProvider instance>;

        $r3 = virtualinvoke $r2.<com.mycila.inject.legacy.LegacyProvider: java.lang.Object get(com.google.inject.Injector)>(r1);

     label1:
        $r4 = r0.<com.mycila.inject.legacy.LegacyProvider$MethodLegacyProvider: java.lang.reflect.Method method>;

        $r5 = staticinvoke <com.mycila.inject.internal.Proxy: com.mycila.inject.internal.MethodInvoker invoker(java.lang.reflect.Method)>($r4);

        $r6 = virtualinvoke r0.<com.mycila.inject.legacy.LegacyProvider$MethodLegacyProvider: java.lang.Object[] getParameterValues(com.google.inject.Injector)>(r1);

        interfaceinvoke $r5.<com.mycila.inject.internal.MethodInvoker: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r3, $r6);

     label2:
        return $r3;

     label3:
        $r7 := @caughtexception;

        $r8 = staticinvoke <com.mycila.inject.MycilaGuiceException: java.lang.RuntimeException runtime(java.lang.Throwable)>($r7);

        throw $r8;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
