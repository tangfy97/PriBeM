final class org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper extends java.lang.Object implements java.util.Iterator, java.lang.Iterable
{
    private final java.util.concurrent.CompletionService service;
    private int numTasks;

    void <init>(java.util.concurrent.Executor)
    {
        org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper r0;
        java.util.concurrent.Executor r2;
        java.util.concurrent.ExecutorCompletionService $r1;

        r0 := @this: org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper;

        r2 := @parameter0: java.util.concurrent.Executor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.ExecutorCompletionService;

        specialinvoke $r1.<java.util.concurrent.ExecutorCompletionService: void <init>(java.util.concurrent.Executor)>(r2);

        r0.<org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper: java.util.concurrent.CompletionService service> = $r1;

        return;
    }

    public boolean hasNext()
    {
        int $i0;
        org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper;

        $i0 = r0.<org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper: int numTasks>;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void submit(java.util.concurrent.Callable)
    {
        org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper r0;
        int $i0, $i1;
        java.util.concurrent.Callable r1;
        java.util.concurrent.CompletionService $r2;

        r0 := @this: org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper;

        r1 := @parameter0: java.util.concurrent.Callable;

        $r2 = r0.<org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper: java.util.concurrent.CompletionService service>;

        interfaceinvoke $r2.<java.util.concurrent.CompletionService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>(r1);

        $i0 = r0.<org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper: int numTasks>;

        $i1 = $i0 + 1;

        r0.<org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper: int numTasks> = $i1;

        return;
    }

    public java.lang.Object next()
    {
        java.lang.Throwable $r5;
        org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper r0;
        java.lang.RuntimeException $r7;
        java.util.concurrent.CompletionService $r1;
        java.util.concurrent.ExecutionException $r6;
        java.util.concurrent.Future $r2;
        java.lang.InterruptedException $r8;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3;
        java.util.NoSuchElementException $r4;
        boolean $z0;
        org.apache.lucene.util.ThreadInterruptedException $r9;

        r0 := @this: org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper;

        $z0 = virtualinvoke r0.<org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();

        throw $r4;

     label1:
        $r1 = r0.<org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper: java.util.concurrent.CompletionService service>;

        $r2 = interfaceinvoke $r1.<java.util.concurrent.CompletionService: java.util.concurrent.Future take()>();

        $r3 = interfaceinvoke $r2.<java.util.concurrent.Future: java.lang.Object get()>();

        goto label7;

     label2:
        return $r3;

     label3:
        $r8 := @caughtexception;

        $r9 = new org.apache.lucene.util.ThreadInterruptedException;

        specialinvoke $r9.<org.apache.lucene.util.ThreadInterruptedException: void <init>(java.lang.InterruptedException)>($r8);

        throw $r9;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label5:
        $r5 := @caughtexception;

        goto label8;

     label6:
        throw $r5;

     label7:
        $i0 = r0.<org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper: int numTasks>;

        $i1 = $i0 - 1;

        r0.<org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper: int numTasks> = $i1;

        goto label2;

     label8:
        $i2 = r0.<org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper: int numTasks>;

        $i3 = $i2 - 1;

        r0.<org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper: int numTasks> = $i3;

        goto label6;

        catch java.lang.InterruptedException from label1 to label2 with label3;
        catch java.util.concurrent.ExecutionException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label6 with label5;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper r1;

        r1 := @this: org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.util.Iterator iterator()
    {
        org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper r0;

        r0 := @this: org.apache.lucene.search.ParallelMultiSearcher$ExecutionHelper;

        return r0;
    }
}
