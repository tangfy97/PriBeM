public abstract class com.mycila.inject.injector.MethodHandlerSkeleton extends java.lang.Object implements com.mycila.inject.injector.MethodHandler
{

    public void <init>()
    {
        com.mycila.inject.injector.MethodHandlerSkeleton r0;

        r0 := @this: com.mycila.inject.injector.MethodHandlerSkeleton;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void handle(com.google.inject.TypeLiteral, java.lang.Object, java.lang.reflect.Method, java.lang.'annotation'.Annotation)
    {
        com.mycila.inject.internal.MethodInvoker $r1;
        java.lang.Object[] $r3;
        com.mycila.inject.injector.MethodHandlerSkeleton r6;
        java.lang.RuntimeException $r5;
        java.lang.Exception $r4;
        java.lang.'annotation'.Annotation r8;
        java.lang.Object r2;
        java.lang.reflect.Method r0;
        com.google.inject.TypeLiteral r7;

        r6 := @this: com.mycila.inject.injector.MethodHandlerSkeleton;

        r7 := @parameter0: com.google.inject.TypeLiteral;

        r2 := @parameter1: java.lang.Object;

        r0 := @parameter2: java.lang.reflect.Method;

        r8 := @parameter3: java.lang.'annotation'.Annotation;

     label1:
        $r1 = staticinvoke <com.mycila.inject.internal.Proxy: com.mycila.inject.internal.MethodInvoker invoker(java.lang.reflect.Method)>(r0);

        $r3 = newarray (java.lang.Object)[0];

        interfaceinvoke $r1.<com.mycila.inject.internal.MethodInvoker: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = staticinvoke <com.mycila.inject.MycilaGuiceException: java.lang.RuntimeException runtime(java.lang.Throwable)>($r4);

        throw $r5;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public volatile void handle(com.google.inject.TypeLiteral, java.lang.Object, java.lang.reflect.Member, java.lang.'annotation'.Annotation)
    {
        com.mycila.inject.injector.MethodHandlerSkeleton r0;
        java.lang.reflect.Member r3;
        java.lang.'annotation'.Annotation r4;
        java.lang.Object r2;
        com.google.inject.TypeLiteral r1;
        java.lang.reflect.Method $r5;

        r0 := @this: com.mycila.inject.injector.MethodHandlerSkeleton;

        r1 := @parameter0: com.google.inject.TypeLiteral;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.reflect.Member;

        r4 := @parameter3: java.lang.'annotation'.Annotation;

        $r5 = (java.lang.reflect.Method) r3;

        virtualinvoke r0.<com.mycila.inject.injector.MethodHandlerSkeleton: void handle(com.google.inject.TypeLiteral,java.lang.Object,java.lang.reflect.Method,java.lang.'annotation'.Annotation)>(r1, r2, $r5, r4);

        return;
    }
}
