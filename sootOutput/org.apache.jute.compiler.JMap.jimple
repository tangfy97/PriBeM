public class org.apache.jute.compiler.JMap extends org.apache.jute.compiler.JCompType
{
    private static int level;
    private org.apache.jute.compiler.JType mKey;
    private org.apache.jute.compiler.JType mValue;

    private static java.lang.String getLevel()
    {
        int $i0;
        java.lang.String $r0;

        $i0 = <org.apache.jute.compiler.JMap: int level>;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        return $r0;
    }

    private static void incrLevel()
    {
        int $i0, $i1;

        $i0 = <org.apache.jute.compiler.JMap: int level>;

        $i1 = $i0 + 1;

        <org.apache.jute.compiler.JMap: int level> = $i1;

        return;
    }

    private static void decrLevel()
    {
        int $i0, $i1;

        $i0 = <org.apache.jute.compiler.JMap: int level>;

        $i1 = $i0 - 1;

        <org.apache.jute.compiler.JMap: int level> = $i1;

        return;
    }

    private static java.lang.String getId(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r2, $r4;
        java.lang.String r1, $r3, $r5;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r3 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getLevel()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public void <init>(org.apache.jute.compiler.JType, org.apache.jute.compiler.JType)
    {
        org.apache.jute.compiler.JMap r0;
        org.apache.jute.compiler.JType r3, r7;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r9, $r10;
        java.lang.String $r4, $r8, $r11;

        r0 := @this: org.apache.jute.compiler.JMap;

        r3 := @parameter0: org.apache.jute.compiler.JType;

        r7 := @parameter1: org.apache.jute.compiler.JType;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ::std::map<");

        $r4 = virtualinvoke r3.<org.apache.jute.compiler.JType: java.lang.String getCppType()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r8 = virtualinvoke r7.<org.apache.jute.compiler.JType: java.lang.String getCppType()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<org.apache.jute.compiler.JCompType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("#error", $r11, "System.Collections.Generic.SortedDictionary<string, string>", "java.util.TreeMap", "Map", "System.Collections.Generic.SortedDictionary<string, string>", "java.util.TreeMap");

        r0.<org.apache.jute.compiler.JMap: org.apache.jute.compiler.JType mKey> = r3;

        r0.<org.apache.jute.compiler.JMap: org.apache.jute.compiler.JType mValue> = r7;

        return;
    }

    public java.lang.String getSignature()
    {
        org.apache.jute.compiler.JMap r2;
        org.apache.jute.compiler.JType $r3, $r6;
        java.lang.StringBuilder $r0, $r1, $r5, $r8, $r9;
        java.lang.String $r4, $r7, $r10;

        r2 := @this: org.apache.jute.compiler.JMap;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $r3 = r2.<org.apache.jute.compiler.JMap: org.apache.jute.compiler.JType mKey>;

        $r4 = virtualinvoke $r3.<org.apache.jute.compiler.JType: java.lang.String getSignature()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = r2.<org.apache.jute.compiler.JMap: org.apache.jute.compiler.JType mValue>;

        $r7 = virtualinvoke $r6.<org.apache.jute.compiler.JType: java.lang.String getSignature()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public java.lang.String genJavaCompareTo(java.lang.String)
    {
        org.apache.jute.compiler.JMap r6;
        java.lang.StringBuilder $r0, $r1, $r3, $r4;
        java.lang.String r2, $r5;

        r6 := @this: org.apache.jute.compiler.JMap;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    throw new UnsupportedOperationException(\"comparing ");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is unimplemented\");\n");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public java.lang.String genJavaReadWrapper(java.lang.String, java.lang.String, boolean)
    {
        org.apache.jute.compiler.JMap r25;
        boolean z0;
        java.lang.StringBuilder $r0, $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17, $r19, $r20, $r22, $r23, $r34, $r35, $r36, $r37, $r39, $r40, $r42, $r43, $r45, $r46, $r47, $r48, $r51, $r52, $r53, $r54;
        org.apache.jute.compiler.JType $r26, $r30;
        java.lang.String $r3, r6, $r9, r12, $r15, $r18, $r21, $r24, $r27, $r28, $r29, $r31, $r32, $r33, $r38, $r41, $r44, $r49, $r50, $r55;

        r25 := @this: org.apache.jute.compiler.JMap;

        r12 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("");

        if z0 == 0 goto label1;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    java.util.TreeMap ");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

     label1:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    {\n");

        staticinvoke <org.apache.jute.compiler.JMap: void incrLevel()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      org.apache.jute.Index ");

        $r3 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("midx");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = a_.startMap(\"");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=new java.util.TreeMap();\n");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      for (; !");

        $r18 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("midx");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".done(); ");

        $r21 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("midx");

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".incr()) {\n");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = r25.<org.apache.jute.compiler.JMap: org.apache.jute.compiler.JType mKey>;

        $r27 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("k");

        $r28 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("k");

        $r29 = virtualinvoke $r26.<org.apache.jute.compiler.JType: java.lang.String genJavaReadWrapper(java.lang.String,java.lang.String,boolean)>($r27, $r28, 1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r30 = r25.<org.apache.jute.compiler.JMap: org.apache.jute.compiler.JType mValue>;

        $r31 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("v");

        $r32 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("v");

        $r33 = virtualinvoke $r30.<org.apache.jute.compiler.JType: java.lang.String genJavaReadWrapper(java.lang.String,java.lang.String,boolean)>($r31, $r32, 1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("        ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".put(");

        $r38 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("k");

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r41 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("v");

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");\n");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      }\n");

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    a_.endMap(\"");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        staticinvoke <org.apache.jute.compiler.JMap: void decrLevel()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    }\n");

        $r50 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r50;
    }

    public java.lang.String genJavaReadMethod(java.lang.String, java.lang.String)
    {
        org.apache.jute.compiler.JMap r0;
        java.lang.String r1, r2, $r3;

        r0 := @this: org.apache.jute.compiler.JMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.jute.compiler.JMap: java.lang.String genJavaReadWrapper(java.lang.String,java.lang.String,boolean)>(r1, r2, 0);

        return $r3;
    }

    public java.lang.String genJavaWriteWrapper(java.lang.String, java.lang.String)
    {
        org.apache.jute.compiler.JMap r41;
        java.lang.StringBuilder $r0, $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r15, $r16, $r18, $r19, $r21, $r22, $r24, $r25, $r27, $r28, $r30, $r31, $r33, $r34, $r36, $r37, $r39, $r40, $r44, $r45, $r47, $r48, $r51, $r52, $r54, $r55, $r57, $r58, $r61, $r62, $r64, $r65, $r68, $r69, $r71, $r72, $r82, $r83, $r84, $r85, $r86, $r87;
        java.lang.String r3, r6, $r9, $r12, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r43, $r46, $r50, $r53, $r56, $r60, $r63, $r67, $r70, $r73, $r75, $r76, $r77, $r79, $r80, $r81, $r88, $r89;
        org.apache.jute.compiler.JType $r42, $r49, $r59, $r66, $r74, $r78;

        r41 := @this: org.apache.jute.compiler.JMap;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("    {\n");

        staticinvoke <org.apache.jute.compiler.JMap: void incrLevel()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      a_.startMap(");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\"");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      java.util.Set ");

        $r12 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("es");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".entrySet();\n");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      for(java.util.Iterator ");

        $r20 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("midx");

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r23 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("es");

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".iterator(); ");

        $r26 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("midx");

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".hasNext(); ) {\n");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("        java.util.Map.Entry ");

        $r32 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("me");

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = (java.util.Map.Entry) ");

        $r35 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("midx");

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".next();\n");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("        ");

        $r42 = r41.<org.apache.jute.compiler.JMap: org.apache.jute.compiler.JType mKey>;

        $r43 = virtualinvoke $r42.<org.apache.jute.compiler.JType: java.lang.String getJavaWrapperType()>();

        $r44 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r46 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("k");

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = (");

        $r49 = r41.<org.apache.jute.compiler.JMap: org.apache.jute.compiler.JType mKey>;

        $r50 = virtualinvoke $r49.<org.apache.jute.compiler.JType: java.lang.String getJavaWrapperType()>();

        $r51 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r53 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("me");

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".getKey();\n");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("        ");

        $r59 = r41.<org.apache.jute.compiler.JMap: org.apache.jute.compiler.JType mValue>;

        $r60 = virtualinvoke $r59.<org.apache.jute.compiler.JType: java.lang.String getJavaWrapperType()>();

        $r61 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r63 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("v");

        $r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = (");

        $r66 = r41.<org.apache.jute.compiler.JMap: org.apache.jute.compiler.JType mValue>;

        $r67 = virtualinvoke $r66.<org.apache.jute.compiler.JType: java.lang.String getJavaWrapperType()>();

        $r68 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r70 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("me");

        $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".getValue();\n");

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        $r74 = r41.<org.apache.jute.compiler.JMap: org.apache.jute.compiler.JType mKey>;

        $r75 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("k");

        $r76 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("k");

        $r77 = virtualinvoke $r74.<org.apache.jute.compiler.JType: java.lang.String genJavaWriteWrapper(java.lang.String,java.lang.String)>($r75, $r76);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        $r78 = r41.<org.apache.jute.compiler.JMap: org.apache.jute.compiler.JType mValue>;

        $r79 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("v");

        $r80 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("v");

        $r81 = virtualinvoke $r78.<org.apache.jute.compiler.JType: java.lang.String genJavaWriteWrapper(java.lang.String,java.lang.String)>($r79, $r80);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      }\n");

        $r82 = new java.lang.StringBuilder;

        specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      a_.endMap(");

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\"");

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r88);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    }\n");

        staticinvoke <org.apache.jute.compiler.JMap: void decrLevel()>();

        $r89 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r89;
    }

    public java.lang.String genJavaWriteMethod(java.lang.String, java.lang.String)
    {
        org.apache.jute.compiler.JMap r0;
        java.lang.String r1, r2, $r3;

        r0 := @this: org.apache.jute.compiler.JMap;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.jute.compiler.JMap: java.lang.String genJavaWriteWrapper(java.lang.String,java.lang.String)>(r1, r2);

        return $r3;
    }

    public java.lang.String genCsharpWriteWrapper(java.lang.String, int)
    {
        org.apache.jute.compiler.JMap r40;
        java.lang.StringBuilder $r0, $r1, $r2, $r4, $r5, $r6, $r7, $r9, $r10, $r12, $r13, $r14, $r15, $r17, $r18, $r20, $r21, $r23, $r24, $r26, $r27, $r29, $r30, $r32, $r33, $r35, $r36, $r38, $r39, $r43, $r44, $r46, $r47, $r50, $r51, $r53, $r54, $r56, $r57, $r60, $r61, $r63, $r64, $r67, $r68, $r70, $r71, $r81, $r82, $r83, $r84, $r85, $r86;
        java.lang.String r3, $r8, $r11, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37, $r42, $r45, $r49, $r52, $r55, $r59, $r62, $r66, $r69, $r72, $r74, $r75, $r76, $r78, $r79, $r80, $r87, $r88;
        org.apache.jute.compiler.JType $r41, $r48, $r58, $r65, $r73, $r77;
        int i0;

        r40 := @this: org.apache.jute.compiler.JMap;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("    {\n");

        staticinvoke <org.apache.jute.compiler.JMap: void incrLevel()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      a_.StartMap(");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\"");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      java.util.Set ");

        $r11 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("es");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".entrySet();\n");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      for(java.util.Iterator ");

        $r19 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("midx");

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r22 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("es");

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".iterator(); ");

        $r25 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("midx");

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".hasNext(); ) {\n");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("        java.util.Map.Entry ");

        $r31 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("me");

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = (java.util.Map.Entry) ");

        $r34 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("midx");

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".next();\n");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("        ");

        $r41 = r40.<org.apache.jute.compiler.JMap: org.apache.jute.compiler.JType mKey>;

        $r42 = virtualinvoke $r41.<org.apache.jute.compiler.JType: java.lang.String getCsharpWrapperType()>();

        $r43 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r45 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("k");

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = (");

        $r48 = r40.<org.apache.jute.compiler.JMap: org.apache.jute.compiler.JType mKey>;

        $r49 = virtualinvoke $r48.<org.apache.jute.compiler.JType: java.lang.String getCsharpWrapperType()>();

        $r50 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r52 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("me");

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".getKey();\n");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("        ");

        $r58 = r40.<org.apache.jute.compiler.JMap: org.apache.jute.compiler.JType mValue>;

        $r59 = virtualinvoke $r58.<org.apache.jute.compiler.JType: java.lang.String getCsharpWrapperType()>();

        $r60 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r62 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("v");

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = (");

        $r65 = r40.<org.apache.jute.compiler.JMap: org.apache.jute.compiler.JType mValue>;

        $r66 = virtualinvoke $r65.<org.apache.jute.compiler.JType: java.lang.String getCsharpWrapperType()>();

        $r67 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r69 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("me");

        $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".getValue();\n");

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        $r73 = r40.<org.apache.jute.compiler.JMap: org.apache.jute.compiler.JType mKey>;

        $r74 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("k");

        $r75 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("k");

        $r76 = virtualinvoke $r73.<org.apache.jute.compiler.JType: java.lang.String genCsharpWriteWrapper(java.lang.String,java.lang.String)>($r74, $r75);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76);

        $r77 = r40.<org.apache.jute.compiler.JMap: org.apache.jute.compiler.JType mValue>;

        $r78 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("v");

        $r79 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("v");

        $r80 = virtualinvoke $r77.<org.apache.jute.compiler.JType: java.lang.String genCsharpWriteWrapper(java.lang.String,java.lang.String)>($r78, $r79);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      }\n");

        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      a_.EndMap(");

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\"");

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r87);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    }\n");

        staticinvoke <org.apache.jute.compiler.JMap: void decrLevel()>();

        $r88 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r88;
    }

    java.lang.String genCsharpWriteMethod(java.lang.String, int)
    {
        org.apache.jute.compiler.JMap r0;
        int i0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.jute.compiler.JMap;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.apache.jute.compiler.JMap: java.lang.String genCsharpWriteWrapper(java.lang.String,int)>(r1, i0);

        return $r2;
    }

    public java.lang.String genCsharpReadWrapper(java.lang.String, int, boolean)
    {
        org.apache.jute.compiler.JMap r24;
        boolean z0;
        java.lang.StringBuilder $r0, $r1, $r2, $r4, $r5, $r6, $r7, $r9, $r10, $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r22, $r33, $r34, $r35, $r36, $r38, $r39, $r41, $r42, $r44, $r45, $r46, $r47, $r50, $r51, $r53, $r54;
        org.apache.jute.compiler.JType $r25, $r29;
        int i0;
        java.lang.String $r3, $r8, r11, $r14, $r17, $r20, $r23, $r26, $r27, $r28, $r30, $r31, $r32, $r37, $r40, $r43, $r48, $r49, $r52, $r55;

        r24 := @this: org.apache.jute.compiler.JMap;

        r11 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("");

        if z0 == 0 goto label1;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    System.Collections.SortedDictionary<string,string> ");

        $r52 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String capitalize(java.lang.String)>(r11);

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

     label1:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    {\n");

        staticinvoke <org.apache.jute.compiler.JMap: void incrLevel()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      Org.Apache.Jute.IIndex ");

        $r3 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("midx");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = a_.StartMap(\"");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("= new System.Collections.SortedDictionary<string,string>();\n");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      for (; !");

        $r17 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("midx");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".done(); ");

        $r20 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("midx");

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".incr()) {\n");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = r24.<org.apache.jute.compiler.JMap: org.apache.jute.compiler.JType mKey>;

        $r26 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("k");

        $r27 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("k");

        $r28 = virtualinvoke $r25.<org.apache.jute.compiler.JType: java.lang.String genCsharpReadWrapper(java.lang.String,java.lang.String,boolean)>($r26, $r27, 1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r29 = r24.<org.apache.jute.compiler.JMap: org.apache.jute.compiler.JType mValue>;

        $r30 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("v");

        $r31 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("v");

        $r32 = virtualinvoke $r29.<org.apache.jute.compiler.JType: java.lang.String genCsharpReadWrapper(java.lang.String,java.lang.String,boolean)>($r30, $r31, 1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("        ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".Add(");

        $r37 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("k");

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r40 = staticinvoke <org.apache.jute.compiler.JMap: java.lang.String getId(java.lang.String)>("v");

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");\n");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      }\n");

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    a_.EndMap(\"");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        staticinvoke <org.apache.jute.compiler.JMap: void decrLevel()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    }\n");

        $r49 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r49;
    }

    java.lang.String genCsharpReadMethod(java.lang.String, int)
    {
        org.apache.jute.compiler.JMap r0;
        int i0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.jute.compiler.JMap;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.apache.jute.compiler.JMap: java.lang.String genCsharpReadWrapper(java.lang.String,int,boolean)>(r1, i0, 0);

        return $r2;
    }

    static void <clinit>()
    {
        <org.apache.jute.compiler.JMap: int level> = 0;

        return;
    }
}
