public abstract class org.apache.log4j.LogXF extends java.lang.Object
{
    protected static final org.apache.log4j.Level TRACE;
    private static final java.lang.String FQCN;
    static java.lang.Class class$org$apache$log4j$LogXF;

    protected void <init>()
    {
        org.apache.log4j.LogXF r0;

        r0 := @this: org.apache.log4j.LogXF;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected static java.lang.Boolean valueOf(boolean)
    {
        java.lang.Boolean $r0, $r1;
        boolean z0;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r1;

     label1:
        $r0 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r0;
    }

    protected static java.lang.Character valueOf(char)
    {
        char c0;
        java.lang.Character $r0;

        c0 := @parameter0: char;

        $r0 = new java.lang.Character;

        specialinvoke $r0.<java.lang.Character: void <init>(char)>(c0);

        return $r0;
    }

    protected static java.lang.Byte valueOf(byte)
    {
        java.lang.Byte $r0;
        byte b0;

        b0 := @parameter0: byte;

        $r0 = new java.lang.Byte;

        specialinvoke $r0.<java.lang.Byte: void <init>(byte)>(b0);

        return $r0;
    }

    protected static java.lang.Short valueOf(short)
    {
        short s0;
        java.lang.Short $r0;

        s0 := @parameter0: short;

        $r0 = new java.lang.Short;

        specialinvoke $r0.<java.lang.Short: void <init>(short)>(s0);

        return $r0;
    }

    protected static java.lang.Integer valueOf(int)
    {
        int i0;
        java.lang.Integer $r0;

        i0 := @parameter0: int;

        $r0 = new java.lang.Integer;

        specialinvoke $r0.<java.lang.Integer: void <init>(int)>(i0);

        return $r0;
    }

    protected static java.lang.Long valueOf(long)
    {
        long l0;
        java.lang.Long $r0;

        l0 := @parameter0: long;

        $r0 = new java.lang.Long;

        specialinvoke $r0.<java.lang.Long: void <init>(long)>(l0);

        return $r0;
    }

    protected static java.lang.Float valueOf(float)
    {
        java.lang.Float $r0;
        float f0;

        f0 := @parameter0: float;

        $r0 = new java.lang.Float;

        specialinvoke $r0.<java.lang.Float: void <init>(float)>(f0);

        return $r0;
    }

    protected static java.lang.Double valueOf(double)
    {
        java.lang.Double $r0;
        double d0;

        d0 := @parameter0: double;

        $r0 = new java.lang.Double;

        specialinvoke $r0.<java.lang.Double: void <init>(double)>(d0);

        return $r0;
    }

    protected static java.lang.Object[] toArray(java.lang.Object)
    {
        java.lang.Object r1;
        java.lang.Object[] $r0;

        r1 := @parameter0: java.lang.Object;

        $r0 = newarray (java.lang.Object)[1];

        $r0[0] = r1;

        return $r0;
    }

    protected static java.lang.Object[] toArray(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r1, r2;
        java.lang.Object[] $r0;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r0 = newarray (java.lang.Object)[2];

        $r0[0] = r1;

        $r0[1] = r2;

        return $r0;
    }

    protected static java.lang.Object[] toArray(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r0;
        java.lang.Object r1, r2, r3;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r0 = newarray (java.lang.Object)[3];

        $r0[0] = r1;

        $r0[1] = r2;

        $r0[2] = r3;

        return $r0;
    }

    protected static java.lang.Object[] toArray(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r0;
        java.lang.Object r1, r2, r3, r4;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r0 = newarray (java.lang.Object)[4];

        $r0[0] = r1;

        $r0[1] = r2;

        $r0[2] = r3;

        $r0[3] = r4;

        return $r0;
    }

    public static void entering(org.apache.log4j.Logger, java.lang.String, java.lang.String)
    {
        org.apache.log4j.spi.LoggingEvent $r1;
        org.apache.log4j.Logger r0;
        java.lang.StringBuffer $r2, $r6, $r7, $r9, $r10;
        org.apache.log4j.Level $r4;
        java.lang.String $r3, r5, r8, $r11;
        boolean $z0;

        r0 := @parameter0: org.apache.log4j.Logger;

        r5 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.log4j.Category: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r1 = new org.apache.log4j.spi.LoggingEvent;

        $r3 = <org.apache.log4j.LogXF: java.lang.String FQCN>;

        $r4 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ENTRY");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<org.apache.log4j.spi.LoggingEvent: void <init>(java.lang.String,org.apache.log4j.Category,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r3, r0, $r4, $r11, null);

        virtualinvoke r0.<org.apache.log4j.Category: void callAppenders(org.apache.log4j.spi.LoggingEvent)>($r1);

     label1:
        return;
    }

    public static void entering(org.apache.log4j.Logger, java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.log4j.spi.LoggingEvent $r11;
        org.apache.log4j.Logger r0;
        java.lang.StringBuffer $r1, $r3, $r4, $r6, $r7, $r9;
        org.apache.log4j.Level $r12;
        java.lang.String r2, r5, r8, $r10, $r13;
        boolean $z0;

        r0 := @parameter0: org.apache.log4j.Logger;

        r2 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        r8 := @parameter3: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.log4j.Category: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ENTRY ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        $r11 = new org.apache.log4j.spi.LoggingEvent;

        $r13 = <org.apache.log4j.LogXF: java.lang.String FQCN>;

        $r12 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        specialinvoke $r11.<org.apache.log4j.spi.LoggingEvent: void <init>(java.lang.String,org.apache.log4j.Category,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r13, r0, $r12, $r10, null);

        virtualinvoke r0.<org.apache.log4j.Category: void callAppenders(org.apache.log4j.spi.LoggingEvent)>($r11);

     label1:
        return;
    }

    public static void entering(org.apache.log4j.Logger, java.lang.String, java.lang.String, java.lang.Object)
    {
        java.lang.Throwable $r16;
        org.apache.log4j.Logger r0;
        java.lang.StringBuffer $r1, $r3, $r4, $r6, $r7, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r19;
        org.apache.log4j.Level $r23;
        java.lang.String r2, r5, $r8, r20, $r22;
        boolean $z0;
        org.apache.log4j.spi.LoggingEvent $r21;
        java.lang.Object r9;

        r0 := @parameter0: org.apache.log4j.Logger;

        r2 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        r9 := @parameter3: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.log4j.Category: boolean isDebugEnabled()>();

        if $z0 == 0 goto label5;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ENTRY ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        if r9 != null goto label1;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("null");

        r20 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label4;

     label1:
        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r9);

        r20 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("?");

        r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        $r21 = new org.apache.log4j.spi.LoggingEvent;

        $r22 = <org.apache.log4j.LogXF: java.lang.String FQCN>;

        $r23 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        specialinvoke $r21.<org.apache.log4j.spi.LoggingEvent: void <init>(java.lang.String,org.apache.log4j.Category,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r22, r0, $r23, r20, null);

        virtualinvoke r0.<org.apache.log4j.Category: void callAppenders(org.apache.log4j.spi.LoggingEvent)>($r21);

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void entering(org.apache.log4j.Logger, java.lang.String, java.lang.String, java.lang.Object[])
    {
        org.apache.log4j.Logger r0;
        org.apache.log4j.Level $r31;
        boolean $z0;
        java.lang.Throwable $r21;
        java.lang.Object[] r9;
        java.lang.StringBuffer $r1, $r3, $r4, $r6, $r7, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r22, $r23, $r24, $r25;
        int $i0, $i1, i2;
        java.lang.String r2, r5, $r8, r26, r27, r28, $r30, r32, r33;
        org.apache.log4j.spi.LoggingEvent $r29;
        java.lang.Object $r19;

        r0 := @parameter0: org.apache.log4j.Logger;

        r2 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        r9 := @parameter3: java.lang.Object[];

        $z0 = virtualinvoke r0.<org.apache.log4j.Category: boolean isDebugEnabled()>();

        if $z0 == 0 goto label9;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ENTRY ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        r26 = $r8;

        if r9 == null goto label7;

        $i0 = lengthof r9;

        if $i0 <= 0 goto label7;

        r27 = "{";

        r33 = "{";

        r32 = "{";

        i2 = 0;

     label1:
        $i1 = lengthof r9;

        if i2 >= $i1 goto label6;

     label2:
        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r26);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r33);

        $r19 = r9[i2];

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r19);

        r26 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        goto label5;

     label4:
        $r21 := @caughtexception;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r26);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r32);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("?");

        r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

     label5:
        r27 = ",";

        r33 = ",";

        r32 = ",";

        i2 = i2 + 1;

        goto label1;

     label6:
        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r26);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

        r28 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label8;

     label7:
        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{}");

        r28 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

     label8:
        $r29 = new org.apache.log4j.spi.LoggingEvent;

        $r30 = <org.apache.log4j.LogXF: java.lang.String FQCN>;

        $r31 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        specialinvoke $r29.<org.apache.log4j.spi.LoggingEvent: void <init>(java.lang.String,org.apache.log4j.Category,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r30, r0, $r31, r28, null);

        virtualinvoke r0.<org.apache.log4j.Category: void callAppenders(org.apache.log4j.spi.LoggingEvent)>($r29);

     label9:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public static void exiting(org.apache.log4j.Logger, java.lang.String, java.lang.String)
    {
        org.apache.log4j.spi.LoggingEvent $r1;
        org.apache.log4j.Logger r0;
        java.lang.StringBuffer $r2, $r6, $r7, $r9, $r10;
        org.apache.log4j.Level $r4;
        java.lang.String $r3, r5, r8, $r11;
        boolean $z0;

        r0 := @parameter0: org.apache.log4j.Logger;

        r5 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.log4j.Category: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r1 = new org.apache.log4j.spi.LoggingEvent;

        $r3 = <org.apache.log4j.LogXF: java.lang.String FQCN>;

        $r4 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" RETURN");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<org.apache.log4j.spi.LoggingEvent: void <init>(java.lang.String,org.apache.log4j.Category,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r3, r0, $r4, $r11, null);

        virtualinvoke r0.<org.apache.log4j.Category: void callAppenders(org.apache.log4j.spi.LoggingEvent)>($r1);

     label1:
        return;
    }

    public static void exiting(org.apache.log4j.Logger, java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.log4j.spi.LoggingEvent $r1;
        org.apache.log4j.Logger r0;
        java.lang.StringBuffer $r2, $r6, $r7, $r9, $r10, $r12;
        org.apache.log4j.Level $r4;
        java.lang.String $r3, r5, r8, r11, $r13;
        boolean $z0;

        r0 := @parameter0: org.apache.log4j.Logger;

        r5 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.String;

        r11 := @parameter3: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.log4j.Category: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r1 = new org.apache.log4j.spi.LoggingEvent;

        $r3 = <org.apache.log4j.LogXF: java.lang.String FQCN>;

        $r4 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" RETURN ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<org.apache.log4j.spi.LoggingEvent: void <init>(java.lang.String,org.apache.log4j.Category,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r3, r0, $r4, $r13, null);

        virtualinvoke r0.<org.apache.log4j.Category: void callAppenders(org.apache.log4j.spi.LoggingEvent)>($r1);

     label1:
        return;
    }

    public static void exiting(org.apache.log4j.Logger, java.lang.String, java.lang.String, java.lang.Object)
    {
        java.lang.Throwable $r16;
        org.apache.log4j.Logger r0;
        java.lang.StringBuffer $r1, $r3, $r4, $r6, $r7, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r19;
        org.apache.log4j.Level $r23;
        java.lang.String r2, r5, $r8, r20, $r22;
        boolean $z0;
        org.apache.log4j.spi.LoggingEvent $r21;
        java.lang.Object r9;

        r0 := @parameter0: org.apache.log4j.Logger;

        r2 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        r9 := @parameter3: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.log4j.Category: boolean isDebugEnabled()>();

        if $z0 == 0 goto label5;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" RETURN ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        if r9 != null goto label1;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("null");

        r20 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label4;

     label1:
        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r9);

        r20 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("?");

        r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        $r21 = new org.apache.log4j.spi.LoggingEvent;

        $r22 = <org.apache.log4j.LogXF: java.lang.String FQCN>;

        $r23 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        specialinvoke $r21.<org.apache.log4j.spi.LoggingEvent: void <init>(java.lang.String,org.apache.log4j.Category,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r22, r0, $r23, r20, null);

        virtualinvoke r0.<org.apache.log4j.Category: void callAppenders(org.apache.log4j.spi.LoggingEvent)>($r21);

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void throwing(org.apache.log4j.Logger, java.lang.String, java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r12;
        org.apache.log4j.spi.LoggingEvent $r1;
        org.apache.log4j.Logger r0;
        java.lang.StringBuffer $r2, $r6, $r7, $r9, $r10;
        org.apache.log4j.Level $r4;
        java.lang.String $r3, r5, r8, $r11;
        boolean $z0;

        r0 := @parameter0: org.apache.log4j.Logger;

        r5 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.String;

        r12 := @parameter3: java.lang.Throwable;

        $z0 = virtualinvoke r0.<org.apache.log4j.Category: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r1 = new org.apache.log4j.spi.LoggingEvent;

        $r3 = <org.apache.log4j.LogXF: java.lang.String FQCN>;

        $r4 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" THROW");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<org.apache.log4j.spi.LoggingEvent: void <init>(java.lang.String,org.apache.log4j.Category,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r3, r0, $r4, $r11, r12);

        virtualinvoke r0.<org.apache.log4j.Category: void callAppenders(org.apache.log4j.spi.LoggingEvent)>($r1);

     label1:
        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.apache.log4j.Level $r0;
        java.lang.Class $r1, $r3;
        java.lang.String $r2;

        $r0 = new org.apache.log4j.Level;

        specialinvoke $r0.<org.apache.log4j.Level: void <init>(int,java.lang.String,int)>(5000, "TRACE", 7);

        <org.apache.log4j.LogXF: org.apache.log4j.Level TRACE> = $r0;

        $r1 = <org.apache.log4j.LogXF: java.lang.Class class$org$apache$log4j$LogXF>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <org.apache.log4j.LogXF: java.lang.Class class$(java.lang.String)>("org.apache.log4j.LogXF");

        <org.apache.log4j.LogXF: java.lang.Class class$org$apache$log4j$LogXF> = $r3;

        goto label2;

     label1:
        $r3 = <org.apache.log4j.LogXF: java.lang.Class class$org$apache$log4j$LogXF>;

     label2:
        $r2 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        <org.apache.log4j.LogXF: java.lang.String FQCN> = $r2;

        return;
    }
}
