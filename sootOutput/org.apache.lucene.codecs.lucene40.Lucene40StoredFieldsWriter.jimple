public final class org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter extends org.apache.lucene.codecs.StoredFieldsWriter
{
    static final int FIELD_IS_BINARY;
    private static final int _NUMERIC_BIT_SHIFT;
    static final int FIELD_IS_NUMERIC_MASK;
    static final int FIELD_IS_NUMERIC_INT;
    static final int FIELD_IS_NUMERIC_LONG;
    static final int FIELD_IS_NUMERIC_FLOAT;
    static final int FIELD_IS_NUMERIC_DOUBLE;
    static final java.lang.String CODEC_NAME_IDX;
    static final java.lang.String CODEC_NAME_DAT;
    static final int VERSION_START;
    static final int VERSION_CURRENT;
    static final long HEADER_LENGTH_IDX;
    static final long HEADER_LENGTH_DAT;
    public static final java.lang.String FIELDS_EXTENSION;
    public static final java.lang.String FIELDS_INDEX_EXTENSION;
    private final org.apache.lucene.store.Directory directory;
    private final java.lang.String segment;
    private org.apache.lucene.store.IndexOutput fieldsStream;
    private org.apache.lucene.store.IndexOutput indexStream;
    private static final int MAX_RAW_MERGE_DOCS;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.store.Directory, java.lang.String, org.apache.lucene.store.IOContext) throws java.io.IOException
    {
        java.lang.Throwable $r15;
        long $l0, $l1, $l3, $l4;
        java.lang.AssertionError $r11, $r13, $r14;
        byte $b2, $b5;
        org.apache.lucene.store.Directory r1;
        org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter r0;
        java.lang.String r2, $r3, $r6;
        org.apache.lucene.store.IOContext r4;
        org.apache.lucene.store.IndexOutput $r5, $r7, $r8, $r9, $r10, $r12;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter;

        r1 := @parameter0: org.apache.lucene.store.Directory;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: org.apache.lucene.store.IOContext;

        specialinvoke r0.<org.apache.lucene.codecs.StoredFieldsWriter: void <init>()>();

        $z0 = <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != null goto label1;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label1:
        r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.Directory directory> = r1;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: java.lang.String segment> = r2;

     label2:
        $r3 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>(r2, "", "fdt");

        $r5 = virtualinvoke r1.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexOutput createOutput(java.lang.String,org.apache.lucene.store.IOContext)>($r3, r4);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream> = $r5;

        $r6 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>(r2, "", "fdx");

        $r7 = virtualinvoke r1.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexOutput createOutput(java.lang.String,org.apache.lucene.store.IOContext)>($r6, r4);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput indexStream> = $r7;

        $r8 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: void writeHeader(org.apache.lucene.store.DataOutput,java.lang.String,int)>($r8, "Lucene40StoredFieldsData", 0);

        $r9 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput indexStream>;

        staticinvoke <org.apache.lucene.codecs.CodecUtil: void writeHeader(org.apache.lucene.store.DataOutput,java.lang.String,int)>($r9, "Lucene40StoredFieldsIndex", 0);

        $z1 = <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $l3 = <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: long HEADER_LENGTH_DAT>;

        $r12 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        $l4 = virtualinvoke $r12.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        $b5 = $l3 cmp $l4;

        if $b5 == 0 goto label3;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label3:
        $z2 = <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: boolean $assertionsDisabled>;

        if $z2 != 0 goto label4;

        $l0 = <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: long HEADER_LENGTH_IDX>;

        $r10 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput indexStream>;

        $l1 = virtualinvoke $r10.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label4;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label4:
        if 1 != 0 goto label8;

        virtualinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: void abort()>();

        goto label8;

     label5:
        $r15 := @caughtexception;

     label6:
        if 0 != 0 goto label7;

        virtualinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: void abort()>();

     label7:
        throw $r15;

     label8:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void startDocument(int) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter r0;
        int i1;
        long $l0;
        org.apache.lucene.store.IndexOutput $r1, $r2, $r3;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter;

        i1 := @parameter0: int;

        $r2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput indexStream>;

        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        virtualinvoke $r2.<org.apache.lucene.store.IndexOutput: void writeLong(long)>($l0);

        $r3 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        virtualinvoke $r3.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>(i1);

        return;
    }

    public void close() throws java.io.IOException
    {
        java.lang.Throwable $r4;
        java.io.Closeable[] $r0;
        org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter r1;
        org.apache.lucene.store.IndexOutput $r2, $r3;

        r1 := @this: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter;

     label1:
        $r0 = newarray (java.io.Closeable)[2];

        $r2 = r1.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        $r0[0] = $r2;

        $r3 = r1.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput indexStream>;

        $r0[1] = $r3;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r0);

     label2:
        r1.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput indexStream> = null;

        r1.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream> = null;

        goto label5;

     label3:
        $r4 := @caughtexception;

     label4:
        r1.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput indexStream> = null;

        r1.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream> = null;

        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void abort()
    {
        java.lang.Throwable $r7;
        java.lang.String[] $r1;
        org.apache.lucene.store.Directory $r3;
        org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter r0;
        java.lang.String $r2, $r4, $r5, $r6;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter;

     label1:
        virtualinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: void close()>();

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

     label4:
        $r3 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.Directory directory>;

        $r1 = newarray (java.lang.String)[2];

        $r2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: java.lang.String segment>;

        $r4 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r2, "", "fdt");

        $r1[0] = $r4;

        $r5 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: java.lang.String segment>;

        $r6 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String,java.lang.String)>($r5, "", "fdx");

        $r1[1] = $r6;

        staticinvoke <org.apache.lucene.util.IOUtils: void deleteFilesIgnoringExceptions(org.apache.lucene.store.Directory,java.lang.String[])>($r3, $r1);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void writeField(org.apache.lucene.index.FieldInfo, org.apache.lucene.index.IndexableField) throws java.io.IOException
    {
        byte[] $r14;
        org.apache.lucene.index.IndexableField r3;
        byte b7, $b8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        org.apache.lucene.util.BytesRef $r5, r30;
        float $f0;
        java.lang.StringBuilder $r17, $r18, $r20, $r21, $r24, $r25, $r27;
        long $l1, $l3;
        java.lang.AssertionError $r7;
        org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter r0;
        int $i0, $i2, $i4, $i5, $i6, $i9;
        java.lang.String $r6, $r12, $r19, $r22, $r28, r29;
        java.lang.Number $r4;
        org.apache.lucene.store.IndexOutput $r2, $r8, $r9, $r10, $r11, $r13, $r15, $r31, $r32;
        double $d0;
        java.lang.IllegalArgumentException $r16, $r23;
        org.apache.lucene.index.FieldInfo r1;
        java.lang.Class $r26;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter;

        r1 := @parameter0: org.apache.lucene.index.FieldInfo;

        r3 := @parameter1: org.apache.lucene.index.IndexableField;

        $r2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        $i0 = r1.<org.apache.lucene.index.FieldInfo: int number>;

        virtualinvoke $r2.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i0);

        b7 = 0;

        $r4 = interfaceinvoke r3.<org.apache.lucene.index.IndexableField: java.lang.Number numericValue()>();

        if $r4 == null goto label07;

        $z6 = $r4 instanceof java.lang.Byte;

        if $z6 != 0 goto label01;

        $z7 = $r4 instanceof java.lang.Short;

        if $z7 != 0 goto label01;

        $z8 = $r4 instanceof java.lang.Integer;

        if $z8 == 0 goto label02;

     label01:
        b7 = 8;

        goto label06;

     label02:
        $z9 = $r4 instanceof java.lang.Long;

        if $z9 == 0 goto label03;

        b7 = 16;

        goto label06;

     label03:
        $z10 = $r4 instanceof java.lang.Float;

        if $z10 == 0 goto label04;

        b7 = 24;

        goto label06;

     label04:
        $z11 = $r4 instanceof java.lang.Double;

        if $z11 == 0 goto label05;

        b7 = 32;

        goto label06;

     label05:
        $r23 = new java.lang.IllegalArgumentException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot store numeric type ");

        $r26 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r28);

        throw $r23;

     label06:
        r29 = null;

        r30 = null;

        goto label09;

     label07:
        $r5 = interfaceinvoke r3.<org.apache.lucene.index.IndexableField: org.apache.lucene.util.BytesRef binaryValue()>();

        r30 = $r5;

        if $r5 == null goto label08;

        b7 = 2;

        r29 = null;

        goto label09;

     label08:
        $r6 = interfaceinvoke r3.<org.apache.lucene.index.IndexableField: java.lang.String stringValue()>();

        r29 = $r6;

        if $r6 != null goto label09;

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("field ");

        $r19 = interfaceinvoke r3.<org.apache.lucene.index.IndexableField: java.lang.String name()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is stored but does not have binaryValue, stringValue nor numericValue");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r16;

     label09:
        $r31 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        $b8 = (byte) b7;

        virtualinvoke $r31.<org.apache.lucene.store.IndexOutput: void writeByte(byte)>($b8);

        if r30 == null goto label10;

        $r13 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        $i4 = r30.<org.apache.lucene.util.BytesRef: int length>;

        virtualinvoke $r13.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i4);

        $r15 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        $r14 = r30.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i6 = r30.<org.apache.lucene.util.BytesRef: int offset>;

        $i5 = r30.<org.apache.lucene.util.BytesRef: int length>;

        virtualinvoke $r15.<org.apache.lucene.store.IndexOutput: void writeBytes(byte[],int,int)>($r14, $i6, $i5);

        goto label17;

     label10:
        if r29 == null goto label11;

        $r11 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        $r12 = interfaceinvoke r3.<org.apache.lucene.index.IndexableField: java.lang.String stringValue()>();

        virtualinvoke $r11.<org.apache.lucene.store.IndexOutput: void writeString(java.lang.String)>($r12);

        goto label17;

     label11:
        $z0 = $r4 instanceof java.lang.Byte;

        if $z0 != 0 goto label12;

        $z1 = $r4 instanceof java.lang.Short;

        if $z1 != 0 goto label12;

        $z2 = $r4 instanceof java.lang.Integer;

        if $z2 == 0 goto label13;

     label12:
        $r32 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        $i9 = virtualinvoke $r4.<java.lang.Number: int intValue()>();

        virtualinvoke $r32.<org.apache.lucene.store.IndexOutput: void writeInt(int)>($i9);

        goto label17;

     label13:
        $z3 = $r4 instanceof java.lang.Long;

        if $z3 == 0 goto label14;

        $r10 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        $l3 = virtualinvoke $r4.<java.lang.Number: long longValue()>();

        virtualinvoke $r10.<org.apache.lucene.store.IndexOutput: void writeLong(long)>($l3);

        goto label17;

     label14:
        $z4 = $r4 instanceof java.lang.Float;

        if $z4 == 0 goto label15;

        $r9 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        $f0 = virtualinvoke $r4.<java.lang.Number: float floatValue()>();

        $i2 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);

        virtualinvoke $r9.<org.apache.lucene.store.IndexOutput: void writeInt(int)>($i2);

        goto label17;

     label15:
        $z5 = $r4 instanceof java.lang.Double;

        if $z5 == 0 goto label16;

        $r8 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        virtualinvoke $r8.<org.apache.lucene.store.IndexOutput: void writeLong(long)>($l1);

        goto label17;

     label16:
        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>("Cannot get here");

        throw $r7;

     label17:
        return;
    }

    public void addRawDocuments(org.apache.lucene.store.IndexInput, int[], int) throws java.io.IOException
    {
        long $l0, $l2, $l3, $l6, l7;
        java.lang.AssertionError $r5;
        byte $b4;
        int[] r7;
        org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter r0;
        int i1, $i5, i8;
        org.apache.lucene.store.IndexOutput $r1, $r3, $r4, $r6;
        boolean $z0;
        org.apache.lucene.store.IndexInput r2;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter;

        r2 := @parameter0: org.apache.lucene.store.IndexInput;

        r7 := @parameter1: int[];

        i1 := @parameter2: int;

        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        l7 = $l0;

        i8 = 0;

     label1:
        if i8 >= i1 goto label2;

        $r6 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput indexStream>;

        virtualinvoke $r6.<org.apache.lucene.store.IndexOutput: void writeLong(long)>(l7);

        $i5 = r7[i8];

        $l6 = (long) $i5;

        l7 = l7 + $l6;

        i8 = i8 + 1;

        goto label1;

     label2:
        $r3 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        $l2 = l7 - $l0;

        virtualinvoke $r3.<org.apache.lucene.store.IndexOutput: void copyBytes(org.apache.lucene.store.DataInput,long)>(r2, $l2);

        $z0 = <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $r4 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput fieldsStream>;

        $l3 = virtualinvoke $r4.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        $b4 = $l3 cmp l7;

        if $b4 == 0 goto label3;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label3:
        return;
    }

    public void finish(org.apache.lucene.index.FieldInfos, int)
    {
        long $l1, $l2, $l3, $l4, $l5, $l7;
        byte $b6;
        int i0;
        org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter r0;
        java.lang.String $r11, $r14;
        org.apache.lucene.index.FieldInfos r15;
        org.apache.lucene.store.IndexOutput $r1, $r7, $r10;
        java.lang.RuntimeException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r8, $r9, $r12, $r13;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter;

        r15 := @parameter0: org.apache.lucene.index.FieldInfos;

        i0 := @parameter1: int;

        $l3 = <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: long HEADER_LENGTH_IDX>;

        $l1 = (long) i0;

        $l2 = $l1 * 8L;

        $l4 = $l3 + $l2;

        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput indexStream>;

        $l5 = virtualinvoke $r1.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        $b6 = $l4 cmp $l5;

        if $b6 == 0 goto label1;

        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fdx size mismatch: docCount is ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but fdx file size is ");

        $r7 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput indexStream>;

        $l7 = virtualinvoke $r7.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" file=");

        $r10 = r0.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: org.apache.lucene.store.IndexOutput indexStream>;

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; now aborting this merge to prevent index corruption");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14);

        throw $r2;

     label1:
        return;
    }

    public int merge(org.apache.lucene.index.MergeState) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader r11;
        org.apache.lucene.index.SegmentReader[] $r8;
        org.apache.lucene.codecs.StoredFieldsReader $r10;
        org.apache.lucene.index.MergeState r1;
        int[] r0;
        org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter r4;
        int $i0, $i1, $i2, i3, i4;
        org.apache.lucene.index.SegmentReader r9;
        org.apache.lucene.index.FieldInfos $r5;
        org.apache.lucene.util.Bits $r12;
        boolean $z0, $z1;
        java.util.Iterator $r3;
        java.util.List $r2;
        java.lang.Object $r6;
        org.apache.lucene.index.AtomicReader r7;

        r4 := @this: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter;

        r1 := @parameter0: org.apache.lucene.index.MergeState;

        i3 = 0;

        r0 = newarray (int)[4192];

        i4 = 0;

        $r2 = r1.<org.apache.lucene.index.MergeState: java.util.List readers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.lucene.index.AtomicReader) $r6;

        $r8 = r1.<org.apache.lucene.index.MergeState: org.apache.lucene.index.SegmentReader[] matchingSegmentReaders>;

        $i0 = i4;

        i4 = i4 + 1;

        r9 = $r8[$i0];

        r11 = null;

        if r9 == null goto label2;

        $r10 = virtualinvoke r9.<org.apache.lucene.index.SegmentReader: org.apache.lucene.codecs.StoredFieldsReader getFieldsReader()>();

        if $r10 == null goto label2;

        $z1 = $r10 instanceof org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader;

        if $z1 == 0 goto label2;

        r11 = (org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader) $r10;

     label2:
        $r12 = virtualinvoke r7.<org.apache.lucene.index.AtomicReader: org.apache.lucene.util.Bits getLiveDocs()>();

        if $r12 == null goto label3;

        $i2 = specialinvoke r4.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: int copyFieldsWithDeletions(org.apache.lucene.index.MergeState,org.apache.lucene.index.AtomicReader,org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader,int[])>(r1, r7, r11, r0);

        i3 = i3 + $i2;

        goto label4;

     label3:
        $i1 = specialinvoke r4.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: int copyFieldsNoDeletions(org.apache.lucene.index.MergeState,org.apache.lucene.index.AtomicReader,org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader,int[])>(r1, r7, r11, r0);

        i3 = i3 + $i1;

     label4:
        goto label1;

     label5:
        $r5 = r1.<org.apache.lucene.index.MergeState: org.apache.lucene.index.FieldInfos fieldInfos>;

        virtualinvoke r4.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: void finish(org.apache.lucene.index.FieldInfos,int)>($r5, i3);

        return i3;
    }

    private int copyFieldsWithDeletions(org.apache.lucene.index.MergeState, org.apache.lucene.index.AtomicReader, org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader, int[]) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader r2;
        java.lang.AssertionError $r9;
        org.apache.lucene.index.MergeState r5;
        org.apache.lucene.document.Document $r3;
        int[] r8;
        int $i0, i1, i2, i3, i4, $i5, i6;
        org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter r4;
        org.apache.lucene.index.FieldInfos $r6;
        org.apache.lucene.util.Bits $r1;
        boolean $z0, $z1, $z2, $z3;
        double $d0;
        org.apache.lucene.index.MergeState$CheckAbort $r7, $r11;
        org.apache.lucene.store.IndexInput $r10;
        org.apache.lucene.index.AtomicReader r0;

        r4 := @this: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter;

        r5 := @parameter0: org.apache.lucene.index.MergeState;

        r0 := @parameter1: org.apache.lucene.index.AtomicReader;

        r2 := @parameter2: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader;

        r8 := @parameter3: int[];

        i1 = 0;

        $i0 = virtualinvoke r0.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        $r1 = virtualinvoke r0.<org.apache.lucene.index.AtomicReader: org.apache.lucene.util.Bits getLiveDocs()>();

        $z0 = <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        if $r1 != null goto label01;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label01:
        if r2 == null goto label09;

        i2 = 0;

     label02:
        if i2 >= $i0 goto label08;

        $z2 = interfaceinvoke $r1.<org.apache.lucene.util.Bits: boolean get(int)>(i2);

        if $z2 != 0 goto label03;

        i2 = i2 + 1;

        goto label02;

     label03:
        i3 = i2;

        i4 = 0;

     label04:
        i2 = i2 + 1;

        i4 = i4 + 1;

        if i2 < $i0 goto label05;

        goto label07;

     label05:
        $z3 = interfaceinvoke $r1.<org.apache.lucene.util.Bits: boolean get(int)>(i2);

        if $z3 != 0 goto label06;

        i2 = i2 + 1;

        goto label07;

     label06:
        if i4 < 4192 goto label04;

     label07:
        $r10 = virtualinvoke r2.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput rawDocs(int[],int,int)>(r8, i3, i4);

        virtualinvoke r4.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: void addRawDocuments(org.apache.lucene.store.IndexInput,int[],int)>($r10, r8, i4);

        i1 = i1 + i4;

        $r11 = r5.<org.apache.lucene.index.MergeState: org.apache.lucene.index.MergeState$CheckAbort checkAbort>;

        $i5 = 300 * i4;

        $d0 = (double) $i5;

        virtualinvoke $r11.<org.apache.lucene.index.MergeState$CheckAbort: void work(double)>($d0);

        goto label02;

     label08:
        goto label13;

     label09:
        i6 = 0;

     label10:
        if i6 >= $i0 goto label13;

        $z1 = interfaceinvoke $r1.<org.apache.lucene.util.Bits: boolean get(int)>(i6);

        if $z1 != 0 goto label11;

        goto label12;

     label11:
        $r3 = virtualinvoke r0.<org.apache.lucene.index.AtomicReader: org.apache.lucene.document.Document document(int)>(i6);

        $r6 = r5.<org.apache.lucene.index.MergeState: org.apache.lucene.index.FieldInfos fieldInfos>;

        virtualinvoke r4.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: void addDocument(java.lang.Iterable,org.apache.lucene.index.FieldInfos)>($r3, $r6);

        i1 = i1 + 1;

        $r7 = r5.<org.apache.lucene.index.MergeState: org.apache.lucene.index.MergeState$CheckAbort checkAbort>;

        virtualinvoke $r7.<org.apache.lucene.index.MergeState$CheckAbort: void work(double)>(300.0);

     label12:
        i6 = i6 + 1;

        goto label10;

     label13:
        return i1;
    }

    private int copyFieldsNoDeletions(org.apache.lucene.index.MergeState, org.apache.lucene.index.AtomicReader, org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader, int[]) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader r1;
        org.apache.lucene.index.MergeState r4;
        org.apache.lucene.document.Document $r2;
        int[] r7;
        int $i0, $i1, $i2, $i3, i4;
        org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter r3;
        org.apache.lucene.index.FieldInfos $r5;
        double $d0;
        org.apache.lucene.index.MergeState$CheckAbort $r6, $r9;
        org.apache.lucene.store.IndexInput $r8;
        org.apache.lucene.index.AtomicReader r0;

        r3 := @this: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter;

        r4 := @parameter0: org.apache.lucene.index.MergeState;

        r0 := @parameter1: org.apache.lucene.index.AtomicReader;

        r1 := @parameter2: org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader;

        r7 := @parameter3: int[];

        $i0 = virtualinvoke r0.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        i4 = 0;

        if r1 == null goto label2;

     label1:
        if i4 >= $i0 goto label3;

        $i1 = $i0 - i4;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>(4192, $i1);

        $r8 = virtualinvoke r1.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsReader: org.apache.lucene.store.IndexInput rawDocs(int[],int,int)>(r7, i4, $i2);

        virtualinvoke r3.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: void addRawDocuments(org.apache.lucene.store.IndexInput,int[],int)>($r8, r7, $i2);

        i4 = i4 + $i2;

        $r9 = r4.<org.apache.lucene.index.MergeState: org.apache.lucene.index.MergeState$CheckAbort checkAbort>;

        $i3 = 300 * $i2;

        $d0 = (double) $i3;

        virtualinvoke $r9.<org.apache.lucene.index.MergeState$CheckAbort: void work(double)>($d0);

        goto label1;

     label2:
        if i4 >= $i0 goto label3;

        $r2 = virtualinvoke r0.<org.apache.lucene.index.AtomicReader: org.apache.lucene.document.Document document(int)>(i4);

        $r5 = r4.<org.apache.lucene.index.MergeState: org.apache.lucene.index.FieldInfos fieldInfos>;

        virtualinvoke r3.<org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: void addDocument(java.lang.Iterable,org.apache.lucene.index.FieldInfos)>($r2, $r5);

        $r6 = r4.<org.apache.lucene.index.MergeState: org.apache.lucene.index.MergeState$CheckAbort checkAbort>;

        virtualinvoke $r6.<org.apache.lucene.index.MergeState$CheckAbort: void work(double)>(300.0);

        i4 = i4 + 1;

        goto label2;

     label3:
        return i4;
    }

    static void <clinit>()
    {
        int $i0, $i2;
        java.lang.Class $r0;
        long $l1, $l3;
        boolean $z0, $z1;

        <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: int MAX_RAW_MERGE_DOCS> = 4192;

        <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: java.lang.String FIELDS_INDEX_EXTENSION> = "fdx";

        <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: java.lang.String FIELDS_EXTENSION> = "fdt";

        <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: int VERSION_CURRENT> = 0;

        <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: int VERSION_START> = 0;

        <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: java.lang.String CODEC_NAME_DAT> = "Lucene40StoredFieldsData";

        <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: java.lang.String CODEC_NAME_IDX> = "Lucene40StoredFieldsIndex";

        <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: int FIELD_IS_NUMERIC_DOUBLE> = 32;

        <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: int FIELD_IS_NUMERIC_FLOAT> = 24;

        <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: int FIELD_IS_NUMERIC_LONG> = 16;

        <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: int FIELD_IS_NUMERIC_INT> = 8;

        <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: int FIELD_IS_NUMERIC_MASK> = 56;

        <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: int _NUMERIC_BIT_SHIFT> = 3;

        <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: int FIELD_IS_BINARY> = 2;

        $r0 = class "Lorg/apache/lucene/codecs/lucene40/Lucene40StoredFieldsWriter;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: boolean $assertionsDisabled> = $z1;

        $i0 = staticinvoke <org.apache.lucene.codecs.CodecUtil: int headerLength(java.lang.String)>("Lucene40StoredFieldsIndex");

        $l1 = (long) $i0;

        <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: long HEADER_LENGTH_IDX> = $l1;

        $i2 = staticinvoke <org.apache.lucene.codecs.CodecUtil: int headerLength(java.lang.String)>("Lucene40StoredFieldsData");

        $l3 = (long) $i2;

        <org.apache.lucene.codecs.lucene40.Lucene40StoredFieldsWriter: long HEADER_LENGTH_DAT> = $l3;

        return;
    }
}
