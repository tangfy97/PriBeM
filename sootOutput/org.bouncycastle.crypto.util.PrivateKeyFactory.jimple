public class org.bouncycastle.crypto.util.PrivateKeyFactory extends java.lang.Object
{

    public void <init>()
    {
        org.bouncycastle.crypto.util.PrivateKeyFactory r0;

        r0 := @this: org.bouncycastle.crypto.util.PrivateKeyFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(byte[]) throws java.io.IOException
    {
        byte[] r0;
        org.bouncycastle.crypto.params.AsymmetricKeyParameter $r3;
        org.bouncycastle.asn1.pkcs.PrivateKeyInfo $r2;
        org.bouncycastle.asn1.ASN1Object $r1;

        r0 := @parameter0: byte[];

        $r1 = staticinvoke <org.bouncycastle.asn1.ASN1Object: org.bouncycastle.asn1.ASN1Object fromByteArray(byte[])>(r0);

        $r2 = staticinvoke <org.bouncycastle.asn1.pkcs.PrivateKeyInfo: org.bouncycastle.asn1.pkcs.PrivateKeyInfo getInstance(java.lang.Object)>($r1);

        $r3 = staticinvoke <org.bouncycastle.crypto.util.PrivateKeyFactory: org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)>($r2);

        return $r3;
    }

    public static org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(java.io.InputStream) throws java.io.IOException
    {
        org.bouncycastle.asn1.DERObject $r2;
        org.bouncycastle.crypto.params.AsymmetricKeyParameter $r4;
        org.bouncycastle.asn1.ASN1InputStream $r0;
        org.bouncycastle.asn1.pkcs.PrivateKeyInfo $r3;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        $r0 = new org.bouncycastle.asn1.ASN1InputStream;

        specialinvoke $r0.<org.bouncycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream)>(r1);

        $r2 = virtualinvoke $r0.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        $r3 = staticinvoke <org.bouncycastle.asn1.pkcs.PrivateKeyInfo: org.bouncycastle.asn1.pkcs.PrivateKeyInfo getInstance(java.lang.Object)>($r2);

        $r4 = staticinvoke <org.bouncycastle.crypto.util.PrivateKeyFactory: org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)>($r3);

        return $r4;
    }

    public static org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo) throws java.io.IOException
    {
        byte[] $r25, $r90;
        org.bouncycastle.asn1.ASN1Sequence $r19, $r28, $r49, $r59, $r69;
        org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters $r70;
        java.math.BigInteger $r23, $r24, $r30, $r39, $r43, $r44, $r45, $r52, $r54, $r55, $r61, $r63, $r64, $r66, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r88, $r89;
        org.bouncycastle.asn1.sec.ECPrivateKeyStructure $r26;
        org.bouncycastle.asn1.x9.X9ECParameters $r17, $r32, $r33, $r34, r84;
        org.bouncycastle.asn1.DERObject $r16, $r18, $r27, $r31, $r35, $r40, $r50, $r60, $r68;
        org.bouncycastle.crypto.params.DSAPrivateKeyParameters $r38;
        org.bouncycastle.crypto.params.DHPrivateKeyParameters $r65;
        org.bouncycastle.math.ec.ECPoint $r22, $r87;
        org.bouncycastle.crypto.params.DSAParameters $r42, r82;
        java.lang.RuntimeException $r12;
        org.bouncycastle.crypto.params.ElGamalPrivateKeyParameters $r51;
        org.bouncycastle.crypto.params.ElGamalParameters $r53;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r1, $r14, $r36, $r47, $r57;
        org.bouncycastle.asn1.pkcs.DHParameter $r56;
        org.bouncycastle.asn1.pkcs.PrivateKeyInfo r0;
        org.bouncycastle.asn1.DERObjectIdentifier $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, r83;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure $r67;
        org.bouncycastle.asn1.x9.X962Parameters $r13;
        org.bouncycastle.crypto.params.DHParameters $r62;
        org.bouncycastle.asn1.DEREncodable $r15, $r37, $r48, $r58;
        org.bouncycastle.crypto.params.ECPrivateKeyParameters $r29;
        org.bouncycastle.asn1.oiw.ElGamalParameter $r46;
        org.bouncycastle.crypto.params.ECDomainParameters $r20, $r85, r91;
        int $i0;
        org.bouncycastle.math.ec.ECCurve $r21, $r86;
        org.bouncycastle.asn1.DERInteger r79, r80, r81;
        org.bouncycastle.asn1.x509.DSAParameter $r41;

        r0 := @parameter0: org.bouncycastle.asn1.pkcs.PrivateKeyInfo;

        $r1 = virtualinvoke r0.<org.bouncycastle.asn1.pkcs.PrivateKeyInfo: org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        $r3 = <org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier rsaEncryption>;

        $z0 = virtualinvoke $r2.<org.bouncycastle.asn1.DERObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label01;

        $r67 = new org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure;

        $r68 = virtualinvoke r0.<org.bouncycastle.asn1.pkcs.PrivateKeyInfo: org.bouncycastle.asn1.DERObject getPrivateKey()>();

        $r69 = (org.bouncycastle.asn1.ASN1Sequence) $r68;

        specialinvoke $r67.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r69);

        $r70 = new org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters;

        $r71 = virtualinvoke $r67.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getModulus()>();

        $r72 = virtualinvoke $r67.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getPublicExponent()>();

        $r73 = virtualinvoke $r67.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getPrivateExponent()>();

        $r74 = virtualinvoke $r67.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getPrime1()>();

        $r75 = virtualinvoke $r67.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getPrime2()>();

        $r76 = virtualinvoke $r67.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getExponent1()>();

        $r77 = virtualinvoke $r67.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getExponent2()>();

        $r78 = virtualinvoke $r67.<org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure: java.math.BigInteger getCoefficient()>();

        specialinvoke $r70.<org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78);

        return $r70;

     label01:
        $r4 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        $r5 = <org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier dhKeyAgreement>;

        $z1 = virtualinvoke $r4.<org.bouncycastle.asn1.DERObjectIdentifier: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label04;

        $r56 = new org.bouncycastle.asn1.pkcs.DHParameter;

        $r57 = virtualinvoke r0.<org.bouncycastle.asn1.pkcs.PrivateKeyInfo: org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

        $r58 = virtualinvoke $r57.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DEREncodable getParameters()>();

        $r59 = (org.bouncycastle.asn1.ASN1Sequence) $r58;

        specialinvoke $r56.<org.bouncycastle.asn1.pkcs.DHParameter: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r59);

        $r60 = virtualinvoke r0.<org.bouncycastle.asn1.pkcs.PrivateKeyInfo: org.bouncycastle.asn1.DERObject getPrivateKey()>();

        r79 = (org.bouncycastle.asn1.DERInteger) $r60;

        $r61 = virtualinvoke $r56.<org.bouncycastle.asn1.pkcs.DHParameter: java.math.BigInteger getL()>();

        if $r61 != null goto label02;

        $i0 = 0;

        goto label03;

     label02:
        $i0 = virtualinvoke $r61.<java.math.BigInteger: int intValue()>();

     label03:
        $r62 = new org.bouncycastle.crypto.params.DHParameters;

        $r63 = virtualinvoke $r56.<org.bouncycastle.asn1.pkcs.DHParameter: java.math.BigInteger getP()>();

        $r64 = virtualinvoke $r56.<org.bouncycastle.asn1.pkcs.DHParameter: java.math.BigInteger getG()>();

        specialinvoke $r62.<org.bouncycastle.crypto.params.DHParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int)>($r63, $r64, null, $i0);

        $r65 = new org.bouncycastle.crypto.params.DHPrivateKeyParameters;

        $r66 = virtualinvoke r79.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        specialinvoke $r65.<org.bouncycastle.crypto.params.DHPrivateKeyParameters: void <init>(java.math.BigInteger,org.bouncycastle.crypto.params.DHParameters)>($r66, $r62);

        return $r65;

     label04:
        $r6 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        $r7 = <org.bouncycastle.asn1.oiw.OIWObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier elGamalAlgorithm>;

        $z2 = virtualinvoke $r6.<org.bouncycastle.asn1.DERObjectIdentifier: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label05;

        $r46 = new org.bouncycastle.asn1.oiw.ElGamalParameter;

        $r47 = virtualinvoke r0.<org.bouncycastle.asn1.pkcs.PrivateKeyInfo: org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

        $r48 = virtualinvoke $r47.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DEREncodable getParameters()>();

        $r49 = (org.bouncycastle.asn1.ASN1Sequence) $r48;

        specialinvoke $r46.<org.bouncycastle.asn1.oiw.ElGamalParameter: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r49);

        $r50 = virtualinvoke r0.<org.bouncycastle.asn1.pkcs.PrivateKeyInfo: org.bouncycastle.asn1.DERObject getPrivateKey()>();

        r80 = (org.bouncycastle.asn1.DERInteger) $r50;

        $r51 = new org.bouncycastle.crypto.params.ElGamalPrivateKeyParameters;

        $r52 = virtualinvoke r80.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        $r53 = new org.bouncycastle.crypto.params.ElGamalParameters;

        $r54 = virtualinvoke $r46.<org.bouncycastle.asn1.oiw.ElGamalParameter: java.math.BigInteger getP()>();

        $r55 = virtualinvoke $r46.<org.bouncycastle.asn1.oiw.ElGamalParameter: java.math.BigInteger getG()>();

        specialinvoke $r53.<org.bouncycastle.crypto.params.ElGamalParameters: void <init>(java.math.BigInteger,java.math.BigInteger)>($r54, $r55);

        specialinvoke $r51.<org.bouncycastle.crypto.params.ElGamalPrivateKeyParameters: void <init>(java.math.BigInteger,org.bouncycastle.crypto.params.ElGamalParameters)>($r52, $r53);

        return $r51;

     label05:
        $r8 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        $r9 = <org.bouncycastle.asn1.x9.X9ObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier id_dsa>;

        $z3 = virtualinvoke $r8.<org.bouncycastle.asn1.DERObjectIdentifier: boolean equals(java.lang.Object)>($r9);

        if $z3 == 0 goto label07;

        $r35 = virtualinvoke r0.<org.bouncycastle.asn1.pkcs.PrivateKeyInfo: org.bouncycastle.asn1.DERObject getPrivateKey()>();

        r81 = (org.bouncycastle.asn1.DERInteger) $r35;

        $r36 = virtualinvoke r0.<org.bouncycastle.asn1.pkcs.PrivateKeyInfo: org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

        $r37 = virtualinvoke $r36.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DEREncodable getParameters()>();

        r82 = null;

        if $r37 == null goto label06;

        $r40 = interfaceinvoke $r37.<org.bouncycastle.asn1.DEREncodable: org.bouncycastle.asn1.DERObject getDERObject()>();

        $r41 = staticinvoke <org.bouncycastle.asn1.x509.DSAParameter: org.bouncycastle.asn1.x509.DSAParameter getInstance(java.lang.Object)>($r40);

        $r42 = new org.bouncycastle.crypto.params.DSAParameters;

        $r43 = virtualinvoke $r41.<org.bouncycastle.asn1.x509.DSAParameter: java.math.BigInteger getP()>();

        $r44 = virtualinvoke $r41.<org.bouncycastle.asn1.x509.DSAParameter: java.math.BigInteger getQ()>();

        $r45 = virtualinvoke $r41.<org.bouncycastle.asn1.x509.DSAParameter: java.math.BigInteger getG()>();

        specialinvoke $r42.<org.bouncycastle.crypto.params.DSAParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r43, $r44, $r45);

        r82 = $r42;

     label06:
        $r38 = new org.bouncycastle.crypto.params.DSAPrivateKeyParameters;

        $r39 = virtualinvoke r81.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        specialinvoke $r38.<org.bouncycastle.crypto.params.DSAPrivateKeyParameters: void <init>(java.math.BigInteger,org.bouncycastle.crypto.params.DSAParameters)>($r39, r82);

        return $r38;

     label07:
        $r10 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        $r11 = <org.bouncycastle.asn1.x9.X9ObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier id_ecPublicKey>;

        $z4 = virtualinvoke $r10.<org.bouncycastle.asn1.DERObjectIdentifier: boolean equals(java.lang.Object)>($r11);

        if $z4 == 0 goto label11;

        $r13 = new org.bouncycastle.asn1.x9.X962Parameters;

        $r14 = virtualinvoke r0.<org.bouncycastle.asn1.pkcs.PrivateKeyInfo: org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

        $r15 = virtualinvoke $r14.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DEREncodable getParameters()>();

        $r16 = (org.bouncycastle.asn1.DERObject) $r15;

        specialinvoke $r13.<org.bouncycastle.asn1.x9.X962Parameters: void <init>(org.bouncycastle.asn1.DERObject)>($r16);

        $z5 = virtualinvoke $r13.<org.bouncycastle.asn1.x9.X962Parameters: boolean isNamedCurve()>();

        if $z5 == 0 goto label09;

        $r31 = virtualinvoke $r13.<org.bouncycastle.asn1.x9.X962Parameters: org.bouncycastle.asn1.DERObject getParameters()>();

        r83 = (org.bouncycastle.asn1.DERObjectIdentifier) $r31;

        $r32 = staticinvoke <org.bouncycastle.asn1.x9.X962NamedCurves: org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.DERObjectIdentifier)>(r83);

        r84 = $r32;

        if $r32 != null goto label08;

        $r33 = staticinvoke <org.bouncycastle.asn1.sec.SECNamedCurves: org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.DERObjectIdentifier)>(r83);

        r84 = $r33;

        if $r33 != null goto label08;

        $r34 = staticinvoke <org.bouncycastle.asn1.nist.NISTNamedCurves: org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.DERObjectIdentifier)>(r83);

        r84 = $r34;

        if $r34 != null goto label08;

        r84 = staticinvoke <org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves: org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.DERObjectIdentifier)>(r83);

     label08:
        $r85 = new org.bouncycastle.crypto.params.ECDomainParameters;

        $r86 = virtualinvoke r84.<org.bouncycastle.asn1.x9.X9ECParameters: org.bouncycastle.math.ec.ECCurve getCurve()>();

        $r87 = virtualinvoke r84.<org.bouncycastle.asn1.x9.X9ECParameters: org.bouncycastle.math.ec.ECPoint getG()>();

        $r88 = virtualinvoke r84.<org.bouncycastle.asn1.x9.X9ECParameters: java.math.BigInteger getN()>();

        $r89 = virtualinvoke r84.<org.bouncycastle.asn1.x9.X9ECParameters: java.math.BigInteger getH()>();

        $r90 = virtualinvoke r84.<org.bouncycastle.asn1.x9.X9ECParameters: byte[] getSeed()>();

        specialinvoke $r85.<org.bouncycastle.crypto.params.ECDomainParameters: void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>($r86, $r87, $r88, $r89, $r90);

        r91 = $r85;

        goto label10;

     label09:
        $r17 = new org.bouncycastle.asn1.x9.X9ECParameters;

        $r18 = virtualinvoke $r13.<org.bouncycastle.asn1.x9.X962Parameters: org.bouncycastle.asn1.DERObject getParameters()>();

        $r19 = (org.bouncycastle.asn1.ASN1Sequence) $r18;

        specialinvoke $r17.<org.bouncycastle.asn1.x9.X9ECParameters: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r19);

        $r20 = new org.bouncycastle.crypto.params.ECDomainParameters;

        $r21 = virtualinvoke $r17.<org.bouncycastle.asn1.x9.X9ECParameters: org.bouncycastle.math.ec.ECCurve getCurve()>();

        $r22 = virtualinvoke $r17.<org.bouncycastle.asn1.x9.X9ECParameters: org.bouncycastle.math.ec.ECPoint getG()>();

        $r23 = virtualinvoke $r17.<org.bouncycastle.asn1.x9.X9ECParameters: java.math.BigInteger getN()>();

        $r24 = virtualinvoke $r17.<org.bouncycastle.asn1.x9.X9ECParameters: java.math.BigInteger getH()>();

        $r25 = virtualinvoke $r17.<org.bouncycastle.asn1.x9.X9ECParameters: byte[] getSeed()>();

        specialinvoke $r20.<org.bouncycastle.crypto.params.ECDomainParameters: void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>($r21, $r22, $r23, $r24, $r25);

        r91 = $r20;

     label10:
        $r26 = new org.bouncycastle.asn1.sec.ECPrivateKeyStructure;

        $r27 = virtualinvoke r0.<org.bouncycastle.asn1.pkcs.PrivateKeyInfo: org.bouncycastle.asn1.DERObject getPrivateKey()>();

        $r28 = (org.bouncycastle.asn1.ASN1Sequence) $r27;

        specialinvoke $r26.<org.bouncycastle.asn1.sec.ECPrivateKeyStructure: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r28);

        $r29 = new org.bouncycastle.crypto.params.ECPrivateKeyParameters;

        $r30 = virtualinvoke $r26.<org.bouncycastle.asn1.sec.ECPrivateKeyStructure: java.math.BigInteger getKey()>();

        specialinvoke $r29.<org.bouncycastle.crypto.params.ECPrivateKeyParameters: void <init>(java.math.BigInteger,org.bouncycastle.crypto.params.ECDomainParameters)>($r30, r91);

        return $r29;

     label11:
        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>("algorithm identifier in key not recognised");

        throw $r12;
    }
}
