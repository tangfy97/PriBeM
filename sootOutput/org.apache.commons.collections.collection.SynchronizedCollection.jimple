public class org.apache.commons.collections.collection.SynchronizedCollection extends java.lang.Object implements java.util.Collection, java.io.Serializable
{
    private static final long serialVersionUID;
    protected final java.util.Collection collection;
    protected final java.lang.Object lock;

    public static java.util.Collection decorate(java.util.Collection)
    {
        org.apache.commons.collections.collection.SynchronizedCollection $r0;
        java.util.Collection r1;

        r1 := @parameter0: java.util.Collection;

        $r0 = new org.apache.commons.collections.collection.SynchronizedCollection;

        specialinvoke $r0.<org.apache.commons.collections.collection.SynchronizedCollection: void <init>(java.util.Collection)>(r1);

        return $r0;
    }

    protected void <init>(java.util.Collection)
    {
        java.lang.IllegalArgumentException $r2;
        org.apache.commons.collections.collection.SynchronizedCollection r0;
        java.util.Collection r1;

        r0 := @this: org.apache.commons.collections.collection.SynchronizedCollection;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Collection must not be null");

        throw $r2;

     label1:
        r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.util.Collection collection> = r1;

        r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.lang.Object lock> = r0;

        return;
    }

    protected void <init>(java.util.Collection, java.lang.Object)
    {
        org.apache.commons.collections.collection.SynchronizedCollection r0;
        java.util.Collection r1;
        java.lang.Object r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.apache.commons.collections.collection.SynchronizedCollection;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Collection must not be null");

        throw $r3;

     label1:
        r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.util.Collection collection> = r1;

        r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.lang.Object lock> = r2;

        return;
    }

    public boolean add(java.lang.Object)
    {
        java.lang.Throwable $r4;
        org.apache.commons.collections.collection.SynchronizedCollection r0;
        java.util.Collection $r3;
        java.lang.Object $r1, r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.collection.SynchronizedCollection;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.util.Collection collection>;

        $z0 = interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>(r2);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean addAll(java.util.Collection)
    {
        java.lang.Throwable $r4;
        org.apache.commons.collections.collection.SynchronizedCollection r0;
        java.util.Collection r2, $r3;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.collection.SynchronizedCollection;

        r2 := @parameter0: java.util.Collection;

        $r1 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.util.Collection collection>;

        $z0 = interfaceinvoke $r3.<java.util.Collection: boolean addAll(java.util.Collection)>(r2);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void clear()
    {
        java.lang.Throwable $r3;
        org.apache.commons.collections.collection.SynchronizedCollection r0;
        java.util.Collection $r2;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.collections.collection.SynchronizedCollection;

        $r1 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.util.Collection collection>;

        interfaceinvoke $r2.<java.util.Collection: void clear()>();

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean contains(java.lang.Object)
    {
        java.lang.Throwable $r4;
        org.apache.commons.collections.collection.SynchronizedCollection r0;
        java.util.Collection $r3;
        java.lang.Object $r1, r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.collection.SynchronizedCollection;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.util.Collection collection>;

        $z0 = interfaceinvoke $r3.<java.util.Collection: boolean contains(java.lang.Object)>(r2);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean containsAll(java.util.Collection)
    {
        java.lang.Throwable $r4;
        org.apache.commons.collections.collection.SynchronizedCollection r0;
        java.util.Collection r2, $r3;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.collection.SynchronizedCollection;

        r2 := @parameter0: java.util.Collection;

        $r1 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.util.Collection collection>;

        $z0 = interfaceinvoke $r3.<java.util.Collection: boolean containsAll(java.util.Collection)>(r2);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isEmpty()
    {
        java.lang.Throwable $r3;
        org.apache.commons.collections.collection.SynchronizedCollection r0;
        java.util.Collection $r2;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.collection.SynchronizedCollection;

        $r1 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.util.Collection collection>;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r2;
        org.apache.commons.collections.collection.SynchronizedCollection r0;
        java.util.Collection $r1;

        r0 := @this: org.apache.commons.collections.collection.SynchronizedCollection;

        $r1 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.util.Collection collection>;

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

        return $r2;
    }

    public java.lang.Object[] toArray()
    {
        java.lang.Throwable $r4;
        java.lang.Object[] $r3;
        org.apache.commons.collections.collection.SynchronizedCollection r0;
        java.util.Collection $r2;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.collections.collection.SynchronizedCollection;

        $r1 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.util.Collection collection>;

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray()>();

        exitmonitor $r1;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.lang.Throwable $r5;
        java.lang.Object[] r2, $r4;
        org.apache.commons.collections.collection.SynchronizedCollection r0;
        java.util.Collection $r3;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.collections.collection.SynchronizedCollection;

        r2 := @parameter0: java.lang.Object[];

        $r1 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.util.Collection collection>;

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>(r2);

        exitmonitor $r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean remove(java.lang.Object)
    {
        java.lang.Throwable $r4;
        org.apache.commons.collections.collection.SynchronizedCollection r0;
        java.util.Collection $r3;
        java.lang.Object $r1, r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.collection.SynchronizedCollection;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.util.Collection collection>;

        $z0 = interfaceinvoke $r3.<java.util.Collection: boolean remove(java.lang.Object)>(r2);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.lang.Throwable $r4;
        org.apache.commons.collections.collection.SynchronizedCollection r0;
        java.util.Collection r2, $r3;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.collection.SynchronizedCollection;

        r2 := @parameter0: java.util.Collection;

        $r1 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.util.Collection collection>;

        $z0 = interfaceinvoke $r3.<java.util.Collection: boolean removeAll(java.util.Collection)>(r2);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.lang.Throwable $r4;
        org.apache.commons.collections.collection.SynchronizedCollection r0;
        java.util.Collection r2, $r3;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.collection.SynchronizedCollection;

        r2 := @parameter0: java.util.Collection;

        $r1 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.util.Collection collection>;

        $z0 = interfaceinvoke $r3.<java.util.Collection: boolean retainAll(java.util.Collection)>(r2);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int size()
    {
        java.lang.Throwable $r3;
        org.apache.commons.collections.collection.SynchronizedCollection r0;
        java.util.Collection $r2;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.collections.collection.SynchronizedCollection;

        $r1 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.util.Collection collection>;

        $i0 = interfaceinvoke $r2.<java.util.Collection: int size()>();

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Throwable $r4;
        org.apache.commons.collections.collection.SynchronizedCollection r0;
        java.util.Collection $r3;
        java.lang.Object $r1, r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.collection.SynchronizedCollection;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        if r2 != r0 goto label3;

        exitmonitor $r1;

     label2:
        return 1;

     label3:
        $r3 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.util.Collection collection>;

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int hashCode()
    {
        java.lang.Throwable $r3;
        org.apache.commons.collections.collection.SynchronizedCollection r0;
        java.util.Collection $r2;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: org.apache.commons.collections.collection.SynchronizedCollection;

        $r1 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.util.Collection collection>;

        $i0 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String toString()
    {
        java.lang.Throwable $r4;
        org.apache.commons.collections.collection.SynchronizedCollection r0;
        java.util.Collection $r2;
        java.lang.Object $r1;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.collections.collection.SynchronizedCollection;

        $r1 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.lang.Object lock>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.commons.collections.collection.SynchronizedCollection: java.util.Collection collection>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        exitmonitor $r1;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections.collection.SynchronizedCollection: long serialVersionUID> = 2412805092710877986L;

        return;
    }
}
