public class org.apache.batik.parser.ClockParser extends org.apache.batik.parser.TimingParser
{
    protected org.apache.batik.parser.ClockHandler clockHandler;
    protected boolean parseOffset;

    public void <init>(boolean)
    {
        org.apache.batik.parser.ClockParser r0;
        boolean z0;

        r0 := @this: org.apache.batik.parser.ClockParser;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.batik.parser.TimingParser: void <init>(boolean,boolean)>(0, 0);

        r0.<org.apache.batik.parser.ClockParser: boolean parseOffset> = z0;

        return;
    }

    public void setClockHandler(org.apache.batik.parser.ClockHandler)
    {
        org.apache.batik.parser.ClockHandler r1;
        org.apache.batik.parser.ClockParser r0;

        r0 := @this: org.apache.batik.parser.ClockParser;

        r1 := @parameter0: org.apache.batik.parser.ClockHandler;

        r0.<org.apache.batik.parser.ClockParser: org.apache.batik.parser.ClockHandler clockHandler> = r1;

        return;
    }

    public org.apache.batik.parser.ClockHandler getClockHandler()
    {
        org.apache.batik.parser.ClockHandler $r1;
        org.apache.batik.parser.ClockParser r0;

        r0 := @this: org.apache.batik.parser.ClockParser;

        $r1 = r0.<org.apache.batik.parser.ClockParser: org.apache.batik.parser.ClockHandler clockHandler>;

        return $r1;
    }

    protected void doParse() throws org.apache.batik.parser.ParseException, java.io.IOException
    {
        java.lang.Object[] $r4;
        org.apache.batik.util.io.NormalizingReader $r1;
        org.apache.batik.parser.ClockHandler $r2, $r3;
        java.lang.Integer $r6;
        org.apache.batik.parser.ClockParser r0;
        int $i0, $i1, $i2, $i4;
        float f0, $f1;
        boolean $z0;

        r0 := @this: org.apache.batik.parser.ClockParser;

        $r1 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i0 = virtualinvoke $r1.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i0;

        $z0 = r0.<org.apache.batik.parser.ClockParser: boolean parseOffset>;

        if $z0 == 0 goto label1;

        $f1 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: float parseOffset()>();

        goto label2;

     label1:
        $f1 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: float parseClockValue()>();

     label2:
        f0 = $f1;

        $i1 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        $i4 = (int) -1;

        if $i1 == $i4 goto label3;

        $r4 = newarray (java.lang.Object)[1];

        $r6 = new java.lang.Integer;

        $i2 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        specialinvoke $r6.<java.lang.Integer: void <init>(int)>($i2);

        $r4[0] = $r6;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportError(java.lang.String,java.lang.Object[])>("end.of.stream.expected", $r4);

     label3:
        $r2 = r0.<org.apache.batik.parser.ClockParser: org.apache.batik.parser.ClockHandler clockHandler>;

        if $r2 == null goto label4;

        $r3 = r0.<org.apache.batik.parser.ClockParser: org.apache.batik.parser.ClockHandler clockHandler>;

        interfaceinvoke $r3.<org.apache.batik.parser.ClockHandler: void clockValue(float)>(f0);

     label4:
        return;
    }
}
