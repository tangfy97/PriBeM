public class org.apache.batik.svggen.SimpleImageHandler extends java.lang.Object implements org.apache.batik.svggen.GenericImageHandler, org.apache.batik.svggen.SVGSyntax, org.apache.batik.svggen.ErrorConstants
{
    static final java.lang.String XLINK_NAMESPACE_URI;
    protected org.apache.batik.svggen.ImageHandler imageHandler;

    public void <init>(org.apache.batik.svggen.ImageHandler)
    {
        java.lang.IllegalArgumentException $r2;
        org.apache.batik.svggen.SimpleImageHandler r0;
        org.apache.batik.svggen.ImageHandler r1;

        r0 := @this: org.apache.batik.svggen.SimpleImageHandler;

        r1 := @parameter0: org.apache.batik.svggen.ImageHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        r0.<org.apache.batik.svggen.SimpleImageHandler: org.apache.batik.svggen.ImageHandler imageHandler> = r1;

        return;
    }

    public void setDOMTreeManager(org.apache.batik.svggen.DOMTreeManager)
    {
        org.apache.batik.svggen.DOMTreeManager r1;
        org.apache.batik.svggen.SimpleImageHandler r0;

        r0 := @this: org.apache.batik.svggen.SimpleImageHandler;

        r1 := @parameter0: org.apache.batik.svggen.DOMTreeManager;

        return;
    }

    public org.w3c.dom.Element createElement(org.apache.batik.svggen.SVGGeneratorContext)
    {
        org.w3c.dom.Element $r2;
        org.apache.batik.svggen.SVGGeneratorContext r0;
        org.w3c.dom.Document $r1;
        org.apache.batik.svggen.SimpleImageHandler r3;

        r3 := @this: org.apache.batik.svggen.SimpleImageHandler;

        r0 := @parameter0: org.apache.batik.svggen.SVGGeneratorContext;

        $r1 = virtualinvoke r0.<org.apache.batik.svggen.SVGGeneratorContext: org.w3c.dom.Document getDOMFactory()>();

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "image");

        return $r2;
    }

    public java.awt.geom.AffineTransform handleImage(java.awt.Image, org.w3c.dom.Element, int, int, int, int, org.apache.batik.svggen.SVGGeneratorContext)
    {
        java.awt.Image r0;
        org.apache.batik.svggen.ImageHandler $r4;
        org.w3c.dom.Element r2;
        org.apache.batik.svggen.SVGGeneratorContext r3;
        int $i0, $i1, i2, i3, i4, i5;
        org.apache.batik.svggen.SimpleImageHandler r1;
        double $d0, $d1, $d2, $d3;

        r1 := @this: org.apache.batik.svggen.SimpleImageHandler;

        r0 := @parameter0: java.awt.Image;

        r2 := @parameter1: org.w3c.dom.Element;

        i4 := @parameter2: int;

        i5 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        r3 := @parameter6: org.apache.batik.svggen.SVGGeneratorContext;

        $i0 = virtualinvoke r0.<java.awt.Image: int getWidth(java.awt.image.ImageObserver)>(null);

        $i1 = virtualinvoke r0.<java.awt.Image: int getHeight(java.awt.image.ImageObserver)>(null);

        if $i0 == 0 goto label1;

        if $i1 == 0 goto label1;

        if i2 == 0 goto label1;

        if i3 != 0 goto label2;

     label1:
        virtualinvoke r1.<org.apache.batik.svggen.SimpleImageHandler: void handleEmptyImage(org.w3c.dom.Element)>(r2);

        goto label3;

     label2:
        $r4 = r1.<org.apache.batik.svggen.SimpleImageHandler: org.apache.batik.svggen.ImageHandler imageHandler>;

        interfaceinvoke $r4.<org.apache.batik.svggen.ImageHandler: void handleImage(java.awt.Image,org.w3c.dom.Element,org.apache.batik.svggen.SVGGeneratorContext)>(r0, r2, r3);

        $d3 = (double) i4;

        $d2 = (double) i5;

        $d1 = (double) i2;

        $d0 = (double) i3;

        virtualinvoke r1.<org.apache.batik.svggen.SimpleImageHandler: void setImageAttributes(org.w3c.dom.Element,double,double,double,double,org.apache.batik.svggen.SVGGeneratorContext)>(r2, $d3, $d2, $d1, $d0, r3);

     label3:
        return null;
    }

    public java.awt.geom.AffineTransform handleImage(java.awt.image.RenderedImage, org.w3c.dom.Element, int, int, int, int, org.apache.batik.svggen.SVGGeneratorContext)
    {
        java.awt.image.RenderedImage r0;
        org.apache.batik.svggen.ImageHandler $r4;
        org.w3c.dom.Element r2;
        org.apache.batik.svggen.SVGGeneratorContext r3;
        int $i0, $i1, i2, i3, i4, i5;
        org.apache.batik.svggen.SimpleImageHandler r1;
        double $d0, $d1, $d2, $d3;

        r1 := @this: org.apache.batik.svggen.SimpleImageHandler;

        r0 := @parameter0: java.awt.image.RenderedImage;

        r2 := @parameter1: org.w3c.dom.Element;

        i4 := @parameter2: int;

        i5 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        r3 := @parameter6: org.apache.batik.svggen.SVGGeneratorContext;

        $i0 = interfaceinvoke r0.<java.awt.image.RenderedImage: int getWidth()>();

        $i1 = interfaceinvoke r0.<java.awt.image.RenderedImage: int getHeight()>();

        if $i0 == 0 goto label1;

        if $i1 == 0 goto label1;

        if i2 == 0 goto label1;

        if i3 != 0 goto label2;

     label1:
        virtualinvoke r1.<org.apache.batik.svggen.SimpleImageHandler: void handleEmptyImage(org.w3c.dom.Element)>(r2);

        goto label3;

     label2:
        $r4 = r1.<org.apache.batik.svggen.SimpleImageHandler: org.apache.batik.svggen.ImageHandler imageHandler>;

        interfaceinvoke $r4.<org.apache.batik.svggen.ImageHandler: void handleImage(java.awt.image.RenderedImage,org.w3c.dom.Element,org.apache.batik.svggen.SVGGeneratorContext)>(r0, r2, r3);

        $d3 = (double) i4;

        $d2 = (double) i5;

        $d1 = (double) i2;

        $d0 = (double) i3;

        virtualinvoke r1.<org.apache.batik.svggen.SimpleImageHandler: void setImageAttributes(org.w3c.dom.Element,double,double,double,double,org.apache.batik.svggen.SVGGeneratorContext)>(r2, $d3, $d2, $d1, $d0, r3);

     label3:
        return null;
    }

    public java.awt.geom.AffineTransform handleImage(java.awt.image.renderable.RenderableImage, org.w3c.dom.Element, double, double, double, double, org.apache.batik.svggen.SVGGeneratorContext)
    {
        org.apache.batik.svggen.ImageHandler $r4;
        byte $b0, $b1, $b2, $b3;
        java.awt.image.renderable.RenderableImage r0;
        org.apache.batik.svggen.SimpleImageHandler r1;
        double d0, d1, d2, d3, d4, d5;
        org.w3c.dom.Element r2;
        org.apache.batik.svggen.SVGGeneratorContext r3;
        float $f0, $f1;

        r1 := @this: org.apache.batik.svggen.SimpleImageHandler;

        r0 := @parameter0: java.awt.image.renderable.RenderableImage;

        r2 := @parameter1: org.w3c.dom.Element;

        d4 := @parameter2: double;

        d5 := @parameter3: double;

        d2 := @parameter4: double;

        d3 := @parameter5: double;

        r3 := @parameter6: org.apache.batik.svggen.SVGGeneratorContext;

        $f0 = interfaceinvoke r0.<java.awt.image.renderable.RenderableImage: float getWidth()>();

        d0 = (double) $f0;

        $f1 = interfaceinvoke r0.<java.awt.image.renderable.RenderableImage: float getHeight()>();

        d1 = (double) $f1;

        $b0 = d0 cmpl 0.0;

        if $b0 == 0 goto label1;

        $b1 = d1 cmpl 0.0;

        if $b1 == 0 goto label1;

        $b2 = d2 cmpl 0.0;

        if $b2 == 0 goto label1;

        $b3 = d3 cmpl 0.0;

        if $b3 != 0 goto label2;

     label1:
        virtualinvoke r1.<org.apache.batik.svggen.SimpleImageHandler: void handleEmptyImage(org.w3c.dom.Element)>(r2);

        goto label3;

     label2:
        $r4 = r1.<org.apache.batik.svggen.SimpleImageHandler: org.apache.batik.svggen.ImageHandler imageHandler>;

        interfaceinvoke $r4.<org.apache.batik.svggen.ImageHandler: void handleImage(java.awt.image.renderable.RenderableImage,org.w3c.dom.Element,org.apache.batik.svggen.SVGGeneratorContext)>(r0, r2, r3);

        virtualinvoke r1.<org.apache.batik.svggen.SimpleImageHandler: void setImageAttributes(org.w3c.dom.Element,double,double,double,double,org.apache.batik.svggen.SVGGeneratorContext)>(r2, d4, d5, d2, d3, r3);

     label3:
        return null;
    }

    protected void setImageAttributes(org.w3c.dom.Element, double, double, double, double, org.apache.batik.svggen.SVGGeneratorContext)
    {
        org.w3c.dom.Element r0;
        org.apache.batik.svggen.SVGGeneratorContext r1;
        java.lang.String $r2, $r3, $r4, $r5;
        org.apache.batik.svggen.SimpleImageHandler r6;
        double d0, d1, d2, d3;

        r6 := @this: org.apache.batik.svggen.SimpleImageHandler;

        r0 := @parameter0: org.w3c.dom.Element;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        r1 := @parameter5: org.apache.batik.svggen.SVGGeneratorContext;

        $r2 = virtualinvoke r1.<org.apache.batik.svggen.SVGGeneratorContext: java.lang.String doubleString(double)>(d0);

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "x", $r2);

        $r3 = virtualinvoke r1.<org.apache.batik.svggen.SVGGeneratorContext: java.lang.String doubleString(double)>(d1);

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "y", $r3);

        $r4 = virtualinvoke r1.<org.apache.batik.svggen.SVGGeneratorContext: java.lang.String doubleString(double)>(d2);

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "width", $r4);

        $r5 = virtualinvoke r1.<org.apache.batik.svggen.SVGGeneratorContext: java.lang.String doubleString(double)>(d3);

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "height", $r5);

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "preserveAspectRatio", "none");

        return;
    }

    protected void handleEmptyImage(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r0;
        org.apache.batik.svggen.SimpleImageHandler r1;

        r1 := @this: org.apache.batik.svggen.SimpleImageHandler;

        r0 := @parameter0: org.w3c.dom.Element;

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/1999/xlink", "xlink:href", "");

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "width", "0");

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "height", "0");

        return;
    }

    public static void <clinit>()
    {
        <org.apache.batik.svggen.SimpleImageHandler: java.lang.String XLINK_NAMESPACE_URI> = "http://www.w3.org/1999/xlink";

        return;
    }
}
