class com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker extends java.lang.Object
{
    private final com.google.gxp.compiler.dot.GraphSink out;
    private java.util.Map visited;
    private final com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ToStringHandler toStringHandler;
    private final com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$IterableHandler iterableHandler;
    private final com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapHandler mapHandler;
    private final com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ValueObjectHandler valueObjectHandler;
    private final com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapEntryHandler mapEntryHandler;

    void <init>(com.google.gxp.compiler.dot.GraphSink)
    {
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapHandler $r4;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapEntryHandler $r6;
        java.util.IdentityHashMap $r1;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ToStringHandler $r2;
        com.google.gxp.compiler.dot.GraphSink r7, $r9;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker r0;
        java.lang.Object $r8;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ValueObjectHandler $r5;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$IterableHandler $r3;

        r0 := @this: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker;

        r7 := @parameter0: com.google.gxp.compiler.dot.GraphSink;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.IdentityHashMap;

        specialinvoke $r1.<java.util.IdentityHashMap: void <init>()>();

        r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: java.util.Map visited> = $r1;

        $r2 = new com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ToStringHandler;

        specialinvoke $r2.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ToStringHandler: void <init>(com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker,com.google.gxp.compiler.dot.ReflectiveGraphRenderer$1)>(r0, null);

        r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ToStringHandler toStringHandler> = $r2;

        $r3 = new com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$IterableHandler;

        specialinvoke $r3.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$IterableHandler: void <init>(com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker,com.google.gxp.compiler.dot.ReflectiveGraphRenderer$1)>(r0, null);

        r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$IterableHandler iterableHandler> = $r3;

        $r4 = new com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapHandler;

        specialinvoke $r4.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapHandler: void <init>(com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker,com.google.gxp.compiler.dot.ReflectiveGraphRenderer$1)>(r0, null);

        r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapHandler mapHandler> = $r4;

        $r5 = new com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ValueObjectHandler;

        specialinvoke $r5.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ValueObjectHandler: void <init>(com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker,com.google.gxp.compiler.dot.ReflectiveGraphRenderer$1)>(r0, null);

        r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ValueObjectHandler valueObjectHandler> = $r5;

        $r6 = new com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapEntryHandler;

        specialinvoke $r6.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapEntryHandler: void <init>(com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker,com.google.gxp.compiler.dot.ReflectiveGraphRenderer$1)>(r0, null);

        r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapEntryHandler mapEntryHandler> = $r6;

        $r8 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r7);

        $r9 = (com.google.gxp.compiler.dot.GraphSink) $r8;

        r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: com.google.gxp.compiler.dot.GraphSink out> = $r9;

        return;
    }

    java.lang.String renderSubgraph(java.lang.Object)
    {
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker r0;
        java.util.Map $r2, $r5, $r8, $r11;
        int $i0;
        java.lang.String $r7, $r13;
        boolean $z0;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$Handler $r10;
        java.lang.Object r1, $r12;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.Class $r9;

        r0 := @this: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: java.util.Map visited>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r11 = r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: java.util.Map visited>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r13 = (java.lang.String) $r12;

        return $r13;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("n");

        $r5 = r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: java.util.Map visited>;

        $i0 = interfaceinvoke $r5.<java.util.Map: int size()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: java.util.Map visited>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

        $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = specialinvoke r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$Handler getHandler(java.lang.Class)>($r9);

        interfaceinvoke $r10.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$Handler: void handle(java.lang.String,java.lang.Object)>($r7, r1);

        return $r7;
    }

    private com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$Handler getHandler(java.lang.Class)
    {
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapEntryHandler $r9;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapHandler $r10;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ToStringHandler $r6;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker r5;
        java.lang.Class r0, $r1, $r2, $r3, $r4;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ValueObjectHandler $r7;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$IterableHandler $r8;
        boolean $z0, $z1, $z2, $z3;

        r5 := @this: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker;

        r0 := @parameter0: java.lang.Class;

        $r1 = class "Ljava/util/Map;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 == 0 goto label1;

        $r10 = r5.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapHandler mapHandler>;

        return $r10;

     label1:
        $r2 = class "Ljava/util/Map$Entry;";

        $z1 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z1 == 0 goto label2;

        $r9 = r5.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$MapEntryHandler mapEntryHandler>;

        return $r9;

     label2:
        $r3 = class "Ljava/lang/Iterable;";

        $z2 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z2 == 0 goto label3;

        $r8 = r5.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$IterableHandler iterableHandler>;

        return $r8;

     label3:
        $r4 = class "Lcom/google/gxp/compiler/base/Node;";

        $z3 = virtualinvoke $r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z3 == 0 goto label4;

        $r7 = r5.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ValueObjectHandler valueObjectHandler>;

        return $r7;

     label4:
        $r6 = r5.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ToStringHandler toStringHandler>;

        return $r6;
    }

    static com.google.gxp.compiler.dot.GraphSink access$200(com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker)
    {
        com.google.gxp.compiler.dot.GraphSink $r1;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker r0;

        r0 := @parameter0: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker;

        $r1 = r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: com.google.gxp.compiler.dot.GraphSink out>;

        return $r1;
    }

    static com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$Handler access$700(com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker, java.lang.Class)
    {
        java.lang.Class r1;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker r0;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$Handler $r2;

        r0 := @parameter0: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker;

        r1 := @parameter1: java.lang.Class;

        $r2 = specialinvoke r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$Handler getHandler(java.lang.Class)>(r1);

        return $r2;
    }
}
