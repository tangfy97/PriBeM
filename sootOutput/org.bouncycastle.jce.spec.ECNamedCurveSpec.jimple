public class org.bouncycastle.jce.spec.ECNamedCurveSpec extends java.security.spec.ECParameterSpec
{
    private java.lang.String name;

    private static java.security.spec.EllipticCurve convertCurve(org.bouncycastle.math.ec.ECCurve, byte[])
    {
        byte[] r9;
        java.security.spec.ECFieldF2m $r4, $r12;
        int[] $r2, $r10;
        java.math.BigInteger $r6, $r8, $r14, $r16, $r20, $r22, $r24;
        boolean $z0, $z1;
        java.security.spec.EllipticCurve $r3, $r11, $r17;
        java.security.spec.ECFieldFp $r18;
        org.bouncycastle.math.ec.ECCurve$F2m r1;
        org.bouncycastle.math.ec.ECFieldElement $r5, $r7, $r13, $r15, $r21, $r23;
        org.bouncycastle.math.ec.ECCurve$Fp $r19;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.bouncycastle.math.ec.ECCurve r0;

        r0 := @parameter0: org.bouncycastle.math.ec.ECCurve;

        r9 := @parameter1: byte[];

        $z0 = r0 instanceof org.bouncycastle.math.ec.ECCurve$Fp;

        if $z0 == 0 goto label1;

        $r17 = new java.security.spec.EllipticCurve;

        $r18 = new java.security.spec.ECFieldFp;

        $r19 = (org.bouncycastle.math.ec.ECCurve$Fp) r0;

        $r20 = virtualinvoke $r19.<org.bouncycastle.math.ec.ECCurve$Fp: java.math.BigInteger getQ()>();

        specialinvoke $r18.<java.security.spec.ECFieldFp: void <init>(java.math.BigInteger)>($r20);

        $r21 = virtualinvoke r0.<org.bouncycastle.math.ec.ECCurve: org.bouncycastle.math.ec.ECFieldElement getA()>();

        $r22 = virtualinvoke $r21.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r23 = virtualinvoke r0.<org.bouncycastle.math.ec.ECCurve: org.bouncycastle.math.ec.ECFieldElement getB()>();

        $r24 = virtualinvoke $r23.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r17.<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger,byte[])>($r18, $r22, $r24, r9);

        return $r17;

     label1:
        r1 = (org.bouncycastle.math.ec.ECCurve$F2m) r0;

        $z1 = virtualinvoke r1.<org.bouncycastle.math.ec.ECCurve$F2m: boolean isTrinomial()>();

        if $z1 == 0 goto label2;

        $r10 = newarray (int)[1];

        $i4 = virtualinvoke r1.<org.bouncycastle.math.ec.ECCurve$F2m: int getK1()>();

        $r10[0] = $i4;

        $r11 = new java.security.spec.EllipticCurve;

        $r12 = new java.security.spec.ECFieldF2m;

        $i5 = virtualinvoke r1.<org.bouncycastle.math.ec.ECCurve$F2m: int getM()>();

        specialinvoke $r12.<java.security.spec.ECFieldF2m: void <init>(int,int[])>($i5, $r10);

        $r13 = virtualinvoke r0.<org.bouncycastle.math.ec.ECCurve: org.bouncycastle.math.ec.ECFieldElement getA()>();

        $r14 = virtualinvoke $r13.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r15 = virtualinvoke r0.<org.bouncycastle.math.ec.ECCurve: org.bouncycastle.math.ec.ECFieldElement getB()>();

        $r16 = virtualinvoke $r15.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r11.<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger,byte[])>($r12, $r14, $r16, r9);

        return $r11;

     label2:
        $r2 = newarray (int)[3];

        $i0 = virtualinvoke r1.<org.bouncycastle.math.ec.ECCurve$F2m: int getK3()>();

        $r2[0] = $i0;

        $i1 = virtualinvoke r1.<org.bouncycastle.math.ec.ECCurve$F2m: int getK2()>();

        $r2[1] = $i1;

        $i2 = virtualinvoke r1.<org.bouncycastle.math.ec.ECCurve$F2m: int getK1()>();

        $r2[2] = $i2;

        $r3 = new java.security.spec.EllipticCurve;

        $r4 = new java.security.spec.ECFieldF2m;

        $i3 = virtualinvoke r1.<org.bouncycastle.math.ec.ECCurve$F2m: int getM()>();

        specialinvoke $r4.<java.security.spec.ECFieldF2m: void <init>(int,int[])>($i3, $r2);

        $r5 = virtualinvoke r0.<org.bouncycastle.math.ec.ECCurve: org.bouncycastle.math.ec.ECFieldElement getA()>();

        $r6 = virtualinvoke $r5.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r7 = virtualinvoke r0.<org.bouncycastle.math.ec.ECCurve: org.bouncycastle.math.ec.ECFieldElement getB()>();

        $r8 = virtualinvoke $r7.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r3.<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger,byte[])>($r4, $r6, $r8, r9);

        return $r3;
    }

    private static java.security.spec.ECPoint convertPoint(org.bouncycastle.math.ec.ECPoint)
    {
        org.bouncycastle.math.ec.ECPoint r1;
        org.bouncycastle.math.ec.ECFieldElement $r2, $r4;
        java.security.spec.ECPoint $r0;
        java.math.BigInteger $r3, $r5;

        r1 := @parameter0: org.bouncycastle.math.ec.ECPoint;

        $r0 = new java.security.spec.ECPoint;

        $r2 = virtualinvoke r1.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getX()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r4 = virtualinvoke r1.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getY()>();

        $r5 = virtualinvoke $r4.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r0.<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r5);

        return $r0;
    }

    public void <init>(java.lang.String, org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)
    {
        org.bouncycastle.math.ec.ECCurve r1;
        org.bouncycastle.math.ec.ECPoint r3;
        org.bouncycastle.jce.spec.ECNamedCurveSpec r0;
        java.security.spec.ECPoint $r4;
        java.math.BigInteger r5;
        java.security.spec.EllipticCurve $r2;
        java.lang.String r6;

        r0 := @this: org.bouncycastle.jce.spec.ECNamedCurveSpec;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: org.bouncycastle.math.ec.ECCurve;

        r3 := @parameter2: org.bouncycastle.math.ec.ECPoint;

        r5 := @parameter3: java.math.BigInteger;

        $r2 = staticinvoke <org.bouncycastle.jce.spec.ECNamedCurveSpec: java.security.spec.EllipticCurve convertCurve(org.bouncycastle.math.ec.ECCurve,byte[])>(r1, null);

        $r4 = staticinvoke <org.bouncycastle.jce.spec.ECNamedCurveSpec: java.security.spec.ECPoint convertPoint(org.bouncycastle.math.ec.ECPoint)>(r3);

        specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r2, $r4, r5, 1);

        r0.<org.bouncycastle.jce.spec.ECNamedCurveSpec: java.lang.String name> = r6;

        return;
    }

    public void <init>(java.lang.String, java.security.spec.EllipticCurve, java.security.spec.ECPoint, java.math.BigInteger)
    {
        org.bouncycastle.jce.spec.ECNamedCurveSpec r0;
        java.security.spec.ECPoint r2;
        java.math.BigInteger r3;
        java.security.spec.EllipticCurve r1;
        java.lang.String r4;

        r0 := @this: org.bouncycastle.jce.spec.ECNamedCurveSpec;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.security.spec.EllipticCurve;

        r2 := @parameter2: java.security.spec.ECPoint;

        r3 := @parameter3: java.math.BigInteger;

        specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>(r1, r2, r3, 1);

        r0.<org.bouncycastle.jce.spec.ECNamedCurveSpec: java.lang.String name> = r4;

        return;
    }

    public void <init>(java.lang.String, org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger)
    {
        org.bouncycastle.math.ec.ECCurve r1;
        java.security.spec.EllipticCurve $r2;
        org.bouncycastle.math.ec.ECPoint r3;
        org.bouncycastle.jce.spec.ECNamedCurveSpec r0;
        int $i0;
        java.security.spec.ECPoint $r4;
        java.math.BigInteger r5, r6;
        java.lang.String r7;

        r0 := @this: org.bouncycastle.jce.spec.ECNamedCurveSpec;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: org.bouncycastle.math.ec.ECCurve;

        r3 := @parameter2: org.bouncycastle.math.ec.ECPoint;

        r5 := @parameter3: java.math.BigInteger;

        r6 := @parameter4: java.math.BigInteger;

        $r2 = staticinvoke <org.bouncycastle.jce.spec.ECNamedCurveSpec: java.security.spec.EllipticCurve convertCurve(org.bouncycastle.math.ec.ECCurve,byte[])>(r1, null);

        $r4 = staticinvoke <org.bouncycastle.jce.spec.ECNamedCurveSpec: java.security.spec.ECPoint convertPoint(org.bouncycastle.math.ec.ECPoint)>(r3);

        $i0 = virtualinvoke r6.<java.math.BigInteger: int intValue()>();

        specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r2, $r4, r5, $i0);

        r0.<org.bouncycastle.jce.spec.ECNamedCurveSpec: java.lang.String name> = r7;

        return;
    }

    public void <init>(java.lang.String, java.security.spec.EllipticCurve, java.security.spec.ECPoint, java.math.BigInteger, java.math.BigInteger)
    {
        org.bouncycastle.jce.spec.ECNamedCurveSpec r0;
        int $i0;
        java.security.spec.ECPoint r2;
        java.math.BigInteger r3, r4;
        java.security.spec.EllipticCurve r1;
        java.lang.String r5;

        r0 := @this: org.bouncycastle.jce.spec.ECNamedCurveSpec;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.security.spec.EllipticCurve;

        r2 := @parameter2: java.security.spec.ECPoint;

        r3 := @parameter3: java.math.BigInteger;

        r4 := @parameter4: java.math.BigInteger;

        $i0 = virtualinvoke r4.<java.math.BigInteger: int intValue()>();

        specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>(r1, r2, r3, $i0);

        r0.<org.bouncycastle.jce.spec.ECNamedCurveSpec: java.lang.String name> = r5;

        return;
    }

    public void <init>(java.lang.String, org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, java.math.BigInteger, byte[])
    {
        byte[] r2;
        org.bouncycastle.math.ec.ECCurve r1;
        java.security.spec.EllipticCurve $r3;
        org.bouncycastle.math.ec.ECPoint r4;
        org.bouncycastle.jce.spec.ECNamedCurveSpec r0;
        int $i0;
        java.security.spec.ECPoint $r5;
        java.math.BigInteger r6, r7;
        java.lang.String r8;

        r0 := @this: org.bouncycastle.jce.spec.ECNamedCurveSpec;

        r8 := @parameter0: java.lang.String;

        r1 := @parameter1: org.bouncycastle.math.ec.ECCurve;

        r4 := @parameter2: org.bouncycastle.math.ec.ECPoint;

        r6 := @parameter3: java.math.BigInteger;

        r7 := @parameter4: java.math.BigInteger;

        r2 := @parameter5: byte[];

        $r3 = staticinvoke <org.bouncycastle.jce.spec.ECNamedCurveSpec: java.security.spec.EllipticCurve convertCurve(org.bouncycastle.math.ec.ECCurve,byte[])>(r1, r2);

        $r5 = staticinvoke <org.bouncycastle.jce.spec.ECNamedCurveSpec: java.security.spec.ECPoint convertPoint(org.bouncycastle.math.ec.ECPoint)>(r4);

        $i0 = virtualinvoke r7.<java.math.BigInteger: int intValue()>();

        specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r3, $r5, r6, $i0);

        r0.<org.bouncycastle.jce.spec.ECNamedCurveSpec: java.lang.String name> = r8;

        return;
    }

    public java.lang.String getName()
    {
        org.bouncycastle.jce.spec.ECNamedCurveSpec r0;
        java.lang.String $r1;

        r0 := @this: org.bouncycastle.jce.spec.ECNamedCurveSpec;

        $r1 = r0.<org.bouncycastle.jce.spec.ECNamedCurveSpec: java.lang.String name>;

        return $r1;
    }
}
