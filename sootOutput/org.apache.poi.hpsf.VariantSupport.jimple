public class org.apache.poi.hpsf.VariantSupport extends org.apache.poi.hpsf.Variant
{
    private static final org.apache.poi.util.POILogger logger;
    private static boolean logUnsupportedTypes;
    protected static java.util.List unsupportedMessage;
    public static final int[] SUPPORTED_TYPES;

    public void <init>()
    {
        org.apache.poi.hpsf.VariantSupport r0;

        r0 := @this: org.apache.poi.hpsf.VariantSupport;

        specialinvoke r0.<org.apache.poi.hpsf.Variant: void <init>()>();

        return;
    }

    public static void setLogUnsupportedTypes(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <org.apache.poi.hpsf.VariantSupport: boolean logUnsupportedTypes> = z0;

        return;
    }

    public static boolean isLogUnsupportedTypes()
    {
        boolean $z0;

        $z0 = <org.apache.poi.hpsf.VariantSupport: boolean logUnsupportedTypes>;

        return $z0;
    }

    protected static void writeUnsupportedTypeMessage(org.apache.poi.hpsf.UnsupportedVariantTypeException)
    {
        long $l0;
        org.apache.poi.util.POILogger $r4;
        org.apache.poi.hpsf.UnsupportedVariantTypeException r1;
        java.util.List $r0, $r3, $r6;
        java.lang.Long $r2;
        java.lang.String $r5;
        java.util.LinkedList $r7;
        boolean $z0, $z1;

        r1 := @parameter0: org.apache.poi.hpsf.UnsupportedVariantTypeException;

        $z0 = staticinvoke <org.apache.poi.hpsf.VariantSupport: boolean isLogUnsupportedTypes()>();

        if $z0 == 0 goto label2;

        $r0 = <org.apache.poi.hpsf.VariantSupport: java.util.List unsupportedMessage>;

        if $r0 != null goto label1;

        $r7 = new java.util.LinkedList;

        specialinvoke $r7.<java.util.LinkedList: void <init>()>();

        <org.apache.poi.hpsf.VariantSupport: java.util.List unsupportedMessage> = $r7;

     label1:
        $l0 = virtualinvoke r1.<org.apache.poi.hpsf.UnsupportedVariantTypeException: long getVariantType()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r3 = <org.apache.poi.hpsf.VariantSupport: java.util.List unsupportedMessage>;

        $z1 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>($r2);

        if $z1 != 0 goto label2;

        $r4 = <org.apache.poi.hpsf.VariantSupport: org.apache.poi.util.POILogger logger>;

        $r5 = virtualinvoke r1.<org.apache.poi.hpsf.UnsupportedVariantTypeException: java.lang.String getMessage()>();

        virtualinvoke $r4.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(7, $r5);

        $r6 = <org.apache.poi.hpsf.VariantSupport: java.util.List unsupportedMessage>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r2);

     label2:
        return;
    }

    public boolean isSupportedType(int)
    {
        org.apache.poi.hpsf.VariantSupport r2;
        int[] $r0, $r1;
        int $i0, i1, $i2, i3;

        r2 := @this: org.apache.poi.hpsf.VariantSupport;

        i1 := @parameter0: int;

        i3 = 0;

     label1:
        $r0 = <org.apache.poi.hpsf.VariantSupport: int[] SUPPORTED_TYPES>;

        $i0 = lengthof $r0;

        if i3 >= $i0 goto label3;

        $r1 = <org.apache.poi.hpsf.VariantSupport: int[] SUPPORTED_TYPES>;

        $i2 = $r1[i3];

        if i1 != $i2 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static java.lang.Object read(byte[], int, int, long, int) throws org.apache.poi.hpsf.ReadingNotSupportedException, java.io.UnsupportedEncodingException
    {
        byte[] r1, $r3, r18, r25;
        java.util.Date $r5;
        org.apache.poi.hpsf.VariantBool r24;
        java.lang.Integer $r14;
        java.lang.Short $r13;
        boolean $z0;
        long l0, $l5, $l7;
        org.apache.poi.hpsf.TypedPropertyValue $r0;
        org.apache.poi.hpsf.ClipboardData r23;
        int $i1, i2, $i3, $i4, $i6, $i8, i9, $i10, i11, $i12, $i13, $i14;
        java.lang.Boolean $r11;
        java.lang.String $r7, $r9;
        org.apache.poi.hpsf.UnicodeString r22;
        java.lang.UnsupportedOperationException $r17;
        org.apache.poi.hpsf.CodePageString r21;
        java.lang.Object $r2, $r4, $r6, $r8, $r10, $r12, $r15;
        org.apache.poi.hpsf.ReadingNotSupportedException $r16, $r19;
        org.apache.poi.hpsf.Filetime r20;

        r1 := @parameter0: byte[];

        i2 := @parameter1: int;

        i11 := @parameter2: int;

        l0 := @parameter3: long;

        i9 := @parameter4: int;

        $r0 = new org.apache.poi.hpsf.TypedPropertyValue;

        $i1 = (int) l0;

        specialinvoke $r0.<org.apache.poi.hpsf.TypedPropertyValue: void <init>(int,java.lang.Object)>($i1, null);

     label01:
        $i3 = virtualinvoke $r0.<org.apache.poi.hpsf.TypedPropertyValue: int readValue(byte[],int)>(r1, i2);

     label02:
        goto label04;

     label03:
        $r17 := @caughtexception;

        $i12 = lengthof r1;

        $i13 = $i12 - i2;

        $i14 = staticinvoke <java.lang.Math: int min(int,int)>(i11, $i13);

        r18 = newarray (byte)[$i14];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i2, r18, 0, $i14);

        $r19 = new org.apache.poi.hpsf.ReadingNotSupportedException;

        specialinvoke $r19.<org.apache.poi.hpsf.ReadingNotSupportedException: void <init>(long,java.lang.Object)>(l0, r18);

        throw $r19;

     label04:
        $i4 = (int) l0;

        lookupswitch($i4)
        {
            case 0: goto label05;
            case 2: goto label06;
            case 3: goto label05;
            case 5: goto label05;
            case 11: goto label11;
            case 20: goto label05;
            case 30: goto label08;
            case 31: goto label09;
            case 64: goto label07;
            case 71: goto label10;
            default: goto label12;
        };

     label05:
        $r15 = virtualinvoke $r0.<org.apache.poi.hpsf.TypedPropertyValue: java.lang.Object getValue()>();

        return $r15;

     label06:
        $r12 = virtualinvoke $r0.<org.apache.poi.hpsf.TypedPropertyValue: java.lang.Object getValue()>();

        $r13 = (java.lang.Short) $r12;

        $i10 = virtualinvoke $r13.<java.lang.Short: int intValue()>();

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        return $r14;

     label07:
        $r4 = virtualinvoke $r0.<org.apache.poi.hpsf.TypedPropertyValue: java.lang.Object getValue()>();

        r20 = (org.apache.poi.hpsf.Filetime) $r4;

        $l5 = virtualinvoke r20.<org.apache.poi.hpsf.Filetime: long getHigh()>();

        $i6 = (int) $l5;

        $l7 = virtualinvoke r20.<org.apache.poi.hpsf.Filetime: long getLow()>();

        $i8 = (int) $l7;

        $r5 = staticinvoke <org.apache.poi.hpsf.Util: java.util.Date filetimeToDate(int,int)>($i6, $i8);

        return $r5;

     label08:
        $r8 = virtualinvoke $r0.<org.apache.poi.hpsf.TypedPropertyValue: java.lang.Object getValue()>();

        r21 = (org.apache.poi.hpsf.CodePageString) $r8;

        $r9 = virtualinvoke r21.<org.apache.poi.hpsf.CodePageString: java.lang.String getJavaValue(int)>(i9);

        return $r9;

     label09:
        $r6 = virtualinvoke $r0.<org.apache.poi.hpsf.TypedPropertyValue: java.lang.Object getValue()>();

        r22 = (org.apache.poi.hpsf.UnicodeString) $r6;

        $r7 = virtualinvoke r22.<org.apache.poi.hpsf.UnicodeString: java.lang.String toJavaString()>();

        return $r7;

     label10:
        $r2 = virtualinvoke $r0.<org.apache.poi.hpsf.TypedPropertyValue: java.lang.Object getValue()>();

        r23 = (org.apache.poi.hpsf.ClipboardData) $r2;

        $r3 = virtualinvoke r23.<org.apache.poi.hpsf.ClipboardData: byte[] toByteArray()>();

        return $r3;

     label11:
        $r10 = virtualinvoke $r0.<org.apache.poi.hpsf.TypedPropertyValue: java.lang.Object getValue()>();

        r24 = (org.apache.poi.hpsf.VariantBool) $r10;

        $z0 = virtualinvoke r24.<org.apache.poi.hpsf.VariantBool: boolean getValue()>();

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r11;

     label12:
        r25 = newarray (byte)[$i3];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i2, r25, 0, $i3);

        $r16 = new org.apache.poi.hpsf.ReadingNotSupportedException;

        specialinvoke $r16.<org.apache.poi.hpsf.ReadingNotSupportedException: void <init>(long,java.lang.Object)>(l0, r25);

        throw $r16;

        catch java.lang.UnsupportedOperationException from label01 to label02 with label03;
    }

    public static java.lang.String codepageToEncoding(int) throws java.io.UnsupportedEncodingException
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <org.apache.poi.util.CodePageUtil: java.lang.String codepageToEncoding(int)>(i0);

        return $r0;
    }

    public static int write(java.io.OutputStream, long, java.lang.Object, int) throws java.io.IOException, org.apache.poi.hpsf.WritingNotSupportedException
    {
        byte[] $r1, $r30, r32, r33;
        java.lang.Integer $r13, $r28;
        org.apache.poi.hpsf.WritingNotSupportedException $r38, $r39;
        byte b14, b15;
        java.lang.Long $r10;
        java.lang.StringBuilder $r16, $r19, $r20, $r23, $r24, $r26, $r35;
        java.lang.Double $r12;
        long l0, $l2, $l3, $l4, $l5, $l8, $l18;
        java.lang.ClassCastException $r36;
        short $s23;
        java.lang.String $r5, $r6, $r9, $r18, $r22, $r25, $r27;
        org.apache.poi.hpsf.CodePageString $r34;
        char[] $r7;
        java.util.Date $r3;
        boolean $z0, $z1, $z2;
        int $i1, $i6, $i7, $i9, $i10, i16, $i17, $i19, $i20, $i21, $i22, $i24, $i25, i26, i27, i28, i29, i30, i32, i33, $i34, $i35, $i36, $i37;
        java.lang.Boolean $r11;
        double $d0;
        java.io.OutputStream r2;
        char $c11, $c12, $c13, c31;
        java.lang.Object r0;
        java.lang.Class $r17, $r21;
        org.apache.poi.hpsf.Filetime $r37;

        r2 := @parameter0: java.io.OutputStream;

        l0 := @parameter1: long;

        r0 := @parameter2: java.lang.Object;

        i16 := @parameter3: int;

        $i1 = (int) l0;

        lookupswitch($i1)
        {
            case 0: goto label09;
            case 2: goto label10;
            case 3: goto label11;
            case 5: goto label14;
            case 11: goto label01;
            case 20: goto label13;
            case 30: goto label04;
            case 31: goto label05;
            case 64: goto label15;
            case 71: goto label08;
            default: goto label16;
        };

     label01:
        $r11 = (java.lang.Boolean) r0;

        $z0 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label02;

        virtualinvoke r2.<java.io.OutputStream: void write(int)>(255);

        virtualinvoke r2.<java.io.OutputStream: void write(int)>(255);

        goto label03;

     label02:
        virtualinvoke r2.<java.io.OutputStream: void write(int)>(0);

        virtualinvoke r2.<java.io.OutputStream: void write(int)>(0);

     label03:
        i26 = 2;

        goto label18;

     label04:
        $r34 = new org.apache.poi.hpsf.CodePageString;

        $r9 = (java.lang.String) r0;

        specialinvoke $r34.<org.apache.poi.hpsf.CodePageString: void <init>(java.lang.String,int)>($r9, i16);

        $i17 = virtualinvoke $r34.<org.apache.poi.hpsf.CodePageString: int write(java.io.OutputStream)>(r2);

        i26 = 0 + $i17;

        goto label18;

     label05:
        $r5 = (java.lang.String) r0;

        $i7 = virtualinvoke $r5.<java.lang.String: int length()>();

        i27 = $i7 + 1;

        $l8 = (long) i27;

        $i9 = staticinvoke <org.apache.poi.hpsf.TypeWriter: int writeUIntToStream(java.io.OutputStream,long)>(r2, $l8);

        i28 = 0 + $i9;

        $r6 = (java.lang.String) r0;

        $r7 = virtualinvoke $r6.<java.lang.String: char[] toCharArray()>();

        i29 = 0;

     label06:
        $i10 = lengthof $r7;

        if i29 >= $i10 goto label07;

        $c11 = $r7[i29];

        $c12 = $c11 & 65280;

        $i35 = (int) $c12;

        i30 = $i35 >> 8;

        $c13 = $r7[i29];

        c31 = $c13 & 255;

        b14 = (byte) i30;

        b15 = (byte) c31;

        $i36 = (int) b15;

        virtualinvoke r2.<java.io.OutputStream: void write(int)>($i36);

        $i37 = (int) b14;

        virtualinvoke r2.<java.io.OutputStream: void write(int)>($i37);

        i28 = i28 + 2;

        i29 = i29 + 1;

        goto label06;

     label07:
        virtualinvoke r2.<java.io.OutputStream: void write(int)>(0);

        virtualinvoke r2.<java.io.OutputStream: void write(int)>(0);

        i26 = i28 + 2;

        goto label18;

     label08:
        $r1 = (byte[]) r0;

        r32 = (byte[]) $r1;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>(r32);

        i26 = lengthof r32;

        goto label18;

     label09:
        $i25 = staticinvoke <org.apache.poi.hpsf.TypeWriter: int writeUIntToStream(java.io.OutputStream,long)>(r2, 0L);

        i26 = 0 + $i25;

        goto label18;

     label10:
        $r28 = (java.lang.Integer) r0;

        $s23 = virtualinvoke $r28.<java.lang.Integer: short shortValue()>();

        $i24 = staticinvoke <org.apache.poi.hpsf.TypeWriter: int writeToStream(java.io.OutputStream,short)>(r2, $s23);

        i26 = 0 + $i24;

        goto label18;

     label11:
        $z1 = r0 instanceof java.lang.Integer;

        if $z1 != 0 goto label12;

        $r36 = new java.lang.ClassCastException;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not cast an object to ");

        $r17 = class "Ljava/lang/Integer;";

        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String toString()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r21 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.String toString()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r25 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<java.lang.ClassCastException: void <init>(java.lang.String)>($r27);

        throw $r36;

     label12:
        $r13 = (java.lang.Integer) r0;

        $i21 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $i22 = staticinvoke <org.apache.poi.hpsf.TypeWriter: int writeToStream(java.io.OutputStream,int)>(r2, $i21);

        i26 = 0 + $i22;

        goto label18;

     label13:
        $r10 = (java.lang.Long) r0;

        $l18 = virtualinvoke $r10.<java.lang.Long: long longValue()>();

        $i19 = staticinvoke <org.apache.poi.hpsf.TypeWriter: int writeToStream(java.io.OutputStream,long)>(r2, $l18);

        i26 = 0 + $i19;

        goto label18;

     label14:
        $r12 = (java.lang.Double) r0;

        $d0 = virtualinvoke $r12.<java.lang.Double: double doubleValue()>();

        $i20 = staticinvoke <org.apache.poi.hpsf.TypeWriter: int writeToStream(java.io.OutputStream,double)>(r2, $d0);

        i26 = 0 + $i20;

        goto label18;

     label15:
        $r3 = (java.util.Date) r0;

        $l2 = staticinvoke <org.apache.poi.hpsf.Util: long dateToFileTime(java.util.Date)>($r3);

        $l3 = $l2 >> 32;

        $l4 = $l3 & 4294967295L;

        i32 = (int) $l4;

        $l5 = $l2 & 4294967295L;

        i33 = (int) $l5;

        $r37 = new org.apache.poi.hpsf.Filetime;

        specialinvoke $r37.<org.apache.poi.hpsf.Filetime: void <init>(int,int)>(i33, i32);

        $i6 = virtualinvoke $r37.<org.apache.poi.hpsf.Filetime: int write(java.io.OutputStream)>(r2);

        i26 = 0 + $i6;

        goto label18;

     label16:
        $z2 = r0 instanceof byte[];

        if $z2 == 0 goto label17;

        $r30 = (byte[]) r0;

        r33 = (byte[]) $r30;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>(r33);

        i26 = lengthof r33;

        $r38 = new org.apache.poi.hpsf.WritingNotSupportedException;

        specialinvoke $r38.<org.apache.poi.hpsf.WritingNotSupportedException: void <init>(long,java.lang.Object)>(l0, r0);

        staticinvoke <org.apache.poi.hpsf.VariantSupport: void writeUnsupportedTypeMessage(org.apache.poi.hpsf.UnsupportedVariantTypeException)>($r38);

        goto label18;

     label17:
        $r39 = new org.apache.poi.hpsf.WritingNotSupportedException;

        specialinvoke $r39.<org.apache.poi.hpsf.WritingNotSupportedException: void <init>(long,java.lang.Object)>(l0, r0);

        throw $r39;

     label18:
        $i34 = i26 & 3;

        if $i34 == 0 goto label19;

        virtualinvoke r2.<java.io.OutputStream: void write(int)>(0);

        i26 = i26 + 1;

        goto label18;

     label19:
        return i26;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;
        int[] $r1;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hpsf/VariantSupport;");

        <org.apache.poi.hpsf.VariantSupport: org.apache.poi.util.POILogger logger> = $r0;

        <org.apache.poi.hpsf.VariantSupport: boolean logUnsupportedTypes> = 0;

        $r1 = newarray (int)[10];

        $r1[0] = 0;

        $r1[1] = 2;

        $r1[2] = 3;

        $r1[3] = 20;

        $r1[4] = 5;

        $r1[5] = 64;

        $r1[6] = 30;

        $r1[7] = 31;

        $r1[8] = 71;

        $r1[9] = 11;

        <org.apache.poi.hpsf.VariantSupport: int[] SUPPORTED_TYPES> = $r1;

        return;
    }
}
