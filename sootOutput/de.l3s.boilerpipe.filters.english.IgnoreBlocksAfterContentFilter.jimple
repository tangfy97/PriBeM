public final class de.l3s.boilerpipe.filters.english.IgnoreBlocksAfterContentFilter extends de.l3s.boilerpipe.filters.english.HeuristicFilterBase implements de.l3s.boilerpipe.BoilerpipeFilter
{
    public static final de.l3s.boilerpipe.filters.english.IgnoreBlocksAfterContentFilter DEFAULT_INSTANCE;
    private final int minNumWords;

    public static de.l3s.boilerpipe.filters.english.IgnoreBlocksAfterContentFilter getDefaultInstance()
    {
        de.l3s.boilerpipe.filters.english.IgnoreBlocksAfterContentFilter $r0;

        $r0 = <de.l3s.boilerpipe.filters.english.IgnoreBlocksAfterContentFilter: de.l3s.boilerpipe.filters.english.IgnoreBlocksAfterContentFilter DEFAULT_INSTANCE>;

        return $r0;
    }

    public void <init>(int)
    {
        int i0;
        de.l3s.boilerpipe.filters.english.IgnoreBlocksAfterContentFilter r0;

        r0 := @this: de.l3s.boilerpipe.filters.english.IgnoreBlocksAfterContentFilter;

        i0 := @parameter0: int;

        specialinvoke r0.<de.l3s.boilerpipe.filters.english.HeuristicFilterBase: void <init>()>();

        r0.<de.l3s.boilerpipe.filters.english.IgnoreBlocksAfterContentFilter: int minNumWords> = i0;

        return;
    }

    public boolean process(de.l3s.boilerpipe.document.TextDocument) throws de.l3s.boilerpipe.BoilerpipeProcessingException
    {
        de.l3s.boilerpipe.document.TextDocument r0;
        java.util.Iterator $r2;
        de.l3s.boilerpipe.filters.english.IgnoreBlocksAfterContentFilter r5;
        java.util.List $r1;
        de.l3s.boilerpipe.document.TextBlock r4;
        int $i0, $i1, i2;
        java.lang.Object $r3;
        boolean $z0, $z1, $z2, z3, z4;

        r5 := @this: de.l3s.boilerpipe.filters.english.IgnoreBlocksAfterContentFilter;

        r0 := @parameter0: de.l3s.boilerpipe.document.TextDocument;

        z3 = 0;

        i2 = 0;

        z4 = 0;

        $r1 = virtualinvoke r0.<de.l3s.boilerpipe.document.TextDocument: java.util.List getTextBlocks()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (de.l3s.boilerpipe.document.TextBlock) $r3;

        $z1 = virtualinvoke r4.<de.l3s.boilerpipe.document.TextBlock: boolean hasLabel(java.lang.String)>("de.l3s.boilerpipe/INDICATES_END_OF_TEXT");

        $z2 = virtualinvoke r4.<de.l3s.boilerpipe.document.TextBlock: boolean isContent()>();

        if $z2 == 0 goto label2;

        $i1 = staticinvoke <de.l3s.boilerpipe.filters.english.IgnoreBlocksAfterContentFilter: int getNumFullTextWords(de.l3s.boilerpipe.document.TextBlock)>(r4);

        i2 = i2 + $i1;

     label2:
        if $z1 == 0 goto label3;

        $i0 = r5.<de.l3s.boilerpipe.filters.english.IgnoreBlocksAfterContentFilter: int minNumWords>;

        if i2 < $i0 goto label3;

        z4 = 1;

     label3:
        if z4 == 0 goto label4;

        z3 = 1;

        virtualinvoke r4.<de.l3s.boilerpipe.document.TextBlock: boolean setIsContent(boolean)>(0);

     label4:
        goto label1;

     label5:
        return z3;
    }

    static void <clinit>()
    {
        de.l3s.boilerpipe.filters.english.IgnoreBlocksAfterContentFilter $r0;

        $r0 = new de.l3s.boilerpipe.filters.english.IgnoreBlocksAfterContentFilter;

        specialinvoke $r0.<de.l3s.boilerpipe.filters.english.IgnoreBlocksAfterContentFilter: void <init>(int)>(60);

        <de.l3s.boilerpipe.filters.english.IgnoreBlocksAfterContentFilter: de.l3s.boilerpipe.filters.english.IgnoreBlocksAfterContentFilter DEFAULT_INSTANCE> = $r0;

        return;
    }
}
