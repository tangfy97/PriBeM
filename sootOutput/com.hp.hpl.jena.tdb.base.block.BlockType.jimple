public final enum class com.hp.hpl.jena.tdb.base.block.BlockType extends java.lang.Enum implements org.apache.jena.atlas.io.Printable, com.hp.hpl.jena.sparql.util.Named
{
    public static final enum com.hp.hpl.jena.tdb.base.block.BlockType FREE;
    public static final enum com.hp.hpl.jena.tdb.base.block.BlockType BTREE_NODE;
    public static final enum com.hp.hpl.jena.tdb.base.block.BlockType BPTREE_BRANCH;
    public static final enum com.hp.hpl.jena.tdb.base.block.BlockType BPTREE_LEAF;
    public static final enum com.hp.hpl.jena.tdb.base.block.BlockType DICTIONARY;
    public static final enum com.hp.hpl.jena.tdb.base.block.BlockType RECORD_BLOCK;
    public static final enum com.hp.hpl.jena.tdb.base.block.BlockType UNDEF;
    private final int id;
    private final java.lang.String name;
    private static final com.hp.hpl.jena.tdb.base.block.BlockType[] $VALUES;

    public static com.hp.hpl.jena.tdb.base.block.BlockType[] values()
    {
        java.lang.Object $r1;
        com.hp.hpl.jena.tdb.base.block.BlockType[] $r0, $r2;

        $r0 = <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (com.hp.hpl.jena.tdb.base.block.BlockType[]) $r1;

        return $r2;
    }

    public static com.hp.hpl.jena.tdb.base.block.BlockType valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        com.hp.hpl.jena.tdb.base.block.BlockType $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/hp/hpl/jena/tdb/base/block/BlockType;", r0);

        $r2 = (com.hp.hpl.jena.tdb.base.block.BlockType) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, int, java.lang.String)
    {
        com.hp.hpl.jena.tdb.base.block.BlockType r0;
        int i0, i1;
        java.lang.String r1, r2;

        r0 := @this: com.hp.hpl.jena.tdb.base.block.BlockType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<com.hp.hpl.jena.tdb.base.block.BlockType: int id> = i1;

        r0.<com.hp.hpl.jena.tdb.base.block.BlockType: java.lang.String name> = r2;

        return;
    }

    public void output(org.apache.jena.atlas.io.IndentedWriter)
    {
        java.lang.String $r2;
        com.hp.hpl.jena.tdb.base.block.BlockType r1;
        org.apache.jena.atlas.io.IndentedWriter r0;

        r1 := @this: com.hp.hpl.jena.tdb.base.block.BlockType;

        r0 := @parameter0: org.apache.jena.atlas.io.IndentedWriter;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.tdb.base.block.BlockType: java.lang.String getName()>();

        virtualinvoke r0.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>($r2);

        return;
    }

    public final int id()
    {
        int $i0;
        com.hp.hpl.jena.tdb.base.block.BlockType r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.block.BlockType;

        $i0 = r0.<com.hp.hpl.jena.tdb.base.block.BlockType: int id>;

        return $i0;
    }

    public final java.lang.String getName()
    {
        java.lang.String $r1;
        com.hp.hpl.jena.tdb.base.block.BlockType r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.block.BlockType;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.block.BlockType: java.lang.String name>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        com.hp.hpl.jena.tdb.base.block.BlockType r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.block.BlockType;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.block.BlockType: java.lang.String getName()>();

        return $r1;
    }

    public static com.hp.hpl.jena.tdb.base.block.BlockType extract(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r9;
        com.hp.hpl.jena.tdb.TDBException $r5;
        com.hp.hpl.jena.tdb.base.block.BlockType $r0, $r1, $r2, $r3, $r4, $r10, $r11, $r12, $r13, $r14;
        java.lang.StringBuilder $r6, $r7, $r8;

        i0 := @parameter0: int;

        $r0 = <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType BTREE_NODE>;

        $i1 = virtualinvoke $r0.<com.hp.hpl.jena.tdb.base.block.BlockType: int id()>();

        if i0 != $i1 goto label1;

        $r14 = <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType BTREE_NODE>;

        return $r14;

     label1:
        $r1 = <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType BPTREE_BRANCH>;

        $i2 = virtualinvoke $r1.<com.hp.hpl.jena.tdb.base.block.BlockType: int id()>();

        if i0 != $i2 goto label2;

        $r13 = <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType BPTREE_BRANCH>;

        return $r13;

     label2:
        $r2 = <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType BPTREE_LEAF>;

        $i3 = virtualinvoke $r2.<com.hp.hpl.jena.tdb.base.block.BlockType: int id()>();

        if i0 != $i3 goto label3;

        $r12 = <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType BPTREE_LEAF>;

        return $r12;

     label3:
        $r3 = <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType RECORD_BLOCK>;

        $i4 = virtualinvoke $r3.<com.hp.hpl.jena.tdb.base.block.BlockType: int id()>();

        if i0 != $i4 goto label4;

        $r11 = <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType RECORD_BLOCK>;

        return $r11;

     label4:
        $r4 = <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType DICTIONARY>;

        $i5 = virtualinvoke $r4.<com.hp.hpl.jena.tdb.base.block.BlockType: int id()>();

        if i0 != $i5 goto label5;

        $r10 = <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType DICTIONARY>;

        return $r10;

     label5:
        $r5 = new com.hp.hpl.jena.tdb.TDBException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No known block type for ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.hp.hpl.jena.tdb.TDBException: void <init>(java.lang.String)>($r9);

        throw $r5;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.tdb.base.block.BlockType[] $r7;
        int $i1, $i3;
        com.hp.hpl.jena.tdb.base.block.BlockType $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;

        $r15 = new com.hp.hpl.jena.tdb.base.block.BlockType;

        $i1 = (int) -1;

        specialinvoke $r15.<com.hp.hpl.jena.tdb.base.block.BlockType: void <init>(java.lang.String,int,int,java.lang.String)>("FREE", 0, $i1, "Free");

        <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType FREE> = $r15;

        $r16 = new com.hp.hpl.jena.tdb.base.block.BlockType;

        specialinvoke $r16.<com.hp.hpl.jena.tdb.base.block.BlockType: void <init>(java.lang.String,int,int,java.lang.String)>("BTREE_NODE", 1, 5, "BTreeNode");

        <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType BTREE_NODE> = $r16;

        $r17 = new com.hp.hpl.jena.tdb.base.block.BlockType;

        specialinvoke $r17.<com.hp.hpl.jena.tdb.base.block.BlockType: void <init>(java.lang.String,int,int,java.lang.String)>("BPTREE_BRANCH", 2, 6, "BPlusTreeBranch");

        <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType BPTREE_BRANCH> = $r17;

        $r18 = new com.hp.hpl.jena.tdb.base.block.BlockType;

        specialinvoke $r18.<com.hp.hpl.jena.tdb.base.block.BlockType: void <init>(java.lang.String,int,int,java.lang.String)>("BPTREE_LEAF", 3, 7, "BPlusTreeLeaf");

        <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType BPTREE_LEAF> = $r18;

        $r19 = new com.hp.hpl.jena.tdb.base.block.BlockType;

        specialinvoke $r19.<com.hp.hpl.jena.tdb.base.block.BlockType: void <init>(java.lang.String,int,int,java.lang.String)>("DICTIONARY", 4, 10, "Dictionary");

        <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType DICTIONARY> = $r19;

        $r20 = new com.hp.hpl.jena.tdb.base.block.BlockType;

        specialinvoke $r20.<com.hp.hpl.jena.tdb.base.block.BlockType: void <init>(java.lang.String,int,int,java.lang.String)>("RECORD_BLOCK", 5, 99, "RecordBlock");

        <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType RECORD_BLOCK> = $r20;

        $r21 = new com.hp.hpl.jena.tdb.base.block.BlockType;

        $i3 = (int) -2;

        specialinvoke $r21.<com.hp.hpl.jena.tdb.base.block.BlockType: void <init>(java.lang.String,int,int,java.lang.String)>("UNDEF", 6, $i3, "UndefinedBlockType");

        <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType UNDEF> = $r21;

        $r7 = newarray (com.hp.hpl.jena.tdb.base.block.BlockType)[7];

        $r8 = <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType FREE>;

        $r7[0] = $r8;

        $r9 = <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType BTREE_NODE>;

        $r7[1] = $r9;

        $r10 = <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType BPTREE_BRANCH>;

        $r7[2] = $r10;

        $r11 = <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType BPTREE_LEAF>;

        $r7[3] = $r11;

        $r12 = <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType DICTIONARY>;

        $r7[4] = $r12;

        $r13 = <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType RECORD_BLOCK>;

        $r7[5] = $r13;

        $r14 = <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType UNDEF>;

        $r7[6] = $r14;

        <com.hp.hpl.jena.tdb.base.block.BlockType: com.hp.hpl.jena.tdb.base.block.BlockType[] $VALUES> = $r7;

        return;
    }
}
