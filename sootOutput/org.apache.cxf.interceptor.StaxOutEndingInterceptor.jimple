public class org.apache.cxf.interceptor.StaxOutEndingInterceptor extends org.apache.cxf.phase.AbstractPhaseInterceptor
{
    private static final java.util.ResourceBundle BUNDLE;
    private java.lang.String outStreamHolder;
    private java.lang.String writerHolder;

    public void <init>(java.lang.String)
    {
        org.apache.cxf.interceptor.StaxOutEndingInterceptor r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.interceptor.StaxOutEndingInterceptor;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.cxf.interceptor.StaxOutEndingInterceptor: void <init>(java.lang.String,java.lang.String)>(r1, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        org.apache.cxf.interceptor.StaxOutEndingInterceptor r0;
        java.util.Set $r1;
        java.lang.Class $r2;
        java.lang.String $r3, r4, r5;

        r0 := @this: org.apache.cxf.interceptor.StaxOutEndingInterceptor;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.cxf.phase.AbstractPhaseInterceptor: void <init>(java.lang.String)>("pre-stream-ending");

        $r1 = virtualinvoke r0.<org.apache.cxf.interceptor.StaxOutEndingInterceptor: java.util.Set getAfter()>();

        $r2 = class "Lorg/apache/cxf/interceptor/AttachmentOutInterceptor$AttachmentOutEndingInterceptor;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r3);

        r0.<org.apache.cxf.interceptor.StaxOutEndingInterceptor: java.lang.String outStreamHolder> = r4;

        r0.<org.apache.cxf.interceptor.StaxOutEndingInterceptor: java.lang.String writerHolder> = r5;

        return;
    }

    public void handleMessage(org.apache.cxf.message.Message) throws org.apache.cxf.interceptor.Fault
    {
        java.lang.Throwable $r15;
        java.lang.Object[] $r13;
        org.apache.cxf.common.i18n.Message $r12;
        org.apache.cxf.interceptor.StaxOutEndingInterceptor r2;
        org.apache.cxf.interceptor.Fault $r11;
        java.util.ResourceBundle $r14;
        javax.xml.stream.XMLStreamException $r10;
        javax.xml.stream.XMLStreamWriter r16;
        java.lang.String $r3, $r5, $r6;
        java.io.OutputStream $r9;
        org.apache.cxf.message.Message r0;
        java.io.Writer r8;
        java.lang.Object $r1, $r4, $r7;

        r2 := @this: org.apache.cxf.interceptor.StaxOutEndingInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

     label01:
        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljavax/xml/stream/XMLStreamWriter;");

        r16 = (javax.xml.stream.XMLStreamWriter) $r1;

        if r16 == null goto label06;

     label02:
        interfaceinvoke r16.<javax.xml.stream.XMLStreamWriter: void writeEndDocument()>();

        interfaceinvoke r16.<javax.xml.stream.XMLStreamWriter: void flush()>();

     label03:
        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void close(javax.xml.stream.XMLStreamWriter)>(r16);

        goto label06;

     label04:
        $r15 := @caughtexception;

     label05:
        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void close(javax.xml.stream.XMLStreamWriter)>(r16);

        throw $r15;

     label06:
        $r3 = r2.<org.apache.cxf.interceptor.StaxOutEndingInterceptor: java.lang.String outStreamHolder>;

        $r4 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r3);

        $r9 = (java.io.OutputStream) $r4;

        if $r9 == null goto label07;

        interfaceinvoke r0.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljava/io/OutputStream;", $r9);

     label07:
        $r5 = r2.<org.apache.cxf.interceptor.StaxOutEndingInterceptor: java.lang.String writerHolder>;

        if $r5 == null goto label08;

        $r6 = r2.<org.apache.cxf.interceptor.StaxOutEndingInterceptor: java.lang.String writerHolder>;

        $r7 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r6);

        r8 = (java.io.Writer) $r7;

        if r8 == null goto label08;

        interfaceinvoke r0.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljava/io/Writer;", r8);

     label08:
        interfaceinvoke r0.<org.apache.cxf.message.Message: void removeContent(java.lang.Class)>(class "Ljavax/xml/stream/XMLStreamWriter;");

     label09:
        goto label11;

     label10:
        $r10 := @caughtexception;

        $r11 = new org.apache.cxf.interceptor.Fault;

        $r12 = new org.apache.cxf.common.i18n.Message;

        $r14 = <org.apache.cxf.interceptor.StaxOutEndingInterceptor: java.util.ResourceBundle BUNDLE>;

        $r13 = newarray (java.lang.Object)[0];

        specialinvoke $r12.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("STAX_WRITE_EXC", $r14, $r13);

        specialinvoke $r11.<org.apache.cxf.interceptor.Fault: void <init>(org.apache.cxf.common.i18n.Message,java.lang.Throwable)>($r12, $r10);

        throw $r11;

     label11:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch javax.xml.stream.XMLStreamException from label01 to label09 with label10;
    }

    static void <clinit>()
    {
        java.util.ResourceBundle $r0;

        $r0 = staticinvoke <org.apache.cxf.common.i18n.BundleUtils: java.util.ResourceBundle getBundle(java.lang.Class)>(class "Lorg/apache/cxf/interceptor/StaxOutEndingInterceptor;");

        <org.apache.cxf.interceptor.StaxOutEndingInterceptor: java.util.ResourceBundle BUNDLE> = $r0;

        return;
    }
}
