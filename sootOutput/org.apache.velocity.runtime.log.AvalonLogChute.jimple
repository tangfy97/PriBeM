public class org.apache.velocity.runtime.log.AvalonLogChute extends java.lang.Object implements org.apache.velocity.runtime.log.LogChute
{
    public static final java.lang.String AVALON_LOGGER;
    public static final java.lang.String AVALON_LOGGER_FORMAT;
    public static final java.lang.String AVALON_LOGGER_LEVEL;
    private org.apache.log.Logger logger;
    private org.apache.velocity.runtime.RuntimeServices rsvc;
    private static final java.util.Map logLevels;

    public void <init>()
    {
        org.apache.velocity.runtime.log.AvalonLogChute r0;

        r0 := @this: org.apache.velocity.runtime.log.AvalonLogChute;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.log.Logger logger> = null;

        r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.velocity.runtime.RuntimeServices rsvc> = null;

        return;
    }

    public void init(org.apache.velocity.runtime.RuntimeServices) throws java.lang.Exception
    {
        org.apache.log.Hierarchy $r5, $r13;
        org.apache.velocity.runtime.RuntimeServices r1, $r2, $r6, $r9, $r12;
        java.lang.String r4, $r7, r11;
        boolean $z0;
        org.apache.log.Logger $r8, $r14;
        org.apache.velocity.runtime.log.AvalonLogChute r0;
        java.lang.Object $r3, $r10;

        r0 := @this: org.apache.velocity.runtime.log.AvalonLogChute;

        r1 := @parameter0: org.apache.velocity.runtime.RuntimeServices;

        r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.velocity.runtime.RuntimeServices rsvc> = r1;

        $r2 = r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r3 = interfaceinvoke $r2.<org.apache.velocity.runtime.RuntimeServices: java.lang.Object getProperty(java.lang.String)>("runtime.log.logsystem.avalon.logger");

        r4 = (java.lang.String) $r3;

        if r4 == null goto label1;

        $r13 = staticinvoke <org.apache.log.Hierarchy: org.apache.log.Hierarchy getDefaultHierarchy()>();

        $r14 = virtualinvoke $r13.<org.apache.log.Hierarchy: org.apache.log.Logger getLoggerFor(java.lang.String)>(r4);

        r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.log.Logger logger> = $r14;

        goto label2;

     label1:
        $r5 = staticinvoke <org.apache.log.Hierarchy: org.apache.log.Hierarchy getDefaultHierarchy()>();

        $r6 = r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        $r8 = virtualinvoke $r5.<org.apache.log.Hierarchy: org.apache.log.Logger getLoggerFor(java.lang.String)>($r7);

        r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.log.Logger logger> = $r8;

        $r9 = r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r10 = interfaceinvoke $r9.<org.apache.velocity.runtime.RuntimeServices: java.lang.Object getProperty(java.lang.String)>("runtime.log");

        r11 = (java.lang.String) $r10;

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>(r11);

        if $z0 == 0 goto label2;

        $r12 = r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.velocity.runtime.RuntimeServices rsvc>;

        specialinvoke r0.<org.apache.velocity.runtime.log.AvalonLogChute: void initTarget(java.lang.String,org.apache.velocity.runtime.RuntimeServices)>(r11, $r12);

     label2:
        return;
    }

    private void initTarget(java.lang.String, org.apache.velocity.runtime.RuntimeServices) throws java.lang.Exception
    {
        java.lang.Object[] $r7;
        org.apache.velocity.runtime.log.VelocityFormatter $r26;
        org.apache.log.output.io.FileTarget $r28;
        org.apache.velocity.runtime.RuntimeServices r0;
        java.lang.StringBuffer $r10, $r11, $r12, $r21, $r22, $r29, $r30;
        java.util.Map $r14;
        java.lang.String r4, $r13, $r15, $r23, r24;
        org.apache.log.Priority r25;
        java.io.IOException $r17;
        java.io.File $r27;
        java.lang.Exception $r31;
        org.apache.log.format.Formatter $r32;
        org.apache.log.LogTarget[] $r33;
        org.apache.velocity.runtime.log.Log $r18;
        org.apache.log.Logger $r6, $r8;
        org.apache.velocity.runtime.log.AvalonLogChute r5;
        java.lang.Object $r16;

        r5 := @this: org.apache.velocity.runtime.log.AvalonLogChute;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: org.apache.velocity.runtime.RuntimeServices;

     label1:
        r24 = null;

        r25 = null;

        if r0 == null goto label2;

        r24 = interfaceinvoke r0.<org.apache.velocity.runtime.RuntimeServices: java.lang.String getString(java.lang.String,java.lang.String)>("runtime.log.logsystem.avalon.format", "%{time} %{message}\\n%{throwable}");

        $r14 = <org.apache.velocity.runtime.log.AvalonLogChute: java.util.Map logLevels>;

        $r15 = interfaceinvoke r0.<org.apache.velocity.runtime.RuntimeServices: java.lang.String getString(java.lang.String,java.lang.String)>("runtime.log.logsystem.avalon.level", "warn");

        $r16 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>($r15);

        r25 = (org.apache.log.Priority) $r16;

     label2:
        $r26 = new org.apache.velocity.runtime.log.VelocityFormatter;

        specialinvoke $r26.<org.apache.velocity.runtime.log.VelocityFormatter: void <init>(java.lang.String)>(r24);

        $r28 = new org.apache.log.output.io.FileTarget;

        $r27 = new java.io.File;

        specialinvoke $r27.<java.io.File: void <init>(java.lang.String)>(r4);

        $r32 = (org.apache.log.format.Formatter) $r26;

        specialinvoke $r28.<org.apache.log.output.io.FileTarget: void <init>(java.io.File,boolean,org.apache.log.format.Formatter)>($r27, 0, $r32);

        $r6 = r5.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.log.Logger logger>;

        virtualinvoke $r6.<org.apache.log.Logger: void setPriority(org.apache.log.Priority)>(r25);

        $r8 = r5.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.log.Logger logger>;

        $r7 = newarray (org.apache.log.LogTarget)[1];

        $r7[0] = $r28;

        $r33 = (org.apache.log.LogTarget[]) $r7;

        virtualinvoke $r8.<org.apache.log.Logger: void setLogTargets(org.apache.log.LogTarget[])>($r33);

        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("AvalonLogChute initialized using file \'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r5.<org.apache.velocity.runtime.log.AvalonLogChute: void log(int,java.lang.String)>(0, $r13);

     label3:
        goto label5;

     label4:
        $r17 := @caughtexception;

        $r18 = interfaceinvoke r0.<org.apache.velocity.runtime.RuntimeServices: org.apache.velocity.runtime.log.Log getLog()>();

        virtualinvoke $r18.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>("Unable to create log file for AvalonLogChute", $r17);

        $r31 = new java.lang.Exception;

        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error configuring AvalonLogChute : ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r17);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r31.<java.lang.Exception: void <init>(java.lang.String)>($r23);

        throw $r31;

     label5:
        return;

        catch java.io.IOException from label1 to label3 with label4;
    }

    public void init(java.lang.String) throws java.lang.Exception
    {
        org.apache.velocity.runtime.RuntimeServices $r2;
        org.apache.log.Hierarchy $r1;
        org.apache.log.Logger $r4;
        org.apache.velocity.runtime.log.AvalonLogChute r0;
        java.lang.String $r3, r5;

        r0 := @this: org.apache.velocity.runtime.log.AvalonLogChute;

        r5 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.log.Hierarchy: org.apache.log.Hierarchy getDefaultHierarchy()>();

        $r2 = r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke $r1.<org.apache.log.Hierarchy: org.apache.log.Logger getLoggerFor(java.lang.String)>($r3);

        r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.log.Logger logger> = $r4;

        specialinvoke r0.<org.apache.velocity.runtime.log.AvalonLogChute: void initTarget(java.lang.String,org.apache.velocity.runtime.RuntimeServices)>(r5, null);

        virtualinvoke r0.<org.apache.velocity.runtime.log.AvalonLogChute: void log(int,java.lang.String)>(0, "You shouldn\'t be using the init(String file) method!");

        return;
    }

    public void log(int, java.lang.String)
    {
        java.lang.StringBuffer $r1, $r3, $r5, $r7, $r9, $r10, $r12, $r14, $r15, $r17, $r19, $r20, $r22, $r24, $r25;
        int i0;
        java.lang.String r4, $r6, $r11, $r16, $r21, $r26;
        org.apache.log.Logger $r2, $r8, $r13, $r18, $r23, $r27;
        org.apache.velocity.runtime.log.AvalonLogChute r0;

        r0 := @this: org.apache.velocity.runtime.log.AvalonLogChute;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.String;

        tableswitch(i0)
        {
            case -1: goto label4;
            case 0: goto label3;
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label5;
            default: goto label6;
        };

     label1:
        $r8 = r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.log.Logger logger>;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  [warn] ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r8.<org.apache.log.Logger: void warn(java.lang.String)>($r11);

        goto label7;

     label2:
        $r13 = r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.log.Logger logger>;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  [info] ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r13.<org.apache.log.Logger: void info(java.lang.String)>($r16);

        goto label7;

     label3:
        $r18 = r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.log.Logger logger>;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" [debug] ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r18.<org.apache.log.Logger: void debug(java.lang.String)>($r21);

        goto label7;

     label4:
        $r23 = r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.log.Logger logger>;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" [trace] ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r23.<org.apache.log.Logger: void debug(java.lang.String)>($r26);

        goto label7;

     label5:
        $r2 = r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.log.Logger logger>;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" [error] ");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<org.apache.log.Logger: void error(java.lang.String)>($r6);

        goto label7;

     label6:
        $r27 = r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.log.Logger logger>;

        virtualinvoke $r27.<org.apache.log.Logger: void info(java.lang.String)>(r4);

     label7:
        return;
    }

    public void log(int, java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r7;
        java.lang.StringBuffer $r1, $r3, $r5, $r8, $r10, $r11, $r13, $r15, $r16, $r18, $r20, $r21, $r23, $r25, $r26;
        int i0;
        java.lang.String r4, $r6, $r12, $r17, $r22, $r27;
        org.apache.log.Logger $r2, $r9, $r14, $r19, $r24, $r28;
        org.apache.velocity.runtime.log.AvalonLogChute r0;

        r0 := @this: org.apache.velocity.runtime.log.AvalonLogChute;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.Throwable;

        tableswitch(i0)
        {
            case -1: goto label4;
            case 0: goto label3;
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label5;
            default: goto label6;
        };

     label1:
        $r9 = r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.log.Logger logger>;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  [warn] ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r9.<org.apache.log.Logger: void warn(java.lang.String,java.lang.Throwable)>($r12, r7);

        goto label7;

     label2:
        $r14 = r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.log.Logger logger>;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  [info] ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r14.<org.apache.log.Logger: void info(java.lang.String,java.lang.Throwable)>($r17, r7);

        goto label7;

     label3:
        $r19 = r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.log.Logger logger>;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" [debug] ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r19.<org.apache.log.Logger: void debug(java.lang.String,java.lang.Throwable)>($r22, r7);

        goto label7;

     label4:
        $r24 = r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.log.Logger logger>;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" [trace] ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r24.<org.apache.log.Logger: void debug(java.lang.String,java.lang.Throwable)>($r27, r7);

        goto label7;

     label5:
        $r2 = r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.log.Logger logger>;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" [error] ");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<org.apache.log.Logger: void error(java.lang.String,java.lang.Throwable)>($r6, r7);

        goto label7;

     label6:
        $r28 = r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.log.Logger logger>;

        virtualinvoke $r28.<org.apache.log.Logger: void info(java.lang.String,java.lang.Throwable)>(r4, r7);

     label7:
        return;
    }

    public boolean isLevelEnabled(int)
    {
        org.apache.log.Logger $r1, $r2, $r3, $r4;
        int i0;
        org.apache.velocity.runtime.log.AvalonLogChute r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.velocity.runtime.log.AvalonLogChute;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -1: goto label1;
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label1:
        $r4 = r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.log.Logger logger>;

        $z3 = virtualinvoke $r4.<org.apache.log.Logger: boolean isDebugEnabled()>();

        return $z3;

     label2:
        $r3 = r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.log.Logger logger>;

        $z2 = virtualinvoke $r3.<org.apache.log.Logger: boolean isInfoEnabled()>();

        return $z2;

     label3:
        $r2 = r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.log.Logger logger>;

        $z1 = virtualinvoke $r2.<org.apache.log.Logger: boolean isWarnEnabled()>();

        return $z1;

     label4:
        $r1 = r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.log.Logger logger>;

        $z0 = virtualinvoke $r1.<org.apache.log.Logger: boolean isErrorEnabled()>();

        return $z0;

     label5:
        return 1;
    }

    protected void finalize() throws java.lang.Throwable
    {
        org.apache.velocity.runtime.log.AvalonLogChute r0;

        r0 := @this: org.apache.velocity.runtime.log.AvalonLogChute;

        virtualinvoke r0.<org.apache.velocity.runtime.log.AvalonLogChute: void shutdown()>();

        return;
    }

    public void shutdown()
    {
        org.apache.velocity.runtime.log.AvalonLogChute r0;
        org.apache.log.Logger $r1;

        r0 := @this: org.apache.velocity.runtime.log.AvalonLogChute;

        $r1 = r0.<org.apache.velocity.runtime.log.AvalonLogChute: org.apache.log.Logger logger>;

        virtualinvoke $r1.<org.apache.log.Logger: void unsetLogTargets()>();

        return;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.util.Map $r2, $r4, $r6, $r8, $r10;
        org.apache.log.Priority $r1, $r3, $r5, $r7, $r9;

        <org.apache.velocity.runtime.log.AvalonLogChute: java.lang.String AVALON_LOGGER_LEVEL> = "runtime.log.logsystem.avalon.level";

        <org.apache.velocity.runtime.log.AvalonLogChute: java.lang.String AVALON_LOGGER_FORMAT> = "runtime.log.logsystem.avalon.format";

        <org.apache.velocity.runtime.log.AvalonLogChute: java.lang.String AVALON_LOGGER> = "runtime.log.logsystem.avalon.logger";

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <org.apache.velocity.runtime.log.AvalonLogChute: java.util.Map logLevels> = $r0;

        $r2 = <org.apache.velocity.runtime.log.AvalonLogChute: java.util.Map logLevels>;

        $r1 = <org.apache.log.Priority: org.apache.log.Priority DEBUG>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("trace", $r1);

        $r4 = <org.apache.velocity.runtime.log.AvalonLogChute: java.util.Map logLevels>;

        $r3 = <org.apache.log.Priority: org.apache.log.Priority DEBUG>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("debug", $r3);

        $r6 = <org.apache.velocity.runtime.log.AvalonLogChute: java.util.Map logLevels>;

        $r5 = <org.apache.log.Priority: org.apache.log.Priority INFO>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("info", $r5);

        $r8 = <org.apache.velocity.runtime.log.AvalonLogChute: java.util.Map logLevels>;

        $r7 = <org.apache.log.Priority: org.apache.log.Priority WARN>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("warn", $r7);

        $r10 = <org.apache.velocity.runtime.log.AvalonLogChute: java.util.Map logLevels>;

        $r9 = <org.apache.log.Priority: org.apache.log.Priority ERROR>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("error", $r9);

        return;
    }
}
