public class org.apache.cxf.transport.servlet.ServletController extends java.lang.Object
{
    public static final java.lang.String AUTH_SERVICE_LIST;
    public static final java.lang.String AUTH_SERVICE_LIST_REALM;
    protected static final java.lang.String DEFAULT_LISTINGS_CLASSIFIER;
    private static final java.util.logging.Logger LOG;
    private static final java.lang.String HTTP_PREFIX;
    protected boolean isHideServiceList;
    protected boolean isAuthServiceListPage;
    protected boolean disableAddressUpdates;
    protected java.lang.String authServiceListPageRealm;
    protected java.lang.String forcedBaseAddress;
    protected java.lang.String serviceListRelativePath;
    protected javax.servlet.ServletConfig servletConfig;
    protected org.apache.cxf.transport.http.DestinationRegistry destinationRegistry;
    protected javax.servlet.http.HttpServlet serviceListGenerator;

    public void <init>(org.apache.cxf.transport.http.DestinationRegistry, javax.servlet.ServletConfig, javax.servlet.http.HttpServlet)
    {
        javax.servlet.ServletConfig r1;
        javax.servlet.http.HttpServlet r3;
        org.apache.cxf.transport.http.DestinationRegistry r2;
        org.apache.cxf.transport.servlet.ServletController r0;

        r0 := @this: org.apache.cxf.transport.servlet.ServletController;

        r2 := @parameter0: org.apache.cxf.transport.http.DestinationRegistry;

        r1 := @parameter1: javax.servlet.ServletConfig;

        r3 := @parameter2: javax.servlet.http.HttpServlet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.transport.servlet.ServletController: java.lang.String serviceListRelativePath> = "/services";

        r0.<org.apache.cxf.transport.servlet.ServletController: javax.servlet.ServletConfig servletConfig> = r1;

        r0.<org.apache.cxf.transport.servlet.ServletController: org.apache.cxf.transport.http.DestinationRegistry destinationRegistry> = r2;

        r0.<org.apache.cxf.transport.servlet.ServletController: javax.servlet.http.HttpServlet serviceListGenerator> = r3;

        specialinvoke r0.<org.apache.cxf.transport.servlet.ServletController: void init()>();

        return;
    }

    public void setServiceListRelativePath(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.transport.servlet.ServletController r0;

        r0 := @this: org.apache.cxf.transport.servlet.ServletController;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.transport.servlet.ServletController: java.lang.String serviceListRelativePath> = r1;

        return;
    }

    protected java.lang.String getBaseURL(javax.servlet.http.HttpServletRequest)
    {
        javax.servlet.http.HttpServletRequest r2;
        java.lang.String $r1, $r3;
        org.apache.cxf.transport.servlet.ServletController r0;

        r0 := @this: org.apache.cxf.transport.servlet.ServletController;

        r2 := @parameter0: javax.servlet.http.HttpServletRequest;

        $r1 = r0.<org.apache.cxf.transport.servlet.ServletController: java.lang.String forcedBaseAddress>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <org.apache.cxf.transport.servlet.BaseUrlHelper: java.lang.String getBaseURL(javax.servlet.http.HttpServletRequest)>(r2);

        goto label2;

     label1:
        $r3 = r0.<org.apache.cxf.transport.servlet.ServletController: java.lang.String forcedBaseAddress>;

     label2:
        return $r3;
    }

    protected void setBaseURLAttribute(javax.servlet.http.HttpServletRequest)
    {
        javax.servlet.http.HttpServletRequest r0;
        java.lang.String $r2, $r3;
        org.apache.cxf.transport.servlet.ServletController r1;

        r1 := @this: org.apache.cxf.transport.servlet.ServletController;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        $r2 = <org.apache.cxf.message.Message: java.lang.String BASE_PATH>;

        $r3 = virtualinvoke r1.<org.apache.cxf.transport.servlet.ServletController: java.lang.String getBaseURL(javax.servlet.http.HttpServletRequest)>(r0);

        interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: void setAttribute(java.lang.String,java.lang.Object)>($r2, $r3);

        return;
    }

    protected void updateDestination(javax.servlet.http.HttpServletRequest, org.apache.cxf.transport.http.AbstractHTTPDestination)
    {
        java.lang.Throwable $r20;
        org.apache.cxf.ws.addressing.EndpointReferenceType $r14, $r15, $r17;
        org.apache.cxf.transport.http.AbstractHTTPDestination r3;
        javax.servlet.http.HttpServletRequest r1;
        org.apache.cxf.ws.addressing.AttributedURIType $r16, $r18;
        java.lang.String $r2, $r5, $r9, $r13, $r19, r21;
        boolean $z0, $z1;
        org.apache.cxf.service.model.EndpointInfo $r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r10, $r11, $r12;
        org.apache.cxf.transport.servlet.ServletController r0;

        r0 := @this: org.apache.cxf.transport.servlet.ServletController;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r3 := @parameter1: org.apache.cxf.transport.http.AbstractHTTPDestination;

        $r2 = virtualinvoke r0.<org.apache.cxf.transport.servlet.ServletController: java.lang.String getBaseURL(javax.servlet.http.HttpServletRequest)>(r1);

        entermonitor r3;

     label1:
        $r4 = virtualinvoke r3.<org.apache.cxf.transport.http.AbstractHTTPDestination: org.apache.cxf.service.model.EndpointInfo getEndpointInfo()>();

        $r5 = virtualinvoke $r4.<org.apache.cxf.service.model.EndpointInfo: java.lang.String getAddress()>();

        r21 = $r5;

        if $r5 != null goto label2;

        $r14 = virtualinvoke r3.<org.apache.cxf.transport.http.AbstractHTTPDestination: org.apache.cxf.ws.addressing.EndpointReferenceType getAddress()>();

        if $r14 == null goto label2;

        $r15 = virtualinvoke r3.<org.apache.cxf.transport.http.AbstractHTTPDestination: org.apache.cxf.ws.addressing.EndpointReferenceType getAddress()>();

        $r16 = virtualinvoke $r15.<org.apache.cxf.ws.addressing.EndpointReferenceType: org.apache.cxf.ws.addressing.AttributedURIType getAddress()>();

        if $r16 == null goto label2;

        $r17 = virtualinvoke r3.<org.apache.cxf.transport.http.AbstractHTTPDestination: org.apache.cxf.ws.addressing.EndpointReferenceType getAddress()>();

        $r18 = virtualinvoke $r17.<org.apache.cxf.ws.addressing.EndpointReferenceType: org.apache.cxf.ws.addressing.AttributedURIType getAddress()>();

        $r19 = virtualinvoke $r18.<org.apache.cxf.ws.addressing.AttributedURIType: java.lang.String getValue()>();

        r21 = $r19;

        if $r19 != null goto label2;

        r21 = "/";

     label2:
        if r21 == null goto label4;

        $z0 = virtualinvoke r21.<java.lang.String: boolean startsWith(java.lang.String)>("http");

        if $z0 != 0 goto label4;

        $z1 = r0.<org.apache.cxf.transport.servlet.ServletController: boolean disableAddressUpdates>;

        if $z1 == 0 goto label3;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: void setAttribute(java.lang.String,java.lang.Object)>("org.apache.cxf.transport.endpoint.address", $r13);

        goto label4;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.cxf.transport.servlet.BaseUrlHelper: void setAddress(org.apache.cxf.transport.AbstractDestination,java.lang.String)>(r3, $r9);

     label4:
        exitmonitor r3;

     label5:
        goto label8;

     label6:
        $r20 := @caughtexception;

        exitmonitor r3;

     label7:
        throw $r20;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private void init()
    {
        javax.servlet.ServletException $r19;
        java.lang.Boolean $r16, $r17, $r18;
        java.lang.String $r3, $r5, $r7, $r9, $r11, $r15, $r21;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        javax.servlet.ServletConfig $r1, $r2, $r4, $r6, $r8, $r10, $r12, $r14;
        javax.servlet.http.HttpServlet $r13;
        java.lang.RuntimeException $r20;
        org.apache.cxf.transport.servlet.ServletController r0;

        r0 := @this: org.apache.cxf.transport.servlet.ServletController;

        $r1 = r0.<org.apache.cxf.transport.servlet.ServletController: javax.servlet.ServletConfig servletConfig>;

        if $r1 != null goto label01;

        return;

     label01:
        $r2 = r0.<org.apache.cxf.transport.servlet.ServletController: javax.servlet.ServletConfig servletConfig>;

        $r3 = interfaceinvoke $r2.<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>("hide-service-list-page");

        $z0 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r3);

        if $z0 != 0 goto label02;

        $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r3);

        $z8 = virtualinvoke $r18.<java.lang.Boolean: boolean booleanValue()>();

        r0.<org.apache.cxf.transport.servlet.ServletController: boolean isHideServiceList> = $z8;

     label02:
        $r4 = r0.<org.apache.cxf.transport.servlet.ServletController: javax.servlet.ServletConfig servletConfig>;

        $r5 = interfaceinvoke $r4.<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>("service-list-page-authenticate");

        $z1 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r5);

        if $z1 != 0 goto label03;

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r5);

        $z7 = virtualinvoke $r17.<java.lang.Boolean: boolean booleanValue()>();

        r0.<org.apache.cxf.transport.servlet.ServletController: boolean isAuthServiceListPage> = $z7;

     label03:
        $r6 = r0.<org.apache.cxf.transport.servlet.ServletController: javax.servlet.ServletConfig servletConfig>;

        $r7 = interfaceinvoke $r6.<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>("service-list-page-authenticate-realm");

        $z2 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r7);

        if $z2 != 0 goto label04;

        r0.<org.apache.cxf.transport.servlet.ServletController: java.lang.String authServiceListPageRealm> = $r7;

     label04:
        $r8 = r0.<org.apache.cxf.transport.servlet.ServletController: javax.servlet.ServletConfig servletConfig>;

        $r9 = interfaceinvoke $r8.<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>("disable-address-updates");

        $z3 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r9);

        if $z3 != 0 goto label05;

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r9);

        $z6 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>();

        r0.<org.apache.cxf.transport.servlet.ServletController: boolean disableAddressUpdates> = $z6;

     label05:
        $r10 = r0.<org.apache.cxf.transport.servlet.ServletController: javax.servlet.ServletConfig servletConfig>;

        $r11 = interfaceinvoke $r10.<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>("base-address");

        $z4 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r11);

        if $z4 != 0 goto label06;

        r0.<org.apache.cxf.transport.servlet.ServletController: java.lang.String forcedBaseAddress> = $r11;

     label06:
        $r13 = r0.<org.apache.cxf.transport.servlet.ServletController: javax.servlet.http.HttpServlet serviceListGenerator>;

        $r12 = r0.<org.apache.cxf.transport.servlet.ServletController: javax.servlet.ServletConfig servletConfig>;

        virtualinvoke $r13.<javax.servlet.http.HttpServlet: void init(javax.servlet.ServletConfig)>($r12);

     label07:
        goto label09;

     label08:
        $r19 := @caughtexception;

        $r20 = new java.lang.RuntimeException;

        $r21 = virtualinvoke $r19.<javax.servlet.ServletException: java.lang.String getMessage()>();

        specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r21, $r19);

        throw $r20;

     label09:
        $r14 = r0.<org.apache.cxf.transport.servlet.ServletController: javax.servlet.ServletConfig servletConfig>;

        $r15 = interfaceinvoke $r14.<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>("service-list-path");

        $z5 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r15);

        if $z5 != 0 goto label10;

        r0.<org.apache.cxf.transport.servlet.ServletController: java.lang.String serviceListRelativePath> = $r15;

     label10:
        return;

        catch javax.servlet.ServletException from label06 to label07 with label08;
    }

    public boolean filter(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException
    {
        javax.servlet.http.HttpServletRequest r1;
        javax.servlet.http.HttpServletResponse r2;
        org.apache.cxf.transport.servlet.ServletController r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.transport.servlet.ServletController;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        $z0 = virtualinvoke r0.<org.apache.cxf.transport.servlet.ServletController: boolean invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)>(r1, r2, 0);

        return $z0;
    }

    public void invoke(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException
    {
        javax.servlet.http.HttpServletResponse r2;
        javax.servlet.http.HttpServletRequest r1;
        org.apache.cxf.transport.servlet.ServletController r0;

        r0 := @this: org.apache.cxf.transport.servlet.ServletController;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        virtualinvoke r0.<org.apache.cxf.transport.servlet.ServletController: boolean invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)>(r1, r2, 1);

        return;
    }

    public boolean invoke(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, boolean) throws javax.servlet.ServletException
    {
        org.apache.cxf.resource.ResourceManager r53;
        javax.servlet.http.HttpServlet $r37;
        org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder r51;
        org.apache.cxf.transport.MessageObserver $r34;
        java.lang.StringBuilder $r13, $r16, $r17, $r19, $r27, $r29, $r31, $r32, $r39, $r41, $r42;
        java.lang.ClassLoader r52;
        java.lang.Throwable $r47;
        javax.servlet.http.HttpServletRequest r0;
        java.lang.StringBuffer $r14, $r30;
        java.lang.String $r1, $r8, $r9, $r10, $r12, $r15, $r18, $r20, $r33, $r35, $r36, $r38, $r40, $r43, $r44, $r48, r49;
        org.apache.cxf.service.model.EndpointInfo $r11;
        java.io.IOException $r45;
        org.apache.cxf.transport.http.DestinationRegistry $r3, $r25;
        javax.servlet.ServletException $r46;
        boolean $z0, $z1, $z2, z3, $z4, $z5, $z6, $z7, $z8;
        org.apache.cxf.transports.http.QueryHandler $r21;
        java.util.logging.Logger $r28;
        org.apache.cxf.Bus $r5;
        org.apache.cxf.transports.http.QueryHandlerRegistry r54;
        org.apache.cxf.transport.http.AbstractHTTPDestination $r4, $r26, r50;
        javax.servlet.http.HttpServletResponse r6;
        java.lang.Object $r7, $r22, $r23, $r24;
        org.apache.cxf.transport.servlet.ServletController r2;

        r2 := @this: org.apache.cxf.transport.servlet.ServletController;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        r6 := @parameter1: javax.servlet.http.HttpServletResponse;

        z3 := @parameter2: boolean;

     label01:
        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>();

        if $r1 != null goto label02;

        $r48 = "";

        goto label03;

     label02:
        $r48 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>();

     label03:
        r49 = $r48;

        $r3 = r2.<org.apache.cxf.transport.servlet.ServletController: org.apache.cxf.transport.http.DestinationRegistry destinationRegistry>;

        $r4 = interfaceinvoke $r3.<org.apache.cxf.transport.http.DestinationRegistry: org.apache.cxf.transport.http.AbstractHTTPDestination getDestinationForPath(java.lang.String,boolean)>($r48, 1);

        r50 = $r4;

        if $r4 != null goto label09;

        $z2 = r2.<org.apache.cxf.transport.servlet.ServletController: boolean isHideServiceList>;

        if $z2 != 0 goto label06;

        $r35 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>();

        $r36 = r2.<org.apache.cxf.transport.servlet.ServletController: java.lang.String serviceListRelativePath>;

        $z4 = virtualinvoke $r35.<java.lang.String: boolean endsWith(java.lang.String)>($r36);

        if $z4 != 0 goto label04;

        $r38 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>();

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = r2.<org.apache.cxf.transport.servlet.ServletController: java.lang.String serviceListRelativePath>;

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        $z5 = virtualinvoke $r38.<java.lang.String: boolean endsWith(java.lang.String)>($r43);

        if $z5 != 0 goto label04;

        $z6 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r48);

        if $z6 != 0 goto label04;

        $r44 = "/";

        $z7 = virtualinvoke $r44.<java.lang.String: boolean equals(java.lang.Object)>($r48);

        if $z7 == 0 goto label06;

     label04:
        $z8 = r2.<org.apache.cxf.transport.servlet.ServletController: boolean isAuthServiceListPage>;

        if $z8 == 0 goto label05;

        specialinvoke r2.<org.apache.cxf.transport.servlet.ServletController: void setAuthServiceListPageAttribute(javax.servlet.http.HttpServletRequest)>(r0);

     label05:
        virtualinvoke r2.<org.apache.cxf.transport.servlet.ServletController: void setBaseURLAttribute(javax.servlet.http.HttpServletRequest)>(r0);

        $r37 = r2.<org.apache.cxf.transport.servlet.ServletController: javax.servlet.http.HttpServlet serviceListGenerator>;

        virtualinvoke $r37.<javax.servlet.http.HttpServlet: void service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r0, r6);

        goto label09;

     label06:
        $r25 = r2.<org.apache.cxf.transport.servlet.ServletController: org.apache.cxf.transport.http.DestinationRegistry destinationRegistry>;

        $r26 = interfaceinvoke $r25.<org.apache.cxf.transport.http.DestinationRegistry: org.apache.cxf.transport.http.AbstractHTTPDestination checkRestfulRequest(java.lang.String)>(r49);

        r50 = $r26;

        if $r26 == null goto label07;

        $r34 = virtualinvoke $r26.<org.apache.cxf.transport.http.AbstractHTTPDestination: org.apache.cxf.transport.MessageObserver getMessageObserver()>();

        if $r34 != null goto label09;

     label07:
        if z3 == 0 goto label08;

        $r28 = <org.apache.cxf.transport.servlet.ServletController: java.util.logging.Logger LOG>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t find the the request for ");

        $r30 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.StringBuffer getRequestURL()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'s Observer ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r28.<java.util.logging.Logger: void warning(java.lang.String)>($r33);

        virtualinvoke r2.<org.apache.cxf.transport.servlet.ServletController: void generateNotFound(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r0, r6);

     label08:
        return 0;

     label09:
        if r50 == null goto label20;

        $r5 = virtualinvoke r50.<org.apache.cxf.transport.http.AbstractHTTPDestination: org.apache.cxf.Bus getBus()>();

        r51 = null;

     label10:
        if $r5 == null goto label12;

        $r22 = interfaceinvoke $r5.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Ljava/lang/ClassLoader;");

        r52 = (java.lang.ClassLoader) $r22;

        if r52 != null goto label11;

        $r23 = interfaceinvoke $r5.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/resource/ResourceManager;");

        r53 = (org.apache.cxf.resource.ResourceManager) $r23;

        if r53 == null goto label11;

        $r24 = interfaceinvoke r53.<org.apache.cxf.resource.ResourceManager: java.lang.Object resolveResource(java.lang.String,java.lang.Class)>("", class "Ljava/lang/ClassLoader;");

        r52 = (java.lang.ClassLoader) $r24;

     label11:
        if r52 == null goto label12;

        r51 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder setThreadContextClassloader(java.lang.ClassLoader)>(r52);

     label12:
        virtualinvoke r2.<org.apache.cxf.transport.servlet.ServletController: void updateDestination(javax.servlet.http.HttpServletRequest,org.apache.cxf.transport.http.AbstractHTTPDestination)>(r0, r50);

        if $r5 == null goto label15;

        $r7 = interfaceinvoke $r5.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/transports/http/QueryHandlerRegistry;");

        r54 = (org.apache.cxf.transports.http.QueryHandlerRegistry) $r7;

        $r8 = "GET";

        $r9 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label15;

        $r10 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getQueryString()>();

        $z1 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r10);

        if $z1 != 0 goto label15;

        if r54 == null goto label15;

        $r11 = virtualinvoke r50.<org.apache.cxf.transport.http.AbstractHTTPDestination: org.apache.cxf.service.model.EndpointInfo getEndpointInfo()>();

        $r12 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.StringBuffer getRequestURL()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r18 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getQueryString()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = virtualinvoke r2.<org.apache.cxf.transport.servlet.ServletController: org.apache.cxf.transports.http.QueryHandler findQueryHandler(org.apache.cxf.transports.http.QueryHandlerRegistry,org.apache.cxf.service.model.EndpointInfo,java.lang.String,java.lang.String)>(r54, $r11, $r12, $r20);

        if $r21 == null goto label15;

        virtualinvoke r2.<org.apache.cxf.transport.servlet.ServletController: void respondUsingQueryHandler(org.apache.cxf.transports.http.QueryHandler,javax.servlet.http.HttpServletResponse,org.apache.cxf.service.model.EndpointInfo,java.lang.String,java.lang.String)>($r21, r6, $r11, $r12, $r20);

     label13:
        if r51 == null goto label14;

        virtualinvoke r51.<org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder: void reset()>();

     label14:
        return 1;

     label15:
        virtualinvoke r2.<org.apache.cxf.transport.servlet.ServletController: void invokeDestination(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.cxf.transport.http.AbstractHTTPDestination)>(r0, r6, r50);

     label16:
        if r51 == null goto label20;

        virtualinvoke r51.<org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder: void reset()>();

        goto label20;

     label17:
        $r47 := @caughtexception;

     label18:
        if r51 == null goto label19;

        virtualinvoke r51.<org.apache.cxf.common.classloader.ClassLoaderUtils$ClassLoaderHolder: void reset()>();

     label19:
        throw $r47;

     label20:
        goto label22;

     label21:
        $r45 := @caughtexception;

        $r46 = new javax.servlet.ServletException;

        specialinvoke $r46.<javax.servlet.ServletException: void <init>(java.lang.Throwable)>($r45);

        throw $r46;

     label22:
        return 1;

        catch java.lang.Throwable from label10 to label13 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
        catch java.io.IOException from label01 to label08 with label21;
        catch java.io.IOException from label09 to label14 with label21;
        catch java.io.IOException from label15 to label20 with label21;
    }

    private void setAuthServiceListPageAttribute(javax.servlet.http.HttpServletRequest)
    {
        javax.servlet.http.HttpServletRequest r0;
        java.lang.Boolean $r2;
        java.lang.String $r3;
        org.apache.cxf.transport.servlet.ServletController r1;
        boolean $z0;

        r1 := @this: org.apache.cxf.transport.servlet.ServletController;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        $z0 = r1.<org.apache.cxf.transport.servlet.ServletController: boolean isAuthServiceListPage>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: void setAttribute(java.lang.String,java.lang.Object)>("auth.service.list", $r2);

        $r3 = r1.<org.apache.cxf.transport.servlet.ServletController: java.lang.String authServiceListPageRealm>;

        interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: void setAttribute(java.lang.String,java.lang.Object)>("auth.service.list.realm", $r3);

        return;
    }

    public void invokeDestination(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.apache.cxf.transport.http.AbstractHTTPDestination) throws javax.servlet.ServletException
    {
        javax.servlet.ServletException $r33;
        java.lang.Thread $r14, $r20, $r29;
        boolean $z0, $z1, $z2;
        javax.servlet.ServletConfig $r4, $r5;
        java.util.logging.Logger $r1, $r10, $r12, $r18, $r25, $r27;
        java.lang.StringBuilder $r11, $r13, $r15, $r17, $r19, $r21, $r26, $r28, $r30;
        java.lang.Throwable $r23;
        java.util.logging.Level $r0, $r9, $r24;
        org.apache.cxf.transport.http.AbstractHTTPDestination r2;
        javax.servlet.http.HttpServletRequest r7;
        java.lang.String $r16, $r22, $r31;
        javax.servlet.http.HttpServletResponse r8;
        java.io.IOException $r32;
        javax.servlet.ServletContext $r6;
        org.apache.cxf.transport.servlet.ServletController r3;

        r3 := @this: org.apache.cxf.transport.servlet.ServletController;

        r7 := @parameter0: javax.servlet.http.HttpServletRequest;

        r8 := @parameter1: javax.servlet.http.HttpServletResponse;

        r2 := @parameter2: org.apache.cxf.transport.http.AbstractHTTPDestination;

        $r1 = <org.apache.cxf.transport.servlet.ServletController: java.util.logging.Logger LOG>;

        $r0 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r0);

        if $z0 == 0 goto label1;

        $r18 = <org.apache.cxf.transport.servlet.ServletController: java.util.logging.Logger LOG>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service http request on thread: ");

        $r20 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.util.logging.Logger: void fine(java.lang.String)>($r22);

     label1:
        $r5 = r3.<org.apache.cxf.transport.servlet.ServletController: javax.servlet.ServletConfig servletConfig>;

        $r4 = r3.<org.apache.cxf.transport.servlet.ServletController: javax.servlet.ServletConfig servletConfig>;

        $r6 = interfaceinvoke $r4.<javax.servlet.ServletConfig: javax.servlet.ServletContext getServletContext()>();

        virtualinvoke r2.<org.apache.cxf.transport.http.AbstractHTTPDestination: void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>($r5, $r6, r7, r8);

     label2:
        $r10 = <org.apache.cxf.transport.servlet.ServletController: java.util.logging.Logger LOG>;

        $r9 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z1 = virtualinvoke $r10.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r9);

        if $z1 == 0 goto label7;

        $r12 = <org.apache.cxf.transport.servlet.ServletController: java.util.logging.Logger LOG>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finished servicing http request on thread: ");

        $r14 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.util.logging.Logger: void fine(java.lang.String)>($r16);

        goto label7;

     label3:
        $r32 := @caughtexception;

        $r33 = new javax.servlet.ServletException;

        specialinvoke $r33.<javax.servlet.ServletException: void <init>(java.lang.Throwable)>($r32);

        throw $r33;

     label4:
        $r23 := @caughtexception;

     label5:
        $r25 = <org.apache.cxf.transport.servlet.ServletController: java.util.logging.Logger LOG>;

        $r24 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z2 = virtualinvoke $r25.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r24);

        if $z2 == 0 goto label6;

        $r27 = <org.apache.cxf.transport.servlet.ServletController: java.util.logging.Logger LOG>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finished servicing http request on thread: ");

        $r29 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.util.logging.Logger: void fine(java.lang.String)>($r31);

     label6:
        throw $r23;

     label7:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    protected org.apache.cxf.transports.http.QueryHandler findQueryHandler(org.apache.cxf.transports.http.QueryHandlerRegistry, org.apache.cxf.service.model.EndpointInfo, java.lang.String, java.lang.String)
    {
        org.apache.cxf.service.model.EndpointInfo r7;
        java.util.Iterator $r2;
        org.apache.cxf.transports.http.QueryHandler r4;
        org.apache.cxf.transports.http.QueryHandlerRegistry r0;
        java.util.List $r1;
        java.lang.Object $r3;
        java.lang.String r5, r6;
        boolean $z0, $z1;
        org.apache.cxf.transport.servlet.ServletController r8;

        r8 := @this: org.apache.cxf.transport.servlet.ServletController;

        r0 := @parameter0: org.apache.cxf.transports.http.QueryHandlerRegistry;

        r7 := @parameter1: org.apache.cxf.service.model.EndpointInfo;

        r6 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = interfaceinvoke r0.<org.apache.cxf.transports.http.QueryHandlerRegistry: java.util.List getHandlers()>();

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.transports.http.QueryHandler) $r3;

        $z1 = interfaceinvoke r4.<org.apache.cxf.transports.http.QueryHandler: boolean isRecognizedQuery(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo)>(r5, r6, r7);

        if $z1 == 0 goto label3;

        return r4;

     label3:
        goto label2;

     label4:
        return null;
    }

    protected void respondUsingQueryHandler(org.apache.cxf.transports.http.QueryHandler, javax.servlet.http.HttpServletResponse, org.apache.cxf.service.model.EndpointInfo, java.lang.String, java.lang.String) throws java.io.IOException, javax.servlet.ServletException
    {
        javax.servlet.ServletException $r17;
        javax.servlet.ServletOutputStream $r5;
        java.lang.String r2, r3, $r4, $r11, $r14, $r16;
        org.apache.cxf.service.model.EndpointInfo r6;
        org.apache.cxf.transports.http.QueryHandler r1;
        javax.servlet.http.HttpServletResponse r0;
        java.util.logging.Logger $r9;
        java.lang.Exception $r7;
        java.lang.StringBuilder $r8, $r12, $r13, $r15;
        java.lang.Class $r10;
        org.apache.cxf.transport.servlet.ServletController r18;

        r18 := @this: org.apache.cxf.transport.servlet.ServletController;

        r1 := @parameter0: org.apache.cxf.transports.http.QueryHandler;

        r0 := @parameter1: javax.servlet.http.HttpServletResponse;

        r6 := @parameter2: org.apache.cxf.service.model.EndpointInfo;

        r3 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        $r4 = interfaceinvoke r1.<org.apache.cxf.transports.http.QueryHandler: java.lang.String getResponseContentType(java.lang.String,java.lang.String)>(r2, r3);

        interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r4);

        $r5 = interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

     label1:
        interfaceinvoke r1.<org.apache.cxf.transports.http.QueryHandler: void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)>(r2, r3, r6, $r5);

        virtualinvoke $r5.<java.io.OutputStream: void flush()>();

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r9 = <org.apache.cxf.transport.servlet.ServletController: java.util.logging.Logger LOG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Exception caught writing response: ");

        $r14 = virtualinvoke $r7.<java.lang.Exception: java.lang.String getMessage()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.util.logging.Logger: void warning(java.lang.String)>($r16);

        $r17 = new javax.servlet.ServletException;

        specialinvoke $r17.<javax.servlet.ServletException: void <init>(java.lang.Throwable)>($r7);

        throw $r17;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void generateNotFound(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException
    {
        java.io.PrintWriter $r1;
        javax.servlet.http.HttpServletRequest r3;
        javax.servlet.http.HttpServletResponse r0;
        org.apache.cxf.transport.servlet.ServletController r2;

        r2 := @this: org.apache.cxf.transport.servlet.ServletController;

        r3 := @parameter0: javax.servlet.http.HttpServletRequest;

        r0 := @parameter1: javax.servlet.http.HttpServletResponse;

        interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(404);

        interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>("text/html");

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: java.io.PrintWriter getWriter()>();

        virtualinvoke $r1.<java.io.PrintWriter: void write(java.lang.String)>("<html><body>No service was found.</body></html>");

        return;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        <org.apache.cxf.transport.servlet.ServletController: java.lang.String HTTP_PREFIX> = "http";

        <org.apache.cxf.transport.servlet.ServletController: java.lang.String DEFAULT_LISTINGS_CLASSIFIER> = "/services";

        <org.apache.cxf.transport.servlet.ServletController: java.lang.String AUTH_SERVICE_LIST_REALM> = "auth.service.list.realm";

        <org.apache.cxf.transport.servlet.ServletController: java.lang.String AUTH_SERVICE_LIST> = "auth.service.list";

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/transport/servlet/ServletController;");

        <org.apache.cxf.transport.servlet.ServletController: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
