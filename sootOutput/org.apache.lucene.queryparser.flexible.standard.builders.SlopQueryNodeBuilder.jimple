public class org.apache.lucene.queryparser.flexible.standard.builders.SlopQueryNodeBuilder extends java.lang.Object implements org.apache.lucene.queryparser.flexible.standard.builders.StandardQueryBuilder
{

    public void <init>()
    {
        org.apache.lucene.queryparser.flexible.standard.builders.SlopQueryNodeBuilder r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.builders.SlopQueryNodeBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.lucene.search.Query build(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        org.apache.lucene.search.Query r5;
        org.apache.lucene.queryparser.flexible.standard.builders.SlopQueryNodeBuilder r8;
        org.apache.lucene.search.PhraseQuery $r7;
        org.apache.lucene.queryparser.flexible.core.nodes.SlopQueryNode r1;
        org.apache.lucene.search.MultiPhraseQuery $r6;
        int $i0, $i1;
        java.lang.Object $r4;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r0, $r2;
        java.lang.String $r3;
        boolean $z0;

        r8 := @this: org.apache.lucene.queryparser.flexible.standard.builders.SlopQueryNodeBuilder;

        r0 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        r1 = (org.apache.lucene.queryparser.flexible.core.nodes.SlopQueryNode) r0;

        $r2 = virtualinvoke r1.<org.apache.lucene.queryparser.flexible.core.nodes.SlopQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode getChild()>();

        $r3 = <org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder: java.lang.String QUERY_TREE_BUILDER_TAGID>;

        $r4 = interfaceinvoke $r2.<org.apache.lucene.queryparser.flexible.core.nodes.QueryNode: java.lang.Object getTag(java.lang.String)>($r3);

        r5 = (org.apache.lucene.search.Query) $r4;

        $z0 = r5 instanceof org.apache.lucene.search.PhraseQuery;

        if $z0 == 0 goto label1;

        $r7 = (org.apache.lucene.search.PhraseQuery) r5;

        $i1 = virtualinvoke r1.<org.apache.lucene.queryparser.flexible.core.nodes.SlopQueryNode: int getValue()>();

        virtualinvoke $r7.<org.apache.lucene.search.PhraseQuery: void setSlop(int)>($i1);

        goto label2;

     label1:
        $r6 = (org.apache.lucene.search.MultiPhraseQuery) r5;

        $i0 = virtualinvoke r1.<org.apache.lucene.queryparser.flexible.core.nodes.SlopQueryNode: int getValue()>();

        virtualinvoke $r6.<org.apache.lucene.search.MultiPhraseQuery: void setSlop(int)>($i0);

     label2:
        return r5;
    }

    public volatile java.lang.Object build(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        org.apache.lucene.search.Query $r2;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r1;
        org.apache.lucene.queryparser.flexible.standard.builders.SlopQueryNodeBuilder r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.standard.builders.SlopQueryNodeBuilder;

        r1 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        $r2 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.standard.builders.SlopQueryNodeBuilder: org.apache.lucene.search.Query build(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)>(r1);

        return $r2;
    }
}
