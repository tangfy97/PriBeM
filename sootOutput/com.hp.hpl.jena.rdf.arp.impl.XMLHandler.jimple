public class com.hp.hpl.jena.rdf.arp.impl.XMLHandler extends com.hp.hpl.jena.rdf.arp.impl.LexicalHandlerImpl implements com.hp.hpl.jena.rdf.arp.ARPErrorNumbers, com.hp.hpl.jena.rdf.arp.impl.Names
{
    boolean encodingProblems;
    protected java.util.Map idsUsed;
    protected int idsUsedCount;
    com.hp.hpl.jena.rdf.arp.states.FrameI frame;
    org.xml.sax.Locator locator;
    private static final boolean DEBUG;
    private boolean allowRelativeReferences;
    private com.hp.hpl.jena.rdf.arp.ARPOptions options;
    private com.hp.hpl.jena.rdf.arp.ARPHandlers handlers;
    private java.util.Map nodeIdUserData;
    private org.apache.jena.iri.IRIFactory factory;
    private org.apache.jena.iri.IRI sameDocRef;
    private com.hp.hpl.jena.rdf.arp.StatementHandler badStatementHandler;
    public static final com.hp.hpl.jena.rdf.arp.StatementHandler nullStatementHandler;
    public static final com.hp.hpl.jena.rdf.arp.ExtendedHandler nullScopeHandler;

    public void <init>()
    {
        com.hp.hpl.jena.rdf.arp.StatementHandler $r4;
        com.hp.hpl.jena.rdf.arp.ARPHandlers $r3;
        java.util.HashMap $r1;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        com.hp.hpl.jena.rdf.arp.ARPOptions $r2;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.LexicalHandlerImpl: void <init>()>();

        r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: boolean encodingProblems> = 0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: java.util.Map idsUsed> = $r1;

        r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: int idsUsedCount> = 0;

        r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: boolean allowRelativeReferences> = 0;

        $r2 = staticinvoke <com.hp.hpl.jena.rdf.arp.ARPOptions: com.hp.hpl.jena.rdf.arp.ARPOptions createNewOptions()>();

        r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPOptions options> = $r2;

        $r3 = staticinvoke <com.hp.hpl.jena.rdf.arp.ARPHandlers: com.hp.hpl.jena.rdf.arp.ARPHandlers createNewHandlers()>();

        r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPHandlers handlers> = $r3;

        r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: org.apache.jena.iri.IRIFactory factory> = null;

        $r4 = <com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.StatementHandler nullStatementHandler>;

        r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.StatementHandler badStatementHandler> = $r4;

        return;
    }

    public void triple(com.hp.hpl.jena.rdf.arp.impl.ANode, com.hp.hpl.jena.rdf.arp.impl.ANode, com.hp.hpl.jena.rdf.arp.impl.ANode)
    {
        com.hp.hpl.jena.rdf.arp.StatementHandler r9;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r1;
        boolean $z0, z1, $z2, $z3, $z4, $z6, $z7;
        com.hp.hpl.jena.rdf.arp.impl.AResourceInternal r6, $r7, $r8;
        com.hp.hpl.jena.rdf.arp.ARPHandlers $r2;
        com.hp.hpl.jena.rdf.arp.impl.ANode r0, r3, r4;
        com.hp.hpl.jena.rdf.arp.ALiteral $r5;

        r1 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r0 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.ANode;

        r3 := @parameter1: com.hp.hpl.jena.rdf.arp.impl.ANode;

        r4 := @parameter2: com.hp.hpl.jena.rdf.arp.impl.ANode;

        $z0 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.ANode: boolean isTainted()>();

        if $z0 != 0 goto label1;

        $z3 = interfaceinvoke r3.<com.hp.hpl.jena.rdf.arp.impl.ANode: boolean isTainted()>();

        if $z3 != 0 goto label1;

        $z4 = interfaceinvoke r4.<com.hp.hpl.jena.rdf.arp.impl.ANode: boolean isTainted()>();

        if $z4 == 0 goto label2;

     label1:
        $z7 = 1;

        $z6 = 1;

        goto label3;

     label2:
        $z7 = 0;

        $z6 = 0;

     label3:
        z1 = $z6;

        if $z7 == 0 goto label4;

        r9 = r1.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.StatementHandler badStatementHandler>;

        goto label5;

     label4:
        $r2 = r1.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPHandlers handlers>;

        r9 = virtualinvoke $r2.<com.hp.hpl.jena.rdf.arp.ARPHandlers: com.hp.hpl.jena.rdf.arp.StatementHandler getStatementHandler()>();

     label5:
        $r7 = (com.hp.hpl.jena.rdf.arp.impl.AResourceInternal) r0;

        $r8 = (com.hp.hpl.jena.rdf.arp.impl.AResourceInternal) r3;

        if z1 != 0 goto label6;

        interfaceinvoke $r7.<com.hp.hpl.jena.rdf.arp.impl.AResourceInternal: void setHasBeenUsed()>();

     label6:
        $z2 = r4 instanceof com.hp.hpl.jena.rdf.arp.AResource;

        if $z2 == 0 goto label8;

        r6 = (com.hp.hpl.jena.rdf.arp.impl.AResourceInternal) r4;

        if z1 != 0 goto label7;

        interfaceinvoke r6.<com.hp.hpl.jena.rdf.arp.impl.AResourceInternal: void setHasBeenUsed()>();

     label7:
        interfaceinvoke r9.<com.hp.hpl.jena.rdf.arp.StatementHandler: void statement(com.hp.hpl.jena.rdf.arp.AResource,com.hp.hpl.jena.rdf.arp.AResource,com.hp.hpl.jena.rdf.arp.AResource)>($r7, $r8, r6);

        goto label9;

     label8:
        $r5 = (com.hp.hpl.jena.rdf.arp.ALiteral) r4;

        interfaceinvoke r9.<com.hp.hpl.jena.rdf.arp.StatementHandler: void statement(com.hp.hpl.jena.rdf.arp.AResource,com.hp.hpl.jena.rdf.arp.AResource,com.hp.hpl.jena.rdf.arp.ALiteral)>($r7, $r8, $r5);

     label9:
        return;
    }

    public void startPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.NamespaceHandler $r3;
        com.hp.hpl.jena.rdf.arp.ARPHandlers $r2;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        java.lang.String r1, r4;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void checkNamespaceURI(java.lang.String)>(r1);

        $r2 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPHandlers handlers>;

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.rdf.arp.ARPHandlers: com.hp.hpl.jena.rdf.arp.NamespaceHandler getNamespaceHandler()>();

        interfaceinvoke $r3.<com.hp.hpl.jena.rdf.arp.NamespaceHandler: void startPrefixMapping(java.lang.String,java.lang.String)>(r4, r1);

        return;
    }

    public void endPrefixMapping(java.lang.String)
    {
        com.hp.hpl.jena.rdf.arp.NamespaceHandler $r2;
        com.hp.hpl.jena.rdf.arp.ARPHandlers $r1;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        java.lang.String r3;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPHandlers handlers>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.arp.ARPHandlers: com.hp.hpl.jena.rdf.arp.NamespaceHandler getNamespaceHandler()>();

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.arp.NamespaceHandler: void endPrefixMapping(java.lang.String)>(r3);

        return;
    }

    public org.xml.sax.Locator getLocator()
    {
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        org.xml.sax.Locator $r1;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: org.xml.sax.Locator locator>;

        return $r1;
    }

    public void setDocumentLocator(org.xml.sax.Locator)
    {
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        org.xml.sax.Locator r1;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r1 := @parameter0: org.xml.sax.Locator;

        r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: org.xml.sax.Locator locator> = r1;

        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.hp.hpl.jena.rdf.arp.states.FrameI $r5, $r6;
        org.xml.sax.Attributes r4;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        java.lang.String r1, r2, r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.xml.sax.Attributes;

        $z0 = staticinvoke <java.lang.Thread: boolean interrupted()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,java.lang.String)>(null, 302, "Interrupt detected.");

     label1:
        $r5 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.states.FrameI frame>;

        $r6 = interfaceinvoke $r5.<com.hp.hpl.jena.rdf.arp.states.FrameI: com.hp.hpl.jena.rdf.arp.states.FrameI startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r1, r2, r3, r4);

        r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.states.FrameI frame> = $r6;

        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        com.hp.hpl.jena.rdf.arp.states.FrameI $r1, $r2, $r3, $r4;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        java.lang.String r5, r6, r7;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r5 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.states.FrameI frame>;

        interfaceinvoke $r1.<com.hp.hpl.jena.rdf.arp.states.FrameI: void endElement()>();

        $r2 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.states.FrameI frame>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.arp.states.FrameI: com.hp.hpl.jena.rdf.arp.states.FrameI getParent()>();

        r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.states.FrameI frame> = $r3;

        $r4 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.states.FrameI frame>;

        interfaceinvoke $r4.<com.hp.hpl.jena.rdf.arp.states.FrameI: void afterChild()>();

        return;
    }

    public static java.lang.String getSimpleName(java.lang.Class)
    {
        int $i0, $i1;
        java.lang.Class r0;
        java.lang.String[] $r2;
        java.lang.String $r1, $r3;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        $i0 = lengthof $r2;

        $i1 = $i0 - 1;

        $r3 = $r2[$i1];

        return $r3;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        com.hp.hpl.jena.rdf.arp.states.FrameI $r2;
        int i0, i1;
        char[] r1;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.states.FrameI frame>;

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.arp.states.FrameI: void characters(char[],int,int)>(r1, i0, i1);

        return;
    }

    public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException
    {
        int i0, i1;
        char[] r1;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void characters(char[],int,int)>(r1, i0, i1);

        return;
    }

    void setUserData(java.lang.String, java.lang.Object)
    {
        java.util.Map $r3;
        java.lang.Object r2;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: java.util.Map nodeIdUserData>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    java.lang.Object getUserData(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: java.util.Map nodeIdUserData>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public void comment(char[], int, int) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.states.FrameI $r2;
        int i0, i1;
        char[] r1;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.states.FrameI frame>;

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.arp.states.FrameI: void comment(char[],int,int)>(r1, i0, i1);

        return;
    }

    public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        com.hp.hpl.jena.rdf.arp.states.FrameI $r3;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        java.lang.String r1, r2;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.states.FrameI frame>;

        interfaceinvoke $r3.<com.hp.hpl.jena.rdf.arp.states.FrameI: void processingInstruction(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void warning(com.hp.hpl.jena.rdf.arp.impl.Taint, int, java.lang.String) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.impl.ARPLocation $r3;
        com.hp.hpl.jena.rdf.arp.impl.Taint r2;
        int i0, $i1;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        java.lang.String r4;
        com.hp.hpl.jena.rdf.arp.ARPOptions $r1;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r2 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.Taint;

        i0 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPOptions options>;

        $i1 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.arp.ARPOptions: int getErrorMode(int)>(i0);

        if $i1 == 0 goto label1;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.impl.ARPLocation location()>();

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,com.hp.hpl.jena.rdf.arp.impl.ARPLocation,java.lang.String)>(r2, i0, $r3, r4);

     label1:
        return;
    }

    void warning(com.hp.hpl.jena.rdf.arp.impl.Taint, int, com.hp.hpl.jena.rdf.arp.impl.ARPLocation, java.lang.String) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler$1 $r3;
        com.hp.hpl.jena.rdf.arp.impl.ARPLocation r4;
        com.hp.hpl.jena.rdf.arp.impl.Taint r2;
        int i0, $i1;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        java.lang.String r5;
        com.hp.hpl.jena.rdf.arp.ARPOptions $r1;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r2 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.Taint;

        i0 := @parameter1: int;

        r4 := @parameter2: com.hp.hpl.jena.rdf.arp.impl.ARPLocation;

        r5 := @parameter3: java.lang.String;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPOptions options>;

        $i1 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.arp.ARPOptions: int getErrorMode(int)>(i0);

        if $i1 == 0 goto label1;

        $r3 = new com.hp.hpl.jena.rdf.arp.impl.XMLHandler$1;

        specialinvoke $r3.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler$1: void <init>(com.hp.hpl.jena.rdf.arp.impl.XMLHandler,int,com.hp.hpl.jena.rdf.arp.impl.ARPLocation,java.lang.String)>(r0, i0, r4, r5);

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,org.xml.sax.SAXParseException)>(r2, i0, $r3);

     label1:
        return;
    }

    void generalError(int, java.lang.Exception) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.ParseException $r3;
        com.hp.hpl.jena.rdf.arp.impl.ARPLocation $r0;
        int i0;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r1;
        org.xml.sax.Locator $r2;
        java.lang.Exception r4;

        r1 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.Exception;

        $r0 = new com.hp.hpl.jena.rdf.arp.impl.ARPLocation;

        $r2 = r1.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: org.xml.sax.Locator locator>;

        specialinvoke $r0.<com.hp.hpl.jena.rdf.arp.impl.ARPLocation: void <init>(org.xml.sax.Locator)>($r2);

        $r3 = new com.hp.hpl.jena.rdf.arp.ParseException;

        specialinvoke $r3.<com.hp.hpl.jena.rdf.arp.ParseException: void <init>(int,com.hp.hpl.jena.rdf.arp.impl.ARPLocation,java.lang.Exception)>(i0, $r0, r4);

        virtualinvoke r1.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,org.xml.sax.SAXParseException)>(null, i0, $r3);

        return;
    }

    void warning(com.hp.hpl.jena.rdf.arp.impl.Taint, int, org.xml.sax.SAXParseException) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.impl.Taint r8;
        com.hp.hpl.jena.rdf.arp.impl.WrappedException $r14;
        com.hp.hpl.jena.rdf.arp.ParseException $r7;
        org.xml.sax.ErrorHandler $r3, $r10, $r12;
        int i0, $i1, $i2;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        com.hp.hpl.jena.rdf.arp.ARPOptions $r1, $r5;
        boolean $z0, $z1;
        com.hp.hpl.jena.rdf.arp.ARPHandlers $r2, $r9, $r11;
        com.hp.hpl.jena.rdf.arp.FatalParsingErrorException $r6;
        org.xml.sax.SAXParseException r4, $r15;
        org.xml.sax.SAXException $r13;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r8 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.Taint;

        i0 := @parameter1: int;

        r4 := @parameter2: org.xml.sax.SAXParseException;

     label01:
        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPOptions options>;

        $i1 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.arp.ARPOptions: int getErrorMode(int)>(i0);

        tableswitch($i1)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label06;
            default: goto label07;
        };

     label02:
        goto label07;

     label03:
        $r11 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPHandlers handlers>;

        $r12 = virtualinvoke $r11.<com.hp.hpl.jena.rdf.arp.ARPHandlers: org.xml.sax.ErrorHandler getErrorHandler()>();

        interfaceinvoke $r12.<org.xml.sax.ErrorHandler: void warning(org.xml.sax.SAXParseException)>(r4);

        goto label07;

     label04:
        if r8 == null goto label05;

        interfaceinvoke r8.<com.hp.hpl.jena.rdf.arp.impl.Taint: void taint()>();

     label05:
        $r9 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPHandlers handlers>;

        $r10 = virtualinvoke $r9.<com.hp.hpl.jena.rdf.arp.ARPHandlers: org.xml.sax.ErrorHandler getErrorHandler()>();

        interfaceinvoke $r10.<org.xml.sax.ErrorHandler: void error(org.xml.sax.SAXParseException)>(r4);

        goto label07;

     label06:
        $r2 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPHandlers handlers>;

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.rdf.arp.ARPHandlers: org.xml.sax.ErrorHandler getErrorHandler()>();

        interfaceinvoke $r3.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>(r4);

     label07:
        goto label10;

     label08:
        $r15 := @caughtexception;

        throw $r15;

     label09:
        $r13 := @caughtexception;

        $r14 = new com.hp.hpl.jena.rdf.arp.impl.WrappedException;

        specialinvoke $r14.<com.hp.hpl.jena.rdf.arp.impl.WrappedException: void <init>(org.xml.sax.SAXException)>($r13);

        throw $r14;

     label10:
        $z0 = r4 instanceof com.hp.hpl.jena.rdf.arp.ParseException;

        if $z0 == 0 goto label11;

        $r7 = (com.hp.hpl.jena.rdf.arp.ParseException) r4;

        $z1 = virtualinvoke $r7.<com.hp.hpl.jena.rdf.arp.ParseException: boolean isPromoted()>();

        if $z1 == 0 goto label11;

        throw r4;

     label11:
        $r5 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPOptions options>;

        $i2 = virtualinvoke $r5.<com.hp.hpl.jena.rdf.arp.ARPOptions: int getErrorMode(int)>(i0);

        if $i2 != 3 goto label12;

        $r6 = new com.hp.hpl.jena.rdf.arp.FatalParsingErrorException;

        specialinvoke $r6.<com.hp.hpl.jena.rdf.arp.FatalParsingErrorException: void <init>()>();

        throw $r6;

     label12:
        return;

        catch org.xml.sax.SAXParseException from label01 to label07 with label08;
        catch org.xml.sax.SAXException from label01 to label07 with label09;
    }

    public void error(org.xml.sax.SAXParseException) throws org.xml.sax.SAXParseException
    {
        org.xml.sax.SAXParseException r1;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r1 := @parameter0: org.xml.sax.SAXParseException;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,org.xml.sax.SAXParseException)>(null, 209, r1);

        return;
    }

    public void warning(org.xml.sax.SAXParseException) throws org.xml.sax.SAXParseException
    {
        org.xml.sax.SAXParseException r1;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r1 := @parameter0: org.xml.sax.SAXParseException;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,org.xml.sax.SAXParseException)>(null, 126, r1);

        return;
    }

    public void fatalError(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException
    {
        org.xml.sax.SAXParseException r1;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        com.hp.hpl.jena.rdf.arp.FatalParsingErrorException $r2;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r1 := @parameter0: org.xml.sax.SAXParseException;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,org.xml.sax.SAXParseException)>(null, 301, r1);

        $r2 = new com.hp.hpl.jena.rdf.arp.FatalParsingErrorException;

        specialinvoke $r2.<com.hp.hpl.jena.rdf.arp.FatalParsingErrorException: void <init>()>();

        throw $r2;
    }

    public void endLocalScope(com.hp.hpl.jena.rdf.arp.impl.ANode)
    {
        java.util.Map $r11, $r12;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        java.lang.String r10;
        boolean $z0, $z1, $z2, $z3;
        com.hp.hpl.jena.rdf.arp.ARPHandlers $r1, $r6, $r8;
        com.hp.hpl.jena.rdf.arp.ExtendedHandler $r2, $r3, $r7, $r9;
        com.hp.hpl.jena.rdf.arp.impl.ARPResource r5;
        com.hp.hpl.jena.rdf.arp.impl.ANode r4;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r4 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.ANode;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPHandlers handlers>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.arp.ARPHandlers: com.hp.hpl.jena.rdf.arp.ExtendedHandler getExtendedHandler()>();

        $r3 = <com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ExtendedHandler nullScopeHandler>;

        if $r2 == $r3 goto label5;

        r5 = (com.hp.hpl.jena.rdf.arp.impl.ARPResource) r4;

        $z0 = virtualinvoke r5.<com.hp.hpl.jena.rdf.arp.impl.ARPResource: boolean getHasBeenUsed()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke r5.<com.hp.hpl.jena.rdf.arp.impl.ARPResource: boolean hasNodeID()>();

        if $z1 == 0 goto label4;

        $r8 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPHandlers handlers>;

        $r9 = virtualinvoke $r8.<com.hp.hpl.jena.rdf.arp.ARPHandlers: com.hp.hpl.jena.rdf.arp.ExtendedHandler getExtendedHandler()>();

        $z2 = interfaceinvoke $r9.<com.hp.hpl.jena.rdf.arp.ExtendedHandler: boolean discardNodesWithNodeID()>();

        if $z2 == 0 goto label2;

        return;

     label2:
        r10 = r5.<com.hp.hpl.jena.rdf.arp.impl.ARPResource: java.lang.String nodeID>;

        $r11 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: java.util.Map nodeIdUserData>;

        $z3 = interfaceinvoke $r11.<java.util.Map: boolean containsKey(java.lang.Object)>(r10);

        if $z3 != 0 goto label3;

        $r12 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: java.util.Map nodeIdUserData>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, null);

     label3:
        goto label5;

     label4:
        $r6 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPHandlers handlers>;

        $r7 = virtualinvoke $r6.<com.hp.hpl.jena.rdf.arp.ARPHandlers: com.hp.hpl.jena.rdf.arp.ExtendedHandler getExtendedHandler()>();

        interfaceinvoke $r7.<com.hp.hpl.jena.rdf.arp.ExtendedHandler: void endBNodeScope(com.hp.hpl.jena.rdf.arp.AResource)>(r5);

     label5:
        return;
    }

    public void endRDF()
    {
        com.hp.hpl.jena.rdf.arp.ExtendedHandler $r2;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        com.hp.hpl.jena.rdf.arp.ARPHandlers $r1;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPHandlers handlers>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.arp.ARPHandlers: com.hp.hpl.jena.rdf.arp.ExtendedHandler getExtendedHandler()>();

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.arp.ExtendedHandler: void endRDF()>();

        return;
    }

    public void startRDF()
    {
        com.hp.hpl.jena.rdf.arp.ExtendedHandler $r2;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        com.hp.hpl.jena.rdf.arp.ARPHandlers $r1;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPHandlers handlers>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.arp.ARPHandlers: com.hp.hpl.jena.rdf.arp.ExtendedHandler getExtendedHandler()>();

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.arp.ExtendedHandler: void startRDF()>();

        return;
    }

    boolean ignoring(int)
    {
        int i0, $i1;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        com.hp.hpl.jena.rdf.arp.ARPOptions $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        i0 := @parameter0: int;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPOptions options>;

        $i1 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.arp.ARPOptions: int getErrorMode(int)>(i0);

        if $i1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isError(int)
    {
        int i0, $i1;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        com.hp.hpl.jena.rdf.arp.ARPOptions $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        i0 := @parameter0: int;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPOptions options>;

        $i1 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.arp.ARPOptions: int getErrorMode(int)>(i0);

        if $i1 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext initialContext(java.lang.String, java.lang.String) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        java.lang.String r1, r3;
        com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext $r2, $r4;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext initialContextWithBase(java.lang.String)>(r1);

        $r4 = virtualinvoke $r2.<com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext withLang(com.hp.hpl.jena.rdf.arp.impl.XMLHandler,java.lang.String)>(r0, r3);

        return $r4;
    }

    private com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext initialContextWithBase(java.lang.String) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.impl.XMLBaselessContext $r2, $r4, $r5;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        java.lang.String r1;
        com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext $r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r1 := @parameter0: java.lang.String;

        r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: boolean allowRelativeReferences> = 0;

        if r1 != null goto label1;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,java.lang.String)>(null, 5, "Base URI not specified for input file; local URI references will be in error.");

        $r5 = new com.hp.hpl.jena.rdf.arp.impl.XMLBaselessContext;

        specialinvoke $r5.<com.hp.hpl.jena.rdf.arp.impl.XMLBaselessContext: void <init>(com.hp.hpl.jena.rdf.arp.impl.XMLHandler,int)>(r0, 211);

        return $r5;

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

        r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: boolean allowRelativeReferences> = 1;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,java.lang.String)>(null, 5, "Base URI specified as \"\"; local URI references will not be resolved.");

        $r4 = new com.hp.hpl.jena.rdf.arp.impl.XMLBaselessContext;

        specialinvoke $r4.<com.hp.hpl.jena.rdf.arp.impl.XMLBaselessContext: void <init>(com.hp.hpl.jena.rdf.arp.impl.XMLHandler,int)>(r0, 130);

        return $r4;

     label2:
        $r2 = new com.hp.hpl.jena.rdf.arp.impl.XMLBaselessContext;

        specialinvoke $r2.<com.hp.hpl.jena.rdf.arp.impl.XMLBaselessContext: void <init>(com.hp.hpl.jena.rdf.arp.impl.XMLHandler,int)>(r0, 215);

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.rdf.arp.impl.XMLBaselessContext: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext withBase(com.hp.hpl.jena.rdf.arp.impl.XMLHandler,java.lang.String)>(r0, r1);

        return $r3;
    }

    com.hp.hpl.jena.rdf.arp.StatementHandler getStatementHandler()
    {
        com.hp.hpl.jena.rdf.arp.StatementHandler $r2;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        com.hp.hpl.jena.rdf.arp.ARPHandlers $r1;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPHandlers handlers>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.arp.ARPHandlers: com.hp.hpl.jena.rdf.arp.StatementHandler getStatementHandler()>();

        return $r2;
    }

    public com.hp.hpl.jena.rdf.arp.ARPHandlers getHandlers()
    {
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        com.hp.hpl.jena.rdf.arp.ARPHandlers $r1;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPHandlers handlers>;

        return $r1;
    }

    public com.hp.hpl.jena.rdf.arp.ARPOptions getOptions()
    {
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        com.hp.hpl.jena.rdf.arp.ARPOptions $r1;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPOptions options>;

        return $r1;
    }

    public void setOptionsWith(com.hp.hpl.jena.rdf.arp.ARPOptions)
    {
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        com.hp.hpl.jena.rdf.arp.ARPOptions r1, $r2;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r1 := @parameter0: com.hp.hpl.jena.rdf.arp.ARPOptions;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.rdf.arp.ARPOptions: com.hp.hpl.jena.rdf.arp.ARPOptions copy()>();

        r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPOptions options> = $r2;

        return;
    }

    public void setHandlersWith(com.hp.hpl.jena.rdf.arp.ARPHandlers)
    {
        com.hp.hpl.jena.rdf.arp.ARPHandlers $r1, r2, $r3, $r5, $r7, $r9;
        com.hp.hpl.jena.rdf.arp.ExtendedHandler $r6;
        org.xml.sax.ErrorHandler $r4;
        com.hp.hpl.jena.rdf.arp.StatementHandler $r10;
        com.hp.hpl.jena.rdf.arp.NamespaceHandler $r8;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r2 := @parameter0: com.hp.hpl.jena.rdf.arp.ARPHandlers;

        $r1 = staticinvoke <com.hp.hpl.jena.rdf.arp.ARPHandlers: com.hp.hpl.jena.rdf.arp.ARPHandlers createNewHandlers()>();

        r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPHandlers handlers> = $r1;

        $r3 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPHandlers handlers>;

        $r4 = virtualinvoke r2.<com.hp.hpl.jena.rdf.arp.ARPHandlers: org.xml.sax.ErrorHandler getErrorHandler()>();

        virtualinvoke $r3.<com.hp.hpl.jena.rdf.arp.ARPHandlers: org.xml.sax.ErrorHandler setErrorHandler(org.xml.sax.ErrorHandler)>($r4);

        $r5 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPHandlers handlers>;

        $r6 = virtualinvoke r2.<com.hp.hpl.jena.rdf.arp.ARPHandlers: com.hp.hpl.jena.rdf.arp.ExtendedHandler getExtendedHandler()>();

        virtualinvoke $r5.<com.hp.hpl.jena.rdf.arp.ARPHandlers: com.hp.hpl.jena.rdf.arp.ExtendedHandler setExtendedHandler(com.hp.hpl.jena.rdf.arp.ExtendedHandler)>($r6);

        $r7 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPHandlers handlers>;

        $r8 = virtualinvoke r2.<com.hp.hpl.jena.rdf.arp.ARPHandlers: com.hp.hpl.jena.rdf.arp.NamespaceHandler getNamespaceHandler()>();

        virtualinvoke $r7.<com.hp.hpl.jena.rdf.arp.ARPHandlers: com.hp.hpl.jena.rdf.arp.NamespaceHandler setNamespaceHandler(com.hp.hpl.jena.rdf.arp.NamespaceHandler)>($r8);

        $r9 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPHandlers handlers>;

        $r10 = virtualinvoke r2.<com.hp.hpl.jena.rdf.arp.ARPHandlers: com.hp.hpl.jena.rdf.arp.StatementHandler getStatementHandler()>();

        virtualinvoke $r9.<com.hp.hpl.jena.rdf.arp.ARPHandlers: com.hp.hpl.jena.rdf.arp.StatementHandler setStatementHandler(com.hp.hpl.jena.rdf.arp.StatementHandler)>($r10);

        return;
    }

    public void initParse(java.lang.String, java.lang.String) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.states.StartStateRDForDescription $r3;
        java.util.HashMap $r1, $r9;
        com.hp.hpl.jena.rdf.arp.states.LookingForRDF $r7;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        java.lang.String r4, r5;
        com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext $r6, $r8;
        boolean $z0, $z1;
        com.hp.hpl.jena.rdf.arp.ARPOptions $r2;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: java.util.Map nodeIdUserData> = $r1;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: boolean ignoring(int)>(105);

        if $z0 == 0 goto label1;

        $r9 = null;

        goto label2;

     label1:
        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

     label2:
        r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: java.util.Map idsUsed> = $r9;

        r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: int idsUsedCount> = 0;

        $r2 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPOptions options>;

        $z1 = virtualinvoke $r2.<com.hp.hpl.jena.rdf.arp.ARPOptions: boolean getEmbedding()>();

        if $z1 == 0 goto label3;

        $r7 = new com.hp.hpl.jena.rdf.arp.states.LookingForRDF;

        $r8 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext initialContext(java.lang.String,java.lang.String)>(r4, r5);

        specialinvoke $r7.<com.hp.hpl.jena.rdf.arp.states.LookingForRDF: void <init>(com.hp.hpl.jena.rdf.arp.impl.XMLHandler,com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext)>(r0, $r8);

        r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.states.FrameI frame> = $r7;

        goto label4;

     label3:
        $r3 = new com.hp.hpl.jena.rdf.arp.states.StartStateRDForDescription;

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext initialContext(java.lang.String,java.lang.String)>(r4, r5);

        specialinvoke $r3.<com.hp.hpl.jena.rdf.arp.states.StartStateRDForDescription: void <init>(com.hp.hpl.jena.rdf.arp.impl.XMLHandler,com.hp.hpl.jena.rdf.arp.impl.AbsXMLContext)>(r0, $r6);

        r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.states.FrameI frame> = $r3;

     label4:
        return;
    }

    void afterParse()
    {
        com.hp.hpl.jena.rdf.arp.states.FrameI $r1, $r2, $r3, $r4;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

     label1:
        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.states.FrameI frame>;

        if $r1 == null goto label2;

        $r2 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.states.FrameI frame>;

        interfaceinvoke $r2.<com.hp.hpl.jena.rdf.arp.states.FrameI: void abort()>();

        $r3 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.states.FrameI frame>;

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.arp.states.FrameI: com.hp.hpl.jena.rdf.arp.states.FrameI getParent()>();

        r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.states.FrameI frame> = $r4;

        goto label1;

     label2:
        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void endBnodeScope()>();

        r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: java.util.Map idsUsed> = null;

        return;
    }

    void endBnodeScope()
    {
        java.util.Iterator $r6;
        com.hp.hpl.jena.rdf.arp.ARPHandlers $r1, $r10;
        com.hp.hpl.jena.rdf.arp.ExtendedHandler $r2, $r3, $r11;
        java.util.Set $r5;
        com.hp.hpl.jena.rdf.arp.impl.ARPResource $r9;
        java.util.Map $r4;
        java.lang.Object $r7;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        java.lang.String r8;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPHandlers handlers>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.rdf.arp.ARPHandlers: com.hp.hpl.jena.rdf.arp.ExtendedHandler getExtendedHandler()>();

        $r3 = <com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ExtendedHandler nullScopeHandler>;

        if $r2 == $r3 goto label2;

        $r4 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: java.util.Map nodeIdUserData>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r7;

        $r9 = new com.hp.hpl.jena.rdf.arp.impl.ARPResource;

        specialinvoke $r9.<com.hp.hpl.jena.rdf.arp.impl.ARPResource: void <init>(com.hp.hpl.jena.rdf.arp.impl.XMLHandler,java.lang.String)>(r0, r8);

        $r10 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPHandlers handlers>;

        $r11 = virtualinvoke $r10.<com.hp.hpl.jena.rdf.arp.ARPHandlers: com.hp.hpl.jena.rdf.arp.ExtendedHandler getExtendedHandler()>();

        interfaceinvoke $r11.<com.hp.hpl.jena.rdf.arp.ExtendedHandler: void endBNodeScope(com.hp.hpl.jena.rdf.arp.AResource)>($r9);

        goto label1;

     label2:
        return;
    }

    public com.hp.hpl.jena.rdf.arp.impl.ARPLocation location()
    {
        com.hp.hpl.jena.rdf.arp.impl.ARPLocation $r0;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r1;
        org.xml.sax.Locator $r2;

        r1 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        $r0 = new com.hp.hpl.jena.rdf.arp.impl.ARPLocation;

        $r2 = r1.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: org.xml.sax.Locator locator>;

        specialinvoke $r0.<com.hp.hpl.jena.rdf.arp.impl.ARPLocation: void <init>(org.xml.sax.Locator)>($r2);

        return $r0;
    }

    org.apache.jena.iri.IRIFactory iriFactory()
    {
        org.apache.jena.iri.IRIFactory $r1, $r3, $r4, $r5, $r6;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        com.hp.hpl.jena.rdf.arp.ARPOptions $r2;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: org.apache.jena.iri.IRIFactory factory>;

        if $r1 != null goto label1;

        $r2 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ARPOptions options>;

        $r3 = virtualinvoke $r2.<com.hp.hpl.jena.rdf.arp.ARPOptions: org.apache.jena.iri.IRIFactory getIRIFactory()>();

        r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: org.apache.jena.iri.IRIFactory factory> = $r3;

        $r4 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: org.apache.jena.iri.IRIFactory factory>;

        if $r4 != null goto label1;

        $r5 = staticinvoke <com.hp.hpl.jena.rdf.arp.ARPOptions: org.apache.jena.iri.IRIFactory getIRIFactoryGlobal()>();

        r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: org.apache.jena.iri.IRIFactory factory> = $r5;

     label1:
        $r6 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: org.apache.jena.iri.IRIFactory factory>;

        return $r6;
    }

    private void checkNamespaceURI(java.lang.String) throws org.xml.sax.SAXParseException
    {
        org.apache.jena.iri.IRIFactory $r4;
        org.apache.jena.iri.IRI $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.hp.hpl.jena.rdf.arp.states.Frame $r3;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r16, $r17, $r18, $r19, $r21, $r22, $r24, $r25, $r27, $r28, $r29, $r30, $r33, $r34, $r36, $r37, $r39;
        com.hp.hpl.jena.rdf.arp.states.FrameI $r1;
        int $i0;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        java.lang.String r2, $r6, $r7, $r8, $r9, $r14, $r15, $r20, $r23, $r26, $r31, $r35, $r38, $r40, $r41;
        java.net.MalformedURLException $r32;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.states.FrameI frame>;

        $r3 = (com.hp.hpl.jena.rdf.arp.states.Frame) $r1;

        virtualinvoke $r3.<com.hp.hpl.jena.rdf.arp.states.Frame: void checkEncoding(com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String)>(null, r2);

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 == 0 goto label6;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: org.apache.jena.iri.IRIFactory iriFactory()>();

        $r5 = virtualinvoke $r4.<org.apache.jena.iri.IRIFactory: org.apache.jena.iri.IRI create(java.lang.String)>(r2);

        $z0 = virtualinvoke $r5.<org.apache.jena.iri.IRI: boolean isAbsolute()>();

        if $z0 != 0 goto label1;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The namespace URI: <");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> is relative. Such use has been deprecated by the W3C, and may result in RDF interoperability failures. Use an absolute namespace URI.");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,java.lang.String)>(null, 109, $r31);

     label1:
        $r6 = virtualinvoke $r5.<org.apache.jena.iri.IRI: java.lang.String toASCIIString()>();

        $r7 = virtualinvoke $r5.<org.apache.jena.iri.IRI: java.lang.String toString()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label2;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-ascii characters in a namespace URI may not be completely portable: <");

        $r23 = virtualinvoke $r5.<org.apache.jena.iri.IRI: java.lang.String toString()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">. Resulting RDF URI references are legal.");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,java.lang.String)>(null, 124, $r26);

     label2:
        goto label4;

     label3:
        $r32 := @caughtexception;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("toAscii failed for namespace URI: <");

        $r35 = virtualinvoke $r5.<org.apache.jena.iri.IRI: java.lang.String toString()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">. ");

        $r38 = virtualinvoke $r32.<java.net.MalformedURLException: java.lang.String getMessage()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,java.lang.String)>(null, 124, $r40);

     label4:
        $r8 = <com.hp.hpl.jena.rdf.arp.impl.XMLHandler: java.lang.String rdfns>;

        $z2 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>($r8);

        if $z2 == 0 goto label5;

        $r15 = <com.hp.hpl.jena.rdf.arp.impl.XMLHandler: java.lang.String rdfns>;

        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z4 != 0 goto label5;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Namespace URI ref <");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> may not be used in RDF/XML.");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,java.lang.String)>(null, 127, $r20);

     label5:
        $r41 = <com.hp.hpl.jena.rdf.arp.impl.XMLHandler: java.lang.String xmlns>;

        $z5 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>($r41);

        if $z5 == 0 goto label6;

        $r9 = <com.hp.hpl.jena.rdf.arp.impl.XMLHandler: java.lang.String xmlns>;

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z3 != 0 goto label6;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Namespace URI ref <");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> may not be used in RDF/XML.");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,java.lang.String)>(null, 128, $r14);

     label6:
        return;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    public boolean allowRelativeURIs()
    {
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        $z0 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: boolean allowRelativeReferences>;

        return $z0;
    }

    public org.apache.jena.iri.IRI sameDocRef()
    {
        org.apache.jena.iri.IRIFactory $r3;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        org.apache.jena.iri.IRI $r1, $r2, $r4;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        $r1 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: org.apache.jena.iri.IRI sameDocRef>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: org.apache.jena.iri.IRIFactory iriFactory()>();

        $r4 = virtualinvoke $r3.<org.apache.jena.iri.IRIFactory: org.apache.jena.iri.IRI create(java.lang.String)>("");

        r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: org.apache.jena.iri.IRI sameDocRef> = $r4;

     label1:
        $r2 = r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: org.apache.jena.iri.IRI sameDocRef>;

        return $r2;
    }

    public void setBadStatementHandler(com.hp.hpl.jena.rdf.arp.StatementHandler)
    {
        com.hp.hpl.jena.rdf.arp.StatementHandler r1;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r1 := @parameter0: com.hp.hpl.jena.rdf.arp.StatementHandler;

        r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.StatementHandler badStatementHandler> = r1;

        return;
    }

    public volatile void startDTD(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.LexicalHandlerImpl: void startDTD(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        return;
    }

    public volatile void startEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.LexicalHandlerImpl: void startEntity(java.lang.String)>(r1);

        return;
    }

    public volatile void endEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.LexicalHandlerImpl: void endEntity(java.lang.String)>(r1);

        return;
    }

    public volatile void startCDATA() throws org.xml.sax.SAXException
    {
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.LexicalHandlerImpl: void startCDATA()>();

        return;
    }

    public volatile void endDTD() throws org.xml.sax.SAXException
    {
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.LexicalHandlerImpl: void endDTD()>();

        return;
    }

    public volatile void endCDATA() throws org.xml.sax.SAXException
    {
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler r0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.XMLHandler;

        specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.LexicalHandlerImpl: void endCDATA()>();

        return;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler$2 $r0;
        com.hp.hpl.jena.rdf.arp.impl.XMLHandler$3 $r1;

        <com.hp.hpl.jena.rdf.arp.impl.XMLHandler: boolean DEBUG> = 0;

        $r0 = new com.hp.hpl.jena.rdf.arp.impl.XMLHandler$2;

        specialinvoke $r0.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler$2: void <init>()>();

        <com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.StatementHandler nullStatementHandler> = $r0;

        $r1 = new com.hp.hpl.jena.rdf.arp.impl.XMLHandler$3;

        specialinvoke $r1.<com.hp.hpl.jena.rdf.arp.impl.XMLHandler$3: void <init>()>();

        <com.hp.hpl.jena.rdf.arp.impl.XMLHandler: com.hp.hpl.jena.rdf.arp.ExtendedHandler nullScopeHandler> = $r1;

        return;
    }
}
