public class com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor extends com.hp.hpl.jena.sparql.util.graph.GraphListenerCounter
{
    com.hp.hpl.jena.sparql.util.Timer timer;
    private long lastTime;
    private boolean displayMemory;
    java.lang.String label;
    java.lang.String summaryLabel;

    public void <init>(int, boolean)
    {
        int i0;
        com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor r0;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.hp.hpl.jena.sparql.util.graph.GraphListenerCounter: void <init>(int)>(i0);

        r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: com.hp.hpl.jena.sparql.util.Timer timer> = null;

        r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: long lastTime> = 0L;

        r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: boolean displayMemory> = 0;

        r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: java.lang.String label> = null;

        r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: java.lang.String summaryLabel> = null;

        r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: boolean displayMemory> = z0;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: void resetTimer()>();

        return;
    }

    public void setLabel(java.lang.String)
    {
        com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor;

        r1 := @parameter0: java.lang.String;

        r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: java.lang.String label> = r1;

        return;
    }

    public void setSummaryLabel(java.lang.String)
    {
        com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor;

        r1 := @parameter0: java.lang.String;

        r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: java.lang.String summaryLabel> = r1;

        return;
    }

    public void startMonitor()
    {
        com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor r0;

        r0 := @this: com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: void resetTimer()>();

        return;
    }

    public void finishMonitor()
    {
        com.hp.hpl.jena.sparql.util.Timer $r1, $r2;
        com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor r0;

        r0 := @this: com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor;

        $r1 = r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: com.hp.hpl.jena.sparql.util.Timer timer>;

        if $r1 == null goto label1;

        $r2 = r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: com.hp.hpl.jena.sparql.util.Timer timer>;

        virtualinvoke $r2.<com.hp.hpl.jena.sparql.util.Timer: long endTimer()>();

     label1:
        return;
    }

    public void resetTimer()
    {
        com.hp.hpl.jena.sparql.util.Timer $r1, $r2, $r3, $r4;
        com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor r0;

        r0 := @this: com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor;

        $r1 = r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: com.hp.hpl.jena.sparql.util.Timer timer>;

        if $r1 == null goto label1;

        $r4 = r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: com.hp.hpl.jena.sparql.util.Timer timer>;

        virtualinvoke $r4.<com.hp.hpl.jena.sparql.util.Timer: long endTimer()>();

     label1:
        $r2 = new com.hp.hpl.jena.sparql.util.Timer;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.util.Timer: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: com.hp.hpl.jena.sparql.util.Timer timer> = $r2;

        $r3 = r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: com.hp.hpl.jena.sparql.util.Timer timer>;

        virtualinvoke $r3.<com.hp.hpl.jena.sparql.util.Timer: void startTimer()>();

        return;
    }

    public long triplesLoaded()
    {
        com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor r0;
        long $l0;

        r0 := @this: com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor;

        $l0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: long getAddCount()>();

        return $l0;
    }

    protected void addTick()
    {
        java.util.Date $r46;
        com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor r0;
        byte $b11, $b13;
        boolean $z0;
        com.hp.hpl.jena.sparql.util.Timer $r1;
        java.lang.Runtime $r27, $r28;
        float $f0, $f1;
        java.lang.StringBuilder $r3, $r5, $r6, $r8, $r9, $r11, $r12, $r21, $r22, $r23, $r24, $r25, $r30, $r31, $r33, $r34, $r36, $r37, $r39, $r41, $r43, $r44, $r45, $r47;
        long $l0, $l1, l2, $l3, $l4, $l6, $l7, l8, $l9, l10, $l12, $l14, $l15;
        int $i5, $i16;
        java.lang.String $r4, $r7, $r10, $r13, $r14, $r15, $r16, $r18, $r20, $r26, $r32, $r35, $r40, r42;

        r0 := @this: com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor;

        $r1 = r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: com.hp.hpl.jena.sparql.util.Timer timer>;

        $l0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.util.Timer: long readTimer()>();

        $l1 = r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: long lastTime>;

        l2 = $l0 - $l1;

        $l3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: long getAddCount()>();

        $l4 = virtualinvoke r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: long getAddTicks()>();

        $i5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: int getAddTickSize()>();

        $l6 = (long) $i5;

        $l7 = $l6 * 1000L;

        l8 = $l7 / l2;

        $l9 = $l3 * 1000L;

        l10 = $l9 / $l0;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Add: ");

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: java.lang.String num(long)>($l3);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" triples  (Batch: ");

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: java.lang.String num(long)>(l8);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / Run: ");

        $r10 = staticinvoke <com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: java.lang.String num(long)>(l10);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        r42 = $r13;

        $r14 = r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: java.lang.String label>;

        if $r14 == null goto label1;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r40 = r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: java.lang.String label>;

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $z0 = r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: boolean displayMemory>;

        if $z0 == 0 goto label2;

        $r27 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $l14 = virtualinvoke $r27.<java.lang.Runtime: long totalMemory()>();

        $r28 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $l15 = virtualinvoke $r28.<java.lang.Runtime: long freeMemory()>();

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   [M:");

        $r32 = staticinvoke <com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: java.lang.String num(long)>($l14);

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/F:");

        $r35 = staticinvoke <com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: java.lang.String num(long)>($l15);

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r42 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r15 = r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: java.lang.String label>;

        staticinvoke <com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: void println(java.lang.String,java.lang.String)>($r15, r42);

        $b11 = $l4 cmp 0L;

        $i16 = (int) $b11;

        if $i16 <= 0 goto label3;

        $l12 = $l4 % 10L;

        $b13 = $l12 cmp 0L;

        if $b13 != 0 goto label3;

        $f0 = (float) $l0;

        $f1 = $f0 / 1000.0F;

        $r16 = staticinvoke <com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: java.lang.String num(float)>($f1);

        $r46 = new java.util.Date;

        specialinvoke $r46.<java.util.Date: void <init>()>();

        $r18 = staticinvoke <com.hp.hpl.jena.sparql.util.StringUtils: java.lang.String str(java.util.Date)>($r46);

        $r20 = r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: java.lang.String label>;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Elapsed: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds [");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: void println(java.lang.String,java.lang.String)>($r20, $r26);

     label3:
        r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: long lastTime> = $l0;

        return;
    }

    private static java.lang.String num(long)
    {
        long l0;
        java.lang.String $r0;

        l0 := @parameter0: long;

        $r0 = staticinvoke <com.hp.hpl.jena.sparql.util.StringUtils: java.lang.String str(long)>(l0);

        return $r0;
    }

    private static java.lang.String num(float)
    {
        float f0;
        java.lang.String $r0;

        f0 := @parameter0: float;

        $r0 = staticinvoke <com.hp.hpl.jena.sparql.util.StringUtils: java.lang.String str(float)>(f0);

        return $r0;
    }

    protected void deleteTick()
    {
        com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor r0;

        r0 := @this: com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor;

        return;
    }

    protected void startRead()
    {
        com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor r0;

        r0 := @this: com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: void startMonitor()>();

        return;
    }

    protected void finishRead()
    {
        com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor r0;

        r0 := @this: com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: void finishMonitor()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: void printAtEnd()>();

        return;
    }

    private void printAtEnd()
    {
        long $l0, $l1, $l2;
        com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor r0;
        java.lang.String $r3, $r4, $r7, $r10, $r13;
        com.hp.hpl.jena.sparql.util.Timer $r1;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        java.lang.StringBuilder $r2, $r5, $r6, $r8, $r9, $r11, $r12;

        r0 := @this: com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor;

        $r1 = r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: com.hp.hpl.jena.sparql.util.Timer timer>;

        $l0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.util.Timer: long getTimeInterval()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: java.lang.String summaryLabel>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $l1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: long getAddCount()>();

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: java.lang.String num(long)>($l1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" triples: loaded in ");

        $f0 = (float) $l0;

        $f1 = $f0 / 1000.0F;

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: java.lang.String num(float)>($f1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds [");

        $l2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: long getAddCount()>();

        $f2 = (float) $l2;

        $f4 = 1000.0F * $f2;

        $f3 = (float) $l0;

        $f5 = $f4 / $f3;

        $r10 = staticinvoke <com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: java.lang.String num(float)>($f5);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" triples/s]");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.hp.hpl.jena.sparql.util.graph.GraphLoadMonitor: void println(java.lang.String,java.lang.String)>($r3, $r13);

        return;
    }

    private static void println(java.lang.String, java.lang.String)
    {
        java.io.PrintStream $r2, $r3;
        java.lang.String r0, r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>(r0);

     label1:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(r1);

        return;
    }
}
