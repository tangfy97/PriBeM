public class org.apache.batik.swing.gvt.AbstractRotateInteractor extends org.apache.batik.swing.gvt.InteractorAdapter
{
    protected boolean finished;
    protected double initialRotation;

    public void <init>()
    {
        org.apache.batik.swing.gvt.AbstractRotateInteractor r0;

        r0 := @this: org.apache.batik.swing.gvt.AbstractRotateInteractor;

        specialinvoke r0.<org.apache.batik.swing.gvt.InteractorAdapter: void <init>()>();

        return;
    }

    public boolean endInteraction()
    {
        org.apache.batik.swing.gvt.AbstractRotateInteractor r0;
        boolean $z0;

        r0 := @this: org.apache.batik.swing.gvt.AbstractRotateInteractor;

        $z0 = r0.<org.apache.batik.swing.gvt.AbstractRotateInteractor: boolean finished>;

        return $z0;
    }

    public void mousePressed(java.awt.event.MouseEvent)
    {
        byte $b8;
        org.apache.batik.swing.gvt.AbstractRotateInteractor r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, d7, $d8, $d9;
        java.awt.event.MouseEvent r1;
        java.awt.Dimension $r4;
        org.apache.batik.swing.gvt.JGVTComponent r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.batik.swing.gvt.AbstractRotateInteractor;

        r1 := @parameter0: java.awt.event.MouseEvent;

        r0.<org.apache.batik.swing.gvt.AbstractRotateInteractor: boolean finished> = 0;

        $r2 = virtualinvoke r1.<java.util.EventObject: java.lang.Object getSource()>();

        r3 = (org.apache.batik.swing.gvt.JGVTComponent) $r2;

        $r4 = virtualinvoke r3.<java.awt.Component: java.awt.Dimension getSize()>();

        $i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();

        $i1 = $r4.<java.awt.Dimension: int width>;

        $i2 = $i1 / 2;

        $i3 = $i0 - $i2;

        d0 = (double) $i3;

        $i4 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();

        $i5 = $r4.<java.awt.Dimension: int height>;

        $i6 = $i5 / 2;

        $i7 = $i4 - $i6;

        d1 = (double) $i7;

        $d5 = neg d1;

        $d3 = d0 * d0;

        $d2 = d1 * d1;

        $d4 = $d3 + $d2;

        $d6 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);

        d7 = $d5 / $d6;

        $b8 = d0 cmpl 0.0;

        $i9 = (int) $b8;

        if $i9 <= 0 goto label1;

        $d9 = staticinvoke <java.lang.Math: double acos(double)>(d7);

        goto label2;

     label1:
        $d8 = staticinvoke <java.lang.Math: double acos(double)>(d7);

        $d9 = neg $d8;

     label2:
        r0.<org.apache.batik.swing.gvt.AbstractRotateInteractor: double initialRotation> = $d9;

        return;
    }

    public void mouseReleased(java.awt.event.MouseEvent)
    {
        java.awt.geom.AffineTransform $r5, $r6;
        java.awt.event.MouseEvent r1;
        java.awt.Dimension $r4;
        org.apache.batik.swing.gvt.JGVTComponent r3;
        org.apache.batik.swing.gvt.AbstractRotateInteractor r0;
        int $i0, $i1;
        java.lang.Object $r2;

        r0 := @this: org.apache.batik.swing.gvt.AbstractRotateInteractor;

        r1 := @parameter0: java.awt.event.MouseEvent;

        r0.<org.apache.batik.swing.gvt.AbstractRotateInteractor: boolean finished> = 1;

        $r2 = virtualinvoke r1.<java.util.EventObject: java.lang.Object getSource()>();

        r3 = (org.apache.batik.swing.gvt.JGVTComponent) $r2;

        $r4 = virtualinvoke r3.<java.awt.Component: java.awt.Dimension getSize()>();

        $i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getX()>();

        $i1 = virtualinvoke r1.<java.awt.event.MouseEvent: int getY()>();

        $r5 = virtualinvoke r0.<org.apache.batik.swing.gvt.AbstractRotateInteractor: java.awt.geom.AffineTransform rotateTransform(java.awt.Dimension,int,int)>($r4, $i0, $i1);

        $r6 = virtualinvoke r3.<org.apache.batik.swing.gvt.AbstractJGVTComponent: java.awt.geom.AffineTransform getRenderingTransform()>();

        virtualinvoke $r5.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>($r6);

        virtualinvoke r3.<org.apache.batik.swing.gvt.AbstractJGVTComponent: void setRenderingTransform(java.awt.geom.AffineTransform)>($r5);

        return;
    }

    public void mouseExited(java.awt.event.MouseEvent)
    {
        org.apache.batik.swing.gvt.JGVTComponent r3;
        org.apache.batik.swing.gvt.AbstractRotateInteractor r0;
        java.lang.Object $r2;
        java.awt.event.MouseEvent r1;

        r0 := @this: org.apache.batik.swing.gvt.AbstractRotateInteractor;

        r1 := @parameter0: java.awt.event.MouseEvent;

        r0.<org.apache.batik.swing.gvt.AbstractRotateInteractor: boolean finished> = 1;

        $r2 = virtualinvoke r1.<java.util.EventObject: java.lang.Object getSource()>();

        r3 = (org.apache.batik.swing.gvt.JGVTComponent) $r2;

        virtualinvoke r3.<org.apache.batik.swing.gvt.AbstractJGVTComponent: void setPaintingTransform(java.awt.geom.AffineTransform)>(null);

        return;
    }

    public void mouseDragged(java.awt.event.MouseEvent)
    {
        java.awt.geom.AffineTransform $r5;
        java.awt.event.MouseEvent r0;
        java.awt.Dimension $r4;
        org.apache.batik.swing.gvt.JGVTComponent r2;
        org.apache.batik.swing.gvt.AbstractRotateInteractor r3;
        int $i0, $i1;
        java.lang.Object $r1;

        r3 := @this: org.apache.batik.swing.gvt.AbstractRotateInteractor;

        r0 := @parameter0: java.awt.event.MouseEvent;

        $r1 = virtualinvoke r0.<java.util.EventObject: java.lang.Object getSource()>();

        r2 = (org.apache.batik.swing.gvt.JGVTComponent) $r1;

        $r4 = virtualinvoke r2.<java.awt.Component: java.awt.Dimension getSize()>();

        $i0 = virtualinvoke r0.<java.awt.event.MouseEvent: int getX()>();

        $i1 = virtualinvoke r0.<java.awt.event.MouseEvent: int getY()>();

        $r5 = virtualinvoke r3.<org.apache.batik.swing.gvt.AbstractRotateInteractor: java.awt.geom.AffineTransform rotateTransform(java.awt.Dimension,int,int)>($r4, $i0, $i1);

        virtualinvoke r2.<org.apache.batik.swing.gvt.AbstractJGVTComponent: void setPaintingTransform(java.awt.geom.AffineTransform)>($r5);

        return;
    }

    protected java.awt.geom.AffineTransform rotateTransform(java.awt.Dimension, int, int)
    {
        byte $b8;
        org.apache.batik.swing.gvt.AbstractRotateInteractor r1;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, d7, $d8, $d9, $d10, $d11, $d12, $d13;
        java.awt.geom.AffineTransform $r2;
        java.awt.Dimension r0;

        r1 := @this: org.apache.batik.swing.gvt.AbstractRotateInteractor;

        r0 := @parameter0: java.awt.Dimension;

        i0 := @parameter1: int;

        i4 := @parameter2: int;

        $i1 = r0.<java.awt.Dimension: int width>;

        $i2 = $i1 / 2;

        $i3 = i0 - $i2;

        d0 = (double) $i3;

        $i5 = r0.<java.awt.Dimension: int height>;

        $i6 = $i5 / 2;

        $i7 = i4 - $i6;

        d1 = (double) $i7;

        $d5 = neg d1;

        $d3 = d0 * d0;

        $d2 = d1 * d1;

        $d4 = $d3 + $d2;

        $d6 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);

        d7 = $d5 / $d6;

        $b8 = d0 cmpl 0.0;

        $i13 = (int) $b8;

        if $i13 <= 0 goto label1;

        $d13 = staticinvoke <java.lang.Math: double acos(double)>(d7);

        goto label2;

     label1:
        $d8 = staticinvoke <java.lang.Math: double acos(double)>(d7);

        $d13 = neg $d8;

     label2:
        $d9 = r1.<org.apache.batik.swing.gvt.AbstractRotateInteractor: double initialRotation>;

        $d12 = $d13 - $d9;

        $i9 = r0.<java.awt.Dimension: int width>;

        $i10 = $i9 / 2;

        $d11 = (double) $i10;

        $i11 = r0.<java.awt.Dimension: int height>;

        $i12 = $i11 / 2;

        $d10 = (double) $i12;

        $r2 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double,double,double)>($d12, $d11, $d10);

        return $r2;
    }
}
