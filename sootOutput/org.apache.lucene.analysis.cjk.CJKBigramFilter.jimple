public final class org.apache.lucene.analysis.cjk.CJKBigramFilter extends org.apache.lucene.analysis.TokenFilter
{
    public static final int HAN;
    public static final int HIRAGANA;
    public static final int KATAKANA;
    public static final int HANGUL;
    public static final java.lang.String DOUBLE_TYPE;
    public static final java.lang.String SINGLE_TYPE;
    private static final java.lang.String HAN_TYPE;
    private static final java.lang.String HIRAGANA_TYPE;
    private static final java.lang.String KATAKANA_TYPE;
    private static final java.lang.String HANGUL_TYPE;
    private static final java.lang.Object NO;
    private final java.lang.Object doHan;
    private final java.lang.Object doHiragana;
    private final java.lang.Object doKatakana;
    private final java.lang.Object doHangul;
    private final boolean outputUnigrams;
    private boolean ngramState;
    private final org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt;
    private final org.apache.lucene.analysis.tokenattributes.TypeAttribute typeAtt;
    private final org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt;
    private final org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute posIncAtt;
    private final org.apache.lucene.analysis.tokenattributes.PositionLengthAttribute posLengthAtt;
    int[] buffer;
    int[] startOffset;
    int[] endOffset;
    int bufferLen;
    int index;
    int lastEndOffset;
    private boolean exhausted;
    private org.apache.lucene.util.AttributeSource$State loneState;

    public void <init>(org.apache.lucene.analysis.TokenStream)
    {
        org.apache.lucene.analysis.cjk.CJKBigramFilter r0;
        org.apache.lucene.analysis.TokenStream r1;

        r0 := @this: org.apache.lucene.analysis.cjk.CJKBigramFilter;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        specialinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: void <init>(org.apache.lucene.analysis.TokenStream,int)>(r1, 15);

        return;
    }

    public void <init>(org.apache.lucene.analysis.TokenStream, int)
    {
        int i0;
        org.apache.lucene.analysis.cjk.CJKBigramFilter r0;
        org.apache.lucene.analysis.TokenStream r1;

        r0 := @this: org.apache.lucene.analysis.cjk.CJKBigramFilter;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: void <init>(org.apache.lucene.analysis.TokenStream,int,boolean)>(r1, i0, 0);

        return;
    }

    public void <init>(org.apache.lucene.analysis.TokenStream, int, boolean)
    {
        org.apache.lucene.analysis.cjk.CJKBigramFilter r0;
        org.apache.lucene.analysis.tokenattributes.PositionLengthAttribute $r11;
        int[] $r12, $r13, $r14;
        int i0, $i1, $i2, $i3, $i4;
        boolean z0;
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r3;
        org.apache.lucene.analysis.TokenStream r1;
        org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute $r9;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r7;
        java.lang.Object $r15, $r16, $r17, $r18;
        org.apache.lucene.util.Attribute $r2, $r4, $r6, $r8, $r10;
        org.apache.lucene.analysis.tokenattributes.TypeAttribute $r5;

        r0 := @this: org.apache.lucene.analysis.cjk.CJKBigramFilter;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.lucene.analysis.TokenFilter: void <init>(org.apache.lucene.analysis.TokenStream)>(r1);

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        $r3 = (org.apache.lucene.analysis.tokenattributes.CharTermAttribute) $r2;

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt> = $r3;

        $r4 = virtualinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/TypeAttribute;");

        $r5 = (org.apache.lucene.analysis.tokenattributes.TypeAttribute) $r4;

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.analysis.tokenattributes.TypeAttribute typeAtt> = $r5;

        $r6 = virtualinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/OffsetAttribute;");

        $r7 = (org.apache.lucene.analysis.tokenattributes.OffsetAttribute) $r6;

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt> = $r7;

        $r8 = virtualinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/PositionIncrementAttribute;");

        $r9 = (org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute) $r8;

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute posIncAtt> = $r9;

        $r10 = virtualinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/PositionLengthAttribute;");

        $r11 = (org.apache.lucene.analysis.tokenattributes.PositionLengthAttribute) $r10;

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.analysis.tokenattributes.PositionLengthAttribute posLengthAtt> = $r11;

        $r12 = newarray (int)[8];

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] buffer> = $r12;

        $r13 = newarray (int)[8];

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] startOffset> = $r13;

        $r14 = newarray (int)[8];

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] endOffset> = $r14;

        $i1 = i0 & 1;

        if $i1 != 0 goto label1;

        $r15 = <org.apache.lucene.analysis.cjk.CJKBigramFilter: java.lang.Object NO>;

        goto label2;

     label1:
        $r15 = <org.apache.lucene.analysis.cjk.CJKBigramFilter: java.lang.String HAN_TYPE>;

     label2:
        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: java.lang.Object doHan> = $r15;

        $i2 = i0 & 2;

        if $i2 != 0 goto label3;

        $r16 = <org.apache.lucene.analysis.cjk.CJKBigramFilter: java.lang.Object NO>;

        goto label4;

     label3:
        $r16 = <org.apache.lucene.analysis.cjk.CJKBigramFilter: java.lang.String HIRAGANA_TYPE>;

     label4:
        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: java.lang.Object doHiragana> = $r16;

        $i3 = i0 & 4;

        if $i3 != 0 goto label5;

        $r17 = <org.apache.lucene.analysis.cjk.CJKBigramFilter: java.lang.Object NO>;

        goto label6;

     label5:
        $r17 = <org.apache.lucene.analysis.cjk.CJKBigramFilter: java.lang.String KATAKANA_TYPE>;

     label6:
        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: java.lang.Object doKatakana> = $r17;

        $i4 = i0 & 8;

        if $i4 != 0 goto label7;

        $r18 = <org.apache.lucene.analysis.cjk.CJKBigramFilter: java.lang.Object NO>;

        goto label8;

     label7:
        $r18 = <org.apache.lucene.analysis.cjk.CJKBigramFilter: java.lang.String HANGUL_TYPE>;

     label8:
        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: java.lang.Object doHangul> = $r18;

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: boolean outputUnigrams> = z0;

        return;
    }

    public boolean incrementToken() throws java.io.IOException
    {
        org.apache.lucene.analysis.cjk.CJKBigramFilter r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.apache.lucene.util.AttributeSource$State $r4, $r8;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r9;
        java.lang.Object $r3, $r5, $r6, $r7;
        org.apache.lucene.analysis.tokenattributes.TypeAttribute $r1;

        r0 := @this: org.apache.lucene.analysis.cjk.CJKBigramFilter;

     label01:
        $z0 = specialinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: boolean hasBufferedBigram()>();

        if $z0 == 0 goto label08;

        $z5 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: boolean outputUnigrams>;

        if $z5 == 0 goto label06;

        $z6 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: boolean ngramState>;

        if $z6 == 0 goto label02;

        specialinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: void flushBigram()>();

        goto label03;

     label02:
        specialinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: void flushUnigram()>();

        $i0 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int index>;

        $i1 = $i0 - 1;

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int index> = $i1;

     label03:
        $z7 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: boolean ngramState>;

        if $z7 != 0 goto label04;

        $z8 = 1;

        goto label05;

     label04:
        $z8 = 0;

     label05:
        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: boolean ngramState> = $z8;

        goto label07;

     label06:
        specialinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: void flushBigram()>();

     label07:
        return 1;

     label08:
        $z1 = specialinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: boolean doNext()>();

        if $z1 == 0 goto label15;

        $r1 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.analysis.tokenattributes.TypeAttribute typeAtt>;

        $r2 = interfaceinvoke $r1.<org.apache.lucene.analysis.tokenattributes.TypeAttribute: java.lang.String type()>();

        $r3 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: java.lang.Object doHan>;

        if $r2 == $r3 goto label09;

        $r5 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: java.lang.Object doHiragana>;

        if $r2 == $r5 goto label09;

        $r6 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: java.lang.Object doKatakana>;

        if $r2 == $r6 goto label09;

        $r7 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: java.lang.Object doHangul>;

        if $r2 != $r7 goto label12;

     label09:
        $r9 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        $i2 = interfaceinvoke $r9.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: int startOffset()>();

        $i3 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int lastEndOffset>;

        if $i2 == $i3 goto label11;

        $z3 = specialinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: boolean hasBufferedUnigram()>();

        if $z3 == 0 goto label10;

        $r4 = virtualinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.util.AttributeSource$State captureState()>();

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.util.AttributeSource$State loneState> = $r4;

        specialinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: void flushUnigram()>();

        return 1;

     label10:
        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int index> = 0;

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int bufferLen> = 0;

     label11:
        specialinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: void refill()>();

        goto label14;

     label12:
        $z4 = specialinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: boolean hasBufferedUnigram()>();

        if $z4 == 0 goto label13;

        $r8 = virtualinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.util.AttributeSource$State captureState()>();

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.util.AttributeSource$State loneState> = $r8;

        specialinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: void flushUnigram()>();

        return 1;

     label13:
        return 1;

     label14:
        goto label01;

     label15:
        $z2 = specialinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: boolean hasBufferedUnigram()>();

        if $z2 == 0 goto label16;

        specialinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: void flushUnigram()>();

        return 1;

     label16:
        return 0;
    }

    private boolean doNext() throws java.io.IOException
    {
        org.apache.lucene.analysis.TokenStream $r2;
        org.apache.lucene.util.AttributeSource$State $r1, $r3;
        org.apache.lucene.analysis.cjk.CJKBigramFilter r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.analysis.cjk.CJKBigramFilter;

        $r1 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.util.AttributeSource$State loneState>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.util.AttributeSource$State loneState>;

        virtualinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: void restoreState(org.apache.lucene.util.AttributeSource$State)>($r3);

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.util.AttributeSource$State loneState> = null;

        return 1;

     label1:
        $z0 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: boolean exhausted>;

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $r2 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.analysis.TokenStream input>;

        $z1 = virtualinvoke $r2.<org.apache.lucene.analysis.TokenStream: boolean incrementToken()>();

        if $z1 == 0 goto label3;

        return 1;

     label3:
        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: boolean exhausted> = 1;

        return 0;
    }

    private void refill()
    {
        int[] $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r4, $r5;
        org.apache.lucene.analysis.cjk.CJKBigramFilter r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, i29, i30, i31;
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r1, $r3;
        char[] $r2;

        r0 := @this: org.apache.lucene.analysis.cjk.CJKBigramFilter;

        $i0 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int bufferLen>;

        if $i0 <= 64 goto label1;

        $i21 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int bufferLen>;

        i28 = $i21 - 1;

        $r19 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] buffer>;

        $r18 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] buffer>;

        $i22 = $r18[i28];

        $r19[0] = $i22;

        $r21 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] startOffset>;

        $r20 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] startOffset>;

        $i23 = $r20[i28];

        $r21[0] = $i23;

        $r23 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] endOffset>;

        $r22 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] endOffset>;

        $i24 = $r22[i28];

        $r23[0] = $i24;

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int bufferLen> = 1;

        $i25 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int index>;

        $i26 = $i25 - i28;

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int index> = $i26;

     label1:
        $r1 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $r2 = interfaceinvoke $r1.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: char[] buffer()>();

        $r3 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $i1 = interfaceinvoke $r3.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: int length()>();

        $r4 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        $i2 = interfaceinvoke $r4.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: int startOffset()>();

        i29 = $i2;

        $r5 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        $i3 = interfaceinvoke $r5.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: int endOffset()>();

        $i4 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int bufferLen>;

        $i27 = $i4 + $i1;

        $r6 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] buffer>;

        $r7 = staticinvoke <org.apache.lucene.util.ArrayUtil: int[] grow(int[],int)>($r6, $i27);

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] buffer> = $r7;

        $r8 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] startOffset>;

        $r9 = staticinvoke <org.apache.lucene.util.ArrayUtil: int[] grow(int[],int)>($r8, $i27);

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] startOffset> = $r9;

        $r10 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] endOffset>;

        $r11 = staticinvoke <org.apache.lucene.util.ArrayUtil: int[] grow(int[],int)>($r10, $i27);

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] endOffset> = $r11;

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int lastEndOffset> = $i3;

        $i5 = $i3 - $i2;

        if $i5 == $i1 goto label4;

        i30 = 0;

     label2:
        if i30 >= $i1 goto label3;

        $r15 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] buffer>;

        $i14 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int bufferLen>;

        $i15 = staticinvoke <java.lang.Character: int codePointAt(char[],int,int)>($r2, i30, $i1);

        $r15[$i14] = $i15;

        $r16 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] startOffset>;

        $i16 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int bufferLen>;

        $r16[$i16] = $i2;

        $r17 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] endOffset>;

        $i17 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int bufferLen>;

        $r17[$i17] = $i3;

        $i18 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int bufferLen>;

        $i19 = $i18 + 1;

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int bufferLen> = $i19;

        $i20 = staticinvoke <java.lang.Character: int charCount(int)>($i15);

        i30 = i30 + $i20;

        goto label2;

     label3:
        goto label6;

     label4:
        i31 = 0;

     label5:
        if i31 >= $i1 goto label6;

        $r12 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] buffer>;

        $i6 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int bufferLen>;

        $i7 = staticinvoke <java.lang.Character: int codePointAt(char[],int,int)>($r2, i31, $i1);

        $r12[$i6] = $i7;

        $i8 = staticinvoke <java.lang.Character: int charCount(int)>($i7);

        $r13 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] startOffset>;

        $i9 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int bufferLen>;

        $r13[$i9] = i29;

        $r14 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] endOffset>;

        $i11 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int bufferLen>;

        $i10 = i29 + $i8;

        $r14[$i11] = $i10;

        i29 = $i10;

        $i12 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int bufferLen>;

        $i13 = $i12 + 1;

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int bufferLen> = $i13;

        i31 = i31 + $i8;

        goto label5;

     label6:
        return;
    }

    private void flushBigram()
    {
        org.apache.lucene.analysis.cjk.CJKBigramFilter r0;
        org.apache.lucene.analysis.tokenattributes.PositionLengthAttribute $r11;
        int[] $r3, $r4, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        boolean $z0;
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r1, $r5;
        org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute $r10;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r8;
        char[] $r2;
        org.apache.lucene.analysis.tokenattributes.TypeAttribute $r9;

        r0 := @this: org.apache.lucene.analysis.cjk.CJKBigramFilter;

        virtualinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: void clearAttributes()>();

        $r1 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $r2 = interfaceinvoke $r1.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: char[] resizeBuffer(int)>(4);

        $r3 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] buffer>;

        $i0 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int index>;

        $i1 = $r3[$i0];

        $i2 = staticinvoke <java.lang.Character: int toChars(int,char[],int)>($i1, $r2, 0);

        $r4 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] buffer>;

        $i3 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int index>;

        $i4 = $i3 + 1;

        $i5 = $r4[$i4];

        $i6 = staticinvoke <java.lang.Character: int toChars(int,char[],int)>($i5, $r2, $i2);

        i7 = $i2 + $i6;

        $r5 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        interfaceinvoke $r5.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: org.apache.lucene.analysis.tokenattributes.CharTermAttribute setLength(int)>(i7);

        $r8 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        $r6 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] startOffset>;

        $i8 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int index>;

        $i12 = $r6[$i8];

        $r7 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] endOffset>;

        $i9 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int index>;

        $i10 = $i9 + 1;

        $i11 = $r7[$i10];

        interfaceinvoke $r8.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: void setOffset(int,int)>($i12, $i11);

        $r9 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.analysis.tokenattributes.TypeAttribute typeAtt>;

        interfaceinvoke $r9.<org.apache.lucene.analysis.tokenattributes.TypeAttribute: void setType(java.lang.String)>("<DOUBLE>");

        $z0 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: boolean outputUnigrams>;

        if $z0 == 0 goto label1;

        $r10 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute posIncAtt>;

        interfaceinvoke $r10.<org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute: void setPositionIncrement(int)>(0);

        $r11 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.analysis.tokenattributes.PositionLengthAttribute posLengthAtt>;

        interfaceinvoke $r11.<org.apache.lucene.analysis.tokenattributes.PositionLengthAttribute: void setPositionLength(int)>(2);

     label1:
        $i13 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int index>;

        $i14 = $i13 + 1;

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int index> = $i14;

        return;
    }

    private void flushUnigram()
    {
        org.apache.lucene.analysis.cjk.CJKBigramFilter r0;
        int[] $r3, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r1, $r4;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r7;
        char[] $r2;
        org.apache.lucene.analysis.tokenattributes.TypeAttribute $r8;

        r0 := @this: org.apache.lucene.analysis.cjk.CJKBigramFilter;

        virtualinvoke r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: void clearAttributes()>();

        $r1 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $r2 = interfaceinvoke $r1.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: char[] resizeBuffer(int)>(2);

        $r3 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] buffer>;

        $i0 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int index>;

        $i1 = $r3[$i0];

        $i2 = staticinvoke <java.lang.Character: int toChars(int,char[],int)>($i1, $r2, 0);

        $r4 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        interfaceinvoke $r4.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: org.apache.lucene.analysis.tokenattributes.CharTermAttribute setLength(int)>($i2);

        $r7 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        $r5 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] startOffset>;

        $i3 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int index>;

        $i6 = $r5[$i3];

        $r6 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int[] endOffset>;

        $i4 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int index>;

        $i5 = $r6[$i4];

        interfaceinvoke $r7.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: void setOffset(int,int)>($i6, $i5);

        $r8 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.analysis.tokenattributes.TypeAttribute typeAtt>;

        interfaceinvoke $r8.<org.apache.lucene.analysis.tokenattributes.TypeAttribute: void setType(java.lang.String)>("<SINGLE>");

        $i7 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int index>;

        $i8 = $i7 + 1;

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int index> = $i8;

        return;
    }

    private boolean hasBufferedBigram()
    {
        int $i0, $i1, $i2;
        org.apache.lucene.analysis.cjk.CJKBigramFilter r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.cjk.CJKBigramFilter;

        $i1 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int bufferLen>;

        $i0 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int index>;

        $i2 = $i1 - $i0;

        if $i2 <= 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private boolean hasBufferedUnigram()
    {
        org.apache.lucene.analysis.cjk.CJKBigramFilter r0;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.analysis.cjk.CJKBigramFilter;

        $z0 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: boolean outputUnigrams>;

        if $z0 == 0 goto label3;

        $i3 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int bufferLen>;

        $i2 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int index>;

        $i4 = $i3 - $i2;

        if $i4 != 1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        $i0 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int bufferLen>;

        if $i0 != 1 goto label4;

        $i1 = r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int index>;

        if $i1 != 0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        return $z2;
    }

    public void reset() throws java.io.IOException
    {
        org.apache.lucene.analysis.cjk.CJKBigramFilter r0;

        r0 := @this: org.apache.lucene.analysis.cjk.CJKBigramFilter;

        specialinvoke r0.<org.apache.lucene.analysis.TokenFilter: void reset()>();

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int bufferLen> = 0;

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int index> = 0;

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: int lastEndOffset> = 0;

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: org.apache.lucene.util.AttributeSource$State loneState> = null;

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: boolean exhausted> = 0;

        r0.<org.apache.lucene.analysis.cjk.CJKBigramFilter: boolean ngramState> = 0;

        return;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0, $r2, $r4, $r6;
        java.lang.Object $r8;
        java.lang.String $r1, $r3, $r5, $r7;

        <org.apache.lucene.analysis.cjk.CJKBigramFilter: java.lang.String SINGLE_TYPE> = "<SINGLE>";

        <org.apache.lucene.analysis.cjk.CJKBigramFilter: java.lang.String DOUBLE_TYPE> = "<DOUBLE>";

        <org.apache.lucene.analysis.cjk.CJKBigramFilter: int HANGUL> = 8;

        <org.apache.lucene.analysis.cjk.CJKBigramFilter: int KATAKANA> = 4;

        <org.apache.lucene.analysis.cjk.CJKBigramFilter: int HIRAGANA> = 2;

        <org.apache.lucene.analysis.cjk.CJKBigramFilter: int HAN> = 1;

        $r0 = <org.apache.lucene.analysis.standard.StandardTokenizer: java.lang.String[] TOKEN_TYPES>;

        $r1 = $r0[10];

        <org.apache.lucene.analysis.cjk.CJKBigramFilter: java.lang.String HAN_TYPE> = $r1;

        $r2 = <org.apache.lucene.analysis.standard.StandardTokenizer: java.lang.String[] TOKEN_TYPES>;

        $r3 = $r2[11];

        <org.apache.lucene.analysis.cjk.CJKBigramFilter: java.lang.String HIRAGANA_TYPE> = $r3;

        $r4 = <org.apache.lucene.analysis.standard.StandardTokenizer: java.lang.String[] TOKEN_TYPES>;

        $r5 = $r4[12];

        <org.apache.lucene.analysis.cjk.CJKBigramFilter: java.lang.String KATAKANA_TYPE> = $r5;

        $r6 = <org.apache.lucene.analysis.standard.StandardTokenizer: java.lang.String[] TOKEN_TYPES>;

        $r7 = $r6[13];

        <org.apache.lucene.analysis.cjk.CJKBigramFilter: java.lang.String HANGUL_TYPE> = $r7;

        $r8 = new java.lang.Object;

        specialinvoke $r8.<java.lang.Object: void <init>()>();

        <org.apache.lucene.analysis.cjk.CJKBigramFilter: java.lang.Object NO> = $r8;

        return;
    }
}
