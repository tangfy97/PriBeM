public class ucar.nc2.ft.point.standard.Table$TableConstruct extends ucar.nc2.ft.point.standard.Table
{
    ucar.ma2.ArrayStructure as;

    void <init>(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.ft.point.standard.TableConfig)
    {
        ucar.nc2.ft.point.standard.TableConfig r2;
        ucar.nc2.ft.point.standard.Table$TableConstruct r0;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.ft.point.standard.Table$TableConstruct;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: ucar.nc2.ft.point.standard.TableConfig;

        specialinvoke r0.<ucar.nc2.ft.point.standard.Table: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.ft.point.standard.TableConfig)>(r1, r2);

        return;
    }

    protected void showTableExtraInfo(java.lang.String, java.util.Formatter)
    {
        java.lang.String r1;
        ucar.nc2.ft.point.standard.Table$TableConstruct r0;
        java.util.Formatter r2;

        r0 := @this: ucar.nc2.ft.point.standard.Table$TableConstruct;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Formatter;

        return;
    }

    public ucar.ma2.StructureDataIterator getStructureDataIterator(ucar.nc2.ft.point.standard.Cursor, int) throws java.io.IOException
    {
        ucar.nc2.ft.point.standard.Table$TableConstruct r0;
        ucar.ma2.ArrayStructure $r1;
        ucar.ma2.StructureDataIterator $r2;
        int i0;
        ucar.nc2.ft.point.standard.Cursor r3;

        r0 := @this: ucar.nc2.ft.point.standard.Table$TableConstruct;

        r3 := @parameter0: ucar.nc2.ft.point.standard.Cursor;

        i0 := @parameter1: int;

        $r1 = r0.<ucar.nc2.ft.point.standard.Table$TableConstruct: ucar.ma2.ArrayStructure as>;

        $r2 = virtualinvoke $r1.<ucar.ma2.ArrayStructure: ucar.ma2.StructureDataIterator getStructureDataIterator()>();

        return $r2;
    }

    public java.lang.String getName()
    {
        ucar.nc2.ft.point.standard.Table$TableConstruct r0;

        r0 := @this: ucar.nc2.ft.point.standard.Table$TableConstruct;

        return "Constructed";
    }
}
