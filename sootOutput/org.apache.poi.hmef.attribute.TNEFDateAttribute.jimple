public final class org.apache.poi.hmef.attribute.TNEFDateAttribute extends org.apache.poi.hmef.attribute.TNEFAttribute
{
    private static org.apache.poi.util.POILogger logger;
    private java.util.Date data;

    protected void <init>(int, int, java.io.InputStream) throws java.io.IOException
    {
        byte[] $r2, $r12;
        java.util.Date $r11, $r13;
        long $l12;
        java.util.Calendar $r10;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.String $r8;
        java.util.TimeZone $r9;
        java.lang.IllegalArgumentException $r3;
        org.apache.poi.hmef.attribute.TNEFDateAttribute r0;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.io.InputStream r1;

        r0 := @this: org.apache.poi.hmef.attribute.TNEFDateAttribute;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.io.InputStream;

        specialinvoke r0.<org.apache.poi.hmef.attribute.TNEFAttribute: void <init>(int,int,java.io.InputStream)>(i0, i1, r1);

        $r2 = virtualinvoke r0.<org.apache.poi.hmef.attribute.TNEFDateAttribute: byte[] getData()>();

        $i2 = lengthof $r2;

        if $i2 != 8 goto label1;

        $r12 = virtualinvoke r0.<org.apache.poi.hmef.attribute.TNEFDateAttribute: byte[] getData()>();

        $l12 = staticinvoke <org.apache.poi.util.LittleEndian: long getLong(byte[],int)>($r12, 0);

        $r13 = staticinvoke <org.apache.poi.hpsf.Util: java.util.Date filetimeToDate(long)>($l12);

        r0.<org.apache.poi.hmef.attribute.TNEFDateAttribute: java.util.Date data> = $r13;

        goto label3;

     label1:
        $i3 = lengthof $r2;

        if $i3 != 14 goto label2;

        $r9 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        $r10 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r9);

        $i5 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>($r2, 0);

        virtualinvoke $r10.<java.util.Calendar: void set(int,int)>(1, $i5);

        $i6 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>($r2, 2);

        $i7 = $i6 - 1;

        virtualinvoke $r10.<java.util.Calendar: void set(int,int)>(2, $i7);

        $i8 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>($r2, 4);

        virtualinvoke $r10.<java.util.Calendar: void set(int,int)>(5, $i8);

        $i9 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>($r2, 6);

        virtualinvoke $r10.<java.util.Calendar: void set(int,int)>(11, $i9);

        $i10 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>($r2, 8);

        virtualinvoke $r10.<java.util.Calendar: void set(int,int)>(12, $i10);

        $i11 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>($r2, 10);

        virtualinvoke $r10.<java.util.Calendar: void set(int,int)>(13, $i11);

        virtualinvoke $r10.<java.util.Calendar: void set(int,int)>(14, 0);

        $r11 = virtualinvoke $r10.<java.util.Calendar: java.util.Date getTime()>();

        r0.<org.apache.poi.hmef.attribute.TNEFDateAttribute: java.util.Date data> = $r11;

        goto label3;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid date, found ");

        $i4 = lengthof $r2;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label3:
        return;
    }

    public java.util.Date getDate()
    {
        org.apache.poi.hmef.attribute.TNEFDateAttribute r0;
        java.util.Date $r1;

        r0 := @this: org.apache.poi.hmef.attribute.TNEFDateAttribute;

        $r1 = r0.<org.apache.poi.hmef.attribute.TNEFDateAttribute: java.util.Date data>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.util.Date $r9;
        org.apache.poi.hmef.attribute.TNEFDateAttribute r2;
        org.apache.poi.hmef.attribute.TNEFProperty $r3;
        int $i0;
        java.lang.StringBuilder $r0, $r1, $r5, $r6, $r7, $r8, $r11;
        java.lang.String $r4, $r10, $r12;

        r2 := @this: org.apache.poi.hmef.attribute.TNEFDateAttribute;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attribute ");

        $r3 = virtualinvoke r2.<org.apache.poi.hmef.attribute.TNEFDateAttribute: org.apache.poi.hmef.attribute.TNEFProperty getProperty()>();

        $r4 = virtualinvoke $r3.<org.apache.poi.hmef.attribute.TNEFProperty: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type=");

        $i0 = virtualinvoke r2.<org.apache.poi.hmef.attribute.TNEFDateAttribute: int getType()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", date=");

        $r9 = r2.<org.apache.poi.hmef.attribute.TNEFDateAttribute: java.util.Date data>;

        $r10 = virtualinvoke $r9.<java.util.Date: java.lang.String toString()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public static java.util.Date getAsDate(org.apache.poi.hmef.attribute.TNEFAttribute)
    {
        java.util.Date $r8;
        org.apache.poi.hmef.attribute.TNEFAttribute r0;
        org.apache.poi.util.POILogger $r2;
        org.apache.poi.hmef.attribute.TNEFDateAttribute $r7;
        java.lang.StringBuilder $r1, $r3, $r5;
        java.lang.String $r4, $r6;
        boolean $z0;

        r0 := @parameter0: org.apache.poi.hmef.attribute.TNEFAttribute;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = r0 instanceof org.apache.poi.hmef.attribute.TNEFDateAttribute;

        if $z0 == 0 goto label2;

        $r7 = (org.apache.poi.hmef.attribute.TNEFDateAttribute) r0;

        $r8 = virtualinvoke $r7.<org.apache.poi.hmef.attribute.TNEFDateAttribute: java.util.Date getDate()>();

        return $r8;

     label2:
        $r2 = <org.apache.poi.hmef.attribute.TNEFDateAttribute: org.apache.poi.util.POILogger logger>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Warning, non date property found: ");

        $r4 = virtualinvoke r0.<org.apache.poi.hmef.attribute.TNEFAttribute: java.lang.String toString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, $r6);

        return null;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hmef/attribute/TNEFDateAttribute;");

        <org.apache.poi.hmef.attribute.TNEFDateAttribute: org.apache.poi.util.POILogger logger> = $r0;

        return;
    }
}
