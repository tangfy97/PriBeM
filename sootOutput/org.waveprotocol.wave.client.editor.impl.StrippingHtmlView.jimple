public class org.waveprotocol.wave.client.editor.impl.StrippingHtmlView extends org.waveprotocol.wave.client.editor.impl.HtmlViewImpl
{

    public void <init>(com.google.gwt.dom.client.Element)
    {
        org.waveprotocol.wave.client.editor.impl.StrippingHtmlView r0;
        com.google.gwt.dom.client.Element r1;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.StrippingHtmlView;

        r1 := @parameter0: com.google.gwt.dom.client.Element;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: void <init>(com.google.gwt.dom.client.Element)>(r1);

        return;
    }

    private boolean maybeStrip(com.google.gwt.dom.client.Node)
    {
        com.google.gwt.core.client.JavaScriptObject $r1;
        org.waveprotocol.wave.client.editor.impl.StrippingHtmlView r5;
        com.google.gwt.dom.client.Element r2;
        com.google.gwt.dom.client.Node r0, $r3, $r4, $r6;
        boolean $z0, $z1;

        r5 := @this: org.waveprotocol.wave.client.editor.impl.StrippingHtmlView;

        r0 := @parameter0: com.google.gwt.dom.client.Node;

        if r0 == null goto label1;

        $z0 = staticinvoke <org.waveprotocol.wave.client.common.util.DomHelper: boolean isTextNode(com.google.gwt.dom.client.Node)>(r0);

        if $z0 == 0 goto label2;

     label1:
        return 0;

     label2:
        $r1 = virtualinvoke r0.<com.google.gwt.dom.client.Node: com.google.gwt.core.client.JavaScriptObject cast()>();

        r2 = (com.google.gwt.dom.client.Element) $r1;

        $z1 = staticinvoke <org.waveprotocol.wave.client.editor.impl.NodeManager: boolean hasBackReference(com.google.gwt.dom.client.Element)>(r2);

        if $z1 != 0 goto label5;

     label3:
        $r3 = virtualinvoke r2.<com.google.gwt.dom.client.Element: com.google.gwt.dom.client.Node getFirstChild()>();

        if $r3 == null goto label4;

        $r4 = virtualinvoke r2.<com.google.gwt.dom.client.Element: com.google.gwt.dom.client.Node getParentNode()>();

        $r6 = (com.google.gwt.dom.client.Node) r2;

        virtualinvoke $r4.<com.google.gwt.dom.client.Node: com.google.gwt.dom.client.Node insertBefore(com.google.gwt.dom.client.Node,com.google.gwt.dom.client.Node)>($r3, $r6);

        goto label3;

     label4:
        virtualinvoke r2.<com.google.gwt.dom.client.Element: void removeFromParent()>();

        return 1;

     label5:
        return 0;
    }

    public com.google.gwt.dom.client.Node getFirstChild(com.google.gwt.dom.client.Node)
    {
        org.waveprotocol.wave.client.editor.impl.StrippingHtmlView r0;
        com.google.gwt.dom.client.Node r1, $r2;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.StrippingHtmlView;

        r1 := @parameter0: com.google.gwt.dom.client.Node;

     label1:
        $r2 = virtualinvoke r1.<com.google.gwt.dom.client.Node: com.google.gwt.dom.client.Node getFirstChild()>();

        $z0 = specialinvoke r0.<org.waveprotocol.wave.client.editor.impl.StrippingHtmlView: boolean maybeStrip(com.google.gwt.dom.client.Node)>($r2);

        if $z0 == 0 goto label2;

        goto label1;

     label2:
        return $r2;
    }

    public com.google.gwt.dom.client.Node getLastChild(com.google.gwt.dom.client.Node)
    {
        org.waveprotocol.wave.client.editor.impl.StrippingHtmlView r0;
        com.google.gwt.dom.client.Node r1, $r2;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.StrippingHtmlView;

        r1 := @parameter0: com.google.gwt.dom.client.Node;

     label1:
        $r2 = virtualinvoke r1.<com.google.gwt.dom.client.Node: com.google.gwt.dom.client.Node getLastChild()>();

        $z0 = specialinvoke r0.<org.waveprotocol.wave.client.editor.impl.StrippingHtmlView: boolean maybeStrip(com.google.gwt.dom.client.Node)>($r2);

        if $z0 == 0 goto label2;

        goto label1;

     label2:
        return $r2;
    }

    public com.google.gwt.dom.client.Node getNextSibling(com.google.gwt.dom.client.Node)
    {
        org.waveprotocol.wave.client.editor.impl.StrippingHtmlView r0;
        com.google.gwt.dom.client.Node r1, $r2;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.StrippingHtmlView;

        r1 := @parameter0: com.google.gwt.dom.client.Node;

     label1:
        $r2 = virtualinvoke r1.<com.google.gwt.dom.client.Node: com.google.gwt.dom.client.Node getNextSibling()>();

        $z0 = specialinvoke r0.<org.waveprotocol.wave.client.editor.impl.StrippingHtmlView: boolean maybeStrip(com.google.gwt.dom.client.Node)>($r2);

        if $z0 == 0 goto label2;

        goto label1;

     label2:
        return $r2;
    }

    public com.google.gwt.dom.client.Node getPreviousSibling(com.google.gwt.dom.client.Node)
    {
        org.waveprotocol.wave.client.editor.impl.StrippingHtmlView r0;
        com.google.gwt.dom.client.Node r1, $r2;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.StrippingHtmlView;

        r1 := @parameter0: com.google.gwt.dom.client.Node;

     label1:
        $r2 = virtualinvoke r1.<com.google.gwt.dom.client.Node: com.google.gwt.dom.client.Node getPreviousSibling()>();

        $z0 = specialinvoke r0.<org.waveprotocol.wave.client.editor.impl.StrippingHtmlView: boolean maybeStrip(com.google.gwt.dom.client.Node)>($r2);

        if $z0 == 0 goto label2;

        goto label1;

     label2:
        return $r2;
    }

    public com.google.gwt.dom.client.Node getVisibleNode(com.google.gwt.dom.client.Node)
    {
        org.waveprotocol.wave.client.editor.impl.StrippingHtmlView r1;
        com.google.gwt.dom.client.Element $r0;
        java.lang.Object r2;
        com.google.gwt.dom.client.Node $r3, $r4, $r5;
        boolean $z0;

        r1 := @this: org.waveprotocol.wave.client.editor.impl.StrippingHtmlView;

        r2 := @parameter0: com.google.gwt.dom.client.Node;

     label1:
        $r3 = (com.google.gwt.dom.client.Node) r2;

        $r0 = virtualinvoke $r3.<com.google.gwt.dom.client.Node: com.google.gwt.dom.client.Element getParentElement()>();

        $r4 = (com.google.gwt.dom.client.Node) r2;

        $z0 = specialinvoke r1.<org.waveprotocol.wave.client.editor.impl.StrippingHtmlView: boolean maybeStrip(com.google.gwt.dom.client.Node)>($r4);

        if $z0 != 0 goto label2;

        $r5 = (com.google.gwt.dom.client.Node) r2;

        return $r5;

     label2:
        r2 = $r0;

        goto label1;
    }

    public volatile java.lang.Object getVisibleNode(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.impl.StrippingHtmlView r0;
        java.lang.Object r1;
        com.google.gwt.dom.client.Node $r2, $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.StrippingHtmlView;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gwt.dom.client.Node) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.StrippingHtmlView: com.google.gwt.dom.client.Node getVisibleNode(com.google.gwt.dom.client.Node)>($r2);

        return $r3;
    }

    public volatile java.lang.Object getNextSibling(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.impl.StrippingHtmlView r0;
        java.lang.Object r1;
        com.google.gwt.dom.client.Node $r2, $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.StrippingHtmlView;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gwt.dom.client.Node) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.StrippingHtmlView: com.google.gwt.dom.client.Node getNextSibling(com.google.gwt.dom.client.Node)>($r2);

        return $r3;
    }

    public volatile java.lang.Object getPreviousSibling(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.impl.StrippingHtmlView r0;
        java.lang.Object r1;
        com.google.gwt.dom.client.Node $r2, $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.StrippingHtmlView;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gwt.dom.client.Node) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.StrippingHtmlView: com.google.gwt.dom.client.Node getPreviousSibling(com.google.gwt.dom.client.Node)>($r2);

        return $r3;
    }

    public volatile java.lang.Object getLastChild(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.impl.StrippingHtmlView r0;
        java.lang.Object r1;
        com.google.gwt.dom.client.Node $r2, $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.StrippingHtmlView;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gwt.dom.client.Node) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.StrippingHtmlView: com.google.gwt.dom.client.Node getLastChild(com.google.gwt.dom.client.Node)>($r2);

        return $r3;
    }

    public volatile java.lang.Object getFirstChild(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.impl.StrippingHtmlView r0;
        java.lang.Object r1;
        com.google.gwt.dom.client.Node $r2, $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.StrippingHtmlView;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gwt.dom.client.Node) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.StrippingHtmlView: com.google.gwt.dom.client.Node getFirstChild(com.google.gwt.dom.client.Node)>($r2);

        return $r3;
    }
}
