public class org.apache.cxf.ws.addressing.MAPAggregator extends org.apache.cxf.phase.AbstractPhaseInterceptor
{
    public static final java.lang.String USING_ADDRESSING;
    public static final java.lang.String ADDRESSING_DISABLED;
    public static final java.lang.String DECOUPLED_DESTINATION;
    public static final java.lang.String ACTION_VERIFIED;
    protected org.apache.cxf.ws.addressing.MessageIdCache messageIdCache;
    protected boolean usingAddressingAdvisory;
    protected boolean addressingRequired;
    protected boolean allowDuplicates;
    protected org.apache.cxf.ws.addressing.WSAddressingFeature$AddressingResponses addressingResponses;
    private org.apache.cxf.ws.addressing.MAPAggregator impl;

    public void <init>()
    {
        java.lang.Class $r1;
        java.lang.String $r2;
        org.apache.cxf.ws.addressing.MAPAggregator r0;
        org.apache.cxf.ws.addressing.WSAddressingFeature$AddressingResponses $r3;

        r0 := @this: org.apache.cxf.ws.addressing.MAPAggregator;

        $r1 = class "Lorg/apache/cxf/ws/addressing/MAPAggregator;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        specialinvoke r0.<org.apache.cxf.phase.AbstractPhaseInterceptor: void <init>(java.lang.String,java.lang.String)>($r2, "pre-logical");

        r0.<org.apache.cxf.ws.addressing.MAPAggregator: boolean usingAddressingAdvisory> = 1;

        r0.<org.apache.cxf.ws.addressing.MAPAggregator: boolean allowDuplicates> = 1;

        $r3 = <org.apache.cxf.ws.addressing.WSAddressingFeature$AddressingResponses: org.apache.cxf.ws.addressing.WSAddressingFeature$AddressingResponses ALL>;

        r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.WSAddressingFeature$AddressingResponses addressingResponses> = $r3;

        virtualinvoke r0.<org.apache.cxf.ws.addressing.MAPAggregator: void addBefore(java.lang.String)>("org.apache.cxf.interceptor.OneWayProcessorInterceptor");

        return;
    }

    public boolean allowDuplicates()
    {
        org.apache.cxf.ws.addressing.MAPAggregator r0, $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.ws.addressing.MAPAggregator;

        $r1 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl>;

        $z1 = virtualinvoke $r2.<org.apache.cxf.ws.addressing.MAPAggregator: boolean allowDuplicates()>();

        return $z1;

     label1:
        $z0 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: boolean allowDuplicates>;

        return $z0;
    }

    public void setAllowDuplicates(boolean)
    {
        org.apache.cxf.ws.addressing.MAPAggregator r0, $r1, $r2;
        boolean z0;

        r0 := @this: org.apache.cxf.ws.addressing.MAPAggregator;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl>;

        virtualinvoke $r2.<org.apache.cxf.ws.addressing.MAPAggregator: void setAllowDuplicates(boolean)>(z0);

     label1:
        r0.<org.apache.cxf.ws.addressing.MAPAggregator: boolean allowDuplicates> = z0;

        return;
    }

    public boolean isUsingAddressingAdvisory()
    {
        org.apache.cxf.ws.addressing.MAPAggregator r0, $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.ws.addressing.MAPAggregator;

        $r1 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl>;

        $z1 = virtualinvoke $r2.<org.apache.cxf.ws.addressing.MAPAggregator: boolean isUsingAddressingAdvisory()>();

        return $z1;

     label1:
        $z0 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: boolean usingAddressingAdvisory>;

        return $z0;
    }

    public void setUsingAddressingAdvisory(boolean)
    {
        org.apache.cxf.ws.addressing.MAPAggregator r0, $r1, $r2;
        boolean z0;

        r0 := @this: org.apache.cxf.ws.addressing.MAPAggregator;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl>;

        virtualinvoke $r2.<org.apache.cxf.ws.addressing.MAPAggregator: void setUsingAddressingAdvisory(boolean)>(z0);

     label1:
        r0.<org.apache.cxf.ws.addressing.MAPAggregator: boolean usingAddressingAdvisory> = z0;

        return;
    }

    public boolean isAddressingRequired()
    {
        org.apache.cxf.ws.addressing.MAPAggregator r0, $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.ws.addressing.MAPAggregator;

        $r1 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl>;

        $z1 = $r2.<org.apache.cxf.ws.addressing.MAPAggregator: boolean addressingRequired>;

        return $z1;

     label1:
        $z0 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: boolean addressingRequired>;

        return $z0;
    }

    public void setAddressingRequired(boolean)
    {
        org.apache.cxf.ws.addressing.MAPAggregator r0, $r1, $r2;
        boolean z0;

        r0 := @this: org.apache.cxf.ws.addressing.MAPAggregator;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl>;

        virtualinvoke $r2.<org.apache.cxf.ws.addressing.MAPAggregator: void setAddressingRequired(boolean)>(z0);

     label1:
        r0.<org.apache.cxf.ws.addressing.MAPAggregator: boolean addressingRequired> = z0;

        return;
    }

    public void setAddressingResponses(org.apache.cxf.ws.addressing.WSAddressingFeature$AddressingResponses)
    {
        org.apache.cxf.ws.addressing.MAPAggregator r0, $r1, $r3;
        org.apache.cxf.ws.addressing.WSAddressingFeature$AddressingResponses r2;

        r0 := @this: org.apache.cxf.ws.addressing.MAPAggregator;

        r2 := @parameter0: org.apache.cxf.ws.addressing.WSAddressingFeature$AddressingResponses;

        $r1 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl>;

        virtualinvoke $r3.<org.apache.cxf.ws.addressing.MAPAggregator: void setAddressingResponses(org.apache.cxf.ws.addressing.WSAddressingFeature$AddressingResponses)>(r2);

     label1:
        r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.WSAddressingFeature$AddressingResponses addressingResponses> = r2;

        return;
    }

    public org.apache.cxf.ws.addressing.MessageIdCache getMessageIdCache()
    {
        org.apache.cxf.ws.addressing.MessageIdCache $r2, $r4;
        org.apache.cxf.ws.addressing.MAPAggregator r0, $r1, $r3;

        r0 := @this: org.apache.cxf.ws.addressing.MAPAggregator;

        $r1 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl>;

        $r4 = virtualinvoke $r3.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MessageIdCache getMessageIdCache()>();

        return $r4;

     label1:
        $r2 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MessageIdCache messageIdCache>;

        return $r2;
    }

    public void setMessageIdCache(org.apache.cxf.ws.addressing.MessageIdCache)
    {
        org.apache.cxf.ws.addressing.MessageIdCache r0;
        org.apache.cxf.ws.addressing.MAPAggregator r1, $r2, $r3;
        java.lang.NullPointerException $r4;

        r1 := @this: org.apache.cxf.ws.addressing.MAPAggregator;

        r0 := @parameter0: org.apache.cxf.ws.addressing.MessageIdCache;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("messageIdCache cannot be null.");

        throw $r4;

     label1:
        $r2 = r1.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl>;

        if $r2 == null goto label2;

        $r3 = r1.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl>;

        virtualinvoke $r3.<org.apache.cxf.ws.addressing.MAPAggregator: void setMessageIdCache(org.apache.cxf.ws.addressing.MessageIdCache)>(r0);

     label2:
        r1.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MessageIdCache messageIdCache> = r0;

        return;
    }

    public org.apache.cxf.ws.addressing.WSAddressingFeature$AddressingResponses getAddressingResponses()
    {
        org.apache.cxf.ws.addressing.MAPAggregator r0, $r1, $r3;
        org.apache.cxf.ws.addressing.WSAddressingFeature$AddressingResponses $r2, $r4;

        r0 := @this: org.apache.cxf.ws.addressing.MAPAggregator;

        $r1 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl>;

        $r4 = virtualinvoke $r3.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.WSAddressingFeature$AddressingResponses getAddressingResponses()>();

        return $r4;

     label1:
        $r2 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.WSAddressingFeature$AddressingResponses addressingResponses>;

        return $r2;
    }

    public void handleMessage(org.apache.cxf.message.Message)
    {
        org.apache.cxf.Bus $r5;
        org.apache.cxf.message.Message r2;
        org.apache.cxf.message.Exchange $r4;
        org.apache.cxf.ws.addressing.MAPAggregator r0, $r1, $r3, $r8;
        java.lang.Object $r6;
        org.apache.cxf.ws.addressing.MAPAggregator$MAPAggregatorLoader r7;

        r0 := @this: org.apache.cxf.ws.addressing.MAPAggregator;

        r2 := @parameter0: org.apache.cxf.message.Message;

        $r1 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl>;

        if $r1 != null goto label1;

        $r4 = interfaceinvoke r2.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r5 = interfaceinvoke $r4.<org.apache.cxf.message.Exchange: org.apache.cxf.Bus getBus()>();

        $r6 = interfaceinvoke $r5.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/ws/addressing/MAPAggregator$MAPAggregatorLoader;");

        r7 = (org.apache.cxf.ws.addressing.MAPAggregator$MAPAggregatorLoader) $r6;

        $r8 = interfaceinvoke r7.<org.apache.cxf.ws.addressing.MAPAggregator$MAPAggregatorLoader: org.apache.cxf.ws.addressing.MAPAggregator createImplementation(org.apache.cxf.ws.addressing.MAPAggregator)>(r0);

        r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl> = $r8;

     label1:
        $r3 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl>;

        virtualinvoke $r3.<org.apache.cxf.ws.addressing.MAPAggregator: void handleMessage(org.apache.cxf.message.Message)>(r2);

        return;
    }

    public void handleFault(org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.Message r2;
        org.apache.cxf.ws.addressing.MAPAggregator r0, $r1, $r3;

        r0 := @this: org.apache.cxf.ws.addressing.MAPAggregator;

        r2 := @parameter0: org.apache.cxf.message.Message;

        $r1 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl>;

        virtualinvoke $r3.<org.apache.cxf.ws.addressing.MAPAggregator: void handleFault(org.apache.cxf.message.Message)>(r2);

     label1:
        return;
    }

    public java.util.Collection getAdditionalInterceptors()
    {
        java.util.Collection $r2, $r4;
        org.apache.cxf.ws.addressing.MAPAggregator r0, $r1, $r3;

        r0 := @this: org.apache.cxf.ws.addressing.MAPAggregator;

        $r1 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.cxf.ws.addressing.MAPAggregator: org.apache.cxf.ws.addressing.MAPAggregator impl>;

        $r4 = virtualinvoke $r3.<org.apache.cxf.ws.addressing.MAPAggregator: java.util.Collection getAdditionalInterceptors()>();

        return $r4;

     label1:
        $r2 = specialinvoke r0.<org.apache.cxf.phase.AbstractPhaseInterceptor: java.util.Collection getAdditionalInterceptors()>();

        return $r2;
    }

    static void <clinit>()
    {
        java.lang.String $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23;
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r9, $r10, $r12, $r15, $r16, $r18, $r21, $r22;
        java.lang.Class $r1, $r7, $r13, $r19;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = class "Lorg/apache/cxf/ws/addressing/MAPAggregator;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".usingAddressing");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.cxf.ws.addressing.MAPAggregator: java.lang.String USING_ADDRESSING> = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = class "Lorg/apache/cxf/ws/addressing/MAPAggregator;";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".addressingDisabled");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.cxf.ws.addressing.MAPAggregator: java.lang.String ADDRESSING_DISABLED> = $r11;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = class "Lorg/apache/cxf/ws/addressing/MAPAggregator;";

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".decoupledDestination");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.cxf.ws.addressing.MAPAggregator: java.lang.String DECOUPLED_DESTINATION> = $r17;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = class "Lorg/apache/cxf/ws/addressing/MAPAggregator;";

        $r20 = virtualinvoke $r19.<java.lang.Class: java.lang.String getName()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".actionVerified");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.cxf.ws.addressing.MAPAggregator: java.lang.String ACTION_VERIFIED> = $r23;

        return;
    }
}
