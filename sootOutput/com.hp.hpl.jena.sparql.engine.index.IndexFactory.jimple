public class com.hp.hpl.jena.sparql.engine.index.IndexFactory extends java.lang.Object
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.engine.index.IndexFactory r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.index.IndexFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.hp.hpl.jena.sparql.engine.index.IndexTable createIndex(java.util.Set, com.hp.hpl.jena.sparql.engine.QueryIterator)
    {
        com.hp.hpl.jena.sparql.engine.index.HashIndexTable$MissingBindingException $r3;
        com.hp.hpl.jena.sparql.engine.index.HashIndexTable $r0;
        java.util.Map $r6;
        java.util.Set r1, $r5;
        com.hp.hpl.jena.sparql.engine.QueryIterator r2;
        com.hp.hpl.jena.sparql.engine.index.LinearIndex $r4;

        r1 := @parameter0: java.util.Set;

        r2 := @parameter1: com.hp.hpl.jena.sparql.engine.QueryIterator;

     label1:
        $r0 = new com.hp.hpl.jena.sparql.engine.index.HashIndexTable;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.engine.index.HashIndexTable: void <init>(java.util.Set,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r1, r2);

     label2:
        return $r0;

     label3:
        $r3 := @caughtexception;

        $r4 = new com.hp.hpl.jena.sparql.engine.index.LinearIndex;

        $r5 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.index.HashIndexTable$MissingBindingException: java.util.Set getData()>();

        $r6 = virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.index.HashIndexTable$MissingBindingException: java.util.Map getMap()>();

        specialinvoke $r4.<com.hp.hpl.jena.sparql.engine.index.LinearIndex: void <init>(java.util.Set,com.hp.hpl.jena.sparql.engine.QueryIterator,java.util.Set,java.util.Map)>(r1, r2, $r5, $r6);

        return $r4;

        catch com.hp.hpl.jena.sparql.engine.index.HashIndexTable$MissingBindingException from label1 to label2 with label3;
    }
}
