public class org.apache.jena.riot.IO_Jena extends java.lang.Object
{
    private static java.lang.String riotBase;
    private static java.lang.String streamManagerSymbolStr;
    public static com.hp.hpl.jena.sparql.util.Symbol streamManagerSymbol;
    private static com.hp.hpl.jena.util.FileManager coreFileManager;

    public void <init>()
    {
        org.apache.jena.riot.IO_Jena r0;

        r0 := @this: org.apache.jena.riot.IO_Jena;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void wireIntoJena()
    {
        org.apache.jena.riot.adapters.AdapterFileManager $r0;

        $r0 = staticinvoke <org.apache.jena.riot.adapters.AdapterFileManager: org.apache.jena.riot.adapters.AdapterFileManager get()>();

        staticinvoke <com.hp.hpl.jena.util.FileManager: void setGlobalFileManager(com.hp.hpl.jena.util.FileManager)>($r0);

        staticinvoke <org.apache.jena.riot.system.IO_JenaReaders: void wireIntoJena()>();

        staticinvoke <org.apache.jena.riot.system.IO_JenaWriters: void wireIntoJena()>();

        return;
    }

    public static void resetJenaReaders()
    {
        staticinvoke <org.apache.jena.riot.IO_Jena: void resetJena()>();

        return;
    }

    public static void resetJena()
    {
        staticinvoke <com.hp.hpl.jena.util.FileManager: void setGlobalFileManager(com.hp.hpl.jena.util.FileManager)>(null);

        staticinvoke <org.apache.jena.riot.system.IO_JenaReaders: void resetJena()>();

        staticinvoke <org.apache.jena.riot.system.IO_JenaWriters: void resetJena()>();

        return;
    }

    public static void registerForModelRead(java.lang.String, java.lang.Class)
    {
        java.lang.Class r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        staticinvoke <org.apache.jena.riot.system.IO_JenaReaders: void registerForModelRead(java.lang.String,java.lang.Class)>(r0, r1);

        return;
    }

    public static void registerForModelWrite(java.lang.String, java.lang.Class)
    {
        java.lang.Class r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        staticinvoke <org.apache.jena.riot.system.IO_JenaWriters: void registerForModelWrite(java.lang.String,java.lang.Class)>(r0, r1);

        return;
    }

    static void <clinit>()
    {
        java.lang.StringBuilder $r0, $r2, $r3;
        java.lang.String $r1, $r4, $r5;
        com.hp.hpl.jena.sparql.util.Symbol $r6;

        <org.apache.jena.riot.IO_Jena: java.lang.String riotBase> = "http://jena.apache.org/riot/";

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = <org.apache.jena.riot.IO_Jena: java.lang.String riotBase>;

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("streammanager");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.jena.riot.IO_Jena: java.lang.String streamManagerSymbolStr> = $r4;

        $r5 = <org.apache.jena.riot.IO_Jena: java.lang.String streamManagerSymbolStr>;

        $r6 = staticinvoke <com.hp.hpl.jena.sparql.util.Symbol: com.hp.hpl.jena.sparql.util.Symbol create(java.lang.String)>($r5);

        <org.apache.jena.riot.IO_Jena: com.hp.hpl.jena.sparql.util.Symbol streamManagerSymbol> = $r6;

        <org.apache.jena.riot.IO_Jena: com.hp.hpl.jena.util.FileManager coreFileManager> = null;

        return;
    }
}
