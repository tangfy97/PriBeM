public class org.waveprotocol.wave.client.editor.UndoableSequencer extends java.lang.Object implements org.waveprotocol.wave.model.operation.OperationSequencer
{
    private final org.waveprotocol.wave.model.operation.OperationSequencer sequencer;
    org.waveprotocol.wave.client.editor.Responsibility$Manager responsibility;

    public void <init>(org.waveprotocol.wave.model.operation.OperationSequencer, org.waveprotocol.wave.client.editor.Responsibility$Manager)
    {
        org.waveprotocol.wave.model.operation.OperationSequencer r2;
        org.waveprotocol.wave.client.editor.UndoableSequencer r0;
        org.waveprotocol.wave.client.editor.Responsibility$Manager r1;

        r0 := @this: org.waveprotocol.wave.client.editor.UndoableSequencer;

        r2 := @parameter0: org.waveprotocol.wave.model.operation.OperationSequencer;

        r1 := @parameter1: org.waveprotocol.wave.client.editor.Responsibility$Manager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.client.editor.UndoableSequencer: org.waveprotocol.wave.client.editor.Responsibility$Manager responsibility> = r1;

        r0.<org.waveprotocol.wave.client.editor.UndoableSequencer: org.waveprotocol.wave.model.operation.OperationSequencer sequencer> = r2;

        return;
    }

    public void begin()
    {
        org.waveprotocol.wave.model.operation.OperationSequencer $r2;
        org.waveprotocol.wave.client.editor.UndoableSequencer r0;
        org.waveprotocol.wave.client.editor.Responsibility$Manager $r1;

        r0 := @this: org.waveprotocol.wave.client.editor.UndoableSequencer;

        $r1 = r0.<org.waveprotocol.wave.client.editor.UndoableSequencer: org.waveprotocol.wave.client.editor.Responsibility$Manager responsibility>;

        interfaceinvoke $r1.<org.waveprotocol.wave.client.editor.Responsibility$Manager: void startDirectSequence()>();

        $r2 = r0.<org.waveprotocol.wave.client.editor.UndoableSequencer: org.waveprotocol.wave.model.operation.OperationSequencer sequencer>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.operation.OperationSequencer: void begin()>();

        return;
    }

    public void end()
    {
        org.waveprotocol.wave.model.operation.OperationSequencer $r1;
        org.waveprotocol.wave.client.editor.UndoableSequencer r0;
        org.waveprotocol.wave.client.editor.Responsibility$Manager $r2;

        r0 := @this: org.waveprotocol.wave.client.editor.UndoableSequencer;

        $r1 = r0.<org.waveprotocol.wave.client.editor.UndoableSequencer: org.waveprotocol.wave.model.operation.OperationSequencer sequencer>;

        interfaceinvoke $r1.<org.waveprotocol.wave.model.operation.OperationSequencer: void end()>();

        $r2 = r0.<org.waveprotocol.wave.client.editor.UndoableSequencer: org.waveprotocol.wave.client.editor.Responsibility$Manager responsibility>;

        interfaceinvoke $r2.<org.waveprotocol.wave.client.editor.Responsibility$Manager: void endDirectSequence()>();

        return;
    }

    public void consume(org.waveprotocol.wave.model.document.operation.Nindo)
    {
        org.waveprotocol.wave.model.operation.OperationSequencer $r2;
        org.waveprotocol.wave.model.document.operation.Nindo r1;
        org.waveprotocol.wave.client.editor.UndoableSequencer r0;

        r0 := @this: org.waveprotocol.wave.client.editor.UndoableSequencer;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.Nindo;

        $r2 = r0.<org.waveprotocol.wave.client.editor.UndoableSequencer: org.waveprotocol.wave.model.operation.OperationSequencer sequencer>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.operation.OperationSequencer: void consume(java.lang.Object)>(r1);

        return;
    }

    public volatile void consume(java.lang.Object)
    {
        java.lang.Object r1;
        org.waveprotocol.wave.model.document.operation.Nindo $r2;
        org.waveprotocol.wave.client.editor.UndoableSequencer r0;

        r0 := @this: org.waveprotocol.wave.client.editor.UndoableSequencer;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.document.operation.Nindo) r1;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.UndoableSequencer: void consume(org.waveprotocol.wave.model.document.operation.Nindo)>($r2);

        return;
    }
}
