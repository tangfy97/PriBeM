public class org.apache.poi.xslf.usermodel.XSLFPictureShape extends org.apache.poi.xslf.usermodel.XSLFSimpleShape
{
    private org.apache.poi.xslf.usermodel.XSLFPictureData _data;

    void <init>(org.openxmlformats.schemas.presentationml.x2006.main.CTPicture, org.apache.poi.xslf.usermodel.XSLFSheet)
    {
        org.openxmlformats.schemas.presentationml.x2006.main.CTPicture r1;
        org.apache.poi.xslf.usermodel.XSLFSheet r2;
        org.apache.poi.xslf.usermodel.XSLFPictureShape r0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFPictureShape;

        r1 := @parameter0: org.openxmlformats.schemas.presentationml.x2006.main.CTPicture;

        r2 := @parameter1: org.apache.poi.xslf.usermodel.XSLFSheet;

        specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSimpleShape: void <init>(org.apache.xmlbeans.XmlObject,org.apache.poi.xslf.usermodel.XSLFSheet)>(r1, r2);

        return;
    }

    static org.openxmlformats.schemas.presentationml.x2006.main.CTPicture prototype(int, java.lang.String)
    {
        org.openxmlformats.schemas.presentationml.x2006.main.CTPicture $r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties $r13;
        org.openxmlformats.schemas.presentationml.x2006.main.CTPictureNonVisual $r1;
        long $l2;
        org.openxmlformats.schemas.drawingml.x2006.main.STShapeType$Enum $r15;
        int i0, $i1;
        java.lang.String $r6, r11;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPresetGeometry2D $r14;
        org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties $r9;
        org.openxmlformats.schemas.drawingml.x2006.main.CTStretchInfoProperties $r12;
        org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualPictureProperties $r7;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPictureLocking $r8;
        org.openxmlformats.schemas.drawingml.x2006.main.CTBlip $r10;
        org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps $r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        i0 := @parameter0: int;

        r11 := @parameter1: java.lang.String;

        $r0 = staticinvoke <org.openxmlformats.schemas.presentationml.x2006.main.CTPicture$Factory: org.openxmlformats.schemas.presentationml.x2006.main.CTPicture newInstance()>();

        $r1 = interfaceinvoke $r0.<org.openxmlformats.schemas.presentationml.x2006.main.CTPicture: org.openxmlformats.schemas.presentationml.x2006.main.CTPictureNonVisual addNewNvPicPr()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.presentationml.x2006.main.CTPictureNonVisual: org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps addNewCNvPr()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Picture ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps: void setName(java.lang.String)>($r6);

        $i1 = i0 + 1;

        $l2 = (long) $i1;

        interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps: void setId(long)>($l2);

        $r7 = interfaceinvoke $r1.<org.openxmlformats.schemas.presentationml.x2006.main.CTPictureNonVisual: org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualPictureProperties addNewCNvPicPr()>();

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualPictureProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTPictureLocking addNewPicLocks()>();

        interfaceinvoke $r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTPictureLocking: void setNoChangeAspect(boolean)>(1);

        interfaceinvoke $r1.<org.openxmlformats.schemas.presentationml.x2006.main.CTPictureNonVisual: org.openxmlformats.schemas.presentationml.x2006.main.CTApplicationNonVisualDrawingProps addNewNvPr()>();

        $r9 = interfaceinvoke $r0.<org.openxmlformats.schemas.presentationml.x2006.main.CTPicture: org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties addNewBlipFill()>();

        $r10 = interfaceinvoke $r9.<org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTBlip addNewBlip()>();

        interfaceinvoke $r10.<org.openxmlformats.schemas.drawingml.x2006.main.CTBlip: void setEmbed(java.lang.String)>(r11);

        $r12 = interfaceinvoke $r9.<org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTStretchInfoProperties addNewStretch()>();

        interfaceinvoke $r12.<org.openxmlformats.schemas.drawingml.x2006.main.CTStretchInfoProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTRelativeRect addNewFillRect()>();

        $r13 = interfaceinvoke $r0.<org.openxmlformats.schemas.presentationml.x2006.main.CTPicture: org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties addNewSpPr()>();

        $r14 = interfaceinvoke $r13.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTPresetGeometry2D addNewPrstGeom()>();

        $r15 = <org.openxmlformats.schemas.drawingml.x2006.main.STShapeType: org.openxmlformats.schemas.drawingml.x2006.main.STShapeType$Enum RECT>;

        interfaceinvoke $r14.<org.openxmlformats.schemas.drawingml.x2006.main.CTPresetGeometry2D: void setPrst(org.openxmlformats.schemas.drawingml.x2006.main.STShapeType$Enum)>($r15);

        interfaceinvoke $r14.<org.openxmlformats.schemas.drawingml.x2006.main.CTPresetGeometry2D: org.openxmlformats.schemas.drawingml.x2006.main.CTGeomGuideList addNewAvLst()>();

        return $r0;
    }

    public void resize()
    {
        byte[] $r3;
        java.awt.Rectangle $r7;
        java.awt.image.BufferedImage $r4;
        java.lang.Exception $r6;
        org.apache.poi.xslf.usermodel.XSLFPictureShape r0;
        java.io.ByteArrayInputStream $r2;
        int $i0, $i1;
        org.apache.poi.xslf.usermodel.XSLFPictureData $r1;
        java.awt.geom.Rectangle2D$Double $r5;
        double $d0, $d1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFPictureShape;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFPictureShape: org.apache.poi.xslf.usermodel.XSLFPictureData getPictureData()>();

     label1:
        $r2 = new java.io.ByteArrayInputStream;

        $r3 = virtualinvoke $r1.<org.apache.poi.xslf.usermodel.XSLFPictureData: byte[] getData()>();

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

        $r4 = staticinvoke <javax.imageio.ImageIO: java.awt.image.BufferedImage read(java.io.InputStream)>($r2);

        $r5 = new java.awt.geom.Rectangle2D$Double;

        $i0 = virtualinvoke $r4.<java.awt.image.BufferedImage: int getWidth()>();

        $d0 = (double) $i0;

        $i1 = virtualinvoke $r4.<java.awt.image.BufferedImage: int getHeight()>();

        $d1 = (double) $i1;

        specialinvoke $r5.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, 0.0, $d0, $d1);

        virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFPictureShape: void setAnchor(java.awt.geom.Rectangle2D)>($r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.awt.Rectangle;

        specialinvoke $r7.<java.awt.Rectangle: void <init>(int,int,int,int)>(50, 50, 200, 200);

        virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFPictureShape: void setAnchor(java.awt.geom.Rectangle2D)>($r7);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public boolean isExternalLinkedPicture()
    {
        java.lang.String $r1, $r2;
        org.apache.poi.xslf.usermodel.XSLFPictureShape r0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFPictureShape;

        $r1 = specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFPictureShape: java.lang.String getBlipId()>();

        if $r1 != null goto label1;

        $r2 = specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFPictureShape: java.lang.String getBlipLink()>();

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public org.apache.poi.xslf.usermodel.XSLFPictureData getPictureData()
    {
        org.apache.poi.openxml4j.opc.PackageRelationship $r5;
        java.lang.Exception $r8;
        org.apache.poi.xslf.usermodel.XSLFPictureShape r0;
        org.apache.poi.xslf.usermodel.XSLFSheet $r3;
        org.apache.poi.openxml4j.opc.PackagePart $r4, $r6;
        java.lang.String $r2;
        org.apache.poi.xslf.usermodel.XSLFPictureData $r1, $r7, $r10;
        org.apache.poi.POIXMLException $r9;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFPictureShape;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFPictureShape: org.apache.poi.xslf.usermodel.XSLFPictureData _data>;

        if $r1 != null goto label5;

        $r2 = specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFPictureShape: java.lang.String getBlipId()>();

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFPictureShape: org.apache.poi.xslf.usermodel.XSLFSheet getSheet()>();

        $r4 = virtualinvoke $r3.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r5 = virtualinvoke $r4.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationship getRelationship(java.lang.String)>($r2);

        if $r5 == null goto label5;

     label2:
        $r6 = virtualinvoke $r4.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePart getRelatedPart(org.apache.poi.openxml4j.opc.PackageRelationship)>($r5);

        $r7 = new org.apache.poi.xslf.usermodel.XSLFPictureData;

        specialinvoke $r7.<org.apache.poi.xslf.usermodel.XSLFPictureData: void <init>(org.apache.poi.openxml4j.opc.PackagePart,org.apache.poi.openxml4j.opc.PackageRelationship)>($r6, $r5);

        r0.<org.apache.poi.xslf.usermodel.XSLFPictureShape: org.apache.poi.xslf.usermodel.XSLFPictureData _data> = $r7;

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        $r9 = new org.apache.poi.POIXMLException;

        specialinvoke $r9.<org.apache.poi.POIXMLException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

     label5:
        $r10 = r0.<org.apache.poi.xslf.usermodel.XSLFPictureShape: org.apache.poi.xslf.usermodel.XSLFPictureData _data>;

        return $r10;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public java.net.URI getPictureLink()
    {
        org.apache.poi.xslf.usermodel.XSLFSheet $r3;
        org.apache.poi.openxml4j.opc.PackagePart $r4;
        java.lang.String $r1, $r2;
        java.net.URI $r6;
        org.apache.poi.openxml4j.opc.PackageRelationship $r5;
        org.apache.poi.xslf.usermodel.XSLFPictureShape r0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFPictureShape;

        $r1 = specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFPictureShape: java.lang.String getBlipId()>();

        if $r1 == null goto label1;

        return null;

     label1:
        $r2 = specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFPictureShape: java.lang.String getBlipLink()>();

        if $r2 != null goto label2;

        return null;

     label2:
        $r3 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFPictureShape: org.apache.poi.xslf.usermodel.XSLFSheet getSheet()>();

        $r4 = virtualinvoke $r3.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r5 = virtualinvoke $r4.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationship getRelationship(java.lang.String)>($r2);

        if $r5 == null goto label3;

        $r6 = virtualinvoke $r5.<org.apache.poi.openxml4j.opc.PackageRelationship: java.net.URI getTargetURI()>();

        return $r6;

     label3:
        return null;
    }

    private org.openxmlformats.schemas.drawingml.x2006.main.CTBlip getBlip()
    {
        org.openxmlformats.schemas.presentationml.x2006.main.CTPicture r2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTBlip $r4;
        org.apache.xmlbeans.XmlObject $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties $r3;
        org.apache.poi.xslf.usermodel.XSLFPictureShape r0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFPictureShape;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFPictureShape: org.apache.xmlbeans.XmlObject getXmlObject()>();

        r2 = (org.openxmlformats.schemas.presentationml.x2006.main.CTPicture) $r1;

        $r3 = interfaceinvoke r2.<org.openxmlformats.schemas.presentationml.x2006.main.CTPicture: org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties getBlipFill()>();

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTBlip getBlip()>();

        return $r4;
    }

    private java.lang.String getBlipLink()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTBlip $r1;
        java.lang.String $r2;
        org.apache.poi.xslf.usermodel.XSLFPictureShape r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFPictureShape;

        $r1 = specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFPictureShape: org.openxmlformats.schemas.drawingml.x2006.main.CTBlip getBlip()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTBlip: java.lang.String getLink()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        return $r2;
    }

    private java.lang.String getBlipId()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTBlip $r1;
        java.lang.String $r2;
        org.apache.poi.xslf.usermodel.XSLFPictureShape r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFPictureShape;

        $r1 = specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFPictureShape: org.openxmlformats.schemas.drawingml.x2006.main.CTBlip getBlip()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTBlip: java.lang.String getEmbed()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        return $r2;
    }

    public void drawContent(java.awt.Graphics2D)
    {
        java.awt.geom.Rectangle2D $r6;
        org.apache.poi.xslf.usermodel.XSLFImageRenderer $r7, r8;
        org.apache.poi.xslf.usermodel.RenderableShape $r5;
        org.apache.poi.xslf.usermodel.XSLFPictureShape r0;
        org.apache.poi.xslf.usermodel.XSLFRenderingHint $r3;
        java.awt.Graphics2D r2;
        java.lang.Object $r4;
        org.apache.poi.xslf.usermodel.XSLFPictureData $r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFPictureShape;

        r2 := @parameter0: java.awt.Graphics2D;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFPictureShape: org.apache.poi.xslf.usermodel.XSLFPictureData getPictureData()>();

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = <org.apache.poi.xslf.usermodel.XSLFRenderingHint: org.apache.poi.xslf.usermodel.XSLFRenderingHint IMAGE_RENDERER>;

        $r4 = virtualinvoke r2.<java.awt.Graphics2D: java.lang.Object getRenderingHint(java.awt.RenderingHints$Key)>($r3);

        r8 = (org.apache.poi.xslf.usermodel.XSLFImageRenderer) $r4;

        if r8 != null goto label2;

        $r7 = new org.apache.poi.xslf.usermodel.XSLFImageRenderer;

        specialinvoke $r7.<org.apache.poi.xslf.usermodel.XSLFImageRenderer: void <init>()>();

        r8 = $r7;

     label2:
        $r5 = new org.apache.poi.xslf.usermodel.RenderableShape;

        specialinvoke $r5.<org.apache.poi.xslf.usermodel.RenderableShape: void <init>(org.apache.poi.xslf.usermodel.XSLFSimpleShape)>(r0);

        $r6 = virtualinvoke $r5.<org.apache.poi.xslf.usermodel.RenderableShape: java.awt.geom.Rectangle2D getAnchor(java.awt.Graphics2D)>(r2);

        virtualinvoke r8.<org.apache.poi.xslf.usermodel.XSLFImageRenderer: boolean drawImage(java.awt.Graphics2D,org.apache.poi.xslf.usermodel.XSLFPictureData,java.awt.geom.Rectangle2D)>(r2, $r1, $r6);

        return;
    }

    void copy(org.apache.poi.xslf.usermodel.XSLFShape)
    {
        org.openxmlformats.schemas.presentationml.x2006.main.CTPicture r9;
        org.openxmlformats.schemas.presentationml.x2006.main.CTPictureNonVisual $r12;
        org.apache.poi.xslf.usermodel.XSLFSheet $r4, $r5, $r24, $r25;
        org.apache.poi.openxml4j.opc.PackagePart $r6, $r26;
        boolean $z0, $z1, $z2;
        java.util.List $r15;
        org.apache.xmlbeans.XmlObject[] $r19;
        org.openxmlformats.schemas.drawingml.x2006.main.CTOfficeArtExtensionList $r14;
        javax.xml.namespace.QName $r22, $r28;
        org.apache.xmlbeans.XmlCursor $r21;
        org.apache.poi.xslf.usermodel.XSLFShape r1;
        int $i0;
        java.lang.String $r3, $r7, $r23, $r27;
        org.apache.xmlbeans.XmlObject $r8, $r20;
        java.util.Iterator $r16;
        org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties $r10;
        org.apache.poi.xslf.usermodel.XSLFPictureShape r0, r2;
        org.openxmlformats.schemas.presentationml.x2006.main.CTApplicationNonVisualDrawingProps $r13;
        org.openxmlformats.schemas.drawingml.x2006.main.CTBlip $r11;
        org.openxmlformats.schemas.drawingml.x2006.main.CTOfficeArtExtension r18;
        java.lang.Object $r17;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFPictureShape;

        r1 := @parameter0: org.apache.poi.xslf.usermodel.XSLFShape;

        specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFSimpleShape: void copy(org.apache.poi.xslf.usermodel.XSLFShape)>(r1);

        r2 = (org.apache.poi.xslf.usermodel.XSLFPictureShape) r1;

        $r3 = specialinvoke r2.<org.apache.poi.xslf.usermodel.XSLFPictureShape: java.lang.String getBlipId()>();

        $r4 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFPictureShape: org.apache.poi.xslf.usermodel.XSLFSheet getSheet()>();

        $r5 = virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFPictureShape: org.apache.poi.xslf.usermodel.XSLFSheet getSheet()>();

        $r6 = virtualinvoke $r5.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r7 = virtualinvoke $r4.<org.apache.poi.xslf.usermodel.XSLFSheet: java.lang.String importBlip(java.lang.String,org.apache.poi.openxml4j.opc.PackagePart)>($r3, $r6);

        $r8 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFPictureShape: org.apache.xmlbeans.XmlObject getXmlObject()>();

        r9 = (org.openxmlformats.schemas.presentationml.x2006.main.CTPicture) $r8;

        $r10 = interfaceinvoke r9.<org.openxmlformats.schemas.presentationml.x2006.main.CTPicture: org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties getBlipFill()>();

        $r11 = interfaceinvoke $r10.<org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTBlip getBlip()>();

        interfaceinvoke $r11.<org.openxmlformats.schemas.drawingml.x2006.main.CTBlip: void setEmbed(java.lang.String)>($r7);

        $r12 = interfaceinvoke r9.<org.openxmlformats.schemas.presentationml.x2006.main.CTPicture: org.openxmlformats.schemas.presentationml.x2006.main.CTPictureNonVisual getNvPicPr()>();

        $r13 = interfaceinvoke $r12.<org.openxmlformats.schemas.presentationml.x2006.main.CTPictureNonVisual: org.openxmlformats.schemas.presentationml.x2006.main.CTApplicationNonVisualDrawingProps getNvPr()>();

        $z0 = interfaceinvoke $r13.<org.openxmlformats.schemas.presentationml.x2006.main.CTApplicationNonVisualDrawingProps: boolean isSetCustDataLst()>();

        if $z0 == 0 goto label1;

        interfaceinvoke $r13.<org.openxmlformats.schemas.presentationml.x2006.main.CTApplicationNonVisualDrawingProps: void unsetCustDataLst()>();

     label1:
        $z1 = interfaceinvoke $r11.<org.openxmlformats.schemas.drawingml.x2006.main.CTBlip: boolean isSetExtLst()>();

        if $z1 == 0 goto label4;

        $r14 = interfaceinvoke $r11.<org.openxmlformats.schemas.drawingml.x2006.main.CTBlip: org.openxmlformats.schemas.drawingml.x2006.main.CTOfficeArtExtensionList getExtLst()>();

        $r15 = interfaceinvoke $r14.<org.openxmlformats.schemas.drawingml.x2006.main.CTOfficeArtExtensionList: java.util.List getExtList()>();

        $r16 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r18 = (org.openxmlformats.schemas.drawingml.x2006.main.CTOfficeArtExtension) $r17;

        $r19 = interfaceinvoke r18.<org.openxmlformats.schemas.drawingml.x2006.main.CTOfficeArtExtension: org.apache.xmlbeans.XmlObject[] selectPath(java.lang.String)>("declare namespace a14=\'http://schemas.microsoft.com/office/drawing/2010/main\' $this//a14:imgProps/a14:imgLayer");

        if $r19 == null goto label3;

        $i0 = lengthof $r19;

        if $i0 != 1 goto label3;

        $r20 = $r19[0];

        $r21 = interfaceinvoke $r20.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

        $r22 = new javax.xml.namespace.QName;

        specialinvoke $r22.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://schemas.openxmlformats.org/officeDocument/2006/relationships", "embed");

        $r23 = interfaceinvoke $r21.<org.apache.xmlbeans.XmlCursor: java.lang.String getAttributeText(javax.xml.namespace.QName)>($r22);

        $r24 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFPictureShape: org.apache.poi.xslf.usermodel.XSLFSheet getSheet()>();

        $r25 = virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFPictureShape: org.apache.poi.xslf.usermodel.XSLFSheet getSheet()>();

        $r26 = virtualinvoke $r25.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $r27 = virtualinvoke $r24.<org.apache.poi.xslf.usermodel.XSLFSheet: java.lang.String importBlip(java.lang.String,org.apache.poi.openxml4j.opc.PackagePart)>($r23, $r26);

        $r28 = new javax.xml.namespace.QName;

        specialinvoke $r28.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://schemas.openxmlformats.org/officeDocument/2006/relationships", "embed");

        interfaceinvoke $r21.<org.apache.xmlbeans.XmlCursor: boolean setAttributeText(javax.xml.namespace.QName,java.lang.String)>($r28, $r27);

        interfaceinvoke $r21.<org.apache.xmlbeans.XmlCursor: void dispose()>();

     label3:
        goto label2;

     label4:
        return;
    }
}
