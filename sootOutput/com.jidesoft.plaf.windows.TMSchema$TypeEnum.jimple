public final enum class com.jidesoft.plaf.windows.TMSchema$TypeEnum extends java.lang.Enum
{
    public static final enum com.jidesoft.plaf.windows.TMSchema$TypeEnum BT_IMAGEFILE;
    public static final enum com.jidesoft.plaf.windows.TMSchema$TypeEnum BT_BORDERFILL;
    public static final enum com.jidesoft.plaf.windows.TMSchema$TypeEnum TST_NONE;
    public static final enum com.jidesoft.plaf.windows.TMSchema$TypeEnum TST_SINGLE;
    public static final enum com.jidesoft.plaf.windows.TMSchema$TypeEnum TST_CONTINUOUS;
    private final com.jidesoft.plaf.windows.TMSchema$Prop prop;
    private final java.lang.String enumName;
    private final int value;
    private static final com.jidesoft.plaf.windows.TMSchema$TypeEnum[] $VALUES;

    public static com.jidesoft.plaf.windows.TMSchema$TypeEnum[] values()
    {
        com.jidesoft.plaf.windows.TMSchema$TypeEnum[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <com.jidesoft.plaf.windows.TMSchema$TypeEnum: com.jidesoft.plaf.windows.TMSchema$TypeEnum[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (com.jidesoft.plaf.windows.TMSchema$TypeEnum[]) $r1;

        return $r2;
    }

    public static com.jidesoft.plaf.windows.TMSchema$TypeEnum valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        com.jidesoft.plaf.windows.TMSchema$TypeEnum $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/jidesoft/plaf/windows/TMSchema$TypeEnum;", r0);

        $r2 = (com.jidesoft.plaf.windows.TMSchema$TypeEnum) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, com.jidesoft.plaf.windows.TMSchema$Prop, java.lang.String, int)
    {
        com.jidesoft.plaf.windows.TMSchema$TypeEnum r0;
        int i0, i1;
        com.jidesoft.plaf.windows.TMSchema$Prop r2;
        java.lang.String r1, r3;

        r0 := @this: com.jidesoft.plaf.windows.TMSchema$TypeEnum;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: com.jidesoft.plaf.windows.TMSchema$Prop;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<com.jidesoft.plaf.windows.TMSchema$TypeEnum: com.jidesoft.plaf.windows.TMSchema$Prop prop> = r2;

        r0.<com.jidesoft.plaf.windows.TMSchema$TypeEnum: java.lang.String enumName> = r3;

        r0.<com.jidesoft.plaf.windows.TMSchema$TypeEnum: int value> = i1;

        return;
    }

    public java.lang.String toString()
    {
        com.jidesoft.plaf.windows.TMSchema$TypeEnum r1;
        int $i0;
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7, $r8;
        com.jidesoft.plaf.windows.TMSchema$Prop $r2;
        java.lang.String $r5, $r9;

        r1 := @this: com.jidesoft.plaf.windows.TMSchema$TypeEnum;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<com.jidesoft.plaf.windows.TMSchema$TypeEnum: com.jidesoft.plaf.windows.TMSchema$Prop prop>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r5 = r1.<com.jidesoft.plaf.windows.TMSchema$TypeEnum: java.lang.String enumName>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $i0 = r1.<com.jidesoft.plaf.windows.TMSchema$TypeEnum: int value>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    java.lang.String getName()
    {
        java.lang.String $r1;
        com.jidesoft.plaf.windows.TMSchema$TypeEnum r0;

        r0 := @this: com.jidesoft.plaf.windows.TMSchema$TypeEnum;

        $r1 = r0.<com.jidesoft.plaf.windows.TMSchema$TypeEnum: java.lang.String enumName>;

        return $r1;
    }

    static com.jidesoft.plaf.windows.TMSchema$TypeEnum getTypeEnum(com.jidesoft.plaf.windows.TMSchema$Prop, int)
    {
        com.jidesoft.plaf.windows.TMSchema$TypeEnum r1;
        com.jidesoft.plaf.windows.TMSchema$TypeEnum[] $r0;
        int i0, i1, $i2, i3;
        com.jidesoft.plaf.windows.TMSchema$Prop r2, $r3;

        r2 := @parameter0: com.jidesoft.plaf.windows.TMSchema$Prop;

        i1 := @parameter1: int;

        $r0 = staticinvoke <com.jidesoft.plaf.windows.TMSchema$TypeEnum: com.jidesoft.plaf.windows.TMSchema$TypeEnum[] values()>();

        i0 = lengthof $r0;

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        r1 = $r0[i3];

        $r3 = r1.<com.jidesoft.plaf.windows.TMSchema$TypeEnum: com.jidesoft.plaf.windows.TMSchema$Prop prop>;

        if $r3 != r2 goto label2;

        $i2 = r1.<com.jidesoft.plaf.windows.TMSchema$TypeEnum: int value>;

        if $i2 != i1 goto label2;

        return r1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return null;
    }

    static void <clinit>()
    {
        com.jidesoft.plaf.windows.TMSchema$TypeEnum $r0, $r2, $r4, $r6, $r8, $r11, $r12, $r13, $r14, $r15;
        com.jidesoft.plaf.windows.TMSchema$Prop $r1, $r3, $r5, $r7, $r9;
        com.jidesoft.plaf.windows.TMSchema$TypeEnum[] $r10;

        $r0 = new com.jidesoft.plaf.windows.TMSchema$TypeEnum;

        $r1 = <com.jidesoft.plaf.windows.TMSchema$Prop: com.jidesoft.plaf.windows.TMSchema$Prop BGTYPE>;

        specialinvoke $r0.<com.jidesoft.plaf.windows.TMSchema$TypeEnum: void <init>(java.lang.String,int,com.jidesoft.plaf.windows.TMSchema$Prop,java.lang.String,int)>("BT_IMAGEFILE", 0, $r1, "imagefile", 0);

        <com.jidesoft.plaf.windows.TMSchema$TypeEnum: com.jidesoft.plaf.windows.TMSchema$TypeEnum BT_IMAGEFILE> = $r0;

        $r2 = new com.jidesoft.plaf.windows.TMSchema$TypeEnum;

        $r3 = <com.jidesoft.plaf.windows.TMSchema$Prop: com.jidesoft.plaf.windows.TMSchema$Prop BGTYPE>;

        specialinvoke $r2.<com.jidesoft.plaf.windows.TMSchema$TypeEnum: void <init>(java.lang.String,int,com.jidesoft.plaf.windows.TMSchema$Prop,java.lang.String,int)>("BT_BORDERFILL", 1, $r3, "borderfill", 1);

        <com.jidesoft.plaf.windows.TMSchema$TypeEnum: com.jidesoft.plaf.windows.TMSchema$TypeEnum BT_BORDERFILL> = $r2;

        $r4 = new com.jidesoft.plaf.windows.TMSchema$TypeEnum;

        $r5 = <com.jidesoft.plaf.windows.TMSchema$Prop: com.jidesoft.plaf.windows.TMSchema$Prop TEXTSHADOWTYPE>;

        specialinvoke $r4.<com.jidesoft.plaf.windows.TMSchema$TypeEnum: void <init>(java.lang.String,int,com.jidesoft.plaf.windows.TMSchema$Prop,java.lang.String,int)>("TST_NONE", 2, $r5, "none", 0);

        <com.jidesoft.plaf.windows.TMSchema$TypeEnum: com.jidesoft.plaf.windows.TMSchema$TypeEnum TST_NONE> = $r4;

        $r6 = new com.jidesoft.plaf.windows.TMSchema$TypeEnum;

        $r7 = <com.jidesoft.plaf.windows.TMSchema$Prop: com.jidesoft.plaf.windows.TMSchema$Prop TEXTSHADOWTYPE>;

        specialinvoke $r6.<com.jidesoft.plaf.windows.TMSchema$TypeEnum: void <init>(java.lang.String,int,com.jidesoft.plaf.windows.TMSchema$Prop,java.lang.String,int)>("TST_SINGLE", 3, $r7, "single", 1);

        <com.jidesoft.plaf.windows.TMSchema$TypeEnum: com.jidesoft.plaf.windows.TMSchema$TypeEnum TST_SINGLE> = $r6;

        $r8 = new com.jidesoft.plaf.windows.TMSchema$TypeEnum;

        $r9 = <com.jidesoft.plaf.windows.TMSchema$Prop: com.jidesoft.plaf.windows.TMSchema$Prop TEXTSHADOWTYPE>;

        specialinvoke $r8.<com.jidesoft.plaf.windows.TMSchema$TypeEnum: void <init>(java.lang.String,int,com.jidesoft.plaf.windows.TMSchema$Prop,java.lang.String,int)>("TST_CONTINUOUS", 4, $r9, "continuous", 2);

        <com.jidesoft.plaf.windows.TMSchema$TypeEnum: com.jidesoft.plaf.windows.TMSchema$TypeEnum TST_CONTINUOUS> = $r8;

        $r10 = newarray (com.jidesoft.plaf.windows.TMSchema$TypeEnum)[5];

        $r11 = <com.jidesoft.plaf.windows.TMSchema$TypeEnum: com.jidesoft.plaf.windows.TMSchema$TypeEnum BT_IMAGEFILE>;

        $r10[0] = $r11;

        $r12 = <com.jidesoft.plaf.windows.TMSchema$TypeEnum: com.jidesoft.plaf.windows.TMSchema$TypeEnum BT_BORDERFILL>;

        $r10[1] = $r12;

        $r13 = <com.jidesoft.plaf.windows.TMSchema$TypeEnum: com.jidesoft.plaf.windows.TMSchema$TypeEnum TST_NONE>;

        $r10[2] = $r13;

        $r14 = <com.jidesoft.plaf.windows.TMSchema$TypeEnum: com.jidesoft.plaf.windows.TMSchema$TypeEnum TST_SINGLE>;

        $r10[3] = $r14;

        $r15 = <com.jidesoft.plaf.windows.TMSchema$TypeEnum: com.jidesoft.plaf.windows.TMSchema$TypeEnum TST_CONTINUOUS>;

        $r10[4] = $r15;

        <com.jidesoft.plaf.windows.TMSchema$TypeEnum: com.jidesoft.plaf.windows.TMSchema$TypeEnum[] $VALUES> = $r10;

        return;
    }
}
