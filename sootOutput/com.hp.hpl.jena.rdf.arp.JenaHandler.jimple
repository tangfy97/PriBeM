final class com.hp.hpl.jena.rdf.arp.JenaHandler extends com.hp.hpl.jena.rdf.arp.impl.ARPSaxErrorHandler implements com.hp.hpl.jena.rdf.arp.StatementHandler, com.hp.hpl.jena.rdf.arp.NamespaceHandler
{
    private final com.hp.hpl.jena.shared.PrefixMapping prefixMapping;
    protected int here;
    private final com.hp.hpl.jena.graph.Graph graph;

    public void <init>(com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.rdf.model.RDFErrorHandler)
    {
        com.hp.hpl.jena.rdf.arp.JenaHandler r0;
        com.hp.hpl.jena.rdf.model.Model r1;
        com.hp.hpl.jena.rdf.model.RDFErrorHandler r3;
        com.hp.hpl.jena.graph.Graph $r2;

        r0 := @this: com.hp.hpl.jena.rdf.arp.JenaHandler;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        r3 := @parameter1: com.hp.hpl.jena.rdf.model.RDFErrorHandler;

        $r2 = interfaceinvoke r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.graph.Graph getGraph()>();

        specialinvoke r0.<com.hp.hpl.jena.rdf.arp.JenaHandler: void <init>(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.rdf.model.RDFErrorHandler)>($r2, r3);

        return;
    }

    public void <init>(com.hp.hpl.jena.graph.Graph, com.hp.hpl.jena.rdf.model.Model, com.hp.hpl.jena.rdf.model.RDFErrorHandler)
    {
        com.hp.hpl.jena.rdf.arp.JenaHandler r0;
        com.hp.hpl.jena.rdf.model.Model r2;
        com.hp.hpl.jena.rdf.model.RDFErrorHandler r4;
        com.hp.hpl.jena.graph.Graph r1;
        com.hp.hpl.jena.shared.PrefixMapping $r3;

        r0 := @this: com.hp.hpl.jena.rdf.arp.JenaHandler;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Model;

        r4 := @parameter2: com.hp.hpl.jena.rdf.model.RDFErrorHandler;

        $r3 = staticinvoke <com.hp.hpl.jena.rdf.arp.JenaHandler: com.hp.hpl.jena.shared.PrefixMapping modelToPrefixMapping(com.hp.hpl.jena.rdf.model.Model)>(r2);

        specialinvoke r0.<com.hp.hpl.jena.rdf.arp.JenaHandler: void <init>(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.shared.PrefixMapping,com.hp.hpl.jena.rdf.model.RDFErrorHandler)>(r1, $r3, r4);

        return;
    }

    private void <init>(com.hp.hpl.jena.graph.Graph, com.hp.hpl.jena.rdf.model.RDFErrorHandler)
    {
        com.hp.hpl.jena.rdf.arp.JenaHandler r0;
        com.hp.hpl.jena.rdf.model.RDFErrorHandler r3;
        com.hp.hpl.jena.graph.Graph r1;
        com.hp.hpl.jena.shared.PrefixMapping $r2;

        r0 := @this: com.hp.hpl.jena.rdf.arp.JenaHandler;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r3 := @parameter1: com.hp.hpl.jena.rdf.model.RDFErrorHandler;

        $r2 = interfaceinvoke r1.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping()>();

        specialinvoke r0.<com.hp.hpl.jena.rdf.arp.JenaHandler: void <init>(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.shared.PrefixMapping,com.hp.hpl.jena.rdf.model.RDFErrorHandler)>(r1, $r2, r3);

        return;
    }

    private void <init>(com.hp.hpl.jena.graph.Graph, com.hp.hpl.jena.shared.PrefixMapping, com.hp.hpl.jena.rdf.model.RDFErrorHandler)
    {
        com.hp.hpl.jena.rdf.arp.JenaHandler r0;
        com.hp.hpl.jena.rdf.model.RDFErrorHandler r1;
        com.hp.hpl.jena.graph.Graph r2;
        com.hp.hpl.jena.shared.PrefixMapping r3;

        r0 := @this: com.hp.hpl.jena.rdf.arp.JenaHandler;

        r2 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r3 := @parameter1: com.hp.hpl.jena.shared.PrefixMapping;

        r1 := @parameter2: com.hp.hpl.jena.rdf.model.RDFErrorHandler;

        specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.ARPSaxErrorHandler: void <init>(com.hp.hpl.jena.rdf.model.RDFErrorHandler)>(r1);

        r0.<com.hp.hpl.jena.rdf.arp.JenaHandler: int here> = 0;

        r0.<com.hp.hpl.jena.rdf.arp.JenaHandler: com.hp.hpl.jena.graph.Graph graph> = r2;

        r0.<com.hp.hpl.jena.rdf.arp.JenaHandler: com.hp.hpl.jena.shared.PrefixMapping prefixMapping> = r3;

        return;
    }

    private static com.hp.hpl.jena.shared.PrefixMapping modelToPrefixMapping(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.rdf.model.Model r0;
        com.hp.hpl.jena.graph.Graph $r1;
        com.hp.hpl.jena.shared.PrefixMapping $r2;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        if r0 != null goto label1;

        $r2 = staticinvoke <com.hp.hpl.jena.shared.PrefixMapping$Factory: com.hp.hpl.jena.shared.PrefixMapping create()>();

        goto label2;

     label1:
        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.graph.Graph getGraph()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping()>();

     label2:
        return $r2;
    }

    public void useWith(com.hp.hpl.jena.rdf.arp.ARPHandlers)
    {
        com.hp.hpl.jena.rdf.arp.JenaHandler r1;
        com.hp.hpl.jena.rdf.arp.ARPHandlers r0;

        r1 := @this: com.hp.hpl.jena.rdf.arp.JenaHandler;

        r0 := @parameter0: com.hp.hpl.jena.rdf.arp.ARPHandlers;

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.ARPHandlers: com.hp.hpl.jena.rdf.arp.StatementHandler setStatementHandler(com.hp.hpl.jena.rdf.arp.StatementHandler)>(r1);

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.ARPHandlers: org.xml.sax.ErrorHandler setErrorHandler(org.xml.sax.ErrorHandler)>(r1);

        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.ARPHandlers: com.hp.hpl.jena.rdf.arp.NamespaceHandler setNamespaceHandler(com.hp.hpl.jena.rdf.arp.NamespaceHandler)>(r1);

        return;
    }

    public void statement(com.hp.hpl.jena.rdf.arp.AResource, com.hp.hpl.jena.rdf.arp.AResource, com.hp.hpl.jena.rdf.arp.AResource)
    {
        com.hp.hpl.jena.rdf.arp.AResource r0, r1, r2;
        com.hp.hpl.jena.shared.JenaException $r6;
        com.hp.hpl.jena.graph.Triple $r3;
        com.hp.hpl.jena.rdf.arp.JenaHandler r4;
        com.hp.hpl.jena.rdf.model.RDFErrorHandler $r7;
        com.hp.hpl.jena.graph.Graph $r5;

        r4 := @this: com.hp.hpl.jena.rdf.arp.JenaHandler;

        r0 := @parameter0: com.hp.hpl.jena.rdf.arp.AResource;

        r1 := @parameter1: com.hp.hpl.jena.rdf.arp.AResource;

        r2 := @parameter2: com.hp.hpl.jena.rdf.arp.AResource;

     label1:
        $r3 = staticinvoke <com.hp.hpl.jena.rdf.arp.JenaReader: com.hp.hpl.jena.graph.Triple convert(com.hp.hpl.jena.rdf.arp.AResource,com.hp.hpl.jena.rdf.arp.AResource,com.hp.hpl.jena.rdf.arp.AResource)>(r0, r1, r2);

        $r5 = r4.<com.hp.hpl.jena.rdf.arp.JenaHandler: com.hp.hpl.jena.graph.Graph graph>;

        interfaceinvoke $r5.<com.hp.hpl.jena.graph.Graph: void add(com.hp.hpl.jena.graph.Triple)>($r3);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = r4.<com.hp.hpl.jena.rdf.arp.JenaHandler: com.hp.hpl.jena.rdf.model.RDFErrorHandler errorHandler>;

        interfaceinvoke $r7.<com.hp.hpl.jena.rdf.model.RDFErrorHandler: void error(java.lang.Exception)>($r6);

     label4:
        return;

        catch com.hp.hpl.jena.shared.JenaException from label1 to label2 with label3;
    }

    public void statement(com.hp.hpl.jena.rdf.arp.AResource, com.hp.hpl.jena.rdf.arp.AResource, com.hp.hpl.jena.rdf.arp.ALiteral)
    {
        com.hp.hpl.jena.rdf.arp.AResource r0, r1;
        com.hp.hpl.jena.shared.JenaException $r6;
        com.hp.hpl.jena.graph.Triple $r3;
        com.hp.hpl.jena.rdf.arp.JenaHandler r4;
        com.hp.hpl.jena.rdf.model.RDFErrorHandler $r7;
        com.hp.hpl.jena.rdf.arp.ALiteral r2;
        com.hp.hpl.jena.graph.Graph $r5;

        r4 := @this: com.hp.hpl.jena.rdf.arp.JenaHandler;

        r0 := @parameter0: com.hp.hpl.jena.rdf.arp.AResource;

        r1 := @parameter1: com.hp.hpl.jena.rdf.arp.AResource;

        r2 := @parameter2: com.hp.hpl.jena.rdf.arp.ALiteral;

     label1:
        $r3 = staticinvoke <com.hp.hpl.jena.rdf.arp.JenaReader: com.hp.hpl.jena.graph.Triple convert(com.hp.hpl.jena.rdf.arp.AResource,com.hp.hpl.jena.rdf.arp.AResource,com.hp.hpl.jena.rdf.arp.ALiteral)>(r0, r1, r2);

        $r5 = r4.<com.hp.hpl.jena.rdf.arp.JenaHandler: com.hp.hpl.jena.graph.Graph graph>;

        interfaceinvoke $r5.<com.hp.hpl.jena.graph.Graph: void add(com.hp.hpl.jena.graph.Triple)>($r3);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = r4.<com.hp.hpl.jena.rdf.arp.JenaHandler: com.hp.hpl.jena.rdf.model.RDFErrorHandler errorHandler>;

        interfaceinvoke $r7.<com.hp.hpl.jena.rdf.model.RDFErrorHandler: void error(java.lang.Exception)>($r6);

     label4:
        return;

        catch com.hp.hpl.jena.shared.JenaException from label1 to label2 with label3;
    }

    public void startPrefixMapping(java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.rdf.arp.JenaHandler r1;
        java.lang.String r0, r2;
        com.hp.hpl.jena.shared.PrefixMapping $r3;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.rdf.arp.JenaHandler;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $z0 = staticinvoke <com.hp.hpl.jena.shared.impl.PrefixMappingImpl: boolean isNiceURI(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r3 = r1.<com.hp.hpl.jena.rdf.arp.JenaHandler: com.hp.hpl.jena.shared.PrefixMapping prefixMapping>;

        interfaceinvoke $r3.<com.hp.hpl.jena.shared.PrefixMapping: com.hp.hpl.jena.shared.PrefixMapping setNsPrefix(java.lang.String,java.lang.String)>(r2, r0);

     label1:
        return;
    }

    public void endPrefixMapping(java.lang.String)
    {
        com.hp.hpl.jena.rdf.arp.JenaHandler r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.rdf.arp.JenaHandler;

        r1 := @parameter0: java.lang.String;

        return;
    }
}
