public class org.apache.velocity.runtime.directive.ForeachScope extends org.apache.velocity.runtime.directive.Scope
{
    protected int index;
    protected boolean hasNext;

    public void <init>(java.lang.Object, java.lang.Object)
    {
        org.apache.velocity.runtime.directive.ForeachScope r0;
        int $i1;
        java.lang.Object r1, r2;

        r0 := @this: org.apache.velocity.runtime.directive.ForeachScope;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.apache.velocity.runtime.directive.Scope: void <init>(java.lang.Object,java.lang.Object)>(r1, r2);

        $i1 = (int) -1;

        r0.<org.apache.velocity.runtime.directive.ForeachScope: int index> = $i1;

        r0.<org.apache.velocity.runtime.directive.ForeachScope: boolean hasNext> = 0;

        return;
    }

    public int getIndex()
    {
        int $i0;
        org.apache.velocity.runtime.directive.ForeachScope r0;

        r0 := @this: org.apache.velocity.runtime.directive.ForeachScope;

        $i0 = r0.<org.apache.velocity.runtime.directive.ForeachScope: int index>;

        return $i0;
    }

    public int getCount()
    {
        int $i0, $i1;
        org.apache.velocity.runtime.directive.ForeachScope r0;

        r0 := @this: org.apache.velocity.runtime.directive.ForeachScope;

        $i0 = r0.<org.apache.velocity.runtime.directive.ForeachScope: int index>;

        $i1 = $i0 + 1;

        return $i1;
    }

    public boolean hasNext()
    {
        org.apache.velocity.runtime.directive.ForeachScope r0;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.directive.ForeachScope;

        $z0 = virtualinvoke r0.<org.apache.velocity.runtime.directive.ForeachScope: boolean getHasNext()>();

        return $z0;
    }

    public boolean getHasNext()
    {
        org.apache.velocity.runtime.directive.ForeachScope r0;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.directive.ForeachScope;

        $z0 = r0.<org.apache.velocity.runtime.directive.ForeachScope: boolean hasNext>;

        return $z0;
    }

    public boolean isFirst()
    {
        int $i0;
        org.apache.velocity.runtime.directive.ForeachScope r0;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.directive.ForeachScope;

        $i0 = r0.<org.apache.velocity.runtime.directive.ForeachScope: int index>;

        if $i0 >= 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean getFirst()
    {
        org.apache.velocity.runtime.directive.ForeachScope r0;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.directive.ForeachScope;

        $z0 = virtualinvoke r0.<org.apache.velocity.runtime.directive.ForeachScope: boolean isFirst()>();

        return $z0;
    }

    public boolean isLast()
    {
        org.apache.velocity.runtime.directive.ForeachScope r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.velocity.runtime.directive.ForeachScope;

        $z0 = r0.<org.apache.velocity.runtime.directive.ForeachScope: boolean hasNext>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean getLast()
    {
        org.apache.velocity.runtime.directive.ForeachScope r0;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.directive.ForeachScope;

        $z0 = virtualinvoke r0.<org.apache.velocity.runtime.directive.ForeachScope: boolean isLast()>();

        return $z0;
    }
}
