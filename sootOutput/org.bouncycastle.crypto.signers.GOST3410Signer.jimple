public class org.bouncycastle.crypto.signers.GOST3410Signer extends java.lang.Object implements org.bouncycastle.crypto.DSA
{
    org.bouncycastle.crypto.params.GOST3410KeyParameters key;
    java.security.SecureRandom random;

    public void <init>()
    {
        org.bouncycastle.crypto.signers.GOST3410Signer r0;

        r0 := @this: org.bouncycastle.crypto.signers.GOST3410Signer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters)
    {
        java.security.SecureRandom $r3, $r6;
        org.bouncycastle.crypto.params.GOST3410PublicKeyParameters $r2;
        org.bouncycastle.crypto.params.ParametersWithRandom r5;
        org.bouncycastle.crypto.signers.GOST3410Signer r0;
        org.bouncycastle.crypto.params.GOST3410PrivateKeyParameters $r4, $r8;
        boolean z0, $z1;
        org.bouncycastle.crypto.CipherParameters r1, $r7;

        r0 := @this: org.bouncycastle.crypto.signers.GOST3410Signer;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        if z0 == 0 goto label2;

        $z1 = r1 instanceof org.bouncycastle.crypto.params.ParametersWithRandom;

        if $z1 == 0 goto label1;

        r5 = (org.bouncycastle.crypto.params.ParametersWithRandom) r1;

        $r6 = virtualinvoke r5.<org.bouncycastle.crypto.params.ParametersWithRandom: java.security.SecureRandom getRandom()>();

        r0.<org.bouncycastle.crypto.signers.GOST3410Signer: java.security.SecureRandom random> = $r6;

        $r7 = virtualinvoke r5.<org.bouncycastle.crypto.params.ParametersWithRandom: org.bouncycastle.crypto.CipherParameters getParameters()>();

        $r8 = (org.bouncycastle.crypto.params.GOST3410PrivateKeyParameters) $r7;

        r0.<org.bouncycastle.crypto.signers.GOST3410Signer: org.bouncycastle.crypto.params.GOST3410KeyParameters key> = $r8;

        goto label3;

     label1:
        $r3 = new java.security.SecureRandom;

        specialinvoke $r3.<java.security.SecureRandom: void <init>()>();

        r0.<org.bouncycastle.crypto.signers.GOST3410Signer: java.security.SecureRandom random> = $r3;

        $r4 = (org.bouncycastle.crypto.params.GOST3410PrivateKeyParameters) r1;

        r0.<org.bouncycastle.crypto.signers.GOST3410Signer: org.bouncycastle.crypto.params.GOST3410KeyParameters key> = $r4;

        goto label3;

     label2:
        $r2 = (org.bouncycastle.crypto.params.GOST3410PublicKeyParameters) r1;

        r0.<org.bouncycastle.crypto.signers.GOST3410Signer: org.bouncycastle.crypto.params.GOST3410KeyParameters key> = $r2;

     label3:
        return;
    }

    public java.math.BigInteger[] generateSignature(byte[])
    {
        byte[] r0, r1;
        java.security.SecureRandom $r8;
        byte $b7;
        java.math.BigInteger $r2, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r18, $r19, $r20, $r21, $r22;
        org.bouncycastle.crypto.signers.GOST3410Signer r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i8;
        org.bouncycastle.crypto.params.GOST3410PrivateKeyParameters $r17;
        org.bouncycastle.crypto.params.GOST3410Parameters $r5;
        org.bouncycastle.crypto.params.GOST3410KeyParameters $r4, $r16;
        java.math.BigInteger[] r23;

        r3 := @this: org.bouncycastle.crypto.signers.GOST3410Signer;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        r1 = newarray (byte)[$i0];

        i8 = 0;

     label1:
        $i1 = lengthof r1;

        if i8 == $i1 goto label2;

        $i4 = lengthof r1;

        $i5 = $i4 - 1;

        $i6 = $i5 - i8;

        $b7 = r0[$i6];

        r1[i8] = $b7;

        i8 = i8 + 1;

        goto label1;

     label2:
        $r2 = new java.math.BigInteger;

        specialinvoke $r2.<java.math.BigInteger: void <init>(int,byte[])>(1, r1);

        $r4 = r3.<org.bouncycastle.crypto.signers.GOST3410Signer: org.bouncycastle.crypto.params.GOST3410KeyParameters key>;

        $r5 = virtualinvoke $r4.<org.bouncycastle.crypto.params.GOST3410KeyParameters: org.bouncycastle.crypto.params.GOST3410Parameters getParameters()>();

     label3:
        $r6 = new java.math.BigInteger;

        $r7 = virtualinvoke $r5.<org.bouncycastle.crypto.params.GOST3410Parameters: java.math.BigInteger getQ()>();

        $i2 = virtualinvoke $r7.<java.math.BigInteger: int bitLength()>();

        $r8 = r3.<org.bouncycastle.crypto.signers.GOST3410Signer: java.security.SecureRandom random>;

        specialinvoke $r6.<java.math.BigInteger: void <init>(int,java.util.Random)>($i2, $r8);

        $r9 = virtualinvoke $r5.<org.bouncycastle.crypto.params.GOST3410Parameters: java.math.BigInteger getQ()>();

        $i3 = virtualinvoke $r6.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r9);

        if $i3 >= 0 goto label3;

        $r10 = virtualinvoke $r5.<org.bouncycastle.crypto.params.GOST3410Parameters: java.math.BigInteger getA()>();

        $r11 = virtualinvoke $r5.<org.bouncycastle.crypto.params.GOST3410Parameters: java.math.BigInteger getP()>();

        $r12 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r6, $r11);

        $r13 = virtualinvoke $r5.<org.bouncycastle.crypto.params.GOST3410Parameters: java.math.BigInteger getQ()>();

        $r14 = virtualinvoke $r12.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r13);

        $r15 = virtualinvoke $r6.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r2);

        $r16 = r3.<org.bouncycastle.crypto.signers.GOST3410Signer: org.bouncycastle.crypto.params.GOST3410KeyParameters key>;

        $r17 = (org.bouncycastle.crypto.params.GOST3410PrivateKeyParameters) $r16;

        $r18 = virtualinvoke $r17.<org.bouncycastle.crypto.params.GOST3410PrivateKeyParameters: java.math.BigInteger getX()>();

        $r19 = virtualinvoke $r18.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r14);

        $r20 = virtualinvoke $r15.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r19);

        $r21 = virtualinvoke $r5.<org.bouncycastle.crypto.params.GOST3410Parameters: java.math.BigInteger getQ()>();

        $r22 = virtualinvoke $r20.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r21);

        r23 = newarray (java.math.BigInteger)[2];

        r23[0] = $r14;

        r23[1] = $r22;

        return r23;
    }

    public boolean verifySignature(byte[], java.math.BigInteger, java.math.BigInteger)
    {
        byte[] r0, r1;
        byte $b9;
        java.math.BigInteger $r2, $r6, r7, $r8, r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36;
        org.bouncycastle.crypto.signers.GOST3410Signer r3;
        boolean $z0;
        org.bouncycastle.crypto.params.GOST3410PublicKeyParameters $r28;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i10;
        org.bouncycastle.crypto.params.GOST3410Parameters $r5;
        org.bouncycastle.crypto.params.GOST3410KeyParameters $r4, $r27;

        r3 := @this: org.bouncycastle.crypto.signers.GOST3410Signer;

        r0 := @parameter0: byte[];

        r7 := @parameter1: java.math.BigInteger;

        r9 := @parameter2: java.math.BigInteger;

        $i0 = lengthof r0;

        r1 = newarray (byte)[$i0];

        i10 = 0;

     label1:
        $i1 = lengthof r1;

        if i10 == $i1 goto label2;

        $i6 = lengthof r1;

        $i7 = $i6 - 1;

        $i8 = $i7 - i10;

        $b9 = r0[$i8];

        r1[i10] = $b9;

        i10 = i10 + 1;

        goto label1;

     label2:
        $r2 = new java.math.BigInteger;

        specialinvoke $r2.<java.math.BigInteger: void <init>(int,byte[])>(1, r1);

        $r4 = r3.<org.bouncycastle.crypto.signers.GOST3410Signer: org.bouncycastle.crypto.params.GOST3410KeyParameters key>;

        $r5 = virtualinvoke $r4.<org.bouncycastle.crypto.params.GOST3410KeyParameters: org.bouncycastle.crypto.params.GOST3410Parameters getParameters()>();

        $r6 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(0L);

        $i2 = virtualinvoke $r6.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r7);

        if $i2 >= 0 goto label3;

        $r8 = virtualinvoke $r5.<org.bouncycastle.crypto.params.GOST3410Parameters: java.math.BigInteger getQ()>();

        $i3 = virtualinvoke $r8.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r7);

        if $i3 > 0 goto label4;

     label3:
        return 0;

     label4:
        $i4 = virtualinvoke $r6.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r9);

        if $i4 >= 0 goto label5;

        $r10 = virtualinvoke $r5.<org.bouncycastle.crypto.params.GOST3410Parameters: java.math.BigInteger getQ()>();

        $i5 = virtualinvoke $r10.<java.math.BigInteger: int compareTo(java.math.BigInteger)>(r9);

        if $i5 > 0 goto label6;

     label5:
        return 0;

     label6:
        $r11 = virtualinvoke $r5.<org.bouncycastle.crypto.params.GOST3410Parameters: java.math.BigInteger getQ()>();

        $r12 = new java.math.BigInteger;

        specialinvoke $r12.<java.math.BigInteger: void <init>(java.lang.String)>("2");

        $r13 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r12);

        $r14 = virtualinvoke $r5.<org.bouncycastle.crypto.params.GOST3410Parameters: java.math.BigInteger getQ()>();

        $r15 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r13, $r14);

        $r16 = virtualinvoke r9.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r15);

        $r17 = virtualinvoke $r5.<org.bouncycastle.crypto.params.GOST3410Parameters: java.math.BigInteger getQ()>();

        $r18 = virtualinvoke $r16.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r17);

        $r19 = virtualinvoke $r5.<org.bouncycastle.crypto.params.GOST3410Parameters: java.math.BigInteger getQ()>();

        $r20 = virtualinvoke $r19.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r7);

        $r21 = virtualinvoke $r20.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r15);

        $r22 = virtualinvoke $r5.<org.bouncycastle.crypto.params.GOST3410Parameters: java.math.BigInteger getQ()>();

        $r23 = virtualinvoke $r21.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r22);

        $r24 = virtualinvoke $r5.<org.bouncycastle.crypto.params.GOST3410Parameters: java.math.BigInteger getA()>();

        $r25 = virtualinvoke $r5.<org.bouncycastle.crypto.params.GOST3410Parameters: java.math.BigInteger getP()>();

        $r26 = virtualinvoke $r24.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r18, $r25);

        $r27 = r3.<org.bouncycastle.crypto.signers.GOST3410Signer: org.bouncycastle.crypto.params.GOST3410KeyParameters key>;

        $r28 = (org.bouncycastle.crypto.params.GOST3410PublicKeyParameters) $r27;

        $r29 = virtualinvoke $r28.<org.bouncycastle.crypto.params.GOST3410PublicKeyParameters: java.math.BigInteger getY()>();

        $r30 = virtualinvoke $r5.<org.bouncycastle.crypto.params.GOST3410Parameters: java.math.BigInteger getP()>();

        $r31 = virtualinvoke $r29.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r23, $r30);

        $r32 = virtualinvoke $r26.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r31);

        $r33 = virtualinvoke $r5.<org.bouncycastle.crypto.params.GOST3410Parameters: java.math.BigInteger getP()>();

        $r34 = virtualinvoke $r32.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r33);

        $r35 = virtualinvoke $r5.<org.bouncycastle.crypto.params.GOST3410Parameters: java.math.BigInteger getQ()>();

        $r36 = virtualinvoke $r34.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r35);

        $z0 = virtualinvoke $r36.<java.math.BigInteger: boolean equals(java.lang.Object)>(r7);

        return $z0;
    }
}
