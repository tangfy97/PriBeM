class org.codehaus.groovy.binding.SwingTimerFullBinding extends org.codehaus.groovy.binding.AbstractFullBinding implements java.awt.event.ActionListener
{
    javax.swing.Timer timer;
    long startTime;
    long duration;
    int stepSize;
    boolean reportSteps;
    boolean reportFraction;
    boolean reportElapsed;
    boolean repeat;
    boolean bound;

    void <init>(org.codehaus.groovy.binding.ClosureSourceBinding, org.codehaus.groovy.binding.TargetBinding)
    {
        org.codehaus.groovy.binding.SwingTimerFullBinding r0;
        org.codehaus.groovy.binding.TargetBinding r2;
        org.codehaus.groovy.binding.ClosureSourceBinding r1;

        r0 := @this: org.codehaus.groovy.binding.SwingTimerFullBinding;

        r1 := @parameter0: org.codehaus.groovy.binding.ClosureSourceBinding;

        r2 := @parameter1: org.codehaus.groovy.binding.TargetBinding;

        specialinvoke r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: void <init>(org.codehaus.groovy.binding.SourceBinding,org.codehaus.groovy.binding.TargetBinding,int,int)>(r1, r2, 50, 1000);

        return;
    }

    void <init>(org.codehaus.groovy.binding.SourceBinding, org.codehaus.groovy.binding.TargetBinding, int, int)
    {
        org.codehaus.groovy.binding.TargetBinding r2;
        long $l2;
        org.codehaus.groovy.binding.SwingTimerFullBinding r0;
        int i0, i1;
        org.codehaus.groovy.binding.SourceBinding r1;
        javax.swing.Timer $r3, $r4, $r5;

        r0 := @this: org.codehaus.groovy.binding.SwingTimerFullBinding;

        r1 := @parameter0: org.codehaus.groovy.binding.SourceBinding;

        r2 := @parameter1: org.codehaus.groovy.binding.TargetBinding;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<org.codehaus.groovy.binding.AbstractFullBinding: void <init>()>();

        virtualinvoke r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: void setSourceBinding(org.codehaus.groovy.binding.SourceBinding)>(r1);

        virtualinvoke r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: void setTargetBinding(org.codehaus.groovy.binding.TargetBinding)>(r2);

        $r3 = new javax.swing.Timer;

        specialinvoke $r3.<javax.swing.Timer: void <init>(int,java.awt.event.ActionListener)>(i0, r0);

        r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: javax.swing.Timer timer> = $r3;

        $r4 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: javax.swing.Timer timer>;

        virtualinvoke $r4.<javax.swing.Timer: void setInitialDelay(int)>(0);

        $r5 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: javax.swing.Timer timer>;

        virtualinvoke $r5.<javax.swing.Timer: void setRepeats(boolean)>(1);

        $l2 = (long) i1;

        r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: long duration> = $l2;

        return;
    }

    void resetTimer()
    {
        org.codehaus.groovy.binding.SwingTimerFullBinding r0;
        long $l0;
        javax.swing.Timer $r1, $r2;

        r0 := @this: org.codehaus.groovy.binding.SwingTimerFullBinding;

        $r1 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: javax.swing.Timer timer>;

        virtualinvoke $r1.<javax.swing.Timer: void stop()>();

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: long startTime> = $l0;

        $r2 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: javax.swing.Timer timer>;

        virtualinvoke $r2.<javax.swing.Timer: void start()>();

        return;
    }

    public void bind()
    {
        org.codehaus.groovy.binding.SwingTimerFullBinding r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.binding.SwingTimerFullBinding;

        $z0 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: boolean bound>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: void resetTimer()>();

        r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: boolean bound> = 1;

     label1:
        return;
    }

    public void unbind()
    {
        org.codehaus.groovy.binding.SwingTimerFullBinding r0;
        boolean $z0;
        javax.swing.Timer $r1;

        r0 := @this: org.codehaus.groovy.binding.SwingTimerFullBinding;

        $z0 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: boolean bound>;

        if $z0 == 0 goto label1;

        $r1 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: javax.swing.Timer timer>;

        virtualinvoke $r1.<javax.swing.Timer: void stop()>();

        r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: boolean bound> = 0;

     label1:
        return;
    }

    public void rebind()
    {
        org.codehaus.groovy.binding.SwingTimerFullBinding r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.binding.SwingTimerFullBinding;

        $z0 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: boolean bound>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: void resetTimer()>();

     label1:
        return;
    }

    public void actionPerformed(java.awt.event.ActionEvent)
    {
        java.lang.Float $r13;
        org.codehaus.groovy.binding.ClosureSourceBinding $r3, $r6, $r9;
        long $l0, $l1, $l2, $l4, $l6, $l7, l9;
        java.lang.Integer $r12;
        byte $b3;
        java.lang.Long $r14;
        int $i5, $i8, $i10;
        org.codehaus.groovy.binding.SourceBinding $r1, $r4, $r7;
        boolean $z0, $z1, $z2, $z3;
        javax.swing.Timer $r10;
        java.awt.event.ActionEvent r11;
        org.codehaus.groovy.binding.SwingTimerFullBinding r0;
        float $f0, $f1, $f2;

        r0 := @this: org.codehaus.groovy.binding.SwingTimerFullBinding;

        r11 := @parameter0: java.awt.event.ActionEvent;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: long startTime>;

        l9 = $l0 - $l1;

        $l2 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: long duration>;

        $b3 = l9 cmp $l2;

        $i10 = (int) $b3;

        if $i10 < 0 goto label3;

        $z2 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: boolean repeat>;

        if $z2 == 0 goto label1;

        r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: long startTime> = $l0;

        goto label2;

     label1:
        $r10 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: javax.swing.Timer timer>;

        virtualinvoke $r10.<javax.swing.Timer: void stop()>();

     label2:
        l9 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: long duration>;

     label3:
        $z3 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: boolean reportSteps>;

        if $z3 == 0 goto label4;

        $r7 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: org.codehaus.groovy.binding.SourceBinding sourceBinding>;

        $r9 = (org.codehaus.groovy.binding.ClosureSourceBinding) $r7;

        $r12 = new java.lang.Integer;

        $i5 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: int stepSize>;

        $l6 = (long) $i5;

        $l7 = l9 / $l6;

        $i8 = (int) $l7;

        specialinvoke $r12.<java.lang.Integer: void <init>(int)>($i8);

        virtualinvoke $r9.<org.codehaus.groovy.binding.ClosureSourceBinding: void setClosureArgument(java.lang.Object)>($r12);

        goto label6;

     label4:
        $z0 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: boolean reportFraction>;

        if $z0 == 0 goto label5;

        $r4 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: org.codehaus.groovy.binding.SourceBinding sourceBinding>;

        $r6 = (org.codehaus.groovy.binding.ClosureSourceBinding) $r4;

        $r13 = new java.lang.Float;

        $f1 = (float) l9;

        $l4 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: long duration>;

        $f0 = (float) $l4;

        $f2 = $f1 / $f0;

        specialinvoke $r13.<java.lang.Float: void <init>(float)>($f2);

        virtualinvoke $r6.<org.codehaus.groovy.binding.ClosureSourceBinding: void setClosureArgument(java.lang.Object)>($r13);

        goto label6;

     label5:
        $z1 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: boolean reportElapsed>;

        if $z1 == 0 goto label6;

        $r1 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: org.codehaus.groovy.binding.SourceBinding sourceBinding>;

        $r3 = (org.codehaus.groovy.binding.ClosureSourceBinding) $r1;

        $r14 = new java.lang.Long;

        specialinvoke $r14.<java.lang.Long: void <init>(long)>(l9);

        virtualinvoke $r3.<org.codehaus.groovy.binding.ClosureSourceBinding: void setClosureArgument(java.lang.Object)>($r14);

     label6:
        virtualinvoke r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: void update()>();

        return;
    }

    public long getDuration()
    {
        long $l0;
        org.codehaus.groovy.binding.SwingTimerFullBinding r0;

        r0 := @this: org.codehaus.groovy.binding.SwingTimerFullBinding;

        $l0 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: long duration>;

        return $l0;
    }

    public void setDuration(long)
    {
        long l0;
        org.codehaus.groovy.binding.SwingTimerFullBinding r0;

        r0 := @this: org.codehaus.groovy.binding.SwingTimerFullBinding;

        l0 := @parameter0: long;

        r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: long duration> = l0;

        return;
    }

    public int getInterval()
    {
        int $i0;
        org.codehaus.groovy.binding.SwingTimerFullBinding r0;
        javax.swing.Timer $r1;

        r0 := @this: org.codehaus.groovy.binding.SwingTimerFullBinding;

        $r1 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: javax.swing.Timer timer>;

        $i0 = virtualinvoke $r1.<javax.swing.Timer: int getDelay()>();

        return $i0;
    }

    public void setInterval(int)
    {
        int i0;
        org.codehaus.groovy.binding.SwingTimerFullBinding r0;
        javax.swing.Timer $r1;

        r0 := @this: org.codehaus.groovy.binding.SwingTimerFullBinding;

        i0 := @parameter0: int;

        $r1 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: javax.swing.Timer timer>;

        virtualinvoke $r1.<javax.swing.Timer: void setDelay(int)>(i0);

        return;
    }

    public int getStepSize()
    {
        int $i0;
        org.codehaus.groovy.binding.SwingTimerFullBinding r0;

        r0 := @this: org.codehaus.groovy.binding.SwingTimerFullBinding;

        $i0 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: int stepSize>;

        return $i0;
    }

    public void setStepSize(int)
    {
        int i0;
        org.codehaus.groovy.binding.SwingTimerFullBinding r0;

        r0 := @this: org.codehaus.groovy.binding.SwingTimerFullBinding;

        i0 := @parameter0: int;

        r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: int stepSize> = i0;

        return;
    }

    public boolean isCoalesce()
    {
        org.codehaus.groovy.binding.SwingTimerFullBinding r0;
        javax.swing.Timer $r1;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.binding.SwingTimerFullBinding;

        $r1 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: javax.swing.Timer timer>;

        $z0 = virtualinvoke $r1.<javax.swing.Timer: boolean isCoalesce()>();

        return $z0;
    }

    public void setCoalesce(boolean)
    {
        org.codehaus.groovy.binding.SwingTimerFullBinding r0;
        boolean z0;
        javax.swing.Timer $r1;

        r0 := @this: org.codehaus.groovy.binding.SwingTimerFullBinding;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: javax.swing.Timer timer>;

        virtualinvoke $r1.<javax.swing.Timer: void setCoalesce(boolean)>(z0);

        return;
    }

    public boolean isReportSteps()
    {
        org.codehaus.groovy.binding.SwingTimerFullBinding r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.binding.SwingTimerFullBinding;

        $z0 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: boolean reportSteps>;

        return $z0;
    }

    public void setReportSteps(boolean)
    {
        org.codehaus.groovy.binding.SwingTimerFullBinding r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.binding.SwingTimerFullBinding;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: boolean reportSteps> = z0;

        return;
    }

    public boolean isReportFraction()
    {
        org.codehaus.groovy.binding.SwingTimerFullBinding r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.binding.SwingTimerFullBinding;

        $z0 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: boolean reportFraction>;

        return $z0;
    }

    public void setReportFraction(boolean)
    {
        org.codehaus.groovy.binding.SwingTimerFullBinding r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.binding.SwingTimerFullBinding;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: boolean reportFraction> = z0;

        return;
    }

    public boolean isReportElapsed()
    {
        org.codehaus.groovy.binding.SwingTimerFullBinding r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.binding.SwingTimerFullBinding;

        $z0 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: boolean reportElapsed>;

        return $z0;
    }

    public void setReportElapsed(boolean)
    {
        org.codehaus.groovy.binding.SwingTimerFullBinding r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.binding.SwingTimerFullBinding;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: boolean reportElapsed> = z0;

        return;
    }

    public boolean isRepeat()
    {
        org.codehaus.groovy.binding.SwingTimerFullBinding r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.binding.SwingTimerFullBinding;

        $z0 = r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: boolean repeat>;

        return $z0;
    }

    public void setRepeat(boolean)
    {
        org.codehaus.groovy.binding.SwingTimerFullBinding r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.binding.SwingTimerFullBinding;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.binding.SwingTimerFullBinding: boolean repeat> = z0;

        return;
    }
}
