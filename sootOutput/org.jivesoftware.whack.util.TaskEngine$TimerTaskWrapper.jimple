class org.jivesoftware.whack.util.TaskEngine$TimerTaskWrapper extends java.util.TimerTask
{
    private java.util.TimerTask task;
    final org.jivesoftware.whack.util.TaskEngine this$0;

    public void <init>(org.jivesoftware.whack.util.TaskEngine, java.util.TimerTask)
    {
        org.jivesoftware.whack.util.TaskEngine$TimerTaskWrapper r0;
        java.util.TimerTask r2;
        org.jivesoftware.whack.util.TaskEngine r1;

        r0 := @this: org.jivesoftware.whack.util.TaskEngine$TimerTaskWrapper;

        r1 := @parameter0: org.jivesoftware.whack.util.TaskEngine;

        r2 := @parameter1: java.util.TimerTask;

        r0.<org.jivesoftware.whack.util.TaskEngine$TimerTaskWrapper: org.jivesoftware.whack.util.TaskEngine this$0> = r1;

        specialinvoke r0.<java.util.TimerTask: void <init>()>();

        r0.<org.jivesoftware.whack.util.TaskEngine$TimerTaskWrapper: java.util.TimerTask task> = r2;

        return;
    }

    public void run()
    {
        org.jivesoftware.whack.util.TaskEngine $r1;
        org.jivesoftware.whack.util.TaskEngine$TimerTaskWrapper r0;
        java.util.TimerTask $r3;
        java.util.concurrent.ExecutorService $r2;

        r0 := @this: org.jivesoftware.whack.util.TaskEngine$TimerTaskWrapper;

        $r1 = r0.<org.jivesoftware.whack.util.TaskEngine$TimerTaskWrapper: org.jivesoftware.whack.util.TaskEngine this$0>;

        $r2 = staticinvoke <org.jivesoftware.whack.util.TaskEngine: java.util.concurrent.ExecutorService access$000(org.jivesoftware.whack.util.TaskEngine)>($r1);

        $r3 = r0.<org.jivesoftware.whack.util.TaskEngine$TimerTaskWrapper: java.util.TimerTask task>;

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r3);

        return;
    }
}
