public class com.sun.xml.bind.v2.runtime.reflect.Accessor$SetterOnlyReflection extends com.sun.xml.bind.v2.runtime.reflect.Accessor$GetterSetterReflection
{

    public void <init>(java.lang.reflect.Method)
    {
        java.lang.reflect.Method r1;
        com.sun.xml.bind.v2.runtime.reflect.Accessor$SetterOnlyReflection r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.reflect.Accessor$SetterOnlyReflection;

        r1 := @parameter0: java.lang.reflect.Method;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.reflect.Accessor$GetterSetterReflection: void <init>(java.lang.reflect.Method,java.lang.reflect.Method)>(null, r1);

        return;
    }

    public java.lang.Object get(java.lang.Object) throws com.sun.xml.bind.api.AccessorException
    {
        java.lang.Object[] $r1;
        com.sun.xml.bind.v2.runtime.reflect.Messages $r4;
        com.sun.xml.bind.v2.runtime.reflect.Accessor$SetterOnlyReflection r2;
        java.lang.Object r7;
        java.lang.String $r5, $r6;
        com.sun.xml.bind.api.AccessorException $r0;
        java.lang.reflect.Method $r3;

        r2 := @this: com.sun.xml.bind.v2.runtime.reflect.Accessor$SetterOnlyReflection;

        r7 := @parameter0: java.lang.Object;

        $r0 = new com.sun.xml.bind.api.AccessorException;

        $r4 = <com.sun.xml.bind.v2.runtime.reflect.Messages: com.sun.xml.bind.v2.runtime.reflect.Messages NO_GETTER>;

        $r1 = newarray (java.lang.Object)[1];

        $r3 = r2.<com.sun.xml.bind.v2.runtime.reflect.Accessor$SetterOnlyReflection: java.lang.reflect.Method setter>;

        $r5 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.String toString()>();

        $r1[0] = $r5;

        $r6 = virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.reflect.Messages: java.lang.String format(java.lang.Object[])>($r1);

        specialinvoke $r0.<com.sun.xml.bind.api.AccessorException: void <init>(java.lang.String)>($r6);

        throw $r0;
    }
}
