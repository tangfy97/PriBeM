public final class org.apache.poi.hdf.extractor.data.ListTables extends java.lang.Object
{
    org.apache.poi.hdf.extractor.data.LFO[] _pllfo;
    java.util.Hashtable _lists;

    public void <init>(byte[], byte[])
    {
        org.apache.poi.hdf.extractor.data.ListTables r0;
        byte[] r2, r3;
        java.util.Hashtable $r1;

        r0 := @this: org.apache.poi.hdf.extractor.data.ListTables;

        r2 := @parameter0: byte[];

        r3 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        r0.<org.apache.poi.hdf.extractor.data.ListTables: java.util.Hashtable _lists> = $r1;

        specialinvoke r0.<org.apache.poi.hdf.extractor.data.ListTables: void initLST(byte[])>(r2);

        specialinvoke r0.<org.apache.poi.hdf.extractor.data.ListTables: void initLFO(byte[])>(r3);

        return;
    }

    public org.apache.poi.hdf.extractor.data.LVL getLevel(int, int)
    {
        byte[] $r7, $r17, $r21;
        java.lang.Integer $r4, $r12, $r19;
        org.apache.poi.hdf.extractor.data.ListTables r0;
        boolean $z0, $z1;
        org.apache.poi.hdf.extractor.data.LFOLVL[] $r8, $r10;
        org.apache.poi.hdf.extractor.data.LFOLVL $r9, r22;
        org.apache.poi.hdf.extractor.data.LVL[] $r6, $r14;
        org.apache.poi.hdf.extractor.data.LFO r2;
        short $s6, $s10, $s14;
        org.apache.poi.hdf.extractor.data.LVL r16, r24, r26, r28;
        int i0, $i1, $i2, $i3, i4, $i5, $i7, $i8, $i9, $i11, $i12, $i13, i15;
        org.apache.poi.hdf.extractor.data.LFO[] $r1;
        java.util.Hashtable $r3, $r11, $r18;
        org.apache.poi.hdf.extractor.data.LST r23, r25, r27;
        java.lang.Object $r5, $r13, $r15, $r20;

        r0 := @this: org.apache.poi.hdf.extractor.data.ListTables;

        i0 := @parameter0: int;

        i4 := @parameter1: int;

        $r1 = r0.<org.apache.poi.hdf.extractor.data.ListTables: org.apache.poi.hdf.extractor.data.LFO[] _pllfo>;

        $i1 = i0 - 1;

        r2 = $r1[$i1];

        i15 = 0;

     label1:
        $i2 = r2.<org.apache.poi.hdf.extractor.data.LFO: int _clfolvl>;

        if i15 >= $i2 goto label4;

        $r8 = r2.<org.apache.poi.hdf.extractor.data.LFO: org.apache.poi.hdf.extractor.data.LFOLVL[] _levels>;

        $r9 = $r8[i15];

        $i7 = $r9.<org.apache.poi.hdf.extractor.data.LFOLVL: int _ilvl>;

        if $i7 != i4 goto label3;

        $r10 = r2.<org.apache.poi.hdf.extractor.data.LFO: org.apache.poi.hdf.extractor.data.LFOLVL[] _levels>;

        r22 = $r10[i15];

        $z0 = r22.<org.apache.poi.hdf.extractor.data.LFOLVL: boolean _fFormatting>;

        if $z0 == 0 goto label2;

        $r18 = r0.<org.apache.poi.hdf.extractor.data.ListTables: java.util.Hashtable _lists>;

        $i12 = r2.<org.apache.poi.hdf.extractor.data.LFO: int _lsid>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        $r20 = virtualinvoke $r18.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r19);

        r23 = (org.apache.poi.hdf.extractor.data.LST) $r20;

        r24 = r22.<org.apache.poi.hdf.extractor.data.LFOLVL: org.apache.poi.hdf.extractor.data.LVL _override>;

        $r21 = r23.<org.apache.poi.hdf.extractor.data.LST: byte[] _rgistd>;

        $i13 = i4 * 2;

        $s14 = staticinvoke <org.apache.poi.hdf.extractor.Utils: short convertBytesToShort(byte[],int)>($r21, $i13);

        r24.<org.apache.poi.hdf.extractor.data.LVL: short _istd> = $s14;

        return r24;

     label2:
        $z1 = r22.<org.apache.poi.hdf.extractor.data.LFOLVL: boolean _fStartAt>;

        if $z1 == 0 goto label3;

        $r11 = r0.<org.apache.poi.hdf.extractor.data.ListTables: java.util.Hashtable _lists>;

        $i8 = r2.<org.apache.poi.hdf.extractor.data.LFO: int _lsid>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r13 = virtualinvoke $r11.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r12);

        r25 = (org.apache.poi.hdf.extractor.data.LST) $r13;

        $r14 = r25.<org.apache.poi.hdf.extractor.data.LST: org.apache.poi.hdf.extractor.data.LVL[] _levels>;

        r26 = $r14[i4];

        $r15 = virtualinvoke r26.<org.apache.poi.hdf.extractor.data.LVL: java.lang.Object clone()>();

        r16 = (org.apache.poi.hdf.extractor.data.LVL) $r15;

        $r17 = r25.<org.apache.poi.hdf.extractor.data.LST: byte[] _rgistd>;

        $i9 = i4 * 2;

        $s10 = staticinvoke <org.apache.poi.hdf.extractor.Utils: short convertBytesToShort(byte[],int)>($r17, $i9);

        r16.<org.apache.poi.hdf.extractor.data.LVL: short _istd> = $s10;

        $i11 = r22.<org.apache.poi.hdf.extractor.data.LFOLVL: int _iStartAt>;

        r16.<org.apache.poi.hdf.extractor.data.LVL: int _iStartAt> = $i11;

        return r16;

     label3:
        i15 = i15 + 1;

        goto label1;

     label4:
        $r3 = r0.<org.apache.poi.hdf.extractor.data.ListTables: java.util.Hashtable _lists>;

        $i3 = r2.<org.apache.poi.hdf.extractor.data.LFO: int _lsid>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r5 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r4);

        r27 = (org.apache.poi.hdf.extractor.data.LST) $r5;

        $r6 = r27.<org.apache.poi.hdf.extractor.data.LST: org.apache.poi.hdf.extractor.data.LVL[] _levels>;

        r28 = $r6[i4];

        $r7 = r27.<org.apache.poi.hdf.extractor.data.LST: byte[] _rgistd>;

        $i5 = i4 * 2;

        $s6 = staticinvoke <org.apache.poi.hdf.extractor.Utils: short convertBytesToShort(byte[],int)>($r7, $i5);

        r28.<org.apache.poi.hdf.extractor.data.LVL: short _istd> = $s6;

        return r28;
    }

    private void initLST(byte[])
    {
        byte[] r0, $r2;
        java.lang.Integer $r5;
        org.apache.poi.hdf.extractor.data.ListTables r3;
        byte b11, $b12;
        boolean $z0, $z1;
        org.apache.poi.hdf.extractor.data.LVL[] $r6, $r8, $r9, $r11, $r12;
        short $s0;
        org.apache.poi.hdf.extractor.data.LVL $r10, $r14;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i13, $i14, $i15, i16, $i17, i18, i19, i20, $i21, $i22, $i23, $i24;
        java.util.Hashtable $r4;
        org.apache.poi.hdf.extractor.data.LST $r13;

        r3 := @this: org.apache.poi.hdf.extractor.data.ListTables;

        r0 := @parameter0: byte[];

        $s0 = staticinvoke <org.apache.poi.hdf.extractor.Utils: short convertBytesToShort(byte[],int)>(r0, 0);

        i18 = 0;

        i19 = 0;

     label1:
        $i22 = (int) $s0;

        if i19 >= $i22 goto label6;

        $r13 = new org.apache.poi.hdf.extractor.data.LST;

        specialinvoke $r13.<org.apache.poi.hdf.extractor.data.LST: void <init>()>();

        $i1 = i19 * 28;

        $i2 = 2 + $i1;

        $i3 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte[],int)>(r0, $i2);

        $r13.<org.apache.poi.hdf.extractor.data.LST: int _lsid> = $i3;

        $i4 = i19 * 28;

        $i5 = 6 + $i4;

        $i6 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte[],int)>(r0, $i5);

        $r13.<org.apache.poi.hdf.extractor.data.LST: int _tplc> = $i6;

        $i7 = i19 * 28;

        $i8 = 10 + $i7;

        $r2 = $r13.<org.apache.poi.hdf.extractor.data.LST: byte[] _rgistd>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, $i8, $r2, 0, 18);

        $i9 = i19 * 28;

        $i10 = 28 + $i9;

        b11 = r0[$i10];

        $b12 = b11 & 1;

        $i23 = (int) $b12;

        $z0 = staticinvoke <org.apache.poi.hdf.extractor.StyleSheet: boolean getFlag(int)>($i23);

        $r13.<org.apache.poi.hdf.extractor.data.LST: boolean _fSimpleList> = $z0;

        $r4 = r3.<org.apache.poi.hdf.extractor.data.ListTables: java.util.Hashtable _lists>;

        $i13 = $r13.<org.apache.poi.hdf.extractor.data.LST: int _lsid>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r13);

        $z1 = $r13.<org.apache.poi.hdf.extractor.data.LST: boolean _fSimpleList>;

        if $z1 == 0 goto label2;

        $r11 = newarray (org.apache.poi.hdf.extractor.data.LVL)[1];

        $r13.<org.apache.poi.hdf.extractor.data.LST: org.apache.poi.hdf.extractor.data.LVL[] _levels> = $r11;

        goto label3;

     label2:
        $r6 = newarray (org.apache.poi.hdf.extractor.data.LVL)[9];

        $r13.<org.apache.poi.hdf.extractor.data.LST: org.apache.poi.hdf.extractor.data.LVL[] _levels> = $r6;

     label3:
        i20 = 0;

     label4:
        $r12 = $r13.<org.apache.poi.hdf.extractor.data.LST: org.apache.poi.hdf.extractor.data.LVL[] _levels>;

        $i21 = lengthof $r12;

        if i20 >= $i21 goto label5;

        $i24 = (int) $s0;

        $i14 = $i24 * 28;

        $i15 = 2 + $i14;

        i16 = $i15 + i18;

        $r8 = $r13.<org.apache.poi.hdf.extractor.data.LST: org.apache.poi.hdf.extractor.data.LVL[] _levels>;

        $r14 = new org.apache.poi.hdf.extractor.data.LVL;

        specialinvoke $r14.<org.apache.poi.hdf.extractor.data.LVL: void <init>()>();

        $r8[i20] = $r14;

        $r9 = $r13.<org.apache.poi.hdf.extractor.data.LST: org.apache.poi.hdf.extractor.data.LVL[] _levels>;

        $r10 = $r9[i20];

        $i17 = specialinvoke r3.<org.apache.poi.hdf.extractor.data.ListTables: int createLVL(byte[],int,org.apache.poi.hdf.extractor.data.LVL)>(r0, i16, $r10);

        i18 = i18 + $i17;

        i20 = i20 + 1;

        goto label4;

     label5:
        i19 = i19 + 1;

        goto label1;

     label6:
        return;
    }

    private void initLFO(byte[])
    {
        byte[] r0;
        org.apache.poi.hdf.extractor.data.ListTables r1;
        byte $b22;
        boolean $z0, $z1, $z2;
        org.apache.poi.hdf.extractor.data.LFOLVL[] $r8, $r12;
        org.apache.poi.hdf.extractor.data.LFOLVL $r15;
        org.apache.poi.hdf.extractor.data.LFO $r4, $r7, $r14;
        org.apache.poi.hdf.extractor.data.LVL $r10, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i23, i24, i25, i26, i27, i28, i29, i30, i31, $i32;
        org.apache.poi.hdf.extractor.data.LFO[] $r2, $r3, $r6, $r13;

        r1 := @this: org.apache.poi.hdf.extractor.data.ListTables;

        r0 := @parameter0: byte[];

        $i0 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte[],int)>(r0, 0);

        $r2 = newarray (org.apache.poi.hdf.extractor.data.LFO)[$i0];

        r1.<org.apache.poi.hdf.extractor.data.ListTables: org.apache.poi.hdf.extractor.data.LFO[] _pllfo> = $r2;

        i24 = 0;

     label1:
        if i24 >= $i0 goto label2;

        $r14 = new org.apache.poi.hdf.extractor.data.LFO;

        specialinvoke $r14.<org.apache.poi.hdf.extractor.data.LFO: void <init>()>();

        $i17 = i24 * 16;

        $i18 = 4 + $i17;

        $i19 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte[],int)>(r0, $i18);

        $r14.<org.apache.poi.hdf.extractor.data.LFO: int _lsid> = $i19;

        $i20 = i24 * 16;

        $i21 = 16 + $i20;

        $b22 = r0[$i21];

        $i32 = (int) $b22;

        $r14.<org.apache.poi.hdf.extractor.data.LFO: int _clfolvl> = $i32;

        $i23 = $r14.<org.apache.poi.hdf.extractor.data.LFO: int _clfolvl>;

        $r12 = newarray (org.apache.poi.hdf.extractor.data.LFOLVL)[$i23];

        $r14.<org.apache.poi.hdf.extractor.data.LFO: org.apache.poi.hdf.extractor.data.LFOLVL[] _levels> = $r12;

        $r13 = r1.<org.apache.poi.hdf.extractor.data.ListTables: org.apache.poi.hdf.extractor.data.LFO[] _pllfo>;

        $r13[i24] = $r14;

        i24 = i24 + 1;

        goto label1;

     label2:
        $i1 = $i0 * 16;

        i25 = $i1 + 4;

        i26 = 0;

        i27 = 0;

        i28 = 0;

     label3:
        if i28 >= $i0 goto label7;

        i29 = 0;

     label4:
        $r3 = r1.<org.apache.poi.hdf.extractor.data.ListTables: org.apache.poi.hdf.extractor.data.LFO[] _pllfo>;

        $r4 = $r3[i28];

        $i2 = $r4.<org.apache.poi.hdf.extractor.data.LFO: int _clfolvl>;

        if i29 >= $i2 goto label6;

        $i3 = i27 * 8;

        $i4 = i25 + $i3;

        i30 = $i4 + i26;

        $r15 = new org.apache.poi.hdf.extractor.data.LFOLVL;

        specialinvoke $r15.<org.apache.poi.hdf.extractor.data.LFOLVL: void <init>()>();

        $i5 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte[],int)>(r0, i30);

        $r15.<org.apache.poi.hdf.extractor.data.LFOLVL: int _iStartAt> = $i5;

        $i6 = i30 + 4;

        $i7 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte[],int)>(r0, $i6);

        $r15.<org.apache.poi.hdf.extractor.data.LFOLVL: int _ilvl> = $i7;

        $i8 = $r15.<org.apache.poi.hdf.extractor.data.LFOLVL: int _ilvl>;

        $i9 = $i8 & 16;

        $z0 = staticinvoke <org.apache.poi.hdf.extractor.StyleSheet: boolean getFlag(int)>($i9);

        $r15.<org.apache.poi.hdf.extractor.data.LFOLVL: boolean _fStartAt> = $z0;

        $i10 = $r15.<org.apache.poi.hdf.extractor.data.LFOLVL: int _ilvl>;

        $i11 = $i10 & 32;

        $z1 = staticinvoke <org.apache.poi.hdf.extractor.StyleSheet: boolean getFlag(int)>($i11);

        $r15.<org.apache.poi.hdf.extractor.data.LFOLVL: boolean _fFormatting> = $z1;

        $i12 = $r15.<org.apache.poi.hdf.extractor.data.LFOLVL: int _ilvl>;

        $i13 = $i12 & 15;

        $r15.<org.apache.poi.hdf.extractor.data.LFOLVL: int _ilvl> = $i13;

        i27 = i27 + 1;

        $z2 = $r15.<org.apache.poi.hdf.extractor.data.LFOLVL: boolean _fFormatting>;

        if $z2 == 0 goto label5;

        $i14 = i27 * 12;

        $i15 = i25 + $i14;

        i31 = $i15 + i26;

        $r16 = new org.apache.poi.hdf.extractor.data.LVL;

        specialinvoke $r16.<org.apache.poi.hdf.extractor.data.LVL: void <init>()>();

        $r15.<org.apache.poi.hdf.extractor.data.LFOLVL: org.apache.poi.hdf.extractor.data.LVL _override> = $r16;

        $r10 = $r15.<org.apache.poi.hdf.extractor.data.LFOLVL: org.apache.poi.hdf.extractor.data.LVL _override>;

        $i16 = specialinvoke r1.<org.apache.poi.hdf.extractor.data.ListTables: int createLVL(byte[],int,org.apache.poi.hdf.extractor.data.LVL)>(r0, i31, $r10);

        i26 = i26 + $i16;

     label5:
        $r6 = r1.<org.apache.poi.hdf.extractor.data.ListTables: org.apache.poi.hdf.extractor.data.LFO[] _pllfo>;

        $r7 = $r6[i28];

        $r8 = $r7.<org.apache.poi.hdf.extractor.data.LFO: org.apache.poi.hdf.extractor.data.LFOLVL[] _levels>;

        $r8[i29] = $r15;

        i29 = i29 + 1;

        goto label4;

     label6:
        i28 = i28 + 1;

        goto label3;

     label7:
        return;
    }

    private int createLVL(byte[], int, org.apache.poi.hdf.extractor.data.LVL)
    {
        byte[] r1, $r2, $r3, $r4, $r5, $r6;
        byte $b2, $b6, $b14, b16, b18;
        short $s24, $s32;
        char[] $r7, $r8;
        org.apache.poi.hdf.extractor.data.ListTables r9;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.poi.hdf.extractor.data.LVL r0;
        int $i0, $i1, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i17, $i19, $i20, $i21, $i22, $i23, $i25, $i26, $i27, $i28, $i29, $i30, $i31, i34, i35, i36, i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49;
        char $c33;

        r9 := @this: org.apache.poi.hdf.extractor.data.ListTables;

        r1 := @parameter0: byte[];

        i34 := @parameter1: int;

        r0 := @parameter2: org.apache.poi.hdf.extractor.data.LVL;

        $i0 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte[],int)>(r1, i34);

        r0.<org.apache.poi.hdf.extractor.data.LVL: int _iStartAt> = $i0;

        $i1 = i34 + 4;

        $b2 = r1[$i1];

        r0.<org.apache.poi.hdf.extractor.data.LVL: byte _nfc> = $b2;

        $i3 = i34 + 5;

        $i4 = staticinvoke <org.apache.poi.hdf.extractor.Utils: int convertBytesToInt(byte[],int)>(r1, $i3);

        $i5 = $i4 & 3;

        $b6 = (byte) $i5;

        r0.<org.apache.poi.hdf.extractor.data.LVL: byte _jc> = $b6;

        $i7 = $i4 & 4;

        $z0 = staticinvoke <org.apache.poi.hdf.extractor.StyleSheet: boolean getFlag(int)>($i7);

        r0.<org.apache.poi.hdf.extractor.data.LVL: boolean _fLegal> = $z0;

        $i8 = $i4 & 8;

        $z1 = staticinvoke <org.apache.poi.hdf.extractor.StyleSheet: boolean getFlag(int)>($i8);

        r0.<org.apache.poi.hdf.extractor.data.LVL: boolean _fNoRestart> = $z1;

        $i9 = $i4 & 16;

        $z2 = staticinvoke <org.apache.poi.hdf.extractor.StyleSheet: boolean getFlag(int)>($i9);

        r0.<org.apache.poi.hdf.extractor.data.LVL: boolean _fPrev> = $z2;

        $i10 = $i4 & 32;

        $z3 = staticinvoke <org.apache.poi.hdf.extractor.StyleSheet: boolean getFlag(int)>($i10);

        r0.<org.apache.poi.hdf.extractor.data.LVL: boolean _fPrevSpace> = $z3;

        $i11 = $i4 & 64;

        $z4 = staticinvoke <org.apache.poi.hdf.extractor.StyleSheet: boolean getFlag(int)>($i11);

        r0.<org.apache.poi.hdf.extractor.data.LVL: boolean _fWord6> = $z4;

        $i12 = i34 + 6;

        $r2 = r0.<org.apache.poi.hdf.extractor.data.LVL: byte[] _rgbxchNums>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i12, $r2, 0, 9);

        $i13 = i34 + 15;

        $b14 = r1[$i13];

        r0.<org.apache.poi.hdf.extractor.data.LVL: byte _ixchFollow> = $b14;

        $i15 = i34 + 24;

        b16 = r1[$i15];

        $i17 = i34 + 25;

        b18 = r1[$i17];

        $i38 = (int) b16;

        $r3 = newarray (byte)[$i38];

        r0.<org.apache.poi.hdf.extractor.data.LVL: byte[] _chpx> = $r3;

        $i39 = (int) b18;

        $r4 = newarray (byte)[$i39];

        r0.<org.apache.poi.hdf.extractor.data.LVL: byte[] _papx> = $r4;

        $i19 = i34 + 28;

        $r5 = r0.<org.apache.poi.hdf.extractor.data.LVL: byte[] _papx>;

        $i40 = (int) b18;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i19, $r5, 0, $i40);

        $i20 = i34 + 28;

        $i41 = (int) b18;

        $i21 = $i20 + $i41;

        $r6 = r0.<org.apache.poi.hdf.extractor.data.LVL: byte[] _chpx>;

        $i42 = (int) b16;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i21, $r6, 0, $i42);

        $i43 = (int) b18;

        $i22 = 28 + $i43;

        $i44 = (int) b16;

        $i23 = $i22 + $i44;

        i35 = i34 + $i23;

        $s24 = staticinvoke <org.apache.poi.hdf.extractor.Utils: short convertBytesToShort(byte[],int)>(r1, i35);

        $i45 = (int) $s24;

        $r7 = newarray (char)[$i45];

        r0.<org.apache.poi.hdf.extractor.data.LVL: char[] _xst> = $r7;

        i36 = i35 + 2;

        i37 = 0;

     label1:
        $i46 = (int) $s24;

        if i37 >= $i46 goto label2;

        $r8 = r0.<org.apache.poi.hdf.extractor.data.LVL: char[] _xst>;

        $i30 = i37 * 2;

        $i31 = i36 + $i30;

        $s32 = staticinvoke <org.apache.poi.hdf.extractor.Utils: short convertBytesToShort(byte[],int)>(r1, $i31);

        $c33 = (char) $s32;

        $r8[i37] = $c33;

        i37 = i37 + 1;

        goto label1;

     label2:
        $i47 = (int) b18;

        $i25 = 28 + $i47;

        $i48 = (int) b16;

        $i26 = $i25 + $i48;

        $i28 = $i26 + 2;

        $i49 = (int) $s24;

        $i27 = $i49 * 2;

        $i29 = $i28 + $i27;

        return $i29;
    }
}
