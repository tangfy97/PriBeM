public class org.apache.http.client.protocol.RequestClientConnControl extends java.lang.Object implements org.apache.http.HttpRequestInterceptor
{
    private final org.apache.commons.logging.Log log;
    private static final java.lang.String PROXY_CONN_DIRECTIVE;

    public void <init>()
    {
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;
        org.apache.http.client.protocol.RequestClientConnControl r0;

        r0 := @this: org.apache.http.client.protocol.RequestClientConnControl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.apache.http.client.protocol.RequestClientConnControl: org.apache.commons.logging.Log log> = $r2;

        return;
    }

    public void process(org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.conn.routing.HttpRoute $r6;
        org.apache.http.RequestLine $r1;
        org.apache.http.client.protocol.RequestClientConnControl r7;
        int $i0, $i1;
        java.lang.String $r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.IllegalArgumentException $r9;
        org.apache.http.HttpRequest r0;
        org.apache.http.conn.HttpRoutedConnection r5;
        org.apache.http.protocol.HttpContext r3;
        java.lang.Object $r4;
        org.apache.commons.logging.Log $r8;

        r7 := @this: org.apache.http.client.protocol.RequestClientConnControl;

        r0 := @parameter0: org.apache.http.HttpRequest;

        r3 := @parameter1: org.apache.http.protocol.HttpContext;

        if r0 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP request may not be null");

        throw $r9;

     label1:
        $r1 = interfaceinvoke r0.<org.apache.http.HttpRequest: org.apache.http.RequestLine getRequestLine()>();

        $r2 = interfaceinvoke $r1.<org.apache.http.RequestLine: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("CONNECT");

        if $z0 == 0 goto label2;

        interfaceinvoke r0.<org.apache.http.HttpRequest: void setHeader(java.lang.String,java.lang.String)>("Proxy-Connection", "Keep-Alive");

        return;

     label2:
        $r4 = interfaceinvoke r3.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.connection");

        r5 = (org.apache.http.conn.HttpRoutedConnection) $r4;

        if r5 != null goto label3;

        $r8 = r7.<org.apache.http.client.protocol.RequestClientConnControl: org.apache.commons.logging.Log log>;

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("HTTP connection not set in the context");

        return;

     label3:
        $r6 = interfaceinvoke r5.<org.apache.http.conn.HttpRoutedConnection: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $i0 = virtualinvoke $r6.<org.apache.http.conn.routing.HttpRoute: int getHopCount()>();

        if $i0 == 1 goto label4;

        $z4 = virtualinvoke $r6.<org.apache.http.conn.routing.HttpRoute: boolean isTunnelled()>();

        if $z4 == 0 goto label5;

     label4:
        $z1 = interfaceinvoke r0.<org.apache.http.HttpRequest: boolean containsHeader(java.lang.String)>("Connection");

        if $z1 != 0 goto label5;

        interfaceinvoke r0.<org.apache.http.HttpRequest: void addHeader(java.lang.String,java.lang.String)>("Connection", "Keep-Alive");

     label5:
        $i1 = virtualinvoke $r6.<org.apache.http.conn.routing.HttpRoute: int getHopCount()>();

        if $i1 != 2 goto label6;

        $z2 = virtualinvoke $r6.<org.apache.http.conn.routing.HttpRoute: boolean isTunnelled()>();

        if $z2 != 0 goto label6;

        $z3 = interfaceinvoke r0.<org.apache.http.HttpRequest: boolean containsHeader(java.lang.String)>("Proxy-Connection");

        if $z3 != 0 goto label6;

        interfaceinvoke r0.<org.apache.http.HttpRequest: void addHeader(java.lang.String,java.lang.String)>("Proxy-Connection", "Keep-Alive");

     label6:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.http.client.protocol.RequestClientConnControl: java.lang.String PROXY_CONN_DIRECTIVE> = "Proxy-Connection";

        return;
    }
}
