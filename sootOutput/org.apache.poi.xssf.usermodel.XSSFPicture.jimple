public final class org.apache.poi.xssf.usermodel.XSSFPicture extends org.apache.poi.xssf.usermodel.XSSFShape implements org.apache.poi.ss.usermodel.Picture
{
    private static final org.apache.poi.util.POILogger logger;
    private static float DEFAULT_COLUMN_WIDTH;
    private static org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture prototype;
    private org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture ctPicture;

    protected void <init>(org.apache.poi.xssf.usermodel.XSSFDrawing, org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture)
    {
        org.apache.poi.xssf.usermodel.XSSFPicture r0;
        org.apache.poi.xssf.usermodel.XSSFDrawing r1;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture r2;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFPicture;

        r1 := @parameter0: org.apache.poi.xssf.usermodel.XSSFDrawing;

        r2 := @parameter1: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture;

        specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFShape: void <init>()>();

        r0.<org.apache.poi.xssf.usermodel.XSSFPicture: org.apache.poi.xssf.usermodel.XSSFDrawing drawing> = r1;

        r0.<org.apache.poi.xssf.usermodel.XSSFPicture: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture ctPicture> = r2;

        return;
    }

    protected static org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture prototype()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties $r10;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D $r13;
        org.openxmlformats.schemas.drawingml.x2006.main.STShapeType$Enum $r15;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D $r12;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture $r0, $r1, $r2;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPictureNonVisual $r3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPresetGeometry2D $r14;
        org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties $r7;
        org.openxmlformats.schemas.drawingml.x2006.main.CTStretchInfoProperties $r9;
        org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualPictureProperties $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPictureLocking $r6;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D $r11;
        org.openxmlformats.schemas.drawingml.x2006.main.CTBlip $r8;
        org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps $r4;

        $r0 = <org.apache.poi.xssf.usermodel.XSSFPicture: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture prototype>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture$Factory: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture newInstance()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPictureNonVisual addNewNvPicPr()>();

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPictureNonVisual: org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps addNewCNvPr()>();

        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps: void setId(long)>(1L);

        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps: void setName(java.lang.String)>("Picture 1");

        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps: void setDescr(java.lang.String)>("Picture");

        $r5 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPictureNonVisual: org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualPictureProperties addNewCNvPicPr()>();

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualPictureProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTPictureLocking addNewPicLocks()>();

        interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTPictureLocking: void setNoChangeAspect(boolean)>(1);

        $r7 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture: org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties addNewBlipFill()>();

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTBlip addNewBlip()>();

        interfaceinvoke $r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTBlip: void setEmbed(java.lang.String)>("");

        $r9 = interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTStretchInfoProperties addNewStretch()>();

        interfaceinvoke $r9.<org.openxmlformats.schemas.drawingml.x2006.main.CTStretchInfoProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTRelativeRect addNewFillRect()>();

        $r10 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture: org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties addNewSpPr()>();

        $r11 = interfaceinvoke $r10.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D addNewXfrm()>();

        $r12 = interfaceinvoke $r11.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D addNewExt()>();

        interfaceinvoke $r12.<org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D: void setCx(long)>(0L);

        interfaceinvoke $r12.<org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D: void setCy(long)>(0L);

        $r13 = interfaceinvoke $r11.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D addNewOff()>();

        interfaceinvoke $r13.<org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D: void setX(long)>(0L);

        interfaceinvoke $r13.<org.openxmlformats.schemas.drawingml.x2006.main.CTPoint2D: void setY(long)>(0L);

        $r14 = interfaceinvoke $r10.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTPresetGeometry2D addNewPrstGeom()>();

        $r15 = <org.openxmlformats.schemas.drawingml.x2006.main.STShapeType: org.openxmlformats.schemas.drawingml.x2006.main.STShapeType$Enum RECT>;

        interfaceinvoke $r14.<org.openxmlformats.schemas.drawingml.x2006.main.CTPresetGeometry2D: void setPrst(org.openxmlformats.schemas.drawingml.x2006.main.STShapeType$Enum)>($r15);

        interfaceinvoke $r14.<org.openxmlformats.schemas.drawingml.x2006.main.CTPresetGeometry2D: org.openxmlformats.schemas.drawingml.x2006.main.CTGeomGuideList addNewAvLst()>();

        <org.apache.poi.xssf.usermodel.XSSFPicture: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture prototype> = $r2;

     label1:
        $r1 = <org.apache.poi.xssf.usermodel.XSSFPicture: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture prototype>;

        return $r1;
    }

    protected void setPictureReference(org.apache.poi.openxml4j.opc.PackageRelationship)
    {
        org.apache.poi.xssf.usermodel.XSSFPicture r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTBlip $r3;
        java.lang.String $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties $r2;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture $r1;
        org.apache.poi.openxml4j.opc.PackageRelationship r4;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFPicture;

        r4 := @parameter0: org.apache.poi.openxml4j.opc.PackageRelationship;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFPicture: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture ctPicture>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture: org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties getBlipFill()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTBlip getBlip()>();

        $r5 = virtualinvoke r4.<org.apache.poi.openxml4j.opc.PackageRelationship: java.lang.String getId()>();

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTBlip: void setEmbed(java.lang.String)>($r5);

        return;
    }

    public org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture getCTPicture()
    {
        org.apache.poi.xssf.usermodel.XSSFPicture r0;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFPicture;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFPicture: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture ctPicture>;

        return $r1;
    }

    public void resize()
    {
        org.apache.poi.xssf.usermodel.XSSFPicture r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFPicture;

        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFPicture: void resize(double)>(1.0);

        return;
    }

    public void resize(double)
    {
        org.apache.poi.xssf.usermodel.XSSFPicture r0;
        org.apache.poi.xssf.usermodel.XSSFAnchor $r1;
        short $s5, $s6, $s7;
        int $i0, $i1, $i2, $i3, i4, $i8, i9, $i10, $i11, $i12, $i13, $i14;
        double d0;
        org.apache.poi.xssf.usermodel.XSSFClientAnchor r2, $r3;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFPicture;

        d0 := @parameter0: double;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFPicture: org.apache.poi.xssf.usermodel.XSSFAnchor getAnchor()>();

        r2 = (org.apache.poi.xssf.usermodel.XSSFClientAnchor) $r1;

        $r3 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFPicture: org.apache.poi.xssf.usermodel.XSSFClientAnchor getPreferredSize(double)>(d0);

        $i0 = virtualinvoke r2.<org.apache.poi.xssf.usermodel.XSSFClientAnchor: int getRow1()>();

        $i1 = virtualinvoke $r3.<org.apache.poi.xssf.usermodel.XSSFClientAnchor: int getRow2()>();

        $i2 = virtualinvoke $r3.<org.apache.poi.xssf.usermodel.XSSFClientAnchor: int getRow1()>();

        $i3 = $i1 - $i2;

        i4 = $i0 + $i3;

        $s5 = virtualinvoke r2.<org.apache.poi.xssf.usermodel.XSSFClientAnchor: short getCol1()>();

        $s6 = virtualinvoke $r3.<org.apache.poi.xssf.usermodel.XSSFClientAnchor: short getCol2()>();

        $s7 = virtualinvoke $r3.<org.apache.poi.xssf.usermodel.XSSFClientAnchor: short getCol1()>();

        $i12 = (int) $s6;

        $i13 = (int) $s7;

        $i8 = $i12 - $i13;

        $i14 = (int) $s5;

        i9 = $i14 + $i8;

        virtualinvoke r2.<org.apache.poi.xssf.usermodel.XSSFClientAnchor: void setCol2(int)>(i9);

        virtualinvoke r2.<org.apache.poi.xssf.usermodel.XSSFClientAnchor: void setDx1(int)>(0);

        $i10 = virtualinvoke $r3.<org.apache.poi.xssf.usermodel.XSSFClientAnchor: int getDx2()>();

        virtualinvoke r2.<org.apache.poi.xssf.usermodel.XSSFClientAnchor: void setDx2(int)>($i10);

        virtualinvoke r2.<org.apache.poi.xssf.usermodel.XSSFClientAnchor: void setRow2(int)>(i4);

        virtualinvoke r2.<org.apache.poi.xssf.usermodel.XSSFClientAnchor: void setDy1(int)>(0);

        $i11 = virtualinvoke $r3.<org.apache.poi.xssf.usermodel.XSSFClientAnchor: int getDy2()>();

        virtualinvoke r2.<org.apache.poi.xssf.usermodel.XSSFClientAnchor: void setDy2(int)>($i11);

        return;
    }

    public org.apache.poi.xssf.usermodel.XSSFClientAnchor getPreferredSize()
    {
        org.apache.poi.xssf.usermodel.XSSFPicture r0;
        org.apache.poi.xssf.usermodel.XSSFClientAnchor $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFPicture;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFPicture: org.apache.poi.xssf.usermodel.XSSFClientAnchor getPreferredSize(double)>(1.0);

        return $r1;
    }

    public org.apache.poi.xssf.usermodel.XSSFClientAnchor getPreferredSize(double)
    {
        byte $b1, $b2, $b3, $b10;
        org.apache.poi.openxml4j.opc.PackagePart $r4;
        java.awt.Dimension $r5;
        org.apache.poi.xssf.usermodel.XSSFClientAnchor r2;
        float $f0, $f1, $f2, $f3, f4, $f5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties $r7;
        org.apache.poi.xssf.usermodel.XSSFPicture r0;
        long $l4, $l5;
        org.apache.poi.xssf.usermodel.XSSFAnchor $r1;
        short $s11;
        int $i0, i6, i7, i8, i9, $i12, $i13, $i14, $i15, $i16;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D $r9;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture $r6;
        double $d0, d1, d2, $d3, d4, $d5, $d6, $d7, $d8, d9, $d10, $d11, $d12, $d13, $d14, d15, d16, d17, $d18, $d19, d20;
        org.apache.poi.xssf.usermodel.XSSFPictureData $r3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D $r8;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFPicture;

        d1 := @parameter0: double;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFPicture: org.apache.poi.xssf.usermodel.XSSFAnchor getAnchor()>();

        r2 = (org.apache.poi.xssf.usermodel.XSSFClientAnchor) $r1;

        $r3 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFPicture: org.apache.poi.xssf.usermodel.XSSFPictureData getPictureData()>();

        $r4 = virtualinvoke $r3.<org.apache.poi.xssf.usermodel.XSSFPictureData: org.apache.poi.openxml4j.opc.PackagePart getPackagePart()>();

        $i0 = virtualinvoke $r3.<org.apache.poi.xssf.usermodel.XSSFPictureData: int getPictureType()>();

        $r5 = staticinvoke <org.apache.poi.xssf.usermodel.XSSFPicture: java.awt.Dimension getImageDimension(org.apache.poi.openxml4j.opc.PackagePart,int)>($r4, $i0);

        $d0 = virtualinvoke $r5.<java.awt.Dimension: double getWidth()>();

        d2 = $d0 * d1;

        $d3 = virtualinvoke $r5.<java.awt.Dimension: double getHeight()>();

        d4 = $d3 * d1;

        f4 = 0.0F;

        $s11 = virtualinvoke r2.<org.apache.poi.xssf.usermodel.XSSFClientAnchor: short getCol1()>();

        $i12 = (int) $s11;

        i6 = $i12;

        i7 = 0;

     label1:
        $f0 = specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFPicture: float getColumnWidthInPixels(int)>(i6);

        $f1 = f4 + $f0;

        f4 = $f1;

        $d5 = (double) $f1;

        $b1 = $d5 cmpl d2;

        $i13 = (int) $b1;

        if $i13 <= 0 goto label2;

        goto label3;

     label2:
        i6 = i6 + 1;

        goto label1;

     label3:
        $d6 = (double) $f1;

        $b2 = $d6 cmpl d2;

        $i14 = (int) $b2;

        if $i14 <= 0 goto label4;

        $f3 = specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFPicture: float getColumnWidthInPixels(int)>(i6);

        d15 = (double) $f3;

        $d12 = (double) $f1;

        d16 = $d12 - d2;

        $d13 = d15 - d16;

        $d14 = 9525.0 * $d13;

        i7 = (int) $d14;

     label4:
        virtualinvoke r2.<org.apache.poi.xssf.usermodel.XSSFClientAnchor: void setCol2(int)>(i6);

        virtualinvoke r2.<org.apache.poi.xssf.usermodel.XSSFClientAnchor: void setDx2(int)>(i7);

        d17 = 0.0;

        i8 = virtualinvoke r2.<org.apache.poi.xssf.usermodel.XSSFClientAnchor: int getRow1()>();

        i9 = 0;

     label5:
        $f5 = specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFPicture: float getRowHeightInPixels(int)>(i8);

        $d18 = (double) $f5;

        $d19 = d17 + $d18;

        d17 = $d19;

        $b10 = $d19 cmpl d4;

        $i15 = (int) $b10;

        if $i15 <= 0 goto label6;

        goto label7;

     label6:
        i8 = i8 + 1;

        goto label5;

     label7:
        $b3 = $d19 cmpl d4;

        $i16 = (int) $b3;

        if $i16 <= 0 goto label8;

        $f2 = specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFPicture: float getRowHeightInPixels(int)>(i8);

        d20 = (double) $f2;

        d9 = $d19 - d4;

        $d10 = d20 - d9;

        $d11 = 9525.0 * $d10;

        i9 = (int) $d11;

     label8:
        virtualinvoke r2.<org.apache.poi.xssf.usermodel.XSSFClientAnchor: void setRow2(int)>(i8);

        virtualinvoke r2.<org.apache.poi.xssf.usermodel.XSSFClientAnchor: void setDy2(int)>(i9);

        $r6 = r0.<org.apache.poi.xssf.usermodel.XSSFPicture: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture ctPicture>;

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture: org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties getSpPr()>();

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D getXfrm()>();

        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTTransform2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D getExt()>();

        $d7 = d2 * 9525.0;

        $l4 = (long) $d7;

        interfaceinvoke $r9.<org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D: void setCx(long)>($l4);

        $d8 = d4 * 9525.0;

        $l5 = (long) $d8;

        interfaceinvoke $r9.<org.openxmlformats.schemas.drawingml.x2006.main.CTPositiveSize2D: void setCy(long)>($l5);

        return r2;
    }

    private float getColumnWidthInPixels(int)
    {
        org.apache.poi.xssf.usermodel.XSSFPicture r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol $r5;
        long $l1;
        org.apache.poi.xssf.usermodel.helpers.ColumnHelper $r4;
        org.apache.poi.POIXMLDocumentPart $r2;
        org.apache.poi.xssf.usermodel.XSSFDrawing $r1;
        org.apache.poi.xssf.usermodel.XSSFSheet r3;
        int i0;
        float $f0, $f1, $f2;
        boolean $z0;
        double $d0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFPicture;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFPicture: org.apache.poi.xssf.usermodel.XSSFDrawing getDrawing()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFDrawing: org.apache.poi.POIXMLDocumentPart getParent()>();

        r3 = (org.apache.poi.xssf.usermodel.XSSFSheet) $r2;

        $r4 = virtualinvoke r3.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.helpers.ColumnHelper getColumnHelper()>();

        $l1 = (long) i0;

        $r5 = virtualinvoke $r4.<org.apache.poi.xssf.usermodel.helpers.ColumnHelper: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol getColumn(long,boolean)>($l1, 0);

        if $r5 == null goto label1;

        $z0 = interfaceinvoke $r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: boolean isSetWidth()>();

        if $z0 != 0 goto label2;

     label1:
        $f0 = <org.apache.poi.xssf.usermodel.XSSFPicture: float DEFAULT_COLUMN_WIDTH>;

        $d0 = (double) $f0;

        goto label3;

     label2:
        $d0 = interfaceinvoke $r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCol: double getWidth()>();

     label3:
        $f1 = (float) $d0;

        $f2 = $f1 * 7.0017F;

        return $f2;
    }

    private float getRowHeightInPixels(int)
    {
        org.apache.poi.xssf.usermodel.XSSFPicture r0;
        org.apache.poi.xssf.usermodel.XSSFRow $r4;
        org.apache.poi.POIXMLDocumentPart $r2;
        org.apache.poi.xssf.usermodel.XSSFDrawing $r1;
        org.apache.poi.xssf.usermodel.XSSFSheet r3;
        int i0;
        float $f0, $f1, $f2;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFPicture;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFPicture: org.apache.poi.xssf.usermodel.XSSFDrawing getDrawing()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFDrawing: org.apache.poi.POIXMLDocumentPart getParent()>();

        r3 = (org.apache.poi.xssf.usermodel.XSSFSheet) $r2;

        $r4 = virtualinvoke r3.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFRow getRow(int)>(i0);

        if $r4 == null goto label1;

        $f2 = virtualinvoke $r4.<org.apache.poi.xssf.usermodel.XSSFRow: float getHeightInPoints()>();

        goto label2;

     label1:
        $f2 = virtualinvoke r3.<org.apache.poi.xssf.usermodel.XSSFSheet: float getDefaultRowHeightInPoints()>();

     label2:
        $f0 = $f2 * 96.0F;

        $f1 = $f0 / 72.0F;

        return $f1;
    }

    protected static java.awt.Dimension getImageDimension(org.apache.poi.openxml4j.opc.PackagePart, int)
    {
        java.awt.Dimension $r2, $r5;
        int i0;
        org.apache.poi.openxml4j.opc.PackagePart r0;
        java.io.IOException $r3;
        org.apache.poi.util.POILogger $r4;
        java.io.InputStream $r1;

        r0 := @parameter0: org.apache.poi.openxml4j.opc.PackagePart;

        i0 := @parameter1: int;

     label1:
        $r1 = virtualinvoke r0.<org.apache.poi.openxml4j.opc.PackagePart: java.io.InputStream getInputStream()>();

        $r2 = staticinvoke <org.apache.poi.ss.util.ImageUtils: java.awt.Dimension getImageDimension(java.io.InputStream,int)>($r1, i0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = <org.apache.poi.xssf.usermodel.XSSFPicture: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r4.<org.apache.poi.util.POILogger: void log(int,java.lang.Throwable)>(5, $r3);

        $r5 = new java.awt.Dimension;

        specialinvoke $r5.<java.awt.Dimension: void <init>()>();

        return $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public org.apache.poi.xssf.usermodel.XSSFPictureData getPictureData()
    {
        org.apache.poi.xssf.usermodel.XSSFPictureData $r7;
        org.apache.poi.xssf.usermodel.XSSFPicture r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties $r2;
        org.apache.poi.POIXMLDocumentPart $r6;
        org.apache.poi.xssf.usermodel.XSSFDrawing $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTBlip $r3;
        java.lang.String $r4;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFPicture;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFPicture: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture ctPicture>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture: org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties getBlipFill()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTBlipFillProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTBlip getBlip()>();

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTBlip: java.lang.String getEmbed()>();

        $r5 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFPicture: org.apache.poi.xssf.usermodel.XSSFDrawing getDrawing()>();

        $r6 = virtualinvoke $r5.<org.apache.poi.xssf.usermodel.XSSFDrawing: org.apache.poi.POIXMLDocumentPart getRelationById(java.lang.String)>($r4);

        $r7 = (org.apache.poi.xssf.usermodel.XSSFPictureData) $r6;

        return $r7;
    }

    protected org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties getShapeProperties()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties $r2;
        org.apache.poi.xssf.usermodel.XSSFPicture r0;
        org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFPicture;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFPicture: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture ctPicture>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture: org.openxmlformats.schemas.drawingml.x2006.main.CTShapeProperties getSpPr()>();

        return $r2;
    }

    public volatile org.apache.poi.ss.usermodel.PictureData getPictureData()
    {
        org.apache.poi.xssf.usermodel.XSSFPictureData $r1;
        org.apache.poi.xssf.usermodel.XSSFPicture r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFPicture;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFPicture: org.apache.poi.xssf.usermodel.XSSFPictureData getPictureData()>();

        return $r1;
    }

    public volatile org.apache.poi.ss.usermodel.ClientAnchor getPreferredSize()
    {
        org.apache.poi.xssf.usermodel.XSSFPicture r0;
        org.apache.poi.xssf.usermodel.XSSFClientAnchor $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFPicture;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFPicture: org.apache.poi.xssf.usermodel.XSSFClientAnchor getPreferredSize()>();

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/xssf/usermodel/XSSFPicture;");

        <org.apache.poi.xssf.usermodel.XSSFPicture: org.apache.poi.util.POILogger logger> = $r0;

        <org.apache.poi.xssf.usermodel.XSSFPicture: float DEFAULT_COLUMN_WIDTH> = 9.140625F;

        <org.apache.poi.xssf.usermodel.XSSFPicture: org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTPicture prototype> = null;

        return;
    }
}
