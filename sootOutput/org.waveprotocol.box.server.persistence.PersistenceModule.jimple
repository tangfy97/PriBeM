public class org.waveprotocol.box.server.persistence.PersistenceModule extends com.google.inject.AbstractModule
{
    private final java.lang.String signerInfoStoreType;
    private final java.lang.String attachmentStoreType;
    private final java.lang.String accountStoreType;
    private final java.lang.String deltaStoreType;
    private org.waveprotocol.box.server.persistence.mongodb.MongoDbProvider mongoDbProvider;

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        org.waveprotocol.box.server.persistence.PersistenceModule r0;
        java.lang.String r1, r2, r3, r4;

        r0 := @this: org.waveprotocol.box.server.persistence.PersistenceModule;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<com.google.inject.AbstractModule: void <init>()>();

        r0.<org.waveprotocol.box.server.persistence.PersistenceModule: java.lang.String signerInfoStoreType> = r1;

        r0.<org.waveprotocol.box.server.persistence.PersistenceModule: java.lang.String attachmentStoreType> = r2;

        r0.<org.waveprotocol.box.server.persistence.PersistenceModule: java.lang.String accountStoreType> = r3;

        r0.<org.waveprotocol.box.server.persistence.PersistenceModule: java.lang.String deltaStoreType> = r4;

        return;
    }

    public org.waveprotocol.box.server.persistence.mongodb.MongoDbProvider getMongoDbProvider()
    {
        org.waveprotocol.box.server.persistence.PersistenceModule r0;
        org.waveprotocol.box.server.persistence.mongodb.MongoDbProvider $r1, $r2, $r3;

        r0 := @this: org.waveprotocol.box.server.persistence.PersistenceModule;

        $r1 = r0.<org.waveprotocol.box.server.persistence.PersistenceModule: org.waveprotocol.box.server.persistence.mongodb.MongoDbProvider mongoDbProvider>;

        if $r1 != null goto label1;

        $r3 = new org.waveprotocol.box.server.persistence.mongodb.MongoDbProvider;

        specialinvoke $r3.<org.waveprotocol.box.server.persistence.mongodb.MongoDbProvider: void <init>()>();

        r0.<org.waveprotocol.box.server.persistence.PersistenceModule: org.waveprotocol.box.server.persistence.mongodb.MongoDbProvider mongoDbProvider> = $r3;

     label1:
        $r2 = r0.<org.waveprotocol.box.server.persistence.PersistenceModule: org.waveprotocol.box.server.persistence.mongodb.MongoDbProvider mongoDbProvider>;

        return $r2;
    }

    protected void configure()
    {
        org.waveprotocol.box.server.persistence.PersistenceModule r0;

        r0 := @this: org.waveprotocol.box.server.persistence.PersistenceModule;

        specialinvoke r0.<org.waveprotocol.box.server.persistence.PersistenceModule: void bindCertPathStore()>();

        specialinvoke r0.<org.waveprotocol.box.server.persistence.PersistenceModule: void bindAttachmentStore()>();

        specialinvoke r0.<org.waveprotocol.box.server.persistence.PersistenceModule: void bindAccountStore()>();

        specialinvoke r0.<org.waveprotocol.box.server.persistence.PersistenceModule: void bindDeltaStore()>();

        return;
    }

    private void bindCertPathStore()
    {
        com.google.inject.binder.AnnotatedBindingBuilder $r12, $r14, $r16;
        org.waveprotocol.box.server.persistence.mongodb.MongoDbProvider $r11;
        java.lang.String $r1, $r2, $r3, $r7, $r10;
        boolean $z0, $z1, $z2;
        org.waveprotocol.box.server.persistence.mongodb.MongoDbStore $r13;
        java.lang.RuntimeException $r4;
        com.google.inject.binder.ScopedBindingBuilder $r15, $r17;
        org.waveprotocol.box.server.persistence.PersistenceModule r0;
        java.lang.StringBuilder $r5, $r6, $r8, $r9;

        r0 := @this: org.waveprotocol.box.server.persistence.PersistenceModule;

        $r1 = r0.<org.waveprotocol.box.server.persistence.PersistenceModule: java.lang.String signerInfoStoreType>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("memory");

        if $z0 == 0 goto label1;

        $r16 = virtualinvoke r0.<org.waveprotocol.box.server.persistence.PersistenceModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/wave/crypto/CertPathStore;");

        $r17 = interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/waveprotocol/box/server/persistence/memory/MemoryStore;");

        interfaceinvoke $r17.<com.google.inject.binder.ScopedBindingBuilder: void in(java.lang.Class)>(class "Lcom/google/inject/Singleton;");

        goto label4;

     label1:
        $r2 = r0.<org.waveprotocol.box.server.persistence.PersistenceModule: java.lang.String signerInfoStoreType>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("file");

        if $z1 == 0 goto label2;

        $r14 = virtualinvoke r0.<org.waveprotocol.box.server.persistence.PersistenceModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/wave/crypto/CertPathStore;");

        $r15 = interfaceinvoke $r14.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/waveprotocol/box/server/persistence/file/FileSignerInfoStore;");

        interfaceinvoke $r15.<com.google.inject.binder.ScopedBindingBuilder: void in(java.lang.Class)>(class "Lcom/google/inject/Singleton;");

        goto label4;

     label2:
        $r3 = r0.<org.waveprotocol.box.server.persistence.PersistenceModule: java.lang.String signerInfoStoreType>;

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("mongodb");

        if $z2 == 0 goto label3;

        $r11 = virtualinvoke r0.<org.waveprotocol.box.server.persistence.PersistenceModule: org.waveprotocol.box.server.persistence.mongodb.MongoDbProvider getMongoDbProvider()>();

        $r12 = virtualinvoke r0.<org.waveprotocol.box.server.persistence.PersistenceModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/wave/crypto/CertPathStore;");

        $r13 = virtualinvoke $r11.<org.waveprotocol.box.server.persistence.mongodb.MongoDbProvider: org.waveprotocol.box.server.persistence.mongodb.MongoDbStore provideMongoDbStore()>();

        interfaceinvoke $r12.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r13);

        goto label4;

     label3:
        $r4 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid certificate path store type: \'");

        $r7 = r0.<org.waveprotocol.box.server.persistence.PersistenceModule: java.lang.String signerInfoStoreType>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r4;

     label4:
        return;
    }

    private void bindAttachmentStore()
    {
        com.google.inject.binder.AnnotatedBindingBuilder $r11, $r13;
        org.waveprotocol.box.server.persistence.mongodb.MongoDbProvider $r10;
        java.lang.String $r1, $r2, $r6, $r9;
        boolean $z0, $z1;
        org.waveprotocol.box.server.persistence.mongodb.MongoDbStore $r12;
        java.lang.RuntimeException $r3;
        com.google.inject.binder.ScopedBindingBuilder $r14;
        org.waveprotocol.box.server.persistence.PersistenceModule r0;
        java.lang.StringBuilder $r4, $r5, $r7, $r8;

        r0 := @this: org.waveprotocol.box.server.persistence.PersistenceModule;

        $r1 = r0.<org.waveprotocol.box.server.persistence.PersistenceModule: java.lang.String attachmentStoreType>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("disk");

        if $z0 == 0 goto label1;

        $r13 = virtualinvoke r0.<org.waveprotocol.box.server.persistence.PersistenceModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/box/server/persistence/AttachmentStore;");

        $r14 = interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/waveprotocol/box/server/persistence/file/FileAttachmentStore;");

        interfaceinvoke $r14.<com.google.inject.binder.ScopedBindingBuilder: void in(java.lang.Class)>(class "Lcom/google/inject/Singleton;");

        goto label3;

     label1:
        $r2 = r0.<org.waveprotocol.box.server.persistence.PersistenceModule: java.lang.String attachmentStoreType>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("mongodb");

        if $z1 == 0 goto label2;

        $r10 = virtualinvoke r0.<org.waveprotocol.box.server.persistence.PersistenceModule: org.waveprotocol.box.server.persistence.mongodb.MongoDbProvider getMongoDbProvider()>();

        $r11 = virtualinvoke r0.<org.waveprotocol.box.server.persistence.PersistenceModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/box/server/persistence/AttachmentStore;");

        $r12 = virtualinvoke $r10.<org.waveprotocol.box.server.persistence.mongodb.MongoDbProvider: org.waveprotocol.box.server.persistence.mongodb.MongoDbStore provideMongoDbStore()>();

        interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12);

        goto label3;

     label2:
        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid attachment store type: \'");

        $r6 = r0.<org.waveprotocol.box.server.persistence.PersistenceModule: java.lang.String attachmentStoreType>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label3:
        return;
    }

    private void bindAccountStore()
    {
        com.google.inject.binder.AnnotatedBindingBuilder $r13, $r15, $r17, $r19;
        org.waveprotocol.box.server.persistence.mongodb.MongoDbProvider $r12;
        java.lang.String $r1, $r2, $r3, $r4, $r8, $r11;
        boolean $z0, $z1, $z2, $z3;
        org.waveprotocol.box.server.persistence.mongodb.MongoDbStore $r14;
        java.lang.RuntimeException $r5;
        com.google.inject.binder.ScopedBindingBuilder $r16, $r18, $r20;
        org.waveprotocol.box.server.persistence.PersistenceModule r0;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;

        r0 := @this: org.waveprotocol.box.server.persistence.PersistenceModule;

        $r1 = r0.<org.waveprotocol.box.server.persistence.PersistenceModule: java.lang.String accountStoreType>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("memory");

        if $z0 == 0 goto label1;

        $r19 = virtualinvoke r0.<org.waveprotocol.box.server.persistence.PersistenceModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/box/server/persistence/AccountStore;");

        $r20 = interfaceinvoke $r19.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/waveprotocol/box/server/persistence/memory/MemoryStore;");

        interfaceinvoke $r20.<com.google.inject.binder.ScopedBindingBuilder: void in(java.lang.Class)>(class "Lcom/google/inject/Singleton;");

        goto label5;

     label1:
        $r2 = r0.<org.waveprotocol.box.server.persistence.PersistenceModule: java.lang.String accountStoreType>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("file");

        if $z1 == 0 goto label2;

        $r17 = virtualinvoke r0.<org.waveprotocol.box.server.persistence.PersistenceModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/box/server/persistence/AccountStore;");

        $r18 = interfaceinvoke $r17.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/waveprotocol/box/server/persistence/file/FileAccountStore;");

        interfaceinvoke $r18.<com.google.inject.binder.ScopedBindingBuilder: void in(java.lang.Class)>(class "Lcom/google/inject/Singleton;");

        goto label5;

     label2:
        $r3 = r0.<org.waveprotocol.box.server.persistence.PersistenceModule: java.lang.String accountStoreType>;

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("fake");

        if $z2 == 0 goto label3;

        $r15 = virtualinvoke r0.<org.waveprotocol.box.server.persistence.PersistenceModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/box/server/persistence/AccountStore;");

        $r16 = interfaceinvoke $r15.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/waveprotocol/box/server/persistence/FakePermissiveAccountStore;");

        interfaceinvoke $r16.<com.google.inject.binder.ScopedBindingBuilder: void in(java.lang.Class)>(class "Lcom/google/inject/Singleton;");

        goto label5;

     label3:
        $r4 = r0.<org.waveprotocol.box.server.persistence.PersistenceModule: java.lang.String accountStoreType>;

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("mongodb");

        if $z3 == 0 goto label4;

        $r12 = virtualinvoke r0.<org.waveprotocol.box.server.persistence.PersistenceModule: org.waveprotocol.box.server.persistence.mongodb.MongoDbProvider getMongoDbProvider()>();

        $r13 = virtualinvoke r0.<org.waveprotocol.box.server.persistence.PersistenceModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/box/server/persistence/AccountStore;");

        $r14 = virtualinvoke $r12.<org.waveprotocol.box.server.persistence.mongodb.MongoDbProvider: org.waveprotocol.box.server.persistence.mongodb.MongoDbStore provideMongoDbStore()>();

        interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r14);

        goto label5;

     label4:
        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid account store type: \'");

        $r8 = r0.<org.waveprotocol.box.server.persistence.PersistenceModule: java.lang.String accountStoreType>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label5:
        return;
    }

    private void bindDeltaStore()
    {
        com.google.inject.binder.AnnotatedBindingBuilder $r10, $r12;
        java.lang.String $r1, $r2, $r6, $r9;
        boolean $z0, $z1;
        java.lang.RuntimeException $r3;
        com.google.inject.binder.ScopedBindingBuilder $r11, $r13;
        org.waveprotocol.box.server.persistence.PersistenceModule r0;
        java.lang.StringBuilder $r4, $r5, $r7, $r8;

        r0 := @this: org.waveprotocol.box.server.persistence.PersistenceModule;

        $r1 = r0.<org.waveprotocol.box.server.persistence.PersistenceModule: java.lang.String deltaStoreType>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("memory");

        if $z0 == 0 goto label1;

        $r12 = virtualinvoke r0.<org.waveprotocol.box.server.persistence.PersistenceModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/box/server/waveserver/DeltaStore;");

        $r13 = interfaceinvoke $r12.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/waveprotocol/box/server/persistence/memory/MemoryDeltaStore;");

        interfaceinvoke $r13.<com.google.inject.binder.ScopedBindingBuilder: void in(java.lang.Class)>(class "Lcom/google/inject/Singleton;");

        goto label3;

     label1:
        $r2 = r0.<org.waveprotocol.box.server.persistence.PersistenceModule: java.lang.String deltaStoreType>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("file");

        if $z1 == 0 goto label2;

        $r10 = virtualinvoke r0.<org.waveprotocol.box.server.persistence.PersistenceModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/waveprotocol/box/server/waveserver/DeltaStore;");

        $r11 = interfaceinvoke $r10.<com.google.inject.binder.AnnotatedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder 'to'(java.lang.Class)>(class "Lorg/waveprotocol/box/server/persistence/file/FileDeltaStore;");

        interfaceinvoke $r11.<com.google.inject.binder.ScopedBindingBuilder: void in(java.lang.Class)>(class "Lcom/google/inject/Singleton;");

        goto label3;

     label2:
        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid delta store type: \'");

        $r6 = r0.<org.waveprotocol.box.server.persistence.PersistenceModule: java.lang.String deltaStoreType>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label3:
        return;
    }
}
