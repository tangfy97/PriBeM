public class com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap extends com.uwyn.jhighlight.pcj.map.AbstractCharKeyMap implements com.uwyn.jhighlight.pcj.map.CharKeyMap, java.lang.Cloneable, java.io.Serializable
{
    private static final int GROWTH_POLICY_RELATIVE;
    private static final int GROWTH_POLICY_ABSOLUTE;
    private static final int DEFAULT_GROWTH_POLICY;
    public static final double DEFAULT_GROWTH_FACTOR;
    public static final int DEFAULT_GROWTH_CHUNK;
    public static final int DEFAULT_CAPACITY;
    public static final double DEFAULT_LOAD_FACTOR;
    private com.uwyn.jhighlight.pcj.hash.CharHashFunction keyhash;
    private int size;
    private transient char[] keys;
    private transient java.lang.Object[] values;
    private transient byte[] states;
    private static final byte EMPTY;
    private static final byte OCCUPIED;
    private static final byte REMOVED;
    private transient int used;
    private int growthPolicy;
    private double growthFactor;
    private int growthChunk;
    private double loadFactor;
    private int expandAt;
    private transient com.uwyn.jhighlight.pcj.set.CharSet ckeys;
    private transient java.util.Collection cvalues;

    private void <init>(com.uwyn.jhighlight.pcj.hash.CharHashFunction, int, int, double, int, double)
    {
        byte[] $r5;
        java.lang.Object[] $r3, $r4;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;
        long $l4;
        byte $b0, $b2;
        int i1, $i3, $i5, i6, i7, $i8, $i9;
        java.lang.String $r6, $r7, $r8, $r9;
        double d0, d1, $d2, $d3;
        com.uwyn.jhighlight.pcj.hash.CharHashFunction r1;
        char[] $r2;

        r0 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        r1 := @parameter0: com.uwyn.jhighlight.pcj.hash.CharHashFunction;

        i7 := @parameter1: int;

        i6 := @parameter2: int;

        d0 := @parameter3: double;

        i1 := @parameter4: int;

        d1 := @parameter5: double;

        specialinvoke r0.<com.uwyn.jhighlight.pcj.map.AbstractCharKeyMap: void <init>()>();

        if r1 != null goto label1;

        staticinvoke <com.uwyn.jhighlight.pcj.util.Exceptions: void nullArgument(java.lang.String)>("hash function");

     label1:
        if i7 >= 0 goto label2;

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i7);

        staticinvoke <com.uwyn.jhighlight.pcj.util.Exceptions: void negativeArgument(java.lang.String,java.lang.Object)>("capacity", $r9);

     label2:
        $b0 = d0 cmpg 0.0;

        $i8 = (int) $b0;

        if $i8 > 0 goto label3;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d0);

        staticinvoke <com.uwyn.jhighlight.pcj.util.Exceptions: void negativeOrZeroArgument(java.lang.String,java.lang.Object)>("growthFactor", $r8);

     label3:
        if i1 > 0 goto label4;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i1);

        staticinvoke <com.uwyn.jhighlight.pcj.util.Exceptions: void negativeOrZeroArgument(java.lang.String,java.lang.Object)>("growthChunk", $r7);

     label4:
        $b2 = d1 cmpg 0.0;

        $i9 = (int) $b2;

        if $i9 > 0 goto label5;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d1);

        staticinvoke <com.uwyn.jhighlight.pcj.util.Exceptions: void negativeOrZeroArgument(java.lang.String,java.lang.Object)>("loadFactor", $r6);

     label5:
        r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: com.uwyn.jhighlight.pcj.hash.CharHashFunction keyhash> = r1;

        $i3 = staticinvoke <com.uwyn.jhighlight.pcj.hash.Primes: int nextPrime(int)>(i7);

        $r2 = newarray (char)[$i3];

        r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys> = $r2;

        $r3 = newarray (java.lang.Object)[$i3];

        $r4 = (java.lang.Object[]) $r3;

        r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.lang.Object[] values> = $r4;

        $r5 = newarray (byte)[$i3];

        r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states> = $r5;

        r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int size> = 0;

        $d2 = (double) $i3;

        $d3 = d1 * $d2;

        $l4 = staticinvoke <java.lang.Math: long round(double)>($d3);

        $i5 = (int) $l4;

        r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int expandAt> = $i5;

        r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int used> = 0;

        r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int growthPolicy> = i6;

        r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: double growthFactor> = d0;

        r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int growthChunk> = i1;

        r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: double loadFactor> = d1;

        return;
    }

    private void <init>(int, int, double, int, double)
    {
        com.uwyn.jhighlight.pcj.hash.CharHashFunction $r1;
        int i0, i1, i2;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;
        double d0, d1;

        r0 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        d0 := @parameter2: double;

        i2 := @parameter3: int;

        d1 := @parameter4: double;

        $r1 = <com.uwyn.jhighlight.pcj.hash.DefaultCharHashFunction: com.uwyn.jhighlight.pcj.hash.CharHashFunction INSTANCE>;

        specialinvoke r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: void <init>(com.uwyn.jhighlight.pcj.hash.CharHashFunction,int,int,double,int,double)>($r1, i0, i1, d0, i2, d1);

        return;
    }

    public void <init>()
    {
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;

        r0 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        specialinvoke r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: void <init>(int)>(11);

        return;
    }

    public void <init>(com.uwyn.jhighlight.pcj.map.CharKeyMap)
    {
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;
        com.uwyn.jhighlight.pcj.map.CharKeyMap r1;

        r0 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        r1 := @parameter0: com.uwyn.jhighlight.pcj.map.CharKeyMap;

        specialinvoke r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: void <init>()>();

        virtualinvoke r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: void putAll(com.uwyn.jhighlight.pcj.map.CharKeyMap)>(r1);

        return;
    }

    public void <init>(int)
    {
        int i0;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;

        r0 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        i0 := @parameter0: int;

        specialinvoke r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: void <init>(int,int,double,int,double)>(i0, 0, 1.0, 10, 0.75);

        return;
    }

    public void <init>(double)
    {
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;
        double d0;

        r0 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        d0 := @parameter0: double;

        specialinvoke r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: void <init>(int,int,double,int,double)>(11, 0, 1.0, 10, d0);

        return;
    }

    public void <init>(int, double)
    {
        int i0;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;
        double d0;

        r0 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        specialinvoke r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: void <init>(int,int,double,int,double)>(i0, 0, 1.0, 10, d0);

        return;
    }

    public void <init>(int, double, double)
    {
        int i0;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;
        double d0, d1;

        r0 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        i0 := @parameter0: int;

        d1 := @parameter1: double;

        d0 := @parameter2: double;

        specialinvoke r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: void <init>(int,int,double,int,double)>(i0, 0, d0, 10, d1);

        return;
    }

    public void <init>(int, double, int)
    {
        int i0, i1;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;
        double d0;

        r0 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        i1 := @parameter2: int;

        specialinvoke r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: void <init>(int,int,double,int,double)>(i0, 1, 1.0, i1, d0);

        return;
    }

    public void <init>(com.uwyn.jhighlight.pcj.hash.CharHashFunction)
    {
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;
        com.uwyn.jhighlight.pcj.hash.CharHashFunction r1;

        r0 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        r1 := @parameter0: com.uwyn.jhighlight.pcj.hash.CharHashFunction;

        specialinvoke r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: void <init>(com.uwyn.jhighlight.pcj.hash.CharHashFunction,int,int,double,int,double)>(r1, 11, 0, 1.0, 10, 0.75);

        return;
    }

    public void <init>(com.uwyn.jhighlight.pcj.hash.CharHashFunction, int)
    {
        int i0;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;
        com.uwyn.jhighlight.pcj.hash.CharHashFunction r1;

        r0 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        r1 := @parameter0: com.uwyn.jhighlight.pcj.hash.CharHashFunction;

        i0 := @parameter1: int;

        specialinvoke r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: void <init>(com.uwyn.jhighlight.pcj.hash.CharHashFunction,int,int,double,int,double)>(r1, i0, 0, 1.0, 10, 0.75);

        return;
    }

    public void <init>(com.uwyn.jhighlight.pcj.hash.CharHashFunction, double)
    {
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;
        com.uwyn.jhighlight.pcj.hash.CharHashFunction r1;
        double d0;

        r0 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        r1 := @parameter0: com.uwyn.jhighlight.pcj.hash.CharHashFunction;

        d0 := @parameter1: double;

        specialinvoke r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: void <init>(com.uwyn.jhighlight.pcj.hash.CharHashFunction,int,int,double,int,double)>(r1, 11, 0, 1.0, 10, d0);

        return;
    }

    public void <init>(com.uwyn.jhighlight.pcj.hash.CharHashFunction, int, double)
    {
        com.uwyn.jhighlight.pcj.hash.CharHashFunction r1;
        int i0;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;
        double d0;

        r0 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        r1 := @parameter0: com.uwyn.jhighlight.pcj.hash.CharHashFunction;

        i0 := @parameter1: int;

        d0 := @parameter2: double;

        specialinvoke r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: void <init>(com.uwyn.jhighlight.pcj.hash.CharHashFunction,int,int,double,int,double)>(r1, i0, 0, 1.0, 10, d0);

        return;
    }

    public void <init>(com.uwyn.jhighlight.pcj.hash.CharHashFunction, int, double, double)
    {
        com.uwyn.jhighlight.pcj.hash.CharHashFunction r1;
        int i0;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;
        double d0, d1;

        r0 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        r1 := @parameter0: com.uwyn.jhighlight.pcj.hash.CharHashFunction;

        i0 := @parameter1: int;

        d1 := @parameter2: double;

        d0 := @parameter3: double;

        specialinvoke r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: void <init>(com.uwyn.jhighlight.pcj.hash.CharHashFunction,int,int,double,int,double)>(r1, i0, 0, d0, 10, d1);

        return;
    }

    public void <init>(com.uwyn.jhighlight.pcj.hash.CharHashFunction, int, double, int)
    {
        com.uwyn.jhighlight.pcj.hash.CharHashFunction r1;
        int i0, i1;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;
        double d0;

        r0 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        r1 := @parameter0: com.uwyn.jhighlight.pcj.hash.CharHashFunction;

        i0 := @parameter1: int;

        d0 := @parameter2: double;

        i1 := @parameter3: int;

        specialinvoke r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: void <init>(com.uwyn.jhighlight.pcj.hash.CharHashFunction,int,int,double,int,double)>(r1, i0, 1, 1.0, i1, d0);

        return;
    }

    private void ensureCapacity(int)
    {
        byte[] $r3, $r10;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;
        byte $b5, $b9, $b15, $b19;
        com.uwyn.jhighlight.pcj.hash.CharHashFunction $r7;
        java.lang.Object[] $r2, $r5, $r9;
        long $l7, $l21;
        int i0, $i1, $i2, $i3, $i4, $i6, $i8, $i10, $i11, $i13, $i14, $i16, $i17, i18, $i20, $i22, i23, i24, $i25, i26, $i27;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        char c12;
        char[] $r1, $r4, $r8, $r11, $r12;
        java.lang.Object r6;

        r0 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        i0 := @parameter0: int;

        $i1 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int expandAt>;

        if i0 < $i1 goto label10;

        $i2 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int growthPolicy>;

        if $i2 != 0 goto label01;

        $r11 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $i22 = lengthof $r11;

        $d12 = (double) $i22;

        $d10 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: double growthFactor>;

        $d11 = 1.0 + $d10;

        $d13 = $d12 * $d11;

        i23 = (int) $d13;

        goto label02;

     label01:
        $r1 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $i4 = lengthof $r1;

        $i3 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int growthChunk>;

        i23 = $i4 + $i3;

     label02:
        $d1 = (double) i23;

        $d0 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: double loadFactor>;

        $d3 = $d1 * $d0;

        $d2 = (double) i0;

        $b5 = $d3 cmpg $d2;

        $i27 = (int) $b5;

        if $i27 >= 0 goto label03;

        $d8 = (double) i0;

        $d7 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: double loadFactor>;

        $d9 = $d8 / $d7;

        $l21 = staticinvoke <java.lang.Math: long round(double)>($d9);

        i23 = (int) $l21;

     label03:
        $i6 = staticinvoke <com.uwyn.jhighlight.pcj.hash.Primes: int nextPrime(int)>(i23);

        $d5 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: double loadFactor>;

        $d4 = (double) $i6;

        $d6 = $d5 * $d4;

        $l7 = staticinvoke <java.lang.Math: long round(double)>($d6);

        $i8 = (int) $l7;

        r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int expandAt> = $i8;

        $r8 = newarray (char)[$i6];

        $r2 = newarray (java.lang.Object)[$i6];

        $r9 = (java.lang.Object[]) $r2;

        $r10 = newarray (byte)[$i6];

        r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int used> = 0;

        i24 = 0;

     label04:
        $r12 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $i25 = lengthof $r12;

        if i24 >= $i25 goto label09;

        $r3 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $b9 = $r3[i24];

        if $b9 != 1 goto label08;

        $i10 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int used>;

        $i11 = $i10 + 1;

        r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int used> = $i11;

        $r4 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        c12 = $r4[i24];

        $r5 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.lang.Object[] values>;

        r6 = $r5[i24];

        $r7 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: com.uwyn.jhighlight.pcj.hash.CharHashFunction keyhash>;

        $i13 = interfaceinvoke $r7.<com.uwyn.jhighlight.pcj.hash.CharHashFunction: int hash(char)>(c12);

        $i14 = staticinvoke <java.lang.Math: int abs(int)>($i13);

        i26 = $i14 % $i6;

        $b15 = $r10[i26];

        if $b15 != 1 goto label07;

        $i16 = $i6 - 2;

        $i17 = $i14 % $i16;

        i18 = 1 + $i17;

     label05:
        $i20 = i26 - i18;

        i26 = $i20;

        if $i20 >= 0 goto label06;

        i26 = $i20 + $i6;

     label06:
        $b19 = $r10[i26];

        if $b19 != 0 goto label05;

        goto label07;

     label07:
        $r10[i26] = 1;

        $r9[i26] = r6;

        $r8[i26] = c12;

     label08:
        i24 = i24 + 1;

        goto label04;

     label09:
        r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys> = $r8;

        r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.lang.Object[] values> = $r9;

        r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states> = $r10;

     label10:
        return;
    }

    public com.uwyn.jhighlight.pcj.set.CharSet keySet()
    {
        com.uwyn.jhighlight.pcj.set.CharSet $r1, $r2;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap$KeySet $r3;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;

        r0 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        $r1 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: com.uwyn.jhighlight.pcj.set.CharSet ckeys>;

        if $r1 != null goto label1;

        $r3 = new com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap$KeySet;

        specialinvoke $r3.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap$KeySet: void <init>(com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap,com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap$1)>(r0, null);

        r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: com.uwyn.jhighlight.pcj.set.CharSet ckeys> = $r3;

     label1:
        $r2 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: com.uwyn.jhighlight.pcj.set.CharSet ckeys>;

        return $r2;
    }

    public java.lang.Object put(char, java.lang.Object)
    {
        byte[] $r3, $r4, $r10, $r11, $r12, $r21;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;
        byte $b4, $b14, $b15, $b16, $b22;
        com.uwyn.jhighlight.pcj.hash.CharHashFunction $r1;
        java.lang.Object[] $r7, $r14, $r16, $r18, $r19;
        int $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i18, i19, i20, $i21, $i23, $i24, $i25, $i26, $i27;
        char c0, $c10, $c17;
        char[] $r2, $r5, $r8, $r9, $r13, $r17;
        java.lang.Object r6, r15, r20;

        r0 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        c0 := @parameter0: char;

        r6 := @parameter1: java.lang.Object;

        $r1 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: com.uwyn.jhighlight.pcj.hash.CharHashFunction keyhash>;

        $i1 = interfaceinvoke $r1.<com.uwyn.jhighlight.pcj.hash.CharHashFunction: int hash(char)>(c0);

        $i2 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $r2 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $i3 = lengthof $r2;

        i19 = $i2 % $i3;

        $r3 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $b4 = $r3[i19];

        if $b4 != 1 goto label5;

        $r8 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $c10 = $r8[i19];

        $i23 = (int) $c10;

        $i24 = (int) c0;

        if $i23 != $i24 goto label1;

        $r18 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.lang.Object[] values>;

        r20 = $r18[i19];

        $r19 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.lang.Object[] values>;

        $r19[i19] = r6;

        return r20;

     label1:
        $r9 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $i11 = lengthof $r9;

        $i12 = $i11 - 2;

        $i13 = $i2 % $i12;

        i20 = 1 + $i13;

     label2:
        $i21 = i19 - i20;

        i19 = $i21;

        if $i21 >= 0 goto label3;

        $r17 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $i18 = lengthof $r17;

        i19 = $i21 + $i18;

     label3:
        $r10 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $b14 = $r10[i19];

        if $b14 == 0 goto label5;

        $r11 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $b15 = $r11[i19];

        $i25 = (int) $b15;

        if $i25 != 2 goto label4;

        goto label5;

     label4:
        $r12 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $b16 = $r12[i19];

        if $b16 != 1 goto label2;

        $r13 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $c17 = $r13[i19];

        $i26 = (int) $c17;

        $i27 = (int) c0;

        if $i26 != $i27 goto label2;

        $r14 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.lang.Object[] values>;

        r15 = $r14[i19];

        $r16 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.lang.Object[] values>;

        $r16[i19] = r6;

        return r15;

     label5:
        $r21 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $b22 = $r21[i19];

        if $b22 != 0 goto label6;

        $i8 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int used>;

        $i9 = $i8 + 1;

        r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int used> = $i9;

     label6:
        $r4 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $r4[i19] = 1;

        $r5 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $r5[i19] = c0;

        $r7 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.lang.Object[] values>;

        $r7[i19] = r6;

        $i5 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int size>;

        $i6 = $i5 + 1;

        r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int size> = $i6;

        $i7 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int used>;

        specialinvoke r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: void ensureCapacity(int)>($i7);

        return null;
    }

    public java.util.Collection values()
    {
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap$ValueCollection $r3;
        java.util.Collection $r1, $r2;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;

        r0 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        $r1 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.util.Collection cvalues>;

        if $r1 != null goto label1;

        $r3 = new com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap$ValueCollection;

        specialinvoke $r3.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap$ValueCollection: void <init>(com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap,com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap$1)>(r0, null);

        r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.util.Collection cvalues> = $r3;

     label1:
        $r2 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.util.Collection cvalues>;

        return $r2;
    }

    public java.lang.Object clone()
    {
        byte[] $r13, $r14, $r15, $r16, $r17;
        java.lang.Object[] $r7, $r8, $r9, $r10, $r11, $r12;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0, r19;
        java.lang.CloneNotSupportedException $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        char[] $r2, $r3, $r4, $r5, $r6;
        java.lang.Object $r1;

        r0 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r19 = (com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap) $r1;

        $r2 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $i0 = lengthof $r2;

        $r3 = newarray (char)[$i0];

        r19.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys> = $r3;

        $r6 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $r5 = r19.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $r4 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $i1 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r5, 0, $i1);

        $r7 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.lang.Object[] values>;

        $i2 = lengthof $r7;

        $r8 = newarray (java.lang.Object)[$i2];

        $r9 = (java.lang.Object[]) $r8;

        r19.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.lang.Object[] values> = $r9;

        $r12 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.lang.Object[] values>;

        $r11 = r19.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.lang.Object[] values>;

        $r10 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.lang.Object[] values>;

        $i3 = lengthof $r10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, 0, $r11, 0, $i3);

        $r13 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $i4 = lengthof $r13;

        $r14 = newarray (byte)[$i4];

        r19.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states> = $r14;

        $r17 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $r16 = r19.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $r15 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $i5 = lengthof $r15;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r17, 0, $r16, 0, $i5);

        r19.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.util.Collection cvalues> = null;

        r19.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: com.uwyn.jhighlight.pcj.set.CharSet ckeys> = null;

     label2:
        return r19;

     label3:
        $r18 := @caughtexception;

        staticinvoke <com.uwyn.jhighlight.pcj.util.Exceptions: void cloning()>();

        return null;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public com.uwyn.jhighlight.pcj.map.CharKeyMapIterator entries()
    {
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r1;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap$1 $r0;

        r1 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        $r0 = new com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap$1;

        specialinvoke $r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap$1: void <init>(com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap)>(r1);

        return $r0;
    }

    public void clear()
    {
        byte[] $r1;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;
        java.lang.Object[] $r2;

        r0 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        $r1 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r1, 0);

        $r2 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.lang.Object[] values>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r2, null);

        r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int size> = 0;

        r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int used> = 0;

        return;
    }

    public boolean containsKey(char)
    {
        byte[] $r3, $r4, $r6, $r7;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;
        byte $b4, $b5, $b9, $b10;
        com.uwyn.jhighlight.pcj.hash.CharHashFunction $r1;
        int $i1, $i2, $i3, $i6, $i7, $i8, $i12, $i14, i15, $i16, $i17, $i18, $i19, $i20;
        char c0, $c11, $c13;
        char[] $r2, $r5, $r8, $r9, $r10;

        r0 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        c0 := @parameter0: char;

        $r1 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: com.uwyn.jhighlight.pcj.hash.CharHashFunction keyhash>;

        $i1 = interfaceinvoke $r1.<com.uwyn.jhighlight.pcj.hash.CharHashFunction: int hash(char)>(c0);

        $i2 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $r2 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $i3 = lengthof $r2;

        i15 = $i2 % $i3;

        $r3 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $b4 = $r3[i15];

        if $b4 == 0 goto label5;

        $r4 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $b5 = $r4[i15];

        if $b5 != 1 goto label1;

        $r10 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $c13 = $r10[i15];

        $i17 = (int) $c13;

        $i18 = (int) c0;

        if $i17 != $i18 goto label1;

        return 1;

     label1:
        $r5 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $i6 = lengthof $r5;

        $i7 = $i6 - 2;

        $i8 = $i2 % $i7;

        $i14 = 1 + $i8;

     label2:
        $i16 = i15 - $i14;

        i15 = $i16;

        if $i16 >= 0 goto label3;

        $r9 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $i12 = lengthof $r9;

        i15 = $i16 + $i12;

     label3:
        $r6 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $b9 = $r6[i15];

        if $b9 != 0 goto label4;

        return 0;

     label4:
        $r7 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $b10 = $r7[i15];

        if $b10 != 1 goto label2;

        $r8 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $c11 = $r8[i15];

        $i19 = (int) $c11;

        $i20 = (int) c0;

        if $i19 != $i20 goto label2;

        return 1;

     label5:
        return 0;
    }

    public boolean containsValue(java.lang.Object)
    {
        byte[] $r2, $r3, $r6, $r7;
        java.lang.Object[] $r4, $r8;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r1;
        byte $b1, $b3;
        int $i0, $i2, i4, i5;
        boolean $z0;
        java.lang.Object r0, $r5, $r9;

        r1 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label4;

        i4 = 0;

     label1:
        $r6 = r1.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $i2 = lengthof $r6;

        if i4 >= $i2 goto label3;

        $r7 = r1.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $b3 = $r7[i4];

        if $b3 != 1 goto label2;

        $r8 = r1.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.lang.Object[] values>;

        $r9 = $r8[i4];

        if $r9 != null goto label2;

        return 1;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        goto label7;

     label4:
        i5 = 0;

     label5:
        $r2 = r1.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $i0 = lengthof $r2;

        if i5 >= $i0 goto label7;

        $r3 = r1.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $b1 = $r3[i5];

        if $b1 != 1 goto label6;

        $r4 = r1.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.lang.Object[] values>;

        $r5 = $r4[i5];

        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label6;

        return 1;

     label6:
        i5 = i5 + 1;

        goto label5;

     label7:
        return 0;
    }

    public java.lang.Object get(char)
    {
        byte[] $r3, $r4, $r6, $r7;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;
        byte $b4, $b5, $b9, $b10;
        com.uwyn.jhighlight.pcj.hash.CharHashFunction $r1;
        java.lang.Object[] $r9, $r13;
        int $i1, $i2, $i3, $i6, $i7, $i8, $i12, $i14, i15, $i16, $i17, $i18, $i19, $i20;
        char c0, $c11, $c13;
        char[] $r2, $r5, $r8, $r11, $r12;
        java.lang.Object $r10, $r14;

        r0 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        c0 := @parameter0: char;

        $r1 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: com.uwyn.jhighlight.pcj.hash.CharHashFunction keyhash>;

        $i1 = interfaceinvoke $r1.<com.uwyn.jhighlight.pcj.hash.CharHashFunction: int hash(char)>(c0);

        $i2 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $r2 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $i3 = lengthof $r2;

        i15 = $i2 % $i3;

        $r3 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $b4 = $r3[i15];

        if $b4 == 0 goto label5;

        $r4 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $b5 = $r4[i15];

        if $b5 != 1 goto label1;

        $r12 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $c13 = $r12[i15];

        $i17 = (int) $c13;

        $i18 = (int) c0;

        if $i17 != $i18 goto label1;

        $r13 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.lang.Object[] values>;

        $r14 = $r13[i15];

        return $r14;

     label1:
        $r5 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $i6 = lengthof $r5;

        $i7 = $i6 - 2;

        $i8 = $i2 % $i7;

        $i14 = 1 + $i8;

     label2:
        $i16 = i15 - $i14;

        i15 = $i16;

        if $i16 >= 0 goto label3;

        $r11 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $i12 = lengthof $r11;

        i15 = $i16 + $i12;

     label3:
        $r6 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $b9 = $r6[i15];

        if $b9 != 0 goto label4;

        return null;

     label4:
        $r7 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $b10 = $r7[i15];

        if $b10 != 1 goto label2;

        $r8 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $c11 = $r8[i15];

        $i19 = (int) $c11;

        $i20 = (int) c0;

        if $i19 != $i20 goto label2;

        $r9 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.lang.Object[] values>;

        $r10 = $r9[i15];

        return $r10;

     label5:
        return null;
    }

    public boolean isEmpty()
    {
        int $i0;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;
        boolean $z0;

        r0 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        $i0 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int size>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object remove(char)
    {
        byte[] $r3, $r4, $r6, $r7, $r12, $r17;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;
        byte $b4, $b5, $b9, $b10;
        com.uwyn.jhighlight.pcj.hash.CharHashFunction $r1;
        java.lang.Object[] $r9, $r11, $r15, $r16;
        int $i1, $i2, $i3, $i6, $i7, $i8, $i12, $i13, $i14, $i16, $i17, $i18, i19, $i20, $i21, $i22, $i23, $i24;
        char c0, $c11, $c15;
        char[] $r2, $r5, $r8, $r13, $r14;
        java.lang.Object r10, r18;

        r0 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        c0 := @parameter0: char;

        $r1 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: com.uwyn.jhighlight.pcj.hash.CharHashFunction keyhash>;

        $i1 = interfaceinvoke $r1.<com.uwyn.jhighlight.pcj.hash.CharHashFunction: int hash(char)>(c0);

        $i2 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $r2 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $i3 = lengthof $r2;

        i19 = $i2 % $i3;

        $r3 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $b4 = $r3[i19];

        if $b4 == 0 goto label5;

        $r4 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $b5 = $r4[i19];

        if $b5 != 1 goto label1;

        $r14 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $c15 = $r14[i19];

        $i21 = (int) $c15;

        $i22 = (int) c0;

        if $i21 != $i22 goto label1;

        $r15 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.lang.Object[] values>;

        r18 = $r15[i19];

        $r16 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.lang.Object[] values>;

        $r16[i19] = null;

        $r17 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $r17[i19] = 2;

        $i17 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int size>;

        $i18 = $i17 - 1;

        r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int size> = $i18;

        return r18;

     label1:
        $r5 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $i6 = lengthof $r5;

        $i7 = $i6 - 2;

        $i8 = $i2 % $i7;

        $i16 = 1 + $i8;

     label2:
        $i20 = i19 - $i16;

        i19 = $i20;

        if $i20 >= 0 goto label3;

        $r13 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $i14 = lengthof $r13;

        i19 = $i20 + $i14;

     label3:
        $r6 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $b9 = $r6[i19];

        if $b9 != 0 goto label4;

        return null;

     label4:
        $r7 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $b10 = $r7[i19];

        if $b10 != 1 goto label2;

        $r8 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $c11 = $r8[i19];

        $i23 = (int) $c11;

        $i24 = (int) c0;

        if $i23 != $i24 goto label2;

        $r9 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.lang.Object[] values>;

        r10 = $r9[i19];

        $r11 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.lang.Object[] values>;

        $r11[i19] = null;

        $r12 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $r12[i19] = 2;

        $i12 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int size>;

        $i13 = $i12 - 1;

        r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int size> = $i13;

        return r10;

     label5:
        return null;
    }

    public int size()
    {
        int $i0;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;

        r0 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        $i0 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int size>;

        return $i0;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r1;
        char $c1;
        com.uwyn.jhighlight.pcj.map.CharKeyMapIterator $r3;
        int $i0, $i2;
        char[] $r2;
        java.io.ObjectOutputStream r0;
        java.lang.Object $r4;
        boolean $z0;

        r1 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        r0 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r0.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r2 = r1.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $i0 = lengthof $r2;

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeInt(int)>($i0);

        $r3 = virtualinvoke r1.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: com.uwyn.jhighlight.pcj.map.CharKeyMapIterator entries()>();

     label1:
        $z0 = interfaceinvoke $r3.<com.uwyn.jhighlight.pcj.map.CharKeyMapIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r3.<com.uwyn.jhighlight.pcj.map.CharKeyMapIterator: void next()>();

        $c1 = interfaceinvoke $r3.<com.uwyn.jhighlight.pcj.map.CharKeyMapIterator: char getKey()>();

        $i2 = (int) $c1;

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeChar(int)>($i2);

        $r4 = interfaceinvoke $r3.<com.uwyn.jhighlight.pcj.map.CharKeyMapIterator: java.lang.Object getValue()>();

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r4);

        goto label1;

     label2:
        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        byte[] $r4, $r11, $r12, $r16;
        java.io.ObjectInputStream r0;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r1;
        byte $b9, $b14;
        com.uwyn.jhighlight.pcj.hash.CharHashFunction $r9;
        java.lang.Object[] $r6, $r7, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i10, $i11, $i12, i13, $i15, $i16, i17, i18;
        char $c5;
        char[] $r2, $r3, $r5, $r10, $r13, $r15, $r17;
        java.lang.Object $r8;

        r1 := @this: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        r0 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r0.<java.io.ObjectInputStream: void defaultReadObject()>();

        $i0 = virtualinvoke r0.<java.io.ObjectInputStream: int readInt()>();

        $r2 = newarray (char)[$i0];

        r1.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys> = $r2;

        $r3 = r1.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $i1 = lengthof $r3;

        $r4 = newarray (byte)[$i1];

        r1.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states> = $r4;

        $r5 = r1.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $i2 = lengthof $r5;

        $r6 = newarray (java.lang.Object)[$i2];

        $r7 = (java.lang.Object[]) $r6;

        r1.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.lang.Object[] values> = $r7;

        $i3 = r1.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int size>;

        r1.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int used> = $i3;

        i17 = 0;

     label1:
        $i4 = r1.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int size>;

        if i17 >= $i4 goto label5;

        $c5 = virtualinvoke r0.<java.io.ObjectInputStream: char readChar()>();

        $r8 = virtualinvoke r0.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r9 = r1.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: com.uwyn.jhighlight.pcj.hash.CharHashFunction keyhash>;

        $i6 = interfaceinvoke $r9.<com.uwyn.jhighlight.pcj.hash.CharHashFunction: int hash(char)>($c5);

        $i7 = staticinvoke <java.lang.Math: int abs(int)>($i6);

        $r10 = r1.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $i8 = lengthof $r10;

        i18 = $i7 % $i8;

        $r11 = r1.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $b9 = $r11[i18];

        if $b9 == 0 goto label4;

        $r15 = r1.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $i10 = lengthof $r15;

        $i11 = $i10 - 2;

        $i12 = $i7 % $i11;

        i13 = 1 + $i12;

     label2:
        $i15 = i18 - i13;

        i18 = $i15;

        if $i15 >= 0 goto label3;

        $r17 = r1.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $i16 = lengthof $r17;

        i18 = $i15 + $i16;

     label3:
        $r16 = r1.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $b14 = $r16[i18];

        if $b14 != 0 goto label2;

        goto label4;

     label4:
        $r12 = r1.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        $r12[i18] = 1;

        $r13 = r1.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        $r13[i18] = $c5;

        $r14 = r1.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.lang.Object[] values>;

        $r14[i18] = $r8;

        i17 = i17 + 1;

        goto label1;

     label5:
        return;
    }

    static char[] access$200(com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap)
    {
        char[] $r1;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;

        r0 := @parameter0: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        $r1 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: char[] keys>;

        return $r1;
    }

    static byte[] access$300(com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap)
    {
        byte[] $r1;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;

        r0 := @parameter0: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        $r1 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte[] states>;

        return $r1;
    }

    static java.lang.Object[] access$400(com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap)
    {
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;
        java.lang.Object[] $r1;

        r0 := @parameter0: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        $r1 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: java.lang.Object[] values>;

        return $r1;
    }

    static int access$510(com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap)
    {
        int $i0, $i1;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;

        r0 := @parameter0: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        $i0 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int size>;

        $i1 = $i0 - 1;

        r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int size> = $i1;

        return $i0;
    }

    static int access$500(com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap)
    {
        int $i0;
        com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap r0;

        r0 := @parameter0: com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap;

        $i0 = r0.<com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int size>;

        return $i0;
    }

    public static void <clinit>()
    {
        <com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte REMOVED> = 2;

        <com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte OCCUPIED> = 1;

        <com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: byte EMPTY> = 0;

        <com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: double DEFAULT_LOAD_FACTOR> = 0.75;

        <com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int DEFAULT_CAPACITY> = 11;

        <com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int DEFAULT_GROWTH_CHUNK> = 10;

        <com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: double DEFAULT_GROWTH_FACTOR> = 1.0;

        <com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int DEFAULT_GROWTH_POLICY> = 0;

        <com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int GROWTH_POLICY_ABSOLUTE> = 1;

        <com.uwyn.jhighlight.pcj.map.CharKeyOpenHashMap: int GROWTH_POLICY_RELATIVE> = 0;

        return;
    }
}
