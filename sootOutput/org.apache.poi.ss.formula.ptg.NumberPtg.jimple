public final class org.apache.poi.ss.formula.ptg.NumberPtg extends org.apache.poi.ss.formula.ptg.ScalarConstantPtg
{
    public static final int SIZE;
    public static final byte sid;
    private final double field_1_value;

    public void <init>(org.apache.poi.util.LittleEndianInput)
    {
        org.apache.poi.ss.formula.ptg.NumberPtg r0;
        org.apache.poi.util.LittleEndianInput r1;
        double $d0;

        r0 := @this: org.apache.poi.ss.formula.ptg.NumberPtg;

        r1 := @parameter0: org.apache.poi.util.LittleEndianInput;

        $d0 = interfaceinvoke r1.<org.apache.poi.util.LittleEndianInput: double readDouble()>();

        specialinvoke r0.<org.apache.poi.ss.formula.ptg.NumberPtg: void <init>(double)>($d0);

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.poi.ss.formula.ptg.NumberPtg r0;
        java.lang.String r1;
        double $d0;

        r0 := @this: org.apache.poi.ss.formula.ptg.NumberPtg;

        r1 := @parameter0: java.lang.String;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r1);

        specialinvoke r0.<org.apache.poi.ss.formula.ptg.NumberPtg: void <init>(double)>($d0);

        return;
    }

    public void <init>(double)
    {
        org.apache.poi.ss.formula.ptg.NumberPtg r0;
        double d0;

        r0 := @this: org.apache.poi.ss.formula.ptg.NumberPtg;

        d0 := @parameter0: double;

        specialinvoke r0.<org.apache.poi.ss.formula.ptg.ScalarConstantPtg: void <init>()>();

        r0.<org.apache.poi.ss.formula.ptg.NumberPtg: double field_1_value> = d0;

        return;
    }

    public double getValue()
    {
        org.apache.poi.ss.formula.ptg.NumberPtg r0;
        double $d0;

        r0 := @this: org.apache.poi.ss.formula.ptg.NumberPtg;

        $d0 = r0.<org.apache.poi.ss.formula.ptg.NumberPtg: double field_1_value>;

        return $d0;
    }

    public void write(org.apache.poi.util.LittleEndianOutput)
    {
        org.apache.poi.ss.formula.ptg.NumberPtg r1;
        byte $b0;
        org.apache.poi.util.LittleEndianOutput r0;
        int $i1, $i2;
        double $d0;

        r1 := @this: org.apache.poi.ss.formula.ptg.NumberPtg;

        r0 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        $b0 = virtualinvoke r1.<org.apache.poi.ss.formula.ptg.NumberPtg: byte getPtgClass()>();

        $i2 = (int) $b0;

        $i1 = 31 + $i2;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($i1);

        $d0 = virtualinvoke r1.<org.apache.poi.ss.formula.ptg.NumberPtg: double getValue()>();

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeDouble(double)>($d0);

        return;
    }

    public int getSize()
    {
        org.apache.poi.ss.formula.ptg.NumberPtg r0;

        r0 := @this: org.apache.poi.ss.formula.ptg.NumberPtg;

        return 9;
    }

    public java.lang.String toFormulaString()
    {
        org.apache.poi.ss.formula.ptg.NumberPtg r0;
        java.lang.String $r1;
        double $d0;

        r0 := @this: org.apache.poi.ss.formula.ptg.NumberPtg;

        $d0 = r0.<org.apache.poi.ss.formula.ptg.NumberPtg: double field_1_value>;

        $r1 = staticinvoke <org.apache.poi.ss.util.NumberToTextConverter: java.lang.String toText(double)>($d0);

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.poi.ss.formula.ptg.NumberPtg: byte sid> = 31;

        <org.apache.poi.ss.formula.ptg.NumberPtg: int SIZE> = 9;

        return;
    }
}
