public abstract class org.apache.lucene.search.TopFieldCollector extends org.apache.lucene.search.TopDocsCollector
{
    private static final org.apache.lucene.search.ScoreDoc[] EMPTY_SCOREDOCS;
    private final boolean fillFields;
    float maxScore;
    final int numHits;
    org.apache.lucene.search.FieldValueHitQueue$Entry bottom;
    boolean queueFull;
    int docBase;

    private void <init>(org.apache.lucene.util.PriorityQueue, int, boolean)
    {
        int i0;
        org.apache.lucene.search.TopFieldCollector r0;
        org.apache.lucene.util.PriorityQueue r1;
        boolean z0;

        r0 := @this: org.apache.lucene.search.TopFieldCollector;

        r1 := @parameter0: org.apache.lucene.util.PriorityQueue;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.lucene.search.TopDocsCollector: void <init>(org.apache.lucene.util.PriorityQueue)>(r1);

        r0.<org.apache.lucene.search.TopFieldCollector: float maxScore> = #NaNF;

        r0.<org.apache.lucene.search.TopFieldCollector: org.apache.lucene.search.FieldValueHitQueue$Entry bottom> = null;

        r0.<org.apache.lucene.search.TopFieldCollector: int numHits> = i0;

        r0.<org.apache.lucene.search.TopFieldCollector: boolean fillFields> = z0;

        return;
    }

    public static org.apache.lucene.search.TopFieldCollector create(org.apache.lucene.search.Sort, int, boolean, boolean, boolean, boolean) throws java.io.IOException
    {
        org.apache.lucene.search.Sort r0;
        int i0;
        org.apache.lucene.search.TopFieldCollector $r1;
        boolean z0, z1, z2, z3;

        r0 := @parameter0: org.apache.lucene.search.Sort;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        z3 := @parameter5: boolean;

        $r1 = staticinvoke <org.apache.lucene.search.TopFieldCollector: org.apache.lucene.search.TopFieldCollector create(org.apache.lucene.search.Sort,int,org.apache.lucene.search.FieldDoc,boolean,boolean,boolean,boolean)>(r0, i0, null, z0, z1, z2, z3);

        return $r1;
    }

    public static org.apache.lucene.search.TopFieldCollector create(org.apache.lucene.search.Sort, int, org.apache.lucene.search.FieldDoc, boolean, boolean, boolean, boolean) throws java.io.IOException
    {
        org.apache.lucene.search.TopFieldCollector$OneComparatorScoringNoMaxScoreCollector $r30;
        org.apache.lucene.search.SortField[] $r1, $r2, $r7, $r15;
        org.apache.lucene.search.FieldDoc r4;
        org.apache.lucene.search.TopFieldCollector$OneComparatorNonScoringCollector $r29;
        org.apache.lucene.search.TopFieldCollector$OutOfOrderMultiComparatorScoringMaxScoreCollector $r22;
        boolean z0, z1, z2, z3;
        org.apache.lucene.search.Sort r0;
        org.apache.lucene.search.FieldValueHitQueue $r3;
        org.apache.lucene.search.FieldComparator[] $r19;
        java.lang.StringBuilder $r10, $r11, $r13, $r14, $r16;
        org.apache.lucene.search.TopFieldCollector$OutOfOrderOneComparatorNonScoringCollector $r26;
        org.apache.lucene.search.TopFieldCollector$PagingFieldCollector $r8;
        java.lang.Object[] $r5, $r6, $r12;
        org.apache.lucene.search.TopFieldCollector$OutOfOrderMultiComparatorScoringNoMaxScoreCollector $r21;
        org.apache.lucene.search.TopFieldCollector$MultiComparatorScoringNoMaxScoreCollector $r24;
        org.apache.lucene.search.TopFieldCollector$OutOfOrderOneComparatorScoringNoMaxScoreCollector $r27;
        org.apache.lucene.search.TopFieldCollector$MultiComparatorScoringMaxScoreCollector $r25;
        org.apache.lucene.search.TopFieldCollector$OutOfOrderOneComparatorScoringMaxScoreCollector $r28;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.lucene.search.TopFieldCollector$OutOfOrderMultiComparatorNonScoringCollector $r20;
        java.lang.String $r17;
        org.apache.lucene.search.TopFieldCollector$OneComparatorScoringMaxScoreCollector $r31;
        java.lang.IllegalArgumentException $r9, $r18, $r32, $r33;
        org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector $r23;

        r0 := @parameter0: org.apache.lucene.search.Sort;

        i1 := @parameter1: int;

        r4 := @parameter2: org.apache.lucene.search.FieldDoc;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        z2 := @parameter5: boolean;

        z3 := @parameter6: boolean;

        $r1 = r0.<org.apache.lucene.search.Sort: org.apache.lucene.search.SortField[] fields>;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label01;

        $r33 = new java.lang.IllegalArgumentException;

        specialinvoke $r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Sort must contain at least one field");

        throw $r33;

     label01:
        if i1 > 0 goto label02;

        $r32 = new java.lang.IllegalArgumentException;

        specialinvoke $r32.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("numHits must be > 0; please use TotalHitCountCollector if you just need the total hit count");

        throw $r32;

     label02:
        $r2 = r0.<org.apache.lucene.search.Sort: org.apache.lucene.search.SortField[] fields>;

        $r3 = staticinvoke <org.apache.lucene.search.FieldValueHitQueue: org.apache.lucene.search.FieldValueHitQueue create(org.apache.lucene.search.SortField[],int)>($r2, i1);

        if r4 != null goto label14;

        $r19 = virtualinvoke $r3.<org.apache.lucene.search.FieldValueHitQueue: org.apache.lucene.search.FieldComparator[] getComparators()>();

        $i6 = lengthof $r19;

        if $i6 != 1 goto label08;

        if z3 == 0 goto label05;

        if z2 == 0 goto label03;

        $r31 = new org.apache.lucene.search.TopFieldCollector$OneComparatorScoringMaxScoreCollector;

        specialinvoke $r31.<org.apache.lucene.search.TopFieldCollector$OneComparatorScoringMaxScoreCollector: void <init>(org.apache.lucene.search.FieldValueHitQueue,int,boolean)>($r3, i1, z0);

        return $r31;

     label03:
        if z1 == 0 goto label04;

        $r30 = new org.apache.lucene.search.TopFieldCollector$OneComparatorScoringNoMaxScoreCollector;

        specialinvoke $r30.<org.apache.lucene.search.TopFieldCollector$OneComparatorScoringNoMaxScoreCollector: void <init>(org.apache.lucene.search.FieldValueHitQueue,int,boolean)>($r3, i1, z0);

        return $r30;

     label04:
        $r29 = new org.apache.lucene.search.TopFieldCollector$OneComparatorNonScoringCollector;

        specialinvoke $r29.<org.apache.lucene.search.TopFieldCollector$OneComparatorNonScoringCollector: void <init>(org.apache.lucene.search.FieldValueHitQueue,int,boolean)>($r3, i1, z0);

        return $r29;

     label05:
        if z2 == 0 goto label06;

        $r28 = new org.apache.lucene.search.TopFieldCollector$OutOfOrderOneComparatorScoringMaxScoreCollector;

        specialinvoke $r28.<org.apache.lucene.search.TopFieldCollector$OutOfOrderOneComparatorScoringMaxScoreCollector: void <init>(org.apache.lucene.search.FieldValueHitQueue,int,boolean)>($r3, i1, z0);

        return $r28;

     label06:
        if z1 == 0 goto label07;

        $r27 = new org.apache.lucene.search.TopFieldCollector$OutOfOrderOneComparatorScoringNoMaxScoreCollector;

        specialinvoke $r27.<org.apache.lucene.search.TopFieldCollector$OutOfOrderOneComparatorScoringNoMaxScoreCollector: void <init>(org.apache.lucene.search.FieldValueHitQueue,int,boolean)>($r3, i1, z0);

        return $r27;

     label07:
        $r26 = new org.apache.lucene.search.TopFieldCollector$OutOfOrderOneComparatorNonScoringCollector;

        specialinvoke $r26.<org.apache.lucene.search.TopFieldCollector$OutOfOrderOneComparatorNonScoringCollector: void <init>(org.apache.lucene.search.FieldValueHitQueue,int,boolean)>($r3, i1, z0);

        return $r26;

     label08:
        if z3 == 0 goto label11;

        if z2 == 0 goto label09;

        $r25 = new org.apache.lucene.search.TopFieldCollector$MultiComparatorScoringMaxScoreCollector;

        specialinvoke $r25.<org.apache.lucene.search.TopFieldCollector$MultiComparatorScoringMaxScoreCollector: void <init>(org.apache.lucene.search.FieldValueHitQueue,int,boolean)>($r3, i1, z0);

        return $r25;

     label09:
        if z1 == 0 goto label10;

        $r24 = new org.apache.lucene.search.TopFieldCollector$MultiComparatorScoringNoMaxScoreCollector;

        specialinvoke $r24.<org.apache.lucene.search.TopFieldCollector$MultiComparatorScoringNoMaxScoreCollector: void <init>(org.apache.lucene.search.FieldValueHitQueue,int,boolean)>($r3, i1, z0);

        return $r24;

     label10:
        $r23 = new org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector;

        specialinvoke $r23.<org.apache.lucene.search.TopFieldCollector$MultiComparatorNonScoringCollector: void <init>(org.apache.lucene.search.FieldValueHitQueue,int,boolean)>($r3, i1, z0);

        return $r23;

     label11:
        if z2 == 0 goto label12;

        $r22 = new org.apache.lucene.search.TopFieldCollector$OutOfOrderMultiComparatorScoringMaxScoreCollector;

        specialinvoke $r22.<org.apache.lucene.search.TopFieldCollector$OutOfOrderMultiComparatorScoringMaxScoreCollector: void <init>(org.apache.lucene.search.FieldValueHitQueue,int,boolean)>($r3, i1, z0);

        return $r22;

     label12:
        if z1 == 0 goto label13;

        $r21 = new org.apache.lucene.search.TopFieldCollector$OutOfOrderMultiComparatorScoringNoMaxScoreCollector;

        specialinvoke $r21.<org.apache.lucene.search.TopFieldCollector$OutOfOrderMultiComparatorScoringNoMaxScoreCollector: void <init>(org.apache.lucene.search.FieldValueHitQueue,int,boolean)>($r3, i1, z0);

        return $r21;

     label13:
        $r20 = new org.apache.lucene.search.TopFieldCollector$OutOfOrderMultiComparatorNonScoringCollector;

        specialinvoke $r20.<org.apache.lucene.search.TopFieldCollector$OutOfOrderMultiComparatorNonScoringCollector: void <init>(org.apache.lucene.search.FieldValueHitQueue,int,boolean)>($r3, i1, z0);

        return $r20;

     label14:
        $r5 = r4.<org.apache.lucene.search.FieldDoc: java.lang.Object[] fields>;

        if $r5 != null goto label15;

        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("after.fields wasn\'t set; you must pass fillFields=true for the previous search");

        throw $r18;

     label15:
        $r6 = r4.<org.apache.lucene.search.FieldDoc: java.lang.Object[] fields>;

        $i2 = lengthof $r6;

        $r7 = virtualinvoke r0.<org.apache.lucene.search.Sort: org.apache.lucene.search.SortField[] getSort()>();

        $i3 = lengthof $r7;

        if $i2 == $i3 goto label16;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("after.fields has ");

        $r12 = r4.<org.apache.lucene.search.FieldDoc: java.lang.Object[] fields>;

        $i4 = lengthof $r12;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" values but sort has ");

        $r15 = virtualinvoke r0.<org.apache.lucene.search.Sort: org.apache.lucene.search.SortField[] getSort()>();

        $i5 = lengthof $r15;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r9;

     label16:
        $r8 = new org.apache.lucene.search.TopFieldCollector$PagingFieldCollector;

        specialinvoke $r8.<org.apache.lucene.search.TopFieldCollector$PagingFieldCollector: void <init>(org.apache.lucene.search.FieldValueHitQueue,org.apache.lucene.search.FieldDoc,int,boolean,boolean,boolean)>($r3, r4, i1, z0, z1, z2);

        return $r8;
    }

    final void add(int, int, float)
    {
        org.apache.lucene.search.FieldValueHitQueue$Entry $r1, $r4;
        org.apache.lucene.util.PriorityQueue $r2;
        int i0, i1, $i2, $i3, $i4, $i5;
        float f0;
        org.apache.lucene.search.TopFieldCollector r0;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.TopFieldCollector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        $r2 = r0.<org.apache.lucene.search.TopFieldCollector: org.apache.lucene.util.PriorityQueue pq>;

        $r1 = new org.apache.lucene.search.FieldValueHitQueue$Entry;

        $i2 = r0.<org.apache.lucene.search.TopFieldCollector: int docBase>;

        $i3 = $i2 + i1;

        specialinvoke $r1.<org.apache.lucene.search.FieldValueHitQueue$Entry: void <init>(int,int,float)>(i0, $i3, f0);

        $r3 = virtualinvoke $r2.<org.apache.lucene.util.PriorityQueue: java.lang.Object add(java.lang.Object)>($r1);

        $r4 = (org.apache.lucene.search.FieldValueHitQueue$Entry) $r3;

        r0.<org.apache.lucene.search.TopFieldCollector: org.apache.lucene.search.FieldValueHitQueue$Entry bottom> = $r4;

        $i5 = r0.<org.apache.lucene.search.TopFieldCollector: int totalHits>;

        $i4 = r0.<org.apache.lucene.search.TopFieldCollector: int numHits>;

        if $i5 != $i4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<org.apache.lucene.search.TopFieldCollector: boolean queueFull> = $z0;

        return;
    }

    protected void populateResults(org.apache.lucene.search.ScoreDoc[], int)
    {
        org.apache.lucene.search.FieldValueHitQueue$Entry $r7, r10;
        org.apache.lucene.util.PriorityQueue $r1, $r5;
        org.apache.lucene.search.FieldDoc $r8, $r11;
        org.apache.lucene.search.ScoreDoc[] r3;
        int i0, $i1, i2, i3, $i5, $i7;
        boolean $z0;
        org.apache.lucene.search.FieldValueHitQueue r9;
        float $f0;
        org.apache.lucene.search.TopFieldCollector r0;
        java.lang.Object $r2, $r6;

        r0 := @this: org.apache.lucene.search.TopFieldCollector;

        r3 := @parameter0: org.apache.lucene.search.ScoreDoc[];

        i0 := @parameter1: int;

        $z0 = r0.<org.apache.lucene.search.TopFieldCollector: boolean fillFields>;

        if $z0 == 0 goto label3;

        $r5 = r0.<org.apache.lucene.search.TopFieldCollector: org.apache.lucene.util.PriorityQueue pq>;

        r9 = (org.apache.lucene.search.FieldValueHitQueue) $r5;

        i2 = i0 - 1;

     label1:
        if i2 < 0 goto label2;

        $r6 = virtualinvoke r9.<org.apache.lucene.search.FieldValueHitQueue: java.lang.Object pop()>();

        $r7 = (org.apache.lucene.search.FieldValueHitQueue$Entry) $r6;

        $r8 = virtualinvoke r9.<org.apache.lucene.search.FieldValueHitQueue: org.apache.lucene.search.FieldDoc fillFields(org.apache.lucene.search.FieldValueHitQueue$Entry)>($r7);

        r3[i2] = $r8;

        $i5 = (int) -1;

        i2 = i2 + $i5;

        goto label1;

     label2:
        goto label5;

     label3:
        i3 = i0 - 1;

     label4:
        if i3 < 0 goto label5;

        $r1 = r0.<org.apache.lucene.search.TopFieldCollector: org.apache.lucene.util.PriorityQueue pq>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.util.PriorityQueue: java.lang.Object pop()>();

        r10 = (org.apache.lucene.search.FieldValueHitQueue$Entry) $r2;

        $r11 = new org.apache.lucene.search.FieldDoc;

        $i1 = r10.<org.apache.lucene.search.FieldValueHitQueue$Entry: int doc>;

        $f0 = r10.<org.apache.lucene.search.FieldValueHitQueue$Entry: float score>;

        specialinvoke $r11.<org.apache.lucene.search.FieldDoc: void <init>(int,float)>($i1, $f0);

        r3[i3] = $r11;

        $i7 = (int) -1;

        i3 = i3 + $i7;

        goto label4;

     label5:
        return;
    }

    protected org.apache.lucene.search.TopDocs newTopDocs(org.apache.lucene.search.ScoreDoc[], int)
    {
        org.apache.lucene.search.SortField[] $r4;
        org.apache.lucene.util.PriorityQueue $r2;
        org.apache.lucene.search.FieldValueHitQueue $r3;
        org.apache.lucene.search.ScoreDoc[] r5;
        int $i0, i1;
        float $f0;
        org.apache.lucene.search.TopFieldCollector r1;
        org.apache.lucene.search.TopFieldDocs $r0;

        r1 := @this: org.apache.lucene.search.TopFieldCollector;

        r5 := @parameter0: org.apache.lucene.search.ScoreDoc[];

        i1 := @parameter1: int;

        if r5 != null goto label1;

        r5 = <org.apache.lucene.search.TopFieldCollector: org.apache.lucene.search.ScoreDoc[] EMPTY_SCOREDOCS>;

        r1.<org.apache.lucene.search.TopFieldCollector: float maxScore> = #NaNF;

     label1:
        $r0 = new org.apache.lucene.search.TopFieldDocs;

        $i0 = r1.<org.apache.lucene.search.TopFieldCollector: int totalHits>;

        $r2 = r1.<org.apache.lucene.search.TopFieldCollector: org.apache.lucene.util.PriorityQueue pq>;

        $r3 = (org.apache.lucene.search.FieldValueHitQueue) $r2;

        $r4 = virtualinvoke $r3.<org.apache.lucene.search.FieldValueHitQueue: org.apache.lucene.search.SortField[] getFields()>();

        $f0 = r1.<org.apache.lucene.search.TopFieldCollector: float maxScore>;

        specialinvoke $r0.<org.apache.lucene.search.TopFieldDocs: void <init>(int,org.apache.lucene.search.ScoreDoc[],org.apache.lucene.search.SortField[],float)>($i0, r5, $r4, $f0);

        return $r0;
    }

    public boolean acceptsDocsOutOfOrder()
    {
        org.apache.lucene.search.TopFieldCollector r0;

        r0 := @this: org.apache.lucene.search.TopFieldCollector;

        return 0;
    }

    void <init>(org.apache.lucene.util.PriorityQueue, int, boolean, org.apache.lucene.search.TopFieldCollector$1)
    {
        org.apache.lucene.search.TopFieldCollector$1 r2;
        int i0;
        org.apache.lucene.search.TopFieldCollector r0;
        org.apache.lucene.util.PriorityQueue r1;
        boolean z0;

        r0 := @this: org.apache.lucene.search.TopFieldCollector;

        r1 := @parameter0: org.apache.lucene.util.PriorityQueue;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 := @parameter3: org.apache.lucene.search.TopFieldCollector$1;

        specialinvoke r0.<org.apache.lucene.search.TopFieldCollector: void <init>(org.apache.lucene.util.PriorityQueue,int,boolean)>(r1, i0, z0);

        return;
    }

    static void <clinit>()
    {
        org.apache.lucene.search.ScoreDoc[] $r0;

        $r0 = newarray (org.apache.lucene.search.ScoreDoc)[0];

        <org.apache.lucene.search.TopFieldCollector: org.apache.lucene.search.ScoreDoc[] EMPTY_SCOREDOCS> = $r0;

        return;
    }
}
