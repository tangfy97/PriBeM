public class com.ctc.wstx.dtd.FullDTDReader extends com.ctc.wstx.dtd.MinimalDTDReader
{
    static final boolean INTERN_SHARED_NAMES;
    static final int EXP_ENTITY_VALUE_LEN;
    static final int EXP_ATTR_VALUE_LEN;
    static final java.lang.Boolean ENTITY_EXP_GE;
    static final java.lang.Boolean ENTITY_EXP_PE;
    final int mConfigFlags;
    final boolean mCfgNormAttrs;
    final boolean mCfgSupportDTDPP;
    final boolean mCfgFullyValidating;
    java.util.HashMap mParamEntities;
    final java.util.HashMap mPredefdPEs;
    java.util.Set mRefdPEs;
    java.util.HashMap mGeneralEntities;
    final java.util.HashMap mPredefdGEs;
    java.util.Set mRefdGEs;
    boolean mUsesPredefdEntities;
    java.util.HashMap mNotations;
    final java.util.HashMap mPredefdNotations;
    boolean mUsesPredefdNotations;
    java.util.HashMap mSharedNames;
    java.util.HashMap mElements;
    java.util.HashMap mSharedEnumValues;
    com.ctc.wstx.dtd.DefaultAttrValue mCurrAttrDefault;
    boolean mExpandingPE;
    com.ctc.wstx.util.TextBuffer mValueBuffer;
    char mSurrogateSecond;
    int mIncludeCount;
    boolean mCheckForbiddenPEs;
    java.lang.String mCurrDeclaration;
    boolean mAnyDTDppFeatures;
    java.lang.String mDefaultNsURI;
    java.util.HashMap mNamespaces;
    com.ctc.wstx.dtd.DTDWriter mFlattenWriter;
    final com.ctc.wstx.dtd.DTDEventListener mEventListener;
    transient com.ctc.wstx.util.TextBuffer mTextBuffer;
    final com.ctc.wstx.dtd.NameKey mAccessKey;

    private void <init>(com.ctc.wstx.io.WstxInputSource, com.ctc.wstx.api.ReaderConfig, boolean, int)
    {
        int i0;
        com.ctc.wstx.api.ReaderConfig r2;
        com.ctc.wstx.dtd.FullDTDReader r0;
        com.ctc.wstx.io.WstxInputSource r1;
        boolean z0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r1 := @parameter0: com.ctc.wstx.io.WstxInputSource;

        r2 := @parameter1: com.ctc.wstx.api.ReaderConfig;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void <init>(com.ctc.wstx.io.WstxInputSource,com.ctc.wstx.api.ReaderConfig,boolean,com.ctc.wstx.dtd.DTDSubset,boolean,int)>(r1, r2, 0, null, z0, i0);

        return;
    }

    private void <init>(com.ctc.wstx.io.WstxInputSource, com.ctc.wstx.api.ReaderConfig, com.ctc.wstx.dtd.DTDSubset, boolean, int)
    {
        com.ctc.wstx.dtd.DTDSubset r3;
        int i0, $i1;
        com.ctc.wstx.api.ReaderConfig r2;
        com.ctc.wstx.dtd.FullDTDReader r0;
        com.ctc.wstx.io.WstxInputSource r1;
        boolean z0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r1 := @parameter0: com.ctc.wstx.io.WstxInputSource;

        r2 := @parameter1: com.ctc.wstx.api.ReaderConfig;

        r3 := @parameter2: com.ctc.wstx.dtd.DTDSubset;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void <init>(com.ctc.wstx.io.WstxInputSource,com.ctc.wstx.api.ReaderConfig,boolean,com.ctc.wstx.dtd.DTDSubset,boolean,int)>(r1, r2, 1, r3, z0, i0);

        $i1 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mCurrDepth>;

        virtualinvoke r1.<com.ctc.wstx.io.WstxInputSource: void initInputLocation(com.ctc.wstx.io.WstxInputData,int)>(r0, $i1);

        return;
    }

    private void <init>(com.ctc.wstx.io.WstxInputSource, com.ctc.wstx.api.ReaderConfig, boolean, com.ctc.wstx.dtd.DTDSubset, boolean, int)
    {
        java.util.HashMap $r7, $r8, $r9;
        com.ctc.wstx.api.ReaderConfig r2, $r5;
        com.ctc.wstx.dtd.DTDEventListener $r6;
        com.ctc.wstx.dtd.DTDSubset r4;
        com.ctc.wstx.dtd.NameKey $r3;
        int i0, $i1, $i2, $i3;
        com.ctc.wstx.dtd.FullDTDReader r0;
        boolean z0, $z1, z2, $z3, $z4, $z5, $z6, $z7;
        com.ctc.wstx.io.WstxInputSource r1;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r1 := @parameter0: com.ctc.wstx.io.WstxInputSource;

        r2 := @parameter1: com.ctc.wstx.api.ReaderConfig;

        z0 := @parameter2: boolean;

        r4 := @parameter3: com.ctc.wstx.dtd.DTDSubset;

        z2 := @parameter4: boolean;

        i0 := @parameter5: int;

        specialinvoke r0.<com.ctc.wstx.dtd.MinimalDTDReader: void <init>(com.ctc.wstx.io.WstxInputSource,com.ctc.wstx.api.ReaderConfig,boolean)>(r1, r2, z0);

        r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mUsesPredefdEntities> = 0;

        r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mUsesPredefdNotations> = 0;

        r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mSharedNames> = null;

        r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mSharedEnumValues> = null;

        r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DefaultAttrValue mCurrAttrDefault> = null;

        r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mExpandingPE> = 0;

        r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.util.TextBuffer mValueBuffer> = null;

        r0.<com.ctc.wstx.dtd.FullDTDReader: char mSurrogateSecond> = 0;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mIncludeCount> = 0;

        r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCheckForbiddenPEs> = 0;

        r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mAnyDTDppFeatures> = 0;

        r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String mDefaultNsURI> = "";

        r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mNamespaces> = null;

        r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter> = null;

        r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.util.TextBuffer mTextBuffer> = null;

        $r3 = new com.ctc.wstx.dtd.NameKey;

        specialinvoke $r3.<com.ctc.wstx.dtd.NameKey: void <init>(java.lang.String,java.lang.String)>(null, null);

        r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.NameKey mAccessKey> = $r3;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mDocXmlVersion> = i0;

        $z1 = virtualinvoke r2.<com.ctc.wstx.api.ReaderConfig: boolean isXml11()>();

        r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mXml11> = $z1;

        $i1 = virtualinvoke r2.<com.ctc.wstx.api.ReaderConfig: int getConfigFlags()>();

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mConfigFlags> = $i1;

        $i2 = $i1 & 16384;

        if $i2 == 0 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgNormAttrs> = $z6;

        $i3 = $i1 & 524288;

        if $i3 == 0 goto label03;

        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgSupportDTDPP> = $z7;

        r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgFullyValidating> = z2;

        r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mUsesPredefdEntities> = 0;

        r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mParamEntities> = null;

        r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.Set mRefdPEs> = null;

        r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.Set mRefdGEs> = null;

        r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mGeneralEntities> = null;

        if r4 != null goto label05;

        $r7 = null;

        goto label06;

     label05:
        $r7 = virtualinvoke r4.<com.ctc.wstx.dtd.DTDSubset: java.util.HashMap getParameterEntityMap()>();

     label06:
        if $r7 == null goto label07;

        $z5 = virtualinvoke $r7.<java.util.HashMap: boolean isEmpty()>();

        if $z5 == 0 goto label08;

     label07:
        r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mPredefdPEs> = null;

        goto label09;

     label08:
        r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mPredefdPEs> = $r7;

     label09:
        if r4 != null goto label10;

        $r8 = null;

        goto label11;

     label10:
        $r8 = virtualinvoke r4.<com.ctc.wstx.dtd.DTDSubset: java.util.HashMap getGeneralEntityMap()>();

     label11:
        if $r8 == null goto label12;

        $z4 = virtualinvoke $r8.<java.util.HashMap: boolean isEmpty()>();

        if $z4 == 0 goto label13;

     label12:
        r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mPredefdGEs> = null;

        goto label14;

     label13:
        r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mPredefdGEs> = $r8;

     label14:
        if r4 != null goto label15;

        $r9 = null;

        goto label16;

     label15:
        $r9 = virtualinvoke r4.<com.ctc.wstx.dtd.DTDSubset: java.util.HashMap getNotationMap()>();

     label16:
        if $r9 == null goto label17;

        $z3 = virtualinvoke $r9.<java.util.HashMap: boolean isEmpty()>();

        if $z3 == 0 goto label18;

     label17:
        r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mPredefdNotations> = null;

        goto label19;

     label18:
        r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mPredefdNotations> = $r9;

     label19:
        $r5 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.api.ReaderConfig mConfig>;

        $r6 = virtualinvoke $r5.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.dtd.DTDEventListener getDTDEventListener()>();

        r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDEventListener mEventListener> = $r6;

        return;
    }

    public static com.ctc.wstx.dtd.DTDSubset readInternalSubset(com.ctc.wstx.io.WstxInputData, com.ctc.wstx.io.WstxInputSource, com.ctc.wstx.api.ReaderConfig, boolean, int) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        java.lang.Throwable $r5;
        com.ctc.wstx.io.WstxInputData r3;
        com.ctc.wstx.api.ReaderConfig r2;
        com.ctc.wstx.dtd.DTDSubset $r4;
        int i0;
        com.ctc.wstx.dtd.FullDTDReader $r0;
        com.ctc.wstx.io.WstxInputSource r1;
        boolean z0;

        r3 := @parameter0: com.ctc.wstx.io.WstxInputData;

        r1 := @parameter1: com.ctc.wstx.io.WstxInputSource;

        r2 := @parameter2: com.ctc.wstx.api.ReaderConfig;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        $r0 = new com.ctc.wstx.dtd.FullDTDReader;

        specialinvoke $r0.<com.ctc.wstx.dtd.FullDTDReader: void <init>(com.ctc.wstx.io.WstxInputSource,com.ctc.wstx.api.ReaderConfig,boolean,int)>(r1, r2, z0, i0);

        virtualinvoke $r0.<com.ctc.wstx.dtd.FullDTDReader: void copyBufferStateFrom(com.ctc.wstx.io.WstxInputData)>(r3);

     label1:
        $r4 = virtualinvoke $r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDSubset parseDTD()>();

     label2:
        virtualinvoke r3.<com.ctc.wstx.io.WstxInputData: void copyBufferStateFrom(com.ctc.wstx.io.WstxInputData)>($r0);

        goto label5;

     label3:
        $r5 := @caughtexception;

     label4:
        virtualinvoke r3.<com.ctc.wstx.io.WstxInputData: void copyBufferStateFrom(com.ctc.wstx.io.WstxInputData)>($r0);

        throw $r5;

     label5:
        return $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static com.ctc.wstx.dtd.DTDSubset readExternalSubset(com.ctc.wstx.io.WstxInputSource, com.ctc.wstx.api.ReaderConfig, com.ctc.wstx.dtd.DTDSubset, boolean, int) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dtd.DTDSubset r3, $r4;
        int i0;
        com.ctc.wstx.api.ReaderConfig r2;
        com.ctc.wstx.dtd.FullDTDReader $r0;
        com.ctc.wstx.io.WstxInputSource r1;
        boolean z0;

        r1 := @parameter0: com.ctc.wstx.io.WstxInputSource;

        r2 := @parameter1: com.ctc.wstx.api.ReaderConfig;

        r3 := @parameter2: com.ctc.wstx.dtd.DTDSubset;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        $r0 = new com.ctc.wstx.dtd.FullDTDReader;

        specialinvoke $r0.<com.ctc.wstx.dtd.FullDTDReader: void <init>(com.ctc.wstx.io.WstxInputSource,com.ctc.wstx.api.ReaderConfig,com.ctc.wstx.dtd.DTDSubset,boolean,int)>(r1, r2, r3, z0, i0);

        $r4 = virtualinvoke $r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDSubset parseDTD()>();

        return $r4;
    }

    public static com.ctc.wstx.dtd.DTDSubset flattenExternalSubset(com.ctc.wstx.io.WstxInputSource, java.io.Writer, boolean, boolean, boolean) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.api.ReaderConfig $r0, $r2;
        com.ctc.wstx.dtd.DTDSubset $r6;
        com.ctc.wstx.util.SymbolTable $r1;
        java.io.Writer r5;
        com.ctc.wstx.dtd.FullDTDReader $r3;
        com.ctc.wstx.io.WstxInputSource r4;
        boolean z0, z1, z2;

        r4 := @parameter0: com.ctc.wstx.io.WstxInputSource;

        r5 := @parameter1: java.io.Writer;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        $r0 = staticinvoke <com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.api.ReaderConfig createFullDefaults()>();

        $r1 = new com.ctc.wstx.util.SymbolTable;

        specialinvoke $r1.<com.ctc.wstx.util.SymbolTable: void <init>()>();

        $r2 = virtualinvoke $r0.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.api.ReaderConfig createNonShared(com.ctc.wstx.util.SymbolTable)>($r1);

        virtualinvoke $r2.<com.ctc.wstx.api.ReaderConfig: void clearConfigFlag(int)>(8192);

        virtualinvoke $r2.<com.ctc.wstx.api.ReaderConfig: void clearConfigFlag(int)>(16384);

        $r3 = new com.ctc.wstx.dtd.FullDTDReader;

        specialinvoke $r3.<com.ctc.wstx.dtd.FullDTDReader: void <init>(com.ctc.wstx.io.WstxInputSource,com.ctc.wstx.api.ReaderConfig,com.ctc.wstx.dtd.DTDSubset,boolean,int)>(r4, $r2, null, 1, 0);

        virtualinvoke $r3.<com.ctc.wstx.dtd.FullDTDReader: void setFlattenWriter(java.io.Writer,boolean,boolean,boolean)>(r5, z0, z1, z2);

        $r6 = virtualinvoke $r3.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDSubset parseDTD()>();

        specialinvoke $r3.<com.ctc.wstx.dtd.FullDTDReader: void flushFlattenWriter()>();

        virtualinvoke r5.<java.io.Writer: void flush()>();

        return $r6;
    }

    private com.ctc.wstx.util.TextBuffer getTextBuffer()
    {
        com.ctc.wstx.util.TextBuffer $r1, $r2, $r3, $r4, $r5;
        com.ctc.wstx.dtd.FullDTDReader r0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        $r1 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.util.TextBuffer mTextBuffer>;

        if $r1 != null goto label1;

        $r4 = staticinvoke <com.ctc.wstx.util.TextBuffer: com.ctc.wstx.util.TextBuffer createTemporaryBuffer(int)>(200);

        r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.util.TextBuffer mTextBuffer> = $r4;

        $r5 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.util.TextBuffer mTextBuffer>;

        virtualinvoke $r5.<com.ctc.wstx.util.TextBuffer: void resetInitialized()>();

        goto label2;

     label1:
        $r2 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.util.TextBuffer mTextBuffer>;

        virtualinvoke $r2.<com.ctc.wstx.util.TextBuffer: void resetWithEmpty()>();

     label2:
        $r3 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.util.TextBuffer mTextBuffer>;

        return $r3;
    }

    public void setFlattenWriter(java.io.Writer, boolean, boolean, boolean)
    {
        com.ctc.wstx.dtd.DTDWriter $r1;
        java.io.Writer r2;
        com.ctc.wstx.dtd.FullDTDReader r0;
        boolean z0, z1, z2;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r2 := @parameter0: java.io.Writer;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        $r1 = new com.ctc.wstx.dtd.DTDWriter;

        specialinvoke $r1.<com.ctc.wstx.dtd.DTDWriter: void <init>(java.io.Writer,boolean,boolean,boolean)>(r2, z0, z1, z2);

        r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter> = $r1;

        return;
    }

    private void flushFlattenWriter() throws java.io.IOException
    {
        int $i0;
        com.ctc.wstx.dtd.DTDWriter $r2;
        char[] $r1;
        com.ctc.wstx.dtd.FullDTDReader r0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        $r2 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $r1 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i0 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        virtualinvoke $r2.<com.ctc.wstx.dtd.DTDWriter: void flush(char[],int)>($r1, $i0);

        return;
    }

    public com.ctc.wstx.ent.EntityDecl findEntity(java.lang.String)
    {
        java.util.HashMap $r1, $r3, $r6;
        com.ctc.wstx.ent.EntityDecl $r5, r8;
        java.lang.Object $r4, $r7;
        java.lang.String r2;
        com.ctc.wstx.dtd.FullDTDReader r0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mPredefdGEs>;

        if $r1 == null goto label1;

        $r6 = r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mPredefdGEs>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r8 = (com.ctc.wstx.ent.EntityDecl) $r7;

        if r8 == null goto label1;

        return r8;

     label1:
        $r3 = r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mGeneralEntities>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        $r5 = (com.ctc.wstx.ent.EntityDecl) $r4;

        return $r5;
    }

    protected com.ctc.wstx.dtd.DTDSubset parseDTD() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dtd.DTDWriter $r1, $r2, $r3, $r5, $r6, $r7, $r25, $r26;
        com.ctc.wstx.dtd.FullDTDReader r0;
        java.util.Set $r29, $r30;
        com.ctc.wstx.io.WstxInputSource $r22, $r23;
        java.lang.Throwable $r24;
        long $l1, $l2, $l3;
        com.ctc.wstx.dtd.DTDSubsetImpl r33;
        java.lang.StringBuffer $r13, $r14, $r15, $r18, $r19, $r20, $r34, $r35;
        java.lang.String $r17, $r21, $r27;
        char[] $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z9, $z10, $z11, $z12, $z13, $z14, $z15;
        java.util.HashMap $r8, $r9, $r10, $r11, $r28, $r31, $r32;
        int $i0, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i24, $i25, $i26;
        char $c10, $c12, c23;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

     label01:
        r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCheckForbiddenPEs> = 0;

        $i22 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: int getNextAfterWS()>();

        if $i22 >= 0 goto label03;

        $z6 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mIsExternal>;

        if $z6 == 0 goto label02;

        goto label21;

     label02:
        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwUnexpectedEOF(java.lang.String)>(" in internal DTD subset");

     label03:
        if $i22 != 37 goto label04;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void expandPE()>();

        goto label01;

     label04:
        $l2 = r0.<com.ctc.wstx.dtd.FullDTDReader: long mCurrInputProcessed>;

        $i0 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $l1 = (long) $i0;

        $l3 = $l2 + $l1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: long mTokenInputTotal> = $l3;

        $i4 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mCurrInputRow>;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mTokenInputRow> = $i4;

        $i6 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i5 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mCurrInputRowStart>;

        $i7 = $i6 - $i5;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mTokenInputCol> = $i7;

        if $i22 != 60 goto label08;

        $z5 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mIsExternal>;

        if $z5 != 0 goto label05;

        $r23 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.io.WstxInputSource mInput>;

        $r22 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.io.WstxInputSource mRootInput>;

        if $r23 != $r22 goto label05;

        $z7 = 1;

        goto label06;

     label05:
        $z7 = 0;

     label06:
        r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCheckForbiddenPEs> = $z7;

        $r26 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        if $r26 != null goto label07;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void parseDirective()>();

        goto label01;

     label07:
        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void parseDirectiveFlattened()>();

        goto label01;

     label08:
        if $i22 != 93 goto label19;

        $i8 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mIncludeCount>;

        if $i8 != 0 goto label09;

        $z1 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mIsExternal>;

        if $z1 != 0 goto label09;

        goto label21;

     label09:
        $i9 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mIncludeCount>;

        if $i9 <= 0 goto label19;

        $r1 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        if $r1 == null goto label10;

        $r7 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $z0 = virtualinvoke $r7.<com.ctc.wstx.dtd.DTDWriter: boolean includeConditionals()>();

        if $z0 != 0 goto label10;

        $z15 = 1;

        $z14 = 1;

        goto label11;

     label10:
        $z15 = 0;

        $z14 = 0;

     label11:
        z9 = $z15;

        if $z14 == 0 goto label12;

        $r5 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $r4 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i16 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i17 = $i16 - 1;

        virtualinvoke $r5.<com.ctc.wstx.dtd.DTDWriter: void flush(char[],int)>($r4, $i17);

        $r6 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        virtualinvoke $r6.<com.ctc.wstx.dtd.DTDWriter: void disableOutput()>();

     label12:
        $c10 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

        c23 = $c10;

        $i24 = (int) $c10;

        if $i24 != 93 goto label14;

        $c12 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

        c23 = $c12;

        $i25 = (int) $c12;

        if $i25 != 62 goto label14;

        $i13 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mIncludeCount>;

        $i14 = $i13 - 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mIncludeCount> = $i14;

     label13:
        if z9 == 0 goto label01;

        $r3 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $i15 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        virtualinvoke $r3.<com.ctc.wstx.dtd.DTDWriter: void enableOutput(int)>($i15);

        goto label01;

     label14:
        $i26 = (int) c23;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i26, "; expected \']]>\' to close conditional include section");

     label15:
        if z9 == 0 goto label19;

        $r2 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $i11 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        virtualinvoke $r2.<com.ctc.wstx.dtd.DTDWriter: void enableOutput(int)>($i11);

        goto label19;

     label16:
        $r24 := @caughtexception;

     label17:
        if z9 == 0 goto label18;

        $r25 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $i21 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        virtualinvoke $r25.<com.ctc.wstx.dtd.DTDWriter: void enableOutput(int)>($i21);

     label18:
        throw $r24;

     label19:
        $z10 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mIsExternal>;

        if $z10 == 0 goto label20;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i22, "; expected a \'<\' to start a directive");

     label20:
        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i22, "; expected a \'<\' to start a directive, or \"]>\" to end internal subset");

        goto label01;

     label21:
        $i18 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mIncludeCount>;

        if $i18 <= 0 goto label24;

        $i19 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mIncludeCount>;

        if $i19 != 1 goto label22;

        $r27 = "an INCLUDE block";

        goto label23;

     label22:
        $r34 = new java.lang.StringBuffer;

        specialinvoke $r34.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $i20 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mIncludeCount>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i20);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" INCLUDE blocks");

        $r27 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

     label23:
        $r35 = new java.lang.StringBuffer;

        specialinvoke $r35.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String getErrorMsg()>();

        $r18 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; expected closing marker for ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwUnexpectedEOF(java.lang.String)>($r21);

     label24:
        $z11 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mIsExternal>;

        if $z11 == 0 goto label27;

        $z3 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mUsesPredefdEntities>;

        if $z3 != 0 goto label25;

        $z4 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mUsesPredefdNotations>;

        if $z4 != 0 goto label25;

        $z12 = 1;

        goto label26;

     label25:
        $z12 = 0;

     label26:
        $r28 = r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mGeneralEntities>;

        $r29 = r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.Set mRefdGEs>;

        $r30 = r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.Set mRefdPEs>;

        $r31 = r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mNotations>;

        $r32 = r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mElements>;

        $z13 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgFullyValidating>;

        r33 = staticinvoke <com.ctc.wstx.dtd.DTDSubsetImpl: com.ctc.wstx.dtd.DTDSubsetImpl constructInstance(boolean,java.util.HashMap,java.util.Set,java.util.HashMap,java.util.Set,java.util.HashMap,java.util.HashMap,boolean)>($z12, $r28, $r29, null, $r30, $r31, $r32, $z13);

        goto label28;

     label27:
        $r11 = r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mGeneralEntities>;

        $r10 = r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mParamEntities>;

        $r9 = r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mNotations>;

        $r8 = r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mElements>;

        $z2 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgFullyValidating>;

        r33 = staticinvoke <com.ctc.wstx.dtd.DTDSubsetImpl: com.ctc.wstx.dtd.DTDSubsetImpl constructInstance(boolean,java.util.HashMap,java.util.Set,java.util.HashMap,java.util.Set,java.util.HashMap,java.util.HashMap,boolean)>(0, $r11, null, $r10, null, $r9, $r8, $z2);

     label28:
        return r33;

        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    protected void parseDirective() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dtd.DTDEventListener $r2, $r3, $r4;
        int $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.String $r1;
        com.ctc.wstx.dtd.FullDTDReader r0;
        boolean $z0;
        char $c0, $c1, $c2;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        $c0 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

        $i3 = (int) $c0;

        if $i3 != 63 goto label1;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void readPI()>();

        return;

     label1:
        $i4 = (int) $c0;

        if $i4 == 33 goto label2;

        $i5 = (int) $c0;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i5, "; expected \'!\' to start a directive");

     label2:
        $c1 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

        $i6 = (int) $c1;

        if $i6 != 45 goto label5;

        $c2 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

        $i7 = (int) $c2;

        if $i7 == 45 goto label3;

        $i8 = (int) $c2;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i8, "; expected \'-\' for a comment");

     label3:
        $r2 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDEventListener mEventListener>;

        if $r2 == null goto label4;

        $r3 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDEventListener mEventListener>;

        $z0 = interfaceinvoke $r3.<com.ctc.wstx.dtd.DTDEventListener: boolean dtdReportComments()>();

        if $z0 == 0 goto label4;

        $r4 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDEventListener mEventListener>;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void readComment(com.ctc.wstx.dtd.DTDEventListener)>($r4);

        goto label8;

     label4:
        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void skipComment()>();

        goto label8;

     label5:
        $i9 = (int) $c1;

        if $i9 != 91 goto label6;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void checkInclusion()>();

        goto label8;

     label6:
        $i10 = (int) $c1;

        if $i10 < 65 goto label7;

        $i11 = (int) $c1;

        if $i11 > 90 goto label7;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void handleDeclaration(char)>($c1);

        goto label8;

     label7:
        $r1 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_DTD_MAINLEVEL_KEYWORD>;

        $i12 = (int) $c1;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i12, $r1);

     label8:
        return;
    }

    protected void parseDirectiveFlattened() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dtd.DTDWriter $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r21, $r23;
        com.ctc.wstx.dtd.FullDTDReader r0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Throwable $r20, $r22;
        int $i0, $i1, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        java.lang.String $r4, $r17;
        char $c2, $c3, $c7;
        char[] $r1;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        $r2 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $r1 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i0 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i1 = $i0 - 1;

        virtualinvoke $r2.<com.ctc.wstx.dtd.DTDWriter: void flush(char[],int)>($r1, $i1);

        $r3 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        virtualinvoke $r3.<com.ctc.wstx.dtd.DTDWriter: void disableOutput()>();

        $c2 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

        $i13 = (int) $c2;

        if $i13 != 63 goto label01;

        $r18 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $i10 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        virtualinvoke $r18.<com.ctc.wstx.dtd.DTDWriter: void enableOutput(int)>($i10);

        $r19 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        virtualinvoke $r19.<com.ctc.wstx.dtd.DTDWriter: void output(java.lang.String)>("<?");

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void readPI()>();

        return;

     label01:
        $i14 = (int) $c2;

        if $i14 == 33 goto label02;

        $r17 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_DTD_MAINLEVEL_KEYWORD>;

        $i15 = (int) $c2;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i15, $r17);

     label02:
        $c3 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

        $i16 = (int) $c3;

        if $i16 != 45 goto label10;

        $c7 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

        $i17 = (int) $c7;

        if $i17 == 45 goto label03;

        $i18 = (int) $c7;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i18, "; expected \'-\' for a comment");

     label03:
        $r13 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $z2 = virtualinvoke $r13.<com.ctc.wstx.dtd.DTDWriter: boolean includeComments()>();

        if $z2 == 0 goto label04;

        $r15 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $i9 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        virtualinvoke $r15.<com.ctc.wstx.dtd.DTDWriter: void enableOutput(int)>($i9);

        $r16 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        virtualinvoke $r16.<com.ctc.wstx.dtd.DTDWriter: void output(java.lang.String)>("<!--");

     label04:
        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void skipComment()>();

     label05:
        if $z2 != 0 goto label09;

        $r14 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $i8 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        virtualinvoke $r14.<com.ctc.wstx.dtd.DTDWriter: void enableOutput(int)>($i8);

        goto label09;

     label06:
        $r22 := @caughtexception;

     label07:
        if $z2 != 0 goto label08;

        $r23 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $i12 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        virtualinvoke $r23.<com.ctc.wstx.dtd.DTDWriter: void enableOutput(int)>($i12);

     label08:
        throw $r22;

     label09:
        goto label22;

     label10:
        $i19 = (int) $c3;

        if $i19 != 91 goto label17;

        $r9 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $z1 = virtualinvoke $r9.<com.ctc.wstx.dtd.DTDWriter: boolean includeConditionals()>();

        if $z1 == 0 goto label11;

        $r11 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $i6 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        virtualinvoke $r11.<com.ctc.wstx.dtd.DTDWriter: void enableOutput(int)>($i6);

        $r12 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        virtualinvoke $r12.<com.ctc.wstx.dtd.DTDWriter: void output(java.lang.String)>("<![");

     label11:
        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void checkInclusion()>();

     label12:
        if $z1 != 0 goto label16;

        $r10 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $i5 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        virtualinvoke $r10.<com.ctc.wstx.dtd.DTDWriter: void enableOutput(int)>($i5);

        goto label16;

     label13:
        $r20 := @caughtexception;

     label14:
        if $z1 != 0 goto label15;

        $r21 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $i11 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        virtualinvoke $r21.<com.ctc.wstx.dtd.DTDWriter: void enableOutput(int)>($i11);

     label15:
        throw $r20;

     label16:
        goto label22;

     label17:
        $i20 = (int) $c3;

        if $i20 != 69 goto label18;

        $r8 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $z0 = virtualinvoke $r8.<com.ctc.wstx.dtd.DTDWriter: boolean includeParamEntities()>();

        if $z0 != 0 goto label18;

        $z3 = 1;

        goto label19;

     label18:
        $z3 = 0;

     label19:
        if $z3 == 0 goto label20;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void handleSuppressedDeclaration()>();

        goto label22;

     label20:
        $i21 = (int) $c3;

        if $i21 < 65 goto label21;

        $i22 = (int) $c3;

        if $i22 > 90 goto label21;

        $r5 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $i4 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        virtualinvoke $r5.<com.ctc.wstx.dtd.DTDWriter: void enableOutput(int)>($i4);

        $r6 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        virtualinvoke $r6.<com.ctc.wstx.dtd.DTDWriter: void output(java.lang.String)>("<!");

        $r7 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        virtualinvoke $r7.<com.ctc.wstx.dtd.DTDWriter: void output(char)>($c3);

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void handleDeclaration(char)>($c3);

        goto label22;

     label21:
        $r4 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_DTD_MAINLEVEL_KEYWORD>;

        $i23 = (int) $c3;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i23, $r4);

     label22:
        return;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    protected void initInputSource(com.ctc.wstx.io.WstxInputSource, boolean) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        java.lang.Throwable $r7;
        com.ctc.wstx.dtd.DTDWriter $r1, $r4, $r5, $r6, $r8;
        int $i0, $i1, $i2;
        char[] $r3;
        com.ctc.wstx.dtd.FullDTDReader r0;
        com.ctc.wstx.io.WstxInputSource r2;
        boolean z0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r2 := @parameter0: com.ctc.wstx.io.WstxInputSource;

        z0 := @parameter1: boolean;

        $r1 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        if $r1 == null goto label5;

        $r4 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $r3 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i0 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        virtualinvoke $r4.<com.ctc.wstx.dtd.DTDWriter: void flush(char[],int)>($r3, $i0);

        $r5 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        virtualinvoke $r5.<com.ctc.wstx.dtd.DTDWriter: void disableOutput()>();

     label1:
        specialinvoke r0.<com.ctc.wstx.dtd.MinimalDTDReader: void initInputSource(com.ctc.wstx.io.WstxInputSource,boolean)>(r2, z0);

     label2:
        $r6 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $i1 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        virtualinvoke $r6.<com.ctc.wstx.dtd.DTDWriter: void enableOutput(int)>($i1);

        goto label6;

     label3:
        $r7 := @caughtexception;

     label4:
        $r8 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $i2 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        virtualinvoke $r8.<com.ctc.wstx.dtd.DTDWriter: void enableOutput(int)>($i2);

        throw $r7;

     label5:
        specialinvoke r0.<com.ctc.wstx.dtd.MinimalDTDReader: void initInputSource(com.ctc.wstx.io.WstxInputSource,boolean)>(r2, z0);

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected boolean loadMore() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.api.ReaderConfig $r5;
        com.ctc.wstx.dtd.DTDWriter $r1, $r4, $r6, $r7, $r8, $r10;
        com.ctc.wstx.dtd.FullDTDReader r0;
        boolean $z0, $z1, $z2, $z3;
        com.ctc.wstx.io.WstxInputSource $r2, $r3, r11;
        long $l6, $l8, $l9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i10, $i11, $i12, $i13, $i14, $i15;
        char[] $r9;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r11 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.io.WstxInputSource mInput>;

        $r1 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        if $r1 == null goto label01;

        $r10 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $r9 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i5 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        virtualinvoke $r10.<com.ctc.wstx.dtd.DTDWriter: void flush(char[],int)>($r9, $i5);

     label01:
        $l6 = r0.<com.ctc.wstx.dtd.FullDTDReader: long mCurrInputProcessed>;

        $i7 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        $l8 = (long) $i7;

        $l9 = $l6 + $l8;

        r0.<com.ctc.wstx.dtd.FullDTDReader: long mCurrInputProcessed> = $l9;

        $i10 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mCurrInputRowStart>;

        $i11 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        $i12 = $i10 - $i11;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mCurrInputRowStart> = $i12;

        $i13 = virtualinvoke r11.<com.ctc.wstx.io.WstxInputSource: int readInto(com.ctc.wstx.io.WstxInputData)>(r0);

        if $i13 <= 0 goto label03;

        $r7 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        if $r7 == null goto label02;

        $r8 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $i4 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        virtualinvoke $r8.<com.ctc.wstx.dtd.DTDWriter: void setFlattenStart(int)>($i4);

     label02:
        return 1;

     label03:
        virtualinvoke r11.<com.ctc.wstx.io.WstxInputSource: void close()>();

        $r2 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.io.WstxInputSource mRootInput>;

        if r11 != $r2 goto label04;

        return 0;

     label04:
        $r3 = virtualinvoke r11.<com.ctc.wstx.io.WstxInputSource: com.ctc.wstx.io.WstxInputSource getParent()>();

        if $r3 != null goto label05;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwNullParent(com.ctc.wstx.io.WstxInputSource)>(r11);

     label05:
        $i0 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mCurrDepth>;

        $i1 = virtualinvoke r11.<com.ctc.wstx.io.WstxInputSource: int getScopeId()>();

        if $i0 == $i1 goto label06;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void handleIncompleteEntityProblem(com.ctc.wstx.io.WstxInputSource)>(r11);

     label06:
        r11 = $r3;

        r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.io.WstxInputSource mInput> = $r3;

        virtualinvoke $r3.<com.ctc.wstx.io.WstxInputSource: void restoreContext(com.ctc.wstx.io.WstxInputData)>(r0);

        $r4 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        if $r4 == null goto label07;

        $r6 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $i3 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        virtualinvoke $r6.<com.ctc.wstx.dtd.DTDWriter: void setFlattenStart(int)>($i3);

     label07:
        $i2 = virtualinvoke $r3.<com.ctc.wstx.io.WstxInputSource: int getScopeId()>();

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputTopDepth> = $i2;

        $z0 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgNormalizeLFs>;

        $r5 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.api.ReaderConfig mConfig>;

        $z1 = virtualinvoke $r5.<com.ctc.wstx.api.ReaderConfig: boolean willNormalizeLFs()>();

        if $z0 == $z1 goto label10;

        $z2 = virtualinvoke $r3.<com.ctc.wstx.io.WstxInputSource: boolean fromInternalEntity()>();

        if $z2 != 0 goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgNormalizeLFs> = $z3;

     label10:
        $i14 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i15 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        if $i14 >= $i15 goto label01;

        return 1;
    }

    protected boolean loadMoreFromCurrent() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        long $l1, $l2, $l3;
        com.ctc.wstx.dtd.DTDWriter $r1, $r3, $r4, $r6;
        int $i0, $i4, $i5, $i6, $i7, $i8, $i9;
        com.ctc.wstx.dtd.FullDTDReader r0;
        char[] $r5;
        com.ctc.wstx.io.WstxInputSource $r2;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        $r1 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        if $r1 == null goto label1;

        $r6 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $r5 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i9 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        virtualinvoke $r6.<com.ctc.wstx.dtd.DTDWriter: void flush(char[],int)>($r5, $i9);

     label1:
        $l2 = r0.<com.ctc.wstx.dtd.FullDTDReader: long mCurrInputProcessed>;

        $i0 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        $l1 = (long) $i0;

        $l3 = $l2 + $l1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: long mCurrInputProcessed> = $l3;

        $i5 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mCurrInputRowStart>;

        $i4 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        $i6 = $i5 - $i4;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mCurrInputRowStart> = $i6;

        $r2 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.io.WstxInputSource mInput>;

        $i7 = virtualinvoke $r2.<com.ctc.wstx.io.WstxInputSource: int readInto(com.ctc.wstx.io.WstxInputData)>(r0);

        if $i7 <= 0 goto label3;

        $r3 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        if $r3 == null goto label2;

        $r4 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $i8 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        virtualinvoke $r4.<com.ctc.wstx.dtd.DTDWriter: void setFlattenStart(int)>($i8);

     label2:
        return 1;

     label3:
        return 0;
    }

    protected boolean ensureInput(int) throws java.io.IOException
    {
        int $i0, $i1, i2, i3, $i4;
        com.ctc.wstx.dtd.DTDWriter $r1, $r3, $r4, $r6;
        char[] $r5;
        com.ctc.wstx.dtd.FullDTDReader r0;
        com.ctc.wstx.io.WstxInputSource $r2;
        boolean $z0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        i3 := @parameter0: int;

        $i1 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        $i0 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        i2 = $i1 - $i0;

        if i2 < i3 goto label1;

        return 1;

     label1:
        $r1 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        if $r1 == null goto label2;

        $r6 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $r5 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i4 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        virtualinvoke $r6.<com.ctc.wstx.dtd.DTDWriter: void flush(char[],int)>($r5, $i4);

     label2:
        $r2 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.io.WstxInputSource mInput>;

        $z0 = virtualinvoke $r2.<com.ctc.wstx.io.WstxInputSource: boolean readMore(com.ctc.wstx.io.WstxInputData,int)>(r0, i3);

        if $z0 == 0 goto label4;

        $r3 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        if $r3 == null goto label3;

        $r4 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        virtualinvoke $r4.<com.ctc.wstx.dtd.DTDWriter: void setFlattenStart(int)>(i2);

     label3:
        return 1;

     label4:
        return 0;
    }

    private void loadMoreScoped(com.ctc.wstx.io.WstxInputSource, java.lang.String, javax.xml.stream.Location) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        java.lang.StringBuffer $r5, $r6, $r8, $r9, $r11, $r12;
        javax.xml.stream.Location r10;
        java.lang.String $r3, r7, $r13;
        com.ctc.wstx.dtd.FullDTDReader r0;
        com.ctc.wstx.io.WstxInputSource r1, $r2, $r4;
        boolean $z0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r1 := @parameter0: com.ctc.wstx.io.WstxInputSource;

        r7 := @parameter1: java.lang.String;

        r10 := @parameter2: javax.xml.stream.Location;

        $r2 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.io.WstxInputSource mInput>;

        if $r2 != r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r3 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String getErrorMsg()>();

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: boolean loadMore(java.lang.String)>($r3);

        if $z0 == 0 goto label3;

        $r4 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.io.WstxInputSource mInput>;

        if $r4 == r1 goto label3;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unterminated entity value for entity \'");

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' (definition started at ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportWFCViolation(java.lang.String)>($r13);

     label3:
        return;
    }

    private char dtdNextIfAvailable() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        char c7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        char[] $r1;
        com.ctc.wstx.dtd.FullDTDReader r0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        $i1 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i0 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        if $i1 >= $i0 goto label1;

        $r1 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i5 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i6 = $i5 + 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i6;

        c7 = $r1[$i5];

        goto label3;

     label1:
        $i2 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: int peekNext()>();

        if $i2 >= 0 goto label2;

        return 0;

     label2:
        $i3 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i4 = $i3 + 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i4;

        c7 = (char) $i2;

     label3:
        if c7 != 0 goto label4;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwNullChar()>();

     label4:
        return c7;
    }

    private char getNextExpanded() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        char $c4;
        int $i0, $i1, $i2, $i3, $i5;
        char[] $r2;
        java.lang.String $r1;
        com.ctc.wstx.dtd.FullDTDReader r0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

     label1:
        $i1 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i0 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        if $i1 >= $i0 goto label2;

        $r2 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i2 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i3 = $i2 + 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i3;

        $c4 = $r2[$i2];

        goto label3;

     label2:
        $r1 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String getErrorMsg()>();

        $c4 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char getNextChar(java.lang.String)>($r1);

     label3:
        $i5 = (int) $c4;

        if $i5 == 37 goto label4;

        return $c4;

     label4:
        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void expandPE()>();

        goto label1;
    }

    private char skipDtdWs(boolean) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        int $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.String $r1;
        com.ctc.wstx.dtd.FullDTDReader r0;
        boolean z0;
        char c0, $c5;
        char[] $r2;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        z0 := @parameter0: boolean;

     label1:
        $i3 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i4 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        if $i3 >= $i4 goto label2;

        $r2 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i1 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i2 = $i1 + 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i2;

        $c5 = $r2[$i1];

        goto label3;

     label2:
        $r1 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String getErrorMsg()>();

        $c5 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char getNextChar(java.lang.String)>($r1);

     label3:
        c0 = $c5;

        $i6 = (int) $c5;

        if $i6 <= 32 goto label5;

        $i7 = (int) $c5;

        if $i7 != 37 goto label4;

        if z0 == 0 goto label4;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void expandPE()>();

        goto label1;

     label4:
        return c0;

     label5:
        $i8 = (int) $c5;

        if $i8 == 10 goto label6;

        $i9 = (int) $c5;

        if $i9 != 13 goto label7;

     label6:
        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: boolean skipCRLF(char)>(c0);

        goto label8;

     label7:
        $i10 = (int) $c5;

        if $i10 == 32 goto label8;

        $i11 = (int) $c5;

        if $i11 == 9 goto label8;

        $i12 = (int) $c5;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwInvalidSpace(int)>($i12);

     label8:
        goto label1;
    }

    private char skipObligatoryDtdWs() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        int $i0, $i1, $i2, $i3, $i4, $i7, $i8, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        java.lang.String $r2, $r4;
        com.ctc.wstx.dtd.FullDTDReader r0;
        char $c5, c6, $c9;
        char[] $r1, $r3;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        $i0 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: int peekNext()>();

        $i11 = (int) -1;

        if $i0 != $i11 goto label01;

        $r4 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String getErrorMsg()>();

        $c5 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char getNextChar(java.lang.String)>($r4);

        c6 = $c5;

        $i12 = (int) $c5;

        if $i12 <= 32 goto label02;

        $i13 = (int) $c5;

        if $i13 == 37 goto label02;

        return $c5;

     label01:
        $r1 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i1 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i2 = $i1 + 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i2;

        c6 = $r1[$i1];

        $i14 = (int) c6;

        if $i14 <= 32 goto label02;

        $i15 = (int) c6;

        if $i15 == 37 goto label02;

        $i16 = (int) c6;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i16, "; expected a separating white space");

     label02:
        $i17 = (int) c6;

        if $i17 != 37 goto label03;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void expandPE()>();

        goto label07;

     label03:
        $i18 = (int) c6;

        if $i18 <= 32 goto label04;

        goto label10;

     label04:
        $i19 = (int) c6;

        if $i19 == 10 goto label05;

        $i20 = (int) c6;

        if $i20 != 13 goto label06;

     label05:
        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: boolean skipCRLF(char)>(c6);

        goto label07;

     label06:
        $i21 = (int) c6;

        if $i21 == 32 goto label07;

        $i22 = (int) c6;

        if $i22 == 9 goto label07;

        $i23 = (int) c6;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwInvalidSpace(int)>($i23);

     label07:
        $i7 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i8 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        if $i7 >= $i8 goto label08;

        $r3 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i3 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i4 = $i3 + 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i4;

        $c9 = $r3[$i3];

        goto label09;

     label08:
        $r2 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String getErrorMsg()>();

        $c9 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char getNextChar(java.lang.String)>($r2);

     label09:
        c6 = $c9;

        goto label02;

     label10:
        return c6;
    }

    private void expandPE() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dtd.DTDWriter $r1, $r6, $r7, $r8, $r12;
        com.ctc.wstx.dtd.FullDTDReader r0;
        boolean $z0;
        java.lang.Throwable $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i25, $i26;
        java.lang.Boolean $r2;
        java.lang.String r13;
        char $c20, $c21, c22, $c23, $c24;
        char[] $r3, $r4, $r5, $r9, $r10;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        $z0 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCheckForbiddenPEs>;

        if $z0 == 0 goto label01;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwForbiddenPE()>();

     label01:
        $r1 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        if $r1 == null goto label10;

        $r6 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $r5 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i8 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i9 = $i8 - 1;

        virtualinvoke $r6.<com.ctc.wstx.dtd.DTDWriter: void flush(char[],int)>($r5, $i9);

        $r7 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        virtualinvoke $r7.<com.ctc.wstx.dtd.DTDWriter: void disableOutput()>();

        $i11 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i10 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        if $i11 >= $i10 goto label02;

        $r10 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i17 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i18 = $i17 + 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i18;

        $c20 = $r10[$i17];

        goto label03;

     label02:
        $c20 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

     label03:
        r13 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String readDTDName(char)>($c20);

     label04:
        $i13 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i12 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        if $i13 >= $i12 goto label05;

        $r9 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i15 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i16 = $i15 + 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i16;

        $c21 = $r9[$i15];

        goto label06;

     label05:
        $c21 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

     label06:
        c22 = $c21;

     label07:
        $r8 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $i14 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        virtualinvoke $r8.<com.ctc.wstx.dtd.DTDWriter: void enableOutput(int)>($i14);

        goto label15;

     label08:
        $r11 := @caughtexception;

     label09:
        $r12 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $i19 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        virtualinvoke $r12.<com.ctc.wstx.dtd.DTDWriter: void enableOutput(int)>($i19);

        throw $r11;

     label10:
        $i1 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i0 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        if $i1 >= $i0 goto label11;

        $r4 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i6 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i7 = $i6 + 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i7;

        $c23 = $r4[$i6];

        goto label12;

     label11:
        $c23 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

     label12:
        r13 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String readDTDName(char)>($c23);

        $i3 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i2 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        if $i3 >= $i2 goto label13;

        $r3 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i4 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i5 = $i4 + 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i5;

        $c24 = $r3[$i4];

        goto label14;

     label13:
        $c24 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

     label14:
        c22 = $c24;

     label15:
        $i25 = (int) c22;

        if $i25 == 59 goto label16;

        $i26 = (int) c22;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i26, "; expected \';\' to end parameter entity name");

     label16:
        r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mExpandingPE> = 1;

        $r2 = <com.ctc.wstx.dtd.FullDTDReader: java.lang.Boolean ENTITY_EXP_PE>;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.ent.EntityDecl expandEntity(java.lang.String,boolean,java.lang.Object)>(r13, 1, $r2);

        return;

        catch java.lang.Throwable from label04 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    protected java.lang.String checkDTDKeyword(java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        java.lang.StringBuffer $r7;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i10, $i11, i12, $i15, $i16;
        java.lang.String r0, $r2, $r4, $r5;
        com.ctc.wstx.dtd.FullDTDReader r3;
        boolean $z0, $z1;
        char $c3, $c8, $c9, c13, $c14;
        char[] $r6;

        r3 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r0 := @parameter0: java.lang.String;

        i12 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        c13 = 32;

     label01:
        if i12 >= $i0 goto label05;

        $i7 = r3.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i6 = r3.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        if $i7 >= $i6 goto label02;

        $r6 = r3.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i10 = r3.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i11 = $i10 + 1;

        r3.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i11;

        c13 = $r6[$i10];

        goto label03;

     label02:
        $c8 = specialinvoke r3.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextIfAvailable()>();

        c13 = $c8;

        if $c8 != 0 goto label03;

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i12);

        return $r5;

     label03:
        $c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i12);

        $i15 = (int) $c9;

        if c13 == $i15 goto label04;

        goto label05;

     label04:
        i12 = i12 + 1;

        goto label01;

     label05:
        if i12 != $i0 goto label07;

        $c3 = specialinvoke r3.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextIfAvailable()>();

        c13 = $c3;

        if $c3 != 0 goto label06;

        return null;

     label06:
        $z1 = virtualinvoke r3.<com.ctc.wstx.dtd.FullDTDReader: boolean isNameChar(char)>($c3);

        if $z1 != 0 goto label07;

        $i4 = r3.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i5 = $i4 - 1;

        r3.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i5;

        return null;

     label07:
        $r7 = new java.lang.StringBuffer;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i12);

        specialinvoke $r7.<java.lang.StringBuffer: void <init>(java.lang.String)>($r2);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c13);

     label08:
        $c14 = specialinvoke r3.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextIfAvailable()>();

        if $c14 != 0 goto label09;

        goto label11;

     label09:
        $z0 = virtualinvoke r3.<com.ctc.wstx.dtd.FullDTDReader: boolean isNameChar(char)>($c14);

        if $z0 != 0 goto label10;

        $i16 = (int) $c14;

        if $i16 == 58 goto label10;

        $i1 = r3.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i2 = $i1 - 1;

        r3.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i2;

        goto label11;

     label10:
        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c14);

        goto label08;

     label11:
        $r4 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    protected java.lang.String readDTDKeyword(java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        char $c2, c7;
        java.lang.StringBuffer $r5;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i8;
        char[] $r4;
        java.lang.String r1, $r3;
        com.ctc.wstx.dtd.FullDTDReader r2;
        boolean $z0;

        r2 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r1 := @parameter0: java.lang.String;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(java.lang.String)>(r1);

     label1:
        $i1 = r2.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i0 = r2.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        if $i1 >= $i0 goto label2;

        $r4 = r2.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i5 = r2.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i6 = $i5 + 1;

        r2.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i6;

        c7 = $r4[$i5];

        goto label3;

     label2:
        $c2 = specialinvoke r2.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextIfAvailable()>();

        c7 = $c2;

        if $c2 != 0 goto label3;

        goto label5;

     label3:
        $z0 = virtualinvoke r2.<com.ctc.wstx.dtd.FullDTDReader: boolean isNameChar(char)>(c7);

        if $z0 != 0 goto label4;

        $i8 = (int) c7;

        if $i8 == 58 goto label4;

        $i3 = r2.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i4 = $i3 - 1;

        r2.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i4;

        goto label5;

     label4:
        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c7);

        goto label1;

     label5:
        $r3 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    private boolean checkPublicSystemKeyword(char) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        java.lang.StringBuffer $r4, $r5, $r8, $r9, $r12, $r13, $r14, $r16, $r17, $r18;
        int $i1, $i2, $i3;
        java.lang.String $r1, $r2, $r6, r10, $r15;
        com.ctc.wstx.dtd.FullDTDReader r0;
        boolean $z0;
        char c0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 != 80 goto label2;

        $r6 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String checkDTDKeyword(java.lang.String)>("UBLIC");

        if $r6 != null goto label1;

        return 1;

     label1:
        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("P");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label6;

     label2:
        $i2 = (int) c0;

        if $i2 != 83 goto label4;

        $r2 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String checkDTDKeyword(java.lang.String)>("YSTEM");

        if $r2 != null goto label3;

        return 0;

     label3:
        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("S");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        r10 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label6;

     label4:
        $z0 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: boolean isNameStartChar(char)>(c0);

        if $z0 != 0 goto label5;

        $i3 = (int) c0;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i3, "; expected \'PUBLIC\' or \'SYSTEM\' keyword");

     label5:
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0);

        r10 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String readDTDKeyword(java.lang.String)>($r1);

     label6:
        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized keyword \'");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'; expected \'PUBLIC\' or \'SYSTEM\'");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportWFCViolation(java.lang.String)>($r15);

        return 0;
    }

    private java.lang.String readDTDName(char) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        int $i1;
        char c0;
        java.lang.String $r1;
        com.ctc.wstx.dtd.FullDTDReader r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        c0 := @parameter0: char;

        $z0 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: boolean isNameStartChar(char)>(c0);

        if $z0 != 0 goto label1;

        $i1 = (int) c0;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i1, "; expected an identifier");

     label1:
        $r1 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String parseFullName(char)>(c0);

        return $r1;
    }

    private java.lang.String readDTDLocalName(char, boolean) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        int $i1;
        char c0;
        java.lang.String $r1;
        com.ctc.wstx.dtd.FullDTDReader r0;
        boolean z0, $z1;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        c0 := @parameter0: char;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: boolean isNameStartChar(char)>(c0);

        if $z1 != 0 goto label1;

        $i1 = (int) c0;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i1, "; expected an identifier");

     label1:
        $r1 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String parseLocalName(char)>(c0);

        return $r1;
    }

    private java.lang.String readDTDNmtoken(char) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, i9, i10, $i11, $i12;
        java.lang.String $r6;
        com.ctc.wstx.dtd.FullDTDReader r0;
        boolean $z0;
        char $c3, c8;
        char[] $r1, $r3, $r4, r5;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        c8 := @parameter0: char;

        $r1 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char[] getNameBuffer(int)>(64);

        r5 = $r1;

        i9 = lengthof $r1;

        i10 = 0;

     label1:
        $z0 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: boolean isNameChar(char)>(c8);

        if $z0 != 0 goto label3;

        $i11 = (int) c8;

        if $i11 == 58 goto label3;

        if i10 != 0 goto label2;

        $i12 = (int) c8;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i12, "; expected a NMTOKEN character to start a NMTOKEN");

     label2:
        $i6 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i7 = $i6 - 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i7;

        goto label6;

     label3:
        if i10 < i9 goto label4;

        $r4 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char[] expandBy50Pct(char[])>(r5);

        r5 = $r4;

        i9 = lengthof $r4;

     label4:
        $i0 = i10;

        i10 = i10 + 1;

        r5[$i0] = c8;

        $i2 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i1 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        if $i2 >= $i1 goto label5;

        $r3 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i4 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i5 = $i4 + 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i5;

        c8 = $r3[$i4];

        goto label1;

     label5:
        $c3 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextIfAvailable()>();

        c8 = $c3;

        if $c3 != 0 goto label1;

        goto label6;

     label6:
        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>(char[],int,int)>(r5, 0, i10);

        return $r6;
    }

    private com.ctc.wstx.dtd.NameKey readDTDQName(char) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        char c0, $c1, $c4;
        com.ctc.wstx.dtd.NameKey $r4;
        int $i2, $i3, $i5;
        java.lang.String $r1, r2, r3;
        com.ctc.wstx.dtd.FullDTDReader r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        c0 := @parameter0: char;

        $z0 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgNsEnabled>;

        if $z0 != 0 goto label1;

        r2 = null;

        r3 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String parseFullName(char)>(c0);

        goto label4;

     label1:
        $r1 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String parseLocalName(char)>(c0);

        r3 = $r1;

        $c1 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextIfAvailable()>();

        if $c1 != 0 goto label2;

        r2 = null;

        goto label4;

     label2:
        $i5 = (int) $c1;

        if $i5 != 58 goto label3;

        r2 = $r1;

        $c4 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

        r3 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String parseLocalName(char)>($c4);

        goto label4;

     label3:
        r2 = null;

        $i2 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i3 = $i2 - 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i3;

     label4:
        $r4 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.NameKey findSharedName(java.lang.String,java.lang.String)>(r2, r3);

        return $r4;
    }

    private char readArity() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        char c2, $c7;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i8, $i9, $i10;
        char[] $r2;
        java.lang.String $r1;
        com.ctc.wstx.dtd.FullDTDReader r0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        $i1 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i0 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        if $i1 >= $i0 goto label1;

        $r2 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i5 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i6 = $i5 + 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i6;

        $c7 = $r2[$i5];

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String getErrorMsg()>();

        $c7 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char getNextChar(java.lang.String)>($r1);

     label2:
        c2 = $c7;

        $i8 = (int) $c7;

        if $i8 == 63 goto label3;

        $i9 = (int) $c7;

        if $i9 == 42 goto label3;

        $i10 = (int) $c7;

        if $i10 != 43 goto label4;

     label3:
        return c2;

     label4:
        $i3 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i4 = $i3 - 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i4;

        return 32;
    }

    private char[] parseEntityValue(java.lang.String, javax.xml.stream.Location, char) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.util.TextBuffer $r10, r11;
        com.ctc.wstx.dtd.FullDTDReader r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, z8, z9;
        com.ctc.wstx.io.WstxInputSource r1, $r6, $r8, $r9;
        int $i0, $i1, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i14, $i15, i18, $i19, $i20, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39;
        java.lang.String r4;
        char c2, $c6, $c12, $c13, $c16, $c17, c21;
        javax.xml.stream.Location r5;
        char[] $r2, $r3, $r7, r12;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: javax.xml.stream.Location;

        c2 := @parameter2: char;

        r1 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.io.WstxInputSource mInput>;

        $z0 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mIsExternal>;

        if $z0 != 0 goto label01;

        $r9 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.io.WstxInputSource mInput>;

        $r8 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.io.WstxInputSource mRootInput>;

        if $r9 == $r8 goto label02;

     label01:
        goto label02;

     label02:
        $r10 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.util.TextBuffer mValueBuffer>;

        r11 = $r10;

        if $r10 != null goto label03;

        r11 = staticinvoke <com.ctc.wstx.util.TextBuffer: com.ctc.wstx.util.TextBuffer createTemporaryBuffer(int)>(500);

     label03:
        virtualinvoke r11.<com.ctc.wstx.util.TextBuffer: void resetInitialized()>();

        r12 = virtualinvoke r11.<com.ctc.wstx.util.TextBuffer: char[] getCurrentSegment()>();

        i18 = virtualinvoke r11.<com.ctc.wstx.util.TextBuffer: int getCurrentSegmentSize()>();

     label04:
        $i19 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i20 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        if $i19 < $i20 goto label05;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void loadMoreScoped(com.ctc.wstx.io.WstxInputSource,java.lang.String,javax.xml.stream.Location)>(r1, r4, r5);

     label05:
        $r2 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i0 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i1 = $i0 + 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i1;

        $c17 = $r2[$i0];

        c21 = $c17;

        $i24 = (int) $c17;

        if $i24 < 63 goto label06;

        goto label26;

     label06:
        $i25 = (int) $c17;

        $i26 = (int) c2;

        if $i25 != $i26 goto label07;

        $r6 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.io.WstxInputSource mInput>;

        if $r6 != r1 goto label26;

        goto label28;

     label07:
        $i27 = (int) $c17;

        if $i27 != 38 goto label19;

        $c6 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char resolveCharOnlyEntity(boolean)>(0);

        if $c6 == 0 goto label09;

        c21 = $c6;

        $c13 = r0.<com.ctc.wstx.dtd.FullDTDReader: char mSurrogateSecond>;

        if $c13 == 0 goto label18;

        $i14 = lengthof r12;

        if i18 < $i14 goto label08;

        r12 = virtualinvoke r11.<com.ctc.wstx.util.TextBuffer: char[] finishCurrentSegment()>();

        i18 = 0;

     label08:
        $i15 = i18;

        i18 = i18 + 1;

        r12[$i15] = $c6;

        c21 = r0.<com.ctc.wstx.dtd.FullDTDReader: char mSurrogateSecond>;

        r0.<com.ctc.wstx.dtd.FullDTDReader: char mSurrogateSecond> = 0;

        goto label18;

     label09:
        z7 = 1;

        z9 = 1;

        z8 = 1;

     label10:
        $i22 = lengthof r12;

        if i18 < $i22 goto label11;

        r12 = virtualinvoke r11.<com.ctc.wstx.util.TextBuffer: char[] finishCurrentSegment()>();

        i18 = 0;

     label11:
        $i7 = i18;

        i18 = i18 + 1;

        r12[$i7] = c21;

        $i9 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i8 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        if $i9 < $i8 goto label12;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void loadMoreScoped(com.ctc.wstx.io.WstxInputSource,java.lang.String,javax.xml.stream.Location)>(r1, r4, r5);

     label12:
        $r3 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i10 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i11 = $i10 + 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i11;

        $c12 = $r3[$i10];

        c21 = $c12;

        $i28 = (int) $c12;

        if $i28 != 59 goto label13;

        goto label18;

     label13:
        if z9 == 0 goto label14;

        z7 = 0;

        z9 = 0;

        z8 = 0;

        $z6 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: boolean isNameStartChar(char)>($c12);

        if $z6 == 0 goto label15;

        goto label10;

     label14:
        $z4 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: boolean isNameChar(char)>($c12);

        if $z4 == 0 goto label15;

        goto label10;

     label15:
        $i29 = (int) $c12;

        if $i29 != 58 goto label16;

        $z5 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgNsEnabled>;

        if $z5 != 0 goto label16;

        goto label10;

     label16:
        if z8 == 0 goto label17;

        $i30 = (int) $c12;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i30, "; expected entity name after \'&\'");

     label17:
        $i31 = (int) $c12;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i31, "; expected semi-colon after entity name");

        goto label10;

     label18:
        goto label26;

     label19:
        $i32 = (int) $c17;

        if $i32 != 37 goto label20;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void expandPE()>();

        goto label04;

     label20:
        $i33 = (int) $c17;

        if $i33 >= 32 goto label26;

        $i34 = (int) $c17;

        if $i34 != 10 goto label21;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void markLF()>();

        goto label26;

     label21:
        $i35 = (int) $c17;

        if $i35 != 13 goto label25;

        $z1 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: boolean skipCRLF(char)>($c17);

        if $z1 == 0 goto label24;

        $z3 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgNormalizeLFs>;

        if $z3 != 0 goto label23;

        $i4 = lengthof r12;

        if i18 < $i4 goto label22;

        r12 = virtualinvoke r11.<com.ctc.wstx.util.TextBuffer: char[] finishCurrentSegment()>();

        i18 = 0;

     label22:
        $i5 = i18;

        i18 = i18 + 1;

        r12[$i5] = $c17;

     label23:
        c21 = 10;

        goto label26;

     label24:
        $z2 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgNormalizeLFs>;

        if $z2 == 0 goto label26;

        c21 = 10;

        goto label26;

     label25:
        $i36 = (int) $c17;

        if $i36 == 9 goto label26;

        $i37 = (int) $c17;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwInvalidSpace(int)>($i37);

     label26:
        $i23 = lengthof r12;

        if i18 < $i23 goto label27;

        r12 = virtualinvoke r11.<com.ctc.wstx.util.TextBuffer: char[] finishCurrentSegment()>();

        i18 = 0;

     label27:
        $i3 = i18;

        i18 = i18 + 1;

        r12[$i3] = c21;

        goto label04;

     label28:
        virtualinvoke r11.<com.ctc.wstx.util.TextBuffer: void setCurrentLength(int)>(i18);

        $c16 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipDtdWs(boolean)>(1);

        $i38 = (int) $c16;

        if $i38 == 62 goto label29;

        $i39 = (int) $c16;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i39, "; expected closing \'>\' after ENTITY declaration");

     label29:
        $r7 = virtualinvoke r11.<com.ctc.wstx.util.TextBuffer: char[] contentsAsArray()>();

        r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.util.TextBuffer mValueBuffer> = r11;

        return $r7;
    }

    private void parseAttrDefaultValue(com.ctc.wstx.dtd.DefaultAttrValue, char, com.ctc.wstx.dtd.NameKey, javax.xml.stream.Location, boolean) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.util.TextBuffer $r34, r35;
        com.ctc.wstx.dtd.FullDTDReader r0;
        com.ctc.wstx.io.WstxInputSource $r7, $r10, $r12, $r33;
        java.lang.Throwable $r31;
        com.ctc.wstx.dtd.DefaultAttrValue r5;
        java.lang.StringBuffer $r14, $r16, $r17, $r19, $r20, $r23, $r24, $r25, $r26, $r29, $r30, $r38, $r39, $r40;
        java.lang.String $r4, $r8, $r11, $r21, $r27, r32;
        char[] $r1, $r2, $r3, $r9, r36, $r37;
        com.ctc.wstx.dtd.NameKey r15;
        boolean $z0, $z1, $z2, z3, $z4, $z5;
        int $i1, $i2, $i4, $i7, $i8, $i9, i10, i11, $i12, $i13, $i14, $i15, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34;
        java.lang.Boolean $r6;
        char c0, $c3, $c5, $c6, $c16, c17, $c18;
        javax.xml.stream.Location r18;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r5 := @parameter0: com.ctc.wstx.dtd.DefaultAttrValue;

        c0 := @parameter1: char;

        r15 := @parameter2: com.ctc.wstx.dtd.NameKey;

        r18 := @parameter3: javax.xml.stream.Location;

        z3 := @parameter4: boolean;

        $i19 = (int) c0;

        if $i19 == 34 goto label02;

        $i20 = (int) c0;

        if $i20 == 39 goto label02;

        r32 = "; expected a single or double quote to enclose the default value";

        if z3 != 0 goto label01;

        $r38 = new java.lang.StringBuffer;

        specialinvoke $r38.<java.lang.StringBuffer: void <init>()>();

        $r29 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; expected a single or double quote to enclose the default value");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", or one of keywords (#REQUIRED, #IMPLIED, #FIXED)");

        r32 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

     label01:
        $r39 = new java.lang.StringBuffer;

        specialinvoke $r39.<java.lang.StringBuffer: void <init>()>();

        $r23 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r32);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (for attribute \'");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r15);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\')");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        $i21 = (int) c0;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i21, $r27);

     label02:
        $r33 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.io.WstxInputSource mInput>;

        $r34 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.util.TextBuffer mValueBuffer>;

        r35 = $r34;

        if $r34 != null goto label03;

        r35 = staticinvoke <com.ctc.wstx.util.TextBuffer: com.ctc.wstx.util.TextBuffer createTemporaryBuffer(int)>(500);

     label03:
        virtualinvoke r35.<com.ctc.wstx.util.TextBuffer: void resetInitialized()>();

        i10 = 0;

        $r1 = virtualinvoke r35.<com.ctc.wstx.util.TextBuffer: char[] getCurrentSegment()>();

        r36 = $r1;

        i11 = lengthof $r1;

     label04:
        $i12 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i13 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        if $i12 < $i13 goto label07;

        $r10 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.io.WstxInputSource mInput>;

        if $r10 != $r33 goto label05;

        $z4 = 1;

        goto label06;

     label05:
        $z4 = 0;

     label06:
        $r11 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String getErrorMsg()>();

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: boolean loadMore(java.lang.String)>($r11);

        if $z4 == 0 goto label07;

        $r12 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.io.WstxInputSource mInput>;

        if $r12 == $r33 goto label07;

        $r40 = new java.lang.StringBuffer;

        specialinvoke $r40.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unterminated attribute default value for attribute \'");

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' (definition started at ");

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportWFCViolation(java.lang.String)>($r21);

     label07:
        $r37 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i14 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i15 = $i14 + 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i15;

        $c16 = $r37[$i14];

        c17 = $c16;

        $i22 = (int) $c16;

        if $i22 >= 63 goto label27;

        $i23 = (int) $c16;

        if $i23 > 32 goto label16;

        $i24 = (int) $c16;

        if $i24 != 10 goto label08;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void markLF()>();

        goto label15;

     label08:
        $i25 = (int) $c16;

        if $i25 != 13 goto label14;

        $c6 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char getNextChar(java.lang.String)>(" in attribute default value");

        c17 = $c6;

        $i26 = (int) $c6;

        if $i26 == 10 goto label11;

        $i8 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i9 = $i8 - 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i9;

        $z2 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgNormalizeLFs>;

        if $z2 == 0 goto label09;

        $c18 = 10;

        goto label10;

     label09:
        $c18 = 13;

     label10:
        c17 = $c18;

        goto label13;

     label11:
        $z0 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgNormalizeLFs>;

        if $z0 != 0 goto label13;

        $z1 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgNormAttrs>;

        if $z1 != 0 goto label13;

        if i10 < i11 goto label12;

        $r9 = virtualinvoke r35.<com.ctc.wstx.util.TextBuffer: char[] finishCurrentSegment()>();

        r36 = $r9;

        i10 = 0;

        i11 = lengthof $r9;

     label12:
        $i7 = i10;

        i10 = i10 + 1;

        r36[$i7] = 13;

     label13:
        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void markLF()>();

        goto label15;

     label14:
        $i27 = (int) $c16;

        if $i27 == 32 goto label15;

        $i28 = (int) $c16;

        if $i28 == 9 goto label15;

        $i29 = (int) $c16;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwInvalidSpace(int)>($i29);

     label15:
        $z5 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgNormAttrs>;

        if $z5 == 0 goto label27;

        c17 = 32;

        goto label27;

     label16:
        $i30 = (int) $c16;

        $i31 = (int) c0;

        if $i30 != $i31 goto label17;

        $r7 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.io.WstxInputSource mInput>;

        if $r7 != $r33 goto label27;

        goto label29;

     label17:
        $i32 = (int) $c16;

        if $i32 != 38 goto label26;

        $i2 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: int inputInBuffer()>();

        if $i2 < 3 goto label18;

        c17 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char resolveSimpleEntity(boolean)>(1);

        goto label19;

     label18:
        c17 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char resolveCharOnlyEntity(boolean)>(1);

     label19:
        if c17 != 0 goto label24;

        $c5 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char getNextChar(java.lang.String)>(" in entity reference");

        $r4 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String parseEntityName(char)>($c5);

     label20:
        r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DefaultAttrValue mCurrAttrDefault> = r5;

        r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mExpandingPE> = 0;

        $r6 = <com.ctc.wstx.dtd.FullDTDReader: java.lang.Boolean ENTITY_EXP_GE>;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.ent.EntityDecl expandEntity(java.lang.String,boolean,java.lang.Object)>($r4, 0, $r6);

     label21:
        r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DefaultAttrValue mCurrAttrDefault> = null;

        goto label04;

     label22:
        $r31 := @caughtexception;

     label23:
        r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DefaultAttrValue mCurrAttrDefault> = null;

        throw $r31;

     label24:
        $c3 = r0.<com.ctc.wstx.dtd.FullDTDReader: char mSurrogateSecond>;

        if $c3 == 0 goto label27;

        if i10 < i11 goto label25;

        $r3 = virtualinvoke r35.<com.ctc.wstx.util.TextBuffer: char[] finishCurrentSegment()>();

        r36 = $r3;

        i10 = 0;

        i11 = lengthof $r3;

     label25:
        $i4 = i10;

        i10 = i10 + 1;

        r36[$i4] = c17;

        c17 = r0.<com.ctc.wstx.dtd.FullDTDReader: char mSurrogateSecond>;

        r0.<com.ctc.wstx.dtd.FullDTDReader: char mSurrogateSecond> = 0;

        goto label27;

     label26:
        $i33 = (int) $c16;

        if $i33 != 60 goto label27;

        $i34 = (int) $c16;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i34, " in attribute default value");

     label27:
        if i10 < i11 goto label28;

        $r2 = virtualinvoke r35.<com.ctc.wstx.util.TextBuffer: char[] finishCurrentSegment()>();

        r36 = $r2;

        i10 = 0;

        i11 = lengthof $r2;

     label28:
        $i1 = i10;

        i10 = i10 + 1;

        r36[$i1] = c17;

        goto label04;

     label29:
        virtualinvoke r35.<com.ctc.wstx.util.TextBuffer: void setCurrentLength(int)>(i10);

        $r8 = virtualinvoke r35.<com.ctc.wstx.util.TextBuffer: java.lang.String contentsAsString()>();

        virtualinvoke r5.<com.ctc.wstx.dtd.DefaultAttrValue: void setValue(java.lang.String)>($r8);

        r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.util.TextBuffer mValueBuffer> = r35;

        return;

        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
    }

    protected void readPI() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.util.TextBuffer $r3;
        com.ctc.wstx.dtd.FullDTDReader r0;
        java.lang.String $r1, $r5, $r11, $r13, $r14;
        char[] $r4, $r7, $r8, $r9, $r10, r16;
        boolean $z0, $z1;
        com.ctc.wstx.dtd.DTDEventListener $r2, $r6, $r12, $r15;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i25, $i26, $i30, $i31, i33, $i36, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50;
        char $c1, $c23, c24, $c27, c28, $c29, $c32, $c34, c35, $c37;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        $r1 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String parseFullName()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label01;

        $r14 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_WF_PI_MISSING_TARGET>;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportWFCViolation(java.lang.String)>($r14);

     label01:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("xml");

        if $z0 == 0 goto label02;

        $r13 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_WF_PI_XML_TARGET>;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportWFCViolation(java.lang.String,java.lang.Object)>($r13, $r1);

     label02:
        $c1 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

        c24 = $c1;

        $z1 = staticinvoke <com.ctc.wstx.dtd.FullDTDReader: boolean isSpaceChar(char)>($c1);

        if $z1 != 0 goto label05;

        $i38 = (int) $c1;

        if $i38 != 63 goto label03;

        $c23 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

        $i39 = (int) $c23;

        if $i39 == 62 goto label04;

     label03:
        $r11 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_WF_PI_XML_MISSING_SPACE>;

        $i40 = (int) $c1;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwUnexpectedChar(int,java.lang.String)>($i40, $r11);

     label04:
        $r15 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDEventListener mEventListener>;

        if $r15 == null goto label38;

        $r12 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDEventListener mEventListener>;

        interfaceinvoke $r12.<com.ctc.wstx.dtd.DTDEventListener: void dtdProcessingInstruction(java.lang.String,java.lang.String)>($r1, "");

        goto label38;

     label05:
        $r2 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDEventListener mEventListener>;

        if $r2 != null goto label15;

     label06:
        $i25 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i26 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        if $i25 >= $i26 goto label07;

        $r10 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i21 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i22 = $i21 + 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i22;

        $c27 = $r10[$i21];

        goto label08;

     label07:
        $c27 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

     label08:
        c28 = $c27;

        $i41 = (int) $c27;

        if $i41 != 63 goto label12;

     label09:
        $i18 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i17 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        if $i18 >= $i17 goto label10;

        $r9 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i19 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i20 = $i19 + 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i20;

        $c29 = $r9[$i19];

        goto label11;

     label10:
        $c29 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

     label11:
        c28 = $c29;

        $i42 = (int) $c29;

        if $i42 == 63 goto label09;

        $i43 = (int) $c29;

        if $i43 != 62 goto label12;

        goto label38;

     label12:
        $i44 = (int) c28;

        if $i44 >= 32 goto label06;

        $i45 = (int) c28;

        if $i45 == 10 goto label13;

        $i46 = (int) c28;

        if $i46 != 13 goto label14;

     label13:
        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: boolean skipCRLF(char)>(c28);

        goto label06;

     label14:
        $i47 = (int) c28;

        if $i47 == 9 goto label06;

        $i48 = (int) c28;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwInvalidSpace(int)>($i48);

        goto label06;

     label15:
        if c24 > 32 goto label21;

        if c24 == 10 goto label16;

        if c24 != 13 goto label17;

     label16:
        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: boolean skipCRLF(char)>(c24);

        goto label18;

     label17:
        if c24 == 9 goto label18;

        if c24 == 32 goto label18;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwInvalidSpace(int)>(c24);

     label18:
        $i30 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i31 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        if $i30 >= $i31 goto label19;

        $r8 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i15 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i16 = $i15 + 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i16;

        $c32 = $r8[$i15];

        goto label20;

     label19:
        $c32 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

     label20:
        c24 = $c32;

        goto label15;

     label21:
        $r3 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.util.TextBuffer getTextBuffer()>();

        r16 = virtualinvoke $r3.<com.ctc.wstx.util.TextBuffer: char[] getCurrentSegment()>();

        i33 = 0;

     label22:
        if c24 != 63 goto label30;

     label23:
        $i8 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i7 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        if $i8 >= $i7 goto label24;

        $r7 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i13 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i14 = $i13 + 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i14;

        $c34 = $r7[$i13];

        goto label25;

     label24:
        $c34 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

     label25:
        c35 = $c34;

        $i49 = (int) $c34;

        if $i49 == 63 goto label26;

        goto label28;

     label26:
        $i9 = lengthof r16;

        if i33 < $i9 goto label27;

        r16 = virtualinvoke $r3.<com.ctc.wstx.util.TextBuffer: char[] finishCurrentSegment()>();

        i33 = 0;

     label27:
        $i10 = i33;

        i33 = i33 + 1;

        r16[$i10] = c35;

        goto label23;

     label28:
        $i50 = (int) $c34;

        if $i50 != 62 goto label29;

        goto label37;

     label29:
        $i11 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i12 = $i11 - 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i12;

        c24 = 63;

        goto label33;

     label30:
        if c24 >= 32 goto label33;

        if c24 == 10 goto label31;

        if c24 != 13 goto label32;

     label31:
        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: boolean skipCRLF(char)>(c24);

        c24 = 10;

        goto label33;

     label32:
        if c24 == 9 goto label33;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwInvalidSpace(int)>(c24);

     label33:
        $i36 = lengthof r16;

        if i33 < $i36 goto label34;

        r16 = virtualinvoke $r3.<com.ctc.wstx.util.TextBuffer: char[] finishCurrentSegment()>();

        i33 = 0;

     label34:
        $i2 = i33;

        i33 = i33 + 1;

        r16[$i2] = c24;

        $i4 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i3 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        if $i4 >= $i3 goto label35;

        $r4 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i5 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i6 = $i5 + 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i6;

        $c37 = $r4[$i5];

        goto label36;

     label35:
        $c37 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

     label36:
        c24 = $c37;

        goto label22;

     label37:
        virtualinvoke $r3.<com.ctc.wstx.util.TextBuffer: void setCurrentLength(int)>(i33);

        $r5 = virtualinvoke $r3.<com.ctc.wstx.util.TextBuffer: java.lang.String contentsAsString()>();

        $r6 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDEventListener mEventListener>;

        interfaceinvoke $r6.<com.ctc.wstx.dtd.DTDEventListener: void dtdProcessingInstruction(java.lang.String,java.lang.String)>($r1, $r5);

     label38:
        return;
    }

    protected void readComment(com.ctc.wstx.dtd.DTDEventListener) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.util.TextBuffer $r1;
        com.ctc.wstx.dtd.DTDEventListener r2;
        int $i0, $i1, $i2, $i4, $i5, $i7, $i8, i9, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        java.lang.String $r3;
        com.ctc.wstx.dtd.FullDTDReader r0;
        char $c3, $c6, $c10, c11;
        char[] $r4, r5;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r2 := @parameter0: com.ctc.wstx.dtd.DTDEventListener;

        $r1 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.util.TextBuffer getTextBuffer()>();

        r5 = virtualinvoke $r1.<com.ctc.wstx.util.TextBuffer: char[] getCurrentSegment()>();

        i9 = 0;

     label01:
        $i1 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i0 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        if $i1 >= $i0 goto label02;

        $r4 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i7 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i8 = $i7 + 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i8;

        $c10 = $r4[$i7];

        goto label03;

     label02:
        $c10 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

     label03:
        c11 = $c10;

        $i13 = (int) $c10;

        if $i13 >= 32 goto label06;

        $i14 = (int) $c10;

        if $i14 == 10 goto label04;

        $i15 = (int) $c10;

        if $i15 != 13 goto label05;

     label04:
        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: boolean skipCRLF(char)>(c11);

        c11 = 10;

        goto label08;

     label05:
        $i16 = (int) $c10;

        if $i16 == 9 goto label08;

        $i17 = (int) $c10;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwInvalidSpace(int)>($i17);

        goto label08;

     label06:
        $i18 = (int) $c10;

        if $i18 != 45 goto label08;

        $c3 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

        $i19 = (int) $c3;

        if $i19 != 45 goto label07;

        $c6 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

        $i20 = (int) $c6;

        if $i20 == 62 goto label10;

        $r3 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_HYPHENS_IN_COMMENT>;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwParseError(java.lang.String)>($r3);

        goto label10;

     label07:
        c11 = 45;

        $i4 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i5 = $i4 - 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i5;

     label08:
        $i12 = lengthof r5;

        if i9 < $i12 goto label09;

        r5 = virtualinvoke $r1.<com.ctc.wstx.util.TextBuffer: char[] finishCurrentSegment()>();

        i9 = 0;

     label09:
        $i2 = i9;

        i9 = i9 + 1;

        r5[$i2] = c11;

        goto label01;

     label10:
        virtualinvoke $r1.<com.ctc.wstx.util.TextBuffer: void setCurrentLength(int)>(i9);

        virtualinvoke $r1.<com.ctc.wstx.util.TextBuffer: void fireDtdCommentEvent(com.ctc.wstx.dtd.DTDEventListener)>(r2);

        return;
    }

    private void checkInclusion() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        java.lang.StringBuffer $r3, $r4, $r7, $r8, $r14, $r15, $r16, $r18, $r19, $r20;
        int $i1, $i2, $i4, $i5, $i6;
        java.lang.String $r1, $r5, $r9, r12, $r17;
        com.ctc.wstx.dtd.FullDTDReader r0;
        boolean $z0;
        char $c0, $c3;
        com.ctc.wstx.io.WstxInputSource $r10, $r11;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        $z0 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mIsExternal>;

        if $z0 != 0 goto label1;

        $r11 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.io.WstxInputSource mInput>;

        $r10 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.io.WstxInputSource mRootInput>;

        if $r11 != $r10 goto label1;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportWFCViolation(java.lang.String)>("Internal DTD subset can not use (INCLUDE/IGNORE) directives (except via external entities)");

     label1:
        $c3 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipDtdWs(boolean)>(1);

        $i4 = (int) $c3;

        if $i4 == 73 goto label2;

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c3);

        r12 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String readDTDKeyword(java.lang.String)>($r9);

        goto label7;

     label2:
        $c0 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

        $i5 = (int) $c0;

        if $i5 != 71 goto label4;

        $r5 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String checkDTDKeyword(java.lang.String)>("NORE");

        if $r5 != null goto label3;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void handleIgnored()>();

        return;

     label3:
        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("IG");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        r12 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label7;

     label4:
        $i6 = (int) $c0;

        if $i6 != 78 goto label6;

        $r1 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String checkDTDKeyword(java.lang.String)>("CLUDE");

        if $r1 != null goto label5;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void handleIncluded()>();

        return;

     label5:
        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("IN");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        r12 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label7;

     label6:
        $i1 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i2 = $i1 - 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i2;

        r12 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String readDTDKeyword(java.lang.String)>("I");

     label7:
        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized directive \'");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r12);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'; expected either \'IGNORE\' or \'INCLUDE\'");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportWFCViolation(java.lang.String)>($r17);

        return;
    }

    private void handleIncluded() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        int $i1, $i2, $i3, $i4;
        char $c0;
        com.ctc.wstx.dtd.FullDTDReader r0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        $c0 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipDtdWs(boolean)>(0);

        $i3 = (int) $c0;

        if $i3 == 91 goto label1;

        $i4 = (int) $c0;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i4, "; expected \'[\' to follow \'INCLUDE\' directive");

     label1:
        $i1 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mIncludeCount>;

        $i2 = $i1 + 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mIncludeCount> = $i2;

        return;
    }

    private void handleIgnored() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dtd.FullDTDReader r0;
        int $i2, $i3, $i6, $i7, $i9, $i10, i11, $i12, $i13, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i27, $i28, $i29, $i30;
        java.lang.String $r1;
        char $c0, $c1, $c4, $c5, $c8, $c14, c15;
        char[] $r2;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        $c0 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipDtdWs(boolean)>(0);

        i11 = 1;

        $i16 = (int) $c0;

        if $i16 == 91 goto label01;

        $i17 = (int) $c0;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i17, "; expected \'[\' to follow \'IGNORE\' directive");

     label01:
        $r1 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String getErrorMsg()>();

     label02:
        $i12 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i13 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        if $i12 >= $i13 goto label03;

        $r2 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i9 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i10 = $i9 + 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i10;

        $c14 = $r2[$i9];

        goto label04;

     label03:
        $c14 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char getNextChar(java.lang.String)>($r1);

     label04:
        c15 = $c14;

        $i18 = (int) $c14;

        if $i18 >= 32 goto label07;

        $i19 = (int) $c14;

        if $i19 == 10 goto label05;

        $i20 = (int) $c14;

        if $i20 != 13 goto label06;

     label05:
        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: boolean skipCRLF(char)>(c15);

        goto label02;

     label06:
        $i21 = (int) $c14;

        if $i21 == 9 goto label02;

        $i22 = (int) $c14;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwInvalidSpace(int)>($i22);

        goto label02;

     label07:
        $i23 = (int) $c14;

        if $i23 != 93 goto label09;

        $c5 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char getNextChar(java.lang.String)>($r1);

        $i24 = (int) $c5;

        if $i24 != 93 goto label08;

        $c8 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char getNextChar(java.lang.String)>($r1);

        $i25 = (int) $c8;

        if $i25 != 62 goto label08;

        $i27 = (int) -1;

        i11 = i11 + $i27;

        if i11 >= 1 goto label02;

        return;

     label08:
        $i6 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i7 = $i6 - 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i7;

        goto label02;

     label09:
        $i28 = (int) $c14;

        if $i28 != 60 goto label02;

        $c1 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char getNextChar(java.lang.String)>($r1);

        $i29 = (int) $c1;

        if $i29 != 33 goto label10;

        $c4 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char getNextChar(java.lang.String)>($r1);

        $i30 = (int) $c4;

        if $i30 != 91 goto label10;

        i11 = i11 + 1;

        goto label02;

     label10:
        $i2 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i3 = $i2 - 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i3;

        goto label02;
    }

    private void reportBadDirective(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.lang.StringBuffer $r0, $r1, $r3, $r4, $r7, $r8, $r9;
        java.lang.String r2, $r5, r10;
        com.ctc.wstx.dtd.FullDTDReader r6;
        boolean $z0;

        r6 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized DTD directive \'<!");

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" >\'; expected ATTLIST, ELEMENT, ENTITY or NOTATION");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        r10 = $r5;

        $z0 = r6.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgSupportDTDPP>;

        if $z0 == 0 goto label1;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (or, for DTD++, TARGETNS)");

        r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        specialinvoke r6.<com.ctc.wstx.dtd.FullDTDReader: void reportWFCViolation(java.lang.String)>(r10);

        return;
    }

    private void reportVCViolation(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.lang.String r1;
        com.ctc.wstx.dtd.FullDTDReader r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgFullyValidating>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportValidationProblem(java.lang.String,int)>(r1, 2);

        goto label2;

     label1:
        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportValidationProblem(java.lang.String,int)>(r1, 1);

     label2:
        return;
    }

    private void reportWFCViolation(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.lang.String r1;
        com.ctc.wstx.dtd.FullDTDReader r0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwParseError(java.lang.String)>(r1);

        return;
    }

    private void reportWFCViolation(java.lang.String, java.lang.Object) throws javax.xml.stream.XMLStreamException
    {
        java.lang.Object r2;
        java.lang.String r1;
        com.ctc.wstx.dtd.FullDTDReader r0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwParseError(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    private void throwDTDElemError(java.lang.String, java.lang.Object) throws javax.xml.stream.XMLStreamException
    {
        java.lang.StringBuffer $r1, $r4, $r5, $r7;
        java.lang.Object r2;
        java.lang.String $r3, r6, $r8;
        com.ctc.wstx.dtd.FullDTDReader r0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r6 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String elemDesc(java.lang.Object)>(r2);

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportWFCViolation(java.lang.String)>($r8);

        return;
    }

    private void throwDTDAttrError(java.lang.String, com.ctc.wstx.dtd.DTDElement, com.ctc.wstx.dtd.NameKey) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dtd.NameKey r3;
        java.lang.StringBuffer $r1, $r5, $r6, $r8;
        com.ctc.wstx.dtd.DTDElement r2;
        java.lang.String $r4, r7, $r9;
        com.ctc.wstx.dtd.FullDTDReader r0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r7 := @parameter0: java.lang.String;

        r2 := @parameter1: com.ctc.wstx.dtd.DTDElement;

        r3 := @parameter2: com.ctc.wstx.dtd.NameKey;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r4 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String attrDesc(java.lang.Object,com.ctc.wstx.dtd.NameKey)>(r2, r3);

        $r5 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportWFCViolation(java.lang.String)>($r9);

        return;
    }

    private void throwDTDUnexpectedChar(int, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.lang.StringBuffer $r2, $r4, $r5;
        int i0;
        java.lang.String r0, $r3, $r6, $r7;
        com.ctc.wstx.dtd.FullDTDReader r1;

        r1 := @this: com.ctc.wstx.dtd.FullDTDReader;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r7 = virtualinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String getErrorMsg()>();

        virtualinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: void throwUnexpectedChar(int,java.lang.String)>(i0, $r7);

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String getErrorMsg()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: void throwUnexpectedChar(int,java.lang.String)>(i0, $r6);

        return;
    }

    private void throwForbiddenPE() throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dtd.FullDTDReader r0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportWFCViolation(java.lang.String)>("Can not have parameter entities in the internal subset, except for defining complete declarations (XML 1.0, #2.8, WFC \'PEs In Internal Subset\')");

        return;
    }

    private java.lang.String elemDesc(java.lang.Object)
    {
        java.lang.StringBuffer $r0, $r1, $r3, $r4;
        java.lang.Object r2;
        java.lang.String $r5;
        com.ctc.wstx.dtd.FullDTDReader r6;

        r6 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Element <");

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">)");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    private java.lang.String attrDesc(java.lang.Object, com.ctc.wstx.dtd.NameKey)
    {
        com.ctc.wstx.dtd.NameKey r2;
        java.lang.StringBuffer $r0, $r1, $r3, $r4, $r6, $r7;
        java.lang.Object r5;
        java.lang.String $r8;
        com.ctc.wstx.dtd.FullDTDReader r9;

        r9 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r5 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.ctc.wstx.dtd.NameKey;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Attribute \'");

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' (of element <");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">)");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    private java.lang.String entityDesc(com.ctc.wstx.io.WstxInputSource)
    {
        java.lang.StringBuffer $r0, $r1, $r4, $r5;
        java.lang.String $r3, $r6;
        com.ctc.wstx.io.WstxInputSource r2;
        com.ctc.wstx.dtd.FullDTDReader r7;

        r7 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r2 := @parameter0: com.ctc.wstx.io.WstxInputSource;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Entity &");

        $r3 = virtualinvoke r2.<com.ctc.wstx.io.WstxInputSource: java.lang.String getEntityId()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    private void handleDeclaration(char) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dtd.FullDTDReader r0;
        boolean $z0;
        com.ctc.wstx.io.WstxInputSource $r2, $r25;
        java.lang.Throwable $r23;
        java.lang.StringBuffer $r5, $r6, $r9, $r10, $r13, $r14, $r17, $r18, $r21, $r22, $r26, $r27, $r28, $r29, $r30;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String $r1, $r3, $r7, $r11, $r15, $r19, r24;
        char $c0, c1;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        c1 := @parameter0: char;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mCurrDepth> = 1;

     label01:
        $i3 = (int) c1;

        if $i3 != 65 goto label03;

        $r19 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String checkDTDKeyword(java.lang.String)>("TTLIST");

        if $r19 != null goto label02;

        r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String mCurrDeclaration> = "ATTLIST";

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void handleAttlistDecl()>();

        goto label14;

     label02:
        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("A");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label13;

     label03:
        $i4 = (int) c1;

        if $i4 != 69 goto label08;

        $c0 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

        $i5 = (int) $c0;

        if $i5 != 78 goto label05;

        $r15 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String checkDTDKeyword(java.lang.String)>("TITY");

        if $r15 != null goto label04;

        r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String mCurrDeclaration> = "ENTITY";

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void handleEntityDecl(boolean)>(0);

        goto label14;

     label04:
        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("EN");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        r24 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label13;

     label05:
        $i6 = (int) $c0;

        if $i6 != 76 goto label07;

        $r11 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String checkDTDKeyword(java.lang.String)>("EMENT");

        if $r11 != null goto label06;

        r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String mCurrDeclaration> = "ELEMENT";

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void handleElementDecl()>();

        goto label14;

     label06:
        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("EL");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        r24 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label13;

     label07:
        r24 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String readDTDKeyword(java.lang.String)>("E");

        goto label13;

     label08:
        $i7 = (int) c1;

        if $i7 != 78 goto label10;

        $r7 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String checkDTDKeyword(java.lang.String)>("OTATION");

        if $r7 != null goto label09;

        r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String mCurrDeclaration> = "NOTATION";

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void handleNotationDecl()>();

        goto label14;

     label09:
        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("N");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        r24 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label13;

     label10:
        $i8 = (int) c1;

        if $i8 != 84 goto label12;

        $z0 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgSupportDTDPP>;

        if $z0 == 0 goto label12;

        $r3 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String checkDTDKeyword(java.lang.String)>("ARGETNS");

        if $r3 != null goto label11;

        r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String mCurrDeclaration> = "TARGETNS";

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void handleTargetNsDecl()>();

        goto label14;

     label11:
        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("T");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        r24 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label13;

     label12:
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c1);

        r24 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String readDTDKeyword(java.lang.String)>($r1);

     label13:
        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportBadDirective(java.lang.String)>(r24);

     label14:
        $r25 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.io.WstxInputSource mInput>;

        $i2 = virtualinvoke $r25.<com.ctc.wstx.io.WstxInputSource: int getScopeId()>();

        if $i2 <= 0 goto label15;

        $r2 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.io.WstxInputSource mInput>;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void handleGreedyEntityProblem(com.ctc.wstx.io.WstxInputSource)>($r2);

     label15:
        r0.<com.ctc.wstx.dtd.FullDTDReader: int mCurrDepth> = 0;

        r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String mCurrDeclaration> = null;

        goto label18;

     label16:
        $r23 := @caughtexception;

     label17:
        r0.<com.ctc.wstx.dtd.FullDTDReader: int mCurrDepth> = 0;

        r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String mCurrDeclaration> = null;

        throw $r23;

     label18:
        return;

        catch java.lang.Throwable from label01 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    private void handleSuppressedDeclaration() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        java.lang.StringBuffer $r6, $r7, $r10, $r11, $r14, $r15;
        int $i1, $i2, $i3, $i4;
        com.ctc.wstx.dtd.DTDWriter $r1, $r2, $r3, $r12;
        java.lang.String $r4, $r8, r13;
        com.ctc.wstx.dtd.FullDTDReader r0;
        char $c0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        $c0 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

        $i3 = (int) $c0;

        if $i3 != 78 goto label2;

        $r8 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String checkDTDKeyword(java.lang.String)>("TITY");

        if $r8 != null goto label1;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void handleEntityDecl(boolean)>(1);

        return;

     label1:
        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("EN");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r12 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $i2 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        virtualinvoke $r12.<com.ctc.wstx.dtd.DTDWriter: void enableOutput(int)>($i2);

        goto label5;

     label2:
        $r1 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $i1 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        virtualinvoke $r1.<com.ctc.wstx.dtd.DTDWriter: void enableOutput(int)>($i1);

        $r2 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        virtualinvoke $r2.<com.ctc.wstx.dtd.DTDWriter: void output(java.lang.String)>("<!E");

        $r3 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        virtualinvoke $r3.<com.ctc.wstx.dtd.DTDWriter: void output(char)>($c0);

        $i4 = (int) $c0;

        if $i4 != 76 goto label4;

        $r4 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String checkDTDKeyword(java.lang.String)>("EMENT");

        if $r4 != null goto label3;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void handleElementDecl()>();

        return;

     label3:
        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("EL");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        r13 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label5;

     label4:
        r13 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String readDTDKeyword(java.lang.String)>("E");

     label5:
        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportBadDirective(java.lang.String)>(r13);

        return;
    }

    private void handleAttlistDecl() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        java.util.HashMap $r3;
        com.ctc.wstx.api.ReaderConfig $r5;
        com.ctc.wstx.dtd.NameKey $r1;
        com.ctc.wstx.dtd.DTDElement $r6, r7;
        int $i1, $i2, i3, $i6;
        org.codehaus.stax2.XMLStreamLocation2 $r2;
        com.ctc.wstx.dtd.FullDTDReader r0;
        boolean $z0;
        char $c0, $c4, c5;
        java.lang.Object $r4;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        $c0 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipObligatoryDtdWs()>();

        $r1 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.NameKey readDTDQName(char)>($c0);

        $r2 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: org.codehaus.stax2.XMLStreamLocation2 getStartLocation()>();

        $r3 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap getElementMap()>();

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        r7 = (com.ctc.wstx.dtd.DTDElement) $r4;

        if r7 != null goto label1;

        $r5 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.api.ReaderConfig mConfig>;

        $r6 = staticinvoke <com.ctc.wstx.dtd.DTDElement: com.ctc.wstx.dtd.DTDElement createPlaceholder(com.ctc.wstx.api.ReaderConfig,javax.xml.stream.Location,com.ctc.wstx.dtd.NameKey)>($r5, $r2, $r1);

        r7 = $r6;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r6);

     label1:
        i3 = 0;

     label2:
        $c4 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char getNextExpanded()>();

        c5 = $c4;

        $z0 = staticinvoke <com.ctc.wstx.dtd.FullDTDReader: boolean isSpaceChar(char)>($c4);

        if $z0 == 0 goto label3;

        $i1 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i2 = $i1 - 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i2;

        c5 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipDtdWs(boolean)>(1);

     label3:
        $i6 = (int) c5;

        if $i6 != 62 goto label4;

        goto label5;

     label4:
        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void handleAttrDecl(com.ctc.wstx.dtd.DTDElement,char,int,javax.xml.stream.Location)>(r7, c5, i3, $r2);

        i3 = i3 + 1;

        goto label2;

     label5:
        return;
    }

    private void handleElementDecl() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dtd.ContentSpec $r26;
        com.ctc.wstx.dtd.DFAState $r29;
        com.ctc.wstx.api.ReaderConfig $r10;
        com.ctc.wstx.dtd.NameKey $r1;
        byte b7, b9, b10;
        com.ctc.wstx.dtd.FullDTDReader r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.HashMap $r8;
        com.ctc.wstx.dtd.StructValidator $r27, r30;
        java.lang.StringBuffer $r4, $r5, $r6, $r12, $r13, $r14, $r20, $r21, $r24, $r25, $r33, $r34, $r35, $r36, $r37, $r41, $r42, $r43, $r44, $r45;
        com.ctc.wstx.dtd.DTDElement $r16, r39;
        int $i2, $i3, $i5, $i6, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.lang.String $r7, $r15, $r17, $r18, $r22, r31, $r38;
        org.codehaus.stax2.XMLStreamLocation2 $r2;
        char $c0, $c1, $c4, $c8;
        com.ctc.wstx.dtd.DFAValidator $r40;
        java.lang.Object $r9;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        $c0 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipObligatoryDtdWs()>();

        $r1 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.NameKey readDTDQName(char)>($c0);

        $r2 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: org.codehaus.stax2.XMLStreamLocation2 getStartLocation()>();

        $c1 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipObligatoryDtdWs()>();

        r30 = null;

        b7 = 3;

        b10 = 3;

        b9 = 3;

        $i11 = (int) $c1;

        if $i11 != 40 goto label03;

        $c4 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipDtdWs(boolean)>(1);

        $i12 = (int) $c4;

        if $i12 != 35 goto label01;

        $z4 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgFullyValidating>;

        r30 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.StructValidator readMixedSpec(com.ctc.wstx.dtd.NameKey,boolean)>($r1, $z4);

        b7 = 3;

        b10 = 3;

        b9 = 3;

        goto label10;

     label01:
        $i5 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i6 = $i5 - 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i6;

        $z3 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgFullyValidating>;

        $r26 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.ContentSpec readContentSpec(com.ctc.wstx.dtd.NameKey,boolean,boolean)>($r1, 1, $z3);

        $r27 = virtualinvoke $r26.<com.ctc.wstx.dtd.ContentSpec: com.ctc.wstx.dtd.StructValidator getSimpleValidator()>();

        r30 = $r27;

        if $r27 != null goto label02;

        $r40 = new com.ctc.wstx.dtd.DFAValidator;

        $r29 = staticinvoke <com.ctc.wstx.dtd.DFAState: com.ctc.wstx.dtd.DFAState constructDFA(com.ctc.wstx.dtd.ContentSpec)>($r26);

        specialinvoke $r40.<com.ctc.wstx.dtd.DFAValidator: void <init>(com.ctc.wstx.dtd.DFAState)>($r29);

        r30 = $r40;

     label02:
        b7 = 1;

        b10 = 1;

        b9 = 1;

        goto label10;

     label03:
        $z0 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: boolean isNameStartChar(char)>($c1);

        if $z0 == 0 goto label09;

        $i13 = (int) $c1;

        if $i13 != 65 goto label05;

        $r22 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String checkDTDKeyword(java.lang.String)>("NY");

        if $r22 != null goto label04;

        r30 = null;

        b7 = 3;

        b10 = 3;

        b9 = 3;

        goto label10;

     label04:
        $r41 = new java.lang.StringBuffer;

        specialinvoke $r41.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("A");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        r31 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label08;

     label05:
        $i14 = (int) $c1;

        if $i14 != 69 goto label07;

        $r18 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String checkDTDKeyword(java.lang.String)>("MPTY");

        if $r18 != null goto label06;

        r30 = staticinvoke <com.ctc.wstx.dtd.EmptyValidator: com.ctc.wstx.dtd.EmptyValidator getPcdataInstance()>();

        b7 = 0;

        b10 = 0;

        b9 = 0;

        goto label10;

     label06:
        $r42 = new java.lang.StringBuffer;

        specialinvoke $r42.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("E");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        r31 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label08;

     label07:
        $i2 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i3 = $i2 - 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i3;

        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c1);

        r31 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String readDTDKeyword(java.lang.String)>($r17);

     label08:
        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $r33 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized DTD content spec keyword \'");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r31);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' (for element <");

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r1);

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">); expected ANY or EMPTY");

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportWFCViolation(java.lang.String)>($r38);

        goto label10;

     label09:
        $r44 = new java.lang.StringBuffer;

        specialinvoke $r44.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": excepted \'(\' to start content specification for element <");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $i15 = (int) $c1;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i15, $r7);

     label10:
        $c8 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipDtdWs(boolean)>(1);

        $i16 = (int) $c8;

        if $i16 == 62 goto label11;

        $r45 = new java.lang.StringBuffer;

        specialinvoke $r45.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; expected \'>\' to finish the element declaration for <");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        $i17 = (int) $c8;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i17, $r15);

     label11:
        $r8 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap getElementMap()>();

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r16 = (com.ctc.wstx.dtd.DTDElement) $r9;

        if $r16 == null goto label14;

        $z1 = virtualinvoke $r16.<com.ctc.wstx.dtd.DTDElement: boolean isDefined()>();

        if $z1 == 0 goto label13;

        $z2 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgFullyValidating>;

        if $z2 == 0 goto label12;

        staticinvoke <com.ctc.wstx.dtd.DTDSubsetImpl: void throwElementException(com.ctc.wstx.dtd.DTDElement,javax.xml.stream.Location)>($r16, $r2);

        goto label13;

     label12:
        return;

     label13:
        r39 = virtualinvoke $r16.<com.ctc.wstx.dtd.DTDElement: com.ctc.wstx.dtd.DTDElement define(javax.xml.stream.Location,com.ctc.wstx.dtd.StructValidator,int)>($r2, r30, b9);

        goto label15;

     label14:
        $r10 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.api.ReaderConfig mConfig>;

        r39 = staticinvoke <com.ctc.wstx.dtd.DTDElement: com.ctc.wstx.dtd.DTDElement createDefined(com.ctc.wstx.api.ReaderConfig,javax.xml.stream.Location,com.ctc.wstx.dtd.NameKey,com.ctc.wstx.dtd.StructValidator,int)>($r10, $r2, $r1, r30, b10);

     label15:
        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r39);

        return;
    }

    private void handleEntityDecl(boolean) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.api.ReaderConfig $r12;
        com.ctc.wstx.compat.JdkImpl $r28;
        com.ctc.wstx.dtd.DTDWriter $r31, $r33, $r34, $r35, $r37;
        com.ctc.wstx.dtd.FullDTDReader r0;
        com.ctc.wstx.io.WstxInputSource $r9, $r32;
        java.lang.Throwable $r36;
        java.lang.StringBuffer $r15, $r16, $r17, $r19, $r22, $r23, $r26, $r27, $r47, $r48, $r49;
        java.lang.String $r6, $r7, $r8, $r20, $r24, $r38, r43;
        javax.xml.stream.XMLReporter $r13;
        char[] $r2;
        com.ctc.wstx.ent.IntEntity $r45;
        java.net.URL $r4, $r10;
        com.ctc.wstx.ent.EntityDecl r40, r42;
        com.ctc.wstx.io.WstxInputLocation $r1;
        boolean $z0, z1, $z2, $z3, $z4, $z5, z6, z7, $z8, z9, z10, z11, z12, z13, z14, z15;
        java.util.HashMap $r29, r41, $r46;
        com.ctc.wstx.dtd.DTDEventListener $r5, $r44;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        org.codehaus.stax2.XMLStreamLocation2 $r39;
        char $c4, c8, $c9;
        javax.xml.stream.Location $r18;
        java.lang.Object $r11;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        z1 := @parameter0: boolean;

        c8 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

        z6 = 0;

        z7 = 0;

        z15 = 0;

        z14 = 0;

        z13 = 0;

        z12 = 0;

        z11 = 0;

        z10 = 0;

        z9 = 0;

     label01:
        $i11 = (int) c8;

        if $i11 != 37 goto label06;

        $c4 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextIfAvailable()>();

        if $c4 == 0 goto label02;

        $z4 = staticinvoke <com.ctc.wstx.dtd.FullDTDReader: boolean isSpaceChar(char)>($c4);

        if $z4 == 0 goto label04;

     label02:
        z7 = 1;

        z15 = 1;

        z14 = 1;

        z13 = 1;

        z12 = 1;

        z11 = 1;

        z10 = 1;

        z9 = 1;

        $i12 = (int) $c4;

        if $i12 == 10 goto label03;

        $i13 = (int) c8;

        if $i13 != 13 goto label08;

     label03:
        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: boolean skipCRLF(char)>($c4);

        goto label08;

     label04:
        $z5 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: boolean isNameStartChar(char)>($c4);

        if $z5 != 0 goto label05;

        $i14 = (int) $c4;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i14, "; expected a space (for PE declaration) or PE reference name");

     label05:
        $i5 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i6 = $i5 - 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i6;

        z6 = 1;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void expandPE()>();

        c8 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextChar()>();

        goto label01;

     label06:
        $z0 = staticinvoke <com.ctc.wstx.dtd.FullDTDReader: boolean isSpaceChar(char)>(c8);

        if $z0 != 0 goto label07;

        goto label08;

     label07:
        z6 = 1;

        c8 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

        goto label01;

     label08:
        if z6 != 0 goto label09;

        $i15 = (int) c8;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i15, "; expected a space separating ENTITY keyword and entity name");

     label09:
        if z15 == 0 goto label10;

        c8 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipDtdWs(boolean)>(1);

     label10:
        if z1 == 0 goto label11;

        if z14 != 0 goto label11;

        $r33 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $i3 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        virtualinvoke $r33.<com.ctc.wstx.dtd.DTDWriter: void enableOutput(int)>($i3);

        $r34 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        virtualinvoke $r34.<com.ctc.wstx.dtd.DTDWriter: void output(java.lang.String)>("<!ENTITY ");

        $r35 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        virtualinvoke $r35.<com.ctc.wstx.dtd.DTDWriter: void output(char)>(c8);

     label11:
        $r38 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String readDTDName(char)>(c8);

        $r39 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: org.codehaus.stax2.XMLStreamLocation2 getStartLocation()>();

     label12:
        $c9 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipObligatoryDtdWs()>();

        $i16 = (int) $c9;

        if $i16 == 39 goto label13;

        $i17 = (int) $c9;

        if $i17 != 34 goto label14;

     label13:
        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char dtdNextFromCurr()>();

        $r1 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.io.WstxInputLocation getLastCharLocation()>();

        $i0 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i1 = $i0 - 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i1;

        $r2 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char[] parseEntityValue(java.lang.String,javax.xml.stream.Location,char)>($r38, $r1, $c9);

        $r45 = new com.ctc.wstx.ent.IntEntity;

        $r4 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.net.URL getSource()>();

        specialinvoke $r45.<com.ctc.wstx.ent.IntEntity: void <init>(javax.xml.stream.Location,java.lang.String,java.net.URL,char[],javax.xml.stream.Location)>($r39, $r38, $r4, $r2, $r1);

        r40 = $r45;

        goto label16;

     label14:
        $z3 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: boolean isNameStartChar(char)>($c9);

        if $z3 != 0 goto label15;

        $i18 = (int) $c9;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i18, "; expected either quoted value, or keyword \'PUBLIC\' or \'SYSTEM\'");

     label15:
        $r32 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.io.WstxInputSource mInput>;

        r40 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.ent.EntityDecl handleExternalEntityDecl(com.ctc.wstx.io.WstxInputSource,boolean,java.lang.String,char,javax.xml.stream.Location)>($r32, z13, $r38, $c9, $r39);

     label16:
        $z8 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mIsExternal>;

        if $z8 == 0 goto label17;

        virtualinvoke r40.<com.ctc.wstx.ent.EntityDecl: void markAsExternallyDeclared()>();

     label17:
        goto label31;

     label18:
        goto label21;

     label19:
        $r36 := @caughtexception;

        goto label33;

     label20:
        throw $r36;

     label21:
        if z12 == 0 goto label22;

        r41 = r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mParamEntities>;

        if r41 != null goto label23;

        $r46 = new java.util.HashMap;

        specialinvoke $r46.<java.util.HashMap: void <init>()>();

        r41 = $r46;

        r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mParamEntities> = $r46;

        goto label23;

     label22:
        r41 = r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mGeneralEntities>;

        if r41 != null goto label23;

        $r28 = staticinvoke <com.ctc.wstx.compat.JdkFeatures: com.ctc.wstx.compat.JdkImpl getInstance()>();

        $r29 = virtualinvoke $r28.<com.ctc.wstx.compat.JdkImpl: java.util.HashMap getInsertOrderedMap()>();

        r41 = $r29;

        r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mGeneralEntities> = $r29;

     label23:
        $i10 = virtualinvoke r41.<java.util.HashMap: int size()>();

        if $i10 <= 0 goto label27;

        $r11 = virtualinvoke r41.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r38);

        if $r11 == null goto label27;

        $r12 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.api.ReaderConfig mConfig>;

        $r13 = virtualinvoke $r12.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLReporter getXMLReporter()>();

        if $r13 == null goto label26;

        r42 = (com.ctc.wstx.ent.EntityDecl) $r11;

        $r47 = new java.lang.StringBuffer;

        specialinvoke $r47.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" entity \'");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r38);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' defined more than once: first declaration at ");

        $r18 = virtualinvoke r42.<com.ctc.wstx.ent.EntityDecl: javax.xml.stream.Location getLocation()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        if z11 == 0 goto label24;

        $r48 = new java.lang.StringBuffer;

        specialinvoke $r48.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Parameter");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        r43 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label25;

     label24:
        $r49 = new java.lang.StringBuffer;

        specialinvoke $r49.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("General");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        r43 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

     label25:
        $r24 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String WT_ENT_DECL>;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportWarning(javax.xml.stream.XMLReporter,java.lang.String,java.lang.String,javax.xml.stream.Location,java.lang.Object)>($r13, $r24, r43, $r39, r42);

     label26:
        goto label28;

     label27:
        virtualinvoke r41.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r38, r40);

     label28:
        $r44 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDEventListener mEventListener>;

        if $r44 == null goto label30;

        $z2 = virtualinvoke r40.<com.ctc.wstx.ent.EntityDecl: boolean isParsed()>();

        if $z2 == 0 goto label29;

        goto label30;

     label29:
        $r5 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDEventListener mEventListener>;

        $r6 = virtualinvoke r40.<com.ctc.wstx.ent.EntityDecl: java.lang.String getPublicId()>();

        $r7 = virtualinvoke r40.<com.ctc.wstx.ent.EntityDecl: java.lang.String getSystemId()>();

        $r8 = virtualinvoke r40.<com.ctc.wstx.ent.EntityDecl: java.lang.String getNotationName()>();

        $r9 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.io.WstxInputSource mInput>;

        $r10 = virtualinvoke $r9.<com.ctc.wstx.io.WstxInputSource: java.net.URL getSource()>();

        interfaceinvoke $r5.<com.ctc.wstx.dtd.DTDEventListener: void dtdUnparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>($r38, $r6, $r7, $r8, $r10);

     label30:
        return;

     label31:
        if z1 == 0 goto label32;

        if z9 == 0 goto label32;

        $r31 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $i2 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        virtualinvoke $r31.<com.ctc.wstx.dtd.DTDWriter: void enableOutput(int)>($i2);

     label32:
        goto label18;

     label33:
        if z1 == 0 goto label34;

        if z10 == 0 goto label34;

        $r37 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDWriter mFlattenWriter>;

        $i7 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        virtualinvoke $r37.<com.ctc.wstx.dtd.DTDWriter: void enableOutput(int)>($i7);

     label34:
        goto label20;

        catch java.lang.Throwable from label12 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
    }

    private void handleNotationDecl() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        java.net.URL $r15;
        com.ctc.wstx.compat.JdkImpl $r9;
        com.ctc.wstx.dtd.FullDTDReader r0;
        boolean $z0, $z1, $z2;
        com.ctc.wstx.io.WstxInputSource $r13;
        java.util.HashMap $r6, $r10, $r11, $r20, r21;
        com.ctc.wstx.dtd.DTDEventListener $r3, $r14;
        com.ctc.wstx.ent.NotationDecl r8, r19, $r22;
        int $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.String $r1, $r2, $r16, r17, r18;
        org.codehaus.stax2.XMLStreamLocation2 $r4;
        char $c0, $c1, $c2, c3;
        java.lang.Object $r7, $r12;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        $c0 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipObligatoryDtdWs()>();

        $r1 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String readDTDName(char)>($c0);

        $c1 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipObligatoryDtdWs()>();

        $z0 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: boolean checkPublicSystemKeyword(char)>($c1);

        $c2 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipObligatoryDtdWs()>();

        c3 = $c2;

        if $z0 == 0 goto label02;

        $i4 = (int) $c2;

        if $i4 == 34 goto label01;

        $i5 = (int) $c2;

        if $i5 == 39 goto label01;

        $i6 = (int) $c2;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i6, "; expected a quote to start the public identifier");

     label01:
        $z2 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgNormAttrs>;

        $r16 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String getErrorMsg()>();

        r17 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String parsePublicId(char,boolean,java.lang.String)>($c2, $z2, $r16);

        c3 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipDtdWs(boolean)>(1);

        goto label03;

     label02:
        r17 = null;

     label03:
        $i7 = (int) c3;

        if $i7 == 34 goto label04;

        $i8 = (int) c3;

        if $i8 != 39 goto label05;

     label04:
        $z1 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgNormalizeLFs>;

        $r2 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String getErrorMsg()>();

        r18 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String parseSystemId(char,boolean,java.lang.String)>(c3, $z1, $r2);

        c3 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipDtdWs(boolean)>(1);

        goto label07;

     label05:
        if $z0 != 0 goto label06;

        $i9 = (int) c3;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i9, "; expected a quote to start the system identifier");

     label06:
        r18 = null;

     label07:
        $i10 = (int) c3;

        if $i10 == 62 goto label08;

        $i11 = (int) c3;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i11, "; expected closing \'>\' after NOTATION declaration");

     label08:
        $r3 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDEventListener mEventListener>;

        if $r3 == null goto label09;

        $r14 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDEventListener mEventListener>;

        $r13 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.io.WstxInputSource mInput>;

        $r15 = virtualinvoke $r13.<com.ctc.wstx.io.WstxInputSource: java.net.URL getSource()>();

        interfaceinvoke $r14.<com.ctc.wstx.dtd.DTDEventListener: void dtdNotationDecl(java.lang.String,java.lang.String,java.lang.String,java.net.URL)>($r1, r17, r18, $r15);

     label09:
        $r4 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: org.codehaus.stax2.XMLStreamLocation2 getStartLocation()>();

        $r22 = new com.ctc.wstx.ent.NotationDecl;

        specialinvoke $r22.<com.ctc.wstx.ent.NotationDecl: void <init>(javax.xml.stream.Location,java.lang.String,java.lang.String,java.lang.String)>($r4, $r1, r17, r18);

        $r6 = r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mPredefdNotations>;

        if $r6 == null goto label10;

        $r11 = r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mPredefdNotations>;

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        r19 = (com.ctc.wstx.ent.NotationDecl) $r12;

        if r19 == null goto label10;

        staticinvoke <com.ctc.wstx.dtd.DTDSubsetImpl: void throwNotationException(com.ctc.wstx.ent.NotationDecl,com.ctc.wstx.ent.NotationDecl)>(r19, $r22);

     label10:
        $r20 = r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mNotations>;

        r21 = $r20;

        if $r20 != null goto label11;

        $r9 = staticinvoke <com.ctc.wstx.compat.JdkFeatures: com.ctc.wstx.compat.JdkImpl getInstance()>();

        $r10 = virtualinvoke $r9.<com.ctc.wstx.compat.JdkImpl: java.util.HashMap getInsertOrderedMap()>();

        r21 = $r10;

        r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mNotations> = $r10;

        goto label12;

     label11:
        $r7 = virtualinvoke $r20.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        r8 = (com.ctc.wstx.ent.NotationDecl) $r7;

        if r8 == null goto label12;

        staticinvoke <com.ctc.wstx.dtd.DTDSubsetImpl: void throwNotationException(com.ctc.wstx.ent.NotationDecl,com.ctc.wstx.ent.NotationDecl)>(r8, $r22);

     label12:
        virtualinvoke r21.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r22);

        return;
    }

    private void handleTargetNsDecl() throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        java.util.HashMap $r1, $r2, $r8;
        int $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        com.ctc.wstx.util.InternCache $r4;
        java.lang.String r5, $r6, r7;
        com.ctc.wstx.dtd.FullDTDReader r0;
        boolean $z0;
        char $c0, $c1, c2;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mAnyDTDppFeatures> = 1;

        $c0 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipObligatoryDtdWs()>();

        c2 = $c0;

        $z0 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: boolean isNameStartChar(char)>($c0);

        if $z0 == 0 goto label1;

        r5 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String readDTDLocalName(char,boolean)>($c0, 0);

        c2 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipObligatoryDtdWs()>();

        goto label2;

     label1:
        r5 = null;

     label2:
        $i5 = (int) c2;

        if $i5 == 34 goto label4;

        $i6 = (int) c2;

        if $i6 == 39 goto label4;

        $i7 = (int) c2;

        if $i7 != 62 goto label3;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportWFCViolation(java.lang.String)>("Missing namespace URI for TARGETNS directive");

     label3:
        $i8 = (int) c2;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i8, "; expected a single or double quote to enclose the namespace URI");

     label4:
        $r6 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String parseSystemId(char,boolean,java.lang.String)>(c2, 0, "in namespace URI");

        r7 = $r6;

        $i3 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mConfigFlags>;

        $i4 = $i3 & 1024;

        if $i4 == 0 goto label5;

        $r4 = staticinvoke <com.ctc.wstx.util.InternCache: com.ctc.wstx.util.InternCache getInstance()>();

        r7 = virtualinvoke $r4.<com.ctc.wstx.util.InternCache: java.lang.String intern(java.lang.String)>($r6);

     label5:
        $c1 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipDtdWs(boolean)>(1);

        $i9 = (int) $c1;

        if $i9 == 62 goto label6;

        $i10 = (int) $c1;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i10, "; expected \'>\' to end TARGETNS directive");

     label6:
        if r5 != null goto label7;

        r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String mDefaultNsURI> = r7;

        goto label9;

     label7:
        $r1 = r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mNamespaces>;

        if $r1 != null goto label8;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mNamespaces> = $r8;

     label8:
        $r2 = r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mNamespaces>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r7);

     label9:
        return;
    }

    private void handleAttrDecl(com.ctc.wstx.dtd.DTDElement, char, int, javax.xml.stream.Location) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.api.ReaderConfig $r6, $r7;
        byte b7, b9, b10, b11, b12, b13;
        com.ctc.wstx.dtd.FullDTDReader r0;
        java.lang.Object[] $r9;
        com.ctc.wstx.dtd.DefaultAttrValue $r4, $r20, r29;
        com.ctc.wstx.dtd.DTDElement r3;
        java.lang.StringBuffer $r15, $r16, $r18, $r23, $r24, $r25, $r27, $r31, $r32;
        java.lang.String $r2, $r10, $r11, $r12, $r13, $r17, $r19, $r26, $r28;
        javax.xml.stream.XMLReporter $r8;
        com.ctc.wstx.util.WordResolver r21;
        com.ctc.wstx.dtd.NameKey $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        com.ctc.wstx.dtd.DTDAttribute r30;
        int i5, $i14, $i15, $i16, $i17, $i18;
        char $c0, $c1, $c2, $c3, $c4, c6, $c8;
        javax.xml.stream.Location r5;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r3 := @parameter0: com.ctc.wstx.dtd.DTDElement;

        c6 := @parameter1: char;

        i5 := @parameter2: int;

        r5 := @parameter3: javax.xml.stream.Location;

        $r1 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.NameKey readDTDQName(char)>(c6);

        $c0 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipObligatoryDtdWs()>();

        b7 = 0;

        b13 = 0;

        b12 = 0;

        b11 = 0;

        b10 = 0;

        b9 = 0;

        r21 = null;

        $i14 = (int) $c0;

        if $i14 != 40 goto label01;

        r21 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.util.WordResolver parseEnumerated(com.ctc.wstx.dtd.DTDElement,com.ctc.wstx.dtd.NameKey,boolean)>(r3, $r1, 0);

        b7 = 1;

        b13 = 1;

        b12 = 1;

        b11 = 1;

        b10 = 1;

        b9 = 1;

        goto label13;

     label01:
        $r2 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String readDTDName(char)>($c0);

        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(0);

        $i15 = (int) $c1;

        lookupswitch($i15)
        {
            case 67: goto label02;
            case 69: goto label06;
            case 73: goto label03;
            case 78: goto label08;
            default: goto label12;
        };

     label02:
        if $r2 != "CDATA" goto label12;

        b7 = 0;

        b13 = 0;

        b12 = 0;

        b11 = 0;

        b10 = 0;

        b9 = 0;

        goto label13;

     label03:
        if $r2 != "ID" goto label04;

        b7 = 2;

        b13 = 2;

        b12 = 2;

        b11 = 2;

        b10 = 2;

        b9 = 2;

        goto label13;

     label04:
        if $r2 != "IDREF" goto label05;

        b7 = 3;

        b13 = 3;

        b12 = 3;

        b11 = 3;

        b10 = 3;

        b9 = 3;

        goto label13;

     label05:
        if $r2 != "IDREFS" goto label12;

        b7 = 4;

        b13 = 4;

        b12 = 4;

        b11 = 4;

        b10 = 4;

        b9 = 4;

        goto label13;

     label06:
        if $r2 != "ENTITY" goto label07;

        b7 = 5;

        b13 = 5;

        b12 = 5;

        b11 = 5;

        b10 = 5;

        b9 = 5;

        goto label13;

     label07:
        if $r2 != "ENTITIES" goto label12;

        b7 = 6;

        b13 = 6;

        b12 = 6;

        b11 = 6;

        b10 = 6;

        b9 = 6;

        goto label13;

     label08:
        if $r2 != "NOTATION" goto label10;

        b7 = 7;

        b13 = 7;

        b12 = 7;

        b11 = 7;

        b10 = 7;

        b9 = 7;

        $c4 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipObligatoryDtdWs()>();

        $i16 = (int) $c4;

        if $i16 == 40 goto label09;

        $i17 = (int) $c4;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i17, "Excepted \'(\' to start the list of NOTATION ids");

     label09:
        r21 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.util.WordResolver parseEnumerated(com.ctc.wstx.dtd.DTDElement,com.ctc.wstx.dtd.NameKey,boolean)>(r3, $r1, 1);

        goto label13;

     label10:
        if $r2 != "NMTOKEN" goto label11;

        b7 = 8;

        b13 = 8;

        b12 = 8;

        b11 = 8;

        b10 = 8;

        b9 = 8;

        goto label13;

     label11:
        if $r2 != "NMTOKENS" goto label12;

        b7 = 9;

        b13 = 9;

        b12 = 9;

        b11 = 9;

        b10 = 9;

        b9 = 9;

        goto label13;

     label12:
        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        $r23 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized attribute type \'");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r26 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_DTD_ATTR_TYPE>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDAttrError(java.lang.String,com.ctc.wstx.dtd.DTDElement,com.ctc.wstx.dtd.NameKey)>($r28, r3, $r1);

     label13:
        $c8 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipObligatoryDtdWs()>();

        $i18 = (int) $c8;

        if $i18 != 35 goto label18;

        $c2 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char getNextExpanded()>();

        $r13 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String readDTDName(char)>($c2);

        if $r13 != "REQUIRED" goto label14;

        r29 = staticinvoke <com.ctc.wstx.dtd.DefaultAttrValue: com.ctc.wstx.dtd.DefaultAttrValue constructRequired()>();

        goto label17;

     label14:
        if $r13 != "IMPLIED" goto label15;

        r29 = staticinvoke <com.ctc.wstx.dtd.DefaultAttrValue: com.ctc.wstx.dtd.DefaultAttrValue constructImplied()>();

        goto label17;

     label15:
        if $r13 != "FIXED" goto label16;

        $r20 = staticinvoke <com.ctc.wstx.dtd.DefaultAttrValue: com.ctc.wstx.dtd.DefaultAttrValue constructFixed()>();

        r29 = $r20;

        $c3 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipObligatoryDtdWs()>();

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void parseAttrDefaultValue(com.ctc.wstx.dtd.DefaultAttrValue,char,com.ctc.wstx.dtd.NameKey,javax.xml.stream.Location,boolean)>($r20, $c3, $r1, r5, 1);

        goto label17;

     label16:
        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized attribute default value directive #");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r17 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_DTD_DEFAULT_TYPE>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDAttrError(java.lang.String,com.ctc.wstx.dtd.DTDElement,com.ctc.wstx.dtd.NameKey)>($r19, r3, $r1);

        r29 = null;

     label17:
        goto label19;

     label18:
        $r4 = staticinvoke <com.ctc.wstx.dtd.DefaultAttrValue: com.ctc.wstx.dtd.DefaultAttrValue constructOptional()>();

        r29 = $r4;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void parseAttrDefaultValue(com.ctc.wstx.dtd.DefaultAttrValue,char,com.ctc.wstx.dtd.NameKey,javax.xml.stream.Location,boolean)>($r4, $c8, $r1, r5, 0);

     label19:
        if b9 != 2 goto label20;

        $z11 = virtualinvoke r29.<com.ctc.wstx.dtd.DefaultAttrValue: boolean hasDefaultValue()>();

        if $z11 == 0 goto label20;

        $z12 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgFullyValidating>;

        if $z12 == 0 goto label21;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDAttrError(java.lang.String,com.ctc.wstx.dtd.DTDElement,com.ctc.wstx.dtd.NameKey)>("has type ID; can not have a default (or #FIXED) value (XML 1.0/#3.3.1)", r3, $r1);

        goto label21;

     label20:
        $r6 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.api.ReaderConfig mConfig>;

        $z0 = virtualinvoke $r6.<com.ctc.wstx.api.ReaderConfig: boolean willDoXmlIdTyping()>();

        if $z0 == 0 goto label21;

        $z9 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgNsEnabled>;

        $z10 = virtualinvoke $r1.<com.ctc.wstx.dtd.NameKey: boolean isXmlReservedAttr(boolean,java.lang.String)>($z9, "id");

        if $z10 == 0 goto label21;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void checkXmlIdAttr(int)>(b10);

     label21:
        $z13 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgNsEnabled>;

        $z14 = virtualinvoke $r1.<com.ctc.wstx.dtd.NameKey: boolean isXmlReservedAttr(boolean,java.lang.String)>($z13, "space");

        if $z14 == 0 goto label22;

        virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void checkXmlSpaceAttr(int,com.ctc.wstx.util.WordResolver)>(b11, r21);

     label22:
        $z1 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgNsEnabled>;

        if $z1 == 0 goto label24;

        $z6 = virtualinvoke $r1.<com.ctc.wstx.dtd.NameKey: boolean isaNsDeclaration()>();

        if $z6 == 0 goto label24;

        $z7 = virtualinvoke r29.<com.ctc.wstx.dtd.DefaultAttrValue: boolean hasDefaultValue()>();

        if $z7 != 0 goto label23;

        return;

     label23:
        $z8 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgFullyValidating>;

        r30 = virtualinvoke r3.<com.ctc.wstx.dtd.DTDElement: com.ctc.wstx.dtd.DTDAttribute addNsDefault(com.ctc.wstx.sr.InputProblemReporter,com.ctc.wstx.dtd.NameKey,int,com.ctc.wstx.dtd.DefaultAttrValue,boolean)>(r0, $r1, b13, r29, $z8);

        goto label25;

     label24:
        $z2 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgFullyValidating>;

        r30 = virtualinvoke r3.<com.ctc.wstx.dtd.DTDElement: com.ctc.wstx.dtd.DTDAttribute addAttribute(com.ctc.wstx.sr.InputProblemReporter,com.ctc.wstx.dtd.NameKey,int,com.ctc.wstx.dtd.DefaultAttrValue,com.ctc.wstx.util.WordResolver,boolean)>(r0, $r1, b12, r29, r21, $z2);

     label25:
        if r30 != null goto label27;

        $r7 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.api.ReaderConfig mConfig>;

        $r8 = virtualinvoke $r7.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLReporter getXMLReporter()>();

        if $r8 == null goto label26;

        $r10 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String W_DTD_ATTR_REDECL>;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = $r1;

        $r9[1] = r3;

        $r11 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($r10, $r9);

        $r12 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String WT_ATTR_DECL>;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportWarning(javax.xml.stream.XMLReporter,java.lang.String,java.lang.String,javax.xml.stream.Location,java.lang.Object)>($r8, $r12, $r11, r5, r3);

     label26:
        goto label28;

     label27:
        $z3 = virtualinvoke r29.<com.ctc.wstx.dtd.DefaultAttrValue: boolean hasDefaultValue()>();

        if $z3 == 0 goto label28;

        virtualinvoke r30.<com.ctc.wstx.dtd.DTDAttribute: void normalizeDefault()>();

        $z4 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgFullyValidating>;

        if $z4 == 0 goto label28;

        $z5 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgNormAttrs>;

        virtualinvoke r30.<com.ctc.wstx.dtd.DTDAttribute: void validateDefault(com.ctc.wstx.sr.InputProblemReporter,boolean)>(r0, $z5);

     label28:
        return;
    }

    private com.ctc.wstx.util.WordResolver parseEnumerated(com.ctc.wstx.dtd.DTDElement, com.ctc.wstx.dtd.NameKey, boolean) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        java.util.HashMap r11, $r15;
        java.util.TreeSet $r14;
        com.ctc.wstx.util.WordResolver $r9;
        com.ctc.wstx.dtd.NameKey r8;
        java.lang.StringBuffer $r3, $r4, $r5, $r16;
        com.ctc.wstx.dtd.DTDElement r7;
        int $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r6, $r12, $r13;
        com.ctc.wstx.dtd.FullDTDReader r1;
        boolean z0, $z1, $z2;
        char $c0, $c1, $c2;

        r1 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r7 := @parameter0: com.ctc.wstx.dtd.DTDElement;

        r8 := @parameter1: com.ctc.wstx.dtd.NameKey;

        z0 := @parameter2: boolean;

        $r14 = new java.util.TreeSet;

        specialinvoke $r14.<java.util.TreeSet: void <init>()>();

        $c0 = specialinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: char skipDtdWs(boolean)>(1);

        $i3 = (int) $c0;

        if $i3 != 41 goto label01;

        $i4 = (int) $c0;

        specialinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i4, " (empty list; missing identifier(s))?");

     label01:
        if z0 == 0 goto label02;

        r11 = null;

        goto label03;

     label02:
        r11 = r1.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mSharedEnumValues>;

        if r11 != null goto label03;

        if z0 != 0 goto label03;

        $r15 = new java.util.HashMap;

        specialinvoke $r15.<java.util.HashMap: void <init>()>();

        r11 = $r15;

        r1.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mSharedEnumValues> = $r15;

     label03:
        if z0 == 0 goto label04;

        $r12 = specialinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String readNotationEntry(char,com.ctc.wstx.dtd.NameKey)>($c0, r8);

        goto label05;

     label04:
        $r12 = specialinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String readEnumEntry(char,java.util.HashMap)>($c0, r11);

     label05:
        virtualinvoke $r14.<java.util.TreeSet: boolean add(java.lang.Object)>($r12);

     label06:
        $c2 = specialinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: char skipDtdWs(boolean)>(1);

        $i5 = (int) $c2;

        if $i5 != 41 goto label07;

        goto label11;

     label07:
        $i6 = (int) $c2;

        if $i6 == 124 goto label08;

        $i7 = (int) $c2;

        specialinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i7, "; missing \'|\' separator?");

     label08:
        $c1 = specialinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: char skipDtdWs(boolean)>(1);

        if z0 == 0 goto label09;

        $r13 = specialinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String readNotationEntry(char,com.ctc.wstx.dtd.NameKey)>($c1, r8);

        goto label10;

     label09:
        $r13 = specialinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String readEnumEntry(char,java.util.HashMap)>($c1, r11);

     label10:
        $z1 = virtualinvoke $r14.<java.util.TreeSet: boolean add(java.lang.Object)>($r13);

        if $z1 != 0 goto label06;

        $z2 = r1.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgFullyValidating>;

        if $z2 == 0 goto label06;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Duplicate enumeration value \'");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDAttrError(java.lang.String,com.ctc.wstx.dtd.DTDElement,com.ctc.wstx.dtd.NameKey)>($r6, r7, r8);

        goto label06;

     label11:
        $r9 = staticinvoke <com.ctc.wstx.util.WordResolver: com.ctc.wstx.util.WordResolver constructInstance(java.util.TreeSet)>($r14);

        return $r9;
    }

    private java.lang.String readNotationEntry(char, com.ctc.wstx.dtd.NameKey) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        java.util.HashMap $r2, $r3, $r4, $r23;
        com.ctc.wstx.ent.NotationDecl r26, $r27, r28;
        com.ctc.wstx.dtd.NameKey r12;
        java.lang.StringBuffer $r7, $r8, $r9, $r10, $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r21;
        java.lang.String $r1, $r6, $r11, $r18, $r22, $r25;
        com.ctc.wstx.dtd.FullDTDReader r0;
        boolean $z0;
        char c0;
        java.lang.Object $r5, $r24;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        c0 := @parameter0: char;

        r12 := @parameter1: com.ctc.wstx.dtd.NameKey;

        $r1 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String readDTDName(char)>(c0);

        $r2 = r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mPredefdNotations>;

        if $r2 == null goto label1;

        $r23 = r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mPredefdNotations>;

        $r24 = virtualinvoke $r23.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        r26 = (com.ctc.wstx.ent.NotationDecl) $r24;

        if r26 == null goto label1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mUsesPredefdNotations> = 1;

        $r25 = virtualinvoke r26.<com.ctc.wstx.ent.NotationDecl: java.lang.String getName()>();

        return $r25;

     label1:
        $r3 = r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mNotations>;

        if $r3 != null goto label2;

        $r27 = null;

        goto label3;

     label2:
        $r4 = r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mNotations>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r27 = (com.ctc.wstx.ent.NotationDecl) $r5;

     label3:
        r28 = $r27;

        if $r27 != null goto label6;

        $z0 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgFullyValidating>;

        if $z0 == 0 goto label5;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Notation \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' not defined; ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        if r12 != null goto label4;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("can not refer to from an entity");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportVCViolation(java.lang.String)>($r22);

     label4:
        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("can not be used as value for attribute list of \'");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r12);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportVCViolation(java.lang.String)>($r18);

        goto label6;

     label5:
        return $r1;

     label6:
        $r6 = virtualinvoke r28.<com.ctc.wstx.ent.NotationDecl: java.lang.String getName()>();

        return $r6;
    }

    private java.lang.String readEnumEntry(char, java.util.HashMap) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        char c0;
        java.util.HashMap r2;
        java.lang.Object $r3;
        java.lang.String $r1, r4;
        com.ctc.wstx.dtd.FullDTDReader r0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        c0 := @parameter0: char;

        r2 := @parameter1: java.util.HashMap;

        $r1 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String readDTDNmtoken(char)>(c0);

        $r3 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (java.lang.String) $r3;

        if r4 != null goto label1;

        r4 = $r1;

        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r1);

     label1:
        return r4;
    }

    private com.ctc.wstx.dtd.StructValidator readMixedSpec(com.ctc.wstx.dtd.NameKey, boolean) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dtd.DFAState $r14;
        com.ctc.wstx.dtd.NameKey r9, $r23;
        com.ctc.wstx.compat.JdkImpl $r2;
        com.ctc.wstx.dtd.FullDTDReader r0;
        boolean $z0, z1, $z2, $z3;
        java.util.Collection $r11;
        java.util.HashMap $r3;
        com.ctc.wstx.dtd.StructValidator $r13, r26;
        java.lang.StringBuffer $r5, $r6, $r7, $r19, $r20, $r21, $r27, $r28;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.lang.String $r1, $r8, $r10, $r22;
        char $c7, c8, $c9;
        com.ctc.wstx.dtd.DFAValidator $r29;
        com.ctc.wstx.dtd.EmptyValidator $r16;
        com.ctc.wstx.dtd.TokenContentSpec $r24;
        com.ctc.wstx.dtd.ChoiceContentSpec $r12;
        char[] $r17;
        java.lang.Object $r25;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r9 := @parameter0: com.ctc.wstx.dtd.NameKey;

        z1 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String checkDTDKeyword(java.lang.String)>("PCDATA");

        if $r1 == null goto label01;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized directive #");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'; expected #PCDATA (or element name)");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportWFCViolation(java.lang.String)>($r22);

     label01:
        $r2 = staticinvoke <com.ctc.wstx.compat.JdkFeatures: com.ctc.wstx.compat.JdkImpl getInstance()>();

        $r3 = virtualinvoke $r2.<com.ctc.wstx.compat.JdkImpl: java.util.HashMap getInsertOrderedMap()>();

     label02:
        $c7 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipDtdWs(boolean)>(1);

        c8 = $c7;

        $i10 = (int) $c7;

        if $i10 != 41 goto label03;

        goto label09;

     label03:
        $i11 = (int) $c7;

        if $i11 != 124 goto label04;

        c8 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipDtdWs(boolean)>(1);

        goto label07;

     label04:
        $i12 = (int) $c7;

        if $i12 != 44 goto label05;

        $i13 = (int) $c7;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i13, " (sequences not allowed within mixed content)");

        goto label07;

     label05:
        $i14 = (int) $c7;

        if $i14 != 40 goto label06;

        $i15 = (int) $c7;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i15, " (sub-content specs not allowed within mixed content)");

        goto label07;

     label06:
        $i16 = (int) $c7;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i16, "; expected either \'|\' to separate elements, or \')\' to close the list");

     label07:
        $r23 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.NameKey readDTDQName(char)>(c8);

        $r24 = staticinvoke <com.ctc.wstx.dtd.TokenContentSpec: com.ctc.wstx.dtd.TokenContentSpec construct(char,com.ctc.wstx.dtd.NameKey)>(32, $r23);

        $r25 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r24);

        if $r25 == null goto label08;

        $z0 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgFullyValidating>;

        if $z0 == 0 goto label08;

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("duplicate child element <");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r23);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("> in mixed content model");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDElemError(java.lang.String,java.lang.Object)>($r8, r9);

     label08:
        goto label02;

     label09:
        $i1 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i0 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputLen>;

        if $i1 >= $i0 goto label10;

        $r17 = r0.<com.ctc.wstx.dtd.FullDTDReader: char[] mInputBuffer>;

        $i5 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i6 = $i5 + 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i6;

        $c9 = $r17[$i5];

        goto label11;

     label10:
        $r10 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String getErrorMsg()>();

        $c9 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char getNextChar(java.lang.String)>($r10);

     label11:
        $i17 = (int) $c9;

        if $i17 == 42 goto label13;

        $i2 = virtualinvoke $r3.<java.util.HashMap: int size()>();

        if $i2 <= 0 goto label12;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportWFCViolation(java.lang.String)>("Missing trailing \'*\' after a non-empty mixed content specification");

     label12:
        $i3 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i4 = $i3 - 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i4;

     label13:
        if z1 != 0 goto label14;

        return null;

     label14:
        $z2 = virtualinvoke $r3.<java.util.HashMap: boolean isEmpty()>();

        if $z2 == 0 goto label15;

        $r16 = staticinvoke <com.ctc.wstx.dtd.EmptyValidator: com.ctc.wstx.dtd.EmptyValidator getPcdataInstance()>();

        return $r16;

     label15:
        $z3 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgNsEnabled>;

        $r11 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        $r12 = staticinvoke <com.ctc.wstx.dtd.ChoiceContentSpec: com.ctc.wstx.dtd.ChoiceContentSpec constructMixed(boolean,java.util.Collection)>($z3, $r11);

        $r13 = virtualinvoke $r12.<com.ctc.wstx.dtd.ContentSpec: com.ctc.wstx.dtd.StructValidator getSimpleValidator()>();

        r26 = $r13;

        if $r13 != null goto label16;

        $r14 = staticinvoke <com.ctc.wstx.dtd.DFAState: com.ctc.wstx.dtd.DFAState constructDFA(com.ctc.wstx.dtd.ContentSpec)>($r12);

        $r29 = new com.ctc.wstx.dtd.DFAValidator;

        specialinvoke $r29.<com.ctc.wstx.dtd.DFAValidator: void <init>(com.ctc.wstx.dtd.DFAState)>($r14);

        r26 = $r29;

     label16:
        return r26;
    }

    private com.ctc.wstx.dtd.ContentSpec readContentSpec(com.ctc.wstx.dtd.NameKey, boolean, boolean) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dtd.ContentSpec $r3, r15;
        com.ctc.wstx.dtd.NameKey r2, $r13;
        com.ctc.wstx.dtd.FullDTDReader r1;
        boolean z0, $z1, $z2, $z3, $z4, z5, z6, z7, $z9, $z10;
        com.ctc.wstx.dtd.SeqContentSpec $r4;
        java.util.ArrayList $r16;
        java.lang.StringBuffer $r9, $r10, $r11, $r17;
        int $i1, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.lang.String $r12;
        char $c0, $c2, $c3, $c4, c5, $c6;
        com.ctc.wstx.dtd.TokenContentSpec $r7, $r14;
        com.ctc.wstx.dtd.ChoiceContentSpec $r5;
        java.lang.Object $r6;

        r1 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r2 := @parameter0: com.ctc.wstx.dtd.NameKey;

        z5 := @parameter1: boolean;

        z0 := @parameter2: boolean;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        z6 = 0;

        z7 = 0;

     label01:
        $c4 = specialinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: char skipDtdWs(boolean)>(1);

        c5 = $c4;

        $i7 = (int) $c4;

        if $i7 != 41 goto label02;

        $z2 = virtualinvoke $r16.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 == 0 goto label15;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Empty content specification for \'");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' (need at least one entry)");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: void reportWFCViolation(java.lang.String)>($r12);

        goto label15;

     label02:
        $i8 = (int) $c4;

        if $i8 == 124 goto label03;

        $i9 = (int) $c4;

        if $i9 != 44 goto label08;

     label03:
        $i10 = (int) $c4;

        if $i10 != 124 goto label04;

        $z10 = 1;

        $z9 = 1;

        goto label05;

     label04:
        $z10 = 0;

        $z9 = 0;

     label05:
        if z7 != 0 goto label06;

        z6 = $z10;

        z7 = 1;

        goto label07;

     label06:
        if z6 == $z9 goto label07;

        specialinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: void reportWFCViolation(java.lang.String)>("Can not mix content spec separators (\'|\' and \',\'); need to use parenthesis groups");

     label07:
        c5 = specialinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: char skipDtdWs(boolean)>(1);

        goto label09;

     label08:
        $z1 = virtualinvoke $r16.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label09;

        $i11 = (int) $c4;

        specialinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i11, " (missing separator \'|\' or \',\'?)");

     label09:
        $i12 = (int) c5;

        if $i12 != 40 goto label10;

        $r3 = specialinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.ContentSpec readContentSpec(com.ctc.wstx.dtd.NameKey,boolean,boolean)>(r2, 0, z0);

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label01;

     label10:
        $i13 = (int) c5;

        if $i13 == 124 goto label11;

        $i14 = (int) c5;

        if $i14 != 44 goto label12;

     label11:
        $i15 = (int) c5;

        specialinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i15, " (missing element name?)");

     label12:
        $r13 = specialinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.NameKey readDTDQName(char)>(c5);

        $c6 = specialinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: char readArity()>();

        if z0 == 0 goto label13;

        $r14 = staticinvoke <com.ctc.wstx.dtd.TokenContentSpec: com.ctc.wstx.dtd.TokenContentSpec construct(char,com.ctc.wstx.dtd.NameKey)>($c6, $r13);

        goto label14;

     label13:
        $r14 = staticinvoke <com.ctc.wstx.dtd.TokenContentSpec: com.ctc.wstx.dtd.TokenContentSpec getDummySpec()>();

     label14:
        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        goto label01;

     label15:
        $c0 = specialinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: char readArity()>();

        if z0 != 0 goto label16;

        $r7 = staticinvoke <com.ctc.wstx.dtd.TokenContentSpec: com.ctc.wstx.dtd.TokenContentSpec getDummySpec()>();

        return $r7;

     label16:
        $i1 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        if $i1 != 1 goto label18;

        $r6 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r15 = (com.ctc.wstx.dtd.ContentSpec) $r6;

        $c2 = virtualinvoke r15.<com.ctc.wstx.dtd.ContentSpec: char getArity()>();

        $i16 = (int) $c0;

        $i17 = (int) $c2;

        if $i16 == $i17 goto label17;

        $c3 = staticinvoke <com.ctc.wstx.dtd.FullDTDReader: char combineArities(char,char)>($c0, $c2);

        virtualinvoke r15.<com.ctc.wstx.dtd.ContentSpec: void setArity(char)>($c3);

     label17:
        return r15;

     label18:
        if z6 == 0 goto label19;

        $z4 = r1.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgNsEnabled>;

        $r5 = staticinvoke <com.ctc.wstx.dtd.ChoiceContentSpec: com.ctc.wstx.dtd.ChoiceContentSpec constructChoice(boolean,char,java.util.Collection)>($z4, $c0, $r16);

        return $r5;

     label19:
        $z3 = r1.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgNsEnabled>;

        $r4 = staticinvoke <com.ctc.wstx.dtd.SeqContentSpec: com.ctc.wstx.dtd.SeqContentSpec construct(boolean,char,java.util.Collection)>($z3, $c0, $r16);

        return $r4;
    }

    private static char combineArities(char, char)
    {
        char c0, c1;
        int $i2, $i3, $i4, $i5, $i6, $i7;

        c0 := @parameter0: char;

        c1 := @parameter1: char;

        $i2 = (int) c0;

        $i3 = (int) c1;

        if $i2 != $i3 goto label1;

        return c0;

     label1:
        $i4 = (int) c0;

        if $i4 != 32 goto label2;

        return c1;

     label2:
        $i5 = (int) c1;

        if $i5 != 32 goto label3;

        return c0;

     label3:
        $i6 = (int) c0;

        if $i6 == 42 goto label4;

        $i7 = (int) c1;

        if $i7 != 42 goto label5;

     label4:
        return 42;

     label5:
        return 42;
    }

    private com.ctc.wstx.ent.EntityDecl handleExternalEntityDecl(com.ctc.wstx.io.WstxInputSource, boolean, java.lang.String, char, javax.xml.stream.Location) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.ent.UnparsedExtEntity $r20;
        java.net.URL $r2;
        com.ctc.wstx.dtd.FullDTDReader r0;
        boolean $z0, z1, $z2, $z3, $z4, $z5;
        com.ctc.wstx.io.WstxInputSource r1;
        java.lang.StringBuffer $r9, $r10, $r11, $r18;
        int $i0, $i1, $i2, $i4, $i5, $i7, $i8, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        java.lang.String r5, $r7, $r12, r13, $r14, $r15, $r16, r17;
        char $c3, $c6, c9, $c10, c11, c12, c13;
        com.ctc.wstx.ent.ParsedExtEntity $r19;
        javax.xml.stream.Location r4;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r1 := @parameter0: com.ctc.wstx.io.WstxInputSource;

        z1 := @parameter1: boolean;

        r5 := @parameter2: java.lang.String;

        c9 := @parameter3: char;

        r4 := @parameter4: javax.xml.stream.Location;

        $z0 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: boolean checkPublicSystemKeyword(char)>(c9);

        r13 = null;

        if $z0 == 0 goto label04;

        $c6 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipObligatoryDtdWs()>();

        $i14 = (int) $c6;

        if $i14 == 34 goto label01;

        $i15 = (int) $c6;

        if $i15 == 39 goto label01;

        $i16 = (int) $c6;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i16, "; expected a quote to start the public identifier");

     label01:
        $z4 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgNormAttrs>;

        $r14 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String getErrorMsg()>();

        r13 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String parsePublicId(char,boolean,java.lang.String)>($c6, $z4, $r14);

        $c10 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char getNextExpanded()>();

        c11 = $c10;

        $i17 = (int) $c10;

        if $i17 > 32 goto label02;

        c11 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipDtdWs(boolean)>(1);

        goto label03;

     label02:
        $i18 = (int) $c10;

        if $i18 == 62 goto label03;

        $i7 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i8 = $i7 - 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i8;

        c11 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipObligatoryDtdWs()>();

     label03:
        $i19 = (int) c11;

        if $i19 != 62 goto label05;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportWFCViolation(java.lang.String)>("Unexpected end of ENTITY declaration (expected a system id after public id): trying to use an SGML DTD instead of XML one?");

        goto label05;

     label04:
        c11 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipObligatoryDtdWs()>();

     label05:
        $i20 = (int) c11;

        if $i20 == 34 goto label06;

        $i21 = (int) c11;

        if $i21 == 39 goto label06;

        $i22 = (int) c11;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i22, "; expected a quote to start the system identifier");

     label06:
        $z5 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgNormalizeLFs>;

        $r15 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String getErrorMsg()>();

        $r16 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String parseSystemId(char,boolean,java.lang.String)>(c11, $z5, $r15);

        r17 = null;

        if z1 == 0 goto label07;

        c12 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipDtdWs(boolean)>(1);

        goto label15;

     label07:
        $i0 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: int peekNext()>();

        if $i0 != 62 goto label08;

        c12 = 62;

        $i4 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i5 = $i4 + 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i5;

        goto label12;

     label08:
        if $i0 >= 0 goto label09;

        c12 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipDtdWs(boolean)>(1);

        goto label12;

     label09:
        if $i0 != 37 goto label10;

        c12 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char getNextExpanded()>();

        goto label12;

     label10:
        $i1 = r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr>;

        $i2 = $i1 + 1;

        r0.<com.ctc.wstx.dtd.FullDTDReader: int mInputPtr> = $i2;

        c13 = (char) $i0;

        $z2 = staticinvoke <com.ctc.wstx.dtd.FullDTDReader: boolean isSpaceChar(char)>(c13);

        if $z2 != 0 goto label11;

        $i23 = (int) c13;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>($i23, "; expected a separating space or closing \'>\'");

     label11:
        c12 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipDtdWs(boolean)>(1);

     label12:
        if c12 == 62 goto label15;

        $z3 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: boolean isNameStartChar(char)>(c12);

        if $z3 != 0 goto label13;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>(c12, "; expected either NDATA keyword, or closing \'>\'");

     label13:
        $r7 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String checkDTDKeyword(java.lang.String)>("DATA");

        if $r7 == null goto label14;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized keyword \'");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'; expected NOTATION (or closing \'>\')");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportWFCViolation(java.lang.String)>($r12);

     label14:
        $c3 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipObligatoryDtdWs()>();

        r17 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String readNotationEntry(char,com.ctc.wstx.dtd.NameKey)>($c3, null);

        c12 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: char skipDtdWs(boolean)>(1);

     label15:
        if c12 == 62 goto label16;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void throwDTDUnexpectedChar(int,java.lang.String)>(c12, "; expected closing \'>\'");

     label16:
        $r2 = virtualinvoke r1.<com.ctc.wstx.io.WstxInputSource: java.net.URL getSource()>();

        if r17 != null goto label17;

        $r19 = new com.ctc.wstx.ent.ParsedExtEntity;

        specialinvoke $r19.<com.ctc.wstx.ent.ParsedExtEntity: void <init>(javax.xml.stream.Location,java.lang.String,java.net.URL,java.lang.String,java.lang.String)>(r4, r5, $r2, r13, $r16);

        return $r19;

     label17:
        $r20 = new com.ctc.wstx.ent.UnparsedExtEntity;

        specialinvoke $r20.<com.ctc.wstx.ent.UnparsedExtEntity: void <init>(javax.xml.stream.Location,java.lang.String,java.net.URL,java.lang.String,java.lang.String,java.lang.String)>(r4, r5, $r2, r13, $r16, r17);

        return $r20;
    }

    private java.util.HashMap getElementMap()
    {
        com.ctc.wstx.compat.JdkImpl $r1;
        java.util.HashMap $r2, r3;
        com.ctc.wstx.dtd.FullDTDReader r0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r3 = r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mElements>;

        if r3 != null goto label1;

        $r1 = staticinvoke <com.ctc.wstx.compat.JdkFeatures: com.ctc.wstx.compat.JdkImpl getInstance()>();

        $r2 = virtualinvoke $r1.<com.ctc.wstx.compat.JdkImpl: java.util.HashMap getInsertOrderedMap()>();

        r3 = $r2;

        r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mElements> = $r2;

     label1:
        return r3;
    }

    private com.ctc.wstx.dtd.NameKey findSharedName(java.lang.String, java.lang.String)
    {
        java.util.HashMap $r1, $r6, r7;
        com.ctc.wstx.dtd.NameKey $r5, r8, r9;
        java.lang.Object $r4;
        java.lang.String r2, r3;
        com.ctc.wstx.dtd.FullDTDReader r0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r7 = r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mSharedNames>;

        $r1 = r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mSharedNames>;

        if $r1 != null goto label1;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r7 = $r6;

        r0.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mSharedNames> = $r6;

        goto label2;

     label1:
        r8 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.NameKey mAccessKey>;

        virtualinvoke r8.<com.ctc.wstx.dtd.NameKey: com.ctc.wstx.dtd.NameKey reset(java.lang.String,java.lang.String)>(r2, r3);

        $r4 = virtualinvoke r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r8);

        r9 = (com.ctc.wstx.dtd.NameKey) $r4;

        if r9 == null goto label2;

        return r9;

     label2:
        $r5 = new com.ctc.wstx.dtd.NameKey;

        specialinvoke $r5.<com.ctc.wstx.dtd.NameKey: void <init>(java.lang.String,java.lang.String)>(r2, r3);

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r5);

        return $r5;
    }

    protected com.ctc.wstx.ent.EntityDecl findEntity(java.lang.String, java.lang.Object)
    {
        java.lang.Error $r3;
        java.util.HashMap $r6, $r8, $r10, $r11, $r16, $r17, $r19, $r20;
        com.ctc.wstx.ent.EntityDecl $r23, r24, $r26, r27;
        java.util.HashSet $r15, $r22;
        java.lang.Boolean $r1, $r2;
        java.lang.String $r4, r7;
        com.ctc.wstx.dtd.FullDTDReader r5;
        boolean $z0, $z1;
        java.util.Set $r13, $r14, r25;
        java.lang.Object r0, $r9, $r12, $r18, $r21;

        r5 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r7 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        $r1 = <com.ctc.wstx.dtd.FullDTDReader: java.lang.Boolean ENTITY_EXP_PE>;

        if r0 != $r1 goto label06;

        $r16 = r5.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mPredefdPEs>;

        if $r16 != null goto label01;

        $r23 = null;

        goto label02;

     label01:
        $r17 = r5.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mPredefdPEs>;

        $r18 = virtualinvoke $r17.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r7);

        $r23 = (com.ctc.wstx.ent.EntityDecl) $r18;

     label02:
        r24 = $r23;

        if $r23 == null goto label03;

        r5.<com.ctc.wstx.dtd.FullDTDReader: boolean mUsesPredefdEntities> = 1;

        r5.<com.ctc.wstx.dtd.FullDTDReader: java.util.Set mRefdPEs> = null;

        goto label05;

     label03:
        $r19 = r5.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mParamEntities>;

        if $r19 == null goto label05;

        $r20 = r5.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mParamEntities>;

        $r21 = virtualinvoke $r20.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r7);

        r24 = (com.ctc.wstx.ent.EntityDecl) $r21;

        if r24 == null goto label05;

        $z1 = r5.<com.ctc.wstx.dtd.FullDTDReader: boolean mUsesPredefdEntities>;

        if $z1 != 0 goto label05;

        r25 = r5.<com.ctc.wstx.dtd.FullDTDReader: java.util.Set mRefdPEs>;

        if r25 != null goto label04;

        $r22 = new java.util.HashSet;

        specialinvoke $r22.<java.util.HashSet: void <init>()>();

        r25 = $r22;

        r5.<com.ctc.wstx.dtd.FullDTDReader: java.util.Set mRefdPEs> = $r22;

     label04:
        interfaceinvoke r25.<java.util.Set: boolean add(java.lang.Object)>(r7);

     label05:
        return r24;

     label06:
        $r2 = <com.ctc.wstx.dtd.FullDTDReader: java.lang.Boolean ENTITY_EXP_GE>;

        if r0 != $r2 goto label12;

        $r6 = r5.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mPredefdGEs>;

        if $r6 != null goto label07;

        $r26 = null;

        goto label08;

     label07:
        $r8 = r5.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mPredefdGEs>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r7);

        $r26 = (com.ctc.wstx.ent.EntityDecl) $r9;

     label08:
        r27 = $r26;

        if $r26 == null goto label09;

        r5.<com.ctc.wstx.dtd.FullDTDReader: boolean mUsesPredefdEntities> = 1;

        r5.<com.ctc.wstx.dtd.FullDTDReader: java.util.Set mRefdGEs> = null;

        goto label11;

     label09:
        $r10 = r5.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mGeneralEntities>;

        if $r10 == null goto label11;

        $r11 = r5.<com.ctc.wstx.dtd.FullDTDReader: java.util.HashMap mGeneralEntities>;

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r7);

        r27 = (com.ctc.wstx.ent.EntityDecl) $r12;

        if r27 == null goto label11;

        $z0 = r5.<com.ctc.wstx.dtd.FullDTDReader: boolean mUsesPredefdEntities>;

        if $z0 != 0 goto label11;

        $r13 = r5.<com.ctc.wstx.dtd.FullDTDReader: java.util.Set mRefdGEs>;

        if $r13 != null goto label10;

        $r15 = new java.util.HashSet;

        specialinvoke $r15.<java.util.HashSet: void <init>()>();

        r5.<com.ctc.wstx.dtd.FullDTDReader: java.util.Set mRefdGEs> = $r15;

     label10:
        $r14 = r5.<com.ctc.wstx.dtd.FullDTDReader: java.util.Set mRefdGEs>;

        interfaceinvoke $r14.<java.util.Set: boolean add(java.lang.Object)>(r7);

     label11:
        return r27;

     label12:
        $r3 = new java.lang.Error;

        $r4 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_INTERNAL>;

        specialinvoke $r3.<java.lang.Error: void <init>(java.lang.String)>($r4);

        throw $r3;
    }

    protected void handleUndeclaredEntity(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.dtd.DTDEventListener $r9, $r16;
        com.ctc.wstx.dtd.DefaultAttrValue $r7, $r14, $r15;
        java.lang.StringBuffer $r1, $r2, $r4, $r5, $r8, $r10, $r11;
        com.ctc.wstx.io.WstxInputLocation $r13;
        java.lang.String r3, $r6, $r12;
        com.ctc.wstx.dtd.FullDTDReader r0;
        boolean $z0, $z1;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r3 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Undeclared parameter entity \'");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportVCViolation(java.lang.String)>($r6);

        $r7 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DefaultAttrValue mCurrAttrDefault>;

        if $r7 == null goto label2;

        $r13 = virtualinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.io.WstxInputLocation getLastCharLocation()>();

        $z1 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mExpandingPE>;

        if $z1 == 0 goto label1;

        $r15 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DefaultAttrValue mCurrAttrDefault>;

        virtualinvoke $r15.<com.ctc.wstx.dtd.DefaultAttrValue: void addUndeclaredPE(java.lang.String,javax.xml.stream.Location)>(r3, $r13);

        goto label2;

     label1:
        $r14 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DefaultAttrValue mCurrAttrDefault>;

        virtualinvoke $r14.<com.ctc.wstx.dtd.DefaultAttrValue: void addUndeclaredGE(java.lang.String,javax.xml.stream.Location)>(r3, $r13);

     label2:
        $r16 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDEventListener mEventListener>;

        if $r16 == null goto label3;

        $z0 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mExpandingPE>;

        if $z0 == 0 goto label3;

        $r9 = r0.<com.ctc.wstx.dtd.FullDTDReader: com.ctc.wstx.dtd.DTDEventListener mEventListener>;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r9.<com.ctc.wstx.dtd.DTDEventListener: void dtdSkippedEntity(java.lang.String)>($r12);

     label3:
        return;
    }

    protected void handleIncompleteEntityProblem(com.ctc.wstx.io.WstxInputSource) throws javax.xml.stream.XMLStreamException
    {
        java.lang.StringBuffer $r2, $r4, $r5, $r6, $r8, $r10, $r11, $r12;
        int $i0;
        java.lang.String $r3, $r7, $r9, $r13;
        com.ctc.wstx.dtd.FullDTDReader r1;
        boolean $z0;
        com.ctc.wstx.io.WstxInputSource r0;

        r1 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r0 := @parameter0: com.ctc.wstx.io.WstxInputSource;

        $i0 = virtualinvoke r0.<com.ctc.wstx.io.WstxInputSource: int getScopeId()>();

        if $i0 != 0 goto label1;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = specialinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String entityDesc(com.ctc.wstx.io.WstxInputSource)>(r0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Incomplete PE: has to fully contain a declaration (as per xml 1.0.3, section 2.8, WFC \'PE Between Declarations\')");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: void reportWFCViolation(java.lang.String)>($r13);

        goto label2;

     label1:
        $z0 = r1.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgFullyValidating>;

        if $z0 == 0 goto label2;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = specialinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String entityDesc(com.ctc.wstx.io.WstxInputSource)>(r0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Incomplete PE: has to be fully contained in a declaration (as per xml 1.0.3, section 2.8, VC \'Proper Declaration/PE Nesting\')");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r1.<com.ctc.wstx.dtd.FullDTDReader: void reportVCViolation(java.lang.String)>($r7);

     label2:
        return;
    }

    protected void handleGreedyEntityProblem(com.ctc.wstx.io.WstxInputSource) throws javax.xml.stream.XMLStreamException
    {
        java.lang.StringBuffer $r1, $r4, $r5, $r6;
        java.lang.String $r3, $r7;
        com.ctc.wstx.dtd.FullDTDReader r0;
        com.ctc.wstx.io.WstxInputSource r2;
        boolean $z0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r2 := @parameter0: com.ctc.wstx.io.WstxInputSource;

        $z0 = r0.<com.ctc.wstx.dtd.FullDTDReader: boolean mCfgFullyValidating>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: java.lang.String entityDesc(com.ctc.wstx.io.WstxInputSource)>(r2);

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unbalanced PE: has to be fully contained in a declaration (as per xml 1.0.3, section 2.8, VC \'Proper Declaration/PE Nesting\')");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportWFCViolation(java.lang.String)>($r7);

     label1:
        return;
    }

    protected char handleExpandedSurrogate(char, char)
    {
        char c0, c1;
        com.ctc.wstx.dtd.FullDTDReader r0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        c1 := @parameter0: char;

        c0 := @parameter1: char;

        r0.<com.ctc.wstx.dtd.FullDTDReader: char mSurrogateSecond> = c0;

        return c1;
    }

    protected void checkXmlSpaceAttr(int, com.ctc.wstx.util.WordResolver) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.util.WordResolver r2;
        int i0, $i1;
        java.lang.String $r1, $r3, $r4, $r5, $r6;
        com.ctc.wstx.dtd.FullDTDReader r0;
        boolean z1, $z2, $z3, $z4, $z5;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        i0 := @parameter0: int;

        r2 := @parameter1: com.ctc.wstx.util.WordResolver;

        if i0 != 1 goto label01;

        $z5 = 1;

        $z4 = 1;

        goto label02;

     label01:
        $z5 = 0;

        $z4 = 0;

     label02:
        z1 = $z4;

        if $z5 == 0 goto label11;

        $i1 = virtualinvoke r2.<com.ctc.wstx.util.WordResolver: int size()>();

        lookupswitch($i1)
        {
            case 1: goto label03;
            case 2: goto label07;
            default: goto label10;
        };

     label03:
        $r5 = virtualinvoke r2.<com.ctc.wstx.util.WordResolver: java.lang.String find(java.lang.String)>("preserve");

        if $r5 != null goto label04;

        $r6 = virtualinvoke r2.<com.ctc.wstx.util.WordResolver: java.lang.String find(java.lang.String)>("default");

        if $r6 == null goto label05;

     label04:
        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        z1 = $z2;

        goto label11;

     label07:
        $r3 = virtualinvoke r2.<com.ctc.wstx.util.WordResolver: java.lang.String find(java.lang.String)>("preserve");

        if $r3 == null goto label08;

        $r4 = virtualinvoke r2.<com.ctc.wstx.util.WordResolver: java.lang.String find(java.lang.String)>("default");

        if $r4 == null goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        z1 = $z3;

        goto label11;

     label10:
        z1 = 0;

     label11:
        if z1 != 0 goto label12;

        $r1 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_DTD_XML_SPACE>;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportVCViolation(java.lang.String)>($r1);

     label12:
        return;
    }

    protected void checkXmlIdAttr(int) throws javax.xml.stream.XMLStreamException
    {
        int i0;
        java.lang.String $r1;
        com.ctc.wstx.dtd.FullDTDReader r0;

        r0 := @this: com.ctc.wstx.dtd.FullDTDReader;

        i0 := @parameter0: int;

        if i0 == 2 goto label1;

        $r1 = <com.ctc.wstx.cfg.ErrorConsts: java.lang.String ERR_DTD_XML_ID>;

        specialinvoke r0.<com.ctc.wstx.dtd.FullDTDReader: void reportVCViolation(java.lang.String)>($r1);

     label1:
        return;
    }

    private void reportWarning(javax.xml.stream.XMLReporter, java.lang.String, java.lang.String, javax.xml.stream.Location, java.lang.Object) throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.Location r4;
        java.lang.Object r3;
        java.lang.String r1, r2;
        javax.xml.stream.XMLReporter r0;
        com.ctc.wstx.dtd.FullDTDReader r5;

        r5 := @this: com.ctc.wstx.dtd.FullDTDReader;

        r0 := @parameter0: javax.xml.stream.XMLReporter;

        r2 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r4 := @parameter3: javax.xml.stream.Location;

        r3 := @parameter4: java.lang.Object;

        if r0 == null goto label1;

        interfaceinvoke r0.<javax.xml.stream.XMLReporter: void report(java.lang.String,java.lang.String,java.lang.Object,javax.xml.stream.Location)>(r1, r2, r3, r4);

     label1:
        return;
    }

    static void <clinit>()
    {
        java.lang.Boolean $r0, $r1;

        <com.ctc.wstx.dtd.FullDTDReader: int EXP_ATTR_VALUE_LEN> = 200;

        <com.ctc.wstx.dtd.FullDTDReader: int EXP_ENTITY_VALUE_LEN> = 500;

        <com.ctc.wstx.dtd.FullDTDReader: boolean INTERN_SHARED_NAMES> = 0;

        $r0 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        <com.ctc.wstx.dtd.FullDTDReader: java.lang.Boolean ENTITY_EXP_GE> = $r0;

        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        <com.ctc.wstx.dtd.FullDTDReader: java.lang.Boolean ENTITY_EXP_PE> = $r1;

        return;
    }
}
