public class org.eclipse.jdt.internal.core.util.ClassFileAttribute extends org.eclipse.jdt.internal.core.util.ClassFileStruct implements org.eclipse.jdt.core.util.IClassFileAttribute
{
    public static final org.eclipse.jdt.core.util.IClassFileAttribute[] NO_ATTRIBUTES;
    private long attributeLength;
    private int attributeNameIndex;
    private char[] attributeName;

    static void <clinit>()
    {
        org.eclipse.jdt.core.util.IClassFileAttribute[] $r0;

        $r0 = newarray (org.eclipse.jdt.core.util.IClassFileAttribute)[0];

        <org.eclipse.jdt.internal.core.util.ClassFileAttribute: org.eclipse.jdt.core.util.IClassFileAttribute[] NO_ATTRIBUTES> = $r0;

        return;
    }

    public void <init>(byte[], org.eclipse.jdt.core.util.IConstantPool, int) throws org.eclipse.jdt.core.util.ClassFormatException
    {
        java.lang.Throwable $r7;
        byte[] r1;
        org.eclipse.jdt.core.util.IConstantPool r2;
        org.eclipse.jdt.core.util.IConstantPoolEntry $r3;
        long $l2;
        int i0, $i1, $i3, $i4;
        org.eclipse.jdt.core.util.ClassFormatException $r6;
        org.eclipse.jdt.internal.core.util.ClassFileAttribute r0;
        char[] $r4;

        r0 := @this: org.eclipse.jdt.internal.core.util.ClassFileAttribute;

        r1 := @parameter0: byte[];

        r2 := @parameter1: org.eclipse.jdt.core.util.IConstantPool;

        i0 := @parameter2: int;

        specialinvoke r0.<org.eclipse.jdt.internal.core.util.ClassFileStruct: void <init>()>();

        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.ClassFileAttribute: int u2At(byte[],int,int)>(r1, 0, i0);

        r0.<org.eclipse.jdt.internal.core.util.ClassFileAttribute: int attributeNameIndex> = $i1;

        $l2 = virtualinvoke r0.<org.eclipse.jdt.internal.core.util.ClassFileAttribute: long u4At(byte[],int,int)>(r1, 2, i0);

        r0.<org.eclipse.jdt.internal.core.util.ClassFileAttribute: long attributeLength> = $l2;

        $i3 = r0.<org.eclipse.jdt.internal.core.util.ClassFileAttribute: int attributeNameIndex>;

        $r3 = interfaceinvoke r2.<org.eclipse.jdt.core.util.IConstantPool: org.eclipse.jdt.core.util.IConstantPoolEntry decodeEntry(int)>($i3);

        $i4 = interfaceinvoke $r3.<org.eclipse.jdt.core.util.IConstantPoolEntry: int getKind()>();

        if $i4 == 1 goto label1;

        $r6 = new org.eclipse.jdt.core.util.ClassFormatException;

        specialinvoke $r6.<org.eclipse.jdt.core.util.ClassFormatException: void <init>(int)>(3);

        $r7 = (java.lang.Throwable) $r6;

        throw $r7;

     label1:
        $r4 = interfaceinvoke $r3.<org.eclipse.jdt.core.util.IConstantPoolEntry: char[] getUtf8Value()>();

        r0.<org.eclipse.jdt.internal.core.util.ClassFileAttribute: char[] attributeName> = $r4;

        return;
    }

    public int getAttributeNameIndex()
    {
        int $i0;
        org.eclipse.jdt.internal.core.util.ClassFileAttribute r0;

        r0 := @this: org.eclipse.jdt.internal.core.util.ClassFileAttribute;

        $i0 = r0.<org.eclipse.jdt.internal.core.util.ClassFileAttribute: int attributeNameIndex>;

        return $i0;
    }

    public char[] getAttributeName()
    {
        org.eclipse.jdt.internal.core.util.ClassFileAttribute r0;
        char[] $r1;

        r0 := @this: org.eclipse.jdt.internal.core.util.ClassFileAttribute;

        $r1 = r0.<org.eclipse.jdt.internal.core.util.ClassFileAttribute: char[] attributeName>;

        return $r1;
    }

    public long getAttributeLength()
    {
        org.eclipse.jdt.internal.core.util.ClassFileAttribute r0;
        long $l0;

        r0 := @this: org.eclipse.jdt.internal.core.util.ClassFileAttribute;

        $l0 = r0.<org.eclipse.jdt.internal.core.util.ClassFileAttribute: long attributeLength>;

        return $l0;
    }
}
