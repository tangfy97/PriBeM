public class org.springframework.beans.factory.config.FieldRetrievingFactoryBean extends java.lang.Object implements org.springframework.beans.factory.FactoryBean, org.springframework.beans.factory.BeanNameAware, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.InitializingBean
{
    private java.lang.Class targetClass;
    private java.lang.Object targetObject;
    private java.lang.String targetField;
    private java.lang.String staticField;
    private java.lang.String beanName;
    private java.lang.ClassLoader beanClassLoader;
    private java.lang.reflect.Field fieldObject;

    public void <init>()
    {
        java.lang.ClassLoader $r1;
        org.springframework.beans.factory.config.FieldRetrievingFactoryBean r0;

        r0 := @this: org.springframework.beans.factory.config.FieldRetrievingFactoryBean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.springframework.util.ClassUtils: java.lang.ClassLoader getDefaultClassLoader()>();

        r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.ClassLoader beanClassLoader> = $r1;

        return;
    }

    public void setTargetClass(java.lang.Class)
    {
        java.lang.Class r1;
        org.springframework.beans.factory.config.FieldRetrievingFactoryBean r0;

        r0 := @this: org.springframework.beans.factory.config.FieldRetrievingFactoryBean;

        r1 := @parameter0: java.lang.Class;

        r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.Class targetClass> = r1;

        return;
    }

    public java.lang.Class getTargetClass()
    {
        java.lang.Class $r1;
        org.springframework.beans.factory.config.FieldRetrievingFactoryBean r0;

        r0 := @this: org.springframework.beans.factory.config.FieldRetrievingFactoryBean;

        $r1 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.Class targetClass>;

        return $r1;
    }

    public void setTargetObject(java.lang.Object)
    {
        java.lang.Object r1;
        org.springframework.beans.factory.config.FieldRetrievingFactoryBean r0;

        r0 := @this: org.springframework.beans.factory.config.FieldRetrievingFactoryBean;

        r1 := @parameter0: java.lang.Object;

        r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.Object targetObject> = r1;

        return;
    }

    public java.lang.Object getTargetObject()
    {
        java.lang.Object $r1;
        org.springframework.beans.factory.config.FieldRetrievingFactoryBean r0;

        r0 := @this: org.springframework.beans.factory.config.FieldRetrievingFactoryBean;

        $r1 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.Object targetObject>;

        return $r1;
    }

    public void setTargetField(java.lang.String)
    {
        java.lang.String r1, $r2;
        org.springframework.beans.factory.config.FieldRetrievingFactoryBean r0;

        r0 := @this: org.springframework.beans.factory.config.FieldRetrievingFactoryBean;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.springframework.util.StringUtils: java.lang.String trimAllWhitespace(java.lang.String)>(r1);

        r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.String targetField> = $r2;

        return;
    }

    public java.lang.String getTargetField()
    {
        java.lang.String $r1;
        org.springframework.beans.factory.config.FieldRetrievingFactoryBean r0;

        r0 := @this: org.springframework.beans.factory.config.FieldRetrievingFactoryBean;

        $r1 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.String targetField>;

        return $r1;
    }

    public void setStaticField(java.lang.String)
    {
        java.lang.String r1, $r2;
        org.springframework.beans.factory.config.FieldRetrievingFactoryBean r0;

        r0 := @this: org.springframework.beans.factory.config.FieldRetrievingFactoryBean;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.springframework.util.StringUtils: java.lang.String trimAllWhitespace(java.lang.String)>(r1);

        r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.String staticField> = $r2;

        return;
    }

    public void setBeanName(java.lang.String)
    {
        java.lang.String r1, $r2, $r3;
        org.springframework.beans.factory.config.FieldRetrievingFactoryBean r0;

        r0 := @this: org.springframework.beans.factory.config.FieldRetrievingFactoryBean;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.springframework.beans.factory.BeanFactoryUtils: java.lang.String originalBeanName(java.lang.String)>(r1);

        $r3 = staticinvoke <org.springframework.util.StringUtils: java.lang.String trimAllWhitespace(java.lang.String)>($r2);

        r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.String beanName> = $r3;

        return;
    }

    public void setBeanClassLoader(java.lang.ClassLoader)
    {
        java.lang.ClassLoader r1;
        org.springframework.beans.factory.config.FieldRetrievingFactoryBean r0;

        r0 := @this: org.springframework.beans.factory.config.FieldRetrievingFactoryBean;

        r1 := @parameter0: java.lang.ClassLoader;

        r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.ClassLoader beanClassLoader> = r1;

        return;
    }

    public void afterPropertiesSet() throws java.lang.ClassNotFoundException, java.lang.NoSuchFieldException
    {
        int $i0, $i1, $i2, $i4;
        java.lang.String $r3, $r5, $r10, $r11, $r12, $r14, $r15, $r16, $r17, $r18, $r21;
        org.springframework.beans.factory.config.FieldRetrievingFactoryBean r0;
        java.lang.reflect.Field $r6;
        java.lang.IllegalArgumentException $r26, $r27, $r28, $r29;
        java.lang.Class $r1, $r2, $r20, $r25;
        java.lang.Object $r4, $r7, $r9, $r23;
        java.lang.ClassLoader $r19;

        r0 := @this: org.springframework.beans.factory.config.FieldRetrievingFactoryBean;

        $r1 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.Class targetClass>;

        if $r1 == null goto label1;

        $r23 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.Object targetObject>;

        if $r23 == null goto label1;

        $r26 = new java.lang.IllegalArgumentException;

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Specify either targetClass or targetObject, not both");

        throw $r26;

     label1:
        $r2 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.Class targetClass>;

        if $r2 != null goto label6;

        $r9 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.Object targetObject>;

        if $r9 != null goto label6;

        $r10 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.String targetField>;

        if $r10 == null goto label2;

        $r27 = new java.lang.IllegalArgumentException;

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Specify targetClass or targetObject in combination with targetField");

        throw $r27;

     label2:
        $r11 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.String staticField>;

        if $r11 != null goto label3;

        $r21 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.String beanName>;

        r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.String staticField> = $r21;

     label3:
        $r12 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.String staticField>;

        $i0 = virtualinvoke $r12.<java.lang.String: int lastIndexOf(int)>(46);

        $i4 = (int) -1;

        if $i0 == $i4 goto label4;

        $r14 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.String staticField>;

        $i1 = virtualinvoke $r14.<java.lang.String: int length()>();

        if $i0 != $i1 goto label5;

     label4:
        $r28 = new java.lang.IllegalArgumentException;

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("staticField must be a fully qualified class plus method name: e.g. \'example.MyExampleClass.MY_EXAMPLE_FIELD\'");

        throw $r28;

     label5:
        $r15 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.String staticField>;

        $r16 = virtualinvoke $r15.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r17 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.String staticField>;

        $i2 = $i0 + 1;

        $r18 = virtualinvoke $r17.<java.lang.String: java.lang.String substring(int)>($i2);

        $r19 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.ClassLoader beanClassLoader>;

        $r20 = staticinvoke <org.springframework.util.ClassUtils: java.lang.Class forName(java.lang.String,java.lang.ClassLoader)>($r16, $r19);

        r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.Class targetClass> = $r20;

        r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.String targetField> = $r18;

        goto label7;

     label6:
        $r3 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.String targetField>;

        if $r3 != null goto label7;

        $r29 = new java.lang.IllegalArgumentException;

        specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("targetField is required");

        throw $r29;

     label7:
        $r4 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.Object targetObject>;

        if $r4 == null goto label8;

        $r7 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.Object targetObject>;

        $r25 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        goto label9;

     label8:
        $r25 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.Class targetClass>;

     label9:
        $r5 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.String targetField>;

        $r6 = virtualinvoke $r25.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>($r5);

        r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.reflect.Field fieldObject> = $r6;

        return;
    }

    public java.lang.Object getObject() throws java.lang.IllegalAccessException
    {
        java.lang.reflect.Field $r1, $r2, $r4, $r7;
        org.springframework.beans.factory.FactoryBeanNotInitializedException $r9;
        java.lang.Object $r3, $r5, $r6, $r8;
        org.springframework.beans.factory.config.FieldRetrievingFactoryBean r0;

        r0 := @this: org.springframework.beans.factory.config.FieldRetrievingFactoryBean;

        $r1 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.reflect.Field fieldObject>;

        if $r1 != null goto label1;

        $r9 = new org.springframework.beans.factory.FactoryBeanNotInitializedException;

        specialinvoke $r9.<org.springframework.beans.factory.FactoryBeanNotInitializedException: void <init>()>();

        throw $r9;

     label1:
        $r2 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.reflect.Field fieldObject>;

        staticinvoke <org.springframework.util.ReflectionUtils: void makeAccessible(java.lang.reflect.Field)>($r2);

        $r3 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.Object targetObject>;

        if $r3 == null goto label2;

        $r7 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.reflect.Field fieldObject>;

        $r6 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.Object targetObject>;

        $r8 = virtualinvoke $r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r6);

        return $r8;

     label2:
        $r4 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.reflect.Field fieldObject>;

        $r5 = virtualinvoke $r4.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        return $r5;
    }

    public java.lang.Class getObjectType()
    {
        java.lang.Class $r3;
        java.lang.reflect.Field $r1, $r2;
        org.springframework.beans.factory.config.FieldRetrievingFactoryBean r0;

        r0 := @this: org.springframework.beans.factory.config.FieldRetrievingFactoryBean;

        $r1 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.reflect.Field fieldObject>;

        if $r1 == null goto label1;

        $r2 = r0.<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.reflect.Field fieldObject>;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Class getType()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public boolean isSingleton()
    {
        org.springframework.beans.factory.config.FieldRetrievingFactoryBean r0;

        r0 := @this: org.springframework.beans.factory.config.FieldRetrievingFactoryBean;

        return 0;
    }
}
