final class org.jdesktop.application.Application$1 extends java.lang.Object implements java.lang.Runnable
{
    final java.lang.String[] val$args;

    void <init>(java.lang.String[])
    {
        org.jdesktop.application.Application$1 r0;
        java.lang.String[] r1;

        r0 := @this: org.jdesktop.application.Application$1;

        r1 := @parameter0: java.lang.String[];

        r0.<org.jdesktop.application.Application$1: java.lang.String[] val$args> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        javax.swing.JWindow $r5;
        org.jdesktop.application.Application $r0, $r1, $r4;
        org.jdesktop.application.Application$1 r2;
        java.lang.String[] $r3;
        java.lang.Exception $r6;

        r2 := @this: org.jdesktop.application.Application$1;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>(3000L);

        $r0 = staticinvoke <org.jdesktop.application.Application: org.jdesktop.application.Application access$000()>();

        staticinvoke <org.jdesktop.application.Application: org.jdesktop.application.Application create(org.jdesktop.application.Application)>($r0);

        $r1 = staticinvoke <org.jdesktop.application.Application: org.jdesktop.application.Application access$000()>();

        $r3 = r2.<org.jdesktop.application.Application$1: java.lang.String[] val$args>;

        virtualinvoke $r1.<org.jdesktop.application.Application: void initialize(java.lang.String[])>($r3);

        $r4 = staticinvoke <org.jdesktop.application.Application: org.jdesktop.application.Application access$000()>();

        virtualinvoke $r4.<org.jdesktop.application.Application: void startup()>();

        $r5 = staticinvoke <org.jdesktop.application.Application: javax.swing.JWindow access$100()>();

        virtualinvoke $r5.<javax.swing.JWindow: void dispose()>();

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
