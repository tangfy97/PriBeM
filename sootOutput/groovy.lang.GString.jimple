public abstract class groovy.lang.GString extends groovy.lang.GroovyObjectSupport implements java.lang.Comparable, java.lang.CharSequence, groovy.lang.Writable, groovy.lang.Buildable, java.io.Serializable
{
    static final long serialVersionUID;
    private java.lang.Object[] values;

    public void <init>(java.lang.Object)
    {
        groovy.lang.GString r0;
        java.lang.Object[] $r2, $r3;
        java.lang.Object r1;

        r0 := @this: groovy.lang.GString;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<groovy.lang.GroovyObjectSupport: void <init>()>();

        $r2 = (java.lang.Object[]) r1;

        $r3 = (java.lang.Object[]) $r2;

        r0.<groovy.lang.GString: java.lang.Object[] values> = $r3;

        return;
    }

    public void <init>(java.lang.Object[])
    {
        groovy.lang.GString r0;
        java.lang.Object[] r1;

        r0 := @this: groovy.lang.GString;

        r1 := @parameter0: java.lang.Object[];

        specialinvoke r0.<groovy.lang.GroovyObjectSupport: void <init>()>();

        r0.<groovy.lang.GString: java.lang.Object[] values> = r1;

        return;
    }

    public abstract java.lang.String[] getStrings();

    public java.lang.Object invokeMethod(java.lang.String, java.lang.Object)
    {
        groovy.lang.GString r0;
        groovy.lang.MissingMethodException $r4;
        java.lang.Object r2, $r3, $r6;
        java.lang.String r1, $r5;

        r0 := @this: groovy.lang.GString;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

     label1:
        $r3 = specialinvoke r0.<groovy.lang.GroovyObjectSupport: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>(r1, r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = virtualinvoke r0.<groovy.lang.GString: java.lang.String toString()>();

        $r6 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>($r5, r1, r2);

        return $r6;

        catch groovy.lang.MissingMethodException from label1 to label2 with label3;
    }

    public java.lang.Object[] getValues()
    {
        groovy.lang.GString r0;
        java.lang.Object[] $r1;

        r0 := @this: groovy.lang.GString;

        $r1 = r0.<groovy.lang.GString: java.lang.Object[] values>;

        return $r1;
    }

    public groovy.lang.GString plus(groovy.lang.GString)
    {
        java.lang.Object[] $r5, $r10, $r12;
        java.lang.String[] $r3, $r8, $r21;
        java.util.ArrayList $r0, $r1, $r14;
        java.lang.StringBuffer $r16, $r17, $r19;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        groovy.lang.GString$1 $r13;
        java.lang.String $r20, r23;
        groovy.lang.GString r2, r7;
        java.util.List $r4, $r6, $r9, $r11, r22;
        java.lang.Object $r15, $r18;

        r2 := @this: groovy.lang.GString;

        r7 := @parameter0: groovy.lang.GString;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r2.<groovy.lang.GString: java.lang.String[] getStrings()>();

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        $r5 = virtualinvoke r2.<groovy.lang.GString: java.lang.Object[] getValues()>();

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);

        interfaceinvoke $r1.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        $r8 = virtualinvoke r7.<groovy.lang.GString: java.lang.String[] getStrings()>();

        $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r8);

        r22 = $r9;

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 <= $i1 goto label1;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);

        r22 = $r14;

        $i3 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i4 = $i3 - 1;

        $r15 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i4);

        r23 = (java.lang.String) $r15;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r23);

        $r18 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(0);

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r14.<java.util.List: java.lang.Object remove(int)>(0);

        $i5 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i6 = $i5 - 1;

        interfaceinvoke $r0.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i6, $r20);

     label1:
        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>(r22);

        $r10 = virtualinvoke r7.<groovy.lang.GString: java.lang.Object[] getValues()>();

        $r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r10);

        interfaceinvoke $r1.<java.util.List: boolean addAll(java.util.Collection)>($r11);

        $i2 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r21 = newarray (java.lang.String)[$i2];

        interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r21);

        $r12 = interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray()>();

        $r13 = new groovy.lang.GString$1;

        specialinvoke $r13.<groovy.lang.GString$1: void <init>(groovy.lang.GString,java.lang.Object[],java.lang.String[])>(r2, $r12, $r21);

        return $r13;
    }

    public groovy.lang.GString plus(java.lang.String)
    {
        java.lang.Object[] $r2, $r3, $r4, $r5, $r13;
        java.lang.String[] $r1, r14;
        java.lang.StringBuffer $r8, $r10, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String r6, $r9, $r12;
        groovy.lang.GString$2 $r7;
        boolean z0, $z2, $z3;
        groovy.lang.GString r0;

        r0 := @this: groovy.lang.GString;

        r6 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<groovy.lang.GString: java.lang.String[] getStrings()>();

        $i0 = lengthof $r1;

        $r2 = virtualinvoke r0.<groovy.lang.GString: java.lang.Object[] getValues()>();

        $i1 = lengthof $r2;

        if $i0 <= $i1 goto label1;

        $z3 = 1;

        $z2 = 1;

        goto label2;

     label1:
        $z3 = 0;

        $z2 = 0;

     label2:
        z0 = $z2;

        if $z3 == 0 goto label3;

        $i7 = lengthof $r1;

        r14 = newarray (java.lang.String)[$i7];

        goto label4;

     label3:
        $i2 = lengthof $r1;

        $i3 = $i2 + 1;

        r14 = newarray (java.lang.String)[$i3];

     label4:
        $r3 = virtualinvoke r0.<groovy.lang.GString: java.lang.Object[] getValues()>();

        $i4 = lengthof $r3;

        $r13 = newarray (java.lang.Object)[$i4];

        $i8 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, r14, 0, $i8);

        $r4 = virtualinvoke r0.<groovy.lang.GString: java.lang.Object[] getValues()>();

        $r5 = virtualinvoke r0.<groovy.lang.GString: java.lang.Object[] getValues()>();

        $i5 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r13, 0, $i5);

        if z0 == 0 goto label5;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $i6 = $i8 - 1;

        $r9 = r14[$i6];

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        r14[$i6] = $r12;

        goto label6;

     label5:
        r14[$i8] = r6;

     label6:
        $r7 = new groovy.lang.GString$2;

        specialinvoke $r7.<groovy.lang.GString$2: void <init>(groovy.lang.GString,java.lang.Object[],java.lang.String[])>(r0, $r13, r14);

        return $r7;
    }

    public int getValueCount()
    {
        groovy.lang.GString r0;
        int $i0;
        java.lang.Object[] $r1;

        r0 := @this: groovy.lang.GString;

        $r1 = r0.<groovy.lang.GString: java.lang.Object[] values>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public java.lang.Object getValue(int)
    {
        groovy.lang.GString r0;
        java.lang.Object[] $r1;
        int i0;
        java.lang.Object $r2;

        r0 := @this: groovy.lang.GString;

        i0 := @parameter0: int;

        $r1 = r0.<groovy.lang.GString: java.lang.Object[] values>;

        $r2 = $r1[i0];

        return $r2;
    }

    public java.lang.String toString()
    {
        groovy.lang.GString r1;
        groovy.lang.StringWriterIOException $r4;
        java.io.StringWriter $r0;
        java.io.IOException $r3;
        java.lang.String $r2;

        r1 := @this: groovy.lang.GString;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

     label1:
        virtualinvoke r1.<groovy.lang.GString: java.io.Writer writeTo(java.io.Writer)>($r0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new groovy.lang.StringWriterIOException;

        specialinvoke $r4.<groovy.lang.StringWriterIOException: void <init>(java.io.IOException)>($r3);

        throw $r4;

     label4:
        $r2 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        return $r2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.io.Writer writeTo(java.io.Writer) throws java.io.IOException
    {
        java.lang.Object[] $r2, $r5, $r14;
        groovy.lang.Closure r7;
        java.lang.String[] $r1;
        java.lang.StringBuffer $r9, $r10, $r11, $r12;
        int i0, i1, $i2, $i3, $i4, i5;
        java.lang.String $r4, $r13;
        boolean $z0;
        groovy.lang.GroovyRuntimeException $r8;
        groovy.lang.GString r0;
        java.io.Writer r3;
        java.lang.Object r6, $r15;

        r0 := @this: groovy.lang.GString;

        r3 := @parameter0: java.io.Writer;

        $r1 = virtualinvoke r0.<groovy.lang.GString: java.lang.String[] getStrings()>();

        $r2 = r0.<groovy.lang.GString: java.lang.Object[] values>;

        i0 = lengthof $r2;

        i5 = 0;

        i1 = lengthof $r1;

     label1:
        if i5 >= i1 goto label7;

        $r4 = $r1[i5];

        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>($r4);

        if i5 >= i0 goto label6;

        $r5 = r0.<groovy.lang.GString: java.lang.Object[] values>;

        r6 = $r5[i5];

        $z0 = r6 instanceof groovy.lang.Closure;

        if $z0 == 0 goto label5;

        r7 = (groovy.lang.Closure) r6;

        $i2 = virtualinvoke r7.<groovy.lang.Closure: int getMaximumNumberOfParameters()>();

        if $i2 != 0 goto label2;

        $r15 = virtualinvoke r7.<groovy.lang.Closure: java.lang.Object call(java.lang.Object[])>(null);

        staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: void write(java.io.Writer,java.lang.Object)>(r3, $r15);

        goto label4;

     label2:
        $i3 = virtualinvoke r7.<groovy.lang.Closure: int getMaximumNumberOfParameters()>();

        if $i3 != 1 goto label3;

        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = r3;

        virtualinvoke r7.<groovy.lang.Closure: java.lang.Object call(java.lang.Object[])>($r14);

        goto label4;

     label3:
        $r8 = new groovy.lang.GroovyRuntimeException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Trying to evaluate a GString containing a Closure taking ");

        $i4 = virtualinvoke r7.<groovy.lang.Closure: int getMaximumNumberOfParameters()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" parameters");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label4:
        goto label6;

     label5:
        staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: void write(java.io.Writer,java.lang.Object)>(r3, r6);

     label6:
        i5 = i5 + 1;

        goto label1;

     label7:
        return r3;
    }

    public void build(groovy.lang.GroovyObject)
    {
        java.lang.Object[] $r2, $r4, $r6, $r7;
        java.lang.String[] $r1;
        groovy.lang.GString r0;
        groovy.lang.GroovyObject r3;
        int i0, i1, i2;
        java.lang.Object $r8;
        java.lang.String $r5;

        r0 := @this: groovy.lang.GString;

        r3 := @parameter0: groovy.lang.GroovyObject;

        $r1 = virtualinvoke r0.<groovy.lang.GString: java.lang.String[] getStrings()>();

        $r2 = r0.<groovy.lang.GString: java.lang.Object[] values>;

        i0 = lengthof $r2;

        i2 = 0;

        i1 = lengthof $r1;

     label1:
        if i2 >= i1 goto label3;

        interfaceinvoke r3.<groovy.lang.GroovyObject: java.lang.Object getProperty(java.lang.String)>("mkp");

        $r4 = newarray (java.lang.Object)[1];

        $r5 = $r1[i2];

        $r4[0] = $r5;

        interfaceinvoke r3.<groovy.lang.GroovyObject: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>("yield", $r4);

        if i2 >= i0 goto label2;

        interfaceinvoke r3.<groovy.lang.GroovyObject: java.lang.Object getProperty(java.lang.String)>("mkp");

        $r6 = newarray (java.lang.Object)[1];

        $r7 = r0.<groovy.lang.GString: java.lang.Object[] values>;

        $r8 = $r7[i2];

        $r6[0] = $r8;

        interfaceinvoke r3.<groovy.lang.GroovyObject: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>("yield", $r6);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        groovy.lang.GString r1, $r2;
        java.lang.Object r0;
        boolean $z0, $z1;

        r1 := @this: groovy.lang.GString;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof groovy.lang.GString;

        if $z0 == 0 goto label1;

        $r2 = (groovy.lang.GString) r0;

        $z1 = virtualinvoke r1.<groovy.lang.GString: boolean equals(groovy.lang.GString)>($r2);

        return $z1;

     label1:
        return 0;
    }

    public boolean equals(groovy.lang.GString)
    {
        groovy.lang.GString r0, r2;
        java.lang.String $r1, $r3;
        boolean $z0;

        r0 := @this: groovy.lang.GString;

        r2 := @parameter0: groovy.lang.GString;

        $r1 = virtualinvoke r0.<groovy.lang.GString: java.lang.String toString()>();

        $r3 = virtualinvoke r2.<groovy.lang.GString: java.lang.String toString()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    public int hashCode()
    {
        groovy.lang.GString r0;
        int $i0, $i1;
        java.lang.String $r1;

        r0 := @this: groovy.lang.GString;

        $r1 = virtualinvoke r0.<groovy.lang.GString: java.lang.String toString()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i1 = 37 + $i0;

        return $i1;
    }

    public int compareTo(java.lang.Object)
    {
        groovy.lang.GString r0;
        int $i0;
        java.lang.Object r2;
        java.lang.String $r1, $r3;

        r0 := @this: groovy.lang.GString;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<groovy.lang.GString: java.lang.String toString()>();

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int compareTo(java.lang.String)>($r3);

        return $i0;
    }

    public char charAt(int)
    {
        groovy.lang.GString r0;
        int i0;
        char $c1;
        java.lang.String $r1;

        r0 := @this: groovy.lang.GString;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<groovy.lang.GString: java.lang.String toString()>();

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i0);

        return $c1;
    }

    public int length()
    {
        groovy.lang.GString r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: groovy.lang.GString;

        $r1 = virtualinvoke r0.<groovy.lang.GString: java.lang.String toString()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i0;
    }

    public java.lang.CharSequence subSequence(int, int)
    {
        groovy.lang.GString r0;
        java.lang.CharSequence $r2;
        int i0, i1;
        java.lang.String $r1;

        r0 := @this: groovy.lang.GString;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<groovy.lang.GString: java.lang.String toString()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.CharSequence subSequence(int,int)>(i0, i1);

        return $r2;
    }

    public java.util.regex.Pattern negate()
    {
        groovy.lang.GString r0;
        java.lang.String $r1;
        java.util.regex.Pattern $r2;

        r0 := @this: groovy.lang.GString;

        $r1 = virtualinvoke r0.<groovy.lang.GString: java.lang.String toString()>();

        $r2 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.util.regex.Pattern bitwiseNegate(java.lang.String)>($r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <groovy.lang.GString: long serialVersionUID> = -2638020355892246323L;

        return;
    }
}
