class org.jsoup.nodes.Element$1 extends java.lang.Object implements org.jsoup.select.NodeVisitor
{
    final java.lang.StringBuilder val$accum;
    final org.jsoup.nodes.Element this$0;

    void <init>(org.jsoup.nodes.Element, java.lang.StringBuilder)
    {
        java.lang.StringBuilder r2;
        org.jsoup.nodes.Element$1 r0;
        org.jsoup.nodes.Element r1;

        r0 := @this: org.jsoup.nodes.Element$1;

        r1 := @parameter0: org.jsoup.nodes.Element;

        r2 := @parameter1: java.lang.StringBuilder;

        r0.<org.jsoup.nodes.Element$1: org.jsoup.nodes.Element this$0> = r1;

        r0.<org.jsoup.nodes.Element$1: java.lang.StringBuilder val$accum> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void head(org.jsoup.nodes.Node, int)
    {
        org.jsoup.nodes.TextNode r8;
        org.jsoup.nodes.Element r9;
        int $i0, i1;
        java.lang.String $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.jsoup.parser.Tag $r5;
        org.jsoup.nodes.Node r0;
        java.lang.StringBuilder $r2, $r3, $r4, $r7;
        org.jsoup.nodes.Element$1 r1;

        r1 := @this: org.jsoup.nodes.Element$1;

        r0 := @parameter0: org.jsoup.nodes.Node;

        i1 := @parameter1: int;

        $z0 = r0 instanceof org.jsoup.nodes.TextNode;

        if $z0 == 0 goto label1;

        r8 = (org.jsoup.nodes.TextNode) r0;

        $r7 = r1.<org.jsoup.nodes.Element$1: java.lang.StringBuilder val$accum>;

        staticinvoke <org.jsoup.nodes.Element: void access$000(java.lang.StringBuilder,org.jsoup.nodes.TextNode)>($r7, r8);

        goto label3;

     label1:
        $z1 = r0 instanceof org.jsoup.nodes.Element;

        if $z1 == 0 goto label3;

        r9 = (org.jsoup.nodes.Element) r0;

        $r2 = r1.<org.jsoup.nodes.Element$1: java.lang.StringBuilder val$accum>;

        $i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label3;

        $z2 = virtualinvoke r9.<org.jsoup.nodes.Element: boolean isBlock()>();

        if $z2 != 0 goto label2;

        $r5 = staticinvoke <org.jsoup.nodes.Element: org.jsoup.parser.Tag access$100(org.jsoup.nodes.Element)>(r9);

        $r6 = virtualinvoke $r5.<org.jsoup.parser.Tag: java.lang.String getName()>();

        $z4 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("br");

        if $z4 == 0 goto label3;

     label2:
        $r3 = r1.<org.jsoup.nodes.Element$1: java.lang.StringBuilder val$accum>;

        $z3 = staticinvoke <org.jsoup.nodes.TextNode: boolean lastCharIsWhitespace(java.lang.StringBuilder)>($r3);

        if $z3 != 0 goto label3;

        $r4 = r1.<org.jsoup.nodes.Element$1: java.lang.StringBuilder val$accum>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label3:
        return;
    }

    public void tail(org.jsoup.nodes.Node, int)
    {
        int i0;
        org.jsoup.nodes.Node r1;
        org.jsoup.nodes.Element$1 r0;

        r0 := @this: org.jsoup.nodes.Element$1;

        r1 := @parameter0: org.jsoup.nodes.Node;

        i0 := @parameter1: int;

        return;
    }
}
