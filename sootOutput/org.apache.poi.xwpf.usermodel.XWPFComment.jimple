public class org.apache.poi.xwpf.usermodel.XWPFComment extends java.lang.Object
{
    protected java.lang.String id;
    protected java.lang.String author;
    protected java.lang.StringBuffer text;

    public void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTComment, org.apache.poi.xwpf.usermodel.XWPFDocument)
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument r11;
        java.util.Iterator $r7;
        org.apache.poi.xwpf.usermodel.XWPFParagraph $r10;
        java.util.List $r6;
        java.lang.StringBuffer $r1, $r12;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP r9;
        org.apache.poi.xwpf.usermodel.XWPFComment r0;
        java.math.BigInteger $r3;
        java.lang.Object $r8;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTComment r2;
        java.lang.String $r4, $r5, $r13;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFComment;

        r2 := @parameter0: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTComment;

        r11 := @parameter1: org.apache.poi.xwpf.usermodel.XWPFDocument;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFComment: java.lang.StringBuffer text> = $r1;

        $r3 = interfaceinvoke r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTComment: java.math.BigInteger getId()>();

        $r4 = virtualinvoke $r3.<java.math.BigInteger: java.lang.String toString()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFComment: java.lang.String id> = $r4;

        $r5 = interfaceinvoke r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTComment: java.lang.String getAuthor()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFComment: java.lang.String author> = $r5;

        $r6 = interfaceinvoke r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTComment: java.util.List getPList()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP) $r8;

        $r10 = new org.apache.poi.xwpf.usermodel.XWPFParagraph;

        specialinvoke $r10.<org.apache.poi.xwpf.usermodel.XWPFParagraph: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP,org.apache.poi.xwpf.usermodel.IBody)>(r9, r11);

        $r12 = r0.<org.apache.poi.xwpf.usermodel.XWPFComment: java.lang.StringBuffer text>;

        $r13 = virtualinvoke $r10.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.lang.String getText()>();

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        goto label1;

     label2:
        return;
    }

    public java.lang.String getId()
    {
        org.apache.poi.xwpf.usermodel.XWPFComment r0;
        java.lang.String $r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFComment;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFComment: java.lang.String id>;

        return $r1;
    }

    public java.lang.String getAuthor()
    {
        org.apache.poi.xwpf.usermodel.XWPFComment r0;
        java.lang.String $r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFComment;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFComment: java.lang.String author>;

        return $r1;
    }

    public java.lang.String getText()
    {
        org.apache.poi.xwpf.usermodel.XWPFComment r0;
        java.lang.String $r2;
        java.lang.StringBuffer $r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFComment;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFComment: java.lang.StringBuffer text>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }
}
