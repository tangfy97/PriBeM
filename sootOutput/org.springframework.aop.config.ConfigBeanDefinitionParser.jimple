class org.springframework.aop.config.ConfigBeanDefinitionParser extends java.lang.Object implements org.springframework.beans.factory.xml.BeanDefinitionParser
{
    private static final java.lang.String ASPECT;
    private static final java.lang.String EXPRESSION;
    private static final java.lang.String ID;
    private static final java.lang.String POINTCUT;
    private static final java.lang.String ADVICE_BEAN_NAME;
    private static final java.lang.String ADVISOR;
    private static final java.lang.String ADVICE_REF;
    private static final java.lang.String POINTCUT_REF;
    private static final java.lang.String REF;
    private static final java.lang.String BEFORE;
    private static final java.lang.String DECLARE_PARENTS;
    private static final java.lang.String TYPE_PATTERN;
    private static final java.lang.String DEFAULT_IMPL;
    private static final java.lang.String DELEGATE_REF;
    private static final java.lang.String IMPLEMENT_INTERFACE;
    private static final java.lang.String AFTER;
    private static final java.lang.String AFTER_RETURNING_ELEMENT;
    private static final java.lang.String AFTER_THROWING_ELEMENT;
    private static final java.lang.String AROUND;
    private static final java.lang.String RETURNING;
    private static final java.lang.String RETURNING_PROPERTY;
    private static final java.lang.String THROWING;
    private static final java.lang.String THROWING_PROPERTY;
    private static final java.lang.String ARG_NAMES;
    private static final java.lang.String ARG_NAMES_PROPERTY;
    private static final java.lang.String ASPECT_NAME_PROPERTY;
    private static final java.lang.String DECLARATION_ORDER_PROPERTY;
    private static final java.lang.String ORDER_PROPERTY;
    private static final int METHOD_INDEX;
    private static final int POINTCUT_INDEX;
    private static final int ASPECT_INSTANCE_FACTORY_INDEX;
    private org.springframework.beans.factory.parsing.ParseState parseState;

    void <init>()
    {
        org.springframework.aop.config.ConfigBeanDefinitionParser r0;
        org.springframework.beans.factory.parsing.ParseState $r1;

        r0 := @this: org.springframework.aop.config.ConfigBeanDefinitionParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.springframework.beans.factory.parsing.ParseState;

        specialinvoke $r1.<org.springframework.beans.factory.parsing.ParseState: void <init>()>();

        r0.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.parsing.ParseState parseState> = $r1;

        return;
    }

    public org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
    {
        org.springframework.aop.config.ConfigBeanDefinitionParser r5;
        org.springframework.beans.factory.xml.ParserContext r3;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate $r10;
        java.lang.String $r2, $r11, $r12, $r13, $r14;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r7;
        org.springframework.beans.factory.parsing.CompositeComponentDefinition $r0;
        java.util.List $r6;
        org.w3c.dom.Element r1, r9;
        java.lang.Object $r4, $r8;

        r5 := @this: org.springframework.aop.config.ConfigBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        r3 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        $r0 = new org.springframework.beans.factory.parsing.CompositeComponentDefinition;

        $r2 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getTagName()>();

        $r4 = virtualinvoke r3.<org.springframework.beans.factory.xml.ParserContext: java.lang.Object extractSource(java.lang.Object)>(r1);

        specialinvoke $r0.<org.springframework.beans.factory.parsing.CompositeComponentDefinition: void <init>(java.lang.String,java.lang.Object)>($r2, $r4);

        virtualinvoke r3.<org.springframework.beans.factory.xml.ParserContext: void pushContainingComponent(org.springframework.beans.factory.parsing.CompositeComponentDefinition)>($r0);

        specialinvoke r5.<org.springframework.aop.config.ConfigBeanDefinitionParser: void configureAutoProxyCreator(org.springframework.beans.factory.xml.ParserContext,org.w3c.dom.Element)>(r3, r1);

        $r6 = staticinvoke <org.springframework.util.xml.DomUtils: java.util.List getChildElements(org.w3c.dom.Element)>(r1);

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

        goto label4;

     label1:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.w3c.dom.Element) $r8;

        $r10 = virtualinvoke r3.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate getDelegate()>();

        $r11 = virtualinvoke $r10.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String getLocalName(org.w3c.dom.Node)>(r9);

        $r12 = "pointcut";

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label2;

        specialinvoke r5.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.support.AbstractBeanDefinition parsePointcut(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)>(r9, r3);

        goto label4;

     label2:
        $r13 = "advisor";

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z1 == 0 goto label3;

        specialinvoke r5.<org.springframework.aop.config.ConfigBeanDefinitionParser: void parseAdvisor(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)>(r9, r3);

        goto label4;

     label3:
        $r14 = "aspect";

        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z2 == 0 goto label4;

        specialinvoke r5.<org.springframework.aop.config.ConfigBeanDefinitionParser: void parseAspect(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)>(r9, r3);

     label4:
        $z3 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label1;

        virtualinvoke r3.<org.springframework.beans.factory.xml.ParserContext: void popAndRegisterContainingComponent()>();

        return null;
    }

    private void configureAutoProxyCreator(org.springframework.beans.factory.xml.ParserContext, org.w3c.dom.Element)
    {
        org.w3c.dom.Element r1;
        org.springframework.aop.config.ConfigBeanDefinitionParser r2;
        org.springframework.beans.factory.xml.ParserContext r0;

        r2 := @this: org.springframework.aop.config.ConfigBeanDefinitionParser;

        r0 := @parameter0: org.springframework.beans.factory.xml.ParserContext;

        r1 := @parameter1: org.w3c.dom.Element;

        staticinvoke <org.springframework.aop.config.AopNamespaceUtils: void registerAspectJAutoProxyCreatorIfNecessary(org.springframework.beans.factory.xml.ParserContext,org.w3c.dom.Element)>(r0, r1);

        return;
    }

    private void parseAdvisor(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
    {
        java.lang.Throwable $r17;
        org.springframework.beans.factory.xml.XmlReaderContext $r7;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r3;
        org.springframework.aop.config.ConfigBeanDefinitionParser r0;
        org.springframework.beans.factory.support.BeanDefinitionRegistry $r16;
        org.springframework.beans.factory.xml.ParserContext r2;
        org.springframework.beans.factory.config.BeanDefinition $r15;
        java.lang.String $r4, $r11, r19;
        org.springframework.aop.config.AdvisorEntry $r5;
        boolean $z0, $z1, $z2;
        org.springframework.aop.config.AdvisorComponentDefinition $r12, $r14;
        org.springframework.beans.factory.config.RuntimeBeanReference $r10;
        org.springframework.beans.MutablePropertyValues $r9, $r13;
        org.springframework.beans.factory.parsing.ParseState $r6, $r18, $r20;
        org.w3c.dom.Element r1;
        java.lang.Object $r8;

        r0 := @this: org.springframework.aop.config.ConfigBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        $r3 = specialinvoke r0.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.support.AbstractBeanDefinition createAdvisorBeanDefinition(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)>(r1, r2);

        $r4 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("id");

     label1:
        $r6 = r0.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.parsing.ParseState parseState>;

        $r5 = new org.springframework.aop.config.AdvisorEntry;

        specialinvoke $r5.<org.springframework.aop.config.AdvisorEntry: void <init>(java.lang.String)>($r4);

        virtualinvoke $r6.<org.springframework.beans.factory.parsing.ParseState: void push(org.springframework.beans.factory.parsing.ParseState$Entry)>($r5);

        r19 = $r4;

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>($r4);

        if $z0 == 0 goto label2;

        $r16 = virtualinvoke r2.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        interfaceinvoke $r16.<org.springframework.beans.factory.support.BeanDefinitionRegistry: void registerBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>($r4, $r3);

        goto label3;

     label2:
        $r7 = virtualinvoke r2.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.XmlReaderContext getReaderContext()>();

        r19 = virtualinvoke $r7.<org.springframework.beans.factory.xml.XmlReaderContext: java.lang.String registerWithGeneratedName(org.springframework.beans.factory.config.BeanDefinition)>($r3);

     label3:
        $r8 = specialinvoke r0.<org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.Object parsePointcutProperty(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)>(r1, r2);

        $z1 = $r8 instanceof org.springframework.beans.factory.config.BeanDefinition;

        if $z1 == 0 goto label4;

        $r13 = virtualinvoke $r3.<org.springframework.beans.factory.support.AbstractBeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        virtualinvoke $r13.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>("pointcut", $r8);

        $r14 = new org.springframework.aop.config.AdvisorComponentDefinition;

        $r15 = (org.springframework.beans.factory.config.BeanDefinition) $r8;

        specialinvoke $r14.<org.springframework.aop.config.AdvisorComponentDefinition: void <init>(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.config.BeanDefinition)>(r19, $r3, $r15);

        virtualinvoke r2.<org.springframework.beans.factory.xml.ParserContext: void registerComponent(org.springframework.beans.factory.parsing.ComponentDefinition)>($r14);

        goto label6;

     label4:
        $z2 = $r8 instanceof java.lang.String;

        if $z2 == 0 goto label6;

        $r9 = virtualinvoke $r3.<org.springframework.beans.factory.support.AbstractBeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        $r10 = new org.springframework.beans.factory.config.RuntimeBeanReference;

        $r11 = (java.lang.String) $r8;

        specialinvoke $r10.<org.springframework.beans.factory.config.RuntimeBeanReference: void <init>(java.lang.String)>($r11);

        virtualinvoke $r9.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>("pointcut", $r10);

        $r12 = new org.springframework.aop.config.AdvisorComponentDefinition;

        specialinvoke $r12.<org.springframework.aop.config.AdvisorComponentDefinition: void <init>(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>(r19, $r3);

        virtualinvoke r2.<org.springframework.beans.factory.xml.ParserContext: void registerComponent(org.springframework.beans.factory.parsing.ComponentDefinition)>($r12);

        goto label6;

     label5:
        $r17 := @caughtexception;

        $r18 = r0.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.parsing.ParseState parseState>;

        virtualinvoke $r18.<org.springframework.beans.factory.parsing.ParseState: void pop()>();

        throw $r17;

     label6:
        $r20 = r0.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.parsing.ParseState parseState>;

        virtualinvoke $r20.<org.springframework.beans.factory.parsing.ParseState: void pop()>();

        return;

        catch java.lang.Throwable from label1 to label5 with label5;
    }

    private org.springframework.beans.factory.support.AbstractBeanDefinition createAdvisorBeanDefinition(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
    {
        org.springframework.beans.factory.support.RootBeanDefinition $r0;
        org.springframework.beans.factory.xml.XmlReaderContext $r9;
        org.springframework.beans.MutablePropertyValues $r5, $r7;
        org.springframework.aop.config.ConfigBeanDefinitionParser r10;
        org.springframework.beans.factory.parsing.ParseState $r11, $r12;
        org.w3c.dom.Element r2;
        org.springframework.beans.factory.config.RuntimeBeanNameReference $r6;
        org.springframework.beans.factory.xml.ParserContext r1;
        java.lang.Object $r3;
        java.lang.String $r4, $r8;
        boolean $z0, $z1;

        r10 := @this: org.springframework.aop.config.ConfigBeanDefinitionParser;

        r2 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        $r0 = new org.springframework.beans.factory.support.RootBeanDefinition;

        specialinvoke $r0.<org.springframework.beans.factory.support.RootBeanDefinition: void <init>(java.lang.Class)>(class "Lorg/springframework/aop/support/DefaultBeanFactoryPointcutAdvisor;");

        $r3 = virtualinvoke r1.<org.springframework.beans.factory.xml.ParserContext: java.lang.Object extractSource(java.lang.Object)>(r2);

        virtualinvoke $r0.<org.springframework.beans.factory.support.RootBeanDefinition: void setSource(java.lang.Object)>($r3);

        $r4 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("advice-ref");

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>($r4);

        if $z0 != 0 goto label1;

        $r9 = virtualinvoke r1.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.XmlReaderContext getReaderContext()>();

        $r11 = r10.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.parsing.ParseState parseState>;

        $r12 = virtualinvoke $r11.<org.springframework.beans.factory.parsing.ParseState: org.springframework.beans.factory.parsing.ParseState snapshot()>();

        virtualinvoke $r9.<org.springframework.beans.factory.xml.XmlReaderContext: void error(java.lang.String,java.lang.Object,org.springframework.beans.factory.parsing.ParseState)>("\'advice-ref\' attribute contains empty value.", r2, $r12);

        goto label2;

     label1:
        $r5 = virtualinvoke $r0.<org.springframework.beans.factory.support.RootBeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        $r6 = new org.springframework.beans.factory.config.RuntimeBeanNameReference;

        specialinvoke $r6.<org.springframework.beans.factory.config.RuntimeBeanNameReference: void <init>(java.lang.String)>($r4);

        virtualinvoke $r5.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>("adviceBeanName", $r6);

     label2:
        $z1 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("order");

        if $z1 == 0 goto label3;

        $r7 = virtualinvoke $r0.<org.springframework.beans.factory.support.RootBeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        $r8 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("order");

        virtualinvoke $r7.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>("order", $r8);

     label3:
        return $r0;
    }

    private void parseAspect(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
    {
        org.springframework.beans.factory.xml.XmlReaderContext $r17;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r11, $r15;
        boolean $z0, $z1, $z2, z3;
        org.springframework.aop.config.AspectEntry $r4;
        org.springframework.beans.factory.config.RuntimeBeanReference $r16;
        java.util.List $r8, $r22;
        java.lang.Throwable $r26;
        org.springframework.aop.config.ConfigBeanDefinitionParser r3;
        java.util.ArrayList $r6, $r7;
        org.springframework.beans.factory.xml.ParserContext r10;
        org.w3c.dom.Node $r13;
        int $i0, i1, i2, $i3;
        java.lang.String $r1, $r2;
        org.w3c.dom.NodeList $r12;
        java.util.Iterator $r23;
        org.springframework.beans.factory.parsing.ParseState $r5, $r18, $r19, $r20, $r25, $r27;
        org.springframework.aop.config.AspectComponentDefinition $r21;
        org.w3c.dom.Element r0, $r14, r28, r29;
        java.lang.Object $r9, $r24;

        r3 := @this: org.springframework.aop.config.ConfigBeanDefinitionParser;

        r0 := @parameter0: org.w3c.dom.Element;

        r10 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("id");

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("ref");

     label01:
        $r5 = r3.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.parsing.ParseState parseState>;

        $r4 = new org.springframework.aop.config.AspectEntry;

        specialinvoke $r4.<org.springframework.aop.config.AspectEntry: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        virtualinvoke $r5.<org.springframework.beans.factory.parsing.ParseState: void push(org.springframework.beans.factory.parsing.ParseState$Entry)>($r4);

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = staticinvoke <org.springframework.util.xml.DomUtils: java.util.List getChildElementsByTagName(org.w3c.dom.Element,java.lang.String)>(r0, "declare-parents");

        i1 = 0;

        goto label03;

     label02:
        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i1);

        r28 = (org.w3c.dom.Element) $r9;

        $r11 = specialinvoke r3.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.support.AbstractBeanDefinition parseDeclareParents(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)>(r28, r10);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r11);

        i1 = i1 + 1;

     label03:
        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        if i1 < $i0 goto label02;

        $r12 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        z3 = 0;

        i2 = 0;

        goto label09;

     label04:
        $r13 = interfaceinvoke $r12.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i2);

        $z0 = specialinvoke r3.<org.springframework.aop.config.ConfigBeanDefinitionParser: boolean isAdviceNode(org.w3c.dom.Node,org.springframework.beans.factory.xml.ParserContext)>($r13, r10);

        if $z0 == 0 goto label08;

        if z3 != 0 goto label07;

        z3 = 1;

        $z1 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>($r2);

        if $z1 != 0 goto label06;

        $r17 = virtualinvoke r10.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.XmlReaderContext getReaderContext()>();

        $r18 = r3.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.parsing.ParseState parseState>;

        $r19 = virtualinvoke $r18.<org.springframework.beans.factory.parsing.ParseState: org.springframework.beans.factory.parsing.ParseState snapshot()>();

        virtualinvoke $r17.<org.springframework.beans.factory.xml.XmlReaderContext: void error(java.lang.String,java.lang.Object,org.springframework.beans.factory.parsing.ParseState)>("<aspect> tag needs aspect bean reference via \'ref\' attribute when declaring advices.", r0, $r19);

     label05:
        $r20 = r3.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.parsing.ParseState parseState>;

        virtualinvoke $r20.<org.springframework.beans.factory.parsing.ParseState: void pop()>();

        return;

     label06:
        $r16 = new org.springframework.beans.factory.config.RuntimeBeanReference;

        specialinvoke $r16.<org.springframework.beans.factory.config.RuntimeBeanReference: void <init>(java.lang.String)>($r2);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r16);

     label07:
        $r14 = (org.w3c.dom.Element) $r13;

        $r15 = specialinvoke r3.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.support.AbstractBeanDefinition parseAdvice(java.lang.String,int,org.w3c.dom.Element,org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.util.List,java.util.List)>($r2, i2, r0, $r14, r10, $r6, $r7);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r15);

     label08:
        i2 = i2 + 1;

     label09:
        $i3 = interfaceinvoke $r12.<org.w3c.dom.NodeList: int getLength()>();

        if i2 < $i3 goto label04;

        $r21 = specialinvoke r3.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.aop.config.AspectComponentDefinition createAspectComponentDefinition(org.w3c.dom.Element,java.lang.String,java.util.List,java.util.List,org.springframework.beans.factory.xml.ParserContext)>(r0, $r1, $r6, $r7, r10);

        virtualinvoke r10.<org.springframework.beans.factory.xml.ParserContext: void pushContainingComponent(org.springframework.beans.factory.parsing.CompositeComponentDefinition)>($r21);

        $r22 = staticinvoke <org.springframework.util.xml.DomUtils: java.util.List getChildElementsByTagName(org.w3c.dom.Element,java.lang.String)>(r0, "pointcut");

        $r23 = interfaceinvoke $r22.<java.util.List: java.util.Iterator iterator()>();

        goto label11;

     label10:
        $r24 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        r29 = (org.w3c.dom.Element) $r24;

        specialinvoke r3.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.support.AbstractBeanDefinition parsePointcut(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)>(r29, r10);

     label11:
        $z2 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label10;

        virtualinvoke r10.<org.springframework.beans.factory.xml.ParserContext: void popAndRegisterContainingComponent()>();

        goto label13;

     label12:
        $r26 := @caughtexception;

        $r27 = r3.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.parsing.ParseState parseState>;

        virtualinvoke $r27.<org.springframework.beans.factory.parsing.ParseState: void pop()>();

        throw $r26;

     label13:
        $r25 = r3.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.parsing.ParseState parseState>;

        virtualinvoke $r25.<org.springframework.beans.factory.parsing.ParseState: void pop()>();

        return;

        catch java.lang.Throwable from label01 to label05 with label12;
        catch java.lang.Throwable from label06 to label12 with label12;
    }

    private org.springframework.aop.config.AspectComponentDefinition createAspectComponentDefinition(org.w3c.dom.Element, java.lang.String, java.util.List, java.util.List, org.springframework.beans.factory.xml.ParserContext)
    {
        java.lang.Object[] $r2, $r6;
        org.springframework.aop.config.ConfigBeanDefinitionParser r13;
        org.springframework.beans.factory.xml.ParserContext r8;
        int $i0, $i1;
        java.lang.String r12;
        org.springframework.beans.factory.config.BeanReference[] $r5, r7;
        org.springframework.aop.config.AspectComponentDefinition $r11;
        java.util.List r0, r4;
        org.w3c.dom.Element r9;
        org.springframework.beans.factory.config.BeanDefinition[] $r1, r3;
        java.lang.Object $r10;

        r13 := @this: org.springframework.aop.config.ConfigBeanDefinitionParser;

        r9 := @parameter0: org.w3c.dom.Element;

        r12 := @parameter1: java.lang.String;

        r0 := @parameter2: java.util.List;

        r4 := @parameter3: java.util.List;

        r8 := @parameter4: org.springframework.beans.factory.xml.ParserContext;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $r1 = newarray (org.springframework.beans.factory.config.BeanDefinition)[$i0];

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        r3 = (org.springframework.beans.factory.config.BeanDefinition[]) $r2;

        $i1 = interfaceinvoke r4.<java.util.List: int size()>();

        $r5 = newarray (org.springframework.beans.factory.config.BeanReference)[$i1];

        $r6 = interfaceinvoke r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        r7 = (org.springframework.beans.factory.config.BeanReference[]) $r6;

        $r10 = virtualinvoke r8.<org.springframework.beans.factory.xml.ParserContext: java.lang.Object extractSource(java.lang.Object)>(r9);

        $r11 = new org.springframework.aop.config.AspectComponentDefinition;

        specialinvoke $r11.<org.springframework.aop.config.AspectComponentDefinition: void <init>(java.lang.String,org.springframework.beans.factory.config.BeanDefinition[],org.springframework.beans.factory.config.BeanReference[],java.lang.Object)>(r12, r3, r7, $r10);

        return $r11;
    }

    private boolean isAdviceNode(org.w3c.dom.Node, org.springframework.beans.factory.xml.ParserContext)
    {
        org.springframework.aop.config.ConfigBeanDefinitionParser r9;
        org.w3c.dom.Node r0;
        org.springframework.beans.factory.xml.ParserContext r1;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate $r2;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r9 := @this: org.springframework.aop.config.ConfigBeanDefinitionParser;

        r0 := @parameter0: org.w3c.dom.Node;

        r1 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        $z0 = r0 instanceof org.w3c.dom.Element;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r1.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate getDelegate()>();

        $r3 = virtualinvoke $r2.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String getLocalName(org.w3c.dom.Node)>(r0);

        $r4 = "before";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

        $r5 = "after";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z2 != 0 goto label2;

        $r6 = "after-returning";

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z3 != 0 goto label2;

        $r7 = "after-throwing";

        $z4 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z4 != 0 goto label2;

        $r8 = "around";

        $z5 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z5 != 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    private org.springframework.beans.factory.support.AbstractBeanDefinition parseDeclareParents(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
    {
        org.springframework.beans.factory.support.BeanDefinitionBuilder $r0;
        org.springframework.beans.factory.xml.XmlReaderContext $r7, $r13;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r11;
        org.springframework.aop.config.ConfigBeanDefinitionParser r8;
        org.springframework.beans.factory.xml.ParserContext r6;
        java.lang.String $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3;
        org.springframework.beans.factory.parsing.ParseState $r9, $r10;
        org.w3c.dom.Element r1;
        java.lang.Object $r12;

        r8 := @this: org.springframework.aop.config.ConfigBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        r6 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        $r0 = staticinvoke <org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder rootBeanDefinition(java.lang.Class)>(class "Lorg/springframework/aop/aspectj/DeclareParentsAdvisor;");

        $r2 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("implement-interface");

        virtualinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addConstructorArgValue(java.lang.Object)>($r2);

        $r3 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("types-matching");

        virtualinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addConstructorArgValue(java.lang.Object)>($r3);

        $r4 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("default-impl");

        $r5 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("delegate-ref");

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>($r4);

        if $z0 == 0 goto label1;

        $z3 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>($r5);

        if $z3 != 0 goto label1;

        virtualinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addConstructorArgValue(java.lang.Object)>($r4);

        goto label3;

     label1:
        $z1 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>($r5);

        if $z1 == 0 goto label2;

        $z2 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>($r4);

        if $z2 != 0 goto label2;

        virtualinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addConstructorArgReference(java.lang.String)>($r5);

        goto label3;

     label2:
        $r7 = virtualinvoke r6.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.XmlReaderContext getReaderContext()>();

        $r9 = r8.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.parsing.ParseState parseState>;

        $r10 = virtualinvoke $r9.<org.springframework.beans.factory.parsing.ParseState: org.springframework.beans.factory.parsing.ParseState snapshot()>();

        virtualinvoke $r7.<org.springframework.beans.factory.xml.XmlReaderContext: void error(java.lang.String,java.lang.Object,org.springframework.beans.factory.parsing.ParseState)>("Exactly one of the default-impl or delegate-ref attributes must be specified", r1, $r10);

     label3:
        $r11 = virtualinvoke $r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getBeanDefinition()>();

        $r12 = virtualinvoke r6.<org.springframework.beans.factory.xml.ParserContext: java.lang.Object extractSource(java.lang.Object)>(r1);

        virtualinvoke $r11.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setSource(java.lang.Object)>($r12);

        $r13 = virtualinvoke r6.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.XmlReaderContext getReaderContext()>();

        virtualinvoke $r13.<org.springframework.beans.factory.xml.XmlReaderContext: java.lang.String registerWithGeneratedName(org.springframework.beans.factory.config.BeanDefinition)>($r11);

        return $r11;
    }

    private org.springframework.beans.factory.support.AbstractBeanDefinition parseAdvice(java.lang.String, int, org.w3c.dom.Element, org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, java.util.List, java.util.List)
    {
        org.springframework.beans.factory.support.RootBeanDefinition $r7, $r12, $r17;
        java.lang.Throwable $r25;
        org.springframework.beans.factory.xml.XmlReaderContext $r21;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r16;
        org.springframework.aop.config.ConfigBeanDefinitionParser r0;
        org.springframework.beans.factory.config.ConstructorArgumentValues $r19;
        org.springframework.beans.factory.xml.ParserContext r2;
        int i0;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate $r4;
        java.lang.String $r6, r9, $r11, $r24;
        boolean $z0;
        org.springframework.beans.MutablePropertyValues $r8, $r10, $r13, $r23;
        org.springframework.beans.factory.parsing.ParseState $r3, $r22, $r26;
        java.util.List r14, r15;
        org.w3c.dom.Element r5, r20;
        org.springframework.aop.config.AdviceEntry $r1;
        java.lang.Object $r18;

        r0 := @this: org.springframework.aop.config.ConfigBeanDefinitionParser;

        r9 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r20 := @parameter2: org.w3c.dom.Element;

        r5 := @parameter3: org.w3c.dom.Element;

        r2 := @parameter4: org.springframework.beans.factory.xml.ParserContext;

        r14 := @parameter5: java.util.List;

        r15 := @parameter6: java.util.List;

     label1:
        $r3 = r0.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.parsing.ParseState parseState>;

        $r1 = new org.springframework.aop.config.AdviceEntry;

        $r4 = virtualinvoke r2.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate getDelegate()>();

        $r6 = virtualinvoke $r4.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String getLocalName(org.w3c.dom.Node)>(r5);

        specialinvoke $r1.<org.springframework.aop.config.AdviceEntry: void <init>(java.lang.String)>($r6);

        virtualinvoke $r3.<org.springframework.beans.factory.parsing.ParseState: void push(org.springframework.beans.factory.parsing.ParseState$Entry)>($r1);

        $r7 = new org.springframework.beans.factory.support.RootBeanDefinition;

        specialinvoke $r7.<org.springframework.beans.factory.support.RootBeanDefinition: void <init>(java.lang.Class)>(class "Lorg/springframework/aop/config/MethodLocatingFactoryBean;");

        $r8 = virtualinvoke $r7.<org.springframework.beans.factory.support.RootBeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        virtualinvoke $r8.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>("targetBeanName", r9);

        $r10 = virtualinvoke $r7.<org.springframework.beans.factory.support.RootBeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        $r11 = interfaceinvoke r5.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("method");

        virtualinvoke $r10.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>("methodName", $r11);

        virtualinvoke $r7.<org.springframework.beans.factory.support.RootBeanDefinition: void setSynthetic(boolean)>(1);

        $r12 = new org.springframework.beans.factory.support.RootBeanDefinition;

        specialinvoke $r12.<org.springframework.beans.factory.support.RootBeanDefinition: void <init>(java.lang.Class)>(class "Lorg/springframework/aop/config/SimpleBeanFactoryAwareAspectInstanceFactory;");

        $r13 = virtualinvoke $r12.<org.springframework.beans.factory.support.RootBeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        virtualinvoke $r13.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>("aspectBeanName", r9);

        virtualinvoke $r12.<org.springframework.beans.factory.support.RootBeanDefinition: void setSynthetic(boolean)>(1);

        $r16 = specialinvoke r0.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.support.AbstractBeanDefinition createAdviceDefinition(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.lang.String,int,org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.support.RootBeanDefinition,java.util.List,java.util.List)>(r5, r2, r9, i0, $r7, $r12, r14, r15);

        $r17 = new org.springframework.beans.factory.support.RootBeanDefinition;

        specialinvoke $r17.<org.springframework.beans.factory.support.RootBeanDefinition: void <init>(java.lang.Class)>(class "Lorg/springframework/aop/aspectj/AspectJPointcutAdvisor;");

        $r18 = virtualinvoke r2.<org.springframework.beans.factory.xml.ParserContext: java.lang.Object extractSource(java.lang.Object)>(r5);

        virtualinvoke $r17.<org.springframework.beans.factory.support.RootBeanDefinition: void setSource(java.lang.Object)>($r18);

        $r19 = virtualinvoke $r17.<org.springframework.beans.factory.support.RootBeanDefinition: org.springframework.beans.factory.config.ConstructorArgumentValues getConstructorArgumentValues()>();

        virtualinvoke $r19.<org.springframework.beans.factory.config.ConstructorArgumentValues: void addGenericArgumentValue(java.lang.Object)>($r16);

        $z0 = interfaceinvoke r20.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("order");

        if $z0 == 0 goto label2;

        $r23 = virtualinvoke $r17.<org.springframework.beans.factory.support.RootBeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        $r24 = interfaceinvoke r20.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("order");

        virtualinvoke $r23.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>("order", $r24);

     label2:
        $r21 = virtualinvoke r2.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.XmlReaderContext getReaderContext()>();

        virtualinvoke $r21.<org.springframework.beans.factory.xml.XmlReaderContext: java.lang.String registerWithGeneratedName(org.springframework.beans.factory.config.BeanDefinition)>($r17);

     label3:
        $r22 = r0.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.parsing.ParseState parseState>;

        virtualinvoke $r22.<org.springframework.beans.factory.parsing.ParseState: void pop()>();

        return $r17;

     label4:
        $r25 := @caughtexception;

        $r26 = r0.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.parsing.ParseState parseState>;

        virtualinvoke $r26.<org.springframework.beans.factory.parsing.ParseState: void pop()>();

        throw $r25;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    private org.springframework.beans.factory.support.AbstractBeanDefinition createAdviceDefinition(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, java.lang.String, int, org.springframework.beans.factory.support.RootBeanDefinition, org.springframework.beans.factory.support.RootBeanDefinition, java.util.List, java.util.List)
    {
        org.springframework.beans.factory.support.RootBeanDefinition $r0, r11, r13;
        org.springframework.aop.config.ConfigBeanDefinitionParser r1;
        java.lang.Integer $r9;
        org.springframework.beans.factory.config.ConstructorArgumentValues $r10;
        org.springframework.beans.factory.xml.ParserContext r3;
        int i0;
        org.springframework.beans.factory.config.BeanDefinition $r18;
        java.lang.String r7, $r15, $r20, $r22, $r24;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.springframework.beans.factory.config.RuntimeBeanReference $r14;
        org.springframework.beans.MutablePropertyValues $r6, $r8, $r19, $r21, $r23;
        java.util.List r16, r17;
        org.w3c.dom.Element r2;
        java.lang.Class $r4;
        java.lang.Object $r5, $r12;

        r1 := @this: org.springframework.aop.config.ConfigBeanDefinitionParser;

        r2 := @parameter0: org.w3c.dom.Element;

        r3 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        r7 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r11 := @parameter4: org.springframework.beans.factory.support.RootBeanDefinition;

        r13 := @parameter5: org.springframework.beans.factory.support.RootBeanDefinition;

        r17 := @parameter6: java.util.List;

        r16 := @parameter7: java.util.List;

        $r0 = new org.springframework.beans.factory.support.RootBeanDefinition;

        $r4 = specialinvoke r1.<org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.Class getAdviceClass(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)>(r2, r3);

        specialinvoke $r0.<org.springframework.beans.factory.support.RootBeanDefinition: void <init>(java.lang.Class)>($r4);

        $r5 = virtualinvoke r3.<org.springframework.beans.factory.xml.ParserContext: java.lang.Object extractSource(java.lang.Object)>(r2);

        virtualinvoke $r0.<org.springframework.beans.factory.support.RootBeanDefinition: void setSource(java.lang.Object)>($r5);

        $r6 = virtualinvoke $r0.<org.springframework.beans.factory.support.RootBeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        virtualinvoke $r6.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>("aspectName", r7);

        $r8 = virtualinvoke $r0.<org.springframework.beans.factory.support.RootBeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r8.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>("declarationOrder", $r9);

        $z0 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("returning");

        if $z0 == 0 goto label1;

        $r23 = virtualinvoke $r0.<org.springframework.beans.factory.support.RootBeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        $r24 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("returning");

        virtualinvoke $r23.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>("returningName", $r24);

     label1:
        $z1 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("throwing");

        if $z1 == 0 goto label2;

        $r21 = virtualinvoke $r0.<org.springframework.beans.factory.support.RootBeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        $r22 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("throwing");

        virtualinvoke $r21.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>("throwingName", $r22);

     label2:
        $z2 = interfaceinvoke r2.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("arg-names");

        if $z2 == 0 goto label3;

        $r19 = virtualinvoke $r0.<org.springframework.beans.factory.support.RootBeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        $r20 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("arg-names");

        virtualinvoke $r19.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>("argumentNames", $r20);

     label3:
        $r10 = virtualinvoke $r0.<org.springframework.beans.factory.support.RootBeanDefinition: org.springframework.beans.factory.config.ConstructorArgumentValues getConstructorArgumentValues()>();

        virtualinvoke $r10.<org.springframework.beans.factory.config.ConstructorArgumentValues: void addIndexedArgumentValue(int,java.lang.Object)>(0, r11);

        $r12 = specialinvoke r1.<org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.Object parsePointcutProperty(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)>(r2, r3);

        $z3 = $r12 instanceof org.springframework.beans.factory.config.BeanDefinition;

        if $z3 == 0 goto label4;

        virtualinvoke $r10.<org.springframework.beans.factory.config.ConstructorArgumentValues: void addIndexedArgumentValue(int,java.lang.Object)>(1, $r12);

        $r18 = (org.springframework.beans.factory.config.BeanDefinition) $r12;

        interfaceinvoke r17.<java.util.List: boolean add(java.lang.Object)>($r18);

        goto label5;

     label4:
        $z4 = $r12 instanceof java.lang.String;

        if $z4 == 0 goto label5;

        $r14 = new org.springframework.beans.factory.config.RuntimeBeanReference;

        $r15 = (java.lang.String) $r12;

        specialinvoke $r14.<org.springframework.beans.factory.config.RuntimeBeanReference: void <init>(java.lang.String)>($r15);

        virtualinvoke $r10.<org.springframework.beans.factory.config.ConstructorArgumentValues: void addIndexedArgumentValue(int,java.lang.Object)>(1, $r14);

        interfaceinvoke r16.<java.util.List: boolean add(java.lang.Object)>($r14);

     label5:
        virtualinvoke $r10.<org.springframework.beans.factory.config.ConstructorArgumentValues: void addIndexedArgumentValue(int,java.lang.Object)>(2, r13);

        return $r0;
    }

    private java.lang.Class getAdviceClass(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
    {
        org.springframework.aop.config.ConfigBeanDefinitionParser r14;
        org.springframework.beans.factory.xml.ParserContext r0;
        org.springframework.beans.factory.xml.BeanDefinitionParserDelegate $r1;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r13;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.IllegalArgumentException $r9;
        org.w3c.dom.Element r2;
        java.lang.StringBuilder $r10, $r11, $r12;

        r14 := @this: org.springframework.aop.config.ConfigBeanDefinitionParser;

        r2 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        $r1 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate getDelegate()>();

        $r3 = virtualinvoke $r1.<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String getLocalName(org.w3c.dom.Node)>(r2);

        $r4 = "before";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        return class "Lorg/springframework/aop/aspectj/AspectJMethodBeforeAdvice;";

     label1:
        $r5 = "after";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        return class "Lorg/springframework/aop/aspectj/AspectJAfterAdvice;";

     label2:
        $r6 = "after-returning";

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z2 == 0 goto label3;

        return class "Lorg/springframework/aop/aspectj/AspectJAfterReturningAdvice;";

     label3:
        $r7 = "after-throwing";

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z3 == 0 goto label4;

        return class "Lorg/springframework/aop/aspectj/AspectJAfterThrowingAdvice;";

     label4:
        $r8 = "around";

        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z4 == 0 goto label5;

        return class "Lorg/springframework/aop/aspectj/AspectJAroundAdvice;";

     label5:
        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unknown advice kind [");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r9;
    }

    private org.springframework.beans.factory.support.AbstractBeanDefinition parsePointcut(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
    {
        java.lang.Throwable $r13;
        org.springframework.beans.factory.xml.XmlReaderContext $r9;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r6;
        org.springframework.aop.config.ConfigBeanDefinitionParser r3;
        org.springframework.beans.factory.support.BeanDefinitionRegistry $r12;
        org.springframework.beans.factory.xml.ParserContext r7;
        java.lang.String $r1, $r2, r15;
        org.springframework.aop.config.PointcutEntry $r4;
        boolean $z0;
        org.springframework.beans.factory.parsing.ParseState $r5, $r11, $r14;
        org.springframework.aop.config.PointcutComponentDefinition $r10;
        org.w3c.dom.Element r0;
        java.lang.Object $r8;

        r3 := @this: org.springframework.aop.config.ConfigBeanDefinitionParser;

        r0 := @parameter0: org.w3c.dom.Element;

        r7 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("id");

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("expression");

     label1:
        $r5 = r3.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.parsing.ParseState parseState>;

        $r4 = new org.springframework.aop.config.PointcutEntry;

        specialinvoke $r4.<org.springframework.aop.config.PointcutEntry: void <init>(java.lang.String)>($r1);

        virtualinvoke $r5.<org.springframework.beans.factory.parsing.ParseState: void push(org.springframework.beans.factory.parsing.ParseState$Entry)>($r4);

        $r6 = virtualinvoke r3.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.support.AbstractBeanDefinition createPointcutDefinition(java.lang.String)>($r2);

        $r8 = virtualinvoke r7.<org.springframework.beans.factory.xml.ParserContext: java.lang.Object extractSource(java.lang.Object)>(r0);

        virtualinvoke $r6.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setSource(java.lang.Object)>($r8);

        r15 = $r1;

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        $r12 = virtualinvoke r7.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        interfaceinvoke $r12.<org.springframework.beans.factory.support.BeanDefinitionRegistry: void registerBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>($r1, $r6);

        goto label3;

     label2:
        $r9 = virtualinvoke r7.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.XmlReaderContext getReaderContext()>();

        r15 = virtualinvoke $r9.<org.springframework.beans.factory.xml.XmlReaderContext: java.lang.String registerWithGeneratedName(org.springframework.beans.factory.config.BeanDefinition)>($r6);

     label3:
        $r10 = new org.springframework.aop.config.PointcutComponentDefinition;

        specialinvoke $r10.<org.springframework.aop.config.PointcutComponentDefinition: void <init>(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,java.lang.String)>(r15, $r6, $r2);

        virtualinvoke r7.<org.springframework.beans.factory.xml.ParserContext: void registerComponent(org.springframework.beans.factory.parsing.ComponentDefinition)>($r10);

        goto label5;

     label4:
        $r13 := @caughtexception;

        $r14 = r3.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.parsing.ParseState parseState>;

        virtualinvoke $r14.<org.springframework.beans.factory.parsing.ParseState: void pop()>();

        throw $r13;

     label5:
        $r11 = r3.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.parsing.ParseState parseState>;

        virtualinvoke $r11.<org.springframework.beans.factory.parsing.ParseState: void pop()>();

        return $r6;

        catch java.lang.Throwable from label1 to label4 with label4;
    }

    private java.lang.Object parsePointcutProperty(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
    {
        org.springframework.beans.factory.xml.XmlReaderContext $r2, $r7, $r13;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r11;
        org.springframework.aop.config.ConfigBeanDefinitionParser r3;
        org.springframework.beans.factory.xml.ParserContext r1;
        java.lang.String $r6, $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.springframework.beans.factory.parsing.ParseState $r4, $r5, $r8, $r9, $r14, $r15;
        org.w3c.dom.Element r0;
        java.lang.Object $r12;

        r3 := @this: org.springframework.aop.config.ConfigBeanDefinitionParser;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        $z0 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("pointcut");

        if $z0 == 0 goto label1;

        $z4 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("pointcut-ref");

        if $z4 == 0 goto label1;

        $r13 = virtualinvoke r1.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.XmlReaderContext getReaderContext()>();

        $r14 = r3.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.parsing.ParseState parseState>;

        $r15 = virtualinvoke $r14.<org.springframework.beans.factory.parsing.ParseState: org.springframework.beans.factory.parsing.ParseState snapshot()>();

        virtualinvoke $r13.<org.springframework.beans.factory.xml.XmlReaderContext: void error(java.lang.String,java.lang.Object,org.springframework.beans.factory.parsing.ParseState)>("Cannot define both \'pointcut\' and \'pointcut-ref\' on <advisor> tag.", r0, $r15);

        return null;

     label1:
        $z1 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("pointcut");

        if $z1 == 0 goto label2;

        $r10 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("pointcut");

        $r11 = virtualinvoke r3.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.support.AbstractBeanDefinition createPointcutDefinition(java.lang.String)>($r10);

        $r12 = virtualinvoke r1.<org.springframework.beans.factory.xml.ParserContext: java.lang.Object extractSource(java.lang.Object)>(r0);

        virtualinvoke $r11.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setSource(java.lang.Object)>($r12);

        return $r11;

     label2:
        $z2 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("pointcut-ref");

        if $z2 == 0 goto label4;

        $r6 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("pointcut-ref");

        $z3 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>($r6);

        if $z3 != 0 goto label3;

        $r7 = virtualinvoke r1.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.XmlReaderContext getReaderContext()>();

        $r8 = r3.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.parsing.ParseState parseState>;

        $r9 = virtualinvoke $r8.<org.springframework.beans.factory.parsing.ParseState: org.springframework.beans.factory.parsing.ParseState snapshot()>();

        virtualinvoke $r7.<org.springframework.beans.factory.xml.XmlReaderContext: void error(java.lang.String,java.lang.Object,org.springframework.beans.factory.parsing.ParseState)>("\'pointcut-ref\' attribute contains empty value.", r0, $r9);

        return null;

     label3:
        return $r6;

     label4:
        $r2 = virtualinvoke r1.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.XmlReaderContext getReaderContext()>();

        $r4 = r3.<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.parsing.ParseState parseState>;

        $r5 = virtualinvoke $r4.<org.springframework.beans.factory.parsing.ParseState: org.springframework.beans.factory.parsing.ParseState snapshot()>();

        virtualinvoke $r2.<org.springframework.beans.factory.xml.XmlReaderContext: void error(java.lang.String,java.lang.Object,org.springframework.beans.factory.parsing.ParseState)>("Must define one of \'pointcut\' or \'pointcut-ref\' on <advisor> tag.", r0, $r5);

        return null;
    }

    protected org.springframework.beans.factory.support.AbstractBeanDefinition createPointcutDefinition(java.lang.String)
    {
        org.springframework.beans.factory.support.RootBeanDefinition $r0;
        org.springframework.beans.MutablePropertyValues $r1;
        java.lang.String r2;
        org.springframework.aop.config.ConfigBeanDefinitionParser r3;

        r3 := @this: org.springframework.aop.config.ConfigBeanDefinitionParser;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.springframework.beans.factory.support.RootBeanDefinition;

        specialinvoke $r0.<org.springframework.beans.factory.support.RootBeanDefinition: void <init>(java.lang.Class)>(class "Lorg/springframework/aop/aspectj/AspectJExpressionPointcut;");

        virtualinvoke $r0.<org.springframework.beans.factory.support.RootBeanDefinition: void setScope(java.lang.String)>("prototype");

        virtualinvoke $r0.<org.springframework.beans.factory.support.RootBeanDefinition: void setSynthetic(boolean)>(1);

        $r1 = virtualinvoke $r0.<org.springframework.beans.factory.support.RootBeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        virtualinvoke $r1.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.MutablePropertyValues add(java.lang.String,java.lang.Object)>("expression", r2);

        return $r0;
    }

    public static void <clinit>()
    {
        <org.springframework.aop.config.ConfigBeanDefinitionParser: int ASPECT_INSTANCE_FACTORY_INDEX> = 2;

        <org.springframework.aop.config.ConfigBeanDefinitionParser: int POINTCUT_INDEX> = 1;

        <org.springframework.aop.config.ConfigBeanDefinitionParser: int METHOD_INDEX> = 0;

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String ORDER_PROPERTY> = "order";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String DECLARATION_ORDER_PROPERTY> = "declarationOrder";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String ASPECT_NAME_PROPERTY> = "aspectName";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String ARG_NAMES_PROPERTY> = "argumentNames";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String ARG_NAMES> = "arg-names";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String THROWING_PROPERTY> = "throwingName";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String THROWING> = "throwing";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String RETURNING_PROPERTY> = "returningName";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String RETURNING> = "returning";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String AROUND> = "around";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String AFTER_THROWING_ELEMENT> = "after-throwing";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String AFTER_RETURNING_ELEMENT> = "after-returning";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String AFTER> = "after";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String IMPLEMENT_INTERFACE> = "implement-interface";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String DELEGATE_REF> = "delegate-ref";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String DEFAULT_IMPL> = "default-impl";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String TYPE_PATTERN> = "types-matching";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String DECLARE_PARENTS> = "declare-parents";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String BEFORE> = "before";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String REF> = "ref";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String POINTCUT_REF> = "pointcut-ref";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String ADVICE_REF> = "advice-ref";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String ADVISOR> = "advisor";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String ADVICE_BEAN_NAME> = "adviceBeanName";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String POINTCUT> = "pointcut";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String ID> = "id";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String EXPRESSION> = "expression";

        <org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.String ASPECT> = "aspect";

        return;
    }
}
