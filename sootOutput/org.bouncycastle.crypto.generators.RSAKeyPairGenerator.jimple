public class org.bouncycastle.crypto.generators.RSAKeyPairGenerator extends java.lang.Object implements org.bouncycastle.crypto.AsymmetricCipherKeyPairGenerator
{
    private static final java.math.BigInteger ONE;
    private org.bouncycastle.crypto.params.RSAKeyGenerationParameters param;

    public void <init>()
    {
        org.bouncycastle.crypto.generators.RSAKeyPairGenerator r0;

        r0 := @this: org.bouncycastle.crypto.generators.RSAKeyPairGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void init(org.bouncycastle.crypto.KeyGenerationParameters)
    {
        org.bouncycastle.crypto.KeyGenerationParameters r1;
        org.bouncycastle.crypto.generators.RSAKeyPairGenerator r0;
        org.bouncycastle.crypto.params.RSAKeyGenerationParameters $r2;

        r0 := @this: org.bouncycastle.crypto.generators.RSAKeyPairGenerator;

        r1 := @parameter0: org.bouncycastle.crypto.KeyGenerationParameters;

        $r2 = (org.bouncycastle.crypto.params.RSAKeyGenerationParameters) r1;

        r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param> = $r2;

        return;
    }

    public org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()
    {
        org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters $r29;
        org.bouncycastle.crypto.generators.RSAKeyPairGenerator r0;
        java.security.SecureRandom $r32, $r38;
        org.bouncycastle.crypto.AsymmetricCipherKeyPair $r27;
        java.math.BigInteger $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r30, r33, $r34, $r35, $r36, r39, $r40, $r41, r42;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.bouncycastle.crypto.params.RSAKeyParameters $r28;
        int $i0, $i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10;
        org.bouncycastle.crypto.params.RSAKeyGenerationParameters $r1, $r2, $r4, $r11, $r17, $r31, $r37;

        r0 := @this: org.bouncycastle.crypto.generators.RSAKeyPairGenerator;

        $r1 = r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>;

        $i0 = virtualinvoke $r1.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: int getStrength()>();

        $i1 = $i0 + 1;

        i2 = $i1 / 2;

        i3 = $i0 - i2;

        i4 = $i0 / 3;

        $r2 = r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>;

        $r3 = virtualinvoke $r2.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: java.math.BigInteger getPublicExponent()>();

     label01:
        $r30 = new java.math.BigInteger;

        $r31 = r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>;

        $r32 = virtualinvoke $r31.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: java.security.SecureRandom getRandom()>();

        specialinvoke $r30.<java.math.BigInteger: void <init>(int,int,java.util.Random)>(i2, 1, $r32);

        r33 = $r30;

        $r34 = virtualinvoke $r30.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r3);

        $r35 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>;

        $z5 = virtualinvoke $r34.<java.math.BigInteger: boolean equals(java.lang.Object)>($r35);

        if $z5 == 0 goto label02;

        goto label01;

     label02:
        $r4 = r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>;

        $i5 = virtualinvoke $r4.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: int getCertainty()>();

        $z0 = virtualinvoke $r30.<java.math.BigInteger: boolean isProbablePrime(int)>($i5);

        if $z0 != 0 goto label03;

        goto label01;

     label03:
        $r5 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>;

        $r6 = virtualinvoke $r30.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r5);

        $r7 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger gcd(java.math.BigInteger)>($r6);

        $r8 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>;

        $z1 = virtualinvoke $r7.<java.math.BigInteger: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label01;

        goto label04;

     label04:
        $r36 = new java.math.BigInteger;

        $r37 = r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>;

        $r38 = virtualinvoke $r37.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: java.security.SecureRandom getRandom()>();

        specialinvoke $r36.<java.math.BigInteger: void <init>(int,int,java.util.Random)>(i3, 1, $r38);

        r39 = $r36;

        $r40 = virtualinvoke $r36.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r33);

        $r41 = virtualinvoke $r40.<java.math.BigInteger: java.math.BigInteger abs()>();

        $i10 = virtualinvoke $r41.<java.math.BigInteger: int bitLength()>();

        if $i10 >= i4 goto label05;

        goto label04;

     label05:
        $r9 = virtualinvoke $r36.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r3);

        $r10 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>;

        $z2 = virtualinvoke $r9.<java.math.BigInteger: boolean equals(java.lang.Object)>($r10);

        if $z2 == 0 goto label06;

        goto label04;

     label06:
        $r11 = r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>;

        $i6 = virtualinvoke $r11.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: int getCertainty()>();

        $z3 = virtualinvoke $r36.<java.math.BigInteger: boolean isProbablePrime(int)>($i6);

        if $z3 != 0 goto label07;

        goto label04;

     label07:
        $r12 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>;

        $r13 = virtualinvoke $r36.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r12);

        $r14 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger gcd(java.math.BigInteger)>($r13);

        $r15 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>;

        $z4 = virtualinvoke $r14.<java.math.BigInteger: boolean equals(java.lang.Object)>($r15);

        if $z4 == 0 goto label04;

        goto label08;

     label08:
        $r16 = virtualinvoke r33.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r36);

        $i7 = virtualinvoke $r16.<java.math.BigInteger: int bitLength()>();

        $r17 = r0.<org.bouncycastle.crypto.generators.RSAKeyPairGenerator: org.bouncycastle.crypto.params.RSAKeyGenerationParameters param>;

        $i8 = virtualinvoke $r17.<org.bouncycastle.crypto.params.RSAKeyGenerationParameters: int getStrength()>();

        if $i7 != $i8 goto label09;

        goto label10;

     label09:
        r33 = virtualinvoke r33.<java.math.BigInteger: java.math.BigInteger max(java.math.BigInteger)>($r36);

        goto label04;

     label10:
        $i9 = virtualinvoke r33.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r36);

        if $i9 >= 0 goto label11;

        r42 = r33;

        r33 = $r36;

        r39 = r42;

     label11:
        $r18 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>;

        $r19 = virtualinvoke r33.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r18);

        $r20 = <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE>;

        $r21 = virtualinvoke r39.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r20);

        $r22 = virtualinvoke $r19.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r21);

        $r23 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger modInverse(java.math.BigInteger)>($r22);

        $r24 = virtualinvoke $r23.<java.math.BigInteger: java.math.BigInteger remainder(java.math.BigInteger)>($r19);

        $r25 = virtualinvoke $r23.<java.math.BigInteger: java.math.BigInteger remainder(java.math.BigInteger)>($r21);

        $r26 = virtualinvoke r39.<java.math.BigInteger: java.math.BigInteger modInverse(java.math.BigInteger)>(r33);

        $r27 = new org.bouncycastle.crypto.AsymmetricCipherKeyPair;

        $r28 = new org.bouncycastle.crypto.params.RSAKeyParameters;

        specialinvoke $r28.<org.bouncycastle.crypto.params.RSAKeyParameters: void <init>(boolean,java.math.BigInteger,java.math.BigInteger)>(0, $r16, $r3);

        $r29 = new org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters;

        specialinvoke $r29.<org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r16, $r3, $r23, r33, r39, $r24, $r25, $r26);

        specialinvoke $r27.<org.bouncycastle.crypto.AsymmetricCipherKeyPair: void <init>(org.bouncycastle.crypto.CipherParameters,org.bouncycastle.crypto.CipherParameters)>($r28, $r29);

        return $r27;
    }

    static void <clinit>()
    {
        java.math.BigInteger $r0;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

        <org.bouncycastle.crypto.generators.RSAKeyPairGenerator: java.math.BigInteger ONE> = $r0;

        return;
    }
}
