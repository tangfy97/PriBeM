public abstract class com.google.protobuf.AbstractMessageLite extends java.lang.Object implements com.google.protobuf.MessageLite
{

    public void <init>()
    {
        com.google.protobuf.AbstractMessageLite r0;

        r0 := @this: com.google.protobuf.AbstractMessageLite;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.google.protobuf.ByteString toByteString()
    {
        com.google.protobuf.ByteString $r3;
        int $i0;
        com.google.protobuf.AbstractMessageLite r0;
        java.io.IOException $r4;
        java.lang.RuntimeException $r5;
        com.google.protobuf.ByteString$CodedBuilder $r1;
        com.google.protobuf.CodedOutputStream $r2;

        r0 := @this: com.google.protobuf.AbstractMessageLite;

     label1:
        $i0 = virtualinvoke r0.<com.google.protobuf.AbstractMessageLite: int getSerializedSize()>();

        $r1 = staticinvoke <com.google.protobuf.ByteString: com.google.protobuf.ByteString$CodedBuilder newCodedBuilder(int)>($i0);

        $r2 = virtualinvoke $r1.<com.google.protobuf.ByteString$CodedBuilder: com.google.protobuf.CodedOutputStream getCodedOutput()>();

        virtualinvoke r0.<com.google.protobuf.AbstractMessageLite: void writeTo(com.google.protobuf.CodedOutputStream)>($r2);

        $r3 = virtualinvoke $r1.<com.google.protobuf.ByteString$CodedBuilder: com.google.protobuf.ByteString build()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Serializing to a ByteString threw an IOException (should never happen).", $r4);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public byte[] toByteArray()
    {
        byte[] r4;
        int $i0;
        com.google.protobuf.AbstractMessageLite r0;
        java.io.IOException $r2;
        java.lang.RuntimeException $r3;
        com.google.protobuf.CodedOutputStream $r1;

        r0 := @this: com.google.protobuf.AbstractMessageLite;

     label1:
        $i0 = virtualinvoke r0.<com.google.protobuf.AbstractMessageLite: int getSerializedSize()>();

        r4 = newarray (byte)[$i0];

        $r1 = staticinvoke <com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStream newInstance(byte[])>(r4);

        virtualinvoke r0.<com.google.protobuf.AbstractMessageLite: void writeTo(com.google.protobuf.CodedOutputStream)>($r1);

        virtualinvoke $r1.<com.google.protobuf.CodedOutputStream: void checkNoSpaceLeft()>();

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Serializing to a byte array threw an IOException (should never happen).", $r2);

        throw $r3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        int $i0, $i1;
        com.google.protobuf.AbstractMessageLite r0;
        com.google.protobuf.CodedOutputStream $r2;

        r0 := @this: com.google.protobuf.AbstractMessageLite;

        r1 := @parameter0: java.io.OutputStream;

        $i0 = virtualinvoke r0.<com.google.protobuf.AbstractMessageLite: int getSerializedSize()>();

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computePreferredBufferSize(int)>($i0);

        $r2 = staticinvoke <com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStream newInstance(java.io.OutputStream,int)>(r1, $i1);

        virtualinvoke r0.<com.google.protobuf.AbstractMessageLite: void writeTo(com.google.protobuf.CodedOutputStream)>($r2);

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void flush()>();

        return;
    }

    public void writeDelimitedTo(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        int $i0, $i1, $i2, $i3;
        com.google.protobuf.AbstractMessageLite r0;
        com.google.protobuf.CodedOutputStream $r2;

        r0 := @this: com.google.protobuf.AbstractMessageLite;

        r1 := @parameter0: java.io.OutputStream;

        $i0 = virtualinvoke r0.<com.google.protobuf.AbstractMessageLite: int getSerializedSize()>();

        $i1 = staticinvoke <com.google.protobuf.CodedOutputStream: int computeRawVarint32Size(int)>($i0);

        $i2 = $i1 + $i0;

        $i3 = staticinvoke <com.google.protobuf.CodedOutputStream: int computePreferredBufferSize(int)>($i2);

        $r2 = staticinvoke <com.google.protobuf.CodedOutputStream: com.google.protobuf.CodedOutputStream newInstance(java.io.OutputStream,int)>(r1, $i3);

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void writeRawVarint32(int)>($i0);

        virtualinvoke r0.<com.google.protobuf.AbstractMessageLite: void writeTo(com.google.protobuf.CodedOutputStream)>($r2);

        virtualinvoke $r2.<com.google.protobuf.CodedOutputStream: void flush()>();

        return;
    }
}
