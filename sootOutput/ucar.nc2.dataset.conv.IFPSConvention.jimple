public class ucar.nc2.dataset.conv.IFPSConvention extends ucar.nc2.dataset.CoordSysBuilder
{
    private ucar.nc2.Variable projVar;

    public static boolean isMine(ucar.nc2.NetcdfFile)
    {
        ucar.nc2.Variable $r1, $r3;
        ucar.nc2.Dimension $r2;
        ucar.nc2.NetcdfFile r0;
        java.lang.String $r4;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        $r1 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>("latitude");

        $r2 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension findDimension(java.lang.String)>("DIM_0");

        if null == $r2 goto label1;

        $r3 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>("longitude");

        if null == $r3 goto label1;

        if null == $r1 goto label1;

        $r4 = virtualinvoke r0.<ucar.nc2.NetcdfFile: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>($r1, "projectionType", null);

        if null == $r4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void <init>()
    {
        ucar.nc2.dataset.conv.IFPSConvention r0;

        r0 := @this: ucar.nc2.dataset.conv.IFPSConvention;

        specialinvoke r0.<ucar.nc2.dataset.CoordSysBuilder: void <init>()>();

        r0.<ucar.nc2.dataset.conv.IFPSConvention: ucar.nc2.Variable projVar> = null;

        r0.<ucar.nc2.dataset.conv.IFPSConvention: java.lang.String conventionName> = "IFPS";

        return;
    }

    public void augmentDataset(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.unidata.geoloc.Projection $r23;
        java.util.Formatter $r4;
        ucar.nc2.util.CancelTask r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.List $r13;
        ucar.nc2.Attribute $r6, $r7, $r9, $r10, $r19, $r20;
        ucar.nc2.dataset.conv.IFPSConvention r2;
        java.lang.Object[] $r3;
        int $i0;
        ucar.nc2.Variable $r1, $r5, $r8, $r11, r16;
        java.lang.String $r12, $r18, $r21, $r22, $r25;
        java.util.Iterator $r14;
        java.lang.Object $r15;
        ucar.nc2.Dimension $r17;
        ucar.nc2.dataset.NetcdfDataset r0;

        r2 := @this: ucar.nc2.dataset.conv.IFPSConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r24 := @parameter1: ucar.nc2.util.CancelTask;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("xCoord");

        if null == $r1 goto label1;

        return;

     label1:
        $r4 = r2.<ucar.nc2.dataset.conv.IFPSConvention: java.util.Formatter parseInfo>;

        $r3 = newarray (java.lang.Object)[0];

        virtualinvoke $r4.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("IFPS augmentDataset \n", $r3);

        $r5 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("longitude");

        $r6 = new ucar.nc2.Attribute;

        specialinvoke $r6.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees_east");

        virtualinvoke $r5.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r6);

        $r7 = new ucar.nc2.Attribute;

        specialinvoke $r7.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", "Lon");

        virtualinvoke $r5.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r7);

        $r8 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("latitude");

        $r9 = new ucar.nc2.Attribute;

        specialinvoke $r9.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", "Lat");

        virtualinvoke $r8.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r9);

        $r10 = new ucar.nc2.Attribute;

        specialinvoke $r10.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees_north");

        virtualinvoke $r8.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r10);

        r2.<ucar.nc2.dataset.conv.IFPSConvention: ucar.nc2.Variable projVar> = $r8;

        $r11 = r2.<ucar.nc2.dataset.conv.IFPSConvention: ucar.nc2.Variable projVar>;

        $r12 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>($r11, "projectionType", null);

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("LAMBERT_CONFORMAL");

        if $z0 == 0 goto label2;

        $r23 = specialinvoke r2.<ucar.nc2.dataset.conv.IFPSConvention: ucar.unidata.geoloc.Projection makeLCProjection(ucar.nc2.dataset.NetcdfDataset)>(r0);

        specialinvoke r2.<ucar.nc2.dataset.conv.IFPSConvention: void makeXYcoords(ucar.nc2.dataset.NetcdfDataset,ucar.unidata.geoloc.Projection,ucar.nc2.Variable,ucar.nc2.Variable)>(r0, $r23, $r8, $r5);

     label2:
        $r13 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.util.List getVariables()>();

        $r14 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z4 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label6;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r16 = (ucar.nc2.Variable) $r15;

        $r17 = virtualinvoke r16.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $r18 = virtualinvoke $r17.<ucar.nc2.Dimension: java.lang.String getName()>();

        $z1 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("DIM_0");

        if $z1 != 0 goto label4;

        $r21 = virtualinvoke r16.<ucar.nc2.Variable: java.lang.String getName()>();

        $z2 = virtualinvoke $r21.<java.lang.String: boolean endsWith(java.lang.String)>("History");

        if $z2 != 0 goto label4;

        $i0 = virtualinvoke r16.<ucar.nc2.Variable: int getRank()>();

        if $i0 <= 2 goto label4;

        $r22 = virtualinvoke r16.<ucar.nc2.Variable: java.lang.String getName()>();

        $z3 = virtualinvoke $r22.<java.lang.String: boolean startsWith(java.lang.String)>("Tool");

        if $z3 != 0 goto label4;

        specialinvoke r2.<ucar.nc2.dataset.conv.IFPSConvention: void createTimeCoordinate(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable)>(r0, r16);

        goto label5;

     label4:
        $r25 = virtualinvoke r16.<ucar.nc2.Variable: java.lang.String getName()>();

        $z5 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>("Topo");

        if $z5 == 0 goto label5;

        $r19 = new ucar.nc2.Attribute;

        specialinvoke $r19.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "Topography");

        virtualinvoke r16.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r19);

        $r20 = new ucar.nc2.Attribute;

        specialinvoke $r20.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "ft");

        virtualinvoke r16.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r20);

     label5:
        goto label3;

     label6:
        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        return;
    }

    private void createTimeCoordinate(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Variable)
    {
        java.lang.IllegalStateException $r46;
        java.lang.Integer $r42, $r43;
        java.util.Formatter $r27, $r41;
        ucar.nc2.dataset.CoordinateAxis1D $r21;
        ucar.ma2.Range $r4;
        ucar.ma2.DataType $r7;
        java.util.List $r28;
        ucar.nc2.Attribute $r1, $r22, $r23, $r24, $r29, $r34, $r35, $r36, $r38;
        java.lang.StringBuilder $r9, $r11, $r12, $r16, $r17, $r19, $r30, $r31, $r32;
        ucar.nc2.dataset.conv.IFPSConvention r25;
        java.lang.Object[] $r26, $r40;
        long $l0, $l2;
        java.util.ArrayList $r3;
        int $i1, $i3, i4, i5;
        ucar.nc2.Variable r0;
        java.lang.String $r10, $r13, $r18, $r20, $r33, $r37, $r44;
        java.lang.Number $r39;
        ucar.ma2.Array $r2, $r5;
        ucar.ma2.InvalidRangeException $r45;
        java.lang.Class $r6;
        ucar.nc2.Dimension $r8, $r14;
        ucar.nc2.dataset.NetcdfDataset r15;

        r25 := @this: ucar.nc2.dataset.conv.IFPSConvention;

        r15 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r0 := @parameter1: ucar.nc2.Variable;

        $r1 = virtualinvoke r0.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("validTimes");

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke $r1.<ucar.nc2.Attribute: ucar.ma2.Array getValues()>();

     label2:
        $l0 = virtualinvoke $r2.<ucar.ma2.Array: long getSize()>();

        i4 = (int) $l0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = new ucar.ma2.Range;

        $i1 = i4 - 1;

        specialinvoke $r4.<ucar.ma2.Range: void <init>(int,int,int)>(0, $i1, 2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r5 = virtualinvoke $r2.<ucar.ma2.Array: ucar.ma2.Array section(java.util.List)>($r3);

     label3:
        goto label5;

     label4:
        $r45 := @caughtexception;

        $r46 = new java.lang.IllegalStateException;

        specialinvoke $r46.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r45);

        throw $r46;

     label5:
        $r6 = virtualinvoke $r5.<ucar.ma2.Array: java.lang.Class getElementType()>();

        $r7 = staticinvoke <ucar.ma2.DataType: ucar.ma2.DataType getType(java.lang.Class)>($r6);

        $l2 = virtualinvoke $r5.<ucar.ma2.Array: long getSize()>();

        i5 = (int) $l2;

        $r8 = virtualinvoke r0.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $i3 = virtualinvoke $r8.<ucar.nc2.Dimension: int getLength()>();

        if $i3 == i5 goto label6;

        $r41 = r25.<ucar.nc2.dataset.conv.IFPSConvention: java.util.Formatter parseInfo>;

        $r40 = newarray (java.lang.Object)[3];

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $r40[0] = $r42;

        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r40[1] = $r43;

        $r44 = virtualinvoke r0.<ucar.nc2.Variable: java.lang.String getName()>();

        $r40[2] = $r44;

        virtualinvoke $r41.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" **error ntimes in attribute (%d) doesnt match dimension length (%d) for variable %s\n", $r40);

        return;

     label6:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r0.<ucar.nc2.Variable: java.lang.String getName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_timeCoord");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = new ucar.nc2.Dimension;

        specialinvoke $r14.<ucar.nc2.Dimension: void <init>(java.lang.String,int)>($r13, $i3);

        virtualinvoke r15.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r14);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("time coordinate for ");

        $r18 = virtualinvoke r0.<ucar.nc2.Variable: java.lang.String getName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = new ucar.nc2.dataset.CoordinateAxis1D;

        specialinvoke $r21.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r15, null, $r13, $r7, $r13, "seconds since 1970-1-1 00:00:00", $r20);

        virtualinvoke $r21.<ucar.nc2.dataset.CoordinateAxis1D: void setCachedData(ucar.ma2.Array,boolean)>($r5, 1);

        $r22 = new ucar.nc2.Attribute;

        specialinvoke $r22.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", $r20);

        virtualinvoke $r21.<ucar.nc2.dataset.CoordinateAxis1D: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r22);

        $r23 = new ucar.nc2.Attribute;

        specialinvoke $r23.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "seconds since 1970-1-1 00:00:00");

        virtualinvoke $r21.<ucar.nc2.dataset.CoordinateAxis1D: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r23);

        $r24 = new ucar.nc2.Attribute;

        specialinvoke $r24.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", "Time");

        virtualinvoke $r21.<ucar.nc2.dataset.CoordinateAxis1D: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r24);

        virtualinvoke r15.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r21);

        $r27 = r25.<ucar.nc2.dataset.conv.IFPSConvention: java.util.Formatter parseInfo>;

        $r26 = newarray (java.lang.Object)[1];

        $r26[0] = $r13;

        virtualinvoke $r27.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" added coordinate variable %s\n", $r26);

        $r28 = virtualinvoke r0.<ucar.nc2.Variable: java.util.List getDimensions()>();

        interfaceinvoke $r28.<java.util.List: java.lang.Object set(int,java.lang.Object)>(0, $r14);

        virtualinvoke r0.<ucar.nc2.Variable: void setDimensions(java.util.List)>($r28);

        $r29 = new ucar.nc2.Attribute;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" yCoord xCoord");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxes", $r33);

        virtualinvoke r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r29);

        $r34 = virtualinvoke r0.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("fillValue");

        if $r34 == null goto label7;

        $r38 = new ucar.nc2.Attribute;

        $r39 = virtualinvoke $r34.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        specialinvoke $r38.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("_FillValue", $r39);

        virtualinvoke r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r38);

     label7:
        $r35 = virtualinvoke r0.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>("descriptiveName");

        if null == $r35 goto label8;

        $r36 = new ucar.nc2.Attribute;

        $r37 = virtualinvoke $r35.<ucar.nc2.Attribute: java.lang.String getStringValue()>();

        specialinvoke $r36.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", $r37);

        virtualinvoke r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r36);

     label8:
        return;

        catch ucar.ma2.InvalidRangeException from label2 to label3 with label4;
    }

    protected java.lang.String getZisPositive(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.dataset.CoordinateAxis)
    {
        ucar.nc2.dataset.CoordinateAxis r2;
        ucar.nc2.dataset.conv.IFPSConvention r0;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.dataset.conv.IFPSConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: ucar.nc2.dataset.CoordinateAxis;

        return "up";
    }

    private ucar.unidata.geoloc.Projection makeLCProjection(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.VariableDS $r8;
        ucar.nc2.dataset.ProjectionCT $r6;
        ucar.nc2.Attribute $r2, $r9;
        ucar.unidata.geoloc.projection.LambertConformal $r5;
        ucar.nc2.Variable $r1;
        ucar.nc2.dataset.conv.IFPSConvention r0;
        java.lang.Number $r3, $r4;
        ucar.nc2.dataset.NetcdfDataset r7;
        double $d0, $d1, $d2, $d3;

        r0 := @this: ucar.nc2.dataset.conv.IFPSConvention;

        r7 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r1 = r0.<ucar.nc2.dataset.conv.IFPSConvention: ucar.nc2.Variable projVar>;

        $r2 = virtualinvoke $r1.<ucar.nc2.Variable: ucar.nc2.Attribute findAttributeIgnoreCase(java.lang.String)>("latLonOrigin");

        $r3 = virtualinvoke $r2.<ucar.nc2.Attribute: java.lang.Number getNumericValue(int)>(0);

        $d0 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        $r4 = virtualinvoke $r2.<ucar.nc2.Attribute: java.lang.Number getNumericValue(int)>(1);

        $d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $d2 = specialinvoke r0.<ucar.nc2.dataset.conv.IFPSConvention: double findAttributeDouble(java.lang.String)>("stdParallelOne");

        $d3 = specialinvoke r0.<ucar.nc2.dataset.conv.IFPSConvention: double findAttributeDouble(java.lang.String)>("stdParallelTwo");

        $r5 = new ucar.unidata.geoloc.projection.LambertConformal;

        specialinvoke $r5.<ucar.unidata.geoloc.projection.LambertConformal: void <init>(double,double,double,double)>($d1, $d0, $d2, $d3);

        $r6 = new ucar.nc2.dataset.ProjectionCT;

        specialinvoke $r6.<ucar.nc2.dataset.ProjectionCT: void <init>(java.lang.String,java.lang.String,ucar.unidata.geoloc.ProjectionImpl)>("lambertConformalProjection", "FGDC", $r5);

        $r8 = virtualinvoke r0.<ucar.nc2.dataset.conv.IFPSConvention: ucar.nc2.dataset.VariableDS makeCoordinateTransformVariable(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.CoordinateTransform)>(r7, $r6);

        $r9 = new ucar.nc2.Attribute;

        specialinvoke $r9.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxes", "xCoord yCoord");

        virtualinvoke $r8.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r9);

        virtualinvoke r7.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r8);

        return $r5;
    }

    private void makeXYcoords(ucar.nc2.dataset.NetcdfDataset, ucar.unidata.geoloc.Projection, ucar.nc2.Variable, ucar.nc2.Variable) throws java.io.IOException
    {
        ucar.unidata.geoloc.Projection r31;
        int[] $r6, $r9;
        ucar.unidata.geoloc.ProjectionPointImpl $r13;
        ucar.nc2.dataset.VariableDS $r17, $r24;
        ucar.ma2.DataType $r19, $r25;
        ucar.nc2.Attribute $r21, $r22, $r23, $r27, $r28, $r29;
        ucar.nc2.dataset.conv.IFPSConvention r35;
        int $i0, $i1, $i2, $i3, i4, i5;
        ucar.nc2.Variable r0, r2;
        java.lang.String $r20, $r26;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        ucar.ma2.Array $r1, $r3, $r8, $r11;
        ucar.ma2.Index $r14, $r15, $r16, $r30, $r32, $r33, $r34;
        ucar.nc2.Dimension $r4, $r5;
        java.lang.Class $r7, $r10;
        ucar.unidata.geoloc.LatLonPointImpl $r12;
        ucar.nc2.dataset.NetcdfDataset r18;

        r35 := @this: ucar.nc2.dataset.conv.IFPSConvention;

        r18 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r31 := @parameter1: ucar.unidata.geoloc.Projection;

        r0 := @parameter2: ucar.nc2.Variable;

        r2 := @parameter3: ucar.nc2.Variable;

        $r1 = virtualinvoke r0.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r3 = virtualinvoke r2.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r4 = virtualinvoke r0.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $r5 = virtualinvoke r0.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(1);

        $r7 = <java.lang.Float: java.lang.Class TYPE>;

        $r6 = newarray (int)[1];

        $i0 = virtualinvoke $r5.<ucar.nc2.Dimension: int getLength()>();

        $r6[0] = $i0;

        $r8 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[])>($r7, $r6);

        $r10 = <java.lang.Float: java.lang.Class TYPE>;

        $r9 = newarray (int)[1];

        $i1 = virtualinvoke $r4.<ucar.nc2.Dimension: int getLength()>();

        $r9[0] = $i1;

        $r11 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[])>($r10, $r9);

        $r12 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r12.<ucar.unidata.geoloc.LatLonPointImpl: void <init>()>();

        $r13 = new ucar.unidata.geoloc.ProjectionPointImpl;

        specialinvoke $r13.<ucar.unidata.geoloc.ProjectionPointImpl: void <init>()>();

        $r14 = virtualinvoke $r1.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r15 = virtualinvoke $r8.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r16 = virtualinvoke $r11.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        i4 = 0;

     label1:
        $i2 = virtualinvoke $r5.<ucar.nc2.Dimension: int getLength()>();

        if i4 >= $i2 goto label2;

        $r33 = virtualinvoke $r14.<ucar.ma2.Index: ucar.ma2.Index set1(int)>(i4);

        $d3 = virtualinvoke $r1.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r33);

        $d4 = virtualinvoke $r3.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r14);

        virtualinvoke $r12.<ucar.unidata.geoloc.LatLonPointImpl: void set(double,double)>($d3, $d4);

        interfaceinvoke r31.<ucar.unidata.geoloc.Projection: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.ProjectionPointImpl)>($r12, $r13);

        $r34 = virtualinvoke $r15.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i4);

        $d5 = virtualinvoke $r13.<ucar.unidata.geoloc.ProjectionPointImpl: double getX()>();

        virtualinvoke $r8.<ucar.ma2.Array: void setDouble(ucar.ma2.Index,double)>($r34, $d5);

        i4 = i4 + 1;

        goto label1;

     label2:
        i5 = 0;

     label3:
        $i3 = virtualinvoke $r4.<ucar.nc2.Dimension: int getLength()>();

        if i5 >= $i3 goto label4;

        $r30 = virtualinvoke $r14.<ucar.ma2.Index: ucar.ma2.Index set0(int)>(i5);

        $d0 = virtualinvoke $r1.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r30);

        $d1 = virtualinvoke $r3.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r14);

        virtualinvoke $r12.<ucar.unidata.geoloc.LatLonPointImpl: void set(double,double)>($d0, $d1);

        interfaceinvoke r31.<ucar.unidata.geoloc.Projection: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.ProjectionPointImpl)>($r12, $r13);

        $r32 = virtualinvoke $r16.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i5);

        $d2 = virtualinvoke $r13.<ucar.unidata.geoloc.ProjectionPointImpl: double getY()>();

        virtualinvoke $r11.<ucar.ma2.Array: void setDouble(ucar.ma2.Index,double)>($r32, $d2);

        i5 = i5 + 1;

        goto label3;

     label4:
        $r17 = new ucar.nc2.dataset.VariableDS;

        $r19 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        $r20 = virtualinvoke $r5.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r17.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r18, null, null, "xCoord", $r19, $r20, "km", "x on projection");

        $r21 = new ucar.nc2.Attribute;

        specialinvoke $r21.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "km");

        virtualinvoke $r17.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r21);

        $r22 = new ucar.nc2.Attribute;

        specialinvoke $r22.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "x on projection");

        virtualinvoke $r17.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r22);

        $r23 = new ucar.nc2.Attribute;

        specialinvoke $r23.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", "GeoX");

        virtualinvoke $r17.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r23);

        $r24 = new ucar.nc2.dataset.VariableDS;

        $r25 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        $r26 = virtualinvoke $r4.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r24.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r18, null, null, "yCoord", $r25, $r26, "km", "y on projection");

        $r27 = new ucar.nc2.Attribute;

        specialinvoke $r27.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "km");

        virtualinvoke $r24.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r27);

        $r28 = new ucar.nc2.Attribute;

        specialinvoke $r28.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "y on projection");

        virtualinvoke $r24.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r28);

        $r29 = new ucar.nc2.Attribute;

        specialinvoke $r29.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", "GeoY");

        virtualinvoke $r24.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r29);

        virtualinvoke $r17.<ucar.nc2.dataset.VariableDS: void setCachedData(ucar.ma2.Array,boolean)>($r8, 1);

        virtualinvoke $r24.<ucar.nc2.dataset.VariableDS: void setCachedData(ucar.ma2.Array,boolean)>($r11, 1);

        virtualinvoke r18.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r17);

        virtualinvoke r18.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r24);

        return;
    }

    private double findAttributeDouble(java.lang.String)
    {
        ucar.nc2.Attribute $r3;
        ucar.nc2.Variable $r2;
        java.lang.String r1;
        ucar.nc2.dataset.conv.IFPSConvention r0;
        java.lang.Number $r4;
        double $d0;

        r0 := @this: ucar.nc2.dataset.conv.IFPSConvention;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.nc2.dataset.conv.IFPSConvention: ucar.nc2.Variable projVar>;

        $r3 = virtualinvoke $r2.<ucar.nc2.Variable: ucar.nc2.Attribute findAttributeIgnoreCase(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $d0 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        return $d0;
    }
}
