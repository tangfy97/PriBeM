public class org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint extends org.apache.lucene.index.IndexCommit
{
    protected org.apache.lucene.index.IndexCommit cp;
    final org.apache.lucene.index.SnapshotDeletionPolicy this$0;

    protected void <init>(org.apache.lucene.index.SnapshotDeletionPolicy, org.apache.lucene.index.IndexCommit)
    {
        org.apache.lucene.index.IndexCommit r2;
        org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint r0;
        org.apache.lucene.index.SnapshotDeletionPolicy r1;

        r0 := @this: org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint;

        r1 := @parameter0: org.apache.lucene.index.SnapshotDeletionPolicy;

        r2 := @parameter1: org.apache.lucene.index.IndexCommit;

        r0.<org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint: org.apache.lucene.index.SnapshotDeletionPolicy this$0> = r1;

        specialinvoke r0.<org.apache.lucene.index.IndexCommit: void <init>()>();

        r0.<org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint: org.apache.lucene.index.IndexCommit cp> = r2;

        return;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.index.IndexCommit $r3;
        org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        java.lang.String $r6;

        r2 := @this: org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SnapshotDeletionPolicy.SnapshotCommitPoint(");

        $r3 = r2.<org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint: org.apache.lucene.index.IndexCommit cp>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    protected boolean shouldDelete(java.lang.String)
    {
        org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint r0;
        org.apache.lucene.index.SnapshotDeletionPolicy $r1;
        java.util.Map $r2;
        java.lang.String r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint: org.apache.lucene.index.SnapshotDeletionPolicy this$0>;

        $r2 = staticinvoke <org.apache.lucene.index.SnapshotDeletionPolicy: java.util.Map access$000(org.apache.lucene.index.SnapshotDeletionPolicy)>($r1);

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r3);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void delete()
    {
        org.apache.lucene.index.IndexCommit $r3;
        java.lang.Throwable $r4;
        org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint r0;
        org.apache.lucene.index.SnapshotDeletionPolicy $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint;

        $r1 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint: org.apache.lucene.index.SnapshotDeletionPolicy this$0>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint: java.lang.String getSegmentsFileName()>();

        $z0 = virtualinvoke r0.<org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint: boolean shouldDelete(java.lang.String)>($r2);

        if $z0 == 0 goto label2;

        $r3 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint: org.apache.lucene.index.IndexCommit cp>;

        virtualinvoke $r3.<org.apache.lucene.index.IndexCommit: void delete()>();

     label2:
        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.apache.lucene.store.Directory getDirectory()
    {
        org.apache.lucene.index.IndexCommit $r1;
        org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint r0;
        org.apache.lucene.store.Directory $r2;

        r0 := @this: org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint;

        $r1 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint: org.apache.lucene.index.IndexCommit cp>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.IndexCommit: org.apache.lucene.store.Directory getDirectory()>();

        return $r2;
    }

    public java.util.Collection getFileNames() throws java.io.IOException
    {
        org.apache.lucene.index.IndexCommit $r1;
        org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint r0;
        java.util.Collection $r2;

        r0 := @this: org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint;

        $r1 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint: org.apache.lucene.index.IndexCommit cp>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.IndexCommit: java.util.Collection getFileNames()>();

        return $r2;
    }

    public long getGeneration()
    {
        org.apache.lucene.index.IndexCommit $r1;
        long $l0;
        org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint r0;

        r0 := @this: org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint;

        $r1 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint: org.apache.lucene.index.IndexCommit cp>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.index.IndexCommit: long getGeneration()>();

        return $l0;
    }

    public java.lang.String getSegmentsFileName()
    {
        org.apache.lucene.index.IndexCommit $r1;
        org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint r0;
        java.lang.String $r2;

        r0 := @this: org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint;

        $r1 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint: org.apache.lucene.index.IndexCommit cp>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.IndexCommit: java.lang.String getSegmentsFileName()>();

        return $r2;
    }

    public java.util.Map getUserData() throws java.io.IOException
    {
        org.apache.lucene.index.IndexCommit $r1;
        org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint r0;
        java.util.Map $r2;

        r0 := @this: org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint;

        $r1 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint: org.apache.lucene.index.IndexCommit cp>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.IndexCommit: java.util.Map getUserData()>();

        return $r2;
    }

    public boolean isDeleted()
    {
        org.apache.lucene.index.IndexCommit $r1;
        org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint;

        $r1 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint: org.apache.lucene.index.IndexCommit cp>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.index.IndexCommit: boolean isDeleted()>();

        return $z0;
    }

    public int getSegmentCount()
    {
        org.apache.lucene.index.IndexCommit $r1;
        int $i0;
        org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint r0;

        r0 := @this: org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint;

        $r1 = r0.<org.apache.lucene.index.SnapshotDeletionPolicy$SnapshotCommitPoint: org.apache.lucene.index.IndexCommit cp>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.IndexCommit: int getSegmentCount()>();

        return $i0;
    }
}
