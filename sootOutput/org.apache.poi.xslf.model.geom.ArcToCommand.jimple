public class org.apache.poi.xslf.model.geom.ArcToCommand extends java.lang.Object implements org.apache.poi.xslf.model.geom.PathCommand
{
    private java.lang.String hr;
    private java.lang.String wr;
    private java.lang.String stAng;
    private java.lang.String swAng;

    void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo r1;
        org.apache.poi.xslf.model.geom.ArcToCommand r0;
        java.lang.Object $r2, $r4, $r6, $r8;
        java.lang.String $r3, $r5, $r7, $r9;

        r0 := @this: org.apache.poi.xslf.model.geom.ArcToCommand;

        r1 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo: java.lang.Object getHR()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        r0.<org.apache.poi.xslf.model.geom.ArcToCommand: java.lang.String hr> = $r3;

        $r4 = interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo: java.lang.Object getWR()>();

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        r0.<org.apache.poi.xslf.model.geom.ArcToCommand: java.lang.String wr> = $r5;

        $r6 = interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo: java.lang.Object getStAng()>();

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        r0.<org.apache.poi.xslf.model.geom.ArcToCommand: java.lang.String stAng> = $r7;

        $r8 = interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DArcTo: java.lang.Object getSwAng()>();

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        r0.<org.apache.poi.xslf.model.geom.ArcToCommand: java.lang.String swAng> = $r9;

        return;
    }

    public void execute(java.awt.geom.GeneralPath, org.apache.poi.xslf.model.geom.Context)
    {
        org.apache.poi.xslf.model.geom.Context r0;
        java.awt.geom.Point2D $r7;
        java.lang.String $r2, $r3, $r4, $r5;
        double $d0, $d1, $d2, d3, $d4, d5, $d6, $d7, $d8, $d9, $d10, d11, $d12, $d13, $d14, $d15, $d16, d17, $d18, $d19, $d20, $d21;
        java.awt.geom.Arc2D$Double $r8;
        org.apache.poi.xslf.model.geom.ArcToCommand r1;
        java.awt.geom.GeneralPath r6;

        r1 := @this: org.apache.poi.xslf.model.geom.ArcToCommand;

        r6 := @parameter0: java.awt.geom.GeneralPath;

        r0 := @parameter1: org.apache.poi.xslf.model.geom.Context;

        $r2 = r1.<org.apache.poi.xslf.model.geom.ArcToCommand: java.lang.String wr>;

        $d0 = virtualinvoke r0.<org.apache.poi.xslf.model.geom.Context: double getValue(java.lang.String)>($r2);

        $r3 = r1.<org.apache.poi.xslf.model.geom.ArcToCommand: java.lang.String hr>;

        $d1 = virtualinvoke r0.<org.apache.poi.xslf.model.geom.Context: double getValue(java.lang.String)>($r3);

        $r4 = r1.<org.apache.poi.xslf.model.geom.ArcToCommand: java.lang.String stAng>;

        $d2 = virtualinvoke r0.<org.apache.poi.xslf.model.geom.Context: double getValue(java.lang.String)>($r4);

        d3 = $d2 / 60000.0;

        $r5 = r1.<org.apache.poi.xslf.model.geom.ArcToCommand: java.lang.String swAng>;

        $d4 = virtualinvoke r0.<org.apache.poi.xslf.model.geom.Context: double getValue(java.lang.String)>($r5);

        d5 = $d4 / 60000.0;

        $r7 = virtualinvoke r6.<java.awt.geom.GeneralPath: java.awt.geom.Point2D getCurrentPoint()>();

        $d6 = virtualinvoke $r7.<java.awt.geom.Point2D: double getX()>();

        $d7 = $d6 - $d0;

        $d8 = staticinvoke <java.lang.Math: double toRadians(double)>(d3);

        $d9 = staticinvoke <java.lang.Math: double cos(double)>($d8);

        $d10 = $d0 * $d9;

        d11 = $d7 - $d10;

        $d12 = virtualinvoke $r7.<java.awt.geom.Point2D: double getY()>();

        $d13 = $d12 - $d1;

        $d14 = staticinvoke <java.lang.Math: double toRadians(double)>(d3);

        $d15 = staticinvoke <java.lang.Math: double sin(double)>($d14);

        $d16 = $d1 * $d15;

        d17 = $d13 - $d16;

        $r8 = new java.awt.geom.Arc2D$Double;

        $d21 = 2.0 * $d0;

        $d20 = 2.0 * $d1;

        $d19 = neg d3;

        $d18 = neg d5;

        specialinvoke $r8.<java.awt.geom.Arc2D$Double: void <init>(double,double,double,double,double,double,int)>(d11, d17, $d21, $d20, $d19, $d18, 0);

        virtualinvoke r6.<java.awt.geom.GeneralPath: void append(java.awt.Shape,boolean)>($r8, 1);

        return;
    }
}
