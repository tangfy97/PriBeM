public abstract class com.hp.hpl.jena.rdf.arp.impl.QNameLexer extends java.lang.Object implements com.hp.hpl.jena.rdf.arp.impl.Names, com.hp.hpl.jena.rdf.arp.ARPErrorNumbers
{
    final int bad;
    final int select;
    final com.hp.hpl.jena.rdf.arp.states.Frame frame;
    static final java.util.Set knownRDFProperties;
    static final java.util.Set knownRDFTypes;

    public void <init>(com.hp.hpl.jena.rdf.arp.states.Frame, int, int)
    {
        com.hp.hpl.jena.rdf.arp.impl.QNameLexer r0;
        com.hp.hpl.jena.rdf.arp.states.Frame r1;
        int i0, $i1, $i2, i3, i4, $i6;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.QNameLexer;

        r1 := @parameter0: com.hp.hpl.jena.rdf.arp.states.Frame;

        i0 := @parameter1: int;

        i3 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i6 = (int) -1;

        $i1 = i0 ^ $i6;

        i4 = i3 & $i1;

        r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: int bad> = i4;

        $i2 = i0 | i4;

        r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: int select> = $i2;

        r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: com.hp.hpl.jena.rdf.arp.states.Frame frame> = r1;

        return;
    }

    private int xml(java.lang.String, int)
    {
        com.hp.hpl.jena.rdf.arp.impl.QNameLexer r0;
        int i0, $i1, $i2, $i3;
        java.lang.String r1, $r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.QNameLexer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: int select>;

        $i2 = i0 & $i1;

        if $i2 != i0 goto label1;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.lang.String getLocalName()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.lang.String getUri()>();

        $r4 = <com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.lang.String xmlns>;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label1;

        $i3 = i0;

        goto label2;

     label1:
        $i3 = 0;

     label2:
        return $i3;
    }

    abstract boolean isInRdfns(com.hp.hpl.jena.rdf.arp.impl.Taint) throws org.xml.sax.SAXParseException;

    abstract void error(com.hp.hpl.jena.rdf.arp.impl.Taint, int) throws org.xml.sax.SAXParseException;

    abstract void deprecatedAttribute(com.hp.hpl.jena.rdf.arp.impl.Taint, int) throws org.xml.sax.SAXParseException;

    abstract java.lang.String getLocalName();

    abstract java.lang.String getUri();

    abstract java.lang.String getQName();

    private int rdf(com.hp.hpl.jena.rdf.arp.impl.Taint, java.lang.String, int) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.impl.Taint r3;
        com.hp.hpl.jena.rdf.arp.impl.QNameLexer r0;
        int i0, $i1, $i2;
        java.lang.String r1, $r2, $r4, $r5, $r8, $r12, $r15, $r18;
        boolean $z0, $z1, $z2;
        com.hp.hpl.jena.rdf.arp.states.Frame $r7;
        java.lang.StringBuilder $r6, $r9, $r10, $r11, $r13, $r14, $r16, $r17;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.QNameLexer;

        r3 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.Taint;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $i1 = r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: int select>;

        $i2 = i0 & $i1;

        if $i2 != i0 goto label2;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.lang.String getLocalName()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: boolean isInRdfns(com.hp.hpl.jena.rdf.arp.impl.Taint)>(r3);

        if $z1 == 0 goto label1;

        return i0;

     label1:
        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.lang.String getQName()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("rdf:");

        if $z2 == 0 goto label2;

        $r7 = r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: com.hp.hpl.jena.rdf.arp.states.Frame frame>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.lang.String getQName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not special. ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The namespace binding of the RDF namespace is incorrect. It should be <");

        $r12 = <com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.lang.String rdfns>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> not <");

        $r15 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.lang.String getUri()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<com.hp.hpl.jena.rdf.arp.states.Frame: void warning(com.hp.hpl.jena.rdf.arp.impl.Taint,int,java.lang.String)>(r3, 135, $r18);

     label2:
        return 0;
    }

    int lookup(com.hp.hpl.jena.rdf.arp.impl.Taint) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.impl.Taint r1;
        int $i0, $i1, $i2;
        com.hp.hpl.jena.rdf.arp.impl.QNameLexer r0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.QNameLexer;

        r1 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.Taint;

        $i0 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: int lookupNoMsg(com.hp.hpl.jena.rdf.arp.impl.Taint)>(r1);

        $i1 = r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: int bad>;

        $i2 = $i0 & $i1;

        if $i2 == 0 goto label4;

        lookupswitch($i0)
        {
            case 1024: goto label1;
            case 16384: goto label2;
            default: goto label3;
        };

     label1:
        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: void deprecatedAttribute(com.hp.hpl.jena.rdf.arp.impl.Taint,int)>(r1, $i0);

        goto label4;

     label2:
        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: void bagIDAttribute(com.hp.hpl.jena.rdf.arp.impl.Taint,int)>(r1, $i0);

        goto label4;

     label3:
        virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: void error(com.hp.hpl.jena.rdf.arp.impl.Taint,int)>(r1, $i0);

     label4:
        return $i0;
    }

    abstract void bagIDAttribute(com.hp.hpl.jena.rdf.arp.impl.Taint, int) throws org.xml.sax.SAXParseException;

    private int lookupNoMsg(com.hp.hpl.jena.rdf.arp.impl.Taint) throws org.xml.sax.SAXParseException
    {
        com.hp.hpl.jena.rdf.arp.impl.QNameLexer r0;
        boolean $z0;
        java.lang.StringIndexOutOfBoundsException $r6;
        com.hp.hpl.jena.rdf.arp.impl.Taint r2;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23;
        java.lang.String $r1, $r3, $r4, $r5, $r7;
        char $c0;

        r0 := @this: com.hp.hpl.jena.rdf.arp.impl.QNameLexer;

        r2 := @parameter0: com.hp.hpl.jena.rdf.arp.impl.Taint;

     label01:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.lang.String getLocalName()>();

        $c0 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

     label02:
        goto label05;

     label03:
        $r6 := @caughtexception;

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.lang.String getUri()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2000/xmlns/");

        if $z0 == 0 goto label04;

        $i22 = (int) 32768;

        return $i22;

     label04:
        throw $r6;

     label05:
        $i23 = (int) $c0;

        tableswitch($i23)
        {
            case 68: goto label28;
            case 69: goto label29;
            case 70: goto label29;
            case 71: goto label29;
            case 72: goto label29;
            case 73: goto label16;
            case 74: goto label29;
            case 75: goto label29;
            case 76: goto label29;
            case 77: goto label29;
            case 78: goto label29;
            case 79: goto label29;
            case 80: goto label29;
            case 81: goto label29;
            case 82: goto label24;
            case 83: goto label29;
            case 84: goto label29;
            case 85: goto label29;
            case 86: goto label29;
            case 87: goto label29;
            case 88: goto label29;
            case 89: goto label29;
            case 90: goto label29;
            case 91: goto label29;
            case 92: goto label29;
            case 93: goto label29;
            case 94: goto label29;
            case 95: goto label29;
            case 96: goto label29;
            case 97: goto label18;
            case 98: goto label06;
            case 99: goto label29;
            case 100: goto label25;
            case 101: goto label29;
            case 102: goto label29;
            case 103: goto label29;
            case 104: goto label29;
            case 105: goto label15;
            case 106: goto label29;
            case 107: goto label29;
            case 108: goto label10;
            case 109: goto label29;
            case 110: goto label17;
            case 111: goto label29;
            case 112: goto label27;
            case 113: goto label29;
            case 114: goto label23;
            case 115: goto label14;
            case 116: goto label26;
            default: goto label29;
        };

     label06:
        $r4 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.lang.String getLocalName()>();

        $i11 = virtualinvoke $r4.<java.lang.String: int length()>();

        lookupswitch($i11)
        {
            case 4: goto label07;
            case 5: goto label08;
            default: goto label09;
        };

     label07:
        $i13 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: int xml(java.lang.String,int)>("base", 1);

        return $i13;

     label08:
        $i12 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: int rdf(com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String,int)>(r2, "bagID", 16384);

        return $i12;

     label09:
        goto label29;

     label10:
        $r3 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.lang.String getLocalName()>();

        $i6 = virtualinvoke $r3.<java.lang.String: int length()>();

        lookupswitch($i6)
        {
            case 2: goto label11;
            case 4: goto label12;
            default: goto label13;
        };

     label11:
        $i8 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: int rdf(com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String,int)>(r2, "li", 2048);

        return $i8;

     label12:
        $i7 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: int xml(java.lang.String,int)>("lang", 2);

        return $i7;

     label13:
        goto label29;

     label14:
        $i2 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: int xml(java.lang.String,int)>("space", 4);

        return $i2;

     label15:
        $i9 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: int xml(java.lang.String,int)>("id", 4);

        return $i9;

     label16:
        $i19 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: int rdf(com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String,int)>(r2, "ID", 8);

        return $i19;

     label17:
        $i5 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: int rdf(com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String,int)>(r2, "nodeID", 32);

        return $i5;

     label18:
        $r5 = virtualinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.lang.String getLocalName()>();

        $i14 = virtualinvoke $r5.<java.lang.String: int length()>();

        lookupswitch($i14)
        {
            case 5: goto label19;
            case 9: goto label20;
            case 15: goto label21;
            default: goto label22;
        };

     label19:
        $i17 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: int rdf(com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String,int)>(r2, "about", 16);

        return $i17;

     label20:
        $i16 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: int rdf(com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String,int)>(r2, "aboutEach", 1024);

        return $i16;

     label21:
        $i15 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: int rdf(com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String,int)>(r2, "aboutEachPrefix", 1024);

        return $i15;

     label22:
        goto label29;

     label23:
        $i3 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: int rdf(com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String,int)>(r2, "resource", 64);

        return $i3;

     label24:
        $i18 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: int rdf(com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String,int)>(r2, "RDF", 4096);

        return $i18;

     label25:
        $i10 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: int rdf(com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String,int)>(r2, "datatype", 256);

        return $i10;

     label26:
        $i1 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: int rdf(com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String,int)>(r2, "type", 512);

        return $i1;

     label27:
        $i4 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: int rdf(com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String,int)>(r2, "parseType", 128);

        return $i4;

     label28:
        $i20 = specialinvoke r0.<com.hp.hpl.jena.rdf.arp.impl.QNameLexer: int rdf(com.hp.hpl.jena.rdf.arp.impl.Taint,java.lang.String,int)>(r2, "Description", 8192);

        return $i20;

     label29:
        return 0;

        catch java.lang.StringIndexOutOfBoundsException from label01 to label02 with label03;
    }

    protected static boolean isMemberProperty(java.lang.String)
    {
        java.lang.NumberFormatException $r2, $r3;
        java.math.BigInteger $r4;
        java.lang.String r0, $r1;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("_");

        if $z0 == 0 goto label8;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        $z1 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("0");

        if $z2 == 0 goto label2;

     label1:
        return 0;

     label2:
        staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label3:
        return 1;

     label4:
        $r3 := @caughtexception;

     label5:
        $r4 = new java.math.BigInteger;

        specialinvoke $r4.<java.math.BigInteger: void <init>(java.lang.String)>($r1);

     label6:
        return 1;

     label7:
        $r2 := @caughtexception;

        return 0;

     label8:
        return 0;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
        catch java.lang.NumberFormatException from label5 to label6 with label7;
    }

    public static boolean isKnownRDFProperty(java.lang.String)
    {
        java.util.Set $r1;
        java.lang.String r0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.util.Set knownRDFProperties>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <com.hp.hpl.jena.rdf.arp.impl.QNameLexer: boolean isMemberProperty(java.lang.String)>(r0);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public static boolean isKnownNonMemberRDFProperty(java.lang.String)
    {
        java.util.Set $r1;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.util.Set knownRDFProperties>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>(r0);

        return $z0;
    }

    static void <clinit>()
    {
        java.util.HashSet $r0;
        java.util.Set $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        <com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.util.Set knownRDFProperties> = $r0;

        $r1 = <com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.util.Set knownRDFProperties>;

        <com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.util.Set knownRDFTypes> = $r1;

        $r2 = <com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.util.Set knownRDFTypes>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>("Bag");

        $r3 = <com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.util.Set knownRDFTypes>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>("Seq");

        $r4 = <com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.util.Set knownRDFTypes>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>("Alt");

        $r5 = <com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.util.Set knownRDFTypes>;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>("List");

        $r6 = <com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.util.Set knownRDFTypes>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>("XMLLiteral");

        $r7 = <com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.util.Set knownRDFTypes>;

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>("Property");

        $r8 = <com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.util.Set knownRDFProperties>;

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>("type");

        $r9 = <com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.util.Set knownRDFTypes>;

        interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>("Statement");

        $r10 = <com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.util.Set knownRDFProperties>;

        interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>("subject");

        $r11 = <com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.util.Set knownRDFProperties>;

        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>("predicate");

        $r12 = <com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.util.Set knownRDFProperties>;

        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>("object");

        $r13 = <com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.util.Set knownRDFProperties>;

        interfaceinvoke $r13.<java.util.Set: boolean add(java.lang.Object)>("value");

        $r14 = <com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.util.Set knownRDFProperties>;

        interfaceinvoke $r14.<java.util.Set: boolean add(java.lang.Object)>("first");

        $r15 = <com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.util.Set knownRDFProperties>;

        interfaceinvoke $r15.<java.util.Set: boolean add(java.lang.Object)>("rest");

        $r16 = <com.hp.hpl.jena.rdf.arp.impl.QNameLexer: java.util.Set knownRDFProperties>;

        interfaceinvoke $r16.<java.util.Set: boolean add(java.lang.Object)>("nil");

        return;
    }
}
