class org.apache.lucene.index.DocumentsWriterPerThread extends java.lang.Object
{
    static final org.apache.lucene.index.DocumentsWriterPerThread$IndexingChain defaultIndexingChain;
    private static final boolean INFO_VERBOSE;
    final org.apache.lucene.index.DocumentsWriter parent;
    final org.apache.lucene.codecs.Codec codec;
    final org.apache.lucene.index.IndexWriter writer;
    final org.apache.lucene.store.TrackingDirectoryWrapper directory;
    final org.apache.lucene.store.Directory directoryOrig;
    final org.apache.lucene.index.DocumentsWriterPerThread$DocState docState;
    final org.apache.lucene.index.DocConsumer consumer;
    final org.apache.lucene.util.Counter bytesUsed;
    org.apache.lucene.index.SegmentWriteState flushState;
    org.apache.lucene.index.BufferedDeletes pendingDeletes;
    org.apache.lucene.index.SegmentInfo segmentInfo;
    boolean aborting;
    boolean hasAborted;
    private org.apache.lucene.index.FieldInfos$Builder fieldInfos;
    private final org.apache.lucene.util.InfoStream infoStream;
    private int numDocsInRAM;
    private int flushedDocCount;
    org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue;
    org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice deleteSlice;
    private final java.text.NumberFormat nf;
    final org.apache.lucene.util.ByteBlockPool$Allocator byteBlockAllocator;
    final org.apache.lucene.util.IntBlockPool$Allocator intBlockAllocator;
    static final int BYTE_BLOCK_NOT_MASK;
    static final int MAX_TERM_LENGTH_UTF8;
    static final boolean $assertionsDisabled;

    void abort()
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice $r5;
        java.lang.Throwable $r9, $r12;
        org.apache.lucene.index.BufferedDeletes $r3;
        org.apache.lucene.index.DocumentsWriterDeleteQueue $r4;
        org.apache.lucene.index.DocumentsWriterPerThread r0;
        boolean $z0, $z1, $z2;
        org.apache.lucene.util.InfoStream $r1, $r6, $r7, $r8, $r10, $r11;
        org.apache.lucene.index.DocConsumer $r2;

        r0 := @this: org.apache.lucene.index.DocumentsWriterPerThread;

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: boolean aborting> = 1;

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: boolean hasAborted> = 1;

     label01:
        $r1 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DWPT");

        if $z0 == 0 goto label02;

        $r8 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream>;

        virtualinvoke $r8.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DWPT", "now abort");

     label02:
        $r2 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocConsumer consumer>;

        virtualinvoke $r2.<org.apache.lucene.index.DocConsumer: void abort()>();

     label03:
        goto label05;

     label04:
        $r12 := @caughtexception;

     label05:
        $r3 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.BufferedDeletes pendingDeletes>;

        virtualinvoke $r3.<org.apache.lucene.index.BufferedDeletes: void clear()>();

        $r4 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        $r5 = virtualinvoke $r4.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice newSlice()>();

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice deleteSlice> = $r5;

        specialinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThread: void doAfterFlush()>();

     label06:
        r0.<org.apache.lucene.index.DocumentsWriterPerThread: boolean aborting> = 0;

        $r6 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream>;

        $z1 = virtualinvoke $r6.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DWPT");

        if $z1 == 0 goto label10;

        $r7 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream>;

        virtualinvoke $r7.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DWPT", "done abort");

        goto label10;

     label07:
        $r9 := @caughtexception;

     label08:
        r0.<org.apache.lucene.index.DocumentsWriterPerThread: boolean aborting> = 0;

        $r10 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream>;

        $z2 = virtualinvoke $r10.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DWPT");

        if $z2 == 0 goto label09;

        $r11 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream>;

        virtualinvoke $r11.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DWPT", "done abort");

     label09:
        throw $r9;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label01 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public void <init>(org.apache.lucene.store.Directory, org.apache.lucene.index.DocumentsWriter, org.apache.lucene.index.FieldInfos$Builder, org.apache.lucene.index.DocumentsWriterPerThread$IndexingChain)
    {
        org.apache.lucene.index.BufferedDeletes $r19;
        org.apache.lucene.index.LiveIndexWriterConfig $r14;
        org.apache.lucene.index.FieldInfos$Builder r6;
        java.text.NumberFormat $r2;
        org.apache.lucene.index.DocumentsWriter r5;
        java.util.Locale $r1;
        org.apache.lucene.store.Directory r3;
        org.apache.lucene.search.similarities.Similarity $r15;
        org.apache.lucene.index.DocumentsWriterPerThread$DocState $r10, $r13;
        org.apache.lucene.index.DocumentsWriterPerThread r0;
        org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator $r17;
        org.apache.lucene.index.DocumentsWriterPerThread$IntBlockAllocator $r20;
        org.apache.lucene.index.DocumentsWriterPerThread$IndexingChain r22;
        org.apache.lucene.index.IndexWriter $r7, $r12;
        org.apache.lucene.util.InfoStream $r8, $r11;
        org.apache.lucene.util.Counter $r16, $r18, $r21;
        org.apache.lucene.codecs.Codec $r9;
        org.apache.lucene.store.TrackingDirectoryWrapper $r4;
        org.apache.lucene.index.DocConsumer $r23;

        r0 := @this: org.apache.lucene.index.DocumentsWriterPerThread;

        r3 := @parameter0: org.apache.lucene.store.Directory;

        r5 := @parameter1: org.apache.lucene.index.DocumentsWriter;

        r6 := @parameter2: org.apache.lucene.index.FieldInfos$Builder;

        r22 := @parameter3: org.apache.lucene.index.DocumentsWriterPerThread$IndexingChain;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: boolean aborting> = 0;

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: boolean hasAborted> = 0;

        $r1 = <java.util.Locale: java.util.Locale ROOT>;

        $r2 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale)>($r1);

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: java.text.NumberFormat nf> = $r2;

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.store.Directory directoryOrig> = r3;

        $r4 = new org.apache.lucene.store.TrackingDirectoryWrapper;

        specialinvoke $r4.<org.apache.lucene.store.TrackingDirectoryWrapper: void <init>(org.apache.lucene.store.Directory)>(r3);

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.store.TrackingDirectoryWrapper directory> = $r4;

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriter parent> = r5;

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.FieldInfos$Builder fieldInfos> = r6;

        $r7 = r5.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.IndexWriter indexWriter>;

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.IndexWriter writer> = $r7;

        $r8 = r5.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.util.InfoStream infoStream>;

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream> = $r8;

        $r9 = r5.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.codecs.Codec codec>;

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.codecs.Codec codec> = $r9;

        $r10 = new org.apache.lucene.index.DocumentsWriterPerThread$DocState;

        $r11 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream>;

        specialinvoke $r10.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: void <init>(org.apache.lucene.index.DocumentsWriterPerThread,org.apache.lucene.util.InfoStream)>(r0, $r11);

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState> = $r10;

        $r13 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $r12 = r5.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.IndexWriter indexWriter>;

        $r14 = virtualinvoke $r12.<org.apache.lucene.index.IndexWriter: org.apache.lucene.index.LiveIndexWriterConfig getConfig()>();

        $r15 = virtualinvoke $r14.<org.apache.lucene.index.LiveIndexWriterConfig: org.apache.lucene.search.similarities.Similarity getSimilarity()>();

        $r13.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: org.apache.lucene.search.similarities.Similarity similarity> = $r15;

        $r16 = staticinvoke <org.apache.lucene.util.Counter: org.apache.lucene.util.Counter newCounter()>();

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.Counter bytesUsed> = $r16;

        $r17 = new org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator;

        $r18 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.Counter bytesUsed>;

        specialinvoke $r17.<org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator: void <init>(org.apache.lucene.util.Counter)>($r18);

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.ByteBlockPool$Allocator byteBlockAllocator> = $r17;

        $r19 = new org.apache.lucene.index.BufferedDeletes;

        specialinvoke $r19.<org.apache.lucene.index.BufferedDeletes: void <init>()>();

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.BufferedDeletes pendingDeletes> = $r19;

        $r20 = new org.apache.lucene.index.DocumentsWriterPerThread$IntBlockAllocator;

        $r21 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.Counter bytesUsed>;

        specialinvoke $r20.<org.apache.lucene.index.DocumentsWriterPerThread$IntBlockAllocator: void <init>(org.apache.lucene.util.Counter)>($r21);

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.IntBlockPool$Allocator intBlockAllocator> = $r20;

        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThread: void initialize()>();

        $r23 = virtualinvoke r22.<org.apache.lucene.index.DocumentsWriterPerThread$IndexingChain: org.apache.lucene.index.DocConsumer getChain(org.apache.lucene.index.DocumentsWriterPerThread)>(r0);

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocConsumer consumer> = $r23;

        return;
    }

    public void <init>(org.apache.lucene.index.DocumentsWriterPerThread, org.apache.lucene.index.FieldInfos$Builder)
    {
        org.apache.lucene.store.Directory $r6;
        org.apache.lucene.index.FieldInfos$Builder r2;
        org.apache.lucene.index.DocumentsWriterPerThread r0, r1;
        org.apache.lucene.index.DocumentsWriter $r3, $r5;
        org.apache.lucene.index.DocumentsWriterPerThread$IndexingChain $r4;

        r0 := @this: org.apache.lucene.index.DocumentsWriterPerThread;

        r1 := @parameter0: org.apache.lucene.index.DocumentsWriterPerThread;

        r2 := @parameter1: org.apache.lucene.index.FieldInfos$Builder;

        $r6 = r1.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.store.Directory directoryOrig>;

        $r5 = r1.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriter parent>;

        $r3 = r1.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriter parent>;

        $r4 = $r3.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterPerThread$IndexingChain chain>;

        specialinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThread: void <init>(org.apache.lucene.store.Directory,org.apache.lucene.index.DocumentsWriter,org.apache.lucene.index.FieldInfos$Builder,org.apache.lucene.index.DocumentsWriterPerThread$IndexingChain)>($r6, $r5, r2, $r4);

        return;
    }

    void initialize()
    {
        org.apache.lucene.index.BufferedDeletes $r3;
        org.apache.lucene.index.DocumentsWriterDeleteQueue $r2;
        java.lang.AssertionError $r4;
        org.apache.lucene.index.DocumentsWriter $r1;
        int $i0, $i1;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;
        org.apache.lucene.index.DocumentsWriterPerThread r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterPerThread;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriter parent>;

        $r2 = $r1.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue> = $r2;

        $z0 = <org.apache.lucene.index.DocumentsWriterPerThread: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i0 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM>;

        if $i0 == 0 goto label1;

        $r4 = new java.lang.AssertionError;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("num docs ");

        $i1 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r4;

     label1:
        $r3 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.BufferedDeletes pendingDeletes>;

        virtualinvoke $r3.<org.apache.lucene.index.BufferedDeletes: void clear()>();

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice deleteSlice> = null;

        return;
    }

    void setAborting()
    {
        org.apache.lucene.index.DocumentsWriterPerThread r0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterPerThread;

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: boolean aborting> = 1;

        return;
    }

    boolean checkAndResetHasAborted()
    {
        org.apache.lucene.index.DocumentsWriterPerThread r0;
        boolean z0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterPerThread;

        z0 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: boolean hasAborted>;

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: boolean hasAborted> = 0;

        return z0;
    }

    public void updateDocument(java.lang.Iterable, org.apache.lucene.analysis.Analyzer, org.apache.lucene.index.Term) throws java.io.IOException
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue $r12;
        org.apache.lucene.index.FieldInfos$Builder $r7;
        org.apache.lucene.index.Term r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.lucene.index.SegmentInfo $r6;
        org.apache.lucene.index.IndexWriter $r14;
        java.lang.Throwable $r16, $r17, $r19;
        java.lang.AssertionError $r13, $r15;
        java.lang.Iterable r1;
        org.apache.lucene.index.DocumentsWriterPerThread$DocState $r2, $r4, $r5, $r9, $r11, $r18, $r20;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.lucene.index.DocumentsWriterPerThread r0;
        org.apache.lucene.analysis.Analyzer r3;
        org.apache.lucene.index.DocConsumer $r8, $r21;

        r0 := @this: org.apache.lucene.index.DocumentsWriterPerThread;

        r1 := @parameter0: java.lang.Iterable;

        r3 := @parameter1: org.apache.lucene.analysis.Analyzer;

        r10 := @parameter2: org.apache.lucene.index.Term;

        $z0 = <org.apache.lucene.index.DocumentsWriterPerThread: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $r14 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.IndexWriter writer>;

        $z3 = virtualinvoke $r14.<org.apache.lucene.index.IndexWriter: boolean testPoint(java.lang.String)>("DocumentsWriterPerThread addDocument start");

        if $z3 != 0 goto label01;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label01:
        $z1 = <org.apache.lucene.index.DocumentsWriterPerThread: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $r12 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        if $r12 != null goto label02;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label02:
        $r2 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $r2.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: java.lang.Iterable doc> = r1;

        $r4 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $r4.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: org.apache.lucene.analysis.Analyzer analyzer> = r3;

        $r5 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $i0 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM>;

        $r5.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: int docID> = $i0;

        $r6 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentInfo segmentInfo>;

        if $r6 != null goto label03;

        specialinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThread: void initSegmentInfo()>();

     label03:
        $r8 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocConsumer consumer>;

        $r7 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.FieldInfos$Builder fieldInfos>;

        virtualinvoke $r8.<org.apache.lucene.index.DocConsumer: void processDocument(org.apache.lucene.index.FieldInfos$Builder)>($r7);

     label04:
        $r9 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        virtualinvoke $r9.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: void clear()>();

        goto label07;

     label05:
        $r19 := @caughtexception;

     label06:
        $r20 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        virtualinvoke $r20.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: void clear()>();

        throw $r19;

     label07:
        if 1 != 0 goto label13;

        $z2 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: boolean aborting>;

        if $z2 != 0 goto label08;

        $r11 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $i1 = $r11.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: int docID>;

        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThread: void deleteDocID(int)>($i1);

        $i2 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM>;

        $i3 = $i2 + 1;

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM> = $i3;

        goto label13;

     label08:
        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThread: void abort()>();

        goto label13;

     label09:
        $r17 := @caughtexception;

     label10:
        if 0 != 0 goto label12;

        $z4 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: boolean aborting>;

        if $z4 != 0 goto label11;

        $r18 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $i4 = $r18.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: int docID>;

        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThread: void deleteDocID(int)>($i4);

        $i5 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM>;

        $i6 = $i5 + 1;

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM> = $i6;

        goto label12;

     label11:
        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThread: void abort()>();

     label12:
        throw $r17;

     label13:
        $r21 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocConsumer consumer>;

        virtualinvoke $r21.<org.apache.lucene.index.DocConsumer: void finishDocument()>();

     label14:
        if 1 != 0 goto label18;

        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThread: void abort()>();

        goto label18;

     label15:
        $r16 := @caughtexception;

     label16:
        if 0 != 0 goto label17;

        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThread: void abort()>();

     label17:
        throw $r16;

     label18:
        specialinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThread: void finishDocument(org.apache.lucene.index.Term)>(r10);

        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label03 to label07 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    private void initSegmentInfo()
    {
        org.apache.lucene.index.SegmentInfo $r8;
        java.lang.AssertionError $r9;
        org.apache.lucene.index.IndexWriter $r1;
        org.apache.lucene.codecs.Codec $r4;
        org.apache.lucene.store.Directory $r6;
        int $i0, $i2;
        java.lang.String $r2, $r5;
        org.apache.lucene.index.DocumentsWriterPerThread r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterPerThread;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.IndexWriter writer>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.IndexWriter: java.lang.String newSegmentName()>();

        $r8 = new org.apache.lucene.index.SegmentInfo;

        $r6 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.store.Directory directoryOrig>;

        $r5 = <org.apache.lucene.util.Constants: java.lang.String LUCENE_MAIN_VERSION>;

        $r4 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.codecs.Codec codec>;

        $i2 = (int) -1;

        specialinvoke $r8.<org.apache.lucene.index.SegmentInfo: void <init>(org.apache.lucene.store.Directory,java.lang.String,java.lang.String,int,boolean,org.apache.lucene.codecs.Codec,java.util.Map,java.util.Map)>($r6, $r5, $r2, $i2, 0, $r4, null, null);

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentInfo segmentInfo> = $r8;

        $z0 = <org.apache.lucene.index.DocumentsWriterPerThread: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i0 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM>;

        if $i0 == 0 goto label1;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label1:
        return;
    }

    public int updateDocuments(java.lang.Iterable, org.apache.lucene.analysis.Analyzer, org.apache.lucene.index.Term) throws java.io.IOException
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice $r7, $r10, $r11;
        org.apache.lucene.index.BufferedDeletes $r9;
        org.apache.lucene.index.DocumentsWriterDeleteQueue $r8, $r18;
        org.apache.lucene.index.Term r6;
        org.apache.lucene.index.FieldInfos$Builder $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, $z10;
        org.apache.lucene.index.SegmentInfo $r3;
        org.apache.lucene.index.IndexWriter $r20;
        java.lang.Throwable $r22, $r23, $r24;
        java.lang.AssertionError $r29, $r30, $r31;
        java.lang.Iterable r4, r25;
        org.apache.lucene.index.DocumentsWriterPerThread$DocState $r2, $r14, $r15, $r27, $r28;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, i10, i11, i12, i13, $i15, $i17;
        org.apache.lucene.index.DocumentsWriterPerThread r0;
        java.util.Iterator $r5;
        org.apache.lucene.analysis.Analyzer r1;
        java.lang.Object $r13;
        org.apache.lucene.index.DocConsumer $r17, $r26;

        r0 := @this: org.apache.lucene.index.DocumentsWriterPerThread;

        r4 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: org.apache.lucene.analysis.Analyzer;

        r6 := @parameter2: org.apache.lucene.index.Term;

        $z0 = <org.apache.lucene.index.DocumentsWriterPerThread: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $r20 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.IndexWriter writer>;

        $z6 = virtualinvoke $r20.<org.apache.lucene.index.IndexWriter: boolean testPoint(java.lang.String)>("DocumentsWriterPerThread addDocuments start");

        if $z6 != 0 goto label01;

        $r29 = new java.lang.AssertionError;

        specialinvoke $r29.<java.lang.AssertionError: void <init>()>();

        throw $r29;

     label01:
        $z1 = <org.apache.lucene.index.DocumentsWriterPerThread: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $r18 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        if $r18 != null goto label02;

        $r30 = new java.lang.AssertionError;

        specialinvoke $r30.<java.lang.AssertionError: void <init>()>();

        throw $r30;

     label02:
        $r2 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $r2.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: org.apache.lucene.analysis.Analyzer analyzer> = r1;

        $r3 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentInfo segmentInfo>;

        if $r3 != null goto label03;

        specialinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThread: void initSegmentInfo()>();

     label03:
        i10 = 0;

        z9 = 0;

     label04:
        $r5 = interfaceinvoke r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label05:
        $z10 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label19;

        $r13 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r25 = (java.lang.Iterable) $r13;

        $r14 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $r14.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: java.lang.Iterable doc> = r25;

        $r15 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        $i3 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM>;

        $r15.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: int docID> = $i3;

        i10 = i10 + 1;

     label06:
        $r17 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocConsumer consumer>;

        $r16 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.FieldInfos$Builder fieldInfos>;

        virtualinvoke $r17.<org.apache.lucene.index.DocConsumer: void processDocument(org.apache.lucene.index.FieldInfos$Builder)>($r16);

     label07:
        if 1 != 0 goto label13;

        $z5 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: boolean aborting>;

        if $z5 != 0 goto label08;

        $i4 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM>;

        $i5 = $i4 + 1;

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM> = $i5;

        goto label13;

     label08:
        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThread: void abort()>();

        goto label13;

     label09:
        $r24 := @caughtexception;

     label10:
        if 0 != 0 goto label12;

        $z8 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: boolean aborting>;

        if $z8 != 0 goto label11;

        $i8 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM>;

        $i9 = $i8 + 1;

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM> = $i9;

        goto label12;

     label11:
        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThread: void abort()>();

     label12:
        throw $r24;

     label13:
        $r26 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocConsumer consumer>;

        virtualinvoke $r26.<org.apache.lucene.index.DocConsumer: void finishDocument()>();

     label14:
        if 1 != 0 goto label18;

        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThread: void abort()>();

        goto label18;

     label15:
        $r23 := @caughtexception;

     label16:
        if 0 != 0 goto label17;

        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThread: void abort()>();

     label17:
        throw $r23;

     label18:
        specialinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThread: void finishDocument(org.apache.lucene.index.Term)>(null);

        goto label05;

     label19:
        z9 = 1;

        if r6 == null goto label21;

        $r8 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        $r7 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice deleteSlice>;

        virtualinvoke $r8.<org.apache.lucene.index.DocumentsWriterDeleteQueue: void add(org.apache.lucene.index.Term,org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice)>(r6, $r7);

        $z3 = <org.apache.lucene.index.DocumentsWriterPerThread: boolean $assertionsDisabled>;

        if $z3 != 0 goto label20;

        $r11 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice deleteSlice>;

        $z4 = virtualinvoke $r11.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: boolean isTailItem(java.lang.Object)>(r6);

        if $z4 != 0 goto label20;

        $r31 = new java.lang.AssertionError;

        specialinvoke $r31.<java.lang.AssertionError: void <init>(java.lang.Object)>("expected the delete term as the tail item");

        throw $r31;

     label20:
        $r10 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice deleteSlice>;

        $r9 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.BufferedDeletes pendingDeletes>;

        $i1 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM>;

        $i2 = $i1 - i10;

        virtualinvoke $r10.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: void apply(org.apache.lucene.index.BufferedDeletes,int)>($r9, $i2);

     label21:
        if 1 != 0 goto label23;

        $z2 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: boolean aborting>;

        if $z2 != 0 goto label23;

        $i0 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM>;

        i11 = $i0 - 1;

        i12 = i11 - i10;

     label22:
        if i11 <= i12 goto label23;

        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThread: void deleteDocID(int)>(i11);

        $i15 = (int) -1;

        i11 = i11 + $i15;

        goto label22;

     label23:
        $r27 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        virtualinvoke $r27.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: void clear()>();

        goto label28;

     label24:
        $r22 := @caughtexception;

     label25:
        if z9 != 0 goto label27;

        $z7 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: boolean aborting>;

        if $z7 != 0 goto label27;

        $i6 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM>;

        i13 = $i6 - 1;

        i7 = i13 - i10;

     label26:
        if i13 <= i7 goto label27;

        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThread: void deleteDocID(int)>(i13);

        $i17 = (int) -1;

        i13 = i13 + $i17;

        goto label26;

     label27:
        $r28 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterPerThread$DocState docState>;

        virtualinvoke $r28.<org.apache.lucene.index.DocumentsWriterPerThread$DocState: void clear()>();

        throw $r22;

     label28:
        return i10;

        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
        catch java.lang.Throwable from label04 to label21 with label24;
        catch java.lang.Throwable from label24 to label25 with label24;
    }

    private void finishDocument(org.apache.lucene.index.Term)
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice $r1, $r3, $r6, $r7, $r10, $r11, $r14, $r15, $r17;
        org.apache.lucene.index.BufferedDeletes $r5, $r9;
        org.apache.lucene.index.DocumentsWriterDeleteQueue $r4, $r8, $r13, $r16;
        org.apache.lucene.index.Term r2;
        java.lang.AssertionError $r12;
        int $i0, $i1, $i2, $i3;
        org.apache.lucene.index.DocumentsWriterPerThread r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.index.DocumentsWriterPerThread;

        r2 := @parameter0: org.apache.lucene.index.Term;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice deleteSlice>;

        if $r1 != null goto label1;

        $r13 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        $r14 = virtualinvoke $r13.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice newSlice()>();

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice deleteSlice> = $r14;

        if r2 == null goto label4;

        $r16 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        $r15 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice deleteSlice>;

        virtualinvoke $r16.<org.apache.lucene.index.DocumentsWriterDeleteQueue: void add(org.apache.lucene.index.Term,org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice)>(r2, $r15);

        $r17 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice deleteSlice>;

        virtualinvoke $r17.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: void reset()>();

        goto label4;

     label1:
        if r2 == null goto label3;

        $r8 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        $r7 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice deleteSlice>;

        virtualinvoke $r8.<org.apache.lucene.index.DocumentsWriterDeleteQueue: void add(org.apache.lucene.index.Term,org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice)>(r2, $r7);

        $z1 = <org.apache.lucene.index.DocumentsWriterPerThread: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r11 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice deleteSlice>;

        $z2 = virtualinvoke $r11.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: boolean isTailItem(java.lang.Object)>(r2);

        if $z2 != 0 goto label2;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>(java.lang.Object)>("expected the delete term as the tail item");

        throw $r12;

     label2:
        $r10 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice deleteSlice>;

        $r9 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.BufferedDeletes pendingDeletes>;

        $i1 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM>;

        virtualinvoke $r10.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: void apply(org.apache.lucene.index.BufferedDeletes,int)>($r9, $i1);

        goto label4;

     label3:
        $r4 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        $r3 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice deleteSlice>;

        $z0 = virtualinvoke $r4.<org.apache.lucene.index.DocumentsWriterDeleteQueue: boolean updateSlice(org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice)>($r3);

        if $z0 == 0 goto label4;

        $r6 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice deleteSlice>;

        $r5 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.BufferedDeletes pendingDeletes>;

        $i0 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM>;

        virtualinvoke $r6.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: void apply(org.apache.lucene.index.BufferedDeletes,int)>($r5, $i0);

     label4:
        $i2 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM>;

        $i3 = $i2 + 1;

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM> = $i3;

        return;
    }

    void deleteDocID(int)
    {
        int i0;
        org.apache.lucene.index.BufferedDeletes $r1;
        org.apache.lucene.index.DocumentsWriterPerThread r0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterPerThread;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.BufferedDeletes pendingDeletes>;

        virtualinvoke $r1.<org.apache.lucene.index.BufferedDeletes: void addDocID(int)>(i0);

        return;
    }

    public int numDeleteTerms()
    {
        org.apache.lucene.index.BufferedDeletes $r1;
        java.util.concurrent.atomic.AtomicInteger $r2;
        int $i0;
        org.apache.lucene.index.DocumentsWriterPerThread r0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterPerThread;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.BufferedDeletes pendingDeletes>;

        $r2 = $r1.<org.apache.lucene.index.BufferedDeletes: java.util.concurrent.atomic.AtomicInteger numTermDeletes>;

        $i0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        return $i0;
    }

    public int getNumDocsInRAM()
    {
        int $i0;
        org.apache.lucene.index.DocumentsWriterPerThread r0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterPerThread;

        $i0 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM>;

        return $i0;
    }

    private void doAfterFlush()
    {
        org.apache.lucene.index.FieldInfos$Builder $r4, $r5;
        java.util.Set $r3;
        org.apache.lucene.index.DocumentsWriter $r7;
        org.apache.lucene.index.FieldInfos$FieldNumbers $r6;
        int $i0;
        org.apache.lucene.store.TrackingDirectoryWrapper $r2;
        org.apache.lucene.index.DocumentsWriterPerThread r0;
        org.apache.lucene.index.DocConsumer $r1;

        r0 := @this: org.apache.lucene.index.DocumentsWriterPerThread;

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentInfo segmentInfo> = null;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocConsumer consumer>;

        virtualinvoke $r1.<org.apache.lucene.index.DocConsumer: void doAfterFlush()>();

        $r2 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.store.TrackingDirectoryWrapper directory>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.store.TrackingDirectoryWrapper: java.util.Set getCreatedFiles()>();

        interfaceinvoke $r3.<java.util.Set: void clear()>();

        $r4 = new org.apache.lucene.index.FieldInfos$Builder;

        $r5 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.FieldInfos$Builder fieldInfos>;

        $r6 = $r5.<org.apache.lucene.index.FieldInfos$Builder: org.apache.lucene.index.FieldInfos$FieldNumbers globalFieldNumbers>;

        specialinvoke $r4.<org.apache.lucene.index.FieldInfos$Builder: void <init>(org.apache.lucene.index.FieldInfos$FieldNumbers)>($r6);

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.FieldInfos$Builder fieldInfos> = $r4;

        $r7 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriter parent>;

        $i0 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM>;

        virtualinvoke $r7.<org.apache.lucene.index.DocumentsWriter: void subtractFlushedNumDocs(int)>($i0);

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM> = 0;

        return;
    }

    org.apache.lucene.index.FrozenBufferedDeletes prepareFlush()
    {
        org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice $r1, $r4, $r6, $r7;
        org.apache.lucene.index.BufferedDeletes $r5;
        org.apache.lucene.index.DocumentsWriterDeleteQueue $r2;
        java.lang.AssertionError $r8, $r9;
        org.apache.lucene.index.FrozenBufferedDeletes $r3;
        int $i0, $i1;
        org.apache.lucene.index.DocumentsWriterPerThread r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.index.DocumentsWriterPerThread;

        $z0 = <org.apache.lucene.index.DocumentsWriterPerThread: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i1 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM>;

        if $i1 > 0 goto label1;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label1:
        $r2 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice deleteSlice>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.DocumentsWriterDeleteQueue: org.apache.lucene.index.FrozenBufferedDeletes freezeGlobalBuffer(org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice)>($r1);

        $r4 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice deleteSlice>;

        if $r4 == null goto label3;

        $r6 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice deleteSlice>;

        $r5 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.BufferedDeletes pendingDeletes>;

        $i0 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM>;

        virtualinvoke $r6.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: void apply(org.apache.lucene.index.BufferedDeletes,int)>($r5, $i0);

        $z1 = <org.apache.lucene.index.DocumentsWriterPerThread: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r7 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice deleteSlice>;

        $z2 = virtualinvoke $r7.<org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice: boolean isEmpty()>();

        if $z2 != 0 goto label2;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label2:
        r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice deleteSlice> = null;

     label3:
        return $r3;
    }

    org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment flush() throws java.io.IOException
    {
        org.apache.lucene.index.FieldInfos$Builder $r3;
        org.apache.lucene.index.SegmentInfoPerCommit $r26;
        java.lang.Integer $r139;
        java.util.Map $r21, $r157;
        org.apache.lucene.index.FieldInfos $r7, $r36, $r79, $r83, $r87, $r91, $r95;
        org.apache.lucene.store.IOContext $r10;
        org.apache.lucene.codecs.LiveDocsFormat $r124;
        org.apache.lucene.index.SegmentInfo $r1, $r6, $r24, $r27, $r37, $r38, $r40, $r45, $r70, $r114, $r146, $r147, $r155;
        org.apache.lucene.util.InfoStream $r4, $r17, $r28, $r30, $r43, $r65, $r76, $r99, $r105, $r111, $r120, $r121;
        java.lang.StringBuilder $r42, $r44, $r47, $r48, $r51, $r52, $r53, $r56, $r57, $r58, $r61, $r64, $r66, $r72, $r73, $r75, $r77, $r80, $r81, $r84, $r85, $r88, $r89, $r92, $r93, $r96, $r98, $r100, $r102, $r104, $r106, $r108, $r110, $r112, $r116, $r117, $r118;
        long $l3, $l4, $l7, $l18;
        java.util.concurrent.atomic.AtomicLong $r135;
        org.apache.lucene.index.DocConsumer $r19;
        org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice $r142;
        org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment $r31;
        java.util.Collection $r101;
        org.apache.lucene.index.DocumentsWriterFlushControl $r14;
        java.util.HashSet $r22;
        int $i0, $i1, $i2, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24;
        org.apache.lucene.codecs.Codec $r107, $r122;
        java.lang.Object $r138;
        java.util.Set $r25;
        java.lang.Throwable $r145;
        org.apache.lucene.index.LiveIndexWriterConfig $r9;
        java.lang.AssertionError $r41, $r143, $r144;
        java.text.NumberFormat $r49, $r54, $r59;
        java.lang.String $r46, $r50, $r55, $r60, $r62, $r74, $r97, $r103, $r109, $r115, $r119, $r149, $r150, $r151, $r152, $r153;
        org.apache.lucene.index.DocumentsWriterPerThread r0;
        org.apache.lucene.store.FlushInfo $r11;
        org.apache.lucene.index.BufferedDeletes $r12, $r15, $r20, $r29, $r63, $r126, $r129, $r132, $r133, $r136, $r156, r158;
        org.apache.lucene.index.DocumentsWriter $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z14, $z15;
        org.apache.lucene.index.IndexWriter $r8, $r39, $r148;
        java.util.List $r16, $r127, $r130, $r134, $r137;
        org.apache.lucene.util.MutableBits $r35, $r68, $r125, $r141;
        org.apache.lucene.index.SegmentWriteState $r2, $r18, $r32, $r33, $r34, $r67, $r69, $r71, $r78, $r82, $r86, $r90, $r94, $r113, $r123, $r131, $r140, $r154;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, d7;
        java.util.Iterator $r128;
        org.apache.lucene.store.TrackingDirectoryWrapper $r5, $r23;

        r0 := @this: org.apache.lucene.index.DocumentsWriterPerThread;

        $z0 = <org.apache.lucene.index.DocumentsWriterPerThread: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $i20 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM>;

        if $i20 > 0 goto label01;

        $r144 = new java.lang.AssertionError;

        specialinvoke $r144.<java.lang.AssertionError: void <init>()>();

        throw $r144;

     label01:
        $z1 = <org.apache.lucene.index.DocumentsWriterPerThread: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $r142 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue$DeleteSlice deleteSlice>;

        if $r142 == null goto label02;

        $r143 = new java.lang.AssertionError;

        specialinvoke $r143.<java.lang.AssertionError: void <init>(java.lang.Object)>("all deletes must be applied in prepareFlush");

        throw $r143;

     label02:
        $r1 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $i0 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM>;

        virtualinvoke $r1.<org.apache.lucene.index.SegmentInfo: void setDocCount(int)>($i0);

        $r2 = new org.apache.lucene.index.SegmentWriteState;

        $r4 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream>;

        $r5 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.store.TrackingDirectoryWrapper directory>;

        $r6 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $r3 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.FieldInfos$Builder fieldInfos>;

        $r7 = virtualinvoke $r3.<org.apache.lucene.index.FieldInfos$Builder: org.apache.lucene.index.FieldInfos finish()>();

        $r8 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.IndexWriter writer>;

        $r9 = virtualinvoke $r8.<org.apache.lucene.index.IndexWriter: org.apache.lucene.index.LiveIndexWriterConfig getConfig()>();

        $i1 = virtualinvoke $r9.<org.apache.lucene.index.LiveIndexWriterConfig: int getTermIndexInterval()>();

        $r12 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.BufferedDeletes pendingDeletes>;

        $r10 = new org.apache.lucene.store.IOContext;

        $r11 = new org.apache.lucene.store.FlushInfo;

        $i2 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM>;

        $l3 = virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThread: long bytesUsed()>();

        specialinvoke $r11.<org.apache.lucene.store.FlushInfo: void <init>(int,long)>($i2, $l3);

        specialinvoke $r10.<org.apache.lucene.store.IOContext: void <init>(org.apache.lucene.store.FlushInfo)>($r11);

        specialinvoke $r2.<org.apache.lucene.index.SegmentWriteState: void <init>(org.apache.lucene.util.InfoStream,org.apache.lucene.store.Directory,org.apache.lucene.index.SegmentInfo,org.apache.lucene.index.FieldInfos,int,org.apache.lucene.index.BufferedDeletes,org.apache.lucene.store.IOContext)>($r4, $r5, $r6, $r7, $i1, $r12, $r10);

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentWriteState flushState> = $r2;

        $r13 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriter parent>;

        $r14 = $r13.<org.apache.lucene.index.DocumentsWriter: org.apache.lucene.index.DocumentsWriterFlushControl flushControl>;

        $l4 = virtualinvoke $r14.<org.apache.lucene.index.DocumentsWriterFlushControl: long netBytes()>();

        $d0 = (double) $l4;

        $d1 = $d0 / 1024.0;

        $d6 = $d1 / 1024.0;

        $r15 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.BufferedDeletes pendingDeletes>;

        $r16 = $r15.<org.apache.lucene.index.BufferedDeletes: java.util.List docIDs>;

        $i5 = interfaceinvoke $r16.<java.util.List: int size()>();

        if $i5 <= 0 goto label05;

        $r123 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentWriteState flushState>;

        $r122 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.codecs.Codec codec>;

        $r124 = virtualinvoke $r122.<org.apache.lucene.codecs.Codec: org.apache.lucene.codecs.LiveDocsFormat liveDocsFormat()>();

        $i12 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM>;

        $r125 = virtualinvoke $r124.<org.apache.lucene.codecs.LiveDocsFormat: org.apache.lucene.util.MutableBits newLiveDocs(int)>($i12);

        $r123.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.util.MutableBits liveDocs> = $r125;

        $r126 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.BufferedDeletes pendingDeletes>;

        $r127 = $r126.<org.apache.lucene.index.BufferedDeletes: java.util.List docIDs>;

        $r128 = interfaceinvoke $r127.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z13 = interfaceinvoke $r128.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label04;

        $r138 = interfaceinvoke $r128.<java.util.Iterator: java.lang.Object next()>();

        $r139 = (java.lang.Integer) $r138;

        $i19 = virtualinvoke $r139.<java.lang.Integer: int intValue()>();

        $r140 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentWriteState flushState>;

        $r141 = $r140.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.util.MutableBits liveDocs>;

        interfaceinvoke $r141.<org.apache.lucene.util.MutableBits: void clear(int)>($i19);

        goto label03;

     label04:
        $r131 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentWriteState flushState>;

        $r129 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.BufferedDeletes pendingDeletes>;

        $r130 = $r129.<org.apache.lucene.index.BufferedDeletes: java.util.List docIDs>;

        $i13 = interfaceinvoke $r130.<java.util.List: int size()>();

        $r131.<org.apache.lucene.index.SegmentWriteState: int delCountOnFlush> = $i13;

        $r132 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.BufferedDeletes pendingDeletes>;

        $r135 = $r132.<org.apache.lucene.index.BufferedDeletes: java.util.concurrent.atomic.AtomicLong bytesUsed>;

        $r133 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.BufferedDeletes pendingDeletes>;

        $r134 = $r133.<org.apache.lucene.index.BufferedDeletes: java.util.List docIDs>;

        $i14 = interfaceinvoke $r134.<java.util.List: int size()>();

        $i16 = neg $i14;

        $i15 = <org.apache.lucene.index.BufferedDeletes: int BYTES_PER_DEL_DOCID>;

        $i17 = $i16 * $i15;

        $l18 = (long) $i17;

        virtualinvoke $r135.<java.util.concurrent.atomic.AtomicLong: long addAndGet(long)>($l18);

        $r136 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.BufferedDeletes pendingDeletes>;

        $r137 = $r136.<org.apache.lucene.index.BufferedDeletes: java.util.List docIDs>;

        interfaceinvoke $r137.<java.util.List: void clear()>();

     label05:
        $z2 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: boolean aborting>;

        if $z2 == 0 goto label07;

        $r120 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream>;

        $z12 = virtualinvoke $r120.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DWPT");

        if $z12 == 0 goto label06;

        $r121 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream>;

        virtualinvoke $r121.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DWPT", "flush: skip because aborting is set");

     label06:
        return null;

     label07:
        $r17 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream>;

        $z3 = virtualinvoke $r17.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DWPT");

        if $z3 == 0 goto label08;

        $r111 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream>;

        $r110 = new java.lang.StringBuilder;

        specialinvoke $r110.<java.lang.StringBuilder: void <init>()>();

        $r112 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flush postings as segment ");

        $r113 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentWriteState flushState>;

        $r114 = $r113.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $r115 = $r114.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r116 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r115);

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" numDocs=");

        $i11 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM>;

        $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r111.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DWPT", $r119);

     label08:
        z14 = 0;

     label09:
        $r19 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocConsumer consumer>;

        $r18 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentWriteState flushState>;

        virtualinvoke $r19.<org.apache.lucene.index.DocConsumer: void flush(org.apache.lucene.index.SegmentWriteState)>($r18);

        $r20 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.BufferedDeletes pendingDeletes>;

        $r21 = $r20.<org.apache.lucene.index.BufferedDeletes: java.util.Map terms>;

        interfaceinvoke $r21.<java.util.Map: void clear()>();

        $r24 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $r22 = new java.util.HashSet;

        $r23 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.store.TrackingDirectoryWrapper directory>;

        $r25 = virtualinvoke $r23.<org.apache.lucene.store.TrackingDirectoryWrapper: java.util.Set getCreatedFiles()>();

        specialinvoke $r22.<java.util.HashSet: void <init>(java.util.Collection)>($r25);

        virtualinvoke $r24.<org.apache.lucene.index.SegmentInfo: void setFiles(java.util.Set)>($r22);

        $r26 = new org.apache.lucene.index.SegmentInfoPerCommit;

        $r27 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentInfo segmentInfo>;

        specialinvoke $r26.<org.apache.lucene.index.SegmentInfoPerCommit: void <init>(org.apache.lucene.index.SegmentInfo,int,long)>($r27, 0, -1L);

        $r28 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream>;

        $z4 = virtualinvoke $r28.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DWPT");

        if $z4 == 0 goto label22;

        $r65 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream>;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new segment has ");

        $r67 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentWriteState flushState>;

        $r68 = $r67.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.util.MutableBits liveDocs>;

        if $r68 != null goto label10;

        $i21 = 0;

        goto label11;

     label10:
        $r69 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentWriteState flushState>;

        $r70 = $r69.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $i9 = virtualinvoke $r70.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $r71 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentWriteState flushState>;

        $i10 = $r71.<org.apache.lucene.index.SegmentWriteState: int delCountOnFlush>;

        $i21 = $i9 - $i10;

     label11:
        $r72 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" deleted docs");

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r65.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DWPT", $r74);

        $r76 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream>;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new segment has ");

        $r78 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentWriteState flushState>;

        $r79 = $r78.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.FieldInfos fieldInfos>;

        $z7 = virtualinvoke $r79.<org.apache.lucene.index.FieldInfos: boolean hasVectors()>();

        if $z7 == 0 goto label12;

        $r149 = "vectors";

        goto label13;

     label12:
        $r149 = "no vectors";

     label13:
        $r80 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r149);

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r82 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentWriteState flushState>;

        $r83 = $r82.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.FieldInfos fieldInfos>;

        $z8 = virtualinvoke $r83.<org.apache.lucene.index.FieldInfos: boolean hasNorms()>();

        if $z8 == 0 goto label14;

        $r150 = "norms";

        goto label15;

     label14:
        $r150 = "no norms";

     label15:
        $r84 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r150);

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r86 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentWriteState flushState>;

        $r87 = $r86.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.FieldInfos fieldInfos>;

        $z9 = virtualinvoke $r87.<org.apache.lucene.index.FieldInfos: boolean hasDocValues()>();

        if $z9 == 0 goto label16;

        $r151 = "docValues";

        goto label17;

     label16:
        $r151 = "no docValues";

     label17:
        $r88 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r151);

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r90 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentWriteState flushState>;

        $r91 = $r90.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.FieldInfos fieldInfos>;

        $z10 = virtualinvoke $r91.<org.apache.lucene.index.FieldInfos: boolean hasProx()>();

        if $z10 == 0 goto label18;

        $r152 = "prox";

        goto label19;

     label18:
        $r152 = "no prox";

     label19:
        $r92 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r152);

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r94 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentWriteState flushState>;

        $r95 = $r94.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.FieldInfos fieldInfos>;

        $z11 = virtualinvoke $r95.<org.apache.lucene.index.FieldInfos: boolean hasFreq()>();

        if $z11 == 0 goto label20;

        $r153 = "freqs";

        goto label21;

     label20:
        $r153 = "no freqs";

     label21:
        $r96 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r153);

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r76.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DWPT", $r97);

        $r99 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream>;

        $r98 = new java.lang.StringBuilder;

        specialinvoke $r98.<java.lang.StringBuilder: void <init>()>();

        $r100 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flushedFiles=");

        $r101 = virtualinvoke $r26.<org.apache.lucene.index.SegmentInfoPerCommit: java.util.Collection files()>();

        $r102 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r101);

        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r99.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DWPT", $r103);

        $r105 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream>;

        $r104 = new java.lang.StringBuilder;

        specialinvoke $r104.<java.lang.StringBuilder: void <init>()>();

        $r106 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flushed codec=");

        $r107 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.codecs.Codec codec>;

        $r108 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r107);

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r105.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DWPT", $r109);

     label22:
        $i22 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: int flushedDocCount>;

        $r154 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentWriteState flushState>;

        $r155 = $r154.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $i23 = virtualinvoke $r155.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $i24 = $i22 + $i23;

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: int flushedDocCount> = $i24;

        $r156 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.BufferedDeletes pendingDeletes>;

        $r157 = $r156.<org.apache.lucene.index.BufferedDeletes: java.util.Map queries>;

        $z15 = interfaceinvoke $r157.<java.util.Map: boolean isEmpty()>();

        if $z15 == 0 goto label23;

        $r63 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.BufferedDeletes pendingDeletes>;

        virtualinvoke $r63.<org.apache.lucene.index.BufferedDeletes: void clear()>();

        r158 = null;

        goto label24;

     label23:
        r158 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.BufferedDeletes pendingDeletes>;

        $r29 = new org.apache.lucene.index.BufferedDeletes;

        specialinvoke $r29.<org.apache.lucene.index.BufferedDeletes: void <init>()>();

        r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.BufferedDeletes pendingDeletes> = $r29;

     label24:
        $r30 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream>;

        $z5 = virtualinvoke $r30.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DWPT");

        if $z5 == 0 goto label25;

        $l7 = virtualinvoke $r26.<org.apache.lucene.index.SegmentInfoPerCommit: long sizeInBytes()>();

        $d2 = (double) $l7;

        $d3 = $d2 / 1024.0;

        d7 = $d3 / 1024.0;

        $r43 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream>;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flushed: segment=");

        $r45 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $r46 = $r45.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r47 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ramUsed=");

        $r49 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: java.text.NumberFormat nf>;

        $r50 = virtualinvoke $r49.<java.text.NumberFormat: java.lang.String format(double)>($d6);

        $r51 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" MB");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" newFlushedSize(includes docstores)=");

        $r54 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: java.text.NumberFormat nf>;

        $r55 = virtualinvoke $r54.<java.text.NumberFormat: java.lang.String format(double)>(d7);

        $r56 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" MB");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" docs/MB=");

        $r59 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: java.text.NumberFormat nf>;

        $i8 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: int flushedDocCount>;

        $d4 = (double) $i8;

        $d5 = $d4 / d7;

        $r60 = virtualinvoke $r59.<java.text.NumberFormat: java.lang.String format(double)>($d5);

        $r61 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r43.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DWPT", $r62);

     label25:
        $z6 = <org.apache.lucene.index.DocumentsWriterPerThread: boolean $assertionsDisabled>;

        if $z6 != 0 goto label26;

        $r40 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentInfo segmentInfo>;

        if $r40 != null goto label26;

        $r41 = new java.lang.AssertionError;

        specialinvoke $r41.<java.lang.AssertionError: void <init>()>();

        throw $r41;

     label26:
        $r31 = new org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment;

        $r32 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentWriteState flushState>;

        $r36 = $r32.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.FieldInfos fieldInfos>;

        $r33 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentWriteState flushState>;

        $r35 = $r33.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.util.MutableBits liveDocs>;

        $r34 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentWriteState flushState>;

        $i6 = $r34.<org.apache.lucene.index.SegmentWriteState: int delCountOnFlush>;

        specialinvoke $r31.<org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment: void <init>(org.apache.lucene.index.SegmentInfoPerCommit,org.apache.lucene.index.FieldInfos,org.apache.lucene.index.BufferedDeletes,org.apache.lucene.util.MutableBits,int,org.apache.lucene.index.DocumentsWriterPerThread$1)>($r26, $r36, r158, $r35, $i6, null);

        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThread: void sealFlushedSegment(org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment)>($r31);

        specialinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThread: void doAfterFlush()>();

        z14 = 1;

     label27:
        if 1 != 0 goto label29;

        $r37 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentInfo segmentInfo>;

        if $r37 == null goto label28;

        $r39 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.IndexWriter writer>;

        $r38 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentInfo segmentInfo>;

        virtualinvoke $r39.<org.apache.lucene.index.IndexWriter: void flushFailed(org.apache.lucene.index.SegmentInfo)>($r38);

     label28:
        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThread: void abort()>();

     label29:
        return $r31;

     label30:
        $r145 := @caughtexception;

     label31:
        if 0 != 0 goto label33;

        $r146 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentInfo segmentInfo>;

        if $r146 == null goto label32;

        $r148 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.IndexWriter writer>;

        $r147 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentInfo segmentInfo>;

        virtualinvoke $r148.<org.apache.lucene.index.IndexWriter: void flushFailed(org.apache.lucene.index.SegmentInfo)>($r147);

     label32:
        virtualinvoke r0.<org.apache.lucene.index.DocumentsWriterPerThread: void abort()>();

     label33:
        throw $r145;

        catch java.lang.Throwable from label09 to label27 with label30;
        catch java.lang.Throwable from label30 to label31 with label30;
    }

    void sealFlushedSegment(org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment) throws java.io.IOException
    {
        org.apache.lucene.index.SegmentInfoPerCommit $r35, $r38, $r47;
        org.apache.lucene.index.FieldInfos $r10;
        org.apache.lucene.store.IOContext $r2;
        org.apache.lucene.codecs.LiveDocsFormat $r27;
        org.apache.lucene.index.SegmentInfo $r1, $r4, $r11, $r15, $r20, $r25, $r40, $r45, $r51, $r56;
        org.apache.lucene.codecs.SegmentInfoWriter $r9;
        org.apache.lucene.util.InfoStream $r14, $r18, $r24, $r31, $r43, $r50, $r54;
        java.lang.StringBuilder $r17, $r19, $r22, $r30, $r32, $r33, $r34, $r36, $r53, $r55, $r58;
        java.lang.Throwable $r49;
        long $l1, $l2;
        java.lang.AssertionError $r39, $r48;
        java.lang.String $r21, $r23, $r37, $r57, $r59;
        org.apache.lucene.index.DocumentsWriterPerThread r5;
        org.apache.lucene.store.FlushInfo $r3;
        org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment r0;
        org.apache.lucene.codecs.SegmentInfoFormat $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Collection $r44;
        org.apache.lucene.index.IndexWriter $r6, $r16, $r46, $r52;
        org.apache.lucene.util.MutableBits $r13, $r29;
        int $i0, i3;
        org.apache.lucene.index.MergeState$CheckAbort $r41;
        org.apache.lucene.codecs.Codec $r7, $r26;
        org.apache.lucene.store.TrackingDirectoryWrapper $r12, $r28, $r42;

        r5 := @this: org.apache.lucene.index.DocumentsWriterPerThread;

        r0 := @parameter0: org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment;

        $z0 = <org.apache.lucene.index.DocumentsWriterPerThread: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        if r0 != null goto label01;

        $r48 = new java.lang.AssertionError;

        specialinvoke $r48.<java.lang.AssertionError: void <init>()>();

        throw $r48;

     label01:
        $r47 = r0.<org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment: org.apache.lucene.index.SegmentInfoPerCommit segmentInfo>;

        $r1 = $r47.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        staticinvoke <org.apache.lucene.index.IndexWriter: void setDiagnostics(org.apache.lucene.index.SegmentInfo,java.lang.String)>($r1, "flush");

        $r2 = new org.apache.lucene.store.IOContext;

        $r3 = new org.apache.lucene.store.FlushInfo;

        $r4 = $r47.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i0 = virtualinvoke $r4.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $l1 = virtualinvoke $r47.<org.apache.lucene.index.SegmentInfoPerCommit: long sizeInBytes()>();

        specialinvoke $r3.<org.apache.lucene.store.FlushInfo: void <init>(int,long)>($i0, $l1);

        specialinvoke $r2.<org.apache.lucene.store.IOContext: void <init>(org.apache.lucene.store.FlushInfo)>($r3);

     label02:
        $r6 = r5.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.IndexWriter writer>;

        $z1 = virtualinvoke $r6.<org.apache.lucene.index.IndexWriter: boolean useCompoundFile(org.apache.lucene.index.SegmentInfoPerCommit)>($r47);

        if $z1 == 0 goto label03;

        $r43 = r5.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream>;

        $r42 = r5.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.store.TrackingDirectoryWrapper directory>;

        $r41 = <org.apache.lucene.index.MergeState$CheckAbort: org.apache.lucene.index.MergeState$CheckAbort NONE>;

        $r40 = $r47.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r44 = staticinvoke <org.apache.lucene.index.IndexWriter: java.util.Collection createCompoundFile(org.apache.lucene.util.InfoStream,org.apache.lucene.store.Directory,org.apache.lucene.index.MergeState$CheckAbort,org.apache.lucene.index.SegmentInfo,org.apache.lucene.store.IOContext)>($r43, $r42, $r41, $r40, $r2);

        $r45 = $r47.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        virtualinvoke $r45.<org.apache.lucene.index.SegmentInfo: void setUseCompoundFile(boolean)>(1);

        $r46 = r5.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.IndexWriter writer>;

        virtualinvoke $r46.<org.apache.lucene.index.IndexWriter: void deleteNewFiles(java.util.Collection)>($r44);

     label03:
        $r7 = r5.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.codecs.Codec codec>;

        $r8 = virtualinvoke $r7.<org.apache.lucene.codecs.Codec: org.apache.lucene.codecs.SegmentInfoFormat segmentInfoFormat()>();

        $r9 = virtualinvoke $r8.<org.apache.lucene.codecs.SegmentInfoFormat: org.apache.lucene.codecs.SegmentInfoWriter getSegmentInfoWriter()>();

        $r12 = r5.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.store.TrackingDirectoryWrapper directory>;

        $r11 = $r47.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r10 = r0.<org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment: org.apache.lucene.index.FieldInfos fieldInfos>;

        virtualinvoke $r9.<org.apache.lucene.codecs.SegmentInfoWriter: void write(org.apache.lucene.store.Directory,org.apache.lucene.index.SegmentInfo,org.apache.lucene.index.FieldInfos,org.apache.lucene.store.IOContext)>($r12, $r11, $r10, $r2);

        $r13 = r0.<org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment: org.apache.lucene.util.MutableBits liveDocs>;

        if $r13 == null goto label06;

        i3 = r0.<org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment: int delCount>;

        $z3 = <org.apache.lucene.index.DocumentsWriterPerThread: boolean $assertionsDisabled>;

        if $z3 != 0 goto label04;

        if i3 > 0 goto label04;

        $r39 = new java.lang.AssertionError;

        specialinvoke $r39.<java.lang.AssertionError: void <init>()>();

        throw $r39;

     label04:
        $r24 = r5.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream>;

        $z4 = virtualinvoke $r24.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DWPT");

        if $z4 == 0 goto label05;

        $r31 = r5.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flush: write ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" deletes gen=");

        $r35 = r0.<org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment: org.apache.lucene.index.SegmentInfoPerCommit segmentInfo>;

        $l2 = virtualinvoke $r35.<org.apache.lucene.index.SegmentInfoPerCommit: long getDelGen()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DWPT", $r37);

     label05:
        $r38 = r0.<org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment: org.apache.lucene.index.SegmentInfoPerCommit segmentInfo>;

        $r25 = $r38.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r26 = virtualinvoke $r25.<org.apache.lucene.index.SegmentInfo: org.apache.lucene.codecs.Codec getCodec()>();

        $r27 = virtualinvoke $r26.<org.apache.lucene.codecs.Codec: org.apache.lucene.codecs.LiveDocsFormat liveDocsFormat()>();

        $r29 = r0.<org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment: org.apache.lucene.util.MutableBits liveDocs>;

        $r28 = r5.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.store.TrackingDirectoryWrapper directory>;

        virtualinvoke $r27.<org.apache.lucene.codecs.LiveDocsFormat: void writeLiveDocs(org.apache.lucene.util.MutableBits,org.apache.lucene.store.Directory,org.apache.lucene.index.SegmentInfoPerCommit,int,org.apache.lucene.store.IOContext)>($r29, $r28, $r38, i3, $r2);

        virtualinvoke $r47.<org.apache.lucene.index.SegmentInfoPerCommit: void setDelCount(int)>(i3);

        virtualinvoke $r47.<org.apache.lucene.index.SegmentInfoPerCommit: void advanceDelGen()>();

     label06:
        if 1 != 0 goto label12;

        $r14 = r5.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream>;

        $z2 = virtualinvoke $r14.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DWPT");

        if $z2 == 0 goto label07;

        $r18 = r5.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hit exception reating compound file for newly flushed segment ");

        $r20 = $r47.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r21 = $r20.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DWPT", $r23);

     label07:
        $r16 = r5.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.IndexWriter writer>;

        $r15 = $r47.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        virtualinvoke $r16.<org.apache.lucene.index.IndexWriter: void flushFailed(org.apache.lucene.index.SegmentInfo)>($r15);

        goto label12;

     label08:
        $r49 := @caughtexception;

     label09:
        if 0 != 0 goto label11;

        $r50 = r5.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream>;

        $z5 = virtualinvoke $r50.<org.apache.lucene.util.InfoStream: boolean isEnabled(java.lang.String)>("DWPT");

        if $z5 == 0 goto label10;

        $r54 = r5.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.InfoStream infoStream>;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hit exception reating compound file for newly flushed segment ");

        $r56 = $r47.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r57 = $r56.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $r58 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r54.<org.apache.lucene.util.InfoStream: void message(java.lang.String,java.lang.String)>("DWPT", $r59);

     label10:
        $r52 = r5.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.IndexWriter writer>;

        $r51 = $r47.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        virtualinvoke $r52.<org.apache.lucene.index.IndexWriter: void flushFailed(org.apache.lucene.index.SegmentInfo)>($r51);

     label11:
        throw $r49;

     label12:
        return;

        catch java.lang.Throwable from label02 to label06 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    org.apache.lucene.index.SegmentInfo getSegmentInfo()
    {
        org.apache.lucene.index.DocumentsWriterPerThread r0;
        org.apache.lucene.index.SegmentInfo $r1;

        r0 := @this: org.apache.lucene.index.DocumentsWriterPerThread;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentInfo segmentInfo>;

        return $r1;
    }

    long bytesUsed()
    {
        java.util.concurrent.atomic.AtomicLong $r3;
        org.apache.lucene.index.BufferedDeletes $r2;
        org.apache.lucene.util.Counter $r1;
        long $l0, $l1, $l2;
        org.apache.lucene.index.DocumentsWriterPerThread r0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterPerThread;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.util.Counter bytesUsed>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.util.Counter: long get()>();

        $r2 = r0.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.BufferedDeletes pendingDeletes>;

        $r3 = $r2.<org.apache.lucene.index.BufferedDeletes: java.util.concurrent.atomic.AtomicLong bytesUsed>;

        $l1 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicLong: long get()>();

        $l2 = $l0 + $l1;

        return $l2;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.index.BufferedDeletes $r3;
        org.apache.lucene.index.DocumentsWriterDeleteQueue $r13;
        int $i0;
        java.lang.String $r16, $r18;
        org.apache.lucene.index.DocumentsWriterPerThread r2;
        boolean $z0;
        org.apache.lucene.index.SegmentInfo $r6, $r17;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r15;

        r2 := @this: org.apache.lucene.index.DocumentsWriterPerThread;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DocumentsWriterPerThread [pendingDeletes=");

        $r3 = r2.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.BufferedDeletes pendingDeletes>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", segment=");

        $r6 = r2.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentInfo segmentInfo>;

        if $r6 == null goto label1;

        $r17 = r2.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $r18 = $r17.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        goto label2;

     label1:
        $r18 = "null";

     label2:
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", aborting=");

        $z0 = r2.<org.apache.lucene.index.DocumentsWriterPerThread: boolean aborting>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", numDocsInRAM=");

        $i0 = r2.<org.apache.lucene.index.DocumentsWriterPerThread: int numDocsInRAM>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", deleteQueue=");

        $r13 = r2.<org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterDeleteQueue deleteQueue>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }

    static void <clinit>()
    {
        org.apache.lucene.index.DocumentsWriterPerThread$1 $r1;
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.apache.lucene.index.DocumentsWriterPerThread: int MAX_TERM_LENGTH_UTF8> = 32766;

        <org.apache.lucene.index.DocumentsWriterPerThread: int BYTE_BLOCK_NOT_MASK> = -32768;

        <org.apache.lucene.index.DocumentsWriterPerThread: boolean INFO_VERBOSE> = 0;

        $r0 = class "Lorg/apache/lucene/index/DocumentsWriterPerThread;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.DocumentsWriterPerThread: boolean $assertionsDisabled> = $z1;

        $r1 = new org.apache.lucene.index.DocumentsWriterPerThread$1;

        specialinvoke $r1.<org.apache.lucene.index.DocumentsWriterPerThread$1: void <init>()>();

        <org.apache.lucene.index.DocumentsWriterPerThread: org.apache.lucene.index.DocumentsWriterPerThread$IndexingChain defaultIndexingChain> = $r1;

        return;
    }
}
