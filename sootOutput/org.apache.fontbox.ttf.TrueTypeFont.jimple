public class org.apache.fontbox.ttf.TrueTypeFont extends java.lang.Object
{
    private final org.apache.commons.logging.Log log;
    private float version;
    private int numberOfGlyphs;
    private int unitsPerEm;
    private int[] advanceWidths;
    private java.util.Map tables;
    private org.apache.fontbox.ttf.TTFDataStream data;

    void <init>(org.apache.fontbox.ttf.TTFDataStream)
    {
        org.apache.fontbox.ttf.TrueTypeFont r0;
        int $i1, $i3;
        org.apache.commons.logging.Log $r1;
        org.apache.fontbox.ttf.TTFDataStream r3;
        java.util.HashMap $r4;

        r0 := @this: org.apache.fontbox.ttf.TrueTypeFont;

        r3 := @parameter0: org.apache.fontbox.ttf.TTFDataStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/fontbox/ttf/TrueTypeFont;");

        r0.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.commons.logging.Log log> = $r1;

        $i1 = (int) -1;

        r0.<org.apache.fontbox.ttf.TrueTypeFont: int numberOfGlyphs> = $i1;

        $i3 = (int) -1;

        r0.<org.apache.fontbox.ttf.TrueTypeFont: int unitsPerEm> = $i3;

        r0.<org.apache.fontbox.ttf.TrueTypeFont: int[] advanceWidths> = null;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.apache.fontbox.ttf.TrueTypeFont: java.util.Map tables> = $r4;

        r0.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.fontbox.ttf.TTFDataStream data> = r3;

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.fontbox.ttf.TTFDataStream $r1;
        org.apache.fontbox.ttf.TrueTypeFont r0;

        r0 := @this: org.apache.fontbox.ttf.TrueTypeFont;

        $r1 = r0.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.fontbox.ttf.TTFDataStream data>;

        virtualinvoke $r1.<org.apache.fontbox.ttf.TTFDataStream: void close()>();

        return;
    }

    public float getVersion()
    {
        float $f0;
        org.apache.fontbox.ttf.TrueTypeFont r0;

        r0 := @this: org.apache.fontbox.ttf.TrueTypeFont;

        $f0 = r0.<org.apache.fontbox.ttf.TrueTypeFont: float version>;

        return $f0;
    }

    public void setVersion(float)
    {
        float f0;
        org.apache.fontbox.ttf.TrueTypeFont r0;

        r0 := @this: org.apache.fontbox.ttf.TrueTypeFont;

        f0 := @parameter0: float;

        r0.<org.apache.fontbox.ttf.TrueTypeFont: float version> = f0;

        return;
    }

    public void addTable(org.apache.fontbox.ttf.TTFTable)
    {
        org.apache.fontbox.ttf.TrueTypeFont r0;
        org.apache.fontbox.ttf.TTFTable r1;
        java.util.Map $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.fontbox.ttf.TrueTypeFont;

        r1 := @parameter0: org.apache.fontbox.ttf.TTFTable;

        $r2 = r0.<org.apache.fontbox.ttf.TrueTypeFont: java.util.Map tables>;

        $r3 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFTable: java.lang.String getTag()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);

        return;
    }

    public java.util.Collection getTables()
    {
        org.apache.fontbox.ttf.TrueTypeFont r0;
        java.util.Map $r1;
        java.util.Collection $r2;

        r0 := @this: org.apache.fontbox.ttf.TrueTypeFont;

        $r1 = r0.<org.apache.fontbox.ttf.TrueTypeFont: java.util.Map tables>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        return $r2;
    }

    public org.apache.fontbox.ttf.NamingTable getNaming()
    {
        org.apache.fontbox.ttf.TrueTypeFont r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        org.apache.fontbox.ttf.NamingTable r3;
        boolean $z0;

        r0 := @this: org.apache.fontbox.ttf.TrueTypeFont;

        $r1 = r0.<org.apache.fontbox.ttf.TrueTypeFont: java.util.Map tables>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("name");

        r3 = (org.apache.fontbox.ttf.NamingTable) $r2;

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<org.apache.fontbox.ttf.NamingTable: boolean getInitialized()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.fontbox.ttf.TrueTypeFont: void initializeTable(org.apache.fontbox.ttf.TTFTable)>(r3);

     label1:
        return r3;
    }

    public org.apache.fontbox.ttf.PostScriptTable getPostScript()
    {
        org.apache.fontbox.ttf.TrueTypeFont r0;
        org.apache.fontbox.ttf.PostScriptTable r3;
        java.util.Map $r1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: org.apache.fontbox.ttf.TrueTypeFont;

        $r1 = r0.<org.apache.fontbox.ttf.TrueTypeFont: java.util.Map tables>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("post");

        r3 = (org.apache.fontbox.ttf.PostScriptTable) $r2;

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<org.apache.fontbox.ttf.PostScriptTable: boolean getInitialized()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.fontbox.ttf.TrueTypeFont: void initializeTable(org.apache.fontbox.ttf.TTFTable)>(r3);

     label1:
        return r3;
    }

    public org.apache.fontbox.ttf.OS2WindowsMetricsTable getOS2Windows()
    {
        org.apache.fontbox.ttf.TrueTypeFont r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        org.apache.fontbox.ttf.OS2WindowsMetricsTable r3;
        boolean $z0;

        r0 := @this: org.apache.fontbox.ttf.TrueTypeFont;

        $r1 = r0.<org.apache.fontbox.ttf.TrueTypeFont: java.util.Map tables>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("OS/2");

        r3 = (org.apache.fontbox.ttf.OS2WindowsMetricsTable) $r2;

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<org.apache.fontbox.ttf.OS2WindowsMetricsTable: boolean getInitialized()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.fontbox.ttf.TrueTypeFont: void initializeTable(org.apache.fontbox.ttf.TTFTable)>(r3);

     label1:
        return r3;
    }

    public org.apache.fontbox.ttf.MaximumProfileTable getMaximumProfile()
    {
        org.apache.fontbox.ttf.MaximumProfileTable r3;
        org.apache.fontbox.ttf.TrueTypeFont r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: org.apache.fontbox.ttf.TrueTypeFont;

        $r1 = r0.<org.apache.fontbox.ttf.TrueTypeFont: java.util.Map tables>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("maxp");

        r3 = (org.apache.fontbox.ttf.MaximumProfileTable) $r2;

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<org.apache.fontbox.ttf.MaximumProfileTable: boolean getInitialized()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.fontbox.ttf.TrueTypeFont: void initializeTable(org.apache.fontbox.ttf.TTFTable)>(r3);

     label1:
        return r3;
    }

    public org.apache.fontbox.ttf.HeaderTable getHeader()
    {
        org.apache.fontbox.ttf.TrueTypeFont r0;
        org.apache.fontbox.ttf.HeaderTable r3;
        java.util.Map $r1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: org.apache.fontbox.ttf.TrueTypeFont;

        $r1 = r0.<org.apache.fontbox.ttf.TrueTypeFont: java.util.Map tables>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("head");

        r3 = (org.apache.fontbox.ttf.HeaderTable) $r2;

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<org.apache.fontbox.ttf.HeaderTable: boolean getInitialized()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.fontbox.ttf.TrueTypeFont: void initializeTable(org.apache.fontbox.ttf.TTFTable)>(r3);

     label1:
        return r3;
    }

    public org.apache.fontbox.ttf.HorizontalHeaderTable getHorizontalHeader()
    {
        org.apache.fontbox.ttf.TrueTypeFont r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        org.apache.fontbox.ttf.HorizontalHeaderTable r3;
        boolean $z0;

        r0 := @this: org.apache.fontbox.ttf.TrueTypeFont;

        $r1 = r0.<org.apache.fontbox.ttf.TrueTypeFont: java.util.Map tables>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("hhea");

        r3 = (org.apache.fontbox.ttf.HorizontalHeaderTable) $r2;

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<org.apache.fontbox.ttf.HorizontalHeaderTable: boolean getInitialized()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.fontbox.ttf.TrueTypeFont: void initializeTable(org.apache.fontbox.ttf.TTFTable)>(r3);

     label1:
        return r3;
    }

    public org.apache.fontbox.ttf.HorizontalMetricsTable getHorizontalMetrics()
    {
        org.apache.fontbox.ttf.TrueTypeFont r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        org.apache.fontbox.ttf.HorizontalMetricsTable r3;
        boolean $z0;

        r0 := @this: org.apache.fontbox.ttf.TrueTypeFont;

        $r1 = r0.<org.apache.fontbox.ttf.TrueTypeFont: java.util.Map tables>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("hmtx");

        r3 = (org.apache.fontbox.ttf.HorizontalMetricsTable) $r2;

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<org.apache.fontbox.ttf.HorizontalMetricsTable: boolean getInitialized()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.fontbox.ttf.TrueTypeFont: void initializeTable(org.apache.fontbox.ttf.TTFTable)>(r3);

     label1:
        return r3;
    }

    public org.apache.fontbox.ttf.IndexToLocationTable getIndexToLocation()
    {
        org.apache.fontbox.ttf.IndexToLocationTable r3;
        org.apache.fontbox.ttf.TrueTypeFont r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: org.apache.fontbox.ttf.TrueTypeFont;

        $r1 = r0.<org.apache.fontbox.ttf.TrueTypeFont: java.util.Map tables>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("loca");

        r3 = (org.apache.fontbox.ttf.IndexToLocationTable) $r2;

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<org.apache.fontbox.ttf.IndexToLocationTable: boolean getInitialized()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.fontbox.ttf.TrueTypeFont: void initializeTable(org.apache.fontbox.ttf.TTFTable)>(r3);

     label1:
        return r3;
    }

    public org.apache.fontbox.ttf.GlyphTable getGlyph()
    {
        org.apache.fontbox.ttf.TrueTypeFont r0;
        org.apache.fontbox.ttf.GlyphTable r3;
        java.util.Map $r1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: org.apache.fontbox.ttf.TrueTypeFont;

        $r1 = r0.<org.apache.fontbox.ttf.TrueTypeFont: java.util.Map tables>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("glyf");

        r3 = (org.apache.fontbox.ttf.GlyphTable) $r2;

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<org.apache.fontbox.ttf.GlyphTable: boolean getInitialized()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.fontbox.ttf.TrueTypeFont: void initializeTable(org.apache.fontbox.ttf.TTFTable)>(r3);

     label1:
        return r3;
    }

    public org.apache.fontbox.ttf.CMAPTable getCMAP()
    {
        org.apache.fontbox.ttf.TrueTypeFont r0;
        org.apache.fontbox.ttf.CMAPTable r3;
        java.util.Map $r1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: org.apache.fontbox.ttf.TrueTypeFont;

        $r1 = r0.<org.apache.fontbox.ttf.TrueTypeFont: java.util.Map tables>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("cmap");

        r3 = (org.apache.fontbox.ttf.CMAPTable) $r2;

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<org.apache.fontbox.ttf.CMAPTable: boolean getInitialized()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.fontbox.ttf.TrueTypeFont: void initializeTable(org.apache.fontbox.ttf.TTFTable)>(r3);

     label1:
        return r3;
    }

    public java.io.InputStream getOriginalData() throws java.io.IOException
    {
        org.apache.fontbox.ttf.TTFDataStream $r1;
        org.apache.fontbox.ttf.TrueTypeFont r0;
        java.io.InputStream $r2;

        r0 := @this: org.apache.fontbox.ttf.TrueTypeFont;

        $r1 = r0.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.fontbox.ttf.TTFDataStream data>;

        $r2 = virtualinvoke $r1.<org.apache.fontbox.ttf.TTFDataStream: java.io.InputStream getOriginalData()>();

        return $r2;
    }

    public void initializeTable(org.apache.fontbox.ttf.TTFTable)
    {
        org.apache.fontbox.ttf.TTFTable r2;
        long $l0, $l1;
        java.io.IOException $r6;
        org.apache.fontbox.ttf.TrueTypeFont r0;
        org.apache.fontbox.ttf.TTFDataStream $r1, $r3, $r4, $r5;
        java.lang.StringBuilder $r7, $r9, $r11;
        org.apache.commons.logging.Log $r8;
        java.lang.String $r10, $r12;

        r0 := @this: org.apache.fontbox.ttf.TrueTypeFont;

        r2 := @parameter0: org.apache.fontbox.ttf.TTFTable;

     label1:
        $r1 = r0.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.fontbox.ttf.TTFDataStream data>;

        $l0 = virtualinvoke $r1.<org.apache.fontbox.ttf.TTFDataStream: long getCurrentPosition()>();

        $r3 = r0.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.fontbox.ttf.TTFDataStream data>;

        $l1 = virtualinvoke r2.<org.apache.fontbox.ttf.TTFTable: long getOffset()>();

        virtualinvoke $r3.<org.apache.fontbox.ttf.TTFDataStream: void seek(long)>($l1);

        $r4 = r0.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.fontbox.ttf.TTFDataStream data>;

        virtualinvoke r2.<org.apache.fontbox.ttf.TTFTable: void initData(org.apache.fontbox.ttf.TrueTypeFont,org.apache.fontbox.ttf.TTFDataStream)>(r0, $r4);

        $r5 = r0.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.fontbox.ttf.TTFDataStream data>;

        virtualinvoke $r5.<org.apache.fontbox.ttf.TTFDataStream: void seek(long)>($l0);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r8 = r0.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.commons.logging.Log log>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An error occured when reading table ");

        $r10 = virtualinvoke r2.<org.apache.fontbox.ttf.TTFTable: java.lang.String getTag()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r12, $r6);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public int getNumberOfGlyphs()
    {
        org.apache.fontbox.ttf.MaximumProfileTable $r1;
        org.apache.fontbox.ttf.TrueTypeFont r0;
        int $i0, $i1, $i2, $i4;

        r0 := @this: org.apache.fontbox.ttf.TrueTypeFont;

        $i0 = r0.<org.apache.fontbox.ttf.TrueTypeFont: int numberOfGlyphs>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label2;

        $r1 = virtualinvoke r0.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.fontbox.ttf.MaximumProfileTable getMaximumProfile()>();

        if $r1 == null goto label1;

        $i1 = virtualinvoke $r1.<org.apache.fontbox.ttf.MaximumProfileTable: int getNumGlyphs()>();

        r0.<org.apache.fontbox.ttf.TrueTypeFont: int numberOfGlyphs> = $i1;

        goto label2;

     label1:
        r0.<org.apache.fontbox.ttf.TrueTypeFont: int numberOfGlyphs> = 0;

     label2:
        $i2 = r0.<org.apache.fontbox.ttf.TrueTypeFont: int numberOfGlyphs>;

        return $i2;
    }

    public int getUnitsPerEm()
    {
        org.apache.fontbox.ttf.TrueTypeFont r0;
        org.apache.fontbox.ttf.HeaderTable $r1;
        int $i0, $i1, $i2, $i4;

        r0 := @this: org.apache.fontbox.ttf.TrueTypeFont;

        $i0 = r0.<org.apache.fontbox.ttf.TrueTypeFont: int unitsPerEm>;

        $i4 = (int) -1;

        if $i0 != $i4 goto label2;

        $r1 = virtualinvoke r0.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.fontbox.ttf.HeaderTable getHeader()>();

        if $r1 == null goto label1;

        $i1 = virtualinvoke $r1.<org.apache.fontbox.ttf.HeaderTable: int getUnitsPerEm()>();

        r0.<org.apache.fontbox.ttf.TrueTypeFont: int unitsPerEm> = $i1;

        goto label2;

     label1:
        r0.<org.apache.fontbox.ttf.TrueTypeFont: int unitsPerEm> = 0;

     label2:
        $i2 = r0.<org.apache.fontbox.ttf.TrueTypeFont: int unitsPerEm>;

        return $i2;
    }

    public int getAdvanceWidth(int)
    {
        org.apache.fontbox.ttf.HorizontalMetricsTable $r5;
        org.apache.fontbox.ttf.TrueTypeFont r0;
        int[] $r1, $r2, $r3, $r4, $r6, $r7, $r8;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.apache.fontbox.ttf.TrueTypeFont;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.fontbox.ttf.TrueTypeFont: int[] advanceWidths>;

        if $r1 != null goto label2;

        $r5 = virtualinvoke r0.<org.apache.fontbox.ttf.TrueTypeFont: org.apache.fontbox.ttf.HorizontalMetricsTable getHorizontalMetrics()>();

        if $r5 == null goto label1;

        $r7 = virtualinvoke $r5.<org.apache.fontbox.ttf.HorizontalMetricsTable: int[] getAdvanceWidth()>();

        r0.<org.apache.fontbox.ttf.TrueTypeFont: int[] advanceWidths> = $r7;

        goto label2;

     label1:
        $r6 = newarray (int)[1];

        $r6[0] = 250;

        r0.<org.apache.fontbox.ttf.TrueTypeFont: int[] advanceWidths> = $r6;

     label2:
        $r8 = r0.<org.apache.fontbox.ttf.TrueTypeFont: int[] advanceWidths>;

        $i5 = lengthof $r8;

        if $i5 <= i0 goto label3;

        $r4 = r0.<org.apache.fontbox.ttf.TrueTypeFont: int[] advanceWidths>;

        $i4 = $r4[i0];

        return $i4;

     label3:
        $r3 = r0.<org.apache.fontbox.ttf.TrueTypeFont: int[] advanceWidths>;

        $r2 = r0.<org.apache.fontbox.ttf.TrueTypeFont: int[] advanceWidths>;

        $i1 = lengthof $r2;

        $i2 = $i1 - 1;

        $i3 = $r3[$i2];

        return $i3;
    }
}
