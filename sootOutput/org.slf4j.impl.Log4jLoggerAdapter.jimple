public final class org.slf4j.impl.Log4jLoggerAdapter extends org.slf4j.helpers.MarkerIgnoringBase implements org.slf4j.spi.LocationAwareLogger, java.io.Serializable
{
    private static final long serialVersionUID;
    final transient org.apache.log4j.Logger logger;
    static final java.lang.String FQCN;
    final boolean traceCapable;
    static java.lang.Class class$org$slf4j$impl$Log4jLoggerAdapter;

    void <init>(org.apache.log4j.Logger)
    {
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r1 := @parameter0: org.apache.log4j.Logger;

        specialinvoke r0.<org.slf4j.helpers.MarkerIgnoringBase: void <init>()>();

        r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger> = r1;

        $r2 = virtualinvoke r1.<org.apache.log4j.Logger: java.lang.String getName()>();

        r0.<org.slf4j.impl.Log4jLoggerAdapter: java.lang.String name> = $r2;

        $z0 = specialinvoke r0.<org.slf4j.impl.Log4jLoggerAdapter: boolean isTraceCapable()>();

        r0.<org.slf4j.impl.Log4jLoggerAdapter: boolean traceCapable> = $z0;

        return;
    }

    private boolean isTraceCapable()
    {
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r1;
        java.lang.NoSuchMethodError $r2;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

     label1:
        $r1 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        virtualinvoke $r1.<org.apache.log4j.Logger: boolean isTraceEnabled()>();

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch java.lang.NoSuchMethodError from label1 to label2 with label3;
    }

    public boolean isTraceEnabled()
    {
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        $z0 = r0.<org.slf4j.impl.Log4jLoggerAdapter: boolean traceCapable>;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $z2 = virtualinvoke $r2.<org.apache.log4j.Logger: boolean isTraceEnabled()>();

        return $z2;

     label1:
        $r1 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $z1 = virtualinvoke $r1.<org.apache.log4j.Logger: boolean isDebugEnabled()>();

        return $z1;
    }

    public void trace(java.lang.String)
    {
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r3;
        org.apache.log4j.Level $r4;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r2 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.String FQCN>;

        $z0 = r0.<org.slf4j.impl.Log4jLoggerAdapter: boolean traceCapable>;

        if $z0 == 0 goto label1;

        $r4 = <org.apache.log4j.Level: org.apache.log4j.Level TRACE>;

        goto label2;

     label1:
        $r4 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

     label2:
        virtualinvoke $r3.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r2, $r4, r1, null);

        return;
    }

    public void trace(java.lang.String, java.lang.Object)
    {
        java.lang.Throwable $r7;
        org.slf4j.helpers.FormattingTuple $r3;
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r4;
        org.apache.log4j.Level $r8;
        java.lang.Object r2;
        java.lang.String r1, $r5, $r6;
        boolean $z0, $z1;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke r0.<org.slf4j.impl.Log4jLoggerAdapter: boolean isTraceEnabled()>();

        if $z0 == 0 goto label3;

        $r3 = staticinvoke <org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object)>(r1, r2);

        $r4 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r5 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.String FQCN>;

        $z1 = r0.<org.slf4j.impl.Log4jLoggerAdapter: boolean traceCapable>;

        if $z1 == 0 goto label1;

        $r8 = <org.apache.log4j.Level: org.apache.log4j.Level TRACE>;

        goto label2;

     label1:
        $r8 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

     label2:
        $r6 = virtualinvoke $r3.<org.slf4j.helpers.FormattingTuple: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r3.<org.slf4j.helpers.FormattingTuple: java.lang.Throwable getThrowable()>();

        virtualinvoke $r4.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r5, $r8, $r6, $r7);

     label3:
        return;
    }

    public void trace(java.lang.String, java.lang.Object, java.lang.Object)
    {
        java.lang.Throwable $r8;
        org.slf4j.helpers.FormattingTuple $r4;
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r5;
        org.apache.log4j.Level $r9;
        java.lang.Object r2, r3;
        java.lang.String r1, $r6, $r7;
        boolean $z0, $z1;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $z0 = virtualinvoke r0.<org.slf4j.impl.Log4jLoggerAdapter: boolean isTraceEnabled()>();

        if $z0 == 0 goto label3;

        $r4 = staticinvoke <org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        $r5 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r6 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.String FQCN>;

        $z1 = r0.<org.slf4j.impl.Log4jLoggerAdapter: boolean traceCapable>;

        if $z1 == 0 goto label1;

        $r9 = <org.apache.log4j.Level: org.apache.log4j.Level TRACE>;

        goto label2;

     label1:
        $r9 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

     label2:
        $r7 = virtualinvoke $r4.<org.slf4j.helpers.FormattingTuple: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r4.<org.slf4j.helpers.FormattingTuple: java.lang.Throwable getThrowable()>();

        virtualinvoke $r5.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r6, $r9, $r7, $r8);

     label3:
        return;
    }

    public void trace(java.lang.String, java.lang.Object[])
    {
        java.lang.Throwable $r7;
        java.lang.Object[] r2;
        org.slf4j.helpers.FormattingTuple $r3;
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r4;
        org.apache.log4j.Level $r8;
        java.lang.String r1, $r5, $r6;
        boolean $z0, $z1;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $z0 = virtualinvoke r0.<org.slf4j.impl.Log4jLoggerAdapter: boolean isTraceEnabled()>();

        if $z0 == 0 goto label3;

        $r3 = staticinvoke <org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[])>(r1, r2);

        $r4 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r5 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.String FQCN>;

        $z1 = r0.<org.slf4j.impl.Log4jLoggerAdapter: boolean traceCapable>;

        if $z1 == 0 goto label1;

        $r8 = <org.apache.log4j.Level: org.apache.log4j.Level TRACE>;

        goto label2;

     label1:
        $r8 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

     label2:
        $r6 = virtualinvoke $r3.<org.slf4j.helpers.FormattingTuple: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r3.<org.slf4j.helpers.FormattingTuple: java.lang.Throwable getThrowable()>();

        virtualinvoke $r4.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r5, $r8, $r6, $r7);

     label3:
        return;
    }

    public void trace(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r4;
        org.apache.log4j.Level $r5;
        java.lang.String r1, $r3;
        boolean $z0;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r3 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.String FQCN>;

        $z0 = r0.<org.slf4j.impl.Log4jLoggerAdapter: boolean traceCapable>;

        if $z0 == 0 goto label1;

        $r5 = <org.apache.log4j.Level: org.apache.log4j.Level TRACE>;

        goto label2;

     label1:
        $r5 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

     label2:
        virtualinvoke $r4.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r3, $r5, r1, r2);

        return;
    }

    public boolean isDebugEnabled()
    {
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r1;
        boolean $z0;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        $r1 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $z0 = virtualinvoke $r1.<org.apache.log4j.Logger: boolean isDebugEnabled()>();

        return $z0;
    }

    public void debug(java.lang.String)
    {
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r4;
        org.apache.log4j.Level $r2;
        java.lang.String r1, $r3;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r3 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.String FQCN>;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        virtualinvoke $r4.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r3, $r2, r1, null);

        return;
    }

    public void debug(java.lang.String, java.lang.Object)
    {
        java.lang.Throwable $r9;
        org.slf4j.helpers.FormattingTuple $r4;
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r1, $r5;
        org.apache.log4j.Level $r7;
        java.lang.Object r3;
        java.lang.String r2, $r6, $r8;
        boolean $z0;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r1 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $z0 = virtualinvoke $r1.<org.apache.log4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object)>(r2, r3);

        $r5 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r6 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.String FQCN>;

        $r7 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        $r8 = virtualinvoke $r4.<org.slf4j.helpers.FormattingTuple: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r4.<org.slf4j.helpers.FormattingTuple: java.lang.Throwable getThrowable()>();

        virtualinvoke $r5.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r6, $r7, $r8, $r9);

     label1:
        return;
    }

    public void debug(java.lang.String, java.lang.Object, java.lang.Object)
    {
        java.lang.Throwable $r10;
        org.slf4j.helpers.FormattingTuple $r5;
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r1, $r6;
        org.apache.log4j.Level $r8;
        java.lang.Object r3, r4;
        java.lang.String r2, $r7, $r9;
        boolean $z0;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Object;

        $r1 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $z0 = virtualinvoke $r1.<org.apache.log4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object,java.lang.Object)>(r2, r3, r4);

        $r6 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r7 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.String FQCN>;

        $r8 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        $r9 = virtualinvoke $r5.<org.slf4j.helpers.FormattingTuple: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r5.<org.slf4j.helpers.FormattingTuple: java.lang.Throwable getThrowable()>();

        virtualinvoke $r6.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r7, $r8, $r9, $r10);

     label1:
        return;
    }

    public void debug(java.lang.String, java.lang.Object[])
    {
        java.lang.Throwable $r9;
        java.lang.Object[] r3;
        org.slf4j.helpers.FormattingTuple $r4;
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r1, $r5;
        org.apache.log4j.Level $r7;
        java.lang.String r2, $r6, $r8;
        boolean $z0;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object[];

        $r1 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $z0 = virtualinvoke $r1.<org.apache.log4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[])>(r2, r3);

        $r5 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r6 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.String FQCN>;

        $r7 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        $r8 = virtualinvoke $r4.<org.slf4j.helpers.FormattingTuple: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r4.<org.slf4j.helpers.FormattingTuple: java.lang.Throwable getThrowable()>();

        virtualinvoke $r5.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r6, $r7, $r8, $r9);

     label1:
        return;
    }

    public void debug(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r5;
        org.apache.log4j.Level $r3;
        java.lang.String r1, $r4;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r5 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r4 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.String FQCN>;

        $r3 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        virtualinvoke $r5.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r4, $r3, r1, r2);

        return;
    }

    public boolean isInfoEnabled()
    {
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r1;
        boolean $z0;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        $r1 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $z0 = virtualinvoke $r1.<org.apache.log4j.Logger: boolean isInfoEnabled()>();

        return $z0;
    }

    public void info(java.lang.String)
    {
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r4;
        org.apache.log4j.Level $r2;
        java.lang.String r1, $r3;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r3 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.String FQCN>;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level INFO>;

        virtualinvoke $r4.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r3, $r2, r1, null);

        return;
    }

    public void info(java.lang.String, java.lang.Object)
    {
        java.lang.Throwable $r9;
        org.slf4j.helpers.FormattingTuple $r4;
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r1, $r5;
        org.apache.log4j.Level $r7;
        java.lang.Object r3;
        java.lang.String r2, $r6, $r8;
        boolean $z0;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r1 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $z0 = virtualinvoke $r1.<org.apache.log4j.Logger: boolean isInfoEnabled()>();

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object)>(r2, r3);

        $r5 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r6 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.String FQCN>;

        $r7 = <org.apache.log4j.Level: org.apache.log4j.Level INFO>;

        $r8 = virtualinvoke $r4.<org.slf4j.helpers.FormattingTuple: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r4.<org.slf4j.helpers.FormattingTuple: java.lang.Throwable getThrowable()>();

        virtualinvoke $r5.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r6, $r7, $r8, $r9);

     label1:
        return;
    }

    public void info(java.lang.String, java.lang.Object, java.lang.Object)
    {
        java.lang.Throwable $r10;
        org.slf4j.helpers.FormattingTuple $r5;
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r1, $r6;
        org.apache.log4j.Level $r8;
        java.lang.Object r3, r4;
        java.lang.String r2, $r7, $r9;
        boolean $z0;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Object;

        $r1 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $z0 = virtualinvoke $r1.<org.apache.log4j.Logger: boolean isInfoEnabled()>();

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object,java.lang.Object)>(r2, r3, r4);

        $r6 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r7 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.String FQCN>;

        $r8 = <org.apache.log4j.Level: org.apache.log4j.Level INFO>;

        $r9 = virtualinvoke $r5.<org.slf4j.helpers.FormattingTuple: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r5.<org.slf4j.helpers.FormattingTuple: java.lang.Throwable getThrowable()>();

        virtualinvoke $r6.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r7, $r8, $r9, $r10);

     label1:
        return;
    }

    public void info(java.lang.String, java.lang.Object[])
    {
        java.lang.Throwable $r9;
        java.lang.Object[] r3;
        org.slf4j.helpers.FormattingTuple $r4;
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r1, $r5;
        org.apache.log4j.Level $r7;
        java.lang.String r2, $r6, $r8;
        boolean $z0;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object[];

        $r1 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $z0 = virtualinvoke $r1.<org.apache.log4j.Logger: boolean isInfoEnabled()>();

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[])>(r2, r3);

        $r5 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r6 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.String FQCN>;

        $r7 = <org.apache.log4j.Level: org.apache.log4j.Level INFO>;

        $r8 = virtualinvoke $r4.<org.slf4j.helpers.FormattingTuple: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r4.<org.slf4j.helpers.FormattingTuple: java.lang.Throwable getThrowable()>();

        virtualinvoke $r5.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r6, $r7, $r8, $r9);

     label1:
        return;
    }

    public void info(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r5;
        org.apache.log4j.Level $r3;
        java.lang.String r1, $r4;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r5 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r4 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.String FQCN>;

        $r3 = <org.apache.log4j.Level: org.apache.log4j.Level INFO>;

        virtualinvoke $r5.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r4, $r3, r1, r2);

        return;
    }

    public boolean isWarnEnabled()
    {
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r2;
        org.apache.log4j.Level $r1;
        boolean $z0;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        $r2 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r1 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $z0 = virtualinvoke $r2.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r1);

        return $z0;
    }

    public void warn(java.lang.String)
    {
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r4;
        org.apache.log4j.Level $r2;
        java.lang.String r1, $r3;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r3 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.String FQCN>;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        virtualinvoke $r4.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r3, $r2, r1, null);

        return;
    }

    public void warn(java.lang.String, java.lang.Object)
    {
        java.lang.Throwable $r10;
        org.slf4j.helpers.FormattingTuple $r5;
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r2, $r6;
        org.apache.log4j.Level $r1, $r8;
        java.lang.Object r4;
        java.lang.String r3, $r7, $r9;
        boolean $z0;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Object;

        $r2 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r1 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $z0 = virtualinvoke $r2.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r1);

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object)>(r3, r4);

        $r6 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r7 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.String FQCN>;

        $r8 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $r9 = virtualinvoke $r5.<org.slf4j.helpers.FormattingTuple: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r5.<org.slf4j.helpers.FormattingTuple: java.lang.Throwable getThrowable()>();

        virtualinvoke $r6.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r7, $r8, $r9, $r10);

     label1:
        return;
    }

    public void warn(java.lang.String, java.lang.Object, java.lang.Object)
    {
        java.lang.Throwable $r11;
        org.slf4j.helpers.FormattingTuple $r6;
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r2, $r7;
        org.apache.log4j.Level $r1, $r9;
        java.lang.Object r4, r5;
        java.lang.String r3, $r8, $r10;
        boolean $z0;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Object;

        r5 := @parameter2: java.lang.Object;

        $r2 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r1 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $z0 = virtualinvoke $r2.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r1);

        if $z0 == 0 goto label1;

        $r6 = staticinvoke <org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object,java.lang.Object)>(r3, r4, r5);

        $r7 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r8 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.String FQCN>;

        $r9 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $r10 = virtualinvoke $r6.<org.slf4j.helpers.FormattingTuple: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r6.<org.slf4j.helpers.FormattingTuple: java.lang.Throwable getThrowable()>();

        virtualinvoke $r7.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r8, $r9, $r10, $r11);

     label1:
        return;
    }

    public void warn(java.lang.String, java.lang.Object[])
    {
        java.lang.Throwable $r10;
        java.lang.Object[] r4;
        org.slf4j.helpers.FormattingTuple $r5;
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r2, $r6;
        org.apache.log4j.Level $r1, $r8;
        java.lang.String r3, $r7, $r9;
        boolean $z0;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Object[];

        $r2 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r1 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $z0 = virtualinvoke $r2.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r1);

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[])>(r3, r4);

        $r6 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r7 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.String FQCN>;

        $r8 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        $r9 = virtualinvoke $r5.<org.slf4j.helpers.FormattingTuple: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r5.<org.slf4j.helpers.FormattingTuple: java.lang.Throwable getThrowable()>();

        virtualinvoke $r6.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r7, $r8, $r9, $r10);

     label1:
        return;
    }

    public void warn(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r5;
        org.apache.log4j.Level $r3;
        java.lang.String r1, $r4;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r5 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r4 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.String FQCN>;

        $r3 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        virtualinvoke $r5.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r4, $r3, r1, r2);

        return;
    }

    public boolean isErrorEnabled()
    {
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r2;
        org.apache.log4j.Level $r1;
        boolean $z0;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        $r2 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r1 = <org.apache.log4j.Level: org.apache.log4j.Level ERROR>;

        $z0 = virtualinvoke $r2.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r1);

        return $z0;
    }

    public void error(java.lang.String)
    {
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r4;
        org.apache.log4j.Level $r2;
        java.lang.String r1, $r3;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r3 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.String FQCN>;

        $r2 = <org.apache.log4j.Level: org.apache.log4j.Level ERROR>;

        virtualinvoke $r4.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r3, $r2, r1, null);

        return;
    }

    public void error(java.lang.String, java.lang.Object)
    {
        java.lang.Throwable $r10;
        org.slf4j.helpers.FormattingTuple $r5;
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r2, $r6;
        org.apache.log4j.Level $r1, $r8;
        java.lang.Object r4;
        java.lang.String r3, $r7, $r9;
        boolean $z0;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Object;

        $r2 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r1 = <org.apache.log4j.Level: org.apache.log4j.Level ERROR>;

        $z0 = virtualinvoke $r2.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r1);

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object)>(r3, r4);

        $r6 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r7 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.String FQCN>;

        $r8 = <org.apache.log4j.Level: org.apache.log4j.Level ERROR>;

        $r9 = virtualinvoke $r5.<org.slf4j.helpers.FormattingTuple: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r5.<org.slf4j.helpers.FormattingTuple: java.lang.Throwable getThrowable()>();

        virtualinvoke $r6.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r7, $r8, $r9, $r10);

     label1:
        return;
    }

    public void error(java.lang.String, java.lang.Object, java.lang.Object)
    {
        java.lang.Throwable $r11;
        org.slf4j.helpers.FormattingTuple $r6;
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r2, $r7;
        org.apache.log4j.Level $r1, $r9;
        java.lang.Object r4, r5;
        java.lang.String r3, $r8, $r10;
        boolean $z0;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Object;

        r5 := @parameter2: java.lang.Object;

        $r2 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r1 = <org.apache.log4j.Level: org.apache.log4j.Level ERROR>;

        $z0 = virtualinvoke $r2.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r1);

        if $z0 == 0 goto label1;

        $r6 = staticinvoke <org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple format(java.lang.String,java.lang.Object,java.lang.Object)>(r3, r4, r5);

        $r7 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r8 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.String FQCN>;

        $r9 = <org.apache.log4j.Level: org.apache.log4j.Level ERROR>;

        $r10 = virtualinvoke $r6.<org.slf4j.helpers.FormattingTuple: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r6.<org.slf4j.helpers.FormattingTuple: java.lang.Throwable getThrowable()>();

        virtualinvoke $r7.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r8, $r9, $r10, $r11);

     label1:
        return;
    }

    public void error(java.lang.String, java.lang.Object[])
    {
        java.lang.Throwable $r10;
        java.lang.Object[] r4;
        org.slf4j.helpers.FormattingTuple $r5;
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r2, $r6;
        org.apache.log4j.Level $r1, $r8;
        java.lang.String r3, $r7, $r9;
        boolean $z0;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Object[];

        $r2 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r1 = <org.apache.log4j.Level: org.apache.log4j.Level ERROR>;

        $z0 = virtualinvoke $r2.<org.apache.log4j.Logger: boolean isEnabledFor(org.apache.log4j.Priority)>($r1);

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[])>(r3, r4);

        $r6 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r7 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.String FQCN>;

        $r8 = <org.apache.log4j.Level: org.apache.log4j.Level ERROR>;

        $r9 = virtualinvoke $r5.<org.slf4j.helpers.FormattingTuple: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r5.<org.slf4j.helpers.FormattingTuple: java.lang.Throwable getThrowable()>();

        virtualinvoke $r6.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r7, $r8, $r9, $r10);

     label1:
        return;
    }

    public void error(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r5;
        org.apache.log4j.Level $r3;
        java.lang.String r1, $r4;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r5 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        $r4 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.String FQCN>;

        $r3 = <org.apache.log4j.Level: org.apache.log4j.Level ERROR>;

        virtualinvoke $r5.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r4, $r3, r1, r2);

        return;
    }

    public void log(org.slf4j.Marker, java.lang.String, int, java.lang.String, java.lang.Object[], java.lang.Throwable)
    {
        java.lang.Throwable r3;
        java.lang.IllegalStateException $r4;
        java.lang.Object[] r11;
        org.slf4j.impl.Log4jLoggerAdapter r0;
        org.apache.log4j.Logger $r14;
        java.lang.StringBuffer $r5, $r6, $r7, $r8;
        org.apache.log4j.Level $r12, r13;
        int i0;
        java.lang.String r1, r2, $r9;
        boolean $z0;
        org.slf4j.Marker r10;

        r0 := @this: org.slf4j.impl.Log4jLoggerAdapter;

        r10 := @parameter0: org.slf4j.Marker;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r11 := @parameter4: java.lang.Object[];

        r3 := @parameter5: java.lang.Throwable;

        lookupswitch(i0)
        {
            case 0: goto label1;
            case 10: goto label4;
            case 20: goto label5;
            case 30: goto label6;
            case 40: goto label7;
            default: goto label8;
        };

     label1:
        $z0 = r0.<org.slf4j.impl.Log4jLoggerAdapter: boolean traceCapable>;

        if $z0 == 0 goto label2;

        $r12 = <org.apache.log4j.Level: org.apache.log4j.Level TRACE>;

        goto label3;

     label2:
        $r12 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

     label3:
        r13 = $r12;

        goto label9;

     label4:
        r13 = <org.apache.log4j.Level: org.apache.log4j.Level DEBUG>;

        goto label9;

     label5:
        r13 = <org.apache.log4j.Level: org.apache.log4j.Level INFO>;

        goto label9;

     label6:
        r13 = <org.apache.log4j.Level: org.apache.log4j.Level WARN>;

        goto label9;

     label7:
        r13 = <org.apache.log4j.Level: org.apache.log4j.Level ERROR>;

        goto label9;

     label8:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Level number ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not recognized.");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label9:
        $r14 = r0.<org.slf4j.impl.Log4jLoggerAdapter: org.apache.log4j.Logger logger>;

        virtualinvoke $r14.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>(r1, r13, r2, r3);

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r2;
        java.lang.String $r1;

        <org.slf4j.impl.Log4jLoggerAdapter: long serialVersionUID> = 6182834493563598289L;

        $r0 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.Class class$org$slf4j$impl$Log4jLoggerAdapter>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.slf4j.impl.Log4jLoggerAdapter: java.lang.Class class$(java.lang.String)>("org.slf4j.impl.Log4jLoggerAdapter");

        <org.slf4j.impl.Log4jLoggerAdapter: java.lang.Class class$org$slf4j$impl$Log4jLoggerAdapter> = $r2;

        goto label2;

     label1:
        $r2 = <org.slf4j.impl.Log4jLoggerAdapter: java.lang.Class class$org$slf4j$impl$Log4jLoggerAdapter>;

     label2:
        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        <org.slf4j.impl.Log4jLoggerAdapter: java.lang.String FQCN> = $r1;

        return;
    }
}
