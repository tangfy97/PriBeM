final class org.springframework.core.convert.support.PropertiesToStringConverter extends java.lang.Object implements org.springframework.core.convert.converter.Converter
{

    void <init>()
    {
        org.springframework.core.convert.support.PropertiesToStringConverter r0;

        r0 := @this: org.springframework.core.convert.support.PropertiesToStringConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String convert(java.util.Properties)
    {
        java.util.Properties r1;
        java.io.ByteArrayOutputStream $r0;
        java.io.IOException $r3;
        java.lang.IllegalArgumentException $r4;
        org.springframework.core.convert.support.PropertiesToStringConverter r9;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r2, $r8;

        r9 := @this: org.springframework.core.convert.support.PropertiesToStringConverter;

        r1 := @parameter0: java.util.Properties;

     label1:
        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        virtualinvoke r1.<java.util.Properties: void store(java.io.OutputStream,java.lang.String)>($r0, null);

        $r2 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>("ISO-8859-1");

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to store [");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] into String");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r8, $r3);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public volatile java.lang.Object convert(java.lang.Object)
    {
        java.util.Properties $r2;
        java.lang.Object r1;
        java.lang.String $r3;
        org.springframework.core.convert.support.PropertiesToStringConverter r0;

        r0 := @this: org.springframework.core.convert.support.PropertiesToStringConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Properties) r1;

        $r3 = virtualinvoke r0.<org.springframework.core.convert.support.PropertiesToStringConverter: java.lang.String convert(java.util.Properties)>($r2);

        return $r3;
    }
}
