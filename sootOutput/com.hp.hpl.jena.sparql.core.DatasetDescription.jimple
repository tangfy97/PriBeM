public class com.hp.hpl.jena.sparql.core.DatasetDescription extends java.lang.Object
{
    private java.util.List defaultGraphURIs;
    private java.util.List namedGraphURIs;

    public static com.hp.hpl.jena.sparql.core.DatasetDescription create(java.util.List, java.util.List)
    {
        java.util.List r1, r2;
        com.hp.hpl.jena.sparql.core.DatasetDescription $r0;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        $r0 = new com.hp.hpl.jena.sparql.core.DatasetDescription;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.core.DatasetDescription: void <init>(java.util.List,java.util.List)>(r1, r2);

        return $r0;
    }

    public static com.hp.hpl.jena.sparql.core.DatasetDescription create(com.hp.hpl.jena.query.Query)
    {
        com.hp.hpl.jena.query.Query r0;
        com.hp.hpl.jena.sparql.core.DatasetDescription $r1;

        r0 := @parameter0: com.hp.hpl.jena.query.Query;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.core.DatasetDescription: com.hp.hpl.jena.sparql.core.DatasetDescription create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.sparql.util.Context)>(r0, null);

        return $r1;
    }

    public static com.hp.hpl.jena.sparql.core.DatasetDescription create(com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.sparql.util.Context r0;
        com.hp.hpl.jena.sparql.core.DatasetDescription $r1;

        r0 := @parameter0: com.hp.hpl.jena.sparql.util.Context;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.core.DatasetDescription: com.hp.hpl.jena.sparql.core.DatasetDescription create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.sparql.util.Context)>(null, r0);

        return $r1;
    }

    public static com.hp.hpl.jena.sparql.core.DatasetDescription create(com.hp.hpl.jena.query.Query, com.hp.hpl.jena.sparql.util.Context)
    {
        com.hp.hpl.jena.query.Query r1;
        java.lang.ClassCastException $r7;
        java.lang.String $r11, $r13;
        com.hp.hpl.jena.sparql.ARQException $r8;
        boolean $z0, $z1;
        com.hp.hpl.jena.sparql.util.Symbol $r3, $r4;
        com.hp.hpl.jena.sparql.util.Context r0;
        com.hp.hpl.jena.sparql.core.DatasetDescription $r2, $r6;
        java.lang.Object $r5;
        java.lang.StringBuilder $r9, $r10, $r12;

        r1 := @parameter0: com.hp.hpl.jena.query.Query;

        r0 := @parameter1: com.hp.hpl.jena.sparql.util.Context;

        if r0 == null goto label4;

        $r3 = <com.hp.hpl.jena.sparql.ARQConstants: com.hp.hpl.jena.sparql.util.Symbol sysDatasetDescription>;

        $z1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.util.Context: boolean isDefined(com.hp.hpl.jena.sparql.util.Symbol)>($r3);

        if $z1 == 0 goto label4;

     label1:
        $r4 = <com.hp.hpl.jena.sparql.ARQConstants: com.hp.hpl.jena.sparql.util.Symbol sysDatasetDescription>;

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.util.Context: java.lang.Object get(com.hp.hpl.jena.sparql.util.Symbol)>($r4);

        $r6 = (com.hp.hpl.jena.sparql.core.DatasetDescription) $r5;

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        $r8 = new com.hp.hpl.jena.sparql.ARQException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected type (expected DatasetDescription): ");

        $r11 = virtualinvoke $r7.<java.lang.ClassCastException: java.lang.String getMessage()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<com.hp.hpl.jena.sparql.ARQException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label4:
        if r1 == null goto label5;

        $z0 = virtualinvoke r1.<com.hp.hpl.jena.query.Query: boolean hasDatasetDescription()>();

        if $z0 == 0 goto label5;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.query.Query: com.hp.hpl.jena.sparql.core.DatasetDescription getDatasetDescription()>();

        return $r2;

     label5:
        return null;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public void <init>()
    {
        com.hp.hpl.jena.sparql.core.DatasetDescription r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetDescription;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.core.DatasetDescription: java.util.List defaultGraphURIs> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.core.DatasetDescription: java.util.List namedGraphURIs> = $r2;

        return;
    }

    public void <init>(java.util.List, java.util.List)
    {
        java.util.List r1, r2;
        com.hp.hpl.jena.sparql.core.DatasetDescription r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetDescription;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetDescription: void <init>()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetDescription: void addAllDefaultGraphURIs(java.util.Collection)>(r1);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetDescription: void addAllNamedGraphURIs(java.util.Collection)>(r2);

        return;
    }

    public boolean isEmpty()
    {
        java.util.List $r1, $r2;
        com.hp.hpl.jena.sparql.core.DatasetDescription r0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetDescription;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetDescription: java.util.List defaultGraphURIs>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.hp.hpl.jena.sparql.core.DatasetDescription: java.util.List namedGraphURIs>;

        $z1 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void addDefaultGraphURI(java.lang.String)
    {
        java.util.List $r2;
        java.lang.String r1;
        com.hp.hpl.jena.sparql.core.DatasetDescription r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetDescription;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.sparql.core.DatasetDescription: java.util.List defaultGraphURIs>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addAllDefaultGraphURIs(java.util.Collection)
    {
        java.util.List $r2;
        com.hp.hpl.jena.sparql.core.DatasetDescription r0;
        java.util.Collection r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetDescription;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<com.hp.hpl.jena.sparql.core.DatasetDescription: java.util.List defaultGraphURIs>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return;
    }

    public void addNamedGraphURI(java.lang.String)
    {
        java.util.List $r2;
        java.lang.String r1;
        com.hp.hpl.jena.sparql.core.DatasetDescription r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetDescription;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.sparql.core.DatasetDescription: java.util.List namedGraphURIs>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addAllNamedGraphURIs(java.util.Collection)
    {
        java.util.List $r2;
        com.hp.hpl.jena.sparql.core.DatasetDescription r0;
        java.util.Collection r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetDescription;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<com.hp.hpl.jena.sparql.core.DatasetDescription: java.util.List namedGraphURIs>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return;
    }

    public java.util.List getDefaultGraphURIs()
    {
        java.util.List $r1;
        com.hp.hpl.jena.sparql.core.DatasetDescription r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetDescription;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetDescription: java.util.List defaultGraphURIs>;

        return $r1;
    }

    public java.util.List getNamedGraphURIs()
    {
        java.util.List $r1;
        com.hp.hpl.jena.sparql.core.DatasetDescription r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetDescription;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetDescription: java.util.List namedGraphURIs>;

        return $r1;
    }

    public java.util.Iterator eachDefaultGraphURI()
    {
        java.util.List $r1;
        java.util.Iterator $r2;
        com.hp.hpl.jena.sparql.core.DatasetDescription r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetDescription;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetDescription: java.util.List defaultGraphURIs>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    public java.util.Iterator eachNamedGraphURI()
    {
        java.util.List $r1;
        java.util.Iterator $r2;
        com.hp.hpl.jena.sparql.core.DatasetDescription r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetDescription;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetDescription: java.util.List namedGraphURIs>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    public com.hp.hpl.jena.query.Dataset createDataset()
    {
        com.hp.hpl.jena.query.Dataset $r1;
        com.hp.hpl.jena.sparql.core.DatasetDescription r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetDescription;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.util.DatasetUtils: com.hp.hpl.jena.query.Dataset createDataset(com.hp.hpl.jena.sparql.core.DatasetDescription)>(r0);

        return $r1;
    }

    public com.hp.hpl.jena.sparql.core.DatasetGraph createDatasetGraph()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;
        com.hp.hpl.jena.sparql.core.DatasetDescription r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetDescription;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.util.DatasetUtils: com.hp.hpl.jena.sparql.core.DatasetGraph createDatasetGraph(com.hp.hpl.jena.sparql.core.DatasetDescription)>(r0);

        return $r1;
    }
}
