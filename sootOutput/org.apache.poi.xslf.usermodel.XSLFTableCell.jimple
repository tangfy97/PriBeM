public class org.apache.poi.xslf.usermodel.XSLFTableCell extends org.apache.poi.xslf.usermodel.XSLFTextShape
{
    static double defaultBorderWidth;

    void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell, org.apache.poi.xslf.usermodel.XSLFSheet)
    {
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell r1;
        org.apache.poi.xslf.usermodel.XSLFSheet r2;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        r1 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell;

        r2 := @parameter1: org.apache.poi.xslf.usermodel.XSLFSheet;

        specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextShape: void <init>(org.apache.xmlbeans.XmlObject,org.apache.poi.xslf.usermodel.XSLFSheet)>(r1, r2);

        return;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()
    {
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r2;
        org.apache.xmlbeans.XmlObject $r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        $r1 = specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextShape: org.apache.xmlbeans.XmlObject getXmlObject()>();

        $r2 = (org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell) $r1;

        return $r2;
    }

    protected org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTextBody(boolean)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody $r2, $r3, r4;
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1;
        boolean z0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody getTxBody()>();

        r4 = $r2;

        if $r2 != null goto label1;

        if z0 == 0 goto label1;

        $r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody addNewTxBody()>();

        r4 = $r3;

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties addNewBodyPr()>();

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBody: org.openxmlformats.schemas.drawingml.x2006.main.CTTextListStyle addNewLstStyle()>();

     label1:
        return r4;
    }

    static org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell prototype()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties $r2, $r3, $r4, $r5;

        $r0 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell$Factory: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell newInstance()>();

        $r1 = interfaceinvoke $r0.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties addNewTcPr()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties addNewLnL()>();

        interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTNoFillProperties addNewNoFill()>();

        $r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties addNewLnR()>();

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTNoFillProperties addNewNoFill()>();

        $r4 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties addNewLnT()>();

        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTNoFillProperties addNewNoFill()>();

        $r5 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties addNewLnB()>();

        interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTNoFillProperties addNewNoFill()>();

        return $r0;
    }

    public void setLeftInset(double)
    {
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        int $i0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1, $r3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties $r2, r4;
        double d0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        d0 := @parameter0: double;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties getTcPr()>();

        r4 = $r2;

        if $r2 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties addNewTcPr()>();

     label1:
        $i0 = staticinvoke <org.apache.poi.util.Units: int toEMU(double)>(d0);

        interfaceinvoke r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: void setMarL(int)>($i0);

        return;
    }

    public void setRightInset(double)
    {
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        int $i0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1, $r3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties $r2, r4;
        double d0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        d0 := @parameter0: double;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties getTcPr()>();

        r4 = $r2;

        if $r2 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties addNewTcPr()>();

     label1:
        $i0 = staticinvoke <org.apache.poi.util.Units: int toEMU(double)>(d0);

        interfaceinvoke r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: void setMarR(int)>($i0);

        return;
    }

    public void setTopInset(double)
    {
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        int $i0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1, $r3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties $r2, r4;
        double d0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        d0 := @parameter0: double;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties getTcPr()>();

        r4 = $r2;

        if $r2 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties addNewTcPr()>();

     label1:
        $i0 = staticinvoke <org.apache.poi.util.Units: int toEMU(double)>(d0);

        interfaceinvoke r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: void setMarT(int)>($i0);

        return;
    }

    public void setBottomInset(double)
    {
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        int $i0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1, $r3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties $r2, r4;
        double d0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        d0 := @parameter0: double;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties getTcPr()>();

        r4 = $r2;

        if $r2 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties addNewTcPr()>();

     label1:
        $i0 = staticinvoke <org.apache.poi.util.Units: int toEMU(double)>(d0);

        interfaceinvoke r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: void setMarB(int)>($i0);

        return;
    }

    public void setBorderLeft(double)
    {
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        int $i0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties $r3;
        boolean $z0;
        double d0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        d0 := @parameter0: double;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties getTcPr()>();

        $z0 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: boolean isSetLnL()>();

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties getLnL()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties addNewLnL()>();

     label2:
        $i0 = staticinvoke <org.apache.poi.util.Units: int toEMU(double)>(d0);

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: void setW(int)>($i0);

        return;
    }

    public double getBorderLeft()
    {
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1;
        long $l1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties $r3;
        int $i0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties $r2;
        boolean $z0;
        double $d0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties getTcPr()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties getLnL()>();

        if $r3 == null goto label1;

        $z0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: boolean isSetW()>();

        if $z0 != 0 goto label2;

     label1:
        $d0 = <org.apache.poi.xslf.usermodel.XSLFTableCell: double defaultBorderWidth>;

        goto label3;

     label2:
        $i0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: int getW()>();

        $l1 = (long) $i0;

        $d0 = staticinvoke <org.apache.poi.util.Units: double toPoints(long)>($l1);

     label3:
        return $d0;
    }

    public void setBorderLeftColor(java.awt.Color)
    {
        java.awt.Color r3;
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties $r4;
        boolean $z0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        r3 := @parameter0: java.awt.Color;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties getTcPr()>();

        $z0 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: boolean isSetLnL()>();

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties getLnL()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties addNewLnL()>();

     label2:
        specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: void setLineColor(org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties,java.awt.Color)>($r4, r3);

        return;
    }

    public java.awt.Color getBorderLeftColor()
    {
        java.awt.Color $r4;
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties $r3;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties getTcPr()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties getLnL()>();

        $r4 = specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: java.awt.Color getLineColor(org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties)>($r3);

        return $r4;
    }

    public void setBorderRight(double)
    {
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        int $i0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties $r3;
        boolean $z0;
        double d0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        d0 := @parameter0: double;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties getTcPr()>();

        $z0 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: boolean isSetLnR()>();

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties getLnR()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties addNewLnR()>();

     label2:
        $i0 = staticinvoke <org.apache.poi.util.Units: int toEMU(double)>(d0);

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: void setW(int)>($i0);

        return;
    }

    public double getBorderRight()
    {
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1;
        long $l1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties $r3;
        int $i0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties $r2;
        boolean $z0;
        double $d0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties getTcPr()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties getLnR()>();

        if $r3 == null goto label1;

        $z0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: boolean isSetW()>();

        if $z0 != 0 goto label2;

     label1:
        $d0 = <org.apache.poi.xslf.usermodel.XSLFTableCell: double defaultBorderWidth>;

        goto label3;

     label2:
        $i0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: int getW()>();

        $l1 = (long) $i0;

        $d0 = staticinvoke <org.apache.poi.util.Units: double toPoints(long)>($l1);

     label3:
        return $d0;
    }

    public void setBorderRightColor(java.awt.Color)
    {
        java.awt.Color r3;
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties $r4;
        boolean $z0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        r3 := @parameter0: java.awt.Color;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties getTcPr()>();

        $z0 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: boolean isSetLnR()>();

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties getLnR()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties addNewLnR()>();

     label2:
        specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: void setLineColor(org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties,java.awt.Color)>($r4, r3);

        return;
    }

    public java.awt.Color getBorderRightColor()
    {
        java.awt.Color $r4;
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties $r3;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties getTcPr()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties getLnR()>();

        $r4 = specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: java.awt.Color getLineColor(org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties)>($r3);

        return $r4;
    }

    public void setBorderTop(double)
    {
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        int $i0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties $r3;
        boolean $z0;
        double d0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        d0 := @parameter0: double;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties getTcPr()>();

        $z0 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: boolean isSetLnT()>();

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties getLnT()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties addNewLnT()>();

     label2:
        $i0 = staticinvoke <org.apache.poi.util.Units: int toEMU(double)>(d0);

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: void setW(int)>($i0);

        return;
    }

    public double getBorderTop()
    {
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1;
        long $l1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties $r3;
        int $i0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties $r2;
        boolean $z0;
        double $d0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties getTcPr()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties getLnT()>();

        if $r3 == null goto label1;

        $z0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: boolean isSetW()>();

        if $z0 != 0 goto label2;

     label1:
        $d0 = <org.apache.poi.xslf.usermodel.XSLFTableCell: double defaultBorderWidth>;

        goto label3;

     label2:
        $i0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: int getW()>();

        $l1 = (long) $i0;

        $d0 = staticinvoke <org.apache.poi.util.Units: double toPoints(long)>($l1);

     label3:
        return $d0;
    }

    public void setBorderTopColor(java.awt.Color)
    {
        java.awt.Color r3;
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties $r4;
        boolean $z0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        r3 := @parameter0: java.awt.Color;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties getTcPr()>();

        $z0 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: boolean isSetLnT()>();

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties getLnT()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties addNewLnT()>();

     label2:
        specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: void setLineColor(org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties,java.awt.Color)>($r4, r3);

        return;
    }

    public java.awt.Color getBorderTopColor()
    {
        java.awt.Color $r4;
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties $r3;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties getTcPr()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties getLnT()>();

        $r4 = specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: java.awt.Color getLineColor(org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties)>($r3);

        return $r4;
    }

    public void setBorderBottom(double)
    {
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        int $i0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties $r3;
        boolean $z0;
        double d0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        d0 := @parameter0: double;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties getTcPr()>();

        $z0 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: boolean isSetLnB()>();

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties getLnB()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties addNewLnB()>();

     label2:
        $i0 = staticinvoke <org.apache.poi.util.Units: int toEMU(double)>(d0);

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: void setW(int)>($i0);

        return;
    }

    public double getBorderBottom()
    {
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1;
        long $l1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties $r3;
        int $i0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties $r2;
        boolean $z0;
        double $d0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties getTcPr()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties getLnB()>();

        if $r3 == null goto label1;

        $z0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: boolean isSetW()>();

        if $z0 != 0 goto label2;

     label1:
        $d0 = <org.apache.poi.xslf.usermodel.XSLFTableCell: double defaultBorderWidth>;

        goto label3;

     label2:
        $i0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: int getW()>();

        $l1 = (long) $i0;

        $d0 = staticinvoke <org.apache.poi.util.Units: double toPoints(long)>($l1);

     label3:
        return $d0;
    }

    public void setBorderBottomColor(java.awt.Color)
    {
        java.awt.Color r3;
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties $r4;
        boolean $z0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        r3 := @parameter0: java.awt.Color;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties getTcPr()>();

        $z0 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: boolean isSetLnB()>();

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties getLnB()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties addNewLnB()>();

     label2:
        specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: void setLineColor(org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties,java.awt.Color)>($r4, r3);

        return;
    }

    public java.awt.Color getBorderBottomColor()
    {
        java.awt.Color $r4;
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties $r3;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties getTcPr()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties getLnB()>();

        $r4 = specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: java.awt.Color getLineColor(org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties)>($r3);

        return $r4;
    }

    private void setLineColor(org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties, java.awt.Color)
    {
        java.awt.Color r0;
        byte[] $r14;
        org.openxmlformats.schemas.drawingml.x2006.main.STPresetLineDashVal$Enum $r17;
        org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPresetLineDashProperties $r16;
        byte $b1, $b3, $b5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties $r15;
        int $i0, $i2, $i4;
        boolean $z0, $z1, $z2;
        org.openxmlformats.schemas.drawingml.x2006.main.STLineCap$Enum $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.CTLineEndProperties $r5, $r9;
        org.apache.poi.xslf.usermodel.XSLFTableCell r18;
        org.openxmlformats.schemas.drawingml.x2006.main.STPenAlignment$Enum $r3;
        org.openxmlformats.schemas.drawingml.x2006.main.STLineEndWidth$Enum $r7, $r11;
        org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor $r13;
        org.openxmlformats.schemas.drawingml.x2006.main.STCompoundLine$Enum $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.STLineEndLength$Enum $r8, $r12;
        org.openxmlformats.schemas.drawingml.x2006.main.STLineEndType$Enum $r6, $r10;

        r18 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        r1 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties;

        r0 := @parameter1: java.awt.Color;

        if r0 != null goto label1;

        interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTNoFillProperties addNewNoFill()>();

        $z2 = interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: boolean isSetSolidFill()>();

        if $z2 == 0 goto label4;

        interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: void unsetSolidFill()>();

        goto label4;

     label1:
        $z0 = interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: boolean isSetNoFill()>();

        if $z0 == 0 goto label2;

        interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: void unsetNoFill()>();

     label2:
        $z1 = interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: boolean isSetPrstDash()>();

        if $z1 != 0 goto label3;

        $r16 = interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTPresetLineDashProperties addNewPrstDash()>();

        $r17 = <org.openxmlformats.schemas.drawingml.x2006.main.STPresetLineDashVal: org.openxmlformats.schemas.drawingml.x2006.main.STPresetLineDashVal$Enum SOLID>;

        interfaceinvoke $r16.<org.openxmlformats.schemas.drawingml.x2006.main.CTPresetLineDashProperties: void setVal(org.openxmlformats.schemas.drawingml.x2006.main.STPresetLineDashVal$Enum)>($r17);

     label3:
        $r2 = <org.openxmlformats.schemas.drawingml.x2006.main.STCompoundLine: org.openxmlformats.schemas.drawingml.x2006.main.STCompoundLine$Enum SNG>;

        interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: void setCmpd(org.openxmlformats.schemas.drawingml.x2006.main.STCompoundLine$Enum)>($r2);

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.main.STPenAlignment: org.openxmlformats.schemas.drawingml.x2006.main.STPenAlignment$Enum CTR>;

        interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: void setAlgn(org.openxmlformats.schemas.drawingml.x2006.main.STPenAlignment$Enum)>($r3);

        $r4 = <org.openxmlformats.schemas.drawingml.x2006.main.STLineCap: org.openxmlformats.schemas.drawingml.x2006.main.STLineCap$Enum FLAT>;

        interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: void setCap(org.openxmlformats.schemas.drawingml.x2006.main.STLineCap$Enum)>($r4);

        interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineJoinRound addNewRound()>();

        $r5 = interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineEndProperties addNewHeadEnd()>();

        $r6 = <org.openxmlformats.schemas.drawingml.x2006.main.STLineEndType: org.openxmlformats.schemas.drawingml.x2006.main.STLineEndType$Enum NONE>;

        interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineEndProperties: void setType(org.openxmlformats.schemas.drawingml.x2006.main.STLineEndType$Enum)>($r6);

        $r7 = <org.openxmlformats.schemas.drawingml.x2006.main.STLineEndWidth: org.openxmlformats.schemas.drawingml.x2006.main.STLineEndWidth$Enum MED>;

        interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineEndProperties: void setW(org.openxmlformats.schemas.drawingml.x2006.main.STLineEndWidth$Enum)>($r7);

        $r8 = <org.openxmlformats.schemas.drawingml.x2006.main.STLineEndLength: org.openxmlformats.schemas.drawingml.x2006.main.STLineEndLength$Enum MED>;

        interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineEndProperties: void setLen(org.openxmlformats.schemas.drawingml.x2006.main.STLineEndLength$Enum)>($r8);

        $r9 = interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTLineEndProperties addNewTailEnd()>();

        $r10 = <org.openxmlformats.schemas.drawingml.x2006.main.STLineEndType: org.openxmlformats.schemas.drawingml.x2006.main.STLineEndType$Enum NONE>;

        interfaceinvoke $r9.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineEndProperties: void setType(org.openxmlformats.schemas.drawingml.x2006.main.STLineEndType$Enum)>($r10);

        $r11 = <org.openxmlformats.schemas.drawingml.x2006.main.STLineEndWidth: org.openxmlformats.schemas.drawingml.x2006.main.STLineEndWidth$Enum MED>;

        interfaceinvoke $r9.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineEndProperties: void setW(org.openxmlformats.schemas.drawingml.x2006.main.STLineEndWidth$Enum)>($r11);

        $r12 = <org.openxmlformats.schemas.drawingml.x2006.main.STLineEndLength: org.openxmlformats.schemas.drawingml.x2006.main.STLineEndLength$Enum MED>;

        interfaceinvoke $r9.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineEndProperties: void setLen(org.openxmlformats.schemas.drawingml.x2006.main.STLineEndLength$Enum)>($r12);

        $r13 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor$Factory: org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor newInstance()>();

        $r14 = newarray (byte)[3];

        $i0 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        $b1 = (byte) $i0;

        $r14[0] = $b1;

        $i2 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        $b3 = (byte) $i2;

        $r14[1] = $b3;

        $i4 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        $b5 = (byte) $i4;

        $r14[2] = $b5;

        interfaceinvoke $r13.<org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor: void setVal(byte[])>($r14);

        $r15 = interfaceinvoke r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties addNewSolidFill()>();

        interfaceinvoke $r15.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: void setSrgbClr(org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor)>($r13);

     label4:
        return;
    }

    private java.awt.Color getLineColor(org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties)
    {
        java.awt.Color $r6;
        byte[] $r3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties r0;
        short $s3, $s4, $s5, $s6, $s7, $s8;
        org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties $r1;
        byte $b0, $b1, $b2;
        int $i9, $i10, $i11;
        boolean $z0, $z1, $z2;
        org.apache.poi.xslf.usermodel.XSLFTableCell r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor $r2;

        r5 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        r0 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties;

        if r0 == null goto label1;

        $z0 = interfaceinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: boolean isSetNoFill()>();

        if $z0 != 0 goto label1;

        $z1 = interfaceinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: boolean isSetSolidFill()>();

        if $z1 != 0 goto label2;

     label1:
        return null;

     label2:
        $r1 = interfaceinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.main.CTLineProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties getSolidFill()>();

        $z2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: boolean isSetSrgbClr()>();

        if $z2 != 0 goto label3;

        return null;

     label3:
        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor getSrgbClr()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor: byte[] getVal()>();

        $r6 = new java.awt.Color;

        $b0 = $r3[0];

        $s6 = (short) $b0;

        $s5 = 255 & $s6;

        $b1 = $r3[1];

        $s7 = (short) $b1;

        $s4 = 255 & $s7;

        $b2 = $r3[2];

        $s8 = (short) $b2;

        $s3 = 255 & $s8;

        $i9 = (int) $s5;

        $i10 = (int) $s4;

        $i11 = (int) $s3;

        specialinvoke $r6.<java.awt.Color: void <init>(int,int,int)>($i9, $i10, $i11);

        return $r6;
    }

    public void setFillColor(java.awt.Color)
    {
        java.awt.Color r3;
        byte[] $r5;
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor $r4;
        byte $b1, $b3, $b5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties $r6;
        int $i0, $i2, $i4;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        r3 := @parameter0: java.awt.Color;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties getTcPr()>();

        if r3 != null goto label1;

        $z1 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: boolean isSetSolidFill()>();

        if $z1 == 0 goto label4;

        interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: void unsetSolidFill()>();

        goto label4;

     label1:
        $z0 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: boolean isSetSolidFill()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties getSolidFill()>();

        goto label3;

     label2:
        $r6 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties addNewSolidFill()>();

     label3:
        $r4 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor$Factory: org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor newInstance()>();

        $r5 = newarray (byte)[3];

        $i0 = virtualinvoke r3.<java.awt.Color: int getRed()>();

        $b1 = (byte) $i0;

        $r5[0] = $b1;

        $i2 = virtualinvoke r3.<java.awt.Color: int getGreen()>();

        $b3 = (byte) $i2;

        $r5[1] = $b3;

        $i4 = virtualinvoke r3.<java.awt.Color: int getBlue()>();

        $b5 = (byte) $i4;

        $r5[2] = $b5;

        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor: void setVal(byte[])>($r5);

        interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: void setSrgbClr(org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor)>($r4);

     label4:
        return;
    }

    public java.awt.Color getFillColor()
    {
        java.awt.Color $r7;
        byte[] $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1;
        short $s3, $s4, $s5, $s6, $s7, $s8;
        org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties $r3;
        byte $b0, $b1, $b2;
        int $i9, $i10, $i11;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties $r2;
        boolean $z0, $z1;
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor $r4;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties getTcPr()>();

        $z0 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: boolean isSetSolidFill()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties getSolidFill()>();

        $z1 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: boolean isSetSrgbClr()>();

        if $z1 != 0 goto label2;

        return null;

     label2:
        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTSolidColorFillProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor getSrgbClr()>();

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor: byte[] getVal()>();

        $r7 = new java.awt.Color;

        $b0 = $r5[0];

        $s6 = (short) $b0;

        $s5 = 255 & $s6;

        $b1 = $r5[1];

        $s7 = (short) $b1;

        $s4 = 255 & $s7;

        $b2 = $r5[2];

        $s8 = (short) $b2;

        $s3 = 255 & $s8;

        $i9 = (int) $s5;

        $i10 = (int) $s4;

        $i11 = (int) $s3;

        specialinvoke $r7.<java.awt.Color: void <init>(int,int,int)>($i9, $i10, $i11);

        return $r7;
    }

    void setGridSpan(int)
    {
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        int i0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: void setGridSpan(int)>(i0);

        return;
    }

    void setRowSpan(int)
    {
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        int i0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: void setRowSpan(int)>(i0);

        return;
    }

    void setHMerge(boolean)
    {
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1;
        boolean z0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: void setHMerge(boolean)>(z0);

        return;
    }

    void setVMerge(boolean)
    {
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1;
        boolean z0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: void setVMerge(boolean)>(z0);

        return;
    }

    public void setVerticalAlignment(org.apache.poi.xslf.usermodel.VerticalAlignment)
    {
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.STTextAnchoringType$Enum $r4;
        int $i0, $i1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties $r2;
        org.apache.poi.xslf.usermodel.VerticalAlignment r3;
        boolean $z0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        r3 := @parameter0: org.apache.poi.xslf.usermodel.VerticalAlignment;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties getTcPr()>();

        if $r2 == null goto label2;

        if r3 != null goto label1;

        $z0 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: boolean isSetAnchor()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: void unsetAnchor()>();

        goto label2;

     label1:
        $i0 = virtualinvoke r3.<org.apache.poi.xslf.usermodel.VerticalAlignment: int ordinal()>();

        $i1 = $i0 + 1;

        $r4 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.main.STTextAnchoringType$Enum: org.openxmlformats.schemas.drawingml.x2006.main.STTextAnchoringType$Enum forInt(int)>($i1);

        interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: void setAnchor(org.openxmlformats.schemas.drawingml.x2006.main.STTextAnchoringType$Enum)>($r4);

     label2:
        return;
    }

    public org.apache.poi.xslf.usermodel.VerticalAlignment getVerticalAlignment()
    {
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.STTextAnchoringType$Enum $r3;
        org.apache.poi.xslf.usermodel.VerticalAlignment[] $r4;
        int $i0, $i1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties $r2;
        org.apache.poi.xslf.usermodel.VerticalAlignment r5;
        boolean $z0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties getTcPr()>();

        r5 = <org.apache.poi.xslf.usermodel.VerticalAlignment: org.apache.poi.xslf.usermodel.VerticalAlignment TOP>;

        if $r2 == null goto label1;

        $z0 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: boolean isSetAnchor()>();

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTableCellProperties: org.openxmlformats.schemas.drawingml.x2006.main.STTextAnchoringType$Enum getAnchor()>();

        $i0 = virtualinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.STTextAnchoringType$Enum: int intValue()>();

        $r4 = staticinvoke <org.apache.poi.xslf.usermodel.VerticalAlignment: org.apache.poi.xslf.usermodel.VerticalAlignment[] values()>();

        $i1 = $i0 - 1;

        r5 = $r4[$i1];

     label1:
        return r5;
    }

    public volatile org.apache.xmlbeans.XmlObject getXmlObject()
    {
        org.apache.poi.xslf.usermodel.XSLFTableCell r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell $r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTableCell;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTableCell: org.openxmlformats.schemas.drawingml.x2006.main.CTTableCell getXmlObject()>();

        return $r1;
    }

    static void <clinit>()
    {
        <org.apache.poi.xslf.usermodel.XSLFTableCell: double defaultBorderWidth> = 1.0;

        return;
    }
}
