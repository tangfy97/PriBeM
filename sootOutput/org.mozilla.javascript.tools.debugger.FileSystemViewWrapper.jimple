class org.mozilla.javascript.tools.debugger.FileSystemViewWrapper extends javax.swing.filechooser.FileSystemView
{
    private javax.swing.filechooser.FileSystemView v;

    void <init>()
    {
        javax.swing.filechooser.FileSystemView $r1;
        org.mozilla.javascript.tools.debugger.FileSystemViewWrapper r0;

        r0 := @this: org.mozilla.javascript.tools.debugger.FileSystemViewWrapper;

        specialinvoke r0.<javax.swing.filechooser.FileSystemView: void <init>()>();

        $r1 = staticinvoke <javax.swing.filechooser.FileSystemView: javax.swing.filechooser.FileSystemView getFileSystemView()>();

        r0.<org.mozilla.javascript.tools.debugger.FileSystemViewWrapper: javax.swing.filechooser.FileSystemView v> = $r1;

        return;
    }

    public java.io.File createFileObject(java.io.File, java.lang.String)
    {
        javax.swing.filechooser.FileSystemView $r4;
        org.mozilla.javascript.tools.debugger.FileWrapper $r0;
        java.lang.String r3;
        org.mozilla.javascript.tools.debugger.FileSystemViewWrapper r1;
        java.io.File r2, $r5;

        r1 := @this: org.mozilla.javascript.tools.debugger.FileSystemViewWrapper;

        r2 := @parameter0: java.io.File;

        r3 := @parameter1: java.lang.String;

        $r0 = new org.mozilla.javascript.tools.debugger.FileWrapper;

        $r4 = r1.<org.mozilla.javascript.tools.debugger.FileSystemViewWrapper: javax.swing.filechooser.FileSystemView v>;

        $r5 = virtualinvoke $r4.<javax.swing.filechooser.FileSystemView: java.io.File createFileObject(java.io.File,java.lang.String)>(r2, r3);

        specialinvoke $r0.<org.mozilla.javascript.tools.debugger.FileWrapper: void <init>(java.io.File)>($r5);

        return $r0;
    }

    public java.io.File createFileObject(java.lang.String)
    {
        javax.swing.filechooser.FileSystemView $r3;
        org.mozilla.javascript.tools.debugger.FileWrapper $r0;
        java.lang.String r2;
        org.mozilla.javascript.tools.debugger.FileSystemViewWrapper r1;
        java.io.File $r4;

        r1 := @this: org.mozilla.javascript.tools.debugger.FileSystemViewWrapper;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.mozilla.javascript.tools.debugger.FileWrapper;

        $r3 = r1.<org.mozilla.javascript.tools.debugger.FileSystemViewWrapper: javax.swing.filechooser.FileSystemView v>;

        $r4 = virtualinvoke $r3.<javax.swing.filechooser.FileSystemView: java.io.File createFileObject(java.lang.String)>(r2);

        specialinvoke $r0.<org.mozilla.javascript.tools.debugger.FileWrapper: void <init>(java.io.File)>($r4);

        return $r0;
    }

    public java.io.File createNewFolder(java.io.File) throws java.io.IOException
    {
        javax.swing.filechooser.FileSystemView $r3;
        org.mozilla.javascript.tools.debugger.FileWrapper $r0;
        org.mozilla.javascript.tools.debugger.FileSystemViewWrapper r1;
        java.io.File r2, $r4;

        r1 := @this: org.mozilla.javascript.tools.debugger.FileSystemViewWrapper;

        r2 := @parameter0: java.io.File;

        $r0 = new org.mozilla.javascript.tools.debugger.FileWrapper;

        $r3 = r1.<org.mozilla.javascript.tools.debugger.FileSystemViewWrapper: javax.swing.filechooser.FileSystemView v>;

        $r4 = virtualinvoke $r3.<javax.swing.filechooser.FileSystemView: java.io.File createNewFolder(java.io.File)>(r2);

        specialinvoke $r0.<org.mozilla.javascript.tools.debugger.FileWrapper: void <init>(java.io.File)>($r4);

        return $r0;
    }

    public java.io.File getChild(java.io.File, java.lang.String)
    {
        javax.swing.filechooser.FileSystemView $r4;
        org.mozilla.javascript.tools.debugger.FileWrapper $r0;
        java.lang.String r3;
        org.mozilla.javascript.tools.debugger.FileSystemViewWrapper r1;
        java.io.File r2, $r5;

        r1 := @this: org.mozilla.javascript.tools.debugger.FileSystemViewWrapper;

        r2 := @parameter0: java.io.File;

        r3 := @parameter1: java.lang.String;

        $r0 = new org.mozilla.javascript.tools.debugger.FileWrapper;

        $r4 = r1.<org.mozilla.javascript.tools.debugger.FileSystemViewWrapper: javax.swing.filechooser.FileSystemView v>;

        $r5 = virtualinvoke $r4.<javax.swing.filechooser.FileSystemView: java.io.File getChild(java.io.File,java.lang.String)>(r2, r3);

        specialinvoke $r0.<org.mozilla.javascript.tools.debugger.FileWrapper: void <init>(java.io.File)>($r5);

        return $r0;
    }

    public java.io.File getDefaultDirectory()
    {
        javax.swing.filechooser.FileSystemView $r2;
        org.mozilla.javascript.tools.debugger.FileWrapper $r0;
        org.mozilla.javascript.tools.debugger.FileSystemViewWrapper r1;
        java.io.File $r3;

        r1 := @this: org.mozilla.javascript.tools.debugger.FileSystemViewWrapper;

        $r0 = new org.mozilla.javascript.tools.debugger.FileWrapper;

        $r2 = r1.<org.mozilla.javascript.tools.debugger.FileSystemViewWrapper: javax.swing.filechooser.FileSystemView v>;

        $r3 = virtualinvoke $r2.<javax.swing.filechooser.FileSystemView: java.io.File getDefaultDirectory()>();

        specialinvoke $r0.<org.mozilla.javascript.tools.debugger.FileWrapper: void <init>(java.io.File)>($r3);

        return $r0;
    }

    public java.io.File[] getFiles(java.io.File, boolean)
    {
        org.mozilla.javascript.tools.debugger.FileWrapper $r5;
        org.mozilla.javascript.tools.debugger.FileSystemViewWrapper r0;
        java.io.File r1, $r6;
        javax.swing.filechooser.FileSystemView $r2;
        int $i0, $i1, i2;
        java.io.File[] $r3, r4;
        boolean z0;

        r0 := @this: org.mozilla.javascript.tools.debugger.FileSystemViewWrapper;

        r1 := @parameter0: java.io.File;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.mozilla.javascript.tools.debugger.FileSystemViewWrapper: javax.swing.filechooser.FileSystemView v>;

        $r3 = virtualinvoke $r2.<javax.swing.filechooser.FileSystemView: java.io.File[] getFiles(java.io.File,boolean)>(r1, z0);

        $i0 = lengthof $r3;

        r4 = newarray (java.io.File)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof $r3;

        if i2 >= $i1 goto label2;

        $r5 = new org.mozilla.javascript.tools.debugger.FileWrapper;

        $r6 = $r3[i2];

        specialinvoke $r5.<org.mozilla.javascript.tools.debugger.FileWrapper: void <init>(java.io.File)>($r6);

        r4[i2] = $r5;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r4;
    }

    public java.io.File getHomeDirectory()
    {
        javax.swing.filechooser.FileSystemView $r2;
        org.mozilla.javascript.tools.debugger.FileWrapper $r0;
        org.mozilla.javascript.tools.debugger.FileSystemViewWrapper r1;
        java.io.File $r3;

        r1 := @this: org.mozilla.javascript.tools.debugger.FileSystemViewWrapper;

        $r0 = new org.mozilla.javascript.tools.debugger.FileWrapper;

        $r2 = r1.<org.mozilla.javascript.tools.debugger.FileSystemViewWrapper: javax.swing.filechooser.FileSystemView v>;

        $r3 = virtualinvoke $r2.<javax.swing.filechooser.FileSystemView: java.io.File getHomeDirectory()>();

        specialinvoke $r0.<org.mozilla.javascript.tools.debugger.FileWrapper: void <init>(java.io.File)>($r3);

        return $r0;
    }

    public java.io.File getParentDirectory(java.io.File)
    {
        javax.swing.filechooser.FileSystemView $r3;
        org.mozilla.javascript.tools.debugger.FileWrapper $r0;
        org.mozilla.javascript.tools.debugger.FileSystemViewWrapper r1;
        java.io.File r2, $r4;

        r1 := @this: org.mozilla.javascript.tools.debugger.FileSystemViewWrapper;

        r2 := @parameter0: java.io.File;

        $r0 = new org.mozilla.javascript.tools.debugger.FileWrapper;

        $r3 = r1.<org.mozilla.javascript.tools.debugger.FileSystemViewWrapper: javax.swing.filechooser.FileSystemView v>;

        $r4 = virtualinvoke $r3.<javax.swing.filechooser.FileSystemView: java.io.File getParentDirectory(java.io.File)>(r2);

        specialinvoke $r0.<org.mozilla.javascript.tools.debugger.FileWrapper: void <init>(java.io.File)>($r4);

        return $r0;
    }

    public java.io.File[] getRoots()
    {
        org.mozilla.javascript.tools.debugger.FileWrapper $r4;
        org.mozilla.javascript.tools.debugger.FileSystemViewWrapper r0;
        java.io.File $r5;
        javax.swing.filechooser.FileSystemView $r1;
        int $i0, $i1, i2;
        java.io.File[] $r2, r3;

        r0 := @this: org.mozilla.javascript.tools.debugger.FileSystemViewWrapper;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.FileSystemViewWrapper: javax.swing.filechooser.FileSystemView v>;

        $r2 = virtualinvoke $r1.<javax.swing.filechooser.FileSystemView: java.io.File[] getRoots()>();

        $i0 = lengthof $r2;

        r3 = newarray (java.io.File)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof $r2;

        if i2 >= $i1 goto label2;

        $r4 = new org.mozilla.javascript.tools.debugger.FileWrapper;

        $r5 = $r2[i2];

        specialinvoke $r4.<org.mozilla.javascript.tools.debugger.FileWrapper: void <init>(java.io.File)>($r5);

        r3[i2] = $r4;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r3;
    }

    public java.lang.String getSystemDisplayName(java.io.File)
    {
        javax.swing.filechooser.FileSystemView $r2;
        java.lang.String $r3;
        org.mozilla.javascript.tools.debugger.FileSystemViewWrapper r0;
        java.io.File r1;

        r0 := @this: org.mozilla.javascript.tools.debugger.FileSystemViewWrapper;

        r1 := @parameter0: java.io.File;

        $r2 = r0.<org.mozilla.javascript.tools.debugger.FileSystemViewWrapper: javax.swing.filechooser.FileSystemView v>;

        $r3 = virtualinvoke $r2.<javax.swing.filechooser.FileSystemView: java.lang.String getSystemDisplayName(java.io.File)>(r1);

        return $r3;
    }

    public javax.swing.Icon getSystemIcon(java.io.File)
    {
        javax.swing.Icon $r2;
        org.mozilla.javascript.tools.debugger.FileSystemViewWrapper r0;
        java.io.File r1;

        r0 := @this: org.mozilla.javascript.tools.debugger.FileSystemViewWrapper;

        r1 := @parameter0: java.io.File;

        $r2 = virtualinvoke r0.<org.mozilla.javascript.tools.debugger.FileSystemViewWrapper: javax.swing.Icon getSystemIcon(java.io.File)>(r1);

        return $r2;
    }

    public java.lang.String getSystemTypeDescription(java.io.File)
    {
        javax.swing.filechooser.FileSystemView $r2;
        java.lang.String $r3;
        org.mozilla.javascript.tools.debugger.FileSystemViewWrapper r0;
        java.io.File r1;

        r0 := @this: org.mozilla.javascript.tools.debugger.FileSystemViewWrapper;

        r1 := @parameter0: java.io.File;

        $r2 = r0.<org.mozilla.javascript.tools.debugger.FileSystemViewWrapper: javax.swing.filechooser.FileSystemView v>;

        $r3 = virtualinvoke $r2.<javax.swing.filechooser.FileSystemView: java.lang.String getSystemTypeDescription(java.io.File)>(r1);

        return $r3;
    }

    public boolean isComputerNode(java.io.File)
    {
        javax.swing.filechooser.FileSystemView $r2;
        org.mozilla.javascript.tools.debugger.FileSystemViewWrapper r0;
        java.io.File r1;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.tools.debugger.FileSystemViewWrapper;

        r1 := @parameter0: java.io.File;

        $r2 = r0.<org.mozilla.javascript.tools.debugger.FileSystemViewWrapper: javax.swing.filechooser.FileSystemView v>;

        $z0 = virtualinvoke $r2.<javax.swing.filechooser.FileSystemView: boolean isComputerNode(java.io.File)>(r1);

        return $z0;
    }

    public boolean isDrive(java.io.File)
    {
        javax.swing.filechooser.FileSystemView $r2;
        org.mozilla.javascript.tools.debugger.FileSystemViewWrapper r0;
        java.io.File r1;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.tools.debugger.FileSystemViewWrapper;

        r1 := @parameter0: java.io.File;

        $r2 = r0.<org.mozilla.javascript.tools.debugger.FileSystemViewWrapper: javax.swing.filechooser.FileSystemView v>;

        $z0 = virtualinvoke $r2.<javax.swing.filechooser.FileSystemView: boolean isDrive(java.io.File)>(r1);

        return $z0;
    }

    public boolean isFileSystem(java.io.File)
    {
        javax.swing.filechooser.FileSystemView $r2;
        org.mozilla.javascript.tools.debugger.FileSystemViewWrapper r0;
        java.io.File r1;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.tools.debugger.FileSystemViewWrapper;

        r1 := @parameter0: java.io.File;

        $r2 = r0.<org.mozilla.javascript.tools.debugger.FileSystemViewWrapper: javax.swing.filechooser.FileSystemView v>;

        $z0 = virtualinvoke $r2.<javax.swing.filechooser.FileSystemView: boolean isFileSystem(java.io.File)>(r1);

        return $z0;
    }

    public boolean isFileSystemRoot(java.io.File)
    {
        javax.swing.filechooser.FileSystemView $r2;
        org.mozilla.javascript.tools.debugger.FileSystemViewWrapper r0;
        java.io.File r1;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.tools.debugger.FileSystemViewWrapper;

        r1 := @parameter0: java.io.File;

        $r2 = r0.<org.mozilla.javascript.tools.debugger.FileSystemViewWrapper: javax.swing.filechooser.FileSystemView v>;

        $z0 = virtualinvoke $r2.<javax.swing.filechooser.FileSystemView: boolean isFileSystemRoot(java.io.File)>(r1);

        return $z0;
    }

    public boolean isFloppyDrive(java.io.File)
    {
        javax.swing.filechooser.FileSystemView $r2;
        org.mozilla.javascript.tools.debugger.FileSystemViewWrapper r0;
        java.io.File r1;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.tools.debugger.FileSystemViewWrapper;

        r1 := @parameter0: java.io.File;

        $r2 = r0.<org.mozilla.javascript.tools.debugger.FileSystemViewWrapper: javax.swing.filechooser.FileSystemView v>;

        $z0 = virtualinvoke $r2.<javax.swing.filechooser.FileSystemView: boolean isFloppyDrive(java.io.File)>(r1);

        return $z0;
    }

    public boolean isHiddenFile(java.io.File)
    {
        javax.swing.filechooser.FileSystemView $r2;
        org.mozilla.javascript.tools.debugger.FileSystemViewWrapper r0;
        java.io.File r1;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.tools.debugger.FileSystemViewWrapper;

        r1 := @parameter0: java.io.File;

        $r2 = r0.<org.mozilla.javascript.tools.debugger.FileSystemViewWrapper: javax.swing.filechooser.FileSystemView v>;

        $z0 = virtualinvoke $r2.<javax.swing.filechooser.FileSystemView: boolean isHiddenFile(java.io.File)>(r1);

        return $z0;
    }

    public boolean isParent(java.io.File, java.io.File)
    {
        javax.swing.filechooser.FileSystemView $r3;
        org.mozilla.javascript.tools.debugger.FileSystemViewWrapper r0;
        java.io.File r1, r2;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.tools.debugger.FileSystemViewWrapper;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.io.File;

        $r3 = r0.<org.mozilla.javascript.tools.debugger.FileSystemViewWrapper: javax.swing.filechooser.FileSystemView v>;

        $z0 = virtualinvoke $r3.<javax.swing.filechooser.FileSystemView: boolean isParent(java.io.File,java.io.File)>(r1, r2);

        return $z0;
    }

    public boolean isRoot(java.io.File)
    {
        javax.swing.filechooser.FileSystemView $r2;
        org.mozilla.javascript.tools.debugger.FileSystemViewWrapper r0;
        java.io.File r1;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.tools.debugger.FileSystemViewWrapper;

        r1 := @parameter0: java.io.File;

        $r2 = r0.<org.mozilla.javascript.tools.debugger.FileSystemViewWrapper: javax.swing.filechooser.FileSystemView v>;

        $z0 = virtualinvoke $r2.<javax.swing.filechooser.FileSystemView: boolean isRoot(java.io.File)>(r1);

        return $z0;
    }

    public java.lang.Boolean isTraversable(java.io.File)
    {
        javax.swing.filechooser.FileSystemView $r2;
        java.lang.Boolean $r3;
        org.mozilla.javascript.tools.debugger.FileSystemViewWrapper r0;
        java.io.File r1;

        r0 := @this: org.mozilla.javascript.tools.debugger.FileSystemViewWrapper;

        r1 := @parameter0: java.io.File;

        $r2 = r0.<org.mozilla.javascript.tools.debugger.FileSystemViewWrapper: javax.swing.filechooser.FileSystemView v>;

        $r3 = virtualinvoke $r2.<javax.swing.filechooser.FileSystemView: java.lang.Boolean isTraversable(java.io.File)>(r1);

        return $r3;
    }
}
