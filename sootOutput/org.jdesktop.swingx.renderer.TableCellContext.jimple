public class org.jdesktop.swingx.renderer.TableCellContext extends org.jdesktop.swingx.renderer.CellContext
{

    public void <init>()
    {
        org.jdesktop.swingx.renderer.TableCellContext r0;

        r0 := @this: org.jdesktop.swingx.renderer.TableCellContext;

        specialinvoke r0.<org.jdesktop.swingx.renderer.CellContext: void <init>()>();

        return;
    }

    public void installContext(javax.swing.JTable, java.lang.Object, int, int, boolean, boolean, boolean, boolean)
    {
        int i0, i1;
        org.jdesktop.swingx.renderer.TableCellContext r0;
        javax.swing.JTable r1;
        java.lang.Object r2;
        boolean z0, z1, z2, z3, $z4;

        r0 := @this: org.jdesktop.swingx.renderer.TableCellContext;

        r1 := @parameter0: javax.swing.JTable;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        z2 := @parameter6: boolean;

        z3 := @parameter7: boolean;

        r0.<org.jdesktop.swingx.renderer.TableCellContext: javax.swing.JComponent component> = r1;

        virtualinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: void installState(java.lang.Object,int,int,boolean,boolean,boolean,boolean)>(r2, i0, i1, z0, z1, z2, z3);

        $z4 = specialinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: boolean checkDropOnState()>();

        r0.<org.jdesktop.swingx.renderer.TableCellContext: boolean dropOn> = $z4;

        return;
    }

    private boolean checkDropOnState()
    {
        javax.swing.JTable$DropLocation $r3;
        int $i0, $i1, $i2, $i3;
        org.jdesktop.swingx.renderer.TableCellContext r0;
        javax.swing.JTable $r1, $r2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.jdesktop.swingx.renderer.TableCellContext;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: javax.swing.JTable getComponent()>();

        if $r1 == null goto label1;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: boolean isValidRow()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: boolean isValidColumn()>();

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r2 = virtualinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: javax.swing.JTable getComponent()>();

        $r3 = virtualinvoke $r2.<javax.swing.JTable: javax.swing.JTable$DropLocation getDropLocation()>();

        if $r3 == null goto label3;

        $z2 = virtualinvoke $r3.<javax.swing.JTable$DropLocation: boolean isInsertRow()>();

        if $z2 != 0 goto label3;

        $z3 = virtualinvoke $r3.<javax.swing.JTable$DropLocation: boolean isInsertColumn()>();

        if $z3 != 0 goto label3;

        $i0 = virtualinvoke $r3.<javax.swing.JTable$DropLocation: int getRow()>();

        $i1 = r0.<org.jdesktop.swingx.renderer.TableCellContext: int row>;

        if $i0 != $i1 goto label3;

        $i2 = virtualinvoke $r3.<javax.swing.JTable$DropLocation: int getColumn()>();

        $i3 = r0.<org.jdesktop.swingx.renderer.TableCellContext: int column>;

        if $i2 != $i3 goto label3;

        return 1;

     label3:
        return 0;
    }

    public javax.swing.JTable getComponent()
    {
        javax.swing.JComponent $r1;
        org.jdesktop.swingx.renderer.TableCellContext r0;
        javax.swing.JTable $r2;

        r0 := @this: org.jdesktop.swingx.renderer.TableCellContext;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.renderer.CellContext: javax.swing.JComponent getComponent()>();

        $r2 = (javax.swing.JTable) $r1;

        return $r2;
    }

    public boolean isEditable()
    {
        int $i0, $i1;
        org.jdesktop.swingx.renderer.TableCellContext r0;
        javax.swing.JTable $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.jdesktop.swingx.renderer.TableCellContext;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: javax.swing.JTable getComponent()>();

        if $r1 == null goto label1;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: boolean isValidRow()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: boolean isValidColumn()>();

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r2 = virtualinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: javax.swing.JTable getComponent()>();

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: int getRow()>();

        $i1 = virtualinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: int getColumn()>();

        $z2 = virtualinvoke $r2.<javax.swing.JTable: boolean isCellEditable(int,int)>($i0, $i1);

        return $z2;
    }

    protected java.awt.Color getSelectionBackground()
    {
        java.awt.Color $r3, $r4;
        org.jdesktop.swingx.renderer.TableCellContext r0;
        javax.swing.JTable $r1, $r2;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.renderer.TableCellContext;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: boolean isDropOn()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: java.awt.Color getDropCellBackground()>();

        if $r3 == null goto label1;

        return $r3;

     label1:
        $r1 = virtualinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: javax.swing.JTable getComponent()>();

        if $r1 == null goto label2;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: javax.swing.JTable getComponent()>();

        $r4 = virtualinvoke $r2.<javax.swing.JTable: java.awt.Color getSelectionBackground()>();

        goto label3;

     label2:
        $r4 = null;

     label3:
        return $r4;
    }

    protected java.awt.Color getSelectionForeground()
    {
        java.awt.Color $r3, $r4;
        org.jdesktop.swingx.renderer.TableCellContext r0;
        javax.swing.JTable $r1, $r2;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.renderer.TableCellContext;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: boolean isDropOn()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: java.awt.Color getDropCellForeground()>();

        if $r3 == null goto label1;

        return $r3;

     label1:
        $r1 = virtualinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: javax.swing.JTable getComponent()>();

        if $r1 == null goto label2;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: javax.swing.JTable getComponent()>();

        $r4 = virtualinvoke $r2.<javax.swing.JTable: java.awt.Color getSelectionForeground()>();

        goto label3;

     label2:
        $r4 = null;

     label3:
        return $r4;
    }

    protected java.lang.String getUIPrefix()
    {
        org.jdesktop.swingx.renderer.TableCellContext r0;

        r0 := @this: org.jdesktop.swingx.renderer.TableCellContext;

        return "Table.";
    }

    protected boolean isValidColumn()
    {
        int $i0, $i1, $i2;
        org.jdesktop.swingx.renderer.TableCellContext r0;
        javax.swing.JTable $r1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.renderer.TableCellContext;

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: int getColumn()>();

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: int getColumn()>();

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: javax.swing.JTable getComponent()>();

        $i2 = virtualinvoke $r1.<javax.swing.JTable: int getColumnCount()>();

        if $i1 >= $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected boolean isValidRow()
    {
        int $i0, $i1, $i2;
        org.jdesktop.swingx.renderer.TableCellContext r0;
        javax.swing.JTable $r1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.renderer.TableCellContext;

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: int getRow()>();

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: int getRow()>();

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: javax.swing.JTable getComponent()>();

        $i2 = virtualinvoke $r1.<javax.swing.JTable: int getRowCount()>();

        if $i1 >= $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public volatile javax.swing.JComponent getComponent()
    {
        org.jdesktop.swingx.renderer.TableCellContext r0;
        javax.swing.JTable $r1;

        r0 := @this: org.jdesktop.swingx.renderer.TableCellContext;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.renderer.TableCellContext: javax.swing.JTable getComponent()>();

        return $r1;
    }
}
