public class org.apache.pdfbox.util.XMLUtil extends java.lang.Object
{

    private void <init>()
    {
        org.apache.pdfbox.util.XMLUtil r0;

        r0 := @this: org.apache.pdfbox.util.XMLUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.w3c.dom.Document parse(java.io.InputStream) throws java.io.IOException
    {
        org.w3c.dom.Document $r3;
        javax.xml.parsers.DocumentBuilder $r1;
        java.io.IOException $r5;
        javax.xml.parsers.DocumentBuilderFactory $r0;
        java.lang.String $r6;
        java.lang.Exception $r4;
        java.io.InputStream r2;

        r2 := @parameter0: java.io.InputStream;

     label1:
        $r0 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        $r1 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r3 = virtualinvoke $r1.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>(r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.io.IOException;

        $r6 = virtualinvoke $r4.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String getNodeValue(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r0;
        org.w3c.dom.NodeList $r1;
        org.w3c.dom.Node $r2;
        int $i0, i1;
        java.lang.String r3;
        boolean $z0;

        r0 := @parameter0: org.w3c.dom.Element;

        r3 = "";

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r1.<org.w3c.dom.NodeList: int getLength()>();

        if i1 >= $i0 goto label3;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i1);

        $z0 = $r2 instanceof org.w3c.dom.Text;

        if $z0 == 0 goto label2;

        r3 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r3;
    }
}
