final class minsolver.fol2sat.MinFOL2BoolCache extends java.lang.Object
{
    private final java.util.Map cache;

    void <init>(kodkod.util.nodes.AnnotatedNode)
    {
        java.util.Map $r6, $r7, $r14, $r18;
        int $i0;
        minsolver.fol2sat.MinFOL2BoolCache r0;
        kodkod.util.nodes.AnnotatedNode r2;
        boolean $z0, $z1;
        java.util.Map$Entry r11;
        minsolver.fol2sat.MinFOL2BoolCache$MultiVarRecord $r16;
        java.util.IdentityHashMap $r5;
        java.util.Iterator $r9;
        java.util.Set $r3, $r8, r13;
        minsolver.fol2sat.MinFOL2BoolCache$NoVarRecord $r20;
        kodkod.ast.Node $r4, $r17, $r21;
        minsolver.fol2sat.MinFOL2BoolCache$CacheCollector $r1;
        java.lang.Object $r10, $r12, $r15, $r19;

        r0 := @this: minsolver.fol2sat.MinFOL2BoolCache;

        r2 := @parameter0: kodkod.util.nodes.AnnotatedNode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new minsolver.fol2sat.MinFOL2BoolCache$CacheCollector;

        $r3 = virtualinvoke r2.<kodkod.util.nodes.AnnotatedNode: java.util.Set sharedNodes()>();

        specialinvoke $r1.<minsolver.fol2sat.MinFOL2BoolCache$CacheCollector: void <init>(java.util.Set)>($r3);

        $r4 = virtualinvoke r2.<kodkod.util.nodes.AnnotatedNode: kodkod.ast.Node node()>();

        virtualinvoke $r4.<kodkod.ast.Node: java.lang.Object accept(kodkod.ast.visitor.ReturnVisitor)>($r1);

        $r5 = new java.util.IdentityHashMap;

        $r6 = virtualinvoke $r1.<minsolver.fol2sat.MinFOL2BoolCache$CacheCollector: java.util.Map cache()>();

        $i0 = interfaceinvoke $r6.<java.util.Map: int size()>();

        specialinvoke $r5.<java.util.IdentityHashMap: void <init>(int)>($i0);

        r0.<minsolver.fol2sat.MinFOL2BoolCache: java.util.Map cache> = $r5;

        $r7 = virtualinvoke $r1.<minsolver.fol2sat.MinFOL2BoolCache$CacheCollector: java.util.Map cache()>();

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

        goto label3;

     label1:
        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.util.Map$Entry) $r10;

        $r12 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        r13 = (java.util.Set) $r12;

        $z0 = interfaceinvoke r13.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r18 = r0.<minsolver.fol2sat.MinFOL2BoolCache: java.util.Map cache>;

        $r19 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r21 = (kodkod.ast.Node) $r19;

        $r20 = new minsolver.fol2sat.MinFOL2BoolCache$NoVarRecord;

        specialinvoke $r20.<minsolver.fol2sat.MinFOL2BoolCache$NoVarRecord: void <init>(minsolver.fol2sat.MinFOL2BoolCache$NoVarRecord)>(null);

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r20);

        goto label3;

     label2:
        $r14 = r0.<minsolver.fol2sat.MinFOL2BoolCache: java.util.Map cache>;

        $r15 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r17 = (kodkod.ast.Node) $r15;

        $r16 = new minsolver.fol2sat.MinFOL2BoolCache$MultiVarRecord;

        specialinvoke $r16.<minsolver.fol2sat.MinFOL2BoolCache$MultiVarRecord: void <init>(java.util.Set)>(r13);

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r16);

     label3:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        return;
    }

    java.lang.Object lookup(kodkod.ast.Node, minsolver.fol2sat.MinEnvironment)
    {
        minsolver.fol2sat.MinFOL2BoolCache$Record r4;
        java.util.Map $r2;
        java.lang.Object $r3, $r6;
        minsolver.fol2sat.MinFOL2BoolCache r0;
        minsolver.fol2sat.MinEnvironment r5;
        kodkod.ast.Node r1;

        r0 := @this: minsolver.fol2sat.MinFOL2BoolCache;

        r1 := @parameter0: kodkod.ast.Node;

        r5 := @parameter1: minsolver.fol2sat.MinEnvironment;

        $r2 = r0.<minsolver.fol2sat.MinFOL2BoolCache: java.util.Map cache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (minsolver.fol2sat.MinFOL2BoolCache$Record) $r3;

        if r4 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r6 = virtualinvoke r4.<minsolver.fol2sat.MinFOL2BoolCache$Record: java.lang.Object get(minsolver.fol2sat.MinEnvironment)>(r5);

     label2:
        return $r6;
    }

    final java.lang.Object cache(kodkod.ast.Node, java.lang.Object, minsolver.fol2sat.MinEnvironment)
    {
        minsolver.fol2sat.MinFOL2BoolCache$Record r4;
        java.util.Map $r2;
        java.lang.Object $r3, r5;
        minsolver.fol2sat.MinFOL2BoolCache r0;
        minsolver.fol2sat.MinEnvironment r6;
        kodkod.ast.Node r1;

        r0 := @this: minsolver.fol2sat.MinFOL2BoolCache;

        r1 := @parameter0: kodkod.ast.Node;

        r5 := @parameter1: java.lang.Object;

        r6 := @parameter2: minsolver.fol2sat.MinEnvironment;

        $r2 = r0.<minsolver.fol2sat.MinFOL2BoolCache: java.util.Map cache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (minsolver.fol2sat.MinFOL2BoolCache$Record) $r3;

        if r4 == null goto label1;

        virtualinvoke r4.<minsolver.fol2sat.MinFOL2BoolCache$Record: void set(java.lang.Object,minsolver.fol2sat.MinEnvironment)>(r5, r6);

     label1:
        return r5;
    }
}
