public class org.sat4j.minisat.core.Solver extends java.lang.Object implements org.sat4j.specs.ISolverService, org.sat4j.minisat.core.ICDCL
{
    private static final long serialVersionUID;
    private static final double CLAUSE_RESCALE_FACTOR;
    private static final double CLAUSE_RESCALE_BOUND;
    protected org.sat4j.minisat.core.ICDCLLogger out;
    protected final org.sat4j.specs.IVec constrs;
    protected final org.sat4j.specs.IVec learnts;
    private double claInc;
    private double claDecay;
    private int qhead;
    protected final org.sat4j.specs.IVecInt trail;
    protected final org.sat4j.specs.IVecInt trailLim;
    protected int rootLevel;
    private int[] model;
    protected org.sat4j.minisat.core.ILits voc;
    private org.sat4j.minisat.core.IOrder order;
    private final org.sat4j.minisat.core.ActivityComparator comparator;
    private org.sat4j.minisat.core.SolverStats stats;
    private org.sat4j.minisat.core.LearningStrategy learner;
    protected volatile boolean undertimeout;
    private long timeout;
    private boolean timeBasedTimeout;
    protected org.sat4j.minisat.core.DataStructureFactory dsfactory;
    private org.sat4j.minisat.core.SearchParams params;
    private final org.sat4j.specs.IVecInt __dimacs_out;
    protected org.sat4j.specs.SearchListener slistener;
    private org.sat4j.minisat.core.RestartStrategy restarter;
    private final java.util.Map constrTypes;
    private boolean isDBSimplificationAllowed;
    private final org.sat4j.specs.IVecInt learnedLiterals;
    private boolean verbose;
    private boolean keepHot;
    private java.lang.String prefix;
    private int declaredMaxVarId;
    private boolean[] mseen;
    private final org.sat4j.specs.IVecInt mpreason;
    private final org.sat4j.specs.IVecInt moutLearnt;
    public static final org.sat4j.minisat.core.ISimplifier NO_SIMPLIFICATION;
    public final org.sat4j.minisat.core.ISimplifier SIMPLE_SIMPLIFICATION;
    public final org.sat4j.minisat.core.ISimplifier EXPENSIVE_SIMPLIFICATION;
    public final org.sat4j.minisat.core.ISimplifier EXPENSIVE_SIMPLIFICATION_WLONLY;
    private org.sat4j.minisat.core.ISimplifier simplifier;
    private final org.sat4j.specs.IVecInt analyzetoclear;
    private final org.sat4j.specs.IVecInt analyzestack;
    private final org.sat4j.specs.IVec watched;
    private final org.sat4j.minisat.core.Pair analysisResult;
    private boolean[] userbooleanmodel;
    private org.sat4j.specs.IVecInt unsatExplanationInTermsOfAssumptions;
    private final org.sat4j.specs.IVecInt implied;
    private final org.sat4j.specs.IVecInt decisions;
    private int[] fullmodel;
    private int[] prime;
    private double timebegin;
    private boolean needToReduceDB;
    private org.sat4j.minisat.core.ConflictTimerContainer conflictCount;
    private transient java.util.Timer timer;
    private final org.sat4j.minisat.core.ConflictTimer memoryTimer;
    public final org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy memory_based;
    private final org.sat4j.minisat.core.ConflictTimer lbdTimer;
    public final org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy glucose;
    protected org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy learnedConstraintsDeletionStrategy;
    private boolean lastConflictMeansUnsat;
    private org.sat4j.minisat.core.Constr sharedConflict;
    static final boolean $assertionsDisabled;

    protected org.sat4j.specs.IVecInt dimacs2internal(org.sat4j.specs.IVecInt)
    {
        org.sat4j.specs.IVecInt $r1, r2, $r3, $r4, $r6;
        java.lang.IllegalArgumentException $r7;
        int $i0, $i1, $i2, $i3, i4;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.ILits $r5;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r2 := @parameter0: org.sat4j.specs.IVecInt;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt __dimacs_out>;

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: void clear()>();

        $r3 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt __dimacs_out>;

        $i0 = interfaceinvoke r2.<org.sat4j.specs.IVecInt: int size()>();

        interfaceinvoke $r3.<org.sat4j.specs.IVecInt: void ensure(int)>($i0);

        i4 = 0;

     label1:
        $i1 = interfaceinvoke r2.<org.sat4j.specs.IVecInt: int size()>();

        if i4 >= $i1 goto label3;

        $i2 = interfaceinvoke r2.<org.sat4j.specs.IVecInt: int get(int)>(i4);

        if $i2 != 0 goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("0 is not a valid variable identifier");

        throw $r7;

     label2:
        $r6 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt __dimacs_out>;

        $r5 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $i3 = interfaceinvoke $r5.<org.sat4j.minisat.core.ILits: int getFromPool(int)>($i2);

        interfaceinvoke $r6.<org.sat4j.specs.IVecInt: void unsafePush(int)>($i3);

        i4 = i4 + 1;

        goto label1;

     label3:
        $r4 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt __dimacs_out>;

        return $r4;
    }

    public void registerLiteral(int)
    {
        int i0;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.ILits $r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        interfaceinvoke $r1.<org.sat4j.minisat.core.ILits: int getFromPool(int)>(i0);

        return;
    }

    public void <init>(org.sat4j.minisat.core.LearningStrategy, org.sat4j.minisat.core.DataStructureFactory, org.sat4j.minisat.core.IOrder, org.sat4j.minisat.core.RestartStrategy)
    {
        org.sat4j.minisat.core.LearningStrategy r1;
        org.sat4j.minisat.core.IOrder r4;
        org.sat4j.minisat.core.RestartStrategy r5;
        org.sat4j.minisat.core.DataStructureFactory r2;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.SearchParams $r3;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r1 := @parameter0: org.sat4j.minisat.core.LearningStrategy;

        r2 := @parameter1: org.sat4j.minisat.core.DataStructureFactory;

        r4 := @parameter2: org.sat4j.minisat.core.IOrder;

        r5 := @parameter3: org.sat4j.minisat.core.RestartStrategy;

        $r3 = new org.sat4j.minisat.core.SearchParams;

        specialinvoke $r3.<org.sat4j.minisat.core.SearchParams: void <init>()>();

        specialinvoke r0.<org.sat4j.minisat.core.Solver: void <init>(org.sat4j.minisat.core.LearningStrategy,org.sat4j.minisat.core.DataStructureFactory,org.sat4j.minisat.core.SearchParams,org.sat4j.minisat.core.IOrder,org.sat4j.minisat.core.RestartStrategy)>(r1, r2, $r3, r4, r5);

        return;
    }

    public void <init>(org.sat4j.minisat.core.LearningStrategy, org.sat4j.minisat.core.DataStructureFactory, org.sat4j.minisat.core.SearchParams, org.sat4j.minisat.core.IOrder, org.sat4j.minisat.core.RestartStrategy)
    {
        org.sat4j.minisat.core.LearningStrategy r1;
        org.sat4j.minisat.core.IOrder r4;
        org.sat4j.minisat.core.RestartStrategy r5;
        org.sat4j.minisat.core.ICDCLLogger $r6;
        org.sat4j.minisat.core.DataStructureFactory r2;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.SearchParams r3;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r1 := @parameter0: org.sat4j.minisat.core.LearningStrategy;

        r2 := @parameter1: org.sat4j.minisat.core.DataStructureFactory;

        r3 := @parameter2: org.sat4j.minisat.core.SearchParams;

        r4 := @parameter3: org.sat4j.minisat.core.IOrder;

        r5 := @parameter4: org.sat4j.minisat.core.RestartStrategy;

        $r6 = <org.sat4j.minisat.core.ICDCLLogger: org.sat4j.minisat.core.ICDCLLogger CONSOLE>;

        specialinvoke r0.<org.sat4j.minisat.core.Solver: void <init>(org.sat4j.minisat.core.LearningStrategy,org.sat4j.minisat.core.DataStructureFactory,org.sat4j.minisat.core.SearchParams,org.sat4j.minisat.core.IOrder,org.sat4j.minisat.core.RestartStrategy,org.sat4j.minisat.core.ICDCLLogger)>(r1, r2, r3, r4, r5, $r6);

        return;
    }

    public void <init>(org.sat4j.minisat.core.LearningStrategy, org.sat4j.minisat.core.DataStructureFactory, org.sat4j.minisat.core.SearchParams, org.sat4j.minisat.core.IOrder, org.sat4j.minisat.core.RestartStrategy, org.sat4j.minisat.core.ICDCLLogger)
    {
        org.sat4j.minisat.core.Solver$2 $r14;
        org.sat4j.minisat.core.Solver$4 $r16;
        org.sat4j.minisat.core.Solver$3 $r15;
        org.sat4j.minisat.core.ICDCLLogger r36;
        org.sat4j.minisat.core.DataStructureFactory r34;
        org.sat4j.core.Vec $r1, $r2, $r20;
        org.sat4j.minisat.core.SolverStats $r6;
        org.sat4j.minisat.core.Solver$8 $r27;
        org.sat4j.minisat.core.Solver$7 $r24;
        org.sat4j.minisat.core.Pair $r21;
        org.sat4j.minisat.core.SearchParams r33;
        org.sat4j.minisat.core.LearningStrategy r31;
        org.sat4j.minisat.core.ISimplifier $r17;
        org.sat4j.minisat.core.ConflictTimer $r25, $r29;
        java.util.HashMap $r9;
        org.sat4j.minisat.core.VoidTracing $r8;
        org.sat4j.minisat.core.RestartStrategy r35;
        boolean[] $r11;
        org.sat4j.minisat.core.Solver$Glucose2LCDS $r28;
        org.sat4j.minisat.core.IOrder r32;
        org.sat4j.minisat.core.ActivityComparator $r5;
        org.sat4j.core.VecInt $r3, $r4, $r7, $r10, $r12, $r13, $r18, $r19, $r22, $r23;
        org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy $r26, $r30;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r31 := @parameter0: org.sat4j.minisat.core.LearningStrategy;

        r34 := @parameter1: org.sat4j.minisat.core.DataStructureFactory;

        r33 := @parameter2: org.sat4j.minisat.core.SearchParams;

        r32 := @parameter3: org.sat4j.minisat.core.IOrder;

        r35 := @parameter4: org.sat4j.minisat.core.RestartStrategy;

        r36 := @parameter5: org.sat4j.minisat.core.ICDCLLogger;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.sat4j.core.Vec;

        specialinvoke $r1.<org.sat4j.core.Vec: void <init>()>();

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVec constrs> = $r1;

        $r2 = new org.sat4j.core.Vec;

        specialinvoke $r2.<org.sat4j.core.Vec: void <init>()>();

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVec learnts> = $r2;

        r0.<org.sat4j.minisat.core.Solver: double claInc> = 1.0;

        r0.<org.sat4j.minisat.core.Solver: double claDecay> = 1.0;

        r0.<org.sat4j.minisat.core.Solver: int qhead> = 0;

        $r3 = new org.sat4j.core.VecInt;

        specialinvoke $r3.<org.sat4j.core.VecInt: void <init>()>();

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail> = $r3;

        $r4 = new org.sat4j.core.VecInt;

        specialinvoke $r4.<org.sat4j.core.VecInt: void <init>()>();

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trailLim> = $r4;

        r0.<org.sat4j.minisat.core.Solver: int[] model> = null;

        $r5 = new org.sat4j.minisat.core.ActivityComparator;

        specialinvoke $r5.<org.sat4j.minisat.core.ActivityComparator: void <init>()>();

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ActivityComparator comparator> = $r5;

        $r6 = new org.sat4j.minisat.core.SolverStats;

        specialinvoke $r6.<org.sat4j.minisat.core.SolverStats: void <init>()>();

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SolverStats stats> = $r6;

        r0.<org.sat4j.minisat.core.Solver: long timeout> = 2147483647L;

        r0.<org.sat4j.minisat.core.Solver: boolean timeBasedTimeout> = 1;

        $r7 = new org.sat4j.core.VecInt;

        specialinvoke $r7.<org.sat4j.core.VecInt: void <init>()>();

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt __dimacs_out> = $r7;

        $r8 = new org.sat4j.minisat.core.VoidTracing;

        specialinvoke $r8.<org.sat4j.minisat.core.VoidTracing: void <init>()>();

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.SearchListener slistener> = $r8;

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        r0.<org.sat4j.minisat.core.Solver: java.util.Map constrTypes> = $r9;

        r0.<org.sat4j.minisat.core.Solver: boolean isDBSimplificationAllowed> = 0;

        $r10 = new org.sat4j.core.VecInt;

        specialinvoke $r10.<org.sat4j.core.VecInt: void <init>()>();

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt learnedLiterals> = $r10;

        r0.<org.sat4j.minisat.core.Solver: boolean verbose> = 0;

        r0.<org.sat4j.minisat.core.Solver: boolean keepHot> = 0;

        r0.<org.sat4j.minisat.core.Solver: java.lang.String prefix> = "c ";

        r0.<org.sat4j.minisat.core.Solver: int declaredMaxVarId> = 0;

        $r11 = newarray (boolean)[0];

        r0.<org.sat4j.minisat.core.Solver: boolean[] mseen> = $r11;

        $r12 = new org.sat4j.core.VecInt;

        specialinvoke $r12.<org.sat4j.core.VecInt: void <init>()>();

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt mpreason> = $r12;

        $r13 = new org.sat4j.core.VecInt;

        specialinvoke $r13.<org.sat4j.core.VecInt: void <init>()>();

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt moutLearnt> = $r13;

        $r14 = new org.sat4j.minisat.core.Solver$2;

        specialinvoke $r14.<org.sat4j.minisat.core.Solver$2: void <init>(org.sat4j.minisat.core.Solver)>(r0);

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ISimplifier SIMPLE_SIMPLIFICATION> = $r14;

        $r15 = new org.sat4j.minisat.core.Solver$3;

        specialinvoke $r15.<org.sat4j.minisat.core.Solver$3: void <init>(org.sat4j.minisat.core.Solver)>(r0);

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ISimplifier EXPENSIVE_SIMPLIFICATION> = $r15;

        $r16 = new org.sat4j.minisat.core.Solver$4;

        specialinvoke $r16.<org.sat4j.minisat.core.Solver$4: void <init>(org.sat4j.minisat.core.Solver)>(r0);

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ISimplifier EXPENSIVE_SIMPLIFICATION_WLONLY> = $r16;

        $r17 = <org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ISimplifier NO_SIMPLIFICATION>;

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ISimplifier simplifier> = $r17;

        $r18 = new org.sat4j.core.VecInt;

        specialinvoke $r18.<org.sat4j.core.VecInt: void <init>()>();

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt analyzetoclear> = $r18;

        $r19 = new org.sat4j.core.VecInt;

        specialinvoke $r19.<org.sat4j.core.VecInt: void <init>()>();

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt analyzestack> = $r19;

        $r20 = new org.sat4j.core.Vec;

        specialinvoke $r20.<org.sat4j.core.Vec: void <init>()>();

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVec watched> = $r20;

        $r21 = new org.sat4j.minisat.core.Pair;

        specialinvoke $r21.<org.sat4j.minisat.core.Pair: void <init>()>();

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.Pair analysisResult> = $r21;

        $r22 = new org.sat4j.core.VecInt;

        specialinvoke $r22.<org.sat4j.core.VecInt: void <init>()>();

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt implied> = $r22;

        $r23 = new org.sat4j.core.VecInt;

        specialinvoke $r23.<org.sat4j.core.VecInt: void <init>()>();

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt decisions> = $r23;

        r0.<org.sat4j.minisat.core.Solver: double timebegin> = 0.0;

        $r24 = new org.sat4j.minisat.core.Solver$7;

        specialinvoke $r24.<org.sat4j.minisat.core.Solver$7: void <init>(org.sat4j.minisat.core.Solver,int)>(r0, 500);

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ConflictTimer memoryTimer> = $r24;

        $r25 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ConflictTimer memoryTimer>;

        $r26 = specialinvoke r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy activityBased(org.sat4j.minisat.core.ConflictTimer)>($r25);

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy memory_based> = $r26;

        $r27 = new org.sat4j.minisat.core.Solver$8;

        specialinvoke $r27.<org.sat4j.minisat.core.Solver$8: void <init>(org.sat4j.minisat.core.Solver,int)>(r0, 1000);

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ConflictTimer lbdTimer> = $r27;

        $r28 = new org.sat4j.minisat.core.Solver$Glucose2LCDS;

        $r29 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ConflictTimer lbdTimer>;

        specialinvoke $r28.<org.sat4j.minisat.core.Solver$Glucose2LCDS: void <init>(org.sat4j.minisat.core.Solver,org.sat4j.minisat.core.ConflictTimer)>(r0, $r29);

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy glucose> = $r28;

        $r30 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy glucose>;

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy learnedConstraintsDeletionStrategy> = $r30;

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearningStrategy learner> = r31;

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.IOrder order> = r32;

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SearchParams params> = r33;

        virtualinvoke r0.<org.sat4j.minisat.core.Solver: void setDataStructureFactory(org.sat4j.minisat.core.DataStructureFactory)>(r34);

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.RestartStrategy restarter> = r35;

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ICDCLLogger out> = r36;

        return;
    }

    public final void setDataStructureFactory(org.sat4j.minisat.core.DataStructureFactory)
    {
        org.sat4j.minisat.core.IOrder $r6;
        org.sat4j.minisat.core.DataStructureFactory r1, $r2, $r3;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.ILits $r4, $r5;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r1 := @parameter0: org.sat4j.minisat.core.DataStructureFactory;

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.DataStructureFactory dsfactory> = r1;

        $r2 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.DataStructureFactory dsfactory>;

        interfaceinvoke $r2.<org.sat4j.minisat.core.DataStructureFactory: void setUnitPropagationListener(org.sat4j.minisat.core.UnitPropagationListener)>(r0);

        $r3 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.DataStructureFactory dsfactory>;

        interfaceinvoke $r3.<org.sat4j.minisat.core.DataStructureFactory: void setLearner(org.sat4j.minisat.core.Learner)>(r0);

        $r4 = interfaceinvoke r1.<org.sat4j.minisat.core.DataStructureFactory: org.sat4j.minisat.core.ILits getVocabulary()>();

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc> = $r4;

        $r6 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.IOrder order>;

        $r5 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        interfaceinvoke $r6.<org.sat4j.minisat.core.IOrder: void setLits(org.sat4j.minisat.core.ILits)>($r5);

        return;
    }

    public boolean isVerbose()
    {
        org.sat4j.minisat.core.Solver r0;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $z0 = r0.<org.sat4j.minisat.core.Solver: boolean verbose>;

        return $z0;
    }

    public void setVerbose(boolean)
    {
        org.sat4j.minisat.core.Solver r0;
        boolean z0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        z0 := @parameter0: boolean;

        r0.<org.sat4j.minisat.core.Solver: boolean verbose> = z0;

        return;
    }

    public void setSearchListener(org.sat4j.specs.SearchListener)
    {
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.specs.SearchListener r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r1 := @parameter0: org.sat4j.specs.SearchListener;

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.SearchListener slistener> = r1;

        return;
    }

    public org.sat4j.specs.SearchListener getSearchListener()
    {
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.specs.SearchListener $r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.SearchListener slistener>;

        return $r1;
    }

    public void setLearner(org.sat4j.minisat.core.LearningStrategy)
    {
        org.sat4j.minisat.core.LearningStrategy r1;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r1 := @parameter0: org.sat4j.minisat.core.LearningStrategy;

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearningStrategy learner> = r1;

        return;
    }

    public void setTimeout(int)
    {
        int i0;
        long $l1, $l2;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        $l2 = $l1 * 1000L;

        r0.<org.sat4j.minisat.core.Solver: long timeout> = $l2;

        r0.<org.sat4j.minisat.core.Solver: boolean timeBasedTimeout> = 1;

        return;
    }

    public void setTimeoutMs(long)
    {
        long l0;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        l0 := @parameter0: long;

        r0.<org.sat4j.minisat.core.Solver: long timeout> = l0;

        r0.<org.sat4j.minisat.core.Solver: boolean timeBasedTimeout> = 1;

        return;
    }

    public void setTimeoutOnConflicts(int)
    {
        int i0;
        long $l1;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        r0.<org.sat4j.minisat.core.Solver: long timeout> = $l1;

        r0.<org.sat4j.minisat.core.Solver: boolean timeBasedTimeout> = 0;

        return;
    }

    public void setSearchParams(org.sat4j.minisat.core.SearchParams)
    {
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.SearchParams r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r1 := @parameter0: org.sat4j.minisat.core.SearchParams;

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SearchParams params> = r1;

        return;
    }

    public void setRestartStrategy(org.sat4j.minisat.core.RestartStrategy)
    {
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.RestartStrategy r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r1 := @parameter0: org.sat4j.minisat.core.RestartStrategy;

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.RestartStrategy restarter> = r1;

        return;
    }

    public org.sat4j.minisat.core.RestartStrategy getRestartStrategy()
    {
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.RestartStrategy $r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.RestartStrategy restarter>;

        return $r1;
    }

    public void expireTimeout()
    {
        java.util.Timer $r2, $r3;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.ConflictTimerContainer $r1;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r0.<org.sat4j.minisat.core.Solver: boolean undertimeout> = 0;

        $z0 = r0.<org.sat4j.minisat.core.Solver: boolean timeBasedTimeout>;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.sat4j.minisat.core.Solver: java.util.Timer timer>;

        if $r2 == null goto label2;

        $r3 = r0.<org.sat4j.minisat.core.Solver: java.util.Timer timer>;

        virtualinvoke $r3.<java.util.Timer: void cancel()>();

        r0.<org.sat4j.minisat.core.Solver: java.util.Timer timer> = null;

        goto label2;

     label1:
        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ConflictTimerContainer conflictCount>;

        if $r1 == null goto label2;

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ConflictTimerContainer conflictCount> = null;

     label2:
        return;
    }

    protected int nAssigns()
    {
        org.sat4j.specs.IVecInt $r1;
        int $i0;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i0 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: int size()>();

        return $i0;
    }

    public int nConstraints()
    {
        int $i0;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.specs.IVec $r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVec constrs>;

        $i0 = interfaceinvoke $r1.<org.sat4j.specs.IVec: int size()>();

        return $i0;
    }

    public void learn(org.sat4j.minisat.core.Constr)
    {
        org.sat4j.specs.SearchListener $r2;
        long $l0, $l1, $l3, $l4, $l5, $l6;
        org.sat4j.minisat.core.Constr r1;
        org.sat4j.minisat.core.SolverStats $r4, $r5, $r6;
        int $i2;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.specs.IVec $r3;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r1 := @parameter0: org.sat4j.minisat.core.Constr;

        $r2 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.SearchListener slistener>;

        interfaceinvoke $r2.<org.sat4j.specs.SearchListener: void learn(org.sat4j.specs.IConstr)>(r1);

        $r3 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVec learnts>;

        interfaceinvoke $r3.<org.sat4j.specs.IVec: org.sat4j.specs.IVec push(java.lang.Object)>(r1);

        interfaceinvoke r1.<org.sat4j.minisat.core.Constr: void setLearnt()>();

        interfaceinvoke r1.<org.sat4j.minisat.core.Constr: void register()>();

        $r4 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SolverStats stats>;

        $l0 = $r4.<org.sat4j.minisat.core.SolverStats: long learnedclauses>;

        $l1 = $l0 + 1L;

        $r4.<org.sat4j.minisat.core.SolverStats: long learnedclauses> = $l1;

        $i2 = interfaceinvoke r1.<org.sat4j.minisat.core.Constr: int size()>();

        lookupswitch($i2)
        {
            case 2: goto label1;
            case 3: goto label2;
            default: goto label3;
        };

     label1:
        $r6 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SolverStats stats>;

        $l5 = $r6.<org.sat4j.minisat.core.SolverStats: long learnedbinaryclauses>;

        $l6 = $l5 + 1L;

        $r6.<org.sat4j.minisat.core.SolverStats: long learnedbinaryclauses> = $l6;

        goto label3;

     label2:
        $r5 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SolverStats stats>;

        $l3 = $r5.<org.sat4j.minisat.core.SolverStats: long learnedternaryclauses>;

        $l4 = $l3 + 1L;

        $r5.<org.sat4j.minisat.core.SolverStats: long learnedternaryclauses> = $l4;

        goto label3;

     label3:
        return;
    }

    public final int decisionLevel()
    {
        org.sat4j.specs.IVecInt $r1;
        int $i0;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trailLim>;

        $i0 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: int size()>();

        return $i0;
    }

    public int newVar()
    {
        int $i0, i1;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.ILits $r1, $r2;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $i0 = interfaceinvoke $r1.<org.sat4j.minisat.core.ILits: int nVars()>();

        i1 = $i0 + 1;

        $r2 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        interfaceinvoke $r2.<org.sat4j.minisat.core.ILits: void ensurePool(int)>(i1);

        return i1;
    }

    public int newVar(int)
    {
        int i0;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.ILits $r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        interfaceinvoke $r1.<org.sat4j.minisat.core.ILits: void ensurePool(int)>(i0);

        r0.<org.sat4j.minisat.core.Solver: int declaredMaxVarId> = i0;

        return i0;
    }

    public org.sat4j.specs.IConstr addClause(org.sat4j.specs.IVecInt) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.specs.IConstr $r5;
        org.sat4j.specs.IVecInt r1, $r2;
        org.sat4j.minisat.core.DataStructureFactory $r3;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.Constr $r4;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r1 := @parameter0: org.sat4j.specs.IVecInt;

        $r2 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt dimacs2internal(org.sat4j.specs.IVecInt)>(r1);

        $r3 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.DataStructureFactory dsfactory>;

        $r4 = interfaceinvoke $r3.<org.sat4j.minisat.core.DataStructureFactory: org.sat4j.minisat.core.Constr createClause(org.sat4j.specs.IVecInt)>($r2);

        $r5 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IConstr addConstr(org.sat4j.minisat.core.Constr)>($r4);

        return $r5;
    }

    public boolean removeConstr(org.sat4j.specs.IConstr)
    {
        org.sat4j.specs.IConstr r0;
        org.sat4j.minisat.core.Constr r1;
        java.lang.IllegalArgumentException $r9;
        org.sat4j.minisat.core.Counter $r8;
        java.util.Map $r6;
        java.lang.Class $r4;
        java.lang.Object $r7;
        org.sat4j.minisat.core.Solver r2;
        org.sat4j.specs.IVec $r3;
        java.lang.String $r5;

        r2 := @this: org.sat4j.minisat.core.Solver;

        r0 := @parameter0: org.sat4j.specs.IConstr;

        if r0 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Reference to the constraint to remove needed!");

        throw $r9;

     label1:
        r1 = (org.sat4j.minisat.core.Constr) r0;

        interfaceinvoke r1.<org.sat4j.minisat.core.Constr: void remove(org.sat4j.minisat.core.UnitPropagationListener)>(r2);

        $r3 = r2.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVec constrs>;

        interfaceinvoke $r3.<org.sat4j.specs.IVec: void remove(java.lang.Object)>(r1);

        virtualinvoke r2.<org.sat4j.minisat.core.Solver: void clearLearntClauses()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = r2.<org.sat4j.minisat.core.Solver: java.util.Map constrTypes>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r8 = (org.sat4j.minisat.core.Counter) $r7;

        virtualinvoke $r8.<org.sat4j.minisat.core.Counter: void dec()>();

        return 1;
    }

    public boolean removeSubsumedConstr(org.sat4j.specs.IConstr)
    {
        org.sat4j.specs.IConstr r0;
        org.sat4j.minisat.core.Constr r4;
        java.lang.IllegalArgumentException $r11, $r12;
        org.sat4j.minisat.core.Counter $r10;
        java.util.Map $r8;
        java.lang.Object $r3, $r9;
        java.lang.Class $r6;
        org.sat4j.minisat.core.Solver r1;
        org.sat4j.specs.IVec $r2, $r5;
        java.lang.String $r7;

        r1 := @this: org.sat4j.minisat.core.Solver;

        r0 := @parameter0: org.sat4j.specs.IConstr;

        if r0 != null goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Reference to the constraint to remove needed!");

        throw $r12;

     label1:
        $r2 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVec constrs>;

        $r3 = interfaceinvoke $r2.<org.sat4j.specs.IVec: java.lang.Object last()>();

        if $r3 == r0 goto label2;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can only remove latest added constraint!!!");

        throw $r11;

     label2:
        r4 = (org.sat4j.minisat.core.Constr) r0;

        interfaceinvoke r4.<org.sat4j.minisat.core.Constr: void remove(org.sat4j.minisat.core.UnitPropagationListener)>(r1);

        $r5 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVec constrs>;

        interfaceinvoke $r5.<org.sat4j.specs.IVec: void pop()>();

        $r6 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = r1.<org.sat4j.minisat.core.Solver: java.util.Map constrTypes>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        $r10 = (org.sat4j.minisat.core.Counter) $r9;

        virtualinvoke $r10.<org.sat4j.minisat.core.Counter: void dec()>();

        return 1;
    }

    public void addAllClauses(org.sat4j.specs.IVec) throws org.sat4j.specs.ContradictionException
    {
        java.util.Iterator $r1;
        org.sat4j.specs.IVecInt $r4;
        java.lang.Object $r3;
        org.sat4j.specs.IVec r0;
        org.sat4j.minisat.core.Solver r2;
        boolean $z0;

        r2 := @this: org.sat4j.minisat.core.Solver;

        r0 := @parameter0: org.sat4j.specs.IVec;

        $r1 = interfaceinvoke r0.<org.sat4j.specs.IVec: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (org.sat4j.specs.IVecInt) $r3;

        virtualinvoke r2.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IConstr addClause(org.sat4j.specs.IVecInt)>($r4);

        goto label1;

     label2:
        return;
    }

    public org.sat4j.specs.IConstr addAtMost(org.sat4j.specs.IVecInt, int) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.specs.IteratorInt $r2;
        org.sat4j.specs.IConstr $r4;
        org.sat4j.specs.IVecInt r0;
        int $i0, i1, $i2, $i3, $i4;
        org.sat4j.core.VecInt $r1;
        org.sat4j.minisat.core.Solver r3;
        boolean $z0;

        r3 := @this: org.sat4j.minisat.core.Solver;

        r0 := @parameter0: org.sat4j.specs.IVecInt;

        i1 := @parameter1: int;

        $i0 = interfaceinvoke r0.<org.sat4j.specs.IVecInt: int size()>();

        $r1 = new org.sat4j.core.VecInt;

        specialinvoke $r1.<org.sat4j.core.VecInt: void <init>(int)>($i0);

        $r2 = interfaceinvoke r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IteratorInt iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<org.sat4j.specs.IteratorInt: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $i3 = interfaceinvoke $r2.<org.sat4j.specs.IteratorInt: int next()>();

        $i4 = neg $i3;

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i4);

        goto label1;

     label2:
        $i2 = $i0 - i1;

        $r4 = virtualinvoke r3.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IConstr addAtLeast(org.sat4j.specs.IVecInt,int)>($r1, $i2);

        return $r4;
    }

    public org.sat4j.specs.IConstr addAtLeast(org.sat4j.specs.IVecInt, int) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.specs.IConstr $r5;
        org.sat4j.specs.IVecInt r1, $r2;
        int i0;
        org.sat4j.minisat.core.DataStructureFactory $r3;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.Constr $r4;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r1 := @parameter0: org.sat4j.specs.IVecInt;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt dimacs2internal(org.sat4j.specs.IVecInt)>(r1);

        $r3 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.DataStructureFactory dsfactory>;

        $r4 = interfaceinvoke $r3.<org.sat4j.minisat.core.DataStructureFactory: org.sat4j.minisat.core.Constr createCardinalityConstraint(org.sat4j.specs.IVecInt,int)>($r2, i0);

        $r5 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IConstr addConstr(org.sat4j.minisat.core.Constr)>($r4);

        return $r5;
    }

    public org.sat4j.specs.IConstr addExactly(org.sat4j.specs.IVecInt, int) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.specs.IConstr $r3, $r4;
        org.sat4j.core.ConstrGroup $r0;
        org.sat4j.specs.IVecInt r2;
        int i0;
        org.sat4j.minisat.core.Solver r1;

        r1 := @this: org.sat4j.minisat.core.Solver;

        r2 := @parameter0: org.sat4j.specs.IVecInt;

        i0 := @parameter1: int;

        $r0 = new org.sat4j.core.ConstrGroup;

        specialinvoke $r0.<org.sat4j.core.ConstrGroup: void <init>(boolean)>(0);

        $r3 = virtualinvoke r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IConstr addAtMost(org.sat4j.specs.IVecInt,int)>(r2, i0);

        virtualinvoke $r0.<org.sat4j.core.ConstrGroup: void add(org.sat4j.specs.IConstr)>($r3);

        $r4 = virtualinvoke r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IConstr addAtLeast(org.sat4j.specs.IVecInt,int)>(r2, i0);

        virtualinvoke $r0.<org.sat4j.core.ConstrGroup: void add(org.sat4j.specs.IConstr)>($r4);

        return $r0;
    }

    public boolean simplifyDB()
    {
        org.sat4j.minisat.core.Constr $r8, $r12;
        int $i0, $i1, i2, i3, i4;
        org.sat4j.specs.IVec $r2, $r3, $r4, $r5, $r6, $r9, $r10;
        boolean $z0;
        org.sat4j.specs.IVec[] $r0;
        java.lang.Object $r7, $r11;
        org.sat4j.minisat.core.Solver r1;

        r1 := @this: org.sat4j.minisat.core.Solver;

        $r0 = newarray (org.sat4j.specs.IVec)[2];

        $r2 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVec constrs>;

        $r0[0] = $r2;

        $r3 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVec learnts>;

        $r0[1] = $r3;

        i2 = 0;

     label1:
        if i2 >= 2 goto label6;

        i3 = 0;

        i4 = 0;

     label2:
        $r4 = $r0[i2];

        $i0 = interfaceinvoke $r4.<org.sat4j.specs.IVec: int size()>();

        if i4 >= $i0 goto label5;

        $r6 = $r0[i2];

        $r7 = interfaceinvoke $r6.<org.sat4j.specs.IVec: java.lang.Object get(int)>(i4);

        $r8 = (org.sat4j.minisat.core.Constr) $r7;

        $z0 = interfaceinvoke $r8.<org.sat4j.minisat.core.Constr: boolean simplify()>();

        if $z0 == 0 goto label3;

        $r10 = $r0[i2];

        $r11 = interfaceinvoke $r10.<org.sat4j.specs.IVec: java.lang.Object get(int)>(i4);

        $r12 = (org.sat4j.minisat.core.Constr) $r11;

        interfaceinvoke $r12.<org.sat4j.minisat.core.Constr: void remove(org.sat4j.minisat.core.UnitPropagationListener)>(r1);

        goto label4;

     label3:
        $r9 = $r0[i2];

        $i1 = i3;

        i3 = i3 + 1;

        interfaceinvoke $r9.<org.sat4j.specs.IVec: void moveTo(int,int)>($i1, i4);

     label4:
        i4 = i4 + 1;

        goto label2;

     label5:
        $r5 = $r0[i2];

        interfaceinvoke $r5.<org.sat4j.specs.IVec: void shrinkTo(int)>(i3);

        i2 = i2 + 1;

        goto label1;

     label6:
        return 1;
    }

    public int[] model()
    {
        java.lang.UnsupportedOperationException $r6;
        int[] $r1, $r2, r3, $r4, $r5;
        int $i0, $i1;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = r0.<org.sat4j.minisat.core.Solver: int[] model>;

        if $r1 != null goto label1;

        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Call the solve method first!!!");

        throw $r6;

     label1:
        $r2 = r0.<org.sat4j.minisat.core.Solver: int[] model>;

        $i0 = lengthof $r2;

        r3 = newarray (int)[$i0];

        $r5 = r0.<org.sat4j.minisat.core.Solver: int[] model>;

        $r4 = r0.<org.sat4j.minisat.core.Solver: int[] model>;

        $i1 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r3, 0, $i1);

        return r3;
    }

    public boolean enqueue(int)
    {
        int i0;
        org.sat4j.minisat.core.Solver r0;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: boolean enqueue(int,org.sat4j.minisat.core.Constr)>(i0, null);

        return $z0;
    }

    public boolean enqueue(int, org.sat4j.minisat.core.Constr)
    {
        java.lang.AssertionError $r9;
        org.sat4j.minisat.core.Constr r5;
        int i0, $i1;
        org.sat4j.minisat.core.ILits $r1, $r2, $r3, $r4, $r6;
        boolean $z0, $z1, $z2, $z3;
        org.sat4j.specs.IVecInt $r7;
        org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy $r8;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        i0 := @parameter0: int;

        r5 := @parameter1: org.sat4j.minisat.core.Constr;

        $z0 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i0 > 1 goto label1;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label1:
        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $z1 = interfaceinvoke $r1.<org.sat4j.minisat.core.ILits: boolean isSatisfied(int)>(i0);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $r2 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $z2 = interfaceinvoke $r2.<org.sat4j.minisat.core.ILits: boolean isFalsified(int)>(i0);

        if $z2 == 0 goto label3;

        return 0;

     label3:
        $r3 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        interfaceinvoke $r3.<org.sat4j.minisat.core.ILits: void satisfies(int)>(i0);

        $r4 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $i1 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: int decisionLevel()>();

        interfaceinvoke $r4.<org.sat4j.minisat.core.ILits: void setLevel(int,int)>(i0, $i1);

        $r6 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        interfaceinvoke $r6.<org.sat4j.minisat.core.ILits: void setReason(int,org.sat4j.minisat.core.Constr)>(i0, r5);

        $r7 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        interfaceinvoke $r7.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i0);

        if r5 == null goto label4;

        $z3 = interfaceinvoke r5.<org.sat4j.minisat.core.Constr: boolean learnt()>();

        if $z3 == 0 goto label4;

        $r8 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy learnedConstraintsDeletionStrategy>;

        interfaceinvoke $r8.<org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy: void onPropagation(org.sat4j.minisat.core.Constr)>(r5);

     label4:
        return 1;
    }

    public void analyze(org.sat4j.minisat.core.Constr, org.sat4j.minisat.core.Pair) throws org.sat4j.specs.TimeoutException
    {
        org.sat4j.minisat.core.DataStructureFactory $r2;
        org.sat4j.minisat.core.Pair r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.sat4j.minisat.core.ISimplifier $r1;
        java.lang.AssertionError $r23, $r24, $r25, $r26;
        org.sat4j.minisat.core.Constr $r3, r19, r20;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, i13, i14, i15, i16, $i17, $i18, $i20, $i22, $i24, $i26;
        org.sat4j.minisat.core.ILits $r9, $r10, $r11, $r22;
        boolean[] $r15;
        org.sat4j.specs.IVecInt $r16, $r17, $r21;
        org.sat4j.minisat.core.IOrder $r8, $r12;
        org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy $r4, $r7;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r19 := @parameter0: org.sat4j.minisat.core.Constr;

        r5 := @parameter1: org.sat4j.minisat.core.Pair;

        $z0 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        if r19 != null goto label01;

        $r23 = new java.lang.AssertionError;

        specialinvoke $r23.<java.lang.AssertionError: void <init>()>();

        throw $r23;

     label01:
        $r15 = r0.<org.sat4j.minisat.core.Solver: boolean[] mseen>;

        $r16 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt moutLearnt>;

        $r17 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt mpreason>;

        interfaceinvoke $r16.<org.sat4j.specs.IVecInt: void clear()>();

        $z1 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $i10 = interfaceinvoke $r16.<org.sat4j.specs.IVecInt: int size()>();

        if $i10 == 0 goto label02;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label02:
        i11 = 0;

     label03:
        $i12 = lengthof $r15;

        if i11 >= $i12 goto label04;

        $r15[i11] = 0;

        i11 = i11 + 1;

        goto label03;

     label04:
        i13 = 0;

        $i20 = (int) -1;

        i14 = $i20;

        $i22 = (int) -1;

        interfaceinvoke $r16.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i22);

        i15 = 0;

        r20 = null;

     label05:
        interfaceinvoke $r17.<org.sat4j.specs.IVecInt: void clear()>();

        $z2 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z2 != 0 goto label06;

        if r19 != null goto label06;

        $r25 = new java.lang.AssertionError;

        specialinvoke $r25.<java.lang.AssertionError: void <init>()>();

        throw $r25;

     label06:
        if r20 == r19 goto label10;

        interfaceinvoke r19.<org.sat4j.minisat.core.Constr: void calcReason(int,org.sat4j.specs.IVecInt)>(i14, $r17);

        $r7 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy learnedConstraintsDeletionStrategy>;

        interfaceinvoke $r7.<org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy: void onConflictAnalysis(org.sat4j.minisat.core.Constr)>(r19);

        i16 = 0;

     label07:
        $i1 = interfaceinvoke $r17.<org.sat4j.specs.IVecInt: int size()>();

        if i16 >= $i1 goto label10;

        $i2 = interfaceinvoke $r17.<org.sat4j.specs.IVecInt: int get(int)>(i16);

        $r8 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.IOrder order>;

        interfaceinvoke $r8.<org.sat4j.minisat.core.IOrder: void updateVar(int)>($i2);

        $i3 = $i2 >> 1;

        $z4 = $r15[$i3];

        if $z4 != 0 goto label09;

        $i4 = $i2 >> 1;

        $r15[$i4] = 1;

        $r9 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $i5 = interfaceinvoke $r9.<org.sat4j.minisat.core.ILits: int getLevel(int)>($i2);

        $i6 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: int decisionLevel()>();

        if $i5 != $i6 goto label08;

        i13 = i13 + 1;

        $r12 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.IOrder order>;

        interfaceinvoke $r12.<org.sat4j.minisat.core.IOrder: void updateVarAtDecisionLevel(int)>($i2);

        goto label09;

     label08:
        $r10 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $i7 = interfaceinvoke $r10.<org.sat4j.minisat.core.ILits: int getLevel(int)>($i2);

        if $i7 <= 0 goto label09;

        $i8 = $i2 ^ 1;

        interfaceinvoke $r16.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i8);

        $r11 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $i9 = interfaceinvoke $r11.<org.sat4j.minisat.core.ILits: int getLevel(int)>($i2);

        i15 = staticinvoke <java.lang.Math: int max(int,int)>(i15, $i9);

     label09:
        i16 = i16 + 1;

        goto label07;

     label10:
        r20 = r19;

     label11:
        $r21 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i17 = interfaceinvoke $r21.<org.sat4j.specs.IVecInt: int last()>();

        i14 = $i17;

        $r22 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        r19 = interfaceinvoke $r22.<org.sat4j.minisat.core.ILits: org.sat4j.minisat.core.Constr getReason(int)>($i17);

        virtualinvoke r0.<org.sat4j.minisat.core.Solver: void undoOne()>();

        $i18 = $i17 >> 1;

        $z5 = $r15[$i18];

        if $z5 == 0 goto label11;

        $i24 = (int) -1;

        i13 = i13 + $i24;

        if i13 > 0 goto label05;

        $i0 = $i17 ^ 1;

        interfaceinvoke $r16.<org.sat4j.specs.IVecInt: void set(int,int)>(0, $i0);

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ISimplifier simplifier>;

        interfaceinvoke $r1.<org.sat4j.minisat.core.ISimplifier: void simplify(org.sat4j.specs.IVecInt)>($r16);

        $r2 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.DataStructureFactory dsfactory>;

        $r3 = interfaceinvoke $r2.<org.sat4j.minisat.core.DataStructureFactory: org.sat4j.minisat.core.Constr createUnregisteredClause(org.sat4j.specs.IVecInt)>($r16);

        $r4 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy learnedConstraintsDeletionStrategy>;

        interfaceinvoke $r4.<org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy: void onClauseLearning(org.sat4j.minisat.core.Constr)>($r3);

        r5.<org.sat4j.minisat.core.Pair: org.sat4j.minisat.core.Constr reason> = $r3;

        $z3 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z3 != 0 goto label12;

        $i26 = (int) -1;

        if i15 > $i26 goto label12;

        $r26 = new java.lang.AssertionError;

        specialinvoke $r26.<java.lang.AssertionError: void <init>()>();

        throw $r26;

     label12:
        r5.<org.sat4j.minisat.core.Pair: int backtrackLevel> = i15;

        return;
    }

    public org.sat4j.specs.IVecInt analyzeFinalConflictInTermsOfAssumptions(org.sat4j.minisat.core.Constr, org.sat4j.specs.IVecInt, int)
    {
        java.lang.AssertionError $r31, $r32;
        org.sat4j.minisat.core.Constr $r8, $r15, r24, $r29;
        org.sat4j.minisat.core.ILits $r7, $r9, $r14, $r28;
        org.sat4j.specs.IVecInt r0, $r2, $r3, $r4, $r5, $r6, $r11, $r12, $r13, $r16, $r18, $r19, $r21, $r22, $r23, $r25, $r26, $r27, $r30;
        boolean[] $r20;
        org.sat4j.minisat.core.Solver r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, $i23, i24, $i25, $i26, i27, $i28, $i29, $i30, $i31, $i32, $i34;

        r1 := @this: org.sat4j.minisat.core.Solver;

        r24 := @parameter0: org.sat4j.minisat.core.Constr;

        r0 := @parameter1: org.sat4j.specs.IVecInt;

        i15 := @parameter2: int;

        $i0 = interfaceinvoke r0.<org.sat4j.specs.IVecInt: int size()>();

        if $i0 != 0 goto label01;

        return null;

     label01:
        $r2 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trailLim>;

        $z0 = interfaceinvoke $r2.<org.sat4j.specs.IVecInt: boolean isEmpty()>();

        if $z0 != 0 goto label02;

        $r18 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trailLim>;

        $i20 = interfaceinvoke $r18.<org.sat4j.specs.IVecInt: int last()>();

        $r19 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i21 = interfaceinvoke $r19.<org.sat4j.specs.IVecInt: int size()>();

        if $i20 != $i21 goto label02;

        $r23 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trailLim>;

        interfaceinvoke $r23.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt pop()>();

        goto label01;

     label02:
        $r20 = r1.<org.sat4j.minisat.core.Solver: boolean[] mseen>;

        $r21 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt moutLearnt>;

        $r22 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt mpreason>;

        interfaceinvoke $r21.<org.sat4j.specs.IVecInt: void clear()>();

        $r3 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trailLim>;

        $i1 = interfaceinvoke $r3.<org.sat4j.specs.IVecInt: int size()>();

        if $i1 != 0 goto label03;

        return $r21;

     label03:
        $z1 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z1 != 0 goto label04;

        $i19 = interfaceinvoke $r21.<org.sat4j.specs.IVecInt: int size()>();

        if $i19 == 0 goto label04;

        $r31 = new java.lang.AssertionError;

        specialinvoke $r31.<java.lang.AssertionError: void <init>()>();

        throw $r31;

     label04:
        i22 = 0;

     label05:
        $i23 = lengthof $r20;

        if i22 >= $i23 goto label06;

        $r20[i22] = 0;

        i22 = i22 + 1;

        goto label05;

     label06:
        if r24 != null goto label07;

        $i18 = i15 >> 1;

        $r20[$i18] = 1;

     label07:
        $i34 = (int) -1;

        i24 = $i34;

     label08:
        if r24 != null goto label10;

        $r11 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i12 = interfaceinvoke $r11.<org.sat4j.specs.IVecInt: int size()>();

        if $i12 <= 0 goto label10;

        $r12 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trailLim>;

        $i13 = interfaceinvoke $r12.<org.sat4j.specs.IVecInt: int size()>();

        if $i13 <= 0 goto label10;

        $r13 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i14 = interfaceinvoke $r13.<org.sat4j.specs.IVecInt: int last()>();

        i24 = $i14;

        $r14 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $r15 = interfaceinvoke $r14.<org.sat4j.minisat.core.ILits: org.sat4j.minisat.core.Constr getReason(int)>($i14);

        r24 = $r15;

        virtualinvoke r1.<org.sat4j.minisat.core.Solver: void undoOne()>();

        if $r15 != null goto label09;

        $i16 = i15 ^ 1;

        if $i14 != $i16 goto label09;

        $i17 = staticinvoke <org.sat4j.core.LiteralsUtils: int toDimacs(int)>($i14);

        interfaceinvoke $r21.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i17);

     label09:
        $r25 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i25 = interfaceinvoke $r25.<org.sat4j.specs.IVecInt: int size()>();

        $r26 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trailLim>;

        $i26 = interfaceinvoke $r26.<org.sat4j.specs.IVecInt: int last()>();

        if $i25 > $i26 goto label08;

        $r16 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trailLim>;

        interfaceinvoke $r16.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt pop()>();

        goto label08;

     label10:
        if r24 != null goto label11;

        return $r21;

     label11:
        interfaceinvoke $r22.<org.sat4j.specs.IVecInt: void clear()>();

        interfaceinvoke r24.<org.sat4j.minisat.core.Constr: void calcReason(int,org.sat4j.specs.IVecInt)>(i24, $r22);

        i27 = 0;

     label12:
        $i28 = interfaceinvoke $r22.<org.sat4j.specs.IVecInt: int size()>();

        if i27 >= $i28 goto label15;

        $i6 = interfaceinvoke $r22.<org.sat4j.specs.IVecInt: int get(int)>(i27);

        $i7 = $i6 >> 1;

        $z3 = $r20[$i7];

        if $z3 != 0 goto label14;

        $i8 = $i6 >> 1;

        $r20[$i8] = 1;

        $r7 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $r8 = interfaceinvoke $r7.<org.sat4j.minisat.core.ILits: org.sat4j.minisat.core.Constr getReason(int)>($i6);

        if $r8 != null goto label14;

        $r9 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $i9 = interfaceinvoke $r9.<org.sat4j.minisat.core.ILits: int getLevel(int)>($i6);

        if $i9 <= 0 goto label14;

        $z4 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z4 != 0 goto label13;

        $i11 = staticinvoke <org.sat4j.core.LiteralsUtils: int toDimacs(int)>($i6);

        $z5 = interfaceinvoke r0.<org.sat4j.specs.IVecInt: boolean contains(int)>($i11);

        if $z5 != 0 goto label13;

        $r32 = new java.lang.AssertionError;

        specialinvoke $r32.<java.lang.AssertionError: void <init>()>();

        throw $r32;

     label13:
        $i10 = staticinvoke <org.sat4j.core.LiteralsUtils: int toDimacs(int)>($i6);

        interfaceinvoke $r21.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i10);

     label14:
        i27 = i27 + 1;

        goto label12;

     label15:
        $r27 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i29 = interfaceinvoke $r27.<org.sat4j.specs.IVecInt: int last()>();

        i24 = $i29;

        $r28 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $r29 = interfaceinvoke $r28.<org.sat4j.minisat.core.ILits: org.sat4j.minisat.core.Constr getReason(int)>($i29);

        r24 = $r29;

        virtualinvoke r1.<org.sat4j.minisat.core.Solver: void undoOne()>();

        $i30 = virtualinvoke r1.<org.sat4j.minisat.core.Solver: int decisionLevel()>();

        if $i30 <= 0 goto label16;

        $r4 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i4 = interfaceinvoke $r4.<org.sat4j.specs.IVecInt: int size()>();

        $r5 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trailLim>;

        $i5 = interfaceinvoke $r5.<org.sat4j.specs.IVecInt: int last()>();

        if $i4 > $i5 goto label16;

        $r6 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trailLim>;

        interfaceinvoke $r6.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt pop()>();

     label16:
        $r30 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i31 = interfaceinvoke $r30.<org.sat4j.specs.IVecInt: int size()>();

        if $i31 <= 0 goto label17;

        $i2 = virtualinvoke r1.<org.sat4j.minisat.core.Solver: int decisionLevel()>();

        if $i2 <= 0 goto label17;

        $i3 = $i29 >> 1;

        $z2 = $r20[$i3];

        if $z2 == 0 goto label15;

        if $r29 == null goto label15;

     label17:
        $i32 = virtualinvoke r1.<org.sat4j.minisat.core.Solver: int decisionLevel()>();

        if $i32 > 0 goto label11;

        return $r21;
    }

    public void setSimplifier(org.sat4j.minisat.core.SimplificationType)
    {
        org.sat4j.minisat.core.ISimplifier $r6, $r8;
        org.sat4j.minisat.core.SimplificationType r0;
        java.lang.reflect.Field $r3;
        java.lang.Exception $r7;
        java.lang.Class $r1;
        java.lang.Object $r5;
        java.lang.String $r2;
        org.sat4j.minisat.core.Solver r4;

        r4 := @this: org.sat4j.minisat.core.Solver;

        r0 := @parameter0: org.sat4j.minisat.core.SimplificationType;

     label1:
        $r1 = class "Lorg/sat4j/minisat/core/Solver;";

        $r2 = virtualinvoke r0.<org.sat4j.minisat.core.SimplificationType: java.lang.String toString()>();

        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>($r2);

        $r5 = virtualinvoke $r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r4);

        $r6 = (org.sat4j.minisat.core.ISimplifier) $r5;

        r4.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ISimplifier simplifier> = $r6;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

        $r8 = <org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ISimplifier NO_SIMPLIFICATION>;

        r4.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ISimplifier simplifier> = $r8;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void setSimplifier(org.sat4j.minisat.core.ISimplifier)
    {
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.ISimplifier r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r1 := @parameter0: org.sat4j.minisat.core.ISimplifier;

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ISimplifier simplifier> = r1;

        return;
    }

    public org.sat4j.minisat.core.ISimplifier getSimplifier()
    {
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.ISimplifier $r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ISimplifier simplifier>;

        return $r1;
    }

    private void simpleSimplification(org.sat4j.specs.IVecInt)
    {
        long $l3, $l4, $l5;
        org.sat4j.minisat.core.Constr $r5;
        org.sat4j.minisat.core.SolverStats $r3;
        int $i0, $i1, $i2, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15;
        org.sat4j.minisat.core.ILits $r4, $r6, $r7;
        boolean $z0, $z1, $z2;
        boolean[] r1;
        org.sat4j.specs.IVecInt r2;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r2 := @parameter0: org.sat4j.specs.IVecInt;

        r1 = r0.<org.sat4j.minisat.core.Solver: boolean[] mseen>;

        i13 = 1;

        i14 = 1;

     label1:
        $i0 = interfaceinvoke r2.<org.sat4j.specs.IVecInt: int size()>();

        if i14 >= $i0 goto label7;

        $r4 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $i6 = interfaceinvoke r2.<org.sat4j.specs.IVecInt: int get(int)>(i14);

        $r5 = interfaceinvoke $r4.<org.sat4j.minisat.core.ILits: org.sat4j.minisat.core.Constr getReason(int)>($i6);

        if $r5 == null goto label2;

        $z0 = interfaceinvoke $r5.<org.sat4j.specs.IConstr: boolean canBePropagatedMultipleTimes()>();

        if $z0 == 0 goto label3;

     label2:
        $i7 = i13;

        i13 = i13 + 1;

        interfaceinvoke r2.<org.sat4j.specs.IVecInt: void moveTo(int,int)>($i7, i14);

        goto label6;

     label3:
        i15 = 0;

     label4:
        $i8 = interfaceinvoke $r5.<org.sat4j.specs.IConstr: int size()>();

        if i15 >= $i8 goto label6;

        $i9 = interfaceinvoke $r5.<org.sat4j.specs.IConstr: int get(int)>(i15);

        $i10 = $i9 >> 1;

        $z1 = r1[$i10];

        if $z1 != 0 goto label5;

        $r6 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $z2 = interfaceinvoke $r6.<org.sat4j.minisat.core.ILits: boolean isFalsified(int)>($i9);

        if $z2 == 0 goto label5;

        $r7 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $i11 = interfaceinvoke $r7.<org.sat4j.minisat.core.ILits: int getLevel(int)>($i9);

        if $i11 == 0 goto label5;

        $i12 = i13;

        i13 = i13 + 1;

        interfaceinvoke r2.<org.sat4j.specs.IVecInt: void moveTo(int,int)>($i12, i14);

        goto label6;

     label5:
        i15 = i15 + 1;

        goto label4;

     label6:
        i14 = i14 + 1;

        goto label1;

     label7:
        $i1 = i14 - i13;

        interfaceinvoke r2.<org.sat4j.specs.IVecInt: void shrink(int)>($i1);

        $r3 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SolverStats stats>;

        $l4 = $r3.<org.sat4j.minisat.core.SolverStats: long reducedliterals>;

        $i2 = i14 - i13;

        $l3 = (long) $i2;

        $l5 = $l4 + $l3;

        $r3.<org.sat4j.minisat.core.SolverStats: long reducedliterals> = $l5;

        return;
    }

    private void expensiveSimplification(org.sat4j.specs.IVecInt)
    {
        long $l3, $l4, $l5;
        org.sat4j.minisat.core.Constr $r6;
        org.sat4j.minisat.core.SolverStats $r4;
        int $i0, $i1, $i2, $i6, $i7, $i8, i9, i10;
        org.sat4j.minisat.core.ILits $r5;
        boolean $z0;
        org.sat4j.specs.IVecInt $r1, r2, $r3;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r2 := @parameter0: org.sat4j.specs.IVecInt;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt analyzetoclear>;

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: void clear()>();

        $r3 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt analyzetoclear>;

        interfaceinvoke r2.<org.sat4j.specs.IVecInt: void copyTo(org.sat4j.specs.IVecInt)>($r3);

        i9 = 1;

        i10 = 1;

     label1:
        $i0 = interfaceinvoke r2.<org.sat4j.specs.IVecInt: int size()>();

        if i9 >= $i0 goto label4;

        $r5 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $i6 = interfaceinvoke r2.<org.sat4j.specs.IVecInt: int get(int)>(i9);

        $r6 = interfaceinvoke $r5.<org.sat4j.minisat.core.ILits: org.sat4j.minisat.core.Constr getReason(int)>($i6);

        if $r6 == null goto label2;

        $i8 = interfaceinvoke r2.<org.sat4j.specs.IVecInt: int get(int)>(i9);

        $z0 = specialinvoke r0.<org.sat4j.minisat.core.Solver: boolean analyzeRemovable(int)>($i8);

        if $z0 != 0 goto label3;

     label2:
        $i7 = i10;

        i10 = i10 + 1;

        interfaceinvoke r2.<org.sat4j.specs.IVecInt: void moveTo(int,int)>($i7, i9);

     label3:
        i9 = i9 + 1;

        goto label1;

     label4:
        $i1 = i9 - i10;

        interfaceinvoke r2.<org.sat4j.specs.IVecInt: void shrink(int)>($i1);

        $r4 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SolverStats stats>;

        $l4 = $r4.<org.sat4j.minisat.core.SolverStats: long reducedliterals>;

        $i2 = i9 - i10;

        $l3 = (long) $i2;

        $l5 = $l4 + $l3;

        $r4.<org.sat4j.minisat.core.SolverStats: long reducedliterals> = $l5;

        return;
    }

    private boolean analyzeRemovable(int)
    {
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.AssertionError $r4, $r11;
        org.sat4j.minisat.core.Constr $r1, $r2, $r3, $r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21;
        org.sat4j.minisat.core.ILits $r5, $r7;
        org.sat4j.specs.IVecInt $r8, $r9;
        boolean[] $r10;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        i0 := @parameter0: int;

        $z0 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $r5 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $r6 = interfaceinvoke $r5.<org.sat4j.minisat.core.ILits: org.sat4j.minisat.core.Constr getReason(int)>(i0);

        if $r6 != null goto label01;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label01:
        $r7 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $r8 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt analyzestack>;

        $r9 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt analyzetoclear>;

        interfaceinvoke $r8.<org.sat4j.specs.IVecInt: void clear()>();

        interfaceinvoke $r8.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i0);

        $r10 = r0.<org.sat4j.minisat.core.Solver: boolean[] mseen>;

        $i1 = interfaceinvoke $r9.<org.sat4j.specs.IVecInt: int size()>();

     label02:
        $i18 = interfaceinvoke $r8.<org.sat4j.specs.IVecInt: int size()>();

        if $i18 <= 0 goto label13;

        $i2 = interfaceinvoke $r8.<org.sat4j.specs.IVecInt: int last()>();

        $z1 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z1 != 0 goto label03;

        $r3 = interfaceinvoke $r7.<org.sat4j.minisat.core.ILits: org.sat4j.minisat.core.Constr getReason(int)>($i2);

        if $r3 != null goto label03;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label03:
        $r1 = interfaceinvoke $r7.<org.sat4j.minisat.core.ILits: org.sat4j.minisat.core.Constr getReason(int)>($i2);

        interfaceinvoke $r8.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt pop()>();

        $z2 = interfaceinvoke $r1.<org.sat4j.minisat.core.Constr: boolean canBePropagatedMultipleTimes()>();

        if $z2 == 0 goto label06;

        i19 = $i1;

     label04:
        $i13 = interfaceinvoke $r9.<org.sat4j.specs.IVecInt: int size()>();

        if i19 >= $i13 goto label05;

        $i16 = interfaceinvoke $r9.<org.sat4j.specs.IVecInt: int get(int)>(i19);

        $i17 = $i16 >> 1;

        $r10[$i17] = 0;

        i19 = i19 + 1;

        goto label04;

     label05:
        $i14 = interfaceinvoke $r9.<org.sat4j.specs.IVecInt: int size()>();

        $i15 = $i14 - $i1;

        interfaceinvoke $r9.<org.sat4j.specs.IVecInt: void shrink(int)>($i15);

        return 0;

     label06:
        i20 = 0;

     label07:
        $i3 = interfaceinvoke $r1.<org.sat4j.minisat.core.Constr: int size()>();

        if i20 >= $i3 goto label12;

        $i4 = interfaceinvoke $r1.<org.sat4j.minisat.core.Constr: int get(int)>(i20);

        $i5 = staticinvoke <org.sat4j.core.LiteralsUtils: int var(int)>($i4);

        $z3 = $r10[$i5];

        if $z3 != 0 goto label11;

        $z4 = interfaceinvoke $r7.<org.sat4j.minisat.core.ILits: boolean isFalsified(int)>($i4);

        if $z4 == 0 goto label11;

        $i6 = interfaceinvoke $r7.<org.sat4j.minisat.core.ILits: int getLevel(int)>($i4);

        if $i6 == 0 goto label11;

        $r2 = interfaceinvoke $r7.<org.sat4j.minisat.core.ILits: org.sat4j.minisat.core.Constr getReason(int)>($i4);

        if $r2 != null goto label10;

        i21 = $i1;

     label08:
        $i8 = interfaceinvoke $r9.<org.sat4j.specs.IVecInt: int size()>();

        if i21 >= $i8 goto label09;

        $i11 = interfaceinvoke $r9.<org.sat4j.specs.IVecInt: int get(int)>(i21);

        $i12 = $i11 >> 1;

        $r10[$i12] = 0;

        i21 = i21 + 1;

        goto label08;

     label09:
        $i9 = interfaceinvoke $r9.<org.sat4j.specs.IVecInt: int size()>();

        $i10 = $i9 - $i1;

        interfaceinvoke $r9.<org.sat4j.specs.IVecInt: void shrink(int)>($i10);

        return 0;

     label10:
        $i7 = $i4 >> 1;

        $r10[$i7] = 1;

        interfaceinvoke $r8.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i4);

        interfaceinvoke $r9.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i4);

     label11:
        i20 = i20 + 1;

        goto label07;

     label12:
        goto label02;

     label13:
        return 1;
    }

    private void expensiveSimplificationWLOnly(org.sat4j.specs.IVecInt)
    {
        long $l3, $l4, $l5;
        org.sat4j.minisat.core.Constr $r6;
        org.sat4j.minisat.core.SolverStats $r4;
        int $i0, $i1, $i2, $i6, $i7, $i8, i9, i10;
        org.sat4j.minisat.core.ILits $r5;
        boolean $z0;
        org.sat4j.specs.IVecInt $r1, r2, $r3;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r2 := @parameter0: org.sat4j.specs.IVecInt;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt analyzetoclear>;

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: void clear()>();

        $r3 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt analyzetoclear>;

        interfaceinvoke r2.<org.sat4j.specs.IVecInt: void copyTo(org.sat4j.specs.IVecInt)>($r3);

        i9 = 1;

        i10 = 1;

     label1:
        $i0 = interfaceinvoke r2.<org.sat4j.specs.IVecInt: int size()>();

        if i9 >= $i0 goto label4;

        $r5 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $i6 = interfaceinvoke r2.<org.sat4j.specs.IVecInt: int get(int)>(i9);

        $r6 = interfaceinvoke $r5.<org.sat4j.minisat.core.ILits: org.sat4j.minisat.core.Constr getReason(int)>($i6);

        if $r6 == null goto label2;

        $i8 = interfaceinvoke r2.<org.sat4j.specs.IVecInt: int get(int)>(i9);

        $z0 = specialinvoke r0.<org.sat4j.minisat.core.Solver: boolean analyzeRemovableWLOnly(int)>($i8);

        if $z0 != 0 goto label3;

     label2:
        $i7 = i10;

        i10 = i10 + 1;

        interfaceinvoke r2.<org.sat4j.specs.IVecInt: void moveTo(int,int)>($i7, i9);

     label3:
        i9 = i9 + 1;

        goto label1;

     label4:
        $i1 = i9 - i10;

        interfaceinvoke r2.<org.sat4j.specs.IVecInt: void shrink(int)>($i1);

        $r4 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SolverStats stats>;

        $l4 = $r4.<org.sat4j.minisat.core.SolverStats: long reducedliterals>;

        $i2 = i9 - i10;

        $l3 = (long) $i2;

        $l5 = $l4 + $l3;

        $r4.<org.sat4j.minisat.core.SolverStats: long reducedliterals> = $l5;

        return;
    }

    private boolean analyzeRemovableWLOnly(int)
    {
        boolean $z0, $z1, $z2;
        java.lang.AssertionError $r19, $r23;
        org.sat4j.minisat.core.Constr $r6, $r10, $r18, $r21;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i14, i15;
        org.sat4j.minisat.core.ILits $r5, $r8, $r9, $r17, $r20;
        org.sat4j.specs.IVecInt $r1, $r2, $r3, $r4, $r7, $r11, $r12, $r13, $r14, $r15, $r16, $r24;
        boolean[] $r22;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        i0 := @parameter0: int;

        $z0 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $r20 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $r21 = interfaceinvoke $r20.<org.sat4j.minisat.core.ILits: org.sat4j.minisat.core.Constr getReason(int)>(i0);

        if $r21 != null goto label01;

        $r23 = new java.lang.AssertionError;

        specialinvoke $r23.<java.lang.AssertionError: void <init>()>();

        throw $r23;

     label01:
        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt analyzestack>;

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: void clear()>();

        $r2 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt analyzestack>;

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i0);

        $r22 = r0.<org.sat4j.minisat.core.Solver: boolean[] mseen>;

        $r3 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt analyzetoclear>;

        $i1 = interfaceinvoke $r3.<org.sat4j.specs.IVecInt: int size()>();

     label02:
        $r24 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt analyzestack>;

        $i12 = interfaceinvoke $r24.<org.sat4j.specs.IVecInt: int size()>();

        if $i12 <= 0 goto label10;

        $r4 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt analyzestack>;

        $i2 = interfaceinvoke $r4.<org.sat4j.specs.IVecInt: int last()>();

        $z1 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z1 != 0 goto label03;

        $r17 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $r18 = interfaceinvoke $r17.<org.sat4j.minisat.core.ILits: org.sat4j.minisat.core.Constr getReason(int)>($i2);

        if $r18 != null goto label03;

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>()>();

        throw $r19;

     label03:
        $r5 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $r6 = interfaceinvoke $r5.<org.sat4j.minisat.core.ILits: org.sat4j.minisat.core.Constr getReason(int)>($i2);

        $r7 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt analyzestack>;

        interfaceinvoke $r7.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt pop()>();

        i13 = 1;

     label04:
        $i14 = interfaceinvoke $r6.<org.sat4j.minisat.core.Constr: int size()>();

        if i13 >= $i14 goto label09;

        $i3 = interfaceinvoke $r6.<org.sat4j.minisat.core.Constr: int get(int)>(i13);

        $i4 = staticinvoke <org.sat4j.core.LiteralsUtils: int var(int)>($i3);

        $z2 = $r22[$i4];

        if $z2 != 0 goto label08;

        $r8 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $i5 = interfaceinvoke $r8.<org.sat4j.minisat.core.ILits: int getLevel(int)>($i3);

        if $i5 == 0 goto label08;

        $r9 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $r10 = interfaceinvoke $r9.<org.sat4j.minisat.core.ILits: org.sat4j.minisat.core.Constr getReason(int)>($i3);

        if $r10 != null goto label07;

        i15 = $i1;

     label05:
        $r13 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt analyzetoclear>;

        $i7 = interfaceinvoke $r13.<org.sat4j.specs.IVecInt: int size()>();

        if i15 >= $i7 goto label06;

        $r16 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt analyzetoclear>;

        $i10 = interfaceinvoke $r16.<org.sat4j.specs.IVecInt: int get(int)>(i15);

        $i11 = $i10 >> 1;

        $r22[$i11] = 0;

        i15 = i15 + 1;

        goto label05;

     label06:
        $r15 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt analyzetoclear>;

        $r14 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt analyzetoclear>;

        $i8 = interfaceinvoke $r14.<org.sat4j.specs.IVecInt: int size()>();

        $i9 = $i8 - $i1;

        interfaceinvoke $r15.<org.sat4j.specs.IVecInt: void shrink(int)>($i9);

        return 0;

     label07:
        $i6 = $i3 >> 1;

        $r22[$i6] = 1;

        $r11 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt analyzestack>;

        interfaceinvoke $r11.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i3);

        $r12 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt analyzetoclear>;

        interfaceinvoke $r12.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i3);

     label08:
        i13 = i13 + 1;

        goto label04;

     label09:
        goto label02;

     label10:
        return 1;
    }

    protected void undoOne()
    {
        java.lang.AssertionError $r15, $r16, $r17;
        org.sat4j.minisat.core.Undoable $r10;
        int $i0, $i1, $i2, i3, $i5, $i7;
        org.sat4j.specs.IVec $r8;
        org.sat4j.minisat.core.ILits $r2, $r3, $r4, $r7, $r12;
        boolean $z0, $z1, $z2;
        org.sat4j.specs.IVecInt $r1, $r6;
        org.sat4j.minisat.core.IOrder $r5;
        java.lang.Object $r9;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i0 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: int last()>();

        $z0 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if $i0 > 1 goto label1;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label1:
        $z1 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r12 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $i1 = interfaceinvoke $r12.<org.sat4j.minisat.core.ILits: int getLevel(int)>($i0);

        if $i1 >= 0 goto label2;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label2:
        $i2 = $i0 >> 1;

        $r2 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        interfaceinvoke $r2.<org.sat4j.minisat.core.ILits: void unassign(int)>($i0);

        $r3 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        interfaceinvoke $r3.<org.sat4j.minisat.core.ILits: void setReason(int,org.sat4j.minisat.core.Constr)>($i0, null);

        $r4 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $i5 = (int) -1;

        interfaceinvoke $r4.<org.sat4j.minisat.core.ILits: void setLevel(int,int)>($i0, $i5);

        $r5 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.IOrder order>;

        interfaceinvoke $r5.<org.sat4j.minisat.core.IOrder: void undo(int)>($i2);

        $r6 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        interfaceinvoke $r6.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt pop()>();

        $r7 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $r8 = interfaceinvoke $r7.<org.sat4j.minisat.core.ILits: org.sat4j.specs.IVec undos(int)>($i0);

        $z2 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z2 != 0 goto label3;

        if $r8 != null goto label3;

        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>()>();

        throw $r17;

     label3:
        i3 = interfaceinvoke $r8.<org.sat4j.specs.IVec: int size()>();

     label4:
        if i3 <= 0 goto label5;

        $r9 = interfaceinvoke $r8.<org.sat4j.specs.IVec: java.lang.Object last()>();

        $r10 = (org.sat4j.minisat.core.Undoable) $r9;

        interfaceinvoke $r10.<org.sat4j.minisat.core.Undoable: void undo(int)>($i0);

        interfaceinvoke $r8.<org.sat4j.specs.IVec: void pop()>();

        $i7 = (int) -1;

        i3 = i3 + $i7;

        goto label4;

     label5:
        return;
    }

    public void claBumpActivity(org.sat4j.minisat.core.Constr)
    {
        byte $b0;
        int $i1;
        org.sat4j.minisat.core.Solver r1;
        org.sat4j.minisat.core.Constr r0;
        double $d0, $d1;

        r1 := @this: org.sat4j.minisat.core.Solver;

        r0 := @parameter0: org.sat4j.minisat.core.Constr;

        $d0 = r1.<org.sat4j.minisat.core.Solver: double claInc>;

        interfaceinvoke r0.<org.sat4j.minisat.core.Constr: void incActivity(double)>($d0);

        $d1 = interfaceinvoke r0.<org.sat4j.minisat.core.Constr: double getActivity()>();

        $b0 = $d1 cmpl 1.0E20;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        specialinvoke r1.<org.sat4j.minisat.core.Solver: void claRescalActivity()>();

     label1:
        return;
    }

    public void varBumpActivity(int)
    {
        int i0;
        org.sat4j.minisat.core.IOrder $r1;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.IOrder order>;

        interfaceinvoke $r1.<org.sat4j.minisat.core.IOrder: void updateVar(int)>(i0);

        return;
    }

    private void claRescalActivity()
    {
        org.sat4j.minisat.core.Constr $r4;
        int $i0, i1;
        java.lang.Object $r3;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.specs.IVec $r1, $r2;
        double $d0, $d1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        i1 = 0;

     label1:
        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVec learnts>;

        $i0 = interfaceinvoke $r1.<org.sat4j.specs.IVec: int size()>();

        if i1 >= $i0 goto label2;

        $r2 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVec learnts>;

        $r3 = interfaceinvoke $r2.<org.sat4j.specs.IVec: java.lang.Object get(int)>(i1);

        $r4 = (org.sat4j.minisat.core.Constr) $r3;

        interfaceinvoke $r4.<org.sat4j.minisat.core.Constr: void rescaleBy(double)>(1.0E-20);

        i1 = i1 + 1;

        goto label1;

     label2:
        $d0 = r0.<org.sat4j.minisat.core.Solver: double claInc>;

        $d1 = $d0 * 1.0E-20;

        r0.<org.sat4j.minisat.core.Solver: double claInc> = $d1;

        return;
    }

    public org.sat4j.minisat.core.Constr propagate()
    {
        org.sat4j.specs.SearchListener r4;
        org.sat4j.specs.IVecInt r1;
        long $l2, $l3;
        org.sat4j.minisat.core.Constr $r5;
        org.sat4j.minisat.core.SolverStats r2;
        org.sat4j.minisat.core.IOrder r3;
        int $i0, $i1, $i4, $i5, $i6, $i7;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        r2 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SolverStats stats>;

        r3 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.IOrder order>;

        r4 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.SearchListener slistener>;

     label1:
        $i0 = r0.<org.sat4j.minisat.core.Solver: int qhead>;

        $i1 = interfaceinvoke r1.<org.sat4j.specs.IVecInt: int size()>();

        if $i0 >= $i1 goto label3;

        $l2 = r2.<org.sat4j.minisat.core.SolverStats: long propagations>;

        $l3 = $l2 + 1L;

        r2.<org.sat4j.minisat.core.SolverStats: long propagations> = $l3;

        $i4 = r0.<org.sat4j.minisat.core.Solver: int qhead>;

        $i5 = $i4 + 1;

        r0.<org.sat4j.minisat.core.Solver: int qhead> = $i5;

        $i6 = interfaceinvoke r1.<org.sat4j.specs.IVecInt: int get(int)>($i4);

        $i7 = staticinvoke <org.sat4j.core.LiteralsUtils: int toDimacs(int)>($i6);

        interfaceinvoke r4.<org.sat4j.specs.SearchListener: void propagating(int,org.sat4j.specs.IConstr)>($i7, null);

        interfaceinvoke r3.<org.sat4j.minisat.core.IOrder: void assignLiteral(int)>($i6);

        $r5 = specialinvoke r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.Constr reduceClausesForFalsifiedLiteral(int)>($i6);

        if $r5 == null goto label2;

        return $r5;

     label2:
        goto label1;

     label3:
        return null;
    }

    private org.sat4j.minisat.core.Constr reduceClausesForFalsifiedLiteral(int)
    {
        org.sat4j.minisat.core.Propagatable $r5, $r8, $r12;
        long $l2, $l3;
        java.lang.AssertionError $r14;
        org.sat4j.minisat.core.Constr $r9;
        org.sat4j.minisat.core.SolverStats $r3;
        int i0, $i1, $i4, $i5, i6, i7;
        org.sat4j.specs.IVec $r2, $r13;
        org.sat4j.minisat.core.ILits $r1, $r10;
        boolean $z0, $z1;
        org.sat4j.specs.IVecInt $r6;
        java.lang.Object $r4, $r7, $r11;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        i0 := @parameter0: int;

        $z0 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i0 > 1 goto label1;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label1:
        $r13 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVec watched>;

        interfaceinvoke $r13.<org.sat4j.specs.IVec: void clear()>();

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $r2 = interfaceinvoke $r1.<org.sat4j.minisat.core.ILits: org.sat4j.specs.IVec watches(int)>(i0);

        interfaceinvoke $r2.<org.sat4j.specs.IVec: void moveTo(org.sat4j.specs.IVec)>($r13);

        $i1 = interfaceinvoke $r13.<org.sat4j.specs.IVec: int size()>();

        i6 = 0;

     label2:
        if i6 >= $i1 goto label6;

        $r3 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SolverStats stats>;

        $l2 = $r3.<org.sat4j.minisat.core.SolverStats: long inspects>;

        $l3 = $l2 + 1L;

        $r3.<org.sat4j.minisat.core.SolverStats: long inspects> = $l3;

        $r4 = interfaceinvoke $r13.<org.sat4j.specs.IVec: java.lang.Object get(int)>(i6);

        $r5 = (org.sat4j.minisat.core.Propagatable) $r4;

        $z1 = interfaceinvoke $r5.<org.sat4j.minisat.core.Propagatable: boolean propagate(org.sat4j.minisat.core.UnitPropagationListener,int)>(r0, i0);

        if $z1 != 0 goto label5;

        $i4 = interfaceinvoke $r13.<org.sat4j.specs.IVec: int size()>();

        i7 = i6 + 1;

     label3:
        if i7 >= $i4 goto label4;

        $r10 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $r11 = interfaceinvoke $r13.<org.sat4j.specs.IVec: java.lang.Object get(int)>(i7);

        $r12 = (org.sat4j.minisat.core.Propagatable) $r11;

        interfaceinvoke $r10.<org.sat4j.minisat.core.ILits: void watch(int,org.sat4j.minisat.core.Propagatable)>(i0, $r12);

        i7 = i7 + 1;

        goto label3;

     label4:
        $r6 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i5 = interfaceinvoke $r6.<org.sat4j.specs.IVecInt: int size()>();

        r0.<org.sat4j.minisat.core.Solver: int qhead> = $i5;

        $r7 = interfaceinvoke $r13.<org.sat4j.specs.IVec: java.lang.Object get(int)>(i6);

        $r8 = (org.sat4j.minisat.core.Propagatable) $r7;

        $r9 = interfaceinvoke $r8.<org.sat4j.minisat.core.Propagatable: org.sat4j.minisat.core.Constr toConstraint()>();

        return $r9;

     label5:
        i6 = i6 + 1;

        goto label2;

     label6:
        return null;
    }

    void record(org.sat4j.minisat.core.Constr)
    {
        org.sat4j.minisat.core.LearningStrategy $r3;
        org.sat4j.specs.SearchListener $r2;
        long $l3, $l4;
        org.sat4j.minisat.core.Constr r0;
        org.sat4j.minisat.core.SolverStats $r4;
        int $i0, $i1, $i2;
        org.sat4j.minisat.core.Solver r1;

        r1 := @this: org.sat4j.minisat.core.Solver;

        r0 := @parameter0: org.sat4j.minisat.core.Constr;

        interfaceinvoke r0.<org.sat4j.minisat.core.Constr: void assertConstraint(org.sat4j.minisat.core.UnitPropagationListener)>(r1);

        $r2 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.SearchListener slistener>;

        $i0 = interfaceinvoke r0.<org.sat4j.minisat.core.Constr: int get(int)>(0);

        $i1 = staticinvoke <org.sat4j.core.LiteralsUtils: int toDimacs(int)>($i0);

        interfaceinvoke $r2.<org.sat4j.specs.SearchListener: void adding(int)>($i1);

        $i2 = interfaceinvoke r0.<org.sat4j.minisat.core.Constr: int size()>();

        if $i2 != 1 goto label1;

        $r4 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SolverStats stats>;

        $l3 = $r4.<org.sat4j.minisat.core.SolverStats: long learnedliterals>;

        $l4 = $l3 + 1L;

        $r4.<org.sat4j.minisat.core.SolverStats: long learnedliterals> = $l4;

        goto label2;

     label1:
        $r3 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearningStrategy learner>;

        interfaceinvoke $r3.<org.sat4j.minisat.core.LearningStrategy: void learns(org.sat4j.minisat.core.Constr)>(r0);

     label2:
        return;
    }

    public boolean assume(int)
    {
        java.lang.AssertionError $r5, $r7;
        int $i0, i1, $i2, $i3, $i4;
        boolean $z0, $z1, $z2, $z3;
        org.sat4j.specs.IVecInt $r1, $r2, $r3, $r4, $r6;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        i1 := @parameter0: int;

        $z0 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r6 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i3 = interfaceinvoke $r6.<org.sat4j.specs.IVecInt: int size()>();

        $i4 = r0.<org.sat4j.minisat.core.Solver: int qhead>;

        if $i3 == $i4 goto label1;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label1:
        $z1 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r4 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trailLim>;

        $r3 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i2 = interfaceinvoke $r3.<org.sat4j.specs.IVecInt: int size()>();

        $z3 = interfaceinvoke $r4.<org.sat4j.specs.IVecInt: boolean contains(int)>($i2);

        if $z3 == 0 goto label2;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label2:
        $r2 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trailLim>;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i0 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: int size()>();

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i0);

        $z2 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: boolean enqueue(int)>(i1);

        return $z2;
    }

    private void cancel()
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i8;
        org.sat4j.specs.SearchListener $r3;
        org.sat4j.specs.IVecInt $r1, $r2, $r4, $r5, $r6, $r7;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r2 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trailLim>;

        $i0 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: int last()>();

        $i1 = interfaceinvoke $r2.<org.sat4j.specs.IVecInt: int unsafeGet(int)>($i0);

        $r3 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.SearchListener slistener>;

        $i2 = staticinvoke <org.sat4j.core.LiteralsUtils: int toDimacs(int)>($i1);

        interfaceinvoke $r3.<org.sat4j.specs.SearchListener: void backtracking(int)>($i2);

        $r4 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i3 = interfaceinvoke $r4.<org.sat4j.specs.IVecInt: int size()>();

        $r5 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trailLim>;

        $i4 = interfaceinvoke $r5.<org.sat4j.specs.IVecInt: int last()>();

        i6 = $i3 - $i4;

     label1:
        if i6 <= 0 goto label2;

        virtualinvoke r0.<org.sat4j.minisat.core.Solver: void undoOne()>();

        $i8 = (int) -1;

        i6 = i6 + $i8;

        goto label1;

     label2:
        $r6 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trailLim>;

        interfaceinvoke $r6.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt pop()>();

        $r7 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i5 = interfaceinvoke $r7.<org.sat4j.specs.IVecInt: int size()>();

        r0.<org.sat4j.minisat.core.Solver: int qhead> = $i5;

        return;
    }

    private void cancelLearntLiterals(int)
    {
        org.sat4j.specs.IVecInt $r1, $r2, $r3, $r4;
        int $i0, i1, $i2;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        i1 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt learnedLiterals>;

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: void clear()>();

     label1:
        $r2 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i0 = interfaceinvoke $r2.<org.sat4j.specs.IVecInt: int size()>();

        if $i0 <= i1 goto label2;

        $r4 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt learnedLiterals>;

        $r3 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i2 = interfaceinvoke $r3.<org.sat4j.specs.IVecInt: int last()>();

        interfaceinvoke $r4.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i2);

        virtualinvoke r0.<org.sat4j.minisat.core.Solver: void undoOne()>();

        goto label1;

     label2:
        return;
    }

    protected void cancelUntil(int)
    {
        int $i0, i1;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        i1 := @parameter0: int;

     label1:
        $i0 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: int decisionLevel()>();

        if $i0 <= i1 goto label2;

        specialinvoke r0.<org.sat4j.minisat.core.Solver: void cancel()>();

        goto label1;

     label2:
        return;
    }

    org.sat4j.specs.Lbool search(org.sat4j.specs.IVecInt)
    {
        org.sat4j.minisat.core.Pair $r11, $r12, $r14, $r16, $r18, $r21, $r24, $r26;
        org.sat4j.specs.Lbool $r5, $r22, $r28, $r31, $r40, $r44, $r53;
        org.sat4j.specs.SearchListener $r7, $r13, $r37, $r42, $r54;
        org.sat4j.minisat.core.SearchParams $r2, $r4;
        org.sat4j.specs.TimeoutException $r52;
        org.sat4j.minisat.core.ConflictTimerContainer $r9;
        long $l2, $l3, $l22, $l23, $l30, $l31;
        java.lang.AssertionError $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64;
        org.sat4j.minisat.core.Constr $r15, $r17, $r19, $r34, $r43, $r55, r56;
        org.sat4j.minisat.core.ILits $r32, $r45;
        org.sat4j.specs.IVecInt $r8, $r10, r29, $r30, $r49;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.SolverStats $r1, $r6, $r35, $r47;
        int[] $r41;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        int $i0, $i1, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i24, $i25, $i26, $i27, $i28, $i29, $i32, $i33, $i34, $i35, $i37, $i39;
        double $d0, $d1, $d2, $d3;
        org.sat4j.minisat.core.RestartStrategy $r20, $r25, $r33;
        org.sat4j.minisat.core.IOrder $r3, $r36;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r29 := @parameter0: org.sat4j.specs.IVecInt;

        $z0 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $i34 = r0.<org.sat4j.minisat.core.Solver: int rootLevel>;

        $i35 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: int decisionLevel()>();

        if $i34 == $i35 goto label01;

        $r57 = new java.lang.AssertionError;

        specialinvoke $r57.<java.lang.AssertionError: void <init>()>();

        throw $r57;

     label01:
        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SolverStats stats>;

        $i0 = $r1.<org.sat4j.minisat.core.SolverStats: int starts>;

        $i1 = $i0 + 1;

        $r1.<org.sat4j.minisat.core.SolverStats: int starts> = $i1;

        $r3 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.IOrder order>;

        $r2 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SearchParams params>;

        $d0 = virtualinvoke $r2.<org.sat4j.minisat.core.SearchParams: double getVarDecay()>();

        $d1 = 1.0 / $d0;

        interfaceinvoke $r3.<org.sat4j.minisat.core.IOrder: void setVarDecay(double)>($d1);

        $r4 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SearchParams params>;

        $d2 = virtualinvoke $r4.<org.sat4j.minisat.core.SearchParams: double getClaDecay()>();

        $d3 = 1.0 / $d2;

        r0.<org.sat4j.minisat.core.Solver: double claDecay> = $d3;

     label02:
        $r54 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.SearchListener slistener>;

        interfaceinvoke $r54.<org.sat4j.specs.SearchListener: void beginLoop()>();

        $r55 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.Constr propagate()>();

        r56 = $r55;

        $z13 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z13 != 0 goto label03;

        $r49 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i32 = interfaceinvoke $r49.<org.sat4j.specs.IVecInt: int size()>();

        $i33 = r0.<org.sat4j.minisat.core.Solver: int qhead>;

        if $i32 == $i33 goto label03;

        $r58 = new java.lang.AssertionError;

        specialinvoke $r58.<java.lang.AssertionError: void <init>()>();

        throw $r58;

     label03:
        if $r55 != null goto label14;

        $i19 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: int decisionLevel()>();

        if $i19 != 0 goto label04;

        $z10 = r0.<org.sat4j.minisat.core.Solver: boolean isDBSimplificationAllowed>;

        if $z10 == 0 goto label04;

        $r47 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SolverStats stats>;

        $l30 = $r47.<org.sat4j.minisat.core.SolverStats: long rootSimplifications>;

        $l31 = $l30 + 1L;

        $r47.<org.sat4j.minisat.core.SolverStats: long rootSimplifications> = $l31;

        $z11 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: boolean simplifyDB()>();

        $z12 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z12 != 0 goto label04;

        if $z11 != 0 goto label04;

        $r59 = new java.lang.AssertionError;

        specialinvoke $r59.<java.lang.AssertionError: void <init>()>();

        throw $r59;

     label04:
        $z14 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z14 != 0 goto label05;

        $i28 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: int nAssigns()>();

        $r45 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $i29 = interfaceinvoke $r45.<org.sat4j.minisat.core.ILits: int realnVars()>();

        if $i28 <= $i29 goto label05;

        $r60 = new java.lang.AssertionError;

        specialinvoke $r60.<java.lang.AssertionError: void <init>()>();

        throw $r60;

     label05:
        $i20 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: int nAssigns()>();

        $r32 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $i21 = interfaceinvoke $r32.<org.sat4j.minisat.core.ILits: int realnVars()>();

        if $i20 != $i21 goto label07;

        virtualinvoke r0.<org.sat4j.minisat.core.Solver: void modelFound()>();

        $r42 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.SearchListener slistener>;

        $r41 = r0.<org.sat4j.minisat.core.Solver: int[] model>;

        interfaceinvoke $r42.<org.sat4j.specs.SearchListener: void solutionFound(int[])>($r41);

        $r43 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.Constr sharedConflict>;

        if $r43 != null goto label06;

        $i27 = r0.<org.sat4j.minisat.core.Solver: int rootLevel>;

        virtualinvoke r0.<org.sat4j.minisat.core.Solver: void cancelUntil(int)>($i27);

        $r44 = <org.sat4j.specs.Lbool: org.sat4j.specs.Lbool TRUE>;

        return $r44;

     label06:
        r56 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.Constr sharedConflict>;

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.Constr sharedConflict> = null;

        goto label14;

     label07:
        $r33 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.RestartStrategy restarter>;

        $z5 = interfaceinvoke $r33.<org.sat4j.minisat.core.RestartStrategy: boolean shouldRestart()>();

        if $z5 == 0 goto label08;

        $i26 = r0.<org.sat4j.minisat.core.Solver: int rootLevel>;

        virtualinvoke r0.<org.sat4j.minisat.core.Solver: void cancelUntil(int)>($i26);

        $r40 = <org.sat4j.specs.Lbool: org.sat4j.specs.Lbool UNDEFINED>;

        return $r40;

     label08:
        $z6 = r0.<org.sat4j.minisat.core.Solver: boolean needToReduceDB>;

        if $z6 == 0 goto label09;

        virtualinvoke r0.<org.sat4j.minisat.core.Solver: void reduceDB()>();

        r0.<org.sat4j.minisat.core.Solver: boolean needToReduceDB> = 0;

     label09:
        $r34 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.Constr sharedConflict>;

        if $r34 != null goto label13;

        $r35 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SolverStats stats>;

        $l22 = $r35.<org.sat4j.minisat.core.SolverStats: long decisions>;

        $l23 = $l22 + 1L;

        $r35.<org.sat4j.minisat.core.SolverStats: long decisions> = $l23;

        $r36 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.IOrder order>;

        $i24 = interfaceinvoke $r36.<org.sat4j.minisat.core.IOrder: int select()>();

        $i37 = (int) -1;

        if $i24 != $i37 goto label10;

        r56 = specialinvoke r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.Constr preventTheSameDecisionsToBeMade()>();

        r0.<org.sat4j.minisat.core.Solver: boolean lastConflictMeansUnsat> = 0;

        goto label12;

     label10:
        $z7 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z7 != 0 goto label11;

        if $i24 > 1 goto label11;

        $r61 = new java.lang.AssertionError;

        specialinvoke $r61.<java.lang.AssertionError: void <init>()>();

        throw $r61;

     label11:
        $r37 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.SearchListener slistener>;

        $i25 = staticinvoke <org.sat4j.core.LiteralsUtils: int toDimacs(int)>($i24);

        interfaceinvoke $r37.<org.sat4j.specs.SearchListener: void assuming(int)>($i25);

        $z8 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: boolean assume(int)>($i24);

        $z9 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z9 != 0 goto label12;

        if $z8 != 0 goto label12;

        $r62 = new java.lang.AssertionError;

        specialinvoke $r62.<java.lang.AssertionError: void <init>()>();

        throw $r62;

     label12:
        goto label14;

     label13:
        r56 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.Constr sharedConflict>;

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.Constr sharedConflict> = null;

     label14:
        if r56 == null goto label26;

        $r6 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SolverStats stats>;

        $l2 = $r6.<org.sat4j.minisat.core.SolverStats: long conflicts>;

        $l3 = $l2 + 1L;

        $r6.<org.sat4j.minisat.core.SolverStats: long conflicts> = $l3;

        $r7 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.SearchListener slistener>;

        $i4 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: int decisionLevel()>();

        $r8 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i5 = interfaceinvoke $r8.<org.sat4j.specs.IVecInt: int size()>();

        interfaceinvoke $r7.<org.sat4j.specs.SearchListener: void conflictFound(org.sat4j.specs.IConstr,int,int)>(r56, $i4, $i5);

        $r9 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ConflictTimerContainer conflictCount>;

        virtualinvoke $r9.<org.sat4j.minisat.core.ConflictTimerContainer: void newConflict()>();

        $i6 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: int decisionLevel()>();

        $i7 = r0.<org.sat4j.minisat.core.Solver: int rootLevel>;

        if $i6 != $i7 goto label16;

        $z4 = r0.<org.sat4j.minisat.core.Solver: boolean lastConflictMeansUnsat>;

        if $z4 == 0 goto label15;

        $i39 = (int) -1;

        $r30 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt analyzeFinalConflictInTermsOfAssumptions(org.sat4j.minisat.core.Constr,org.sat4j.specs.IVecInt,int)>(r56, r29, $i39);

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt unsatExplanationInTermsOfAssumptions> = $r30;

        $r31 = <org.sat4j.specs.Lbool: org.sat4j.specs.Lbool FALSE>;

        return $r31;

     label15:
        $r28 = <org.sat4j.specs.Lbool: org.sat4j.specs.Lbool UNDEFINED>;

        return $r28;

     label16:
        $r10 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i8 = interfaceinvoke $r10.<org.sat4j.specs.IVecInt: int size()>();

     label17:
        $r11 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.Pair analysisResult>;

        virtualinvoke r0.<org.sat4j.minisat.core.Solver: void analyze(org.sat4j.minisat.core.Constr,org.sat4j.minisat.core.Pair)>(r56, $r11);

     label18:
        goto label20;

     label19:
        $r52 := @caughtexception;

        $r53 = <org.sat4j.specs.Lbool: org.sat4j.specs.Lbool UNDEFINED>;

        return $r53;

     label20:
        $z2 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z2 != 0 goto label21;

        $r26 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.Pair analysisResult>;

        $i17 = $r26.<org.sat4j.minisat.core.Pair: int backtrackLevel>;

        $i18 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: int decisionLevel()>();

        if $i17 < $i18 goto label21;

        $r63 = new java.lang.AssertionError;

        specialinvoke $r63.<java.lang.AssertionError: void <init>()>();

        throw $r63;

     label21:
        $r12 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.Pair analysisResult>;

        $i10 = $r12.<org.sat4j.minisat.core.Pair: int backtrackLevel>;

        $i9 = r0.<org.sat4j.minisat.core.Solver: int rootLevel>;

        $i11 = staticinvoke <java.lang.Math: int max(int,int)>($i10, $i9);

        $r13 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.SearchListener slistener>;

        interfaceinvoke $r13.<org.sat4j.specs.SearchListener: void backjump(int)>($i11);

        virtualinvoke r0.<org.sat4j.minisat.core.Solver: void cancelUntil(int)>($i11);

        $i12 = r0.<org.sat4j.minisat.core.Solver: int rootLevel>;

        if $i11 != $i12 goto label22;

        $r25 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.RestartStrategy restarter>;

        interfaceinvoke $r25.<org.sat4j.minisat.core.RestartStrategy: void onBackjumpToRootLevel()>();

     label22:
        $z3 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z3 != 0 goto label24;

        $i13 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: int decisionLevel()>();

        $i14 = r0.<org.sat4j.minisat.core.Solver: int rootLevel>;

        if $i13 < $i14 goto label23;

        $i15 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: int decisionLevel()>();

        $r24 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.Pair analysisResult>;

        $i16 = $r24.<org.sat4j.minisat.core.Pair: int backtrackLevel>;

        if $i15 >= $i16 goto label24;

     label23:
        $r64 = new java.lang.AssertionError;

        specialinvoke $r64.<java.lang.AssertionError: void <init>()>();

        throw $r64;

     label24:
        $r14 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.Pair analysisResult>;

        $r15 = $r14.<org.sat4j.minisat.core.Pair: org.sat4j.minisat.core.Constr reason>;

        if $r15 != null goto label25;

        $r22 = <org.sat4j.specs.Lbool: org.sat4j.specs.Lbool FALSE>;

        return $r22;

     label25:
        $r16 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.Pair analysisResult>;

        $r17 = $r16.<org.sat4j.minisat.core.Pair: org.sat4j.minisat.core.Constr reason>;

        virtualinvoke r0.<org.sat4j.minisat.core.Solver: void record(org.sat4j.minisat.core.Constr)>($r17);

        $r20 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.RestartStrategy restarter>;

        $r18 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.Pair analysisResult>;

        $r19 = $r18.<org.sat4j.minisat.core.Pair: org.sat4j.minisat.core.Constr reason>;

        interfaceinvoke $r20.<org.sat4j.minisat.core.RestartStrategy: void newLearnedClause(org.sat4j.minisat.core.Constr,int)>($r19, $i8);

        $r21 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.Pair analysisResult>;

        $r21.<org.sat4j.minisat.core.Pair: org.sat4j.minisat.core.Constr reason> = null;

        virtualinvoke r0.<org.sat4j.minisat.core.Solver: void decayActivities()>();

     label26:
        $z1 = r0.<org.sat4j.minisat.core.Solver: boolean undertimeout>;

        if $z1 != 0 goto label02;

        $r5 = <org.sat4j.specs.Lbool: org.sat4j.specs.Lbool UNDEFINED>;

        return $r5;

        catch org.sat4j.specs.TimeoutException from label17 to label18 with label19;
    }

    private org.sat4j.minisat.core.Constr preventTheSameDecisionsToBeMade()
    {
        org.sat4j.specs.IVecInt $r2, $r5;
        org.sat4j.minisat.core.DataStructureFactory $r3;
        org.sat4j.minisat.core.Constr $r4, $r7;
        int $i0, $i1, $i2, $i3, $i4, i5, $i7;
        org.sat4j.core.VecInt $r8;
        org.sat4j.minisat.core.Solver r1;
        org.sat4j.minisat.core.ILits $r6;

        r1 := @this: org.sat4j.minisat.core.Solver;

        $r8 = new org.sat4j.core.VecInt;

        $i0 = virtualinvoke r1.<org.sat4j.minisat.core.Solver: int nVars()>();

        specialinvoke $r8.<org.sat4j.core.VecInt: void <init>(int)>($i0);

        $r2 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i1 = interfaceinvoke $r2.<org.sat4j.specs.IVecInt: int size()>();

        i5 = $i1 - 1;

     label1:
        $i2 = r1.<org.sat4j.minisat.core.Solver: int rootLevel>;

        if i5 < $i2 goto label3;

        $r5 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i3 = interfaceinvoke $r5.<org.sat4j.specs.IVecInt: int get(int)>(i5);

        $r6 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $r7 = interfaceinvoke $r6.<org.sat4j.minisat.core.ILits: org.sat4j.minisat.core.Constr getReason(int)>($i3);

        if $r7 != null goto label2;

        $i4 = $i3 ^ 1;

        interfaceinvoke $r8.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i4);

     label2:
        $i7 = (int) -1;

        i5 = i5 + $i7;

        goto label1;

     label3:
        $r3 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.DataStructureFactory dsfactory>;

        $r4 = interfaceinvoke $r3.<org.sat4j.minisat.core.DataStructureFactory: org.sat4j.minisat.core.Constr createUnregisteredClause(org.sat4j.specs.IVecInt)>($r8);

        return $r4;
    }

    protected void analyzeAtRootLevel(org.sat4j.minisat.core.Constr)
    {
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.Constr r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r1 := @parameter0: org.sat4j.minisat.core.Constr;

        return;
    }

    void modelFound()
    {
        int[] $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.sat4j.minisat.core.Constr $r14, $r24;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, $i18, i19, $i20;
        org.sat4j.minisat.core.ILits $r7, $r8, $r9, $r10, $r11, $r13, $r17, $r18, $r19, $r20, $r21, $r23;
        boolean[] $r2, $r12, $r22;
        org.sat4j.specs.IVecInt $r15, $r16, $r25, $r26;
        org.sat4j.core.VecInt $r0;
        org.sat4j.minisat.core.Solver r1;

        r1 := @this: org.sat4j.minisat.core.Solver;

        $r0 = new org.sat4j.core.VecInt;

        $i0 = virtualinvoke r1.<org.sat4j.minisat.core.Solver: int nVars()>();

        specialinvoke $r0.<org.sat4j.core.VecInt: void <init>(int)>($i0);

        $i1 = virtualinvoke r1.<org.sat4j.minisat.core.Solver: int realNumberOfVariables()>();

        $r2 = newarray (boolean)[$i1];

        r1.<org.sat4j.minisat.core.Solver: boolean[] userbooleanmodel> = $r2;

        r1.<org.sat4j.minisat.core.Solver: int[] fullmodel> = null;

        i17 = 1;

     label01:
        $i2 = virtualinvoke r1.<org.sat4j.minisat.core.Solver: int nVars()>();

        if i17 > $i2 goto label06;

        $r17 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $z4 = interfaceinvoke $r17.<org.sat4j.minisat.core.ILits: boolean belongsToPool(int)>(i17);

        if $z4 == 0 goto label05;

        $r18 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $i13 = interfaceinvoke $r18.<org.sat4j.minisat.core.ILits: int getFromPool(int)>(i17);

        $r19 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $z5 = interfaceinvoke $r19.<org.sat4j.minisat.core.ILits: boolean isUnassigned(int)>($i13);

        if $z5 != 0 goto label05;

        $r20 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $z6 = interfaceinvoke $r20.<org.sat4j.minisat.core.ILits: boolean isSatisfied(int)>($i13);

        if $z6 == 0 goto label02;

        $i18 = i17;

        goto label03;

     label02:
        $i18 = neg i17;

     label03:
        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i18);

        $r22 = r1.<org.sat4j.minisat.core.Solver: boolean[] userbooleanmodel>;

        $i14 = i17 - 1;

        $r21 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $z7 = interfaceinvoke $r21.<org.sat4j.minisat.core.ILits: boolean isSatisfied(int)>($i13);

        $r22[$i14] = $z7;

        $r23 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $r24 = interfaceinvoke $r23.<org.sat4j.minisat.core.ILits: org.sat4j.minisat.core.Constr getReason(int)>($i13);

        if $r24 != null goto label04;

        $r26 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt decisions>;

        $i16 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: int last()>();

        interfaceinvoke $r26.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i16);

        goto label05;

     label04:
        $r25 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt implied>;

        $i15 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: int last()>();

        interfaceinvoke $r25.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i15);

     label05:
        i17 = i17 + 1;

        goto label01;

     label06:
        $i3 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: int size()>();

        $r3 = newarray (int)[$i3];

        r1.<org.sat4j.minisat.core.Solver: int[] model> = $r3;

        $r4 = r1.<org.sat4j.minisat.core.Solver: int[] model>;

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: void copyTo(int[])>($r4);

        $i4 = virtualinvoke r1.<org.sat4j.minisat.core.Solver: int realNumberOfVariables()>();

        $i5 = virtualinvoke r1.<org.sat4j.minisat.core.Solver: int nVars()>();

        if $i4 <= $i5 goto label13;

        $i6 = virtualinvoke r1.<org.sat4j.minisat.core.Solver: int nVars()>();

        i19 = $i6 + 1;

     label07:
        $i7 = virtualinvoke r1.<org.sat4j.minisat.core.Solver: int realNumberOfVariables()>();

        if i19 > $i7 goto label12;

        $r7 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $z0 = interfaceinvoke $r7.<org.sat4j.minisat.core.ILits: boolean belongsToPool(int)>(i19);

        if $z0 == 0 goto label11;

        $r8 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $i9 = interfaceinvoke $r8.<org.sat4j.minisat.core.ILits: int getFromPool(int)>(i19);

        $r9 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $z1 = interfaceinvoke $r9.<org.sat4j.minisat.core.ILits: boolean isUnassigned(int)>($i9);

        if $z1 != 0 goto label11;

        $r10 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $z2 = interfaceinvoke $r10.<org.sat4j.minisat.core.ILits: boolean isSatisfied(int)>($i9);

        if $z2 == 0 goto label08;

        $i20 = i19;

        goto label09;

     label08:
        $i20 = neg i19;

     label09:
        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i20);

        $r12 = r1.<org.sat4j.minisat.core.Solver: boolean[] userbooleanmodel>;

        $i10 = i19 - 1;

        $r11 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $z3 = interfaceinvoke $r11.<org.sat4j.minisat.core.ILits: boolean isSatisfied(int)>($i9);

        $r12[$i10] = $z3;

        $r13 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $r14 = interfaceinvoke $r13.<org.sat4j.minisat.core.ILits: org.sat4j.minisat.core.Constr getReason(int)>($i9);

        if $r14 != null goto label10;

        $r16 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt decisions>;

        $i12 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: int last()>();

        interfaceinvoke $r16.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i12);

        goto label11;

     label10:
        $r15 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt implied>;

        $i11 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: int last()>();

        interfaceinvoke $r15.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i11);

     label11:
        i19 = i19 + 1;

        goto label07;

     label12:
        $i8 = interfaceinvoke $r0.<org.sat4j.specs.IVecInt: int size()>();

        $r5 = newarray (int)[$i8];

        r1.<org.sat4j.minisat.core.Solver: int[] fullmodel> = $r5;

        $r6 = r1.<org.sat4j.minisat.core.Solver: int[] fullmodel>;

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: void moveTo(int[])>($r6);

     label13:
        return;
    }

    private org.sat4j.minisat.core.Constr forget(int)
    {
        org.sat4j.minisat.core.Constr $r2, $r3;
        int i0, $i1, $i2, $i3;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.ILits $r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        interfaceinvoke $r1.<org.sat4j.minisat.core.ILits: void forgets(int)>(i0);

        $i1 = staticinvoke <org.sat4j.core.LiteralsUtils: int toInternal(int)>(i0);

        $r2 = specialinvoke r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.Constr reduceClausesForFalsifiedLiteral(int)>($i1);

        if $r2 == null goto label1;

        return $r2;

     label1:
        $i2 = neg i0;

        $i3 = staticinvoke <org.sat4j.core.LiteralsUtils: int toInternal(int)>($i2);

        $r3 = specialinvoke r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.Constr reduceClausesForFalsifiedLiteral(int)>($i3);

        return $r3;
    }

    private boolean setAndPropagate(int)
    {
        int i0;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.Constr $r1;
        boolean $z0, $z1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: boolean assume(int)>(i0);

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.Constr propagate()>();

        if $r1 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public int[] primeImplicant()
    {
        org.sat4j.specs.IteratorInt $r5;
        java.lang.AssertionError $r20;
        org.sat4j.minisat.core.ILits $r10;
        org.sat4j.specs.IVecInt $r1, $r2, $r4, $r6, $r9, $r12, $r14, $r18, $r19, $r21;
        org.sat4j.minisat.core.Solver r0;
        int[] $r3, $r7, r8, $r11, $r13, $r15, $r16, $r17, $r22, r23;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, i33, $i34, i35, i36, i37, i38, i39;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $z0 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $i28 = r0.<org.sat4j.minisat.core.Solver: int qhead>;

        $r18 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i29 = interfaceinvoke $r18.<org.sat4j.specs.IVecInt: int size()>();

        if $i28 == $i29 goto label01;

        $i30 = r0.<org.sat4j.minisat.core.Solver: int qhead>;

        $r19 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt learnedLiterals>;

        $i31 = interfaceinvoke $r19.<org.sat4j.specs.IVecInt: int size()>();

        if $i30 == $i31 goto label01;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label01:
        $r21 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt learnedLiterals>;

        $i32 = interfaceinvoke $r21.<org.sat4j.specs.IVecInt: int size()>();

        if $i32 <= 0 goto label02;

        r0.<org.sat4j.minisat.core.Solver: int qhead> = 0;

     label02:
        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt implied>;

        $i0 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: int size()>();

        $r2 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt decisions>;

        $i1 = interfaceinvoke $r2.<org.sat4j.specs.IVecInt: int size()>();

        $i2 = $i0 + $i1;

        $i3 = $i2 + 1;

        $r3 = newarray (int)[$i3];

        r0.<org.sat4j.minisat.core.Solver: int[] prime> = $r3;

        i33 = 0;

     label03:
        $r22 = r0.<org.sat4j.minisat.core.Solver: int[] prime>;

        $i34 = lengthof $r22;

        if i33 >= $i34 goto label04;

        $r17 = r0.<org.sat4j.minisat.core.Solver: int[] prime>;

        $r17[i33] = 0;

        i33 = i33 + 1;

        goto label03;

     label04:
        $r4 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt implied>;

        $r5 = interfaceinvoke $r4.<org.sat4j.specs.IVecInt: org.sat4j.specs.IteratorInt iterator()>();

     label05:
        $z1 = interfaceinvoke $r5.<org.sat4j.specs.IteratorInt: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $i25 = interfaceinvoke $r5.<org.sat4j.specs.IteratorInt: int next()>();

        $r16 = r0.<org.sat4j.minisat.core.Solver: int[] prime>;

        $i26 = staticinvoke <java.lang.Math: int abs(int)>($i25);

        $r16[$i26] = $i25;

        $i27 = staticinvoke <org.sat4j.core.LiteralsUtils: int toInternal(int)>($i25);

        specialinvoke r0.<org.sat4j.minisat.core.Solver: boolean setAndPropagate(int)>($i27);

        goto label05;

     label06:
        i35 = 0;

        i36 = 0;

     label07:
        $r6 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt decisions>;

        $i4 = interfaceinvoke $r6.<org.sat4j.specs.IVecInt: int size()>();

        if i36 >= $i4 goto label15;

        $r9 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt decisions>;

        $i11 = interfaceinvoke $r9.<org.sat4j.specs.IVecInt: int get(int)>(i36);

        $r10 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $i12 = staticinvoke <org.sat4j.core.LiteralsUtils: int toInternal(int)>($i11);

        $z2 = interfaceinvoke $r10.<org.sat4j.minisat.core.ILits: boolean isSatisfied(int)>($i12);

        if $z2 == 0 goto label08;

        $r15 = r0.<org.sat4j.minisat.core.Solver: int[] prime>;

        $i24 = staticinvoke <java.lang.Math: int abs(int)>($i11);

        $r15[$i24] = $i11;

        goto label14;

     label08:
        $i13 = neg $i11;

        $i14 = staticinvoke <org.sat4j.core.LiteralsUtils: int toInternal(int)>($i13);

        $z3 = specialinvoke r0.<org.sat4j.minisat.core.Solver: boolean setAndPropagate(int)>($i14);

        if $z3 == 0 goto label13;

        z5 = 1;

        $i17 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: int currentDecisionLevel()>();

        i37 = i36 + 1;

     label09:
        $r12 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt decisions>;

        $i18 = interfaceinvoke $r12.<org.sat4j.specs.IVecInt: int size()>();

        if i37 >= $i18 goto label11;

        $r14 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt decisions>;

        $i22 = interfaceinvoke $r14.<org.sat4j.specs.IVecInt: int get(int)>(i37);

        $i23 = staticinvoke <org.sat4j.core.LiteralsUtils: int toInternal(int)>($i22);

        $z4 = specialinvoke r0.<org.sat4j.minisat.core.Solver: boolean setAndPropagate(int)>($i23);

        if $z4 != 0 goto label10;

        z5 = 0;

        goto label11;

     label10:
        i37 = i37 + 1;

        goto label09;

     label11:
        virtualinvoke r0.<org.sat4j.minisat.core.Solver: void cancelUntil(int)>($i17);

        if z5 == 0 goto label12;

        $i21 = staticinvoke <java.lang.Math: int abs(int)>($i11);

        specialinvoke r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.Constr forget(int)>($i21);

        i35 = i35 + 1;

        goto label14;

     label12:
        $r13 = r0.<org.sat4j.minisat.core.Solver: int[] prime>;

        $i19 = staticinvoke <java.lang.Math: int abs(int)>($i11);

        $r13[$i19] = $i11;

        specialinvoke r0.<org.sat4j.minisat.core.Solver: void cancel()>();

        $i20 = staticinvoke <org.sat4j.core.LiteralsUtils: int toInternal(int)>($i11);

        specialinvoke r0.<org.sat4j.minisat.core.Solver: boolean setAndPropagate(int)>($i20);

        goto label14;

     label13:
        $r11 = r0.<org.sat4j.minisat.core.Solver: int[] prime>;

        $i15 = staticinvoke <java.lang.Math: int abs(int)>($i11);

        $r11[$i15] = $i11;

        specialinvoke r0.<org.sat4j.minisat.core.Solver: void cancel()>();

        $i16 = staticinvoke <org.sat4j.core.LiteralsUtils: int toInternal(int)>($i11);

        specialinvoke r0.<org.sat4j.minisat.core.Solver: boolean setAndPropagate(int)>($i16);

     label14:
        i36 = i36 + 1;

        goto label07;

     label15:
        virtualinvoke r0.<org.sat4j.minisat.core.Solver: void cancelUntil(int)>(0);

        $r7 = r0.<org.sat4j.minisat.core.Solver: int[] prime>;

        $i5 = lengthof $r7;

        $i6 = $i5 - i35;

        $i7 = $i6 - 1;

        r23 = newarray (int)[$i7];

        i38 = 0;

        r8 = r0.<org.sat4j.minisat.core.Solver: int[] prime>;

        i8 = lengthof r8;

        i39 = 0;

     label16:
        if i39 >= i8 goto label18;

        i9 = r8[i39];

        if i9 == 0 goto label17;

        $i10 = i38;

        i38 = i38 + 1;

        r23[$i10] = i9;

     label17:
        i39 = i39 + 1;

        goto label16;

     label18:
        return r23;
    }

    public boolean primeImplicant(int)
    {
        java.lang.UnsupportedOperationException $r4;
        java.lang.IllegalArgumentException $r0;
        int[] $r2, $r3;
        int i0, $i1, $i2, $i3, $i4;
        org.sat4j.minisat.core.Solver r1;
        boolean $z0;

        r1 := @this: org.sat4j.minisat.core.Solver;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $i1 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        $i2 = virtualinvoke r1.<org.sat4j.minisat.core.Solver: int realNumberOfVariables()>();

        if $i1 <= $i2 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Use a valid Dimacs var id as argument!");

        throw $r0;

     label2:
        $r2 = r1.<org.sat4j.minisat.core.Solver: int[] prime>;

        if $r2 != null goto label3;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Call the primeImplicant method first!!!");

        throw $r4;

     label3:
        $r3 = r1.<org.sat4j.minisat.core.Solver: int[] prime>;

        $i3 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        $i4 = $r3[$i3];

        if $i4 != i0 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    public boolean model(int)
    {
        java.lang.UnsupportedOperationException $r4;
        boolean[] $r2, $r3;
        java.lang.IllegalArgumentException $r0;
        int i0, $i1, $i2;
        org.sat4j.minisat.core.Solver r1;
        boolean $z0;

        r1 := @this: org.sat4j.minisat.core.Solver;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        $i1 = virtualinvoke r1.<org.sat4j.minisat.core.Solver: int realNumberOfVariables()>();

        if i0 <= $i1 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Use a valid Dimacs var id as argument!");

        throw $r0;

     label2:
        $r2 = r1.<org.sat4j.minisat.core.Solver: boolean[] userbooleanmodel>;

        if $r2 != null goto label3;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Call the solve method first!!!");

        throw $r4;

     label3:
        $r3 = r1.<org.sat4j.minisat.core.Solver: boolean[] userbooleanmodel>;

        $i2 = i0 - 1;

        $z0 = $r3[$i2];

        return $z0;
    }

    public void clearLearntClauses()
    {
        java.util.Iterator $r2;
        org.sat4j.specs.IVecInt $r4;
        org.sat4j.minisat.core.Constr $r6;
        java.lang.Object $r5;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.specs.IVec $r1, $r3;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVec learnts>;

        $r2 = interfaceinvoke $r1.<org.sat4j.specs.IVec: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.sat4j.minisat.core.Constr) $r5;

        interfaceinvoke $r6.<org.sat4j.minisat.core.Constr: void remove(org.sat4j.minisat.core.UnitPropagationListener)>(r0);

        goto label1;

     label2:
        $r3 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVec learnts>;

        interfaceinvoke $r3.<org.sat4j.specs.IVec: void clear()>();

        $r4 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt learnedLiterals>;

        interfaceinvoke $r4.<org.sat4j.specs.IVecInt: void clear()>();

        return;
    }

    protected void reduceDB()
    {
        org.sat4j.specs.SearchListener $r2;
        int $i0, $i1;
        org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy $r4;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.specs.IVec $r3;
        org.sat4j.minisat.core.SolverStats $r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SolverStats stats>;

        $i0 = $r1.<org.sat4j.minisat.core.SolverStats: int reduceddb>;

        $i1 = $i0 + 1;

        $r1.<org.sat4j.minisat.core.SolverStats: int reduceddb> = $i1;

        $r2 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.SearchListener slistener>;

        interfaceinvoke $r2.<org.sat4j.specs.SearchListener: void cleaning()>();

        $r4 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy learnedConstraintsDeletionStrategy>;

        $r3 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVec learnts>;

        interfaceinvoke $r4.<org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy: void reduce(org.sat4j.specs.IVec)>($r3);

        staticinvoke <java.lang.System: void gc()>();

        return;
    }

    protected void sortOnActivity()
    {
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.specs.IVec $r2;
        org.sat4j.minisat.core.ActivityComparator $r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r2 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVec learnts>;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ActivityComparator comparator>;

        interfaceinvoke $r2.<org.sat4j.specs.IVec: void sort(java.util.Comparator)>($r1);

        return;
    }

    protected void decayActivities()
    {
        org.sat4j.minisat.core.IOrder $r1;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.IOrder order>;

        interfaceinvoke $r1.<org.sat4j.minisat.core.IOrder: void varDecayActivity()>();

        specialinvoke r0.<org.sat4j.minisat.core.Solver: void claDecayActivity()>();

        return;
    }

    private void claDecayActivity()
    {
        org.sat4j.minisat.core.Solver r0;
        double $d0, $d1, $d2;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $d1 = r0.<org.sat4j.minisat.core.Solver: double claInc>;

        $d0 = r0.<org.sat4j.minisat.core.Solver: double claDecay>;

        $d2 = $d1 * $d0;

        r0.<org.sat4j.minisat.core.Solver: double claInc> = $d2;

        return;
    }

    public boolean isSatisfiable() throws org.sat4j.specs.TimeoutException
    {
        org.sat4j.specs.IVecInt $r1;
        org.sat4j.minisat.core.Solver r0;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = <org.sat4j.core.VecInt: org.sat4j.specs.IVecInt EMPTY>;

        $z0 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: boolean isSatisfiable(org.sat4j.specs.IVecInt)>($r1);

        return $z0;
    }

    public boolean isSatisfiable(boolean) throws org.sat4j.specs.TimeoutException
    {
        org.sat4j.specs.IVecInt $r1;
        org.sat4j.minisat.core.Solver r0;
        boolean z0, $z1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        z0 := @parameter0: boolean;

        $r1 = <org.sat4j.core.VecInt: org.sat4j.specs.IVecInt EMPTY>;

        $z1 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: boolean isSatisfiable(org.sat4j.specs.IVecInt,boolean)>($r1, z0);

        return $z1;
    }

    public boolean isSatisfiable(org.sat4j.specs.IVecInt) throws org.sat4j.specs.TimeoutException
    {
        org.sat4j.specs.IVecInt r1;
        org.sat4j.minisat.core.Solver r0;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r1 := @parameter0: org.sat4j.specs.IVecInt;

        $z0 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: boolean isSatisfiable(org.sat4j.specs.IVecInt,boolean)>(r1, 0);

        return $z0;
    }

    public final org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy fixedSize(int)
    {
        int i0;
        org.sat4j.minisat.core.Solver r1;
        org.sat4j.minisat.core.Solver$5 $r0;

        r1 := @this: org.sat4j.minisat.core.Solver;

        i0 := @parameter0: int;

        $r0 = new org.sat4j.minisat.core.Solver$5;

        specialinvoke $r0.<org.sat4j.minisat.core.Solver$5: void <init>(org.sat4j.minisat.core.Solver,int)>(r1, i0);

        return $r0;
    }

    private org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy activityBased(org.sat4j.minisat.core.ConflictTimer)
    {
        org.sat4j.minisat.core.Solver r1;
        org.sat4j.minisat.core.Solver$6 $r0;
        org.sat4j.minisat.core.ConflictTimer r2;

        r1 := @this: org.sat4j.minisat.core.Solver;

        r2 := @parameter0: org.sat4j.minisat.core.ConflictTimer;

        $r0 = new org.sat4j.minisat.core.Solver$6;

        specialinvoke $r0.<org.sat4j.minisat.core.Solver$6: void <init>(org.sat4j.minisat.core.Solver,org.sat4j.minisat.core.ConflictTimer)>(r1, r2);

        return $r0;
    }

    public void setLearnedConstraintsDeletionStrategy(org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy)
    {
        org.sat4j.minisat.core.ConflictTimer $r4, $r7;
        java.lang.AssertionError $r9;
        org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy r2, $r5, $r8;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.ConflictTimerContainer $r1, $r3, $r6;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r2 := @parameter0: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ConflictTimerContainer conflictCount>;

        if $r1 == null goto label2;

        $r3 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ConflictTimerContainer conflictCount>;

        $r4 = interfaceinvoke r2.<org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy: org.sat4j.minisat.core.ConflictTimer getTimer()>();

        virtualinvoke $r3.<org.sat4j.minisat.core.ConflictTimerContainer: org.sat4j.minisat.core.ConflictTimerContainer add(org.sat4j.minisat.core.ConflictTimer)>($r4);

        $z0 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r8 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy learnedConstraintsDeletionStrategy>;

        if $r8 != null goto label1;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label1:
        $r6 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ConflictTimerContainer conflictCount>;

        $r5 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy learnedConstraintsDeletionStrategy>;

        $r7 = interfaceinvoke $r5.<org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy: org.sat4j.minisat.core.ConflictTimer getTimer()>();

        virtualinvoke $r6.<org.sat4j.minisat.core.ConflictTimerContainer: org.sat4j.minisat.core.ConflictTimerContainer remove(org.sat4j.minisat.core.ConflictTimer)>($r7);

     label2:
        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy learnedConstraintsDeletionStrategy> = r2;

        return;
    }

    public boolean isSatisfiable(org.sat4j.specs.IVecInt, boolean) throws org.sat4j.specs.TimeoutException
    {
        org.sat4j.minisat.core.Undoable $r66;
        org.sat4j.specs.IVec $r64;
        org.sat4j.specs.Lbool $r22, $r23, $r34, $r35, $r54, $r60, r69, $r74;
        org.sat4j.specs.SearchListener $r9, $r10, $r37, $r51, $r55, $r56, $r59, $r61, $r75;
        org.sat4j.minisat.core.SearchParams $r20;
        java.lang.StringBuilder $r26, $r27, $r28, $r29, $r82;
        org.sat4j.specs.TimeoutException $r83, $r84;
        org.sat4j.minisat.core.ConflictTimerContainer $r1, $r19, $r44, $r46, $r78;
        org.sat4j.minisat.core.LearningStrategy $r73;
        org.sat4j.specs.IteratorInt $r13, $r16;
        long $l3, $l5, $l6, $l7;
        java.lang.AssertionError $r77;
        org.sat4j.minisat.core.Constr $r14, $r50, r72;
        java.lang.String $r30, $r76;
        org.sat4j.minisat.core.ILits $r2, $r48, $r49, $r63;
        boolean[] $r3, $r68;
        org.sat4j.specs.IVecInt $r4, $r5, $r6, $r7, $r8, $r12, r15, $r52, $r53, $r57, $r58, $r62, $r71;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.Solver$9 $r79;
        java.util.Timer $r32, $r33, $r40, $r41, $r80;
        org.sat4j.minisat.core.Solver$10 $r81;
        boolean z0, $z1, $z2, $z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, z16, $z17, $z18;
        org.sat4j.minisat.core.ConflictTimer $r47;
        int $i0, $i1, $i2, $i4, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, $i19, $i21, $i23;
        double $d0;
        org.sat4j.minisat.core.RestartStrategy $r21, $r36, $r43;
        org.sat4j.minisat.core.IOrder $r11, $r17;
        org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy $r45, $r70;
        java.lang.Object $r65;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r15 := @parameter0: org.sat4j.specs.IVecInt;

        z4 := @parameter1: boolean;

        r69 = <org.sat4j.specs.Lbool: org.sat4j.specs.Lbool UNDEFINED>;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ConflictTimerContainer conflictCount>;

        if $r1 == null goto label01;

        $z15 = 1;

        goto label02;

     label01:
        $z15 = 0;

     label02:
        z0 = $z15;

        $r2 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $i0 = interfaceinvoke $r2.<org.sat4j.minisat.core.ILits: int nVars()>();

        $r3 = r0.<org.sat4j.minisat.core.Solver: boolean[] mseen>;

        $i1 = lengthof $r3;

        if $i1 > $i0 goto label03;

        $i14 = $i0 + 1;

        $r68 = newarray (boolean)[$i14];

        r0.<org.sat4j.minisat.core.Solver: boolean[] mseen> = $r68;

     label03:
        $r4 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        interfaceinvoke $r4.<org.sat4j.specs.IVecInt: void ensure(int)>($i0);

        $r5 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trailLim>;

        interfaceinvoke $r5.<org.sat4j.specs.IVecInt: void ensure(int)>($i0);

        $r6 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt learnedLiterals>;

        interfaceinvoke $r6.<org.sat4j.specs.IVecInt: void ensure(int)>($i0);

        $r7 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt decisions>;

        interfaceinvoke $r7.<org.sat4j.specs.IVecInt: void clear()>();

        $r8 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt implied>;

        interfaceinvoke $r8.<org.sat4j.specs.IVecInt: void clear()>();

        $r9 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.SearchListener slistener>;

        interfaceinvoke $r9.<org.sat4j.specs.SearchListener: void init(org.sat4j.specs.ISolverService)>(r0);

        $r10 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.SearchListener slistener>;

        interfaceinvoke $r10.<org.sat4j.specs.SearchListener: void start()>();

        r0.<org.sat4j.minisat.core.Solver: int[] model> = null;

        r0.<org.sat4j.minisat.core.Solver: boolean[] userbooleanmodel> = null;

        r0.<org.sat4j.minisat.core.Solver: int[] prime> = null;

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt unsatExplanationInTermsOfAssumptions> = null;

        if z0 == 0 goto label04;

        $z14 = r0.<org.sat4j.minisat.core.Solver: boolean keepHot>;

        if $z14 != 0 goto label05;

     label04:
        $r11 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.IOrder order>;

        interfaceinvoke $r11.<org.sat4j.minisat.core.IOrder: void init()>();

     label05:
        $r70 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy learnedConstraintsDeletionStrategy>;

        interfaceinvoke $r70.<org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy: void init()>();

        $r71 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i15 = interfaceinvoke $r71.<org.sat4j.specs.IVecInt: int size()>();

        r0.<org.sat4j.minisat.core.Solver: int qhead> = 0;

        i16 = $i15 - 1;

     label06:
        if i16 < 0 goto label10;

        $r62 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i13 = interfaceinvoke $r62.<org.sat4j.specs.IVecInt: int get(int)>(i16);

        $r63 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $r64 = interfaceinvoke $r63.<org.sat4j.minisat.core.ILits: org.sat4j.specs.IVec undos(int)>($i13);

        $z13 = <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled>;

        if $z13 != 0 goto label07;

        if $r64 != null goto label07;

        $r77 = new java.lang.AssertionError;

        specialinvoke $r77.<java.lang.AssertionError: void <init>()>();

        throw $r77;

     label07:
        i17 = interfaceinvoke $r64.<org.sat4j.specs.IVec: int size()>();

     label08:
        if i17 <= 0 goto label09;

        $r65 = interfaceinvoke $r64.<org.sat4j.specs.IVec: java.lang.Object last()>();

        $r66 = (org.sat4j.minisat.core.Undoable) $r65;

        interfaceinvoke $r66.<org.sat4j.minisat.core.Undoable: void undo(int)>($i13);

        interfaceinvoke $r64.<org.sat4j.specs.IVec: void pop()>();

        $i19 = (int) -1;

        i17 = i17 + $i19;

        goto label08;

     label09:
        $i21 = (int) -1;

        i16 = i16 + $i21;

        goto label06;

     label10:
        $r12 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt learnedLiterals>;

        $r13 = interfaceinvoke $r12.<org.sat4j.specs.IVecInt: org.sat4j.specs.IteratorInt iterator()>();

     label11:
        $z1 = interfaceinvoke $r13.<org.sat4j.specs.IteratorInt: boolean hasNext()>();

        if $z1 == 0 goto label12;

        $i12 = interfaceinvoke $r13.<org.sat4j.specs.IteratorInt: int next()>();

        virtualinvoke r0.<org.sat4j.minisat.core.Solver: boolean enqueue(int)>($i12);

        goto label11;

     label12:
        $r14 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.Constr propagate()>();

        r72 = $r14;

        if $r14 == null goto label13;

        virtualinvoke r0.<org.sat4j.minisat.core.Solver: void analyzeAtRootLevel(org.sat4j.minisat.core.Constr)>($r14);

        $r59 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.SearchListener slistener>;

        interfaceinvoke $r59.<org.sat4j.specs.SearchListener: void conflictFound(org.sat4j.specs.IConstr,int,int)>($r14, 0, 0);

        $r61 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.SearchListener slistener>;

        $r60 = <org.sat4j.specs.Lbool: org.sat4j.specs.Lbool FALSE>;

        interfaceinvoke $r61.<org.sat4j.specs.SearchListener: void end(org.sat4j.specs.Lbool)>($r60);

        virtualinvoke r0.<org.sat4j.minisat.core.Solver: void cancelUntil(int)>(0);

        specialinvoke r0.<org.sat4j.minisat.core.Solver: void cancelLearntLiterals(int)>($i15);

        return 0;

     label13:
        $r16 = interfaceinvoke r15.<org.sat4j.specs.IVecInt: org.sat4j.specs.IteratorInt iterator()>();

     label14:
        $z2 = interfaceinvoke $r16.<org.sat4j.specs.IteratorInt: boolean hasNext()>();

        if $z2 == 0 goto label20;

        $i8 = interfaceinvoke $r16.<org.sat4j.specs.IteratorInt: int next()>();

        $r48 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $i9 = interfaceinvoke $r48.<org.sat4j.minisat.core.ILits: int getFromPool(int)>($i8);

        $r49 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $z11 = interfaceinvoke $r49.<org.sat4j.minisat.core.ILits: boolean isSatisfied(int)>($i9);

        if $z11 != 0 goto label15;

        $z12 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: boolean assume(int)>($i9);

        if $z12 == 0 goto label16;

     label15:
        $r50 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.Constr propagate()>();

        r72 = $r50;

        if $r50 == null goto label19;

     label16:
        if r72 != null goto label17;

        $r56 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.SearchListener slistener>;

        interfaceinvoke $r56.<org.sat4j.specs.SearchListener: void conflictFound(int)>($i9);

        $r57 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt analyzeFinalConflictInTermsOfAssumptions(org.sat4j.minisat.core.Constr,org.sat4j.specs.IVecInt,int)>(null, r15, $i9);

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt unsatExplanationInTermsOfAssumptions> = $r57;

        $r58 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt unsatExplanationInTermsOfAssumptions>;

        interfaceinvoke $r58.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i8);

        goto label18;

     label17:
        $r51 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.SearchListener slistener>;

        $i10 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: int decisionLevel()>();

        $r52 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i11 = interfaceinvoke $r52.<org.sat4j.specs.IVecInt: int size()>();

        interfaceinvoke $r51.<org.sat4j.specs.SearchListener: void conflictFound(org.sat4j.specs.IConstr,int,int)>(r72, $i10, $i11);

        $i23 = (int) -1;

        $r53 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt analyzeFinalConflictInTermsOfAssumptions(org.sat4j.minisat.core.Constr,org.sat4j.specs.IVecInt,int)>(r72, r15, $i23);

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt unsatExplanationInTermsOfAssumptions> = $r53;

     label18:
        $r55 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.SearchListener slistener>;

        $r54 = <org.sat4j.specs.Lbool: org.sat4j.specs.Lbool FALSE>;

        interfaceinvoke $r55.<org.sat4j.specs.SearchListener: void end(org.sat4j.specs.Lbool)>($r54);

        virtualinvoke r0.<org.sat4j.minisat.core.Solver: void cancelUntil(int)>(0);

        specialinvoke r0.<org.sat4j.minisat.core.Solver: void cancelLearntLiterals(int)>($i15);

        return 0;

     label19:
        goto label14;

     label20:
        $i2 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: int decisionLevel()>();

        r0.<org.sat4j.minisat.core.Solver: int rootLevel> = $i2;

        if z0 == 0 goto label21;

        $z10 = r0.<org.sat4j.minisat.core.Solver: boolean keepHot>;

        if $z10 != 0 goto label22;

     label21:
        $r17 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.IOrder order>;

        interfaceinvoke $r17.<org.sat4j.minisat.core.IOrder: void init()>();

     label22:
        $r73 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearningStrategy learner>;

        interfaceinvoke $r73.<org.sat4j.minisat.core.LearningStrategy: void init()>();

        if z0 != 0 goto label23;

        $r78 = new org.sat4j.minisat.core.ConflictTimerContainer;

        specialinvoke $r78.<org.sat4j.minisat.core.ConflictTimerContainer: void <init>()>();

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ConflictTimerContainer conflictCount> = $r78;

        $r44 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ConflictTimerContainer conflictCount>;

        $r43 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.RestartStrategy restarter>;

        virtualinvoke $r44.<org.sat4j.minisat.core.ConflictTimerContainer: org.sat4j.minisat.core.ConflictTimerContainer add(org.sat4j.minisat.core.ConflictTimer)>($r43);

        $r46 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ConflictTimerContainer conflictCount>;

        $r45 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy learnedConstraintsDeletionStrategy>;

        $r47 = interfaceinvoke $r45.<org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy: org.sat4j.minisat.core.ConflictTimer getTimer()>();

        virtualinvoke $r46.<org.sat4j.minisat.core.ConflictTimerContainer: org.sat4j.minisat.core.ConflictTimerContainer add(org.sat4j.minisat.core.ConflictTimer)>($r47);

     label23:
        z16 = 0;

        $z3 = r0.<org.sat4j.minisat.core.Solver: boolean timeBasedTimeout>;

        if $z3 == 0 goto label25;

        if z4 == 0 goto label24;

        $r41 = r0.<org.sat4j.minisat.core.Solver: java.util.Timer timer>;

        if $r41 != null goto label27;

     label24:
        z16 = 1;

        r0.<org.sat4j.minisat.core.Solver: boolean undertimeout> = 1;

        $r79 = new org.sat4j.minisat.core.Solver$9;

        specialinvoke $r79.<org.sat4j.minisat.core.Solver$9: void <init>(org.sat4j.minisat.core.Solver)>(r0);

        $r80 = new java.util.Timer;

        specialinvoke $r80.<java.util.Timer: void <init>(boolean)>(1);

        r0.<org.sat4j.minisat.core.Solver: java.util.Timer timer> = $r80;

        $r40 = r0.<org.sat4j.minisat.core.Solver: java.util.Timer timer>;

        $l7 = r0.<org.sat4j.minisat.core.Solver: long timeout>;

        virtualinvoke $r40.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r79, $l7);

        goto label27;

     label25:
        if z4 == 0 goto label26;

        if z0 != 0 goto label27;

     label26:
        z16 = 1;

        r0.<org.sat4j.minisat.core.Solver: boolean undertimeout> = 1;

        $r81 = new org.sat4j.minisat.core.Solver$10;

        $l3 = r0.<org.sat4j.minisat.core.Solver: long timeout>;

        $i4 = (int) $l3;

        specialinvoke $r81.<org.sat4j.minisat.core.Solver$10: void <init>(org.sat4j.minisat.core.Solver,int)>(r0, $i4);

        $r19 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ConflictTimerContainer conflictCount>;

        virtualinvoke $r19.<org.sat4j.minisat.core.ConflictTimerContainer: org.sat4j.minisat.core.ConflictTimerContainer add(org.sat4j.minisat.core.ConflictTimer)>($r81);

     label27:
        if z4 == 0 goto label28;

        if z16 == 0 goto label29;

     label28:
        $r21 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.RestartStrategy restarter>;

        $r20 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SearchParams params>;

        interfaceinvoke $r21.<org.sat4j.minisat.core.RestartStrategy: void init(org.sat4j.minisat.core.SearchParams)>($r20);

        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $d0 = (double) $l5;

        r0.<org.sat4j.minisat.core.Solver: double timebegin> = $d0;

     label29:
        r0.<org.sat4j.minisat.core.Solver: boolean needToReduceDB> = 0;

        r0.<org.sat4j.minisat.core.Solver: boolean lastConflictMeansUnsat> = 1;

     label30:
        $r74 = <org.sat4j.specs.Lbool: org.sat4j.specs.Lbool UNDEFINED>;

        if r69 != $r74 goto label31;

        $z8 = r0.<org.sat4j.minisat.core.Solver: boolean undertimeout>;

        if $z8 == 0 goto label31;

        $z9 = r0.<org.sat4j.minisat.core.Solver: boolean lastConflictMeansUnsat>;

        if $z9 == 0 goto label31;

        $r34 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.Lbool search(org.sat4j.specs.IVecInt)>(r15);

        r69 = $r34;

        $r35 = <org.sat4j.specs.Lbool: org.sat4j.specs.Lbool UNDEFINED>;

        if $r34 != $r35 goto label30;

        $r36 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.RestartStrategy restarter>;

        interfaceinvoke $r36.<org.sat4j.minisat.core.RestartStrategy: void onRestart()>();

        $r37 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.SearchListener slistener>;

        interfaceinvoke $r37.<org.sat4j.specs.SearchListener: void restarting()>();

        goto label30;

     label31:
        virtualinvoke r0.<org.sat4j.minisat.core.Solver: void cancelUntil(int)>(0);

        specialinvoke r0.<org.sat4j.minisat.core.Solver: void cancelLearntLiterals(int)>($i15);

        if z4 != 0 goto label32;

        $z7 = r0.<org.sat4j.minisat.core.Solver: boolean timeBasedTimeout>;

        if $z7 == 0 goto label32;

        $r32 = r0.<org.sat4j.minisat.core.Solver: java.util.Timer timer>;

        if $r32 == null goto label32;

        $r33 = r0.<org.sat4j.minisat.core.Solver: java.util.Timer timer>;

        virtualinvoke $r33.<java.util.Timer: void cancel()>();

        r0.<org.sat4j.minisat.core.Solver: java.util.Timer timer> = null;

     label32:
        $r75 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.SearchListener slistener>;

        interfaceinvoke $r75.<org.sat4j.specs.SearchListener: void end(org.sat4j.specs.Lbool)>(r69);

        $z17 = r0.<org.sat4j.minisat.core.Solver: boolean undertimeout>;

        if $z17 != 0 goto label35;

        $r82 = new java.lang.StringBuilder;

        specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Timeout (");

        $l6 = r0.<org.sat4j.minisat.core.Solver: long timeout>;

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $z6 = r0.<org.sat4j.minisat.core.Solver: boolean timeBasedTimeout>;

        if $z6 == 0 goto label33;

        $r76 = "s";

        goto label34;

     label33:
        $r76 = " conflicts";

     label34:
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") exceeded");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $r83 = new org.sat4j.specs.TimeoutException;

        specialinvoke $r83.<org.sat4j.specs.TimeoutException: void <init>(java.lang.String)>($r30);

        throw $r83;

     label35:
        $r22 = <org.sat4j.specs.Lbool: org.sat4j.specs.Lbool UNDEFINED>;

        if r69 != $r22 goto label36;

        $z5 = r0.<org.sat4j.minisat.core.Solver: boolean lastConflictMeansUnsat>;

        if $z5 != 0 goto label36;

        $r84 = new org.sat4j.specs.TimeoutException;

        specialinvoke $r84.<org.sat4j.specs.TimeoutException: void <init>(java.lang.String)>("Cannot decide the satisfiability");

        throw $r84;

     label36:
        $r23 = <org.sat4j.specs.Lbool: org.sat4j.specs.Lbool TRUE>;

        if r69 != $r23 goto label37;

        $z18 = 1;

        goto label38;

     label37:
        $z18 = 0;

     label38:
        return $z18;
    }

    public void printInfos(java.io.PrintWriter, java.lang.String)
    {
        long $l1, l2;
        org.sat4j.minisat.core.Counter $r18;
        java.util.Map $r3;
        int $i0;
        java.lang.String r1, $r11, $r16;
        boolean $z0;
        java.io.PrintWriter r0;
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.lang.Object $r6, $r10, $r14, $r17;
        java.lang.StringBuilder $r8, $r9, $r12, $r13, $r15;
        org.sat4j.minisat.core.Solver r2;

        r2 := @this: org.sat4j.minisat.core.Solver;

        r0 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("constraints type ");

        l2 = 0L;

        $r3 = r2.<org.sat4j.minisat.core.Solver: java.util.Map constrTypes>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = (java.lang.String) $r10;

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => ");

        $r14 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        $r17 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18 = (org.sat4j.minisat.core.Counter) $r17;

        $i0 = virtualinvoke $r18.<org.sat4j.minisat.core.Counter: int getValue()>();

        $l1 = (long) $i0;

        l2 = l2 + $l1;

        goto label1;

     label2:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>(l2);

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(" constraints processed.");

        return;
    }

    public void printLearntClausesInfos(java.io.PrintWriter, java.lang.String)
    {
        java.util.HashMap $r0;
        org.sat4j.minisat.core.Constr $r19;
        org.sat4j.minisat.core.Counter r23, $r24;
        org.sat4j.specs.IVec $r2;
        java.lang.String r5, $r12, $r17, $r21;
        boolean $z0, $z1;
        java.io.PrintWriter r4;
        java.util.Map$Entry r25;
        java.util.Iterator $r3, $r7;
        java.util.Set $r6;
        java.lang.Object $r8, $r11, $r15, $r18, $r22;
        java.lang.StringBuilder $r9, $r10, $r13, $r14, $r16;
        java.lang.Class $r20;
        org.sat4j.minisat.core.Solver r1;

        r1 := @this: org.sat4j.minisat.core.Solver;

        r4 := @parameter0: java.io.PrintWriter;

        r5 := @parameter1: java.lang.String;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVec learnts>;

        $r3 = interfaceinvoke $r2.<org.sat4j.specs.IVec: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r18 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r19 = (org.sat4j.minisat.core.Constr) $r18;

        $r20 = virtualinvoke $r19.<java.lang.Object: java.lang.Class getClass()>();

        $r21 = virtualinvoke $r20.<java.lang.Class: java.lang.String getName()>();

        $r22 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r21);

        r23 = (org.sat4j.minisat.core.Counter) $r22;

        if r23 != null goto label2;

        $r24 = new org.sat4j.minisat.core.Counter;

        specialinvoke $r24.<org.sat4j.minisat.core.Counter: void <init>()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r24);

        goto label3;

     label2:
        virtualinvoke r23.<org.sat4j.minisat.core.Counter: void inc()>();

     label3:
        goto label1;

     label4:
        virtualinvoke r4.<java.io.PrintWriter: void print(java.lang.String)>(r5);

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>("learnt constraints type ");

        $r6 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r25 = (java.util.Map$Entry) $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r11 = interfaceinvoke r25.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (java.lang.String) $r11;

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => ");

        $r15 = interfaceinvoke r25.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        goto label5;

     label6:
        return;
    }

    public org.sat4j.minisat.core.SolverStats getStats()
    {
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.SolverStats $r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SolverStats stats>;

        return $r1;
    }

    protected void initStats(org.sat4j.minisat.core.SolverStats)
    {
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.SolverStats r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r1 := @parameter0: org.sat4j.minisat.core.SolverStats;

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SolverStats stats> = r1;

        return;
    }

    public org.sat4j.minisat.core.IOrder getOrder()
    {
        org.sat4j.minisat.core.IOrder $r1;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.IOrder order>;

        return $r1;
    }

    public void setOrder(org.sat4j.minisat.core.IOrder)
    {
        org.sat4j.minisat.core.IOrder r1, $r3;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.ILits $r2;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r1 := @parameter0: org.sat4j.minisat.core.IOrder;

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.IOrder order> = r1;

        $r3 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.IOrder order>;

        $r2 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        interfaceinvoke $r3.<org.sat4j.minisat.core.IOrder: void setLits(org.sat4j.minisat.core.ILits)>($r2);

        return;
    }

    public org.sat4j.minisat.core.ILits getVocabulary()
    {
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.ILits $r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        return $r1;
    }

    public void reset()
    {
        java.util.Iterator $r5;
        org.sat4j.specs.IVecInt $r2, $r3;
        org.sat4j.minisat.core.DataStructureFactory $r8;
        java.util.Timer $r1, $r13;
        org.sat4j.minisat.core.Constr $r12;
        org.sat4j.minisat.core.SolverStats $r9;
        java.util.Map $r10;
        java.lang.Object $r11;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.specs.IVec $r4, $r6;
        org.sat4j.minisat.core.ILits $r7;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = r0.<org.sat4j.minisat.core.Solver: java.util.Timer timer>;

        if $r1 == null goto label1;

        $r13 = r0.<org.sat4j.minisat.core.Solver: java.util.Timer timer>;

        virtualinvoke $r13.<java.util.Timer: void cancel()>();

        r0.<org.sat4j.minisat.core.Solver: java.util.Timer timer> = null;

     label1:
        $r2 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: void clear()>();

        $r3 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trailLim>;

        interfaceinvoke $r3.<org.sat4j.specs.IVecInt: void clear()>();

        r0.<org.sat4j.minisat.core.Solver: int qhead> = 0;

        $r4 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVec constrs>;

        $r5 = interfaceinvoke $r4.<org.sat4j.specs.IVec: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r11 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (org.sat4j.minisat.core.Constr) $r11;

        interfaceinvoke $r12.<org.sat4j.minisat.core.Constr: void remove(org.sat4j.minisat.core.UnitPropagationListener)>(r0);

        goto label2;

     label3:
        $r6 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVec constrs>;

        interfaceinvoke $r6.<org.sat4j.specs.IVec: void clear()>();

        virtualinvoke r0.<org.sat4j.minisat.core.Solver: void clearLearntClauses()>();

        $r7 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        interfaceinvoke $r7.<org.sat4j.minisat.core.ILits: void resetPool()>();

        $r8 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.DataStructureFactory dsfactory>;

        interfaceinvoke $r8.<org.sat4j.minisat.core.DataStructureFactory: void reset()>();

        $r9 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SolverStats stats>;

        virtualinvoke $r9.<org.sat4j.minisat.core.SolverStats: void reset()>();

        $r10 = r0.<org.sat4j.minisat.core.Solver: java.util.Map constrTypes>;

        interfaceinvoke $r10.<java.util.Map: void clear()>();

        return;
    }

    public int nVars()
    {
        int $i0, $i1, $i2;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.ILits $r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $i0 = r0.<org.sat4j.minisat.core.Solver: int declaredMaxVarId>;

        if $i0 != 0 goto label1;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $i2 = interfaceinvoke $r1.<org.sat4j.minisat.core.ILits: int nVars()>();

        return $i2;

     label1:
        $i1 = r0.<org.sat4j.minisat.core.Solver: int declaredMaxVarId>;

        return $i1;
    }

    protected org.sat4j.specs.IConstr addConstr(org.sat4j.minisat.core.Constr)
    {
        org.sat4j.minisat.core.Constr r0;
        org.sat4j.minisat.core.Counter r7, $r8, $r12, r14;
        java.util.Map $r5, $r9, $r10, $r13;
        java.lang.Class $r3;
        java.lang.Object $r6, $r11;
        org.sat4j.minisat.core.Solver r1;
        org.sat4j.specs.IVec $r2;
        java.lang.String $r4;

        r1 := @this: org.sat4j.minisat.core.Solver;

        r0 := @parameter0: org.sat4j.minisat.core.Constr;

        if r0 != null goto label3;

        $r10 = r1.<org.sat4j.minisat.core.Solver: java.util.Map constrTypes>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>("ignored satisfied constraints");

        r14 = (org.sat4j.minisat.core.Counter) $r11;

        if r14 != null goto label1;

        $r13 = r1.<org.sat4j.minisat.core.Solver: java.util.Map constrTypes>;

        $r12 = new org.sat4j.minisat.core.Counter;

        specialinvoke $r12.<org.sat4j.minisat.core.Counter: void <init>()>();

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ignored satisfied constraints", $r12);

        goto label2;

     label1:
        virtualinvoke r14.<org.sat4j.minisat.core.Counter: void inc()>();

     label2:
        goto label5;

     label3:
        $r2 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVec constrs>;

        interfaceinvoke $r2.<org.sat4j.specs.IVec: org.sat4j.specs.IVec push(java.lang.Object)>(r0);

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = r1.<org.sat4j.minisat.core.Solver: java.util.Map constrTypes>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r7 = (org.sat4j.minisat.core.Counter) $r6;

        if r7 != null goto label4;

        $r9 = r1.<org.sat4j.minisat.core.Solver: java.util.Map constrTypes>;

        $r8 = new org.sat4j.minisat.core.Counter;

        specialinvoke $r8.<org.sat4j.minisat.core.Counter: void <init>()>();

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r8);

        goto label5;

     label4:
        virtualinvoke r7.<org.sat4j.minisat.core.Counter: void inc()>();

     label5:
        return r0;
    }

    public org.sat4j.minisat.core.DataStructureFactory getDSFactory()
    {
        org.sat4j.minisat.core.DataStructureFactory $r1;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.DataStructureFactory dsfactory>;

        return $r1;
    }

    public org.sat4j.specs.IVecInt getOutLearnt()
    {
        org.sat4j.specs.IVecInt $r1;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt moutLearnt>;

        return $r1;
    }

    public org.sat4j.specs.IConstr getIthConstr(int)
    {
        org.sat4j.specs.IConstr $r3;
        int i0;
        java.lang.Object $r2;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.specs.IVec $r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVec constrs>;

        $r2 = interfaceinvoke $r1.<org.sat4j.specs.IVec: java.lang.Object get(int)>(i0);

        $r3 = (org.sat4j.specs.IConstr) $r2;

        return $r3;
    }

    public void printStat(java.io.PrintStream, java.lang.String)
    {
        java.io.PrintWriter $r1;
        java.io.PrintStream r2;
        org.sat4j.minisat.core.Solver r0;
        java.lang.String r3;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r2 := @parameter0: java.io.PrintStream;

        r3 := @parameter1: java.lang.String;

        $r1 = new java.io.PrintWriter;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.OutputStream,boolean)>(r2, 1);

        virtualinvoke r0.<org.sat4j.minisat.core.Solver: void printStat(java.io.PrintWriter,java.lang.String)>($r1, r3);

        return;
    }

    public void printStat(java.io.PrintWriter, java.lang.String)
    {
        long $l0, $l1;
        org.sat4j.minisat.core.SolverStats $r3, $r7;
        java.lang.String r2, $r9;
        double $d0, $d1, $d2, d3, $d4, $d5;
        java.io.PrintWriter r1;
        org.sat4j.minisat.core.IOrder $r10;
        java.lang.StringBuilder $r4, $r5, $r6, $r8;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SolverStats stats>;

        virtualinvoke $r3.<org.sat4j.minisat.core.SolverStats: void printStat(java.io.PrintWriter,java.lang.String)>(r1, r2);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $d1 = (double) $l0;

        $d0 = r0.<org.sat4j.minisat.core.Solver: double timebegin>;

        $d2 = $d1 - $d0;

        d3 = $d2 / 1000.0;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("speed (assignments/second)\t: ");

        $r7 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SolverStats stats>;

        $l1 = $r7.<org.sat4j.minisat.core.SolverStats: long propagations>;

        $d4 = (double) $l1;

        $d5 = $d4 / d3;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        $r10 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.IOrder order>;

        interfaceinvoke $r10.<org.sat4j.minisat.core.IOrder: void printStat(java.io.PrintWriter,java.lang.String)>(r1, r2);

        virtualinvoke r0.<org.sat4j.minisat.core.Solver: void printLearntClausesInfos(java.io.PrintWriter,java.lang.String)>(r1, r2);

        return;
    }

    public java.lang.String toString(java.lang.String)
    {
        org.sat4j.minisat.core.LearningStrategy $r4;
        java.lang.Object[] $r1;
        org.sat4j.minisat.core.ISimplifier $r7;
        org.sat4j.minisat.core.DataStructureFactory $r3;
        long $l1, $l2, $l3;
        java.lang.StringBuffer $r0;
        int i0, i4;
        java.lang.String r10, $r11, $r13;
        boolean $z0, $z1, $z2;
        org.sat4j.minisat.core.RestartStrategy $r8;
        org.sat4j.minisat.core.SearchParams $r5;
        org.sat4j.minisat.core.IOrder $r6;
        org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy $r9;
        java.lang.Object r12;
        org.sat4j.minisat.core.Solver r2;

        r2 := @this: org.sat4j.minisat.core.Solver;

        r10 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = newarray (java.lang.Object)[7];

        $r3 = r2.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.DataStructureFactory dsfactory>;

        $r1[0] = $r3;

        $r4 = r2.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearningStrategy learner>;

        $r1[1] = $r4;

        $r5 = r2.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SearchParams params>;

        $r1[2] = $r5;

        $r6 = r2.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.IOrder order>;

        $r1[3] = $r6;

        $r7 = r2.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ISimplifier simplifier>;

        $r1[4] = $r7;

        $r8 = r2.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.RestartStrategy restarter>;

        $r1[5] = $r8;

        $r9 = r2.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy learnedConstraintsDeletionStrategy>;

        $r1[6] = $r9;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("--- Begin Solver configuration ---");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        i0 = lengthof $r1;

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        r12 = $r1[i4];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

        $r13 = virtualinvoke r12.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        i4 = i4 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("timeout=");

        $z0 = r2.<org.sat4j.minisat.core.Solver: boolean timeBasedTimeout>;

        if $z0 == 0 goto label3;

        $l2 = r2.<org.sat4j.minisat.core.Solver: long timeout>;

        $l3 = $l2 / 1000L;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("s\n");

        goto label4;

     label3:
        $l1 = r2.<org.sat4j.minisat.core.Solver: long timeout>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" conflicts\n");

     label4:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("DB Simplification allowed=");

        $z1 = r2.<org.sat4j.minisat.core.Solver: boolean isDBSimplificationAllowed>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

        $z2 = virtualinvoke r2.<org.sat4j.minisat.core.Solver: boolean isSolverKeptHot()>();

        if $z2 == 0 goto label5;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Heuristics kept accross calls (keep the solver \"hot\")\n");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r10);

     label5:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("--- End Solver configuration ---");

        $r11 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r11;
    }

    public java.lang.String toString()
    {
        org.sat4j.minisat.core.Solver r0;
        java.lang.String $r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: java.lang.String toString(java.lang.String)>("");

        return $r1;
    }

    public int getTimeout()
    {
        int $i0, $i2;
        long $l1, $l3, $l4;
        org.sat4j.minisat.core.Solver r0;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $z0 = r0.<org.sat4j.minisat.core.Solver: boolean timeBasedTimeout>;

        if $z0 == 0 goto label1;

        $l1 = r0.<org.sat4j.minisat.core.Solver: long timeout>;

        $l3 = $l1 / 1000L;

        $i2 = (int) $l3;

        return $i2;

     label1:
        $l4 = r0.<org.sat4j.minisat.core.Solver: long timeout>;

        $i0 = (int) $l4;

        return $i0;
    }

    public long getTimeoutMs()
    {
        java.lang.UnsupportedOperationException $r1;
        long $l0;
        org.sat4j.minisat.core.Solver r0;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $z0 = r0.<org.sat4j.minisat.core.Solver: boolean timeBasedTimeout>;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("The timeout is given in number of conflicts!");

        throw $r1;

     label1:
        $l0 = r0.<org.sat4j.minisat.core.Solver: long timeout>;

        return $l0;
    }

    public void setExpectedNumberOfClauses(int)
    {
        int i0;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.specs.IVec $r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVec constrs>;

        interfaceinvoke $r1.<org.sat4j.specs.IVec: void ensure(int)>(i0);

        return;
    }

    public java.util.Map getStat()
    {
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.SolverStats $r1;
        java.util.Map $r2;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SolverStats stats>;

        $r2 = virtualinvoke $r1.<org.sat4j.minisat.core.SolverStats: java.util.Map toMap()>();

        return $r2;
    }

    public int[] findModel() throws org.sat4j.specs.TimeoutException
    {
        org.sat4j.minisat.core.Solver r0;
        int[] $r1;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $z0 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: boolean isSatisfiable()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: int[] model()>();

        return $r1;

     label1:
        return null;
    }

    public int[] findModel(org.sat4j.specs.IVecInt) throws org.sat4j.specs.TimeoutException
    {
        int[] $r2;
        org.sat4j.specs.IVecInt r1;
        org.sat4j.minisat.core.Solver r0;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r1 := @parameter0: org.sat4j.specs.IVecInt;

        $z0 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: boolean isSatisfiable(org.sat4j.specs.IVecInt)>(r1);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: int[] model()>();

        return $r2;

     label1:
        return null;
    }

    public boolean isDBSimplificationAllowed()
    {
        org.sat4j.minisat.core.Solver r0;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $z0 = r0.<org.sat4j.minisat.core.Solver: boolean isDBSimplificationAllowed>;

        return $z0;
    }

    public void setDBSimplificationAllowed(boolean)
    {
        org.sat4j.minisat.core.Solver r0;
        boolean z0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        z0 := @parameter0: boolean;

        r0.<org.sat4j.minisat.core.Solver: boolean isDBSimplificationAllowed> = z0;

        return;
    }

    public int nextFreeVarId(boolean)
    {
        int $i0;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.ILits $r1;
        boolean z0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $i0 = interfaceinvoke $r1.<org.sat4j.minisat.core.ILits: int nextFreeVarId(boolean)>(z0);

        return $i0;
    }

    public org.sat4j.specs.IConstr addBlockingClause(org.sat4j.specs.IVecInt) throws org.sat4j.specs.ContradictionException
    {
        org.sat4j.specs.IVecInt r1;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.specs.IConstr $r2;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r1 := @parameter0: org.sat4j.specs.IVecInt;

        $r2 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IConstr addClause(org.sat4j.specs.IVecInt)>(r1);

        return $r2;
    }

    public void unset(int)
    {
        org.sat4j.specs.IVecInt $r2, $r3, $r4, $r5, $r6;
        int i0, $i1, i2;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.ILits $r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.sat4j.minisat.core.Solver;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $z0 = interfaceinvoke $r1.<org.sat4j.minisat.core.ILits: boolean isUnassigned(int)>(i0);

        if $z0 != 0 goto label1;

        $r2 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $z1 = interfaceinvoke $r2.<org.sat4j.specs.IVecInt: boolean isEmpty()>();

        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        i2 = interfaceinvoke $r3.<org.sat4j.specs.IVecInt: int last()>();

     label3:
        if i2 == i0 goto label5;

        virtualinvoke r0.<org.sat4j.minisat.core.Solver: void undoOne()>();

        $r5 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $z2 = interfaceinvoke $r5.<org.sat4j.specs.IVecInt: boolean isEmpty()>();

        if $z2 == 0 goto label4;

        return;

     label4:
        $r6 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        i2 = interfaceinvoke $r6.<org.sat4j.specs.IVecInt: int last()>();

        goto label3;

     label5:
        virtualinvoke r0.<org.sat4j.minisat.core.Solver: void undoOne()>();

        $r4 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt trail>;

        $i1 = interfaceinvoke $r4.<org.sat4j.specs.IVecInt: int size()>();

        r0.<org.sat4j.minisat.core.Solver: int qhead> = $i1;

        return;
    }

    public void setLogPrefix(java.lang.String)
    {
        org.sat4j.minisat.core.Solver r0;
        java.lang.String r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r1 := @parameter0: java.lang.String;

        r0.<org.sat4j.minisat.core.Solver: java.lang.String prefix> = r1;

        return;
    }

    public java.lang.String getLogPrefix()
    {
        org.sat4j.minisat.core.Solver r0;
        java.lang.String $r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = r0.<org.sat4j.minisat.core.Solver: java.lang.String prefix>;

        return $r1;
    }

    public org.sat4j.specs.IVecInt unsatExplanation()
    {
        org.sat4j.specs.IVecInt $r2, $r3;
        int $i0;
        org.sat4j.core.VecInt $r0;
        org.sat4j.minisat.core.Solver r1;

        r1 := @this: org.sat4j.minisat.core.Solver;

        $r0 = new org.sat4j.core.VecInt;

        $r2 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt unsatExplanationInTermsOfAssumptions>;

        $i0 = interfaceinvoke $r2.<org.sat4j.specs.IVecInt: int size()>();

        specialinvoke $r0.<org.sat4j.core.VecInt: void <init>(int)>($i0);

        $r3 = r1.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVecInt unsatExplanationInTermsOfAssumptions>;

        interfaceinvoke $r3.<org.sat4j.specs.IVecInt: void copyTo(org.sat4j.specs.IVecInt)>($r0);

        return $r0;
    }

    public int[] modelWithInternalVariables()
    {
        java.lang.UnsupportedOperationException $r6;
        int[] $r1, $r2, $r3, $r4, $r5, r7;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = r0.<org.sat4j.minisat.core.Solver: int[] model>;

        if $r1 != null goto label1;

        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Call the solve method first!!!");

        throw $r6;

     label1:
        $i0 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: int nVars()>();

        $i1 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: int realNumberOfVariables()>();

        if $i0 != $i1 goto label2;

        $r4 = r0.<org.sat4j.minisat.core.Solver: int[] model>;

        $i4 = lengthof $r4;

        r7 = newarray (int)[$i4];

        $r5 = r0.<org.sat4j.minisat.core.Solver: int[] model>;

        $i5 = lengthof r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r7, 0, $i5);

        goto label3;

     label2:
        $r2 = r0.<org.sat4j.minisat.core.Solver: int[] fullmodel>;

        $i2 = lengthof $r2;

        r7 = newarray (int)[$i2];

        $r3 = r0.<org.sat4j.minisat.core.Solver: int[] fullmodel>;

        $i3 = lengthof r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r7, 0, $i3);

     label3:
        return r7;
    }

    public int realNumberOfVariables()
    {
        int $i0;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.ILits $r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $i0 = interfaceinvoke $r1.<org.sat4j.minisat.core.ILits: int nVars()>();

        return $i0;
    }

    public void stop()
    {
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        virtualinvoke r0.<org.sat4j.minisat.core.Solver: void expireTimeout()>();

        return;
    }

    public void backtrack(int[])
    {
        org.sat4j.minisat.core.DataStructureFactory $r3;
        org.sat4j.minisat.core.Constr $r4, $r5;
        int[] r1;
        int $i0, i1, i2, $i3, i4;
        org.sat4j.core.VecInt $r0;
        org.sat4j.minisat.core.Solver r2;

        r2 := @this: org.sat4j.minisat.core.Solver;

        r1 := @parameter0: int[];

        $r0 = new org.sat4j.core.VecInt;

        $i0 = lengthof r1;

        specialinvoke $r0.<org.sat4j.core.VecInt: void <init>(int)>($i0);

        i1 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i1 goto label2;

        i2 = r1[i4];

        $i3 = staticinvoke <org.sat4j.core.LiteralsUtils: int toInternal(int)>(i2);

        interfaceinvoke $r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i3);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r3 = r2.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.DataStructureFactory dsfactory>;

        $r4 = interfaceinvoke $r3.<org.sat4j.minisat.core.DataStructureFactory: org.sat4j.minisat.core.Constr createUnregisteredClause(org.sat4j.specs.IVecInt)>($r0);

        r2.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.Constr sharedConflict> = $r4;

        $r5 = r2.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.Constr sharedConflict>;

        virtualinvoke r2.<org.sat4j.minisat.core.Solver: void learn(org.sat4j.minisat.core.Constr)>($r5);

        return;
    }

    public org.sat4j.specs.Lbool truthValue(int)
    {
        int i0, $i1;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.ILits $r1, $r2;
        boolean $z0, $z1;
        org.sat4j.specs.Lbool $r3, $r4, $r5;

        r0 := @this: org.sat4j.minisat.core.Solver;

        i0 := @parameter0: int;

        $i1 = staticinvoke <org.sat4j.core.LiteralsUtils: int toInternal(int)>(i0);

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $z0 = interfaceinvoke $r1.<org.sat4j.minisat.core.ILits: boolean isFalsified(int)>($i1);

        if $z0 == 0 goto label1;

        $r5 = <org.sat4j.specs.Lbool: org.sat4j.specs.Lbool FALSE>;

        return $r5;

     label1:
        $r2 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits voc>;

        $z1 = interfaceinvoke $r2.<org.sat4j.minisat.core.ILits: boolean isSatisfied(int)>($i1);

        if $z1 == 0 goto label2;

        $r4 = <org.sat4j.specs.Lbool: org.sat4j.specs.Lbool TRUE>;

        return $r4;

     label2:
        $r3 = <org.sat4j.specs.Lbool: org.sat4j.specs.Lbool UNDEFINED>;

        return $r3;
    }

    public int currentDecisionLevel()
    {
        int $i0;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $i0 = virtualinvoke r0.<org.sat4j.minisat.core.Solver: int decisionLevel()>();

        return $i0;
    }

    public int[] getLiteralsPropagatedAt(int)
    {
        int i0;
        java.lang.UnsupportedOperationException $r0;
        org.sat4j.minisat.core.Solver r1;

        r1 := @this: org.sat4j.minisat.core.Solver;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not implemented yet!");

        throw $r0;
    }

    public void suggestNextLiteralToBranchOn(int)
    {
        int i0;
        java.lang.UnsupportedOperationException $r0;
        org.sat4j.minisat.core.Solver r1;

        r1 := @this: org.sat4j.minisat.core.Solver;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not implemented yet!");

        throw $r0;
    }

    protected boolean isNeedToReduceDB()
    {
        org.sat4j.minisat.core.Solver r0;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $z0 = r0.<org.sat4j.minisat.core.Solver: boolean needToReduceDB>;

        return $z0;
    }

    public void setNeedToReduceDB(boolean)
    {
        org.sat4j.minisat.core.Solver r0;
        boolean z0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        z0 := @parameter0: boolean;

        r0.<org.sat4j.minisat.core.Solver: boolean needToReduceDB> = z0;

        return;
    }

    public void setLogger(org.sat4j.minisat.core.ICDCLLogger)
    {
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.ICDCLLogger r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r1 := @parameter0: org.sat4j.minisat.core.ICDCLLogger;

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ICDCLLogger out> = r1;

        return;
    }

    public org.sat4j.minisat.core.ICDCLLogger getLogger()
    {
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.ICDCLLogger $r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ICDCLLogger out>;

        return $r1;
    }

    public double[] getVariableHeuristics()
    {
        double[] $r2;
        org.sat4j.minisat.core.IOrder $r1;
        org.sat4j.minisat.core.Solver r0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.IOrder order>;

        $r2 = interfaceinvoke $r1.<org.sat4j.minisat.core.IOrder: double[] getVariableHeuristics()>();

        return $r2;
    }

    public org.sat4j.specs.IVec getLearnedConstraints()
    {
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.specs.IVec $r1;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.specs.IVec learnts>;

        return $r1;
    }

    public void setLearnedConstraintsDeletionStrategy(org.sat4j.minisat.core.ConflictTimer, org.sat4j.minisat.core.LearnedConstraintsEvaluationType)
    {
        org.sat4j.minisat.core.LearnedConstraintsEvaluationType r2;
        org.sat4j.minisat.core.ConflictTimer r5, $r12;
        int[] $r3;
        int $i0, $i1;
        org.sat4j.minisat.core.Solver$GlucoseLCDS $r7;
        org.sat4j.minisat.core.Solver$Glucose2LCDS $r4;
        org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy $r6, $r8, $r10;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.ConflictTimerContainer $r1, $r9, $r11, $r13;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r5 := @parameter0: org.sat4j.minisat.core.ConflictTimer;

        r2 := @parameter1: org.sat4j.minisat.core.LearnedConstraintsEvaluationType;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ConflictTimerContainer conflictCount>;

        if $r1 == null goto label1;

        $r9 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ConflictTimerContainer conflictCount>;

        virtualinvoke $r9.<org.sat4j.minisat.core.ConflictTimerContainer: org.sat4j.minisat.core.ConflictTimerContainer add(org.sat4j.minisat.core.ConflictTimer)>(r5);

        $r11 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ConflictTimerContainer conflictCount>;

        $r10 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy learnedConstraintsDeletionStrategy>;

        $r12 = interfaceinvoke $r10.<org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy: org.sat4j.minisat.core.ConflictTimer getTimer()>();

        virtualinvoke $r11.<org.sat4j.minisat.core.ConflictTimerContainer: org.sat4j.minisat.core.ConflictTimerContainer remove(org.sat4j.minisat.core.ConflictTimer)>($r12);

     label1:
        $r3 = <org.sat4j.minisat.core.Solver$11: int[] $SwitchMap$org$sat4j$minisat$core$LearnedConstraintsEvaluationType>;

        $i0 = virtualinvoke r2.<org.sat4j.minisat.core.LearnedConstraintsEvaluationType: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label2:
        $r8 = specialinvoke r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy activityBased(org.sat4j.minisat.core.ConflictTimer)>(r5);

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy learnedConstraintsDeletionStrategy> = $r8;

        goto label5;

     label3:
        $r7 = new org.sat4j.minisat.core.Solver$GlucoseLCDS;

        specialinvoke $r7.<org.sat4j.minisat.core.Solver$GlucoseLCDS: void <init>(org.sat4j.minisat.core.Solver,org.sat4j.minisat.core.ConflictTimer)>(r0, r5);

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy learnedConstraintsDeletionStrategy> = $r7;

        goto label5;

     label4:
        $r4 = new org.sat4j.minisat.core.Solver$Glucose2LCDS;

        specialinvoke $r4.<org.sat4j.minisat.core.Solver$Glucose2LCDS: void <init>(org.sat4j.minisat.core.Solver,org.sat4j.minisat.core.ConflictTimer)>(r0, r5);

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy learnedConstraintsDeletionStrategy> = $r4;

     label5:
        $r13 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ConflictTimerContainer conflictCount>;

        if $r13 == null goto label6;

        $r6 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy learnedConstraintsDeletionStrategy>;

        interfaceinvoke $r6.<org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy: void init()>();

     label6:
        return;
    }

    public void setLearnedConstraintsDeletionStrategy(org.sat4j.minisat.core.LearnedConstraintsEvaluationType)
    {
        org.sat4j.minisat.core.LearnedConstraintsEvaluationType r3;
        org.sat4j.minisat.core.ConflictTimer $r2;
        org.sat4j.minisat.core.Solver$Glucose2LCDS $r5;
        int[] $r4;
        int $i0, $i1;
        org.sat4j.minisat.core.Solver$GlucoseLCDS $r7;
        org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy $r1, $r6, $r8;
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.ConflictTimerContainer $r9;

        r0 := @this: org.sat4j.minisat.core.Solver;

        r3 := @parameter0: org.sat4j.minisat.core.LearnedConstraintsEvaluationType;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy learnedConstraintsDeletionStrategy>;

        $r2 = interfaceinvoke $r1.<org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy: org.sat4j.minisat.core.ConflictTimer getTimer()>();

        $r4 = <org.sat4j.minisat.core.Solver$11: int[] $SwitchMap$org$sat4j$minisat$core$LearnedConstraintsEvaluationType>;

        $i0 = virtualinvoke r3.<org.sat4j.minisat.core.LearnedConstraintsEvaluationType: int ordinal()>();

        $i1 = $r4[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r8 = specialinvoke r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy activityBased(org.sat4j.minisat.core.ConflictTimer)>($r2);

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy learnedConstraintsDeletionStrategy> = $r8;

        goto label4;

     label2:
        $r7 = new org.sat4j.minisat.core.Solver$GlucoseLCDS;

        specialinvoke $r7.<org.sat4j.minisat.core.Solver$GlucoseLCDS: void <init>(org.sat4j.minisat.core.Solver,org.sat4j.minisat.core.ConflictTimer)>(r0, $r2);

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy learnedConstraintsDeletionStrategy> = $r7;

        goto label4;

     label3:
        $r5 = new org.sat4j.minisat.core.Solver$Glucose2LCDS;

        specialinvoke $r5.<org.sat4j.minisat.core.Solver$Glucose2LCDS: void <init>(org.sat4j.minisat.core.Solver,org.sat4j.minisat.core.ConflictTimer)>(r0, $r2);

        r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy learnedConstraintsDeletionStrategy> = $r5;

     label4:
        $r9 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ConflictTimerContainer conflictCount>;

        if $r9 == null goto label5;

        $r6 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy learnedConstraintsDeletionStrategy>;

        interfaceinvoke $r6.<org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy: void init()>();

     label5:
        return;
    }

    public boolean isSolverKeptHot()
    {
        org.sat4j.minisat.core.Solver r0;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        $z0 = r0.<org.sat4j.minisat.core.Solver: boolean keepHot>;

        return $z0;
    }

    public void setKeepSolverHot(boolean)
    {
        org.sat4j.minisat.core.Solver r0;
        boolean z0;

        r0 := @this: org.sat4j.minisat.core.Solver;

        z0 := @parameter0: boolean;

        r0.<org.sat4j.minisat.core.Solver: boolean keepHot> = z0;

        return;
    }

    public void addClause(int[])
    {
        java.lang.UnsupportedOperationException $r0;
        org.sat4j.minisat.core.Solver r1;
        int[] r2;

        r1 := @this: org.sat4j.minisat.core.Solver;

        r2 := @parameter0: int[];

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not implemented yet");

        throw $r0;
    }

    static void access$000(org.sat4j.minisat.core.Solver, org.sat4j.specs.IVecInt)
    {
        org.sat4j.specs.IVecInt r1;
        org.sat4j.minisat.core.Solver r0;

        r0 := @parameter0: org.sat4j.minisat.core.Solver;

        r1 := @parameter1: org.sat4j.specs.IVecInt;

        specialinvoke r0.<org.sat4j.minisat.core.Solver: void simpleSimplification(org.sat4j.specs.IVecInt)>(r1);

        return;
    }

    static void access$100(org.sat4j.minisat.core.Solver, org.sat4j.specs.IVecInt)
    {
        org.sat4j.specs.IVecInt r1;
        org.sat4j.minisat.core.Solver r0;

        r0 := @parameter0: org.sat4j.minisat.core.Solver;

        r1 := @parameter1: org.sat4j.specs.IVecInt;

        specialinvoke r0.<org.sat4j.minisat.core.Solver: void expensiveSimplification(org.sat4j.specs.IVecInt)>(r1);

        return;
    }

    static void access$200(org.sat4j.minisat.core.Solver, org.sat4j.specs.IVecInt)
    {
        org.sat4j.specs.IVecInt r1;
        org.sat4j.minisat.core.Solver r0;

        r0 := @parameter0: org.sat4j.minisat.core.Solver;

        r1 := @parameter1: org.sat4j.specs.IVecInt;

        specialinvoke r0.<org.sat4j.minisat.core.Solver: void expensiveSimplificationWLOnly(org.sat4j.specs.IVecInt)>(r1);

        return;
    }

    static boolean access$302(org.sat4j.minisat.core.Solver, boolean)
    {
        org.sat4j.minisat.core.Solver r0;
        boolean z0;

        r0 := @parameter0: org.sat4j.minisat.core.Solver;

        z0 := @parameter1: boolean;

        r0.<org.sat4j.minisat.core.Solver: boolean needToReduceDB> = z0;

        return z0;
    }

    static boolean access$400(org.sat4j.minisat.core.Solver)
    {
        org.sat4j.minisat.core.Solver r0;
        boolean $z0;

        r0 := @parameter0: org.sat4j.minisat.core.Solver;

        $z0 = r0.<org.sat4j.minisat.core.Solver: boolean verbose>;

        return $z0;
    }

    static org.sat4j.minisat.core.SolverStats access$500(org.sat4j.minisat.core.Solver)
    {
        org.sat4j.minisat.core.Solver r0;
        org.sat4j.minisat.core.SolverStats $r1;

        r0 := @parameter0: org.sat4j.minisat.core.Solver;

        $r1 = r0.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SolverStats stats>;

        return $r1;
    }

    static void <clinit>()
    {
        org.sat4j.minisat.core.Solver$1 $r1;
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.sat4j.minisat.core.Solver: double CLAUSE_RESCALE_BOUND> = 1.0E20;

        <org.sat4j.minisat.core.Solver: double CLAUSE_RESCALE_FACTOR> = 1.0E-20;

        <org.sat4j.minisat.core.Solver: long serialVersionUID> = 1L;

        $r0 = class "Lorg/sat4j/minisat/core/Solver;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.sat4j.minisat.core.Solver: boolean $assertionsDisabled> = $z1;

        $r1 = new org.sat4j.minisat.core.Solver$1;

        specialinvoke $r1.<org.sat4j.minisat.core.Solver$1: void <init>()>();

        <org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ISimplifier NO_SIMPLIFICATION> = $r1;

        return;
    }
}
