public class org.springframework.util.xml.SimpleTransformErrorListener extends java.lang.Object implements javax.xml.transform.ErrorListener
{
    private final org.apache.commons.logging.Log logger;

    public void <init>(org.apache.commons.logging.Log)
    {
        org.springframework.util.xml.SimpleTransformErrorListener r0;
        org.apache.commons.logging.Log r1;

        r0 := @this: org.springframework.util.xml.SimpleTransformErrorListener;

        r1 := @parameter0: org.apache.commons.logging.Log;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.util.xml.SimpleTransformErrorListener: org.apache.commons.logging.Log logger> = r1;

        return;
    }

    public void warning(javax.xml.transform.TransformerException) throws javax.xml.transform.TransformerException
    {
        org.springframework.util.xml.SimpleTransformErrorListener r0;
        org.apache.commons.logging.Log $r2;
        javax.xml.transform.TransformerException r1;

        r0 := @this: org.springframework.util.xml.SimpleTransformErrorListener;

        r1 := @parameter0: javax.xml.transform.TransformerException;

        $r2 = r0.<org.springframework.util.xml.SimpleTransformErrorListener: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r2.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>("XSLT transformation warning", r1);

        return;
    }

    public void error(javax.xml.transform.TransformerException) throws javax.xml.transform.TransformerException
    {
        org.springframework.util.xml.SimpleTransformErrorListener r0;
        org.apache.commons.logging.Log $r2;
        javax.xml.transform.TransformerException r1;

        r0 := @this: org.springframework.util.xml.SimpleTransformErrorListener;

        r1 := @parameter0: javax.xml.transform.TransformerException;

        $r2 = r0.<org.springframework.util.xml.SimpleTransformErrorListener: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r2.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("XSLT transformation error", r1);

        return;
    }

    public void fatalError(javax.xml.transform.TransformerException) throws javax.xml.transform.TransformerException
    {
        org.springframework.util.xml.SimpleTransformErrorListener r1;
        javax.xml.transform.TransformerException r0;

        r1 := @this: org.springframework.util.xml.SimpleTransformErrorListener;

        r0 := @parameter0: javax.xml.transform.TransformerException;

        throw r0;
    }
}
