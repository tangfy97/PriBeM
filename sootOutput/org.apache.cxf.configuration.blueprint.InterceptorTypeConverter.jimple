public class org.apache.cxf.configuration.blueprint.InterceptorTypeConverter extends java.lang.Object implements org.osgi.service.blueprint.container.Converter
{

    public void <init>()
    {
        org.apache.cxf.configuration.blueprint.InterceptorTypeConverter r0;

        r0 := @this: org.apache.cxf.configuration.blueprint.InterceptorTypeConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean canConvert(java.lang.Object, org.osgi.service.blueprint.container.ReifiedType)
    {
        org.osgi.service.blueprint.container.ReifiedType r1;
        org.apache.cxf.configuration.blueprint.InterceptorTypeConverter r3;
        java.lang.Object r0;
        java.lang.Class $r2;
        boolean $z0, $z1, $z2;

        r3 := @this: org.apache.cxf.configuration.blueprint.InterceptorTypeConverter;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: org.osgi.service.blueprint.container.ReifiedType;

        $z0 = r0 instanceof org.apache.cxf.interceptor.Interceptor;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r1.<org.osgi.service.blueprint.container.ReifiedType: java.lang.Class getRawClass()>();

        $z1 = virtualinvoke $r2.<java.lang.Class: boolean isInstance(java.lang.Object)>(r0);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public java.lang.Object convert(java.lang.Object, org.osgi.service.blueprint.container.ReifiedType) throws java.lang.Exception
    {
        java.lang.Object r0;
        org.osgi.service.blueprint.container.ReifiedType r2;
        org.apache.cxf.configuration.blueprint.InterceptorTypeConverter r1;

        r1 := @this: org.apache.cxf.configuration.blueprint.InterceptorTypeConverter;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.osgi.service.blueprint.container.ReifiedType;

        return r0;
    }
}
