public class org.apache.commons.collections.list.FixedSizeList extends org.apache.commons.collections.list.AbstractSerializableListDecorator implements org.apache.commons.collections.BoundedCollection
{
    private static final long serialVersionUID;

    public static java.util.List decorate(java.util.List)
    {
        java.util.List r1;
        org.apache.commons.collections.list.FixedSizeList $r0;

        r1 := @parameter0: java.util.List;

        $r0 = new org.apache.commons.collections.list.FixedSizeList;

        specialinvoke $r0.<org.apache.commons.collections.list.FixedSizeList: void <init>(java.util.List)>(r1);

        return $r0;
    }

    protected void <init>(java.util.List)
    {
        java.util.List r1;
        org.apache.commons.collections.list.FixedSizeList r0;

        r0 := @this: org.apache.commons.collections.list.FixedSizeList;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.apache.commons.collections.list.AbstractSerializableListDecorator: void <init>(java.util.List)>(r1);

        return;
    }

    public boolean add(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object r2;
        org.apache.commons.collections.list.FixedSizeList r1;

        r1 := @this: org.apache.commons.collections.list.FixedSizeList;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("List is fixed size");

        throw $r0;
    }

    public void add(int, java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.collections.list.FixedSizeList r1;
        int i0;
        java.lang.Object r2;

        r1 := @this: org.apache.commons.collections.list.FixedSizeList;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("List is fixed size");

        throw $r0;
    }

    public boolean addAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.collections.list.FixedSizeList r1;
        java.util.Collection r2;

        r1 := @this: org.apache.commons.collections.list.FixedSizeList;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("List is fixed size");

        throw $r0;
    }

    public boolean addAll(int, java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.collections.list.FixedSizeList r1;
        java.util.Collection r2;
        int i0;

        r1 := @this: org.apache.commons.collections.list.FixedSizeList;

        i0 := @parameter0: int;

        r2 := @parameter1: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("List is fixed size");

        throw $r0;
    }

    public void clear()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.collections.list.FixedSizeList r1;

        r1 := @this: org.apache.commons.collections.list.FixedSizeList;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("List is fixed size");

        throw $r0;
    }

    public java.lang.Object get(int)
    {
        java.util.List $r1;
        org.apache.commons.collections.list.FixedSizeList r0;
        int i0;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.collections.list.FixedSizeList;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.list.FixedSizeList: java.util.List getList()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        return $r2;
    }

    public int indexOf(java.lang.Object)
    {
        java.util.List $r1;
        org.apache.commons.collections.list.FixedSizeList r0;
        int $i0;
        java.lang.Object r2;

        r0 := @this: org.apache.commons.collections.list.FixedSizeList;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.list.FixedSizeList: java.util.List getList()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int indexOf(java.lang.Object)>(r2);

        return $i0;
    }

    public java.util.Iterator iterator()
    {
        org.apache.commons.collections.list.FixedSizeList r0;
        java.util.Iterator $r2, $r3;
        java.util.Collection $r1;

        r0 := @this: org.apache.commons.collections.list.FixedSizeList;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.list.FixedSizeList: java.util.Collection getCollection()>();

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

        $r3 = staticinvoke <org.apache.commons.collections.iterators.UnmodifiableIterator: java.util.Iterator decorate(java.util.Iterator)>($r2);

        return $r3;
    }

    public int lastIndexOf(java.lang.Object)
    {
        java.util.List $r1;
        org.apache.commons.collections.list.FixedSizeList r0;
        int $i0;
        java.lang.Object r2;

        r0 := @this: org.apache.commons.collections.list.FixedSizeList;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.list.FixedSizeList: java.util.List getList()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int lastIndexOf(java.lang.Object)>(r2);

        return $i0;
    }

    public java.util.ListIterator listIterator()
    {
        org.apache.commons.collections.list.FixedSizeList$FixedSizeListIterator $r0;
        java.util.List $r2;
        org.apache.commons.collections.list.FixedSizeList r1;
        java.util.ListIterator $r3;

        r1 := @this: org.apache.commons.collections.list.FixedSizeList;

        $r0 = new org.apache.commons.collections.list.FixedSizeList$FixedSizeListIterator;

        $r2 = virtualinvoke r1.<org.apache.commons.collections.list.FixedSizeList: java.util.List getList()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.ListIterator listIterator(int)>(0);

        specialinvoke $r0.<org.apache.commons.collections.list.FixedSizeList$FixedSizeListIterator: void <init>(java.util.ListIterator)>($r3);

        return $r0;
    }

    public java.util.ListIterator listIterator(int)
    {
        org.apache.commons.collections.list.FixedSizeList$FixedSizeListIterator $r0;
        java.util.List $r2;
        org.apache.commons.collections.list.FixedSizeList r1;
        java.util.ListIterator $r3;
        int i0;

        r1 := @this: org.apache.commons.collections.list.FixedSizeList;

        i0 := @parameter0: int;

        $r0 = new org.apache.commons.collections.list.FixedSizeList$FixedSizeListIterator;

        $r2 = virtualinvoke r1.<org.apache.commons.collections.list.FixedSizeList: java.util.List getList()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.ListIterator listIterator(int)>(i0);

        specialinvoke $r0.<org.apache.commons.collections.list.FixedSizeList$FixedSizeListIterator: void <init>(java.util.ListIterator)>($r3);

        return $r0;
    }

    public java.lang.Object remove(int)
    {
        int i0;
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.collections.list.FixedSizeList r1;

        r1 := @this: org.apache.commons.collections.list.FixedSizeList;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("List is fixed size");

        throw $r0;
    }

    public boolean remove(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object r2;
        org.apache.commons.collections.list.FixedSizeList r1;

        r1 := @this: org.apache.commons.collections.list.FixedSizeList;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("List is fixed size");

        throw $r0;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.collections.list.FixedSizeList r1;
        java.util.Collection r2;

        r1 := @this: org.apache.commons.collections.list.FixedSizeList;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("List is fixed size");

        throw $r0;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.collections.list.FixedSizeList r1;
        java.util.Collection r2;

        r1 := @this: org.apache.commons.collections.list.FixedSizeList;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("List is fixed size");

        throw $r0;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        java.util.List $r1;
        org.apache.commons.collections.list.FixedSizeList r0;
        int i0;
        java.lang.Object r2, $r3;

        r0 := @this: org.apache.commons.collections.list.FixedSizeList;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.list.FixedSizeList: java.util.List getList()>();

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r2);

        return $r3;
    }

    public java.util.List subList(int, int)
    {
        java.util.List $r1, $r2;
        org.apache.commons.collections.list.FixedSizeList r0, $r3;
        int i0, i1;

        r0 := @this: org.apache.commons.collections.list.FixedSizeList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.list.FixedSizeList: java.util.List getList()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.List subList(int,int)>(i0, i1);

        $r3 = new org.apache.commons.collections.list.FixedSizeList;

        specialinvoke $r3.<org.apache.commons.collections.list.FixedSizeList: void <init>(java.util.List)>($r2);

        return $r3;
    }

    public boolean isFull()
    {
        org.apache.commons.collections.list.FixedSizeList r0;

        r0 := @this: org.apache.commons.collections.list.FixedSizeList;

        return 1;
    }

    public int maxSize()
    {
        int $i0;
        org.apache.commons.collections.list.FixedSizeList r0;

        r0 := @this: org.apache.commons.collections.list.FixedSizeList;

        $i0 = virtualinvoke r0.<org.apache.commons.collections.list.FixedSizeList: int size()>();

        return $i0;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections.list.FixedSizeList: long serialVersionUID> = -2218010673611160319L;

        return;
    }
}
