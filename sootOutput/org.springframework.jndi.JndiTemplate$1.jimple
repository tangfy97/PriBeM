final class org.springframework.jndi.JndiTemplate$1 extends java.lang.Object implements org.springframework.jndi.JndiCallback
{
    final org.springframework.jndi.JndiTemplate this$0;
    private final java.lang.String val$name;

    void <init>(org.springframework.jndi.JndiTemplate, java.lang.String)
    {
        org.springframework.jndi.JndiTemplate$1 r0;
        java.lang.String r2;
        org.springframework.jndi.JndiTemplate r1;

        r0 := @this: org.springframework.jndi.JndiTemplate$1;

        r1 := @parameter0: org.springframework.jndi.JndiTemplate;

        r2 := @parameter1: java.lang.String;

        r0.<org.springframework.jndi.JndiTemplate$1: org.springframework.jndi.JndiTemplate this$0> = r1;

        r0.<org.springframework.jndi.JndiTemplate$1: java.lang.String val$name> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object doInContext(javax.naming.Context) throws javax.naming.NamingException
    {
        org.springframework.jndi.JndiTemplate$1 r1;
        java.lang.Object $r3;
        java.lang.StringBuilder $r5, $r7, $r8;
        javax.naming.Context r0;
        java.lang.String $r2, $r6, $r9;
        javax.naming.NameNotFoundException $r4;

        r1 := @this: org.springframework.jndi.JndiTemplate$1;

        r0 := @parameter0: javax.naming.Context;

        $r2 = r1.<org.springframework.jndi.JndiTemplate$1: java.lang.String val$name>;

        $r3 = interfaceinvoke r0.<javax.naming.Context: java.lang.Object lookup(java.lang.String)>($r2);

        if $r3 != null goto label1;

        $r4 = new javax.naming.NameNotFoundException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("JNDI object with [");

        $r6 = r1.<org.springframework.jndi.JndiTemplate$1: java.lang.String val$name>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] not found: JNDI implementation returned null");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<javax.naming.NameNotFoundException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        return $r3;
    }
}
