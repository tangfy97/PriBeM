public class org.bouncycastle.crypto.signers.PSSSigner extends java.lang.Object implements org.bouncycastle.crypto.Signer
{
    public static final byte TRAILER_IMPLICIT;
    private org.bouncycastle.crypto.Digest contentDigest;
    private org.bouncycastle.crypto.Digest mgfDigest;
    private org.bouncycastle.crypto.AsymmetricBlockCipher cipher;
    private java.security.SecureRandom random;
    private int hLen;
    private int sLen;
    private int emBits;
    private byte[] salt;
    private byte[] mDash;
    private byte[] block;
    private byte trailer;

    public void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest, int)
    {
        org.bouncycastle.crypto.signers.PSSSigner r0;
        int i0;
        org.bouncycastle.crypto.Digest r2;
        org.bouncycastle.crypto.AsymmetricBlockCipher r1;

        r0 := @this: org.bouncycastle.crypto.signers.PSSSigner;

        r1 := @parameter0: org.bouncycastle.crypto.AsymmetricBlockCipher;

        r2 := @parameter1: org.bouncycastle.crypto.Digest;

        i0 := @parameter2: int;

        specialinvoke r0.<org.bouncycastle.crypto.signers.PSSSigner: void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,int,byte)>(r1, r2, i0, -68);

        return;
    }

    public void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest, int, byte)
    {
        byte b1;
        org.bouncycastle.crypto.signers.PSSSigner r0;
        int i0;
        org.bouncycastle.crypto.Digest r2;
        org.bouncycastle.crypto.AsymmetricBlockCipher r1;

        r0 := @this: org.bouncycastle.crypto.signers.PSSSigner;

        r1 := @parameter0: org.bouncycastle.crypto.AsymmetricBlockCipher;

        r2 := @parameter1: org.bouncycastle.crypto.Digest;

        i0 := @parameter2: int;

        b1 := @parameter3: byte;

        specialinvoke r0.<org.bouncycastle.crypto.signers.PSSSigner: void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,int,byte)>(r1, r2, r2, i0, b1);

        return;
    }

    public void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher, org.bouncycastle.crypto.Digest, org.bouncycastle.crypto.Digest, int, byte)
    {
        byte[] $r4, $r5;
        org.bouncycastle.crypto.signers.PSSSigner r0;
        org.bouncycastle.crypto.Digest r2, r3;
        org.bouncycastle.crypto.AsymmetricBlockCipher r1;
        byte b5;
        int $i0, i1, $i2, $i3, $i4;

        r0 := @this: org.bouncycastle.crypto.signers.PSSSigner;

        r1 := @parameter0: org.bouncycastle.crypto.AsymmetricBlockCipher;

        r2 := @parameter1: org.bouncycastle.crypto.Digest;

        r3 := @parameter2: org.bouncycastle.crypto.Digest;

        i1 := @parameter3: int;

        b5 := @parameter4: byte;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.crypto.signers.PSSSigner: org.bouncycastle.crypto.AsymmetricBlockCipher cipher> = r1;

        r0.<org.bouncycastle.crypto.signers.PSSSigner: org.bouncycastle.crypto.Digest contentDigest> = r2;

        r0.<org.bouncycastle.crypto.signers.PSSSigner: org.bouncycastle.crypto.Digest mgfDigest> = r3;

        $i0 = interfaceinvoke r3.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        r0.<org.bouncycastle.crypto.signers.PSSSigner: int hLen> = $i0;

        r0.<org.bouncycastle.crypto.signers.PSSSigner: int sLen> = i1;

        $r4 = newarray (byte)[i1];

        r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] salt> = $r4;

        $i3 = 8 + i1;

        $i2 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int hLen>;

        $i4 = $i3 + $i2;

        $r5 = newarray (byte)[$i4];

        r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] mDash> = $r5;

        r0.<org.bouncycastle.crypto.signers.PSSSigner: byte trailer> = b5;

        return;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters)
    {
        byte[] $r3;
        org.bouncycastle.crypto.params.RSABlindingParameters $r5;
        java.security.SecureRandom $r6, $r7;
        org.bouncycastle.crypto.params.RSAKeyParameters r11;
        org.bouncycastle.crypto.params.ParametersWithRandom r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.math.BigInteger $r2;
        org.bouncycastle.crypto.CipherParameters r0, r9;
        boolean $z0, z1, $z2;
        org.bouncycastle.crypto.signers.PSSSigner r1;
        java.lang.IllegalArgumentException $r4;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r10;

        r1 := @this: org.bouncycastle.crypto.signers.PSSSigner;

        z1 := @parameter0: boolean;

        r0 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        $z0 = r0 instanceof org.bouncycastle.crypto.params.ParametersWithRandom;

        if $z0 == 0 goto label1;

        r8 = (org.bouncycastle.crypto.params.ParametersWithRandom) r0;

        r9 = virtualinvoke r8.<org.bouncycastle.crypto.params.ParametersWithRandom: org.bouncycastle.crypto.CipherParameters getParameters()>();

        $r7 = virtualinvoke r8.<org.bouncycastle.crypto.params.ParametersWithRandom: java.security.SecureRandom getRandom()>();

        r1.<org.bouncycastle.crypto.signers.PSSSigner: java.security.SecureRandom random> = $r7;

        goto label2;

     label1:
        r9 = r0;

        if z1 == 0 goto label2;

        $r6 = new java.security.SecureRandom;

        specialinvoke $r6.<java.security.SecureRandom: void <init>()>();

        r1.<org.bouncycastle.crypto.signers.PSSSigner: java.security.SecureRandom random> = $r6;

     label2:
        $r10 = r1.<org.bouncycastle.crypto.signers.PSSSigner: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        interfaceinvoke $r10.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(z1, r9);

        $z2 = r9 instanceof org.bouncycastle.crypto.params.RSABlindingParameters;

        if $z2 == 0 goto label3;

        $r5 = (org.bouncycastle.crypto.params.RSABlindingParameters) r9;

        r11 = virtualinvoke $r5.<org.bouncycastle.crypto.params.RSABlindingParameters: org.bouncycastle.crypto.params.RSAKeyParameters getPublicKey()>();

        goto label4;

     label3:
        r11 = (org.bouncycastle.crypto.params.RSAKeyParameters) r9;

     label4:
        $r2 = virtualinvoke r11.<org.bouncycastle.crypto.params.RSAKeyParameters: java.math.BigInteger getModulus()>();

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int bitLength()>();

        $i1 = $i0 - 1;

        r1.<org.bouncycastle.crypto.signers.PSSSigner: int emBits> = $i1;

        $i8 = r1.<org.bouncycastle.crypto.signers.PSSSigner: int emBits>;

        $i2 = r1.<org.bouncycastle.crypto.signers.PSSSigner: int hLen>;

        $i5 = 8 * $i2;

        $i3 = r1.<org.bouncycastle.crypto.signers.PSSSigner: int sLen>;

        $i4 = 8 * $i3;

        $i6 = $i5 + $i4;

        $i7 = $i6 + 9;

        if $i8 >= $i7 goto label5;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("key too small for specified hash and salt lengths");

        throw $r4;

     label5:
        $i9 = r1.<org.bouncycastle.crypto.signers.PSSSigner: int emBits>;

        $i10 = $i9 + 7;

        $i11 = $i10 / 8;

        $r3 = newarray (byte)[$i11];

        r1.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block> = $r3;

        virtualinvoke r1.<org.bouncycastle.crypto.signers.PSSSigner: void reset()>();

        return;
    }

    private void clearBlock(byte[])
    {
        byte[] r0;
        org.bouncycastle.crypto.signers.PSSSigner r1;
        int $i0, i1;

        r1 := @this: org.bouncycastle.crypto.signers.PSSSigner;

        r0 := @parameter0: byte[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 == $i0 goto label2;

        r0[i1] = 0;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void update(byte)
    {
        org.bouncycastle.crypto.Digest $r1;
        byte b0;
        org.bouncycastle.crypto.signers.PSSSigner r0;

        r0 := @this: org.bouncycastle.crypto.signers.PSSSigner;

        b0 := @parameter0: byte;

        $r1 = r0.<org.bouncycastle.crypto.signers.PSSSigner: org.bouncycastle.crypto.Digest contentDigest>;

        interfaceinvoke $r1.<org.bouncycastle.crypto.Digest: void update(byte)>(b0);

        return;
    }

    public void update(byte[], int, int)
    {
        byte[] r1;
        org.bouncycastle.crypto.signers.PSSSigner r0;
        int i0, i1;
        org.bouncycastle.crypto.Digest $r2;

        r0 := @this: org.bouncycastle.crypto.signers.PSSSigner;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.bouncycastle.crypto.signers.PSSSigner: org.bouncycastle.crypto.Digest contentDigest>;

        interfaceinvoke $r2.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public void reset()
    {
        org.bouncycastle.crypto.Digest $r1;
        org.bouncycastle.crypto.signers.PSSSigner r0;

        r0 := @this: org.bouncycastle.crypto.signers.PSSSigner;

        $r1 = r0.<org.bouncycastle.crypto.signers.PSSSigner: org.bouncycastle.crypto.Digest contentDigest>;

        interfaceinvoke $r1.<org.bouncycastle.crypto.Digest: void reset()>();

        return;
    }

    public byte[] generateSignature() throws org.bouncycastle.crypto.CryptoException, org.bouncycastle.crypto.DataLengthException
    {
        byte[] $r1, $r2, $r4, $r5, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r24, $r25, $r26, $r27, $r29, $r30, $r31, $r32;
        java.security.SecureRandom $r28;
        byte $b32, $b34, $b41, $b44, $b45, $b46, $b47;
        org.bouncycastle.crypto.Digest $r3, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i33, $i35, $i36, $i37, $i38, $i39, $i40, $i42, $i43, $i48, $i49, $i50, $i51, i52, $i53, $i54;
        org.bouncycastle.crypto.signers.PSSSigner r0;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r23;

        r0 := @this: org.bouncycastle.crypto.signers.PSSSigner;

        $r3 = r0.<org.bouncycastle.crypto.signers.PSSSigner: org.bouncycastle.crypto.Digest contentDigest>;

        $r2 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] mDash>;

        $r1 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] mDash>;

        $i1 = lengthof $r1;

        $i0 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int hLen>;

        $i3 = $i1 - $i0;

        $i2 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int sLen>;

        $i4 = $i3 - $i2;

        interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>($r2, $i4);

        $i5 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int sLen>;

        if $i5 == 0 goto label1;

        $r28 = r0.<org.bouncycastle.crypto.signers.PSSSigner: java.security.SecureRandom random>;

        $r27 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] salt>;

        virtualinvoke $r28.<java.security.SecureRandom: void nextBytes(byte[])>($r27);

        $r31 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] salt>;

        $r30 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] mDash>;

        $r29 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] mDash>;

        $i49 = lengthof $r29;

        $i48 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int sLen>;

        $i51 = $i49 - $i48;

        $i50 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int sLen>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r31, 0, $r30, $i51, $i50);

     label1:
        $i6 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int hLen>;

        $r32 = newarray (byte)[$i6];

        $r6 = r0.<org.bouncycastle.crypto.signers.PSSSigner: org.bouncycastle.crypto.Digest mgfDigest>;

        $r5 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] mDash>;

        $r4 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] mDash>;

        $i7 = lengthof $r4;

        interfaceinvoke $r6.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>($r5, 0, $i7);

        $r7 = r0.<org.bouncycastle.crypto.signers.PSSSigner: org.bouncycastle.crypto.Digest mgfDigest>;

        interfaceinvoke $r7.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>($r32, 0);

        $r9 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $r8 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $i9 = lengthof $r8;

        $i8 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int sLen>;

        $i10 = $i9 - $i8;

        $i12 = $i10 - 1;

        $i11 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int hLen>;

        $i13 = $i12 - $i11;

        $i14 = $i13 - 1;

        $r9[$i14] = 1;

        $r12 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] salt>;

        $r11 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $r10 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $i16 = lengthof $r10;

        $i15 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int sLen>;

        $i18 = $i16 - $i15;

        $i17 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int hLen>;

        $i19 = $i18 - $i17;

        $i21 = $i19 - 1;

        $i20 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int sLen>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, 0, $r11, $i21, $i20);

        $i26 = lengthof $r32;

        $r13 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $i23 = lengthof $r13;

        $i22 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int hLen>;

        $i24 = $i23 - $i22;

        $i25 = $i24 - 1;

        $r14 = specialinvoke r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] maskGeneratorFunction1(byte[],int,int,int)>($r32, 0, $i26, $i25);

        i52 = 0;

     label2:
        $i53 = lengthof $r14;

        if i52 == $i53 goto label3;

        $r26 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $b45 = $r26[i52];

        $b44 = $r14[i52];

        $b46 = $b45 ^ $b44;

        $b47 = (byte) $b46;

        $r26[i52] = $b47;

        i52 = i52 + 1;

        goto label2;

     label3:
        $r15 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $b32 = $r15[0];

        $r16 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $i27 = lengthof $r16;

        $i29 = $i27 * 8;

        $i28 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int emBits>;

        $i30 = $i29 - $i28;

        $i31 = 255 >> $i30;

        $i54 = (int) $b32;

        $i33 = $i54 & $i31;

        $b34 = (byte) $i33;

        $r15[0] = $b34;

        $r18 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $r17 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $i36 = lengthof $r17;

        $i35 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int hLen>;

        $i37 = $i36 - $i35;

        $i39 = $i37 - 1;

        $i38 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int hLen>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r32, 0, $r18, $i39, $i38);

        $r20 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $r19 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $i40 = lengthof $r19;

        $i42 = $i40 - 1;

        $b41 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte trailer>;

        $r20[$i42] = $b41;

        $r23 = r0.<org.bouncycastle.crypto.signers.PSSSigner: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $r22 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $r21 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $i43 = lengthof $r21;

        $r24 = interfaceinvoke $r23.<org.bouncycastle.crypto.AsymmetricBlockCipher: byte[] processBlock(byte[],int,int)>($r22, 0, $i43);

        $r25 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        specialinvoke r0.<org.bouncycastle.crypto.signers.PSSSigner: void clearBlock(byte[])>($r25);

        return $r24;
    }

    public boolean verifySignature(byte[])
    {
        byte[] $r1, $r2, r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r27, $r28, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43;
        byte $b12, $b13, $b29, $b31, $b44, $b65, $b66, $b67, $b68, $b69, $b70, $b71, $b72;
        java.lang.Exception $r44;
        org.bouncycastle.crypto.Digest $r3, $r26, $r29;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i30, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, i73, i74, i75, i76, $i77, $i78, $i79;
        org.bouncycastle.crypto.signers.PSSSigner r0;
        org.bouncycastle.crypto.AsymmetricBlockCipher $r5;

        r0 := @this: org.bouncycastle.crypto.signers.PSSSigner;

        r4 := @parameter0: byte[];

        $r3 = r0.<org.bouncycastle.crypto.signers.PSSSigner: org.bouncycastle.crypto.Digest contentDigest>;

        $r2 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] mDash>;

        $r1 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] mDash>;

        $i1 = lengthof $r1;

        $i0 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int hLen>;

        $i3 = $i1 - $i0;

        $i2 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int sLen>;

        $i4 = $i3 - $i2;

        interfaceinvoke $r3.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>($r2, $i4);

     label01:
        $r5 = r0.<org.bouncycastle.crypto.signers.PSSSigner: org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i5 = lengthof r4;

        $r6 = interfaceinvoke $r5.<org.bouncycastle.crypto.AsymmetricBlockCipher: byte[] processBlock(byte[],int,int)>(r4, 0, $i5);

        $r8 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $r7 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $i7 = lengthof $r7;

        $i6 = lengthof $r6;

        $i9 = $i7 - $i6;

        $i8 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r8, $i9, $i8);

     label02:
        goto label04;

     label03:
        $r44 := @caughtexception;

        return 0;

     label04:
        $r10 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $r9 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $i10 = lengthof $r9;

        $i11 = $i10 - 1;

        $b13 = $r10[$i11];

        $b12 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte trailer>;

        $i77 = (int) $b13;

        $i78 = (int) $b12;

        if $i77 == $i78 goto label05;

        $r43 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        specialinvoke r0.<org.bouncycastle.crypto.signers.PSSSigner: void clearBlock(byte[])>($r43);

        return 0;

     label05:
        $r13 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $r11 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $i15 = lengthof $r11;

        $i14 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int hLen>;

        $i16 = $i15 - $i14;

        $i22 = $i16 - 1;

        $i21 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int hLen>;

        $r12 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $i18 = lengthof $r12;

        $i17 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int hLen>;

        $i19 = $i18 - $i17;

        $i20 = $i19 - 1;

        $r14 = specialinvoke r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] maskGeneratorFunction1(byte[],int,int,int)>($r13, $i22, $i21, $i20);

        i73 = 0;

     label06:
        $i23 = lengthof $r14;

        if i73 == $i23 goto label07;

        $r42 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $b70 = $r42[i73];

        $b69 = $r14[i73];

        $b71 = $b70 ^ $b69;

        $b72 = (byte) $b71;

        $r42[i73] = $b72;

        i73 = i73 + 1;

        goto label06;

     label07:
        $r15 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $b29 = $r15[0];

        $r16 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $i24 = lengthof $r16;

        $i26 = $i24 * 8;

        $i25 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int emBits>;

        $i27 = $i26 - $i25;

        $i28 = 255 >> $i27;

        $i79 = (int) $b29;

        $i30 = $i79 & $i28;

        $b31 = (byte) $i30;

        $r15[0] = $b31;

        i74 = 0;

     label08:
        $r17 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $i33 = lengthof $r17;

        $i32 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int hLen>;

        $i35 = $i33 - $i32;

        $i34 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int sLen>;

        $i36 = $i35 - $i34;

        $i37 = $i36 - 2;

        if i74 == $i37 goto label10;

        $r40 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $b68 = $r40[i74];

        if $b68 == 0 goto label09;

        $r41 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        specialinvoke r0.<org.bouncycastle.crypto.signers.PSSSigner: void clearBlock(byte[])>($r41);

        return 0;

     label09:
        i74 = i74 + 1;

        goto label08;

     label10:
        $r19 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $r18 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $i39 = lengthof $r18;

        $i38 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int hLen>;

        $i41 = $i39 - $i38;

        $i40 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int sLen>;

        $i42 = $i41 - $i40;

        $i43 = $i42 - 2;

        $b44 = $r19[$i43];

        if $b44 == 1 goto label11;

        $r39 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        specialinvoke r0.<org.bouncycastle.crypto.signers.PSSSigner: void clearBlock(byte[])>($r39);

        return 0;

     label11:
        $r23 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $r20 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $i46 = lengthof $r20;

        $i45 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int sLen>;

        $i48 = $i46 - $i45;

        $i47 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int hLen>;

        $i49 = $i48 - $i47;

        $i54 = $i49 - 1;

        $r22 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] mDash>;

        $r21 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] mDash>;

        $i51 = lengthof $r21;

        $i50 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int sLen>;

        $i53 = $i51 - $i50;

        $i52 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int sLen>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r23, $i54, $r22, $i53, $i52);

        $r26 = r0.<org.bouncycastle.crypto.signers.PSSSigner: org.bouncycastle.crypto.Digest mgfDigest>;

        $r25 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] mDash>;

        $r24 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] mDash>;

        $i55 = lengthof $r24;

        interfaceinvoke $r26.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>($r25, 0, $i55);

        $r29 = r0.<org.bouncycastle.crypto.signers.PSSSigner: org.bouncycastle.crypto.Digest mgfDigest>;

        $r28 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] mDash>;

        $r27 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] mDash>;

        $i57 = lengthof $r27;

        $i56 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int hLen>;

        $i58 = $i57 - $i56;

        interfaceinvoke $r29.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>($r28, $i58);

        $r30 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $i60 = lengthof $r30;

        $i59 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int hLen>;

        $i61 = $i60 - $i59;

        i75 = $i61 - 1;

        $r31 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] mDash>;

        $i63 = lengthof $r31;

        $i62 = r0.<org.bouncycastle.crypto.signers.PSSSigner: int hLen>;

        i76 = $i63 - $i62;

     label12:
        $r32 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] mDash>;

        $i64 = lengthof $r32;

        if i76 == $i64 goto label14;

        $r35 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        $b66 = $r35[i75];

        $r36 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] mDash>;

        $b65 = $r36[i76];

        $b67 = $b66 ^ $b65;

        if $b67 == 0 goto label13;

        $r37 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] mDash>;

        specialinvoke r0.<org.bouncycastle.crypto.signers.PSSSigner: void clearBlock(byte[])>($r37);

        $r38 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        specialinvoke r0.<org.bouncycastle.crypto.signers.PSSSigner: void clearBlock(byte[])>($r38);

        return 0;

     label13:
        i75 = i75 + 1;

        i76 = i76 + 1;

        goto label12;

     label14:
        $r33 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] mDash>;

        specialinvoke r0.<org.bouncycastle.crypto.signers.PSSSigner: void clearBlock(byte[])>($r33);

        $r34 = r0.<org.bouncycastle.crypto.signers.PSSSigner: byte[] block>;

        specialinvoke r0.<org.bouncycastle.crypto.signers.PSSSigner: void clearBlock(byte[])>($r34);

        return 1;

        catch java.lang.Exception from label01 to label02 with label03;
    }

    private void ItoOSP(int, byte[])
    {
        byte[] r0;
        org.bouncycastle.crypto.signers.PSSSigner r1;
        byte $b2, $b4, $b6, $b8;
        int i0, $i1, $i3, $i5, $i7;

        r1 := @this: org.bouncycastle.crypto.signers.PSSSigner;

        i0 := @parameter0: int;

        r0 := @parameter1: byte[];

        $i1 = i0 >>> 24;

        $b2 = (byte) $i1;

        r0[0] = $b2;

        $i3 = i0 >>> 16;

        $b4 = (byte) $i3;

        r0[1] = $b4;

        $i5 = i0 >>> 8;

        $b6 = (byte) $i5;

        r0[2] = $b6;

        $i7 = i0 >>> 0;

        $b8 = (byte) $i7;

        r0[3] = $b8;

        return;
    }

    private byte[] maskGeneratorFunction1(byte[], int, int, int)
    {
        byte[] r0, r2, r3, r5;
        org.bouncycastle.crypto.Digest $r4, $r6, $r7, $r8, $r9, $r10, $r11;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19;
        org.bouncycastle.crypto.signers.PSSSigner r1;

        r1 := @this: org.bouncycastle.crypto.signers.PSSSigner;

        r5 := @parameter0: byte[];

        i6 := @parameter1: int;

        i7 := @parameter2: int;

        i0 := @parameter3: int;

        r0 = newarray (byte)[i0];

        $i1 = r1.<org.bouncycastle.crypto.signers.PSSSigner: int hLen>;

        r2 = newarray (byte)[$i1];

        r3 = newarray (byte)[4];

        i19 = 0;

        $r4 = r1.<org.bouncycastle.crypto.signers.PSSSigner: org.bouncycastle.crypto.Digest mgfDigest>;

        interfaceinvoke $r4.<org.bouncycastle.crypto.Digest: void reset()>();

     label1:
        $i2 = r1.<org.bouncycastle.crypto.signers.PSSSigner: int hLen>;

        $i3 = i0 / $i2;

        if i19 >= $i3 goto label2;

        specialinvoke r1.<org.bouncycastle.crypto.signers.PSSSigner: void ItoOSP(int,byte[])>(i19, r3);

        $r9 = r1.<org.bouncycastle.crypto.signers.PSSSigner: org.bouncycastle.crypto.Digest mgfDigest>;

        interfaceinvoke $r9.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r5, i6, i7);

        $r10 = r1.<org.bouncycastle.crypto.signers.PSSSigner: org.bouncycastle.crypto.Digest mgfDigest>;

        $i15 = lengthof r3;

        interfaceinvoke $r10.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r3, 0, $i15);

        $r11 = r1.<org.bouncycastle.crypto.signers.PSSSigner: org.bouncycastle.crypto.Digest mgfDigest>;

        interfaceinvoke $r11.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>(r2, 0);

        $i16 = r1.<org.bouncycastle.crypto.signers.PSSSigner: int hLen>;

        $i18 = i19 * $i16;

        $i17 = r1.<org.bouncycastle.crypto.signers.PSSSigner: int hLen>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r0, $i18, $i17);

        i19 = i19 + 1;

        goto label1;

     label2:
        $i4 = r1.<org.bouncycastle.crypto.signers.PSSSigner: int hLen>;

        $i5 = i19 * $i4;

        if $i5 >= i0 goto label3;

        specialinvoke r1.<org.bouncycastle.crypto.signers.PSSSigner: void ItoOSP(int,byte[])>(i19, r3);

        $r6 = r1.<org.bouncycastle.crypto.signers.PSSSigner: org.bouncycastle.crypto.Digest mgfDigest>;

        interfaceinvoke $r6.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r5, i6, i7);

        $r7 = r1.<org.bouncycastle.crypto.signers.PSSSigner: org.bouncycastle.crypto.Digest mgfDigest>;

        $i8 = lengthof r3;

        interfaceinvoke $r7.<org.bouncycastle.crypto.Digest: void update(byte[],int,int)>(r3, 0, $i8);

        $r8 = r1.<org.bouncycastle.crypto.signers.PSSSigner: org.bouncycastle.crypto.Digest mgfDigest>;

        interfaceinvoke $r8.<org.bouncycastle.crypto.Digest: int doFinal(byte[],int)>(r2, 0);

        $i9 = r1.<org.bouncycastle.crypto.signers.PSSSigner: int hLen>;

        $i14 = i19 * $i9;

        $i12 = lengthof r0;

        $i10 = r1.<org.bouncycastle.crypto.signers.PSSSigner: int hLen>;

        $i11 = i19 * $i10;

        $i13 = $i12 - $i11;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r0, $i14, $i13);

     label3:
        return r0;
    }

    public static void <clinit>()
    {
        <org.bouncycastle.crypto.signers.PSSSigner: byte TRAILER_IMPLICIT> = -68;

        return;
    }
}
