public class org.waveprotocol.wave.client.editor.impl.TextSkippingView extends org.waveprotocol.wave.model.document.util.FilteredView
{

    public void <init>(org.waveprotocol.wave.model.document.ReadableDocument)
    {
        org.waveprotocol.wave.client.editor.impl.TextSkippingView r0;
        org.waveprotocol.wave.model.document.ReadableDocument r1;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.TextSkippingView;

        r1 := @parameter0: org.waveprotocol.wave.model.document.ReadableDocument;

        specialinvoke r0.<org.waveprotocol.wave.model.document.util.FilteredView: void <init>(org.waveprotocol.wave.model.document.ReadableDocument)>(r1);

        return;
    }

    protected org.waveprotocol.wave.model.document.util.FilteredView$Skip getSkipLevel(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.impl.TextSkippingView r0;
        java.lang.Object r1, $r2;
        org.waveprotocol.wave.model.document.util.FilteredView$Skip $r3, $r4;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.TextSkippingView;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.TextSkippingView: java.lang.Object asText(java.lang.Object)>(r1);

        if $r2 == null goto label1;

        $r4 = <org.waveprotocol.wave.model.document.util.FilteredView$Skip: org.waveprotocol.wave.model.document.util.FilteredView$Skip DEEP>;

        return $r4;

     label1:
        $r3 = <org.waveprotocol.wave.model.document.util.FilteredView$Skip: org.waveprotocol.wave.model.document.util.FilteredView$Skip NONE>;

        return $r3;
    }
}
