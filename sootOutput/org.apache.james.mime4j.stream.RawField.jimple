public final class org.apache.james.mime4j.stream.RawField extends java.lang.Object implements org.apache.james.mime4j.stream.Field
{
    private final org.apache.james.mime4j.util.ByteSequence raw;
    private final int delimiterIdx;
    private final java.lang.String name;
    private final java.lang.String body;

    void <init>(org.apache.james.mime4j.util.ByteSequence, int, java.lang.String, java.lang.String)
    {
        org.apache.james.mime4j.util.ByteSequence r2;
        int i0;
        org.apache.james.mime4j.stream.RawField r0;
        java.lang.String r1, $r3, r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: org.apache.james.mime4j.stream.RawField;

        r2 := @parameter0: org.apache.james.mime4j.util.ByteSequence;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Field may not be null");

        throw $r5;

     label1:
        r0.<org.apache.james.mime4j.stream.RawField: org.apache.james.mime4j.util.ByteSequence raw> = r2;

        r0.<org.apache.james.mime4j.stream.RawField: int delimiterIdx> = i0;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        r0.<org.apache.james.mime4j.stream.RawField: java.lang.String name> = $r3;

        r0.<org.apache.james.mime4j.stream.RawField: java.lang.String body> = r4;

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        int $i1;
        org.apache.james.mime4j.stream.RawField r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.james.mime4j.stream.RawField;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $i1 = (int) -1;

        specialinvoke r0.<org.apache.james.mime4j.stream.RawField: void <init>(org.apache.james.mime4j.util.ByteSequence,int,java.lang.String,java.lang.String)>(null, $i1, r1, r2);

        return;
    }

    public org.apache.james.mime4j.util.ByteSequence getRaw()
    {
        org.apache.james.mime4j.stream.RawField r0;
        org.apache.james.mime4j.util.ByteSequence $r1;

        r0 := @this: org.apache.james.mime4j.stream.RawField;

        $r1 = r0.<org.apache.james.mime4j.stream.RawField: org.apache.james.mime4j.util.ByteSequence raw>;

        return $r1;
    }

    public java.lang.String getName()
    {
        org.apache.james.mime4j.stream.RawField r0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.stream.RawField;

        $r1 = r0.<org.apache.james.mime4j.stream.RawField: java.lang.String name>;

        return $r1;
    }

    public java.lang.String getBody()
    {
        org.apache.james.mime4j.util.ByteSequence $r2, $r3, $r4, $r6;
        org.apache.james.mime4j.stream.RawField r0;
        short $s4, $s8;
        byte $b3;
        int $i0, $i1, $i2, i6, $i7;
        java.lang.String $r1, $r5, $r7, $r8;
        boolean $z0;
        char $c5;

        r0 := @this: org.apache.james.mime4j.stream.RawField;

        $r1 = r0.<org.apache.james.mime4j.stream.RawField: java.lang.String body>;

        if $r1 == null goto label1;

        $r5 = r0.<org.apache.james.mime4j.stream.RawField: java.lang.String body>;

        return $r5;

     label1:
        $r2 = r0.<org.apache.james.mime4j.stream.RawField: org.apache.james.mime4j.util.ByteSequence raw>;

        if $r2 == null goto label3;

        $r3 = r0.<org.apache.james.mime4j.stream.RawField: org.apache.james.mime4j.util.ByteSequence raw>;

        $i0 = interfaceinvoke $r3.<org.apache.james.mime4j.util.ByteSequence: int length()>();

        $i1 = r0.<org.apache.james.mime4j.stream.RawField: int delimiterIdx>;

        i6 = $i1 + 1;

        $i2 = i6 + 1;

        if $i0 <= $i2 goto label2;

        $r4 = r0.<org.apache.james.mime4j.stream.RawField: org.apache.james.mime4j.util.ByteSequence raw>;

        $b3 = interfaceinvoke $r4.<org.apache.james.mime4j.util.ByteSequence: byte byteAt(int)>(i6);

        $s8 = (short) $b3;

        $s4 = $s8 & 255;

        $c5 = (char) $s4;

        $z0 = staticinvoke <org.apache.james.mime4j.util.CharsetUtil: boolean isWhitespace(char)>($c5);

        if $z0 == 0 goto label2;

        i6 = i6 + 1;

     label2:
        $r6 = r0.<org.apache.james.mime4j.stream.RawField: org.apache.james.mime4j.util.ByteSequence raw>;

        $i7 = $i0 - i6;

        $r7 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: java.lang.String decode(org.apache.james.mime4j.util.ByteSequence,int,int)>($r6, i6, $i7);

        $r8 = staticinvoke <org.apache.james.mime4j.util.MimeUtil: java.lang.String unfold(java.lang.String)>($r7);

        return $r8;

     label3:
        return null;
    }

    public int getDelimiterIdx()
    {
        int $i0;
        org.apache.james.mime4j.stream.RawField r0;

        r0 := @this: org.apache.james.mime4j.stream.RawField;

        $i0 = r0.<org.apache.james.mime4j.stream.RawField: int delimiterIdx>;

        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.james.mime4j.util.ByteSequence $r1, $r7;
        org.apache.james.mime4j.stream.RawField r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r4, $r5, $r6, $r8;

        r0 := @this: org.apache.james.mime4j.stream.RawField;

        $r1 = r0.<org.apache.james.mime4j.stream.RawField: org.apache.james.mime4j.util.ByteSequence raw>;

        if $r1 == null goto label1;

        $r7 = r0.<org.apache.james.mime4j.stream.RawField: org.apache.james.mime4j.util.ByteSequence raw>;

        $r8 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: java.lang.String decode(org.apache.james.mime4j.util.ByteSequence)>($r7);

        return $r8;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<org.apache.james.mime4j.stream.RawField: java.lang.String name>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r4 = r0.<org.apache.james.mime4j.stream.RawField: java.lang.String body>;

        if $r4 == null goto label2;

        $r6 = r0.<org.apache.james.mime4j.stream.RawField: java.lang.String body>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label2:
        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
