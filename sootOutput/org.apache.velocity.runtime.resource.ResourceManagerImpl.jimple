public class org.apache.velocity.runtime.resource.ResourceManagerImpl extends java.lang.Object implements org.apache.velocity.runtime.resource.ResourceManager
{
    public static final int RESOURCE_TEMPLATE;
    public static final int RESOURCE_CONTENT;
    private static final java.lang.String RESOURCE_LOADER_IDENTIFIER;
    protected org.apache.velocity.runtime.resource.ResourceCache globalCache;
    protected final java.util.List resourceLoaders;
    private final java.util.List sourceInitializerList;
    private boolean isInit;
    private boolean logWhenFound;
    protected org.apache.velocity.runtime.RuntimeServices rsvc;
    protected org.apache.velocity.runtime.log.Log log;
    static java.lang.Class class$org$apache$velocity$runtime$resource$ResourceCache;

    public void <init>()
    {
        org.apache.velocity.runtime.resource.ResourceManagerImpl r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: org.apache.velocity.runtime.resource.ResourceManagerImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.resource.ResourceCache globalCache> = null;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: java.util.List resourceLoaders> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: java.util.List sourceInitializerList> = $r2;

        r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: boolean isInit> = 0;

        r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: boolean logWhenFound> = 1;

        r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.RuntimeServices rsvc> = null;

        r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.log.Log log> = null;

        return;
    }

    public synchronized void initialize(org.apache.velocity.runtime.RuntimeServices)
    {
        org.apache.velocity.runtime.resource.ResourceCacheImpl $r16;
        org.apache.velocity.exception.VelocityException $r40, $r44, $r51, $r64;
        java.lang.StringBuffer $r3, $r5, $r7, $r8, $r18, $r19, $r20, $r21, $r24, $r32, $r33, $r35, $r36, $r37, $r45, $r46, $r47, $r48, $r52, $r53, $r54, $r55, $r58, $r59, $r60, $r61;
        java.lang.String $r9, $r12, $r23, $r25, $r29, $r30, $r34, $r38, $r49, $r56, $r62;
        java.lang.RuntimeException $r27;
        org.apache.commons.collections.ExtendedProperties r65;
        org.apache.velocity.runtime.log.Log $r2, $r4, $r15, $r26, $r39, $r42, $r63;
        java.lang.ClassNotFoundException $r57;
        java.lang.InstantiationException $r43;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.IllegalAccessException $r50;
        java.util.List $r10, $r41;
        org.apache.velocity.runtime.RuntimeServices r1;
        org.apache.velocity.runtime.resource.loader.ResourceLoader r66, r67;
        org.apache.velocity.runtime.resource.ResourceManagerImpl r0;
        java.util.Iterator $r11;
        java.lang.Class $r6, $r22, $r69;
        java.lang.Object $r17, $r28, $r31, r68;
        org.apache.velocity.runtime.resource.ResourceCache $r13, $r14;

        r0 := @this: org.apache.velocity.runtime.resource.ResourceManagerImpl;

        r1 := @parameter0: org.apache.velocity.runtime.RuntimeServices;

        $z0 = r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: boolean isInit>;

        if $z0 == 0 goto label01;

        $r42 = r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r42.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>("Re-initialization of ResourceLoader attempted and ignored.");

        return;

     label01:
        r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.RuntimeServices rsvc> = r1;

        $r2 = interfaceinvoke r1.<org.apache.velocity.runtime.RuntimeServices: org.apache.velocity.runtime.log.Log getLog()>();

        r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.log.Log log> = $r2;

        $r4 = r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.log.Log log>;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Default ResourceManager initializing. (");

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r4.<org.apache.velocity.runtime.log.Log: void trace(java.lang.Object)>($r9);

        specialinvoke r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: void assembleResourceLoaderInitializers()>();

        $r10 = r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: java.util.List sourceInitializerList>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r28 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r65 = (org.apache.commons.collections.ExtendedProperties) $r28;

        $r29 = virtualinvoke r65.<org.apache.commons.collections.ExtendedProperties: java.lang.String getString(java.lang.String)>("class");

        $r30 = staticinvoke <org.apache.velocity.util.StringUtils: java.lang.String nullTrim(java.lang.String)>($r29);

        $r31 = virtualinvoke r65.<org.apache.commons.collections.ExtendedProperties: java.lang.Object get(java.lang.Object)>("instance");

        r66 = (org.apache.velocity.runtime.resource.loader.ResourceLoader) $r31;

        if r66 == null goto label03;

        r67 = r66;

        goto label05;

     label03:
        if $r30 == null goto label04;

        r67 = staticinvoke <org.apache.velocity.runtime.resource.loader.ResourceLoaderFactory: org.apache.velocity.runtime.resource.loader.ResourceLoader getLoader(org.apache.velocity.runtime.RuntimeServices,java.lang.String)>(r1, $r30);

        goto label05;

     label04:
        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to find \'");

        $r34 = virtualinvoke r65.<org.apache.commons.collections.ExtendedProperties: java.lang.String getString(java.lang.String)>("_RESOURCE_LOADER_IDENTIFIER_");

        $r35 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".resource.loader.class\' specification in configuration.");

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" This is a critical value.  Please adjust configuration.");

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.String toString()>();

        $r39 = r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r39.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r38);

        $r40 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r40.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String)>($r38);

        throw $r40;

     label05:
        virtualinvoke r67.<org.apache.velocity.runtime.resource.loader.ResourceLoader: void commonInit(org.apache.velocity.runtime.RuntimeServices,org.apache.commons.collections.ExtendedProperties)>(r1, r65);

        virtualinvoke r67.<org.apache.velocity.runtime.resource.loader.ResourceLoader: void init(org.apache.commons.collections.ExtendedProperties)>(r65);

        $r41 = r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: java.util.List resourceLoaders>;

        interfaceinvoke $r41.<java.util.List: boolean add(java.lang.Object)>(r67);

        goto label02;

     label06:
        $z2 = interfaceinvoke r1.<org.apache.velocity.runtime.RuntimeServices: boolean getBoolean(java.lang.String,boolean)>("resource.manager.logwhenfound", 1);

        r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: boolean logWhenFound> = $z2;

        $r12 = interfaceinvoke r1.<org.apache.velocity.runtime.RuntimeServices: java.lang.String getString(java.lang.String)>("resource.manager.cache.class");

        r68 = null;

        $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r12);

        if $z3 == 0 goto label15;

     label07:
        $r17 = staticinvoke <org.apache.velocity.util.ClassUtils: java.lang.Object getNewInstance(java.lang.String)>($r12);

        r68 = $r17;

     label08:
        goto label12;

     label09:
        $r57 := @caughtexception;

        $r58 = new java.lang.StringBuffer;

        specialinvoke $r58.<java.lang.StringBuffer: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The specified class for ResourceCache (");

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r61 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") does not exist or is not accessible to the current classloader.");

        $r62 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.String toString()>();

        $r63 = r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r63.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>($r62, $r57);

        $r64 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r64.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r62, $r57);

        throw $r64;

     label10:
        $r50 := @caughtexception;

        $r51 = new org.apache.velocity.exception.VelocityException;

        $r52 = new java.lang.StringBuffer;

        specialinvoke $r52.<java.lang.StringBuffer: void <init>()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not access class \'");

        $r54 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r51.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r56, $r50);

        throw $r51;

     label11:
        $r43 := @caughtexception;

        $r44 = new org.apache.velocity.exception.VelocityException;

        $r45 = new java.lang.StringBuffer;

        specialinvoke $r45.<java.lang.StringBuffer: void <init>()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not instantiate class \'");

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r44.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r49, $r43);

        throw $r44;

     label12:
        $z4 = $r17 instanceof org.apache.velocity.runtime.resource.ResourceCache;

        if $z4 != 0 goto label15;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The specified resource cache class (");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") must implement ");

        $r22 = <org.apache.velocity.runtime.resource.ResourceManagerImpl: java.lang.Class class$org$apache$velocity$runtime$resource$ResourceCache>;

        if $r22 != null goto label13;

        $r69 = staticinvoke <org.apache.velocity.runtime.resource.ResourceManagerImpl: java.lang.Class class$(java.lang.String)>("org.apache.velocity.runtime.resource.ResourceCache");

        <org.apache.velocity.runtime.resource.ResourceManagerImpl: java.lang.Class class$org$apache$velocity$runtime$resource$ResourceCache> = $r69;

        goto label14;

     label13:
        $r69 = <org.apache.velocity.runtime.resource.ResourceManagerImpl: java.lang.Class class$org$apache$velocity$runtime$resource$ResourceCache>;

     label14:
        $r23 = virtualinvoke $r69.<java.lang.Class: java.lang.String getName()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        $r26 = r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r26.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r25);

        $r27 = new java.lang.RuntimeException;

        specialinvoke $r27.<java.lang.RuntimeException: void <init>(java.lang.String)>($r25);

        throw $r27;

     label15:
        if r68 != null goto label16;

        $r16 = new org.apache.velocity.runtime.resource.ResourceCacheImpl;

        specialinvoke $r16.<org.apache.velocity.runtime.resource.ResourceCacheImpl: void <init>()>();

        r68 = $r16;

     label16:
        $r13 = (org.apache.velocity.runtime.resource.ResourceCache) r68;

        r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.resource.ResourceCache globalCache> = $r13;

        $r14 = r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.resource.ResourceCache globalCache>;

        interfaceinvoke $r14.<org.apache.velocity.runtime.resource.ResourceCache: void initialize(org.apache.velocity.runtime.RuntimeServices)>(r1);

        $r15 = r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r15.<org.apache.velocity.runtime.log.Log: void trace(java.lang.Object)>("Default ResourceManager initialization complete.");

        return;

        catch java.lang.ClassNotFoundException from label07 to label08 with label09;
        catch java.lang.IllegalAccessException from label07 to label08 with label10;
        catch java.lang.InstantiationException from label07 to label08 with label11;
    }

    private void assembleResourceLoaderInitializers()
    {
        org.apache.velocity.runtime.RuntimeServices $r1, $r9;
        java.util.Vector $r3;
        java.lang.StringBuffer $r7, $r8, $r14, $r16, $r17, $r18, $r19, $r20;
        org.apache.velocity.runtime.resource.ResourceManagerImpl r0;
        java.lang.String r6, $r11, $r21;
        boolean $z0;
        java.util.Iterator $r4;
        org.apache.commons.collections.ExtendedProperties $r2, $r10, $r12;
        org.apache.velocity.runtime.log.Log $r15;
        java.util.List $r13;
        java.lang.Object $r5;

        r0 := @this: org.apache.velocity.runtime.resource.ResourceManagerImpl;

        $r1 = r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r2 = interfaceinvoke $r1.<org.apache.velocity.runtime.RuntimeServices: org.apache.commons.collections.ExtendedProperties getConfiguration()>();

        $r3 = virtualinvoke $r2.<org.apache.commons.collections.ExtendedProperties: java.util.Vector getVector(java.lang.String)>("resource.loader");

        staticinvoke <org.apache.velocity.util.StringUtils: java.util.List trimStrings(java.util.List)>($r3);

        $r4 = virtualinvoke $r3.<java.util.Vector: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("resource.loader");

        $r9 = r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r10 = interfaceinvoke $r9.<org.apache.velocity.runtime.RuntimeServices: org.apache.commons.collections.ExtendedProperties getConfiguration()>();

        $r11 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r12 = virtualinvoke $r10.<org.apache.commons.collections.ExtendedProperties: org.apache.commons.collections.ExtendedProperties subset(java.lang.String)>($r11);

        if $r12 != null goto label2;

        $r15 = r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.log.Log log>;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ResourceManager : No configuration information found for resource loader named \'");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' (id is ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("). Skipping it...");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r15.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r21);

        goto label1;

     label2:
        virtualinvoke $r12.<org.apache.commons.collections.ExtendedProperties: void setProperty(java.lang.String,java.lang.Object)>("_RESOURCE_LOADER_IDENTIFIER_", r6);

        $r13 = r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: java.util.List sourceInitializerList>;

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label1;

     label3:
        return;
    }

    public org.apache.velocity.runtime.resource.Resource getResource(java.lang.String, int, java.lang.String) throws org.apache.velocity.exception.ResourceNotFoundException, org.apache.velocity.exception.ParseErrorException
    {
        org.apache.velocity.runtime.resource.Resource $r7, $r9, $r29, r30;
        boolean $z0, $z1;
        org.apache.velocity.runtime.resource.loader.ResourceLoader $r10;
        java.lang.StringBuffer $r0, $r1, $r3, $r17, $r19, $r20, $r21;
        int i0;
        org.apache.velocity.runtime.resource.ResourceManagerImpl r5;
        java.lang.String r2, $r4, r8, $r22;
        org.apache.velocity.exception.ParseErrorException $r14, $r25;
        java.lang.RuntimeException $r12, $r23;
        org.apache.velocity.runtime.log.Log $r13, $r15, $r18, $r24, $r26;
        org.apache.velocity.runtime.resource.ResourceCache $r6, $r11, $r28;
        org.apache.velocity.exception.ResourceNotFoundException $r16, $r27;

        r5 := @this: org.apache.velocity.runtime.resource.ResourceManagerImpl;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r8 := @parameter2: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = r5.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.resource.ResourceCache globalCache>;

        $r7 = interfaceinvoke $r6.<org.apache.velocity.runtime.resource.ResourceCache: org.apache.velocity.runtime.resource.Resource get(java.lang.Object)>($r4);

        r30 = $r7;

        if $r7 == null goto label06;

     label01:
        $z1 = virtualinvoke $r7.<org.apache.velocity.runtime.resource.Resource: boolean requiresChecking()>();

        if $z1 == 0 goto label02;

        r30 = virtualinvoke r5.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.resource.Resource refreshResource(org.apache.velocity.runtime.resource.Resource,java.lang.String)>($r7, r8);

     label02:
        goto label11;

     label03:
        $r27 := @caughtexception;

        $r28 = r5.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.resource.ResourceCache globalCache>;

        interfaceinvoke $r28.<org.apache.velocity.runtime.resource.ResourceCache: org.apache.velocity.runtime.resource.Resource remove(java.lang.Object)>($r4);

        $r29 = virtualinvoke r5.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.resource.Resource getResource(java.lang.String,int,java.lang.String)>(r2, i0, r8);

        return $r29;

     label04:
        $r25 := @caughtexception;

        $r26 = r5.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r26.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>("ResourceManager.getResource() exception", $r25);

        throw $r25;

     label05:
        $r23 := @caughtexception;

        $r24 = r5.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r24.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>("ResourceManager.getResource() exception", $r23);

        throw $r23;

     label06:
        $r9 = virtualinvoke r5.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.resource.Resource loadResource(java.lang.String,int,java.lang.String)>(r2, i0, r8);

        r30 = $r9;

        $r10 = virtualinvoke $r9.<org.apache.velocity.runtime.resource.Resource: org.apache.velocity.runtime.resource.loader.ResourceLoader getResourceLoader()>();

        $z0 = virtualinvoke $r10.<org.apache.velocity.runtime.resource.loader.ResourceLoader: boolean isCachingOn()>();

        if $z0 == 0 goto label07;

        $r11 = r5.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.resource.ResourceCache globalCache>;

        interfaceinvoke $r11.<org.apache.velocity.runtime.resource.ResourceCache: org.apache.velocity.runtime.resource.Resource put(java.lang.Object,org.apache.velocity.runtime.resource.Resource)>($r4, $r9);

     label07:
        goto label11;

     label08:
        $r16 := @caughtexception;

        $r18 = r5.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.log.Log log>;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ResourceManager : unable to find resource \'");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' in any resource loader.");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r18.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r22);

        throw $r16;

     label09:
        $r14 := @caughtexception;

        $r15 = r5.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r15.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>("ResourceManager.getResource() parse exception", $r14);

        throw $r14;

     label10:
        $r12 := @caughtexception;

        $r13 = r5.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r13.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>("ResourceManager.getResource() load exception", $r12);

        throw $r12;

     label11:
        return r30;

        catch org.apache.velocity.exception.ResourceNotFoundException from label01 to label02 with label03;
        catch org.apache.velocity.exception.ParseErrorException from label01 to label02 with label04;
        catch java.lang.RuntimeException from label01 to label02 with label05;
        catch org.apache.velocity.exception.ResourceNotFoundException from label06 to label07 with label08;
        catch org.apache.velocity.exception.ParseErrorException from label06 to label07 with label09;
        catch java.lang.RuntimeException from label06 to label07 with label10;
    }

    protected org.apache.velocity.runtime.resource.Resource createResource(java.lang.String, int)
    {
        int i0;
        org.apache.velocity.runtime.resource.ResourceManagerImpl r2;
        java.lang.String r0;
        org.apache.velocity.runtime.resource.Resource $r1;

        r2 := @this: org.apache.velocity.runtime.resource.ResourceManagerImpl;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = staticinvoke <org.apache.velocity.runtime.resource.ResourceFactory: org.apache.velocity.runtime.resource.Resource getResource(java.lang.String,int)>(r0, i0);

        return $r1;
    }

    protected org.apache.velocity.runtime.resource.Resource loadResource(java.lang.String, int, java.lang.String) throws org.apache.velocity.exception.ResourceNotFoundException, org.apache.velocity.exception.ParseErrorException
    {
        org.apache.velocity.runtime.resource.Resource $r2;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r5;
        long $l1, l2;
        org.apache.velocity.runtime.RuntimeServices $r3;
        org.apache.velocity.runtime.resource.loader.ResourceLoader $r8, r16;
        java.lang.StringBuffer $r10, $r11, $r12, $r13, $r18, $r20, $r21, $r22, $r24;
        int i0;
        org.apache.velocity.runtime.resource.ResourceManagerImpl r0;
        java.lang.String r1, r4, $r14, $r23, $r25;
        java.util.Iterator $r6;
        org.apache.velocity.runtime.log.Log $r17, $r19;
        java.lang.Object $r7, $r15;
        org.apache.velocity.exception.ResourceNotFoundException $r9, $r26;

        r0 := @this: org.apache.velocity.runtime.resource.ResourceManagerImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.resource.Resource createResource(java.lang.String,int)>(r1, i0);

        $r3 = r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.RuntimeServices rsvc>;

        virtualinvoke $r2.<org.apache.velocity.runtime.resource.Resource: void setRuntimeServices(org.apache.velocity.runtime.RuntimeServices)>($r3);

        virtualinvoke $r2.<org.apache.velocity.runtime.resource.Resource: void setName(java.lang.String)>(r1);

        virtualinvoke $r2.<org.apache.velocity.runtime.resource.Resource: void setEncoding(java.lang.String)>(r4);

        l2 = 0L;

        $r5 = r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: java.util.List resourceLoaders>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r15 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r16 = (org.apache.velocity.runtime.resource.loader.ResourceLoader) $r15;

        virtualinvoke $r2.<org.apache.velocity.runtime.resource.Resource: void setResourceLoader(org.apache.velocity.runtime.resource.loader.ResourceLoader)>(r16);

     label2:
        $z1 = virtualinvoke $r2.<org.apache.velocity.runtime.resource.Resource: boolean process()>();

        if $z1 == 0 goto label5;

        $z2 = r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: boolean logWhenFound>;

        if $z2 == 0 goto label3;

        $r17 = r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.log.Log log>;

        $z3 = virtualinvoke $r17.<org.apache.velocity.runtime.log.Log: boolean isDebugEnabled()>();

        if $z3 == 0 goto label3;

        $r19 = r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.log.Log log>;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ResourceManager : found ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" with loader ");

        $r23 = virtualinvoke r16.<org.apache.velocity.runtime.resource.loader.ResourceLoader: java.lang.String getClassName()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r19.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r25);

     label3:
        l2 = virtualinvoke r16.<org.apache.velocity.runtime.resource.loader.ResourceLoader: long getLastModified(org.apache.velocity.runtime.resource.Resource)>($r2);

     label4:
        goto label8;

     label5:
        goto label7;

     label6:
        $r26 := @caughtexception;

     label7:
        goto label1;

     label8:
        $r7 = virtualinvoke $r2.<org.apache.velocity.runtime.resource.Resource: java.lang.Object getData()>();

        if $r7 != null goto label9;

        $r9 = new org.apache.velocity.exception.ResourceNotFoundException;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unable to find resource \'");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r9.<org.apache.velocity.exception.ResourceNotFoundException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label9:
        virtualinvoke $r2.<org.apache.velocity.runtime.resource.Resource: void setLastModified(long)>(l2);

        $r8 = virtualinvoke $r2.<org.apache.velocity.runtime.resource.Resource: org.apache.velocity.runtime.resource.loader.ResourceLoader getResourceLoader()>();

        $l1 = virtualinvoke $r8.<org.apache.velocity.runtime.resource.loader.ResourceLoader: long getModificationCheckInterval()>();

        virtualinvoke $r2.<org.apache.velocity.runtime.resource.Resource: void setModificationCheckInterval(long)>($l1);

        virtualinvoke $r2.<org.apache.velocity.runtime.resource.Resource: void touch()>();

        return $r2;

        catch org.apache.velocity.exception.ResourceNotFoundException from label2 to label4 with label6;
    }

    protected org.apache.velocity.runtime.resource.Resource refreshResource(org.apache.velocity.runtime.resource.Resource, java.lang.String) throws org.apache.velocity.exception.ResourceNotFoundException, org.apache.velocity.exception.ParseErrorException
    {
        org.apache.velocity.runtime.resource.Resource $r11, $r30, r31;
        boolean $z0, $z1;
        java.util.List $r2, $r27;
        long $l1, $l4;
        org.apache.velocity.runtime.RuntimeServices $r12;
        org.apache.velocity.runtime.resource.loader.ResourceLoader $r0, $r29;
        java.lang.StringBuffer $r5, $r6, $r8, $r16, $r18, $r20, $r21, $r23, $r24, $r25;
        int $i0, $i2, $i3, $i5, $i6;
        org.apache.velocity.runtime.resource.ResourceManagerImpl r1;
        java.lang.String $r3, r4, $r7, $r9, $r10, $r13, $r14, $r19, $r22, $r26, $r28;
        org.apache.velocity.runtime.log.Log $r17;
        org.apache.velocity.runtime.resource.ResourceCache $r15;

        r1 := @this: org.apache.velocity.runtime.resource.ResourceManagerImpl;

        r31 := @parameter0: org.apache.velocity.runtime.resource.Resource;

        r4 := @parameter1: java.lang.String;

        virtualinvoke r31.<org.apache.velocity.runtime.resource.Resource: void touch()>();

        $r0 = virtualinvoke r31.<org.apache.velocity.runtime.resource.Resource: org.apache.velocity.runtime.resource.loader.ResourceLoader getResourceLoader()>();

        $r2 = r1.<org.apache.velocity.runtime.resource.ResourceManagerImpl: java.util.List resourceLoaders>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        $r27 = r1.<org.apache.velocity.runtime.resource.ResourceManagerImpl: java.util.List resourceLoaders>;

        $i5 = interfaceinvoke $r27.<java.util.List: int indexOf(java.lang.Object)>($r0);

        if $i5 <= 0 goto label1;

        $r28 = virtualinvoke r31.<org.apache.velocity.runtime.resource.Resource: java.lang.String getName()>();

        $r29 = specialinvoke r1.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.resource.loader.ResourceLoader getLoaderForResource(java.lang.String)>($r28);

        if $r0 == $r29 goto label1;

        $i6 = virtualinvoke r31.<org.apache.velocity.runtime.resource.Resource: int getType()>();

        $r30 = virtualinvoke r1.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.resource.Resource loadResource(java.lang.String,int,java.lang.String)>($r28, $i6, r4);

        return $r30;

     label1:
        $z1 = virtualinvoke r31.<org.apache.velocity.runtime.resource.Resource: boolean isSourceModified()>();

        if $z1 == 0 goto label3;

        $r3 = virtualinvoke r31.<org.apache.velocity.runtime.resource.Resource: java.lang.String getEncoding()>();

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r3, r4);

        if $z0 != 0 goto label2;

        $r17 = r1.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.log.Log log>;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Declared encoding for template \'");

        $r19 = virtualinvoke r31.<org.apache.velocity.runtime.resource.Resource: java.lang.String getName()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is different on reload. Old = \'");

        $r22 = virtualinvoke r31.<org.apache.velocity.runtime.resource.Resource: java.lang.String getEncoding()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' New = \'");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r17.<org.apache.velocity.runtime.log.Log: void warn(java.lang.Object)>($r26);

        virtualinvoke r31.<org.apache.velocity.runtime.resource.Resource: void setEncoding(java.lang.String)>(r4);

     label2:
        $l1 = virtualinvoke $r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: long getLastModified(org.apache.velocity.runtime.resource.Resource)>(r31);

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $i2 = virtualinvoke r31.<org.apache.velocity.runtime.resource.Resource: int getType()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r7 = virtualinvoke r31.<org.apache.velocity.runtime.resource.Resource: java.lang.String getName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        $r10 = virtualinvoke r31.<org.apache.velocity.runtime.resource.Resource: java.lang.String getName()>();

        $i3 = virtualinvoke r31.<org.apache.velocity.runtime.resource.Resource: int getType()>();

        $r11 = staticinvoke <org.apache.velocity.runtime.resource.ResourceFactory: org.apache.velocity.runtime.resource.Resource getResource(java.lang.String,int)>($r10, $i3);

        $r12 = r1.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.RuntimeServices rsvc>;

        virtualinvoke $r11.<org.apache.velocity.runtime.resource.Resource: void setRuntimeServices(org.apache.velocity.runtime.RuntimeServices)>($r12);

        $r13 = virtualinvoke r31.<org.apache.velocity.runtime.resource.Resource: java.lang.String getName()>();

        virtualinvoke $r11.<org.apache.velocity.runtime.resource.Resource: void setName(java.lang.String)>($r13);

        $r14 = virtualinvoke r31.<org.apache.velocity.runtime.resource.Resource: java.lang.String getEncoding()>();

        virtualinvoke $r11.<org.apache.velocity.runtime.resource.Resource: void setEncoding(java.lang.String)>($r14);

        virtualinvoke $r11.<org.apache.velocity.runtime.resource.Resource: void setResourceLoader(org.apache.velocity.runtime.resource.loader.ResourceLoader)>($r0);

        $l4 = virtualinvoke $r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: long getModificationCheckInterval()>();

        virtualinvoke $r11.<org.apache.velocity.runtime.resource.Resource: void setModificationCheckInterval(long)>($l4);

        virtualinvoke $r11.<org.apache.velocity.runtime.resource.Resource: boolean process()>();

        virtualinvoke $r11.<org.apache.velocity.runtime.resource.Resource: void setLastModified(long)>($l1);

        r31 = $r11;

        $r15 = r1.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.resource.ResourceCache globalCache>;

        interfaceinvoke $r15.<org.apache.velocity.runtime.resource.ResourceCache: org.apache.velocity.runtime.resource.Resource put(java.lang.Object,org.apache.velocity.runtime.resource.Resource)>($r9, $r11);

     label3:
        return r31;
    }

    public org.apache.velocity.runtime.resource.Resource getResource(java.lang.String, int) throws org.apache.velocity.exception.ResourceNotFoundException, org.apache.velocity.exception.ParseErrorException, java.lang.Exception
    {
        int i0;
        org.apache.velocity.runtime.resource.ResourceManagerImpl r0;
        java.lang.String r1;
        org.apache.velocity.runtime.resource.Resource $r2;

        r0 := @this: org.apache.velocity.runtime.resource.ResourceManagerImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.resource.Resource getResource(java.lang.String,int,java.lang.String)>(r1, i0, "ISO-8859-1");

        return $r2;
    }

    public java.lang.String getLoaderNameForResource(java.lang.String)
    {
        org.apache.velocity.runtime.resource.loader.ResourceLoader $r2;
        org.apache.velocity.runtime.resource.ResourceManagerImpl r0;
        java.lang.Class $r3;
        java.lang.String r1, $r4;

        r0 := @this: org.apache.velocity.runtime.resource.ResourceManagerImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: org.apache.velocity.runtime.resource.loader.ResourceLoader getLoaderForResource(java.lang.String)>(r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String toString()>();

        return $r4;
    }

    private org.apache.velocity.runtime.resource.loader.ResourceLoader getLoaderForResource(java.lang.String)
    {
        java.util.Iterator $r2;
        java.util.List $r1;
        org.apache.velocity.runtime.resource.loader.ResourceLoader r4;
        org.apache.velocity.runtime.resource.ResourceManagerImpl r0;
        java.lang.Object $r3;
        java.lang.String r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.velocity.runtime.resource.ResourceManagerImpl;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.velocity.runtime.resource.ResourceManagerImpl: java.util.List resourceLoaders>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.velocity.runtime.resource.loader.ResourceLoader) $r3;

        $z1 = virtualinvoke r4.<org.apache.velocity.runtime.resource.loader.ResourceLoader: boolean resourceExists(java.lang.String)>(r5);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <org.apache.velocity.runtime.resource.ResourceManagerImpl: java.lang.String RESOURCE_LOADER_IDENTIFIER> = "_RESOURCE_LOADER_IDENTIFIER_";

        <org.apache.velocity.runtime.resource.ResourceManagerImpl: int RESOURCE_CONTENT> = 2;

        <org.apache.velocity.runtime.resource.ResourceManagerImpl: int RESOURCE_TEMPLATE> = 1;

        return;
    }
}
