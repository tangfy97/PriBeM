public class org.apache.zookeeper.server.auth.SaslServerCallbackHandler extends java.lang.Object implements javax.security.auth.callback.CallbackHandler
{
    private static final java.lang.String USER_PREFIX;
    private static final org.slf4j.Logger LOG;
    private static final java.lang.String SYSPROP_SUPER_PASSWORD;
    private static final java.lang.String SYSPROP_REMOVE_HOST;
    private static final java.lang.String SYSPROP_REMOVE_REALM;
    private java.lang.String userName;
    private final java.util.Map credentials;

    public void <init>(javax.security.auth.login.Configuration) throws java.io.IOException
    {
        javax.security.auth.login.AppConfigurationEntry r6;
        java.util.HashMap $r1;
        java.util.Map $r5, $r7, $r16;
        int i0, $i1, i2;
        java.lang.String $r2, r13, $r14, $r15, $r18;
        javax.security.auth.login.Configuration r3;
        boolean $z0, $z1;
        java.util.Map$Entry r11;
        org.slf4j.Logger $r19;
        java.util.Iterator $r9;
        java.util.Set $r8;
        java.io.IOException $r20;
        javax.security.auth.login.AppConfigurationEntry[] $r4;
        org.apache.zookeeper.server.auth.SaslServerCallbackHandler r0;
        java.lang.Object $r10, $r12, $r17;

        r0 := @this: org.apache.zookeeper.server.auth.SaslServerCallbackHandler;

        r3 := @parameter0: javax.security.auth.login.Configuration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.zookeeper.server.auth.SaslServerCallbackHandler: java.util.Map credentials> = $r1;

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("zookeeper.sasl.serverconfig", "Server");

        $r4 = virtualinvoke r3.<javax.security.auth.login.Configuration: javax.security.auth.login.AppConfigurationEntry[] getAppConfigurationEntry(java.lang.String)>($r2);

        if $r4 != null goto label1;

        $r19 = <org.apache.zookeeper.server.auth.SaslServerCallbackHandler: org.slf4j.Logger LOG>;

        interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String)>("Could not find a \'Server\' entry in this configuration: Server cannot start.");

        $r20 = new java.io.IOException;

        specialinvoke $r20.<java.io.IOException: void <init>(java.lang.String)>("Could not find a \'Server\' entry in this configuration: Server cannot start.");

        throw $r20;

     label1:
        $r5 = r0.<org.apache.zookeeper.server.auth.SaslServerCallbackHandler: java.util.Map credentials>;

        interfaceinvoke $r5.<java.util.Map: void clear()>();

        i0 = lengthof $r4;

        i2 = 0;

     label2:
        if i2 >= i0 goto label6;

        r6 = $r4[i2];

        $r7 = virtualinvoke r6.<javax.security.auth.login.AppConfigurationEntry: java.util.Map getOptions()>();

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.util.Map$Entry) $r10;

        $r12 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        r13 = (java.lang.String) $r12;

        $z1 = virtualinvoke r13.<java.lang.String: boolean startsWith(java.lang.String)>("user_");

        if $z1 == 0 goto label4;

        $r14 = "user_";

        $i1 = virtualinvoke $r14.<java.lang.String: int length()>();

        $r15 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int)>($i1);

        $r16 = r0.<org.apache.zookeeper.server.auth.SaslServerCallbackHandler: java.util.Map credentials>;

        $r17 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18 = (java.lang.String) $r17;

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r18);

     label4:
        goto label3;

     label5:
        i2 = i2 + 1;

        goto label2;

     label6:
        return;
    }

    public void handle(javax.security.auth.callback.Callback[]) throws javax.security.auth.callback.UnsupportedCallbackException
    {
        javax.security.sasl.RealmCallback $r4;
        javax.security.auth.callback.PasswordCallback $r5;
        javax.security.auth.callback.Callback[] r0;
        javax.security.auth.callback.NameCallback $r6;
        org.apache.zookeeper.server.auth.SaslServerCallbackHandler r2;
        javax.security.sasl.AuthorizeCallback $r3;
        int i0, i1;
        javax.security.auth.callback.Callback r1;
        boolean $z0, $z1, $z2, $z3;

        r2 := @this: org.apache.zookeeper.server.auth.SaslServerCallbackHandler;

        r0 := @parameter0: javax.security.auth.callback.Callback[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        r1 = r0[i1];

        $z0 = r1 instanceof javax.security.auth.callback.NameCallback;

        if $z0 == 0 goto label2;

        $r6 = (javax.security.auth.callback.NameCallback) r1;

        specialinvoke r2.<org.apache.zookeeper.server.auth.SaslServerCallbackHandler: void handleNameCallback(javax.security.auth.callback.NameCallback)>($r6);

        goto label5;

     label2:
        $z1 = r1 instanceof javax.security.auth.callback.PasswordCallback;

        if $z1 == 0 goto label3;

        $r5 = (javax.security.auth.callback.PasswordCallback) r1;

        specialinvoke r2.<org.apache.zookeeper.server.auth.SaslServerCallbackHandler: void handlePasswordCallback(javax.security.auth.callback.PasswordCallback)>($r5);

        goto label5;

     label3:
        $z2 = r1 instanceof javax.security.sasl.RealmCallback;

        if $z2 == 0 goto label4;

        $r4 = (javax.security.sasl.RealmCallback) r1;

        specialinvoke r2.<org.apache.zookeeper.server.auth.SaslServerCallbackHandler: void handleRealmCallback(javax.security.sasl.RealmCallback)>($r4);

        goto label5;

     label4:
        $z3 = r1 instanceof javax.security.sasl.AuthorizeCallback;

        if $z3 == 0 goto label5;

        $r3 = (javax.security.sasl.AuthorizeCallback) r1;

        specialinvoke r2.<org.apache.zookeeper.server.auth.SaslServerCallbackHandler: void handleAuthorizeCallback(javax.security.sasl.AuthorizeCallback)>($r3);

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        return;
    }

    private void handleNameCallback(javax.security.auth.callback.NameCallback)
    {
        org.slf4j.Logger $r8;
        javax.security.auth.callback.NameCallback r1;
        org.apache.zookeeper.server.auth.SaslServerCallbackHandler r0;
        java.util.Map $r2;
        java.lang.Object $r4;
        java.lang.StringBuilder $r7, $r9, $r11, $r12;
        java.lang.String $r3, $r5, $r6, $r10, $r13;

        r0 := @this: org.apache.zookeeper.server.auth.SaslServerCallbackHandler;

        r1 := @parameter0: javax.security.auth.callback.NameCallback;

        $r2 = r0.<org.apache.zookeeper.server.auth.SaslServerCallbackHandler: java.util.Map credentials>;

        $r3 = virtualinvoke r1.<javax.security.auth.callback.NameCallback: java.lang.String getDefaultName()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        if $r4 != null goto label1;

        $r8 = <org.apache.zookeeper.server.auth.SaslServerCallbackHandler: org.slf4j.Logger LOG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User \'");

        $r10 = virtualinvoke r1.<javax.security.auth.callback.NameCallback: java.lang.String getDefaultName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' not found in list of DIGEST-MD5 authenticateable users.");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String)>($r13);

        return;

     label1:
        $r5 = virtualinvoke r1.<javax.security.auth.callback.NameCallback: java.lang.String getDefaultName()>();

        virtualinvoke r1.<javax.security.auth.callback.NameCallback: void setName(java.lang.String)>($r5);

        $r6 = virtualinvoke r1.<javax.security.auth.callback.NameCallback: java.lang.String getDefaultName()>();

        r0.<org.apache.zookeeper.server.auth.SaslServerCallbackHandler: java.lang.String userName> = $r6;

        return;
    }

    private void handlePasswordCallback(javax.security.auth.callback.PasswordCallback)
    {
        java.util.Map $r4, $r13;
        java.lang.String $r1, $r2, $r3, $r8, $r10, $r12, $r15, $r17, $r18;
        boolean $z0, $z1;
        javax.security.auth.callback.PasswordCallback r11;
        org.slf4j.Logger $r6;
        org.apache.zookeeper.server.auth.SaslServerCallbackHandler r0;
        char[] $r16, $r19;
        java.lang.StringBuilder $r5, $r7, $r9;
        java.lang.Object $r14;

        r0 := @this: org.apache.zookeeper.server.auth.SaslServerCallbackHandler;

        r11 := @parameter0: javax.security.auth.callback.PasswordCallback;

        $r2 = "super";

        $r1 = r0.<org.apache.zookeeper.server.auth.SaslServerCallbackHandler: java.lang.String userName>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r17 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("zookeeper.SASLAuthenticationProvider.superPassword");

        if $r17 == null goto label1;

        $r18 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("zookeeper.SASLAuthenticationProvider.superPassword");

        $r19 = virtualinvoke $r18.<java.lang.String: char[] toCharArray()>();

        virtualinvoke r11.<javax.security.auth.callback.PasswordCallback: void setPassword(char[])>($r19);

        goto label3;

     label1:
        $r4 = r0.<org.apache.zookeeper.server.auth.SaslServerCallbackHandler: java.util.Map credentials>;

        $r3 = r0.<org.apache.zookeeper.server.auth.SaslServerCallbackHandler: java.lang.String userName>;

        $z1 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $r13 = r0.<org.apache.zookeeper.server.auth.SaslServerCallbackHandler: java.util.Map credentials>;

        $r12 = r0.<org.apache.zookeeper.server.auth.SaslServerCallbackHandler: java.lang.String userName>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r12);

        $r15 = (java.lang.String) $r14;

        $r16 = virtualinvoke $r15.<java.lang.String: char[] toCharArray()>();

        virtualinvoke r11.<javax.security.auth.callback.PasswordCallback: void setPassword(char[])>($r16);

        goto label3;

     label2:
        $r6 = <org.apache.zookeeper.server.auth.SaslServerCallbackHandler: org.slf4j.Logger LOG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No password found for user: ");

        $r8 = r0.<org.apache.zookeeper.server.auth.SaslServerCallbackHandler: java.lang.String userName>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.slf4j.Logger: void warn(java.lang.String)>($r10);

     label3:
        return;
    }

    private void handleRealmCallback(javax.security.sasl.RealmCallback)
    {
        javax.security.sasl.RealmCallback r3;
        org.slf4j.Logger $r1;
        org.apache.zookeeper.server.auth.SaslServerCallbackHandler r8;
        java.lang.StringBuilder $r0, $r2, $r5;
        java.lang.String $r4, $r6, $r7;

        r8 := @this: org.apache.zookeeper.server.auth.SaslServerCallbackHandler;

        r3 := @parameter0: javax.security.sasl.RealmCallback;

        $r1 = <org.apache.zookeeper.server.auth.SaslServerCallbackHandler: org.slf4j.Logger LOG>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("client supplied realm: ");

        $r4 = virtualinvoke r3.<javax.security.sasl.RealmCallback: java.lang.String getDefaultText()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<org.slf4j.Logger: void debug(java.lang.String)>($r6);

        $r7 = virtualinvoke r3.<javax.security.sasl.RealmCallback: java.lang.String getDefaultText()>();

        virtualinvoke r3.<javax.security.sasl.RealmCallback: void setText(java.lang.String)>($r7);

        return;
    }

    private void handleAuthorizeCallback(javax.security.sasl.AuthorizeCallback)
    {
        org.apache.zookeeper.server.auth.KerberosName $r11;
        java.lang.String $r1, $r2, $r10, $r13, $r19, $r20, $r22, $r24;
        boolean $z0, $z1;
        org.slf4j.Logger $r4, $r16, $r26;
        java.io.IOException $r25;
        javax.security.sasl.AuthorizeCallback r0;
        org.apache.zookeeper.server.auth.SaslServerCallbackHandler r14;
        java.lang.StringBuilder $r3, $r5, $r6, $r7, $r8, $r9, $r12, $r15, $r17, $r18, $r21, $r23;

        r14 := @this: org.apache.zookeeper.server.auth.SaslServerCallbackHandler;

        r0 := @parameter0: javax.security.sasl.AuthorizeCallback;

        $r1 = virtualinvoke r0.<javax.security.sasl.AuthorizeCallback: java.lang.String getAuthenticationID()>();

        $r2 = virtualinvoke r0.<javax.security.sasl.AuthorizeCallback: java.lang.String getAuthorizationID()>();

        $r4 = <org.apache.zookeeper.server.auth.SaslServerCallbackHandler: org.slf4j.Logger LOG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Successfully authenticated client: authenticationID=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";  authorizationID=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>($r10);

        virtualinvoke r0.<javax.security.sasl.AuthorizeCallback: void setAuthorized(boolean)>(1);

        $r11 = new org.apache.zookeeper.server.auth.KerberosName;

        specialinvoke $r11.<org.apache.zookeeper.server.auth.KerberosName: void <init>(java.lang.String)>($r1);

     label1:
        $r12 = new java.lang.StringBuilder;

        $r13 = virtualinvoke $r11.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String getShortName()>();

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>($r13);

        $z0 = specialinvoke r14.<org.apache.zookeeper.server.auth.SaslServerCallbackHandler: boolean shouldAppendHost(org.apache.zookeeper.server.auth.KerberosName)>($r11);

        if $z0 == 0 goto label2;

        $r23 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r24 = virtualinvoke $r11.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String getHostName()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

     label2:
        $z1 = specialinvoke r14.<org.apache.zookeeper.server.auth.SaslServerCallbackHandler: boolean shouldAppendRealm(org.apache.zookeeper.server.auth.KerberosName)>($r11);

        if $z1 == 0 goto label3;

        $r21 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r22 = virtualinvoke $r11.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String getRealm()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

     label3:
        $r16 = <org.apache.zookeeper.server.auth.SaslServerCallbackHandler: org.slf4j.Logger LOG>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting authorizedID: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<org.slf4j.Logger: void info(java.lang.String)>($r19);

        $r20 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<javax.security.sasl.AuthorizeCallback: void setAuthorizedID(java.lang.String)>($r20);

     label4:
        goto label6;

     label5:
        $r25 := @caughtexception;

        $r26 = <org.apache.zookeeper.server.auth.SaslServerCallbackHandler: org.slf4j.Logger LOG>;

        interfaceinvoke $r26.<org.slf4j.Logger: void error(java.lang.String)>("Failed to set name based on Kerberos authentication rules.");

     label6:
        return;

        catch java.io.IOException from label1 to label4 with label5;
    }

    private boolean shouldAppendRealm(org.apache.zookeeper.server.auth.KerberosName)
    {
        org.apache.zookeeper.server.auth.SaslServerCallbackHandler r0;
        org.apache.zookeeper.server.auth.KerberosName r1;
        java.lang.String $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.zookeeper.server.auth.SaslServerCallbackHandler;

        r1 := @parameter0: org.apache.zookeeper.server.auth.KerberosName;

        $z0 = specialinvoke r0.<org.apache.zookeeper.server.auth.SaslServerCallbackHandler: boolean isSystemPropertyTrue(java.lang.String)>("zookeeper.kerberos.removeRealmFromPrincipal");

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke r1.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String getRealm()>();

        if $r2 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private boolean shouldAppendHost(org.apache.zookeeper.server.auth.KerberosName)
    {
        org.apache.zookeeper.server.auth.SaslServerCallbackHandler r0;
        org.apache.zookeeper.server.auth.KerberosName r1;
        java.lang.String $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.zookeeper.server.auth.SaslServerCallbackHandler;

        r1 := @parameter0: org.apache.zookeeper.server.auth.KerberosName;

        $z0 = specialinvoke r0.<org.apache.zookeeper.server.auth.SaslServerCallbackHandler: boolean isSystemPropertyTrue(java.lang.String)>("zookeeper.kerberos.removeHostFromPrincipal");

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke r1.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String getHostName()>();

        if $r2 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private boolean isSystemPropertyTrue(java.lang.String)
    {
        org.apache.zookeeper.server.auth.SaslServerCallbackHandler r3;
        java.lang.String r0, $r1, $r2;
        boolean $z0;

        r3 := @this: org.apache.zookeeper.server.auth.SaslServerCallbackHandler;

        r0 := @parameter0: java.lang.String;

        $r1 = "true";

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r0);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        <org.apache.zookeeper.server.auth.SaslServerCallbackHandler: java.lang.String SYSPROP_REMOVE_REALM> = "zookeeper.kerberos.removeRealmFromPrincipal";

        <org.apache.zookeeper.server.auth.SaslServerCallbackHandler: java.lang.String SYSPROP_REMOVE_HOST> = "zookeeper.kerberos.removeHostFromPrincipal";

        <org.apache.zookeeper.server.auth.SaslServerCallbackHandler: java.lang.String SYSPROP_SUPER_PASSWORD> = "zookeeper.SASLAuthenticationProvider.superPassword";

        <org.apache.zookeeper.server.auth.SaslServerCallbackHandler: java.lang.String USER_PREFIX> = "user_";

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/zookeeper/server/auth/SaslServerCallbackHandler;");

        <org.apache.zookeeper.server.auth.SaslServerCallbackHandler: org.slf4j.Logger LOG> = $r0;

        return;
    }
}
