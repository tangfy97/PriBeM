public abstract class org.apache.batik.ext.awt.image.SVGComposite$AlphaPreCompositeContext extends java.lang.Object implements java.awt.CompositeContext
{
    java.awt.image.ColorModel srcCM;
    java.awt.image.ColorModel dstCM;

    void <init>(java.awt.image.ColorModel, java.awt.image.ColorModel)
    {
        org.apache.batik.ext.awt.image.SVGComposite$AlphaPreCompositeContext r0;
        java.awt.image.ColorModel r1, r2;

        r0 := @this: org.apache.batik.ext.awt.image.SVGComposite$AlphaPreCompositeContext;

        r1 := @parameter0: java.awt.image.ColorModel;

        r2 := @parameter1: java.awt.image.ColorModel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.ext.awt.image.SVGComposite$AlphaPreCompositeContext: java.awt.image.ColorModel srcCM> = r1;

        r0.<org.apache.batik.ext.awt.image.SVGComposite$AlphaPreCompositeContext: java.awt.image.ColorModel dstCM> = r2;

        return;
    }

    public void dispose()
    {
        org.apache.batik.ext.awt.image.SVGComposite$AlphaPreCompositeContext r0;

        r0 := @this: org.apache.batik.ext.awt.image.SVGComposite$AlphaPreCompositeContext;

        r0.<org.apache.batik.ext.awt.image.SVGComposite$AlphaPreCompositeContext: java.awt.image.ColorModel srcCM> = null;

        r0.<org.apache.batik.ext.awt.image.SVGComposite$AlphaPreCompositeContext: java.awt.image.ColorModel dstCM> = null;

        return;
    }

    protected abstract void precompose(java.awt.image.Raster, java.awt.image.Raster, java.awt.image.WritableRaster);

    public void compose(java.awt.image.Raster, java.awt.image.Raster, java.awt.image.WritableRaster)
    {
        java.awt.image.Raster r3, r4;
        boolean $z0, $z1, $z2, $z3;
        org.apache.batik.ext.awt.image.SVGComposite$AlphaPreCompositeContext r0;
        java.awt.image.ColorModel $r1, $r2, $r6, $r7, $r10, $r12, r14, r15;
        java.awt.image.WritableRaster r5, $r8, $r9, $r11, $r13;

        r0 := @this: org.apache.batik.ext.awt.image.SVGComposite$AlphaPreCompositeContext;

        r3 := @parameter0: java.awt.image.Raster;

        r4 := @parameter1: java.awt.image.Raster;

        r5 := @parameter2: java.awt.image.WritableRaster;

        r14 = r0.<org.apache.batik.ext.awt.image.SVGComposite$AlphaPreCompositeContext: java.awt.image.ColorModel srcCM>;

        $r1 = r0.<org.apache.batik.ext.awt.image.SVGComposite$AlphaPreCompositeContext: java.awt.image.ColorModel srcCM>;

        $z0 = virtualinvoke $r1.<java.awt.image.ColorModel: boolean isAlphaPremultiplied()>();

        if $z0 != 0 goto label1;

        $r13 = (java.awt.image.WritableRaster) r3;

        $r12 = r0.<org.apache.batik.ext.awt.image.SVGComposite$AlphaPreCompositeContext: java.awt.image.ColorModel srcCM>;

        r14 = staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: java.awt.image.ColorModel coerceData(java.awt.image.WritableRaster,java.awt.image.ColorModel,boolean)>($r13, $r12, 1);

     label1:
        r15 = r0.<org.apache.batik.ext.awt.image.SVGComposite$AlphaPreCompositeContext: java.awt.image.ColorModel dstCM>;

        $r2 = r0.<org.apache.batik.ext.awt.image.SVGComposite$AlphaPreCompositeContext: java.awt.image.ColorModel dstCM>;

        $z1 = virtualinvoke $r2.<java.awt.image.ColorModel: boolean isAlphaPremultiplied()>();

        if $z1 != 0 goto label2;

        $r11 = (java.awt.image.WritableRaster) r4;

        $r10 = r0.<org.apache.batik.ext.awt.image.SVGComposite$AlphaPreCompositeContext: java.awt.image.ColorModel dstCM>;

        r15 = staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: java.awt.image.ColorModel coerceData(java.awt.image.WritableRaster,java.awt.image.ColorModel,boolean)>($r11, $r10, 1);

     label2:
        virtualinvoke r0.<org.apache.batik.ext.awt.image.SVGComposite$AlphaPreCompositeContext: void precompose(java.awt.image.Raster,java.awt.image.Raster,java.awt.image.WritableRaster)>(r3, r4, r5);

        $r6 = r0.<org.apache.batik.ext.awt.image.SVGComposite$AlphaPreCompositeContext: java.awt.image.ColorModel srcCM>;

        $z2 = virtualinvoke $r6.<java.awt.image.ColorModel: boolean isAlphaPremultiplied()>();

        if $z2 != 0 goto label3;

        $r9 = (java.awt.image.WritableRaster) r3;

        staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: java.awt.image.ColorModel coerceData(java.awt.image.WritableRaster,java.awt.image.ColorModel,boolean)>($r9, r14, 0);

     label3:
        $r7 = r0.<org.apache.batik.ext.awt.image.SVGComposite$AlphaPreCompositeContext: java.awt.image.ColorModel dstCM>;

        $z3 = virtualinvoke $r7.<java.awt.image.ColorModel: boolean isAlphaPremultiplied()>();

        if $z3 != 0 goto label4;

        staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: java.awt.image.ColorModel coerceData(java.awt.image.WritableRaster,java.awt.image.ColorModel,boolean)>(r5, r15, 0);

        if r4 == r5 goto label4;

        $r8 = (java.awt.image.WritableRaster) r4;

        staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: java.awt.image.ColorModel coerceData(java.awt.image.WritableRaster,java.awt.image.ColorModel,boolean)>($r8, r15, 0);

     label4:
        return;
    }
}
