public class tdb.CmdRewriteIndex extends java.lang.Object
{

    public void <init>()
    {
        tdb.CmdRewriteIndex r0;

        r0 := @this: tdb.CmdRewriteIndex;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static transient void main(java.lang.String[])
    {
        com.hp.hpl.jena.tdb.base.file.Location $r29, $r30;
        com.hp.hpl.jena.tdb.index.RangeIndex $r10;
        byte b3;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTree $r16, $r17;
        boolean $z0, $z1;
        com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams $r11;
        com.hp.hpl.jena.tdb.base.record.RecordFactory $r12;
        java.lang.StringBuilder $r22, $r24, $r25, $r28;
        java.lang.Object[] $r8;
        java.lang.String[] r0;
        com.hp.hpl.jena.tdb.base.block.BlockMgr $r13, $r14;
        com.hp.hpl.jena.tdb.base.file.FileSet $r31;
        int $i0, $i1, $i2, $i5, $i7, $i9;
        java.lang.String $r2, $r4, $r5, $r6, $r23, $r26, $r27;
        java.io.PrintStream $r9, $r18, $r19, $r21;
        java.util.Iterator $r15;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 == 3 goto label1;

        $r21 = <java.lang.System: java.io.PrintStream err>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Usage: ");

        $r23 = staticinvoke <com.hp.hpl.jena.sparql.util.Utils: java.lang.String classShortName(java.lang.Class)>(class "Ltdb/CmdRewriteIndex;");

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" SrcLocation DstLocation IndexName");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r26);

        staticinvoke <java.lang.System: void exit(int)>(1);

     label1:
        $r29 = new com.hp.hpl.jena.tdb.base.file.Location;

        $r2 = r0[0];

        specialinvoke $r29.<com.hp.hpl.jena.tdb.base.file.Location: void <init>(java.lang.String)>($r2);

        $r30 = new com.hp.hpl.jena.tdb.base.file.Location;

        $r4 = r0[1];

        specialinvoke $r30.<com.hp.hpl.jena.tdb.base.file.Location: void <init>(java.lang.String)>($r4);

        $r27 = r0[2];

        $r5 = r0[1];

        $z0 = staticinvoke <org.apache.jena.atlas.lib.FileOps: boolean exists(java.lang.String)>($r5);

        if $z0 != 0 goto label2;

        $r19 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>("Destination directory does not exist");

        staticinvoke <java.lang.System: void exit(int)>(1);

     label2:
        $r6 = virtualinvoke $r30.<com.hp.hpl.jena.tdb.base.file.Location: java.lang.String getPath(java.lang.String,java.lang.String)>($r27, "idn");

        $z1 = staticinvoke <org.apache.jena.atlas.lib.FileOps: boolean exists(java.lang.String)>($r6);

        if $z1 == 0 goto label3;

        $r18 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("Destination contains an index of that name");

        staticinvoke <java.lang.System: void exit(int)>(1);

     label3:
        $r31 = new com.hp.hpl.jena.tdb.base.file.FileSet;

        specialinvoke $r31.<com.hp.hpl.jena.tdb.base.file.FileSet: void <init>(com.hp.hpl.jena.tdb.base.file.Location,java.lang.String)>($r30, $r27);

        $i1 = virtualinvoke $r27.<java.lang.String: int length()>();

        if $i1 != 3 goto label4;

        b3 = 24;

        goto label6;

     label4:
        $i2 = virtualinvoke $r27.<java.lang.String: int length()>();

        if $i2 != 4 goto label5;

        b3 = 32;

        goto label6;

     label5:
        $r9 = <java.lang.System: java.io.PrintStream err>;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = $r27;

        virtualinvoke $r9.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Can\'t determine record size for %s\n", $r8);

        return;

     label6:
        $i5 = (int) -1;

        $r10 = staticinvoke <com.hp.hpl.jena.tdb.sys.SetupTDB: com.hp.hpl.jena.tdb.index.RangeIndex makeRangeIndex(com.hp.hpl.jena.tdb.base.file.Location,java.lang.String,int,int,int,int)>($r29, $r27, b3, 0, 0, $i5);

        $r17 = (com.hp.hpl.jena.tdb.index.bplustree.BPlusTree) $r10;

        $r11 = virtualinvoke $r17.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams getParams()>();

        $r12 = virtualinvoke $r17.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: com.hp.hpl.jena.tdb.base.record.RecordFactory getRecordFactory()>();

        $i7 = (int) -1;

        $r13 = staticinvoke <com.hp.hpl.jena.tdb.base.block.BlockMgrFactory: com.hp.hpl.jena.tdb.base.block.BlockMgr create(com.hp.hpl.jena.tdb.base.file.FileSet,java.lang.String,int,int,int)>($r31, "idn", 8192, 0, $i7);

        $i9 = (int) -1;

        $r14 = staticinvoke <com.hp.hpl.jena.tdb.base.block.BlockMgrFactory: com.hp.hpl.jena.tdb.base.block.BlockMgr create(com.hp.hpl.jena.tdb.base.file.FileSet,java.lang.String,int,int,int)>($r31, "dat", 8192, 0, $i9);

        $r15 = virtualinvoke $r17.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: java.util.Iterator iterator()>();

        $r16 = staticinvoke <com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter: com.hp.hpl.jena.tdb.index.bplustree.BPlusTree packIntoBPlusTree(java.util.Iterator,com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeParams,com.hp.hpl.jena.tdb.base.record.RecordFactory,com.hp.hpl.jena.tdb.base.block.BlockMgr,com.hp.hpl.jena.tdb.base.block.BlockMgr)>($r15, $r11, $r12, $r13, $r14);

        if $r16 != null goto label7;

        return;

     label7:
        virtualinvoke $r16.<com.hp.hpl.jena.tdb.index.bplustree.BPlusTree: void close()>();

        return;
    }
}
