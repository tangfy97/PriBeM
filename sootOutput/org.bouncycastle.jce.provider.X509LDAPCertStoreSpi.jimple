public class org.bouncycastle.jce.provider.X509LDAPCertStoreSpi extends java.security.cert.CertStoreSpi
{
    private org.bouncycastle.jce.X509LDAPCertStoreParameters params;
    private static java.lang.String LDAP_PROVIDER;
    private static java.lang.String REFERRALS_IGNORE;
    private static final java.lang.String SEARCH_SECURITY_LEVEL;
    private static final java.lang.String URL_CONTEXT_PREFIX;

    public void <init>(java.security.cert.CertStoreParameters) throws java.security.InvalidAlgorithmParameterException
    {
        java.security.InvalidAlgorithmParameterException $r3;
        java.security.cert.CertStoreParameters r1;
        java.lang.String $r6, $r10, $r13, $r15;
        boolean $z0;
        org.bouncycastle.jce.X509LDAPCertStoreParameters $r2;
        org.bouncycastle.jce.provider.X509LDAPCertStoreSpi r0;
        java.lang.StringBuilder $r4, $r7, $r8, $r11, $r12, $r14;
        java.lang.Class $r5, $r9;

        r0 := @this: org.bouncycastle.jce.provider.X509LDAPCertStoreSpi;

        r1 := @parameter0: java.security.cert.CertStoreParameters;

        specialinvoke r0.<java.security.cert.CertStoreSpi: void <init>(java.security.cert.CertStoreParameters)>(r1);

        $z0 = r1 instanceof org.bouncycastle.jce.X509LDAPCertStoreParameters;

        if $z0 != 0 goto label1;

        $r3 = new java.security.InvalidAlgorithmParameterException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = class "Lorg/bouncycastle/jce/provider/X509LDAPCertStoreSpi;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": parameter must be a ");

        $r9 = class "Lorg/bouncycastle/jce/X509LDAPCertStoreParameters;";

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" object\n");

        $r13 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r15);

        throw $r3;

     label1:
        $r2 = (org.bouncycastle.jce.X509LDAPCertStoreParameters) r1;

        r0.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: org.bouncycastle.jce.X509LDAPCertStoreParameters params> = $r2;

        return;
    }

    private javax.naming.directory.DirContext connectLDAP() throws javax.naming.NamingException
    {
        org.bouncycastle.jce.provider.X509LDAPCertStoreSpi r2;
        java.util.Properties $r0;
        org.bouncycastle.jce.X509LDAPCertStoreParameters $r3;
        java.lang.String $r1, $r4, $r5;
        javax.naming.directory.InitialDirContext $r6;

        r2 := @this: org.bouncycastle.jce.provider.X509LDAPCertStoreSpi;

        $r0 = new java.util.Properties;

        specialinvoke $r0.<java.util.Properties: void <init>()>();

        $r1 = <org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: java.lang.String LDAP_PROVIDER>;

        virtualinvoke $r0.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("java.naming.factory.initial", $r1);

        virtualinvoke $r0.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("java.naming.batchsize", "0");

        $r3 = r2.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: org.bouncycastle.jce.X509LDAPCertStoreParameters params>;

        $r4 = virtualinvoke $r3.<org.bouncycastle.jce.X509LDAPCertStoreParameters: java.lang.String getLdapURL()>();

        virtualinvoke $r0.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("java.naming.provider.url", $r4);

        virtualinvoke $r0.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("java.naming.factory.url.pkgs", "com.sun.jndi.url");

        $r5 = <org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: java.lang.String REFERRALS_IGNORE>;

        virtualinvoke $r0.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("java.naming.referral", $r5);

        virtualinvoke $r0.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("java.naming.security.authentication", "none");

        $r6 = new javax.naming.directory.InitialDirContext;

        specialinvoke $r6.<javax.naming.directory.InitialDirContext: void <init>(java.util.Hashtable)>($r0);

        return $r6;
    }

    private java.lang.String parseDN(java.lang.String, java.lang.String)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, i11, $i12, $i15, $i16, $i18, $i19;
        java.lang.String r0, $r1, r2, $r3, $r4, $r5, $r6, r8;
        boolean $z0, $z1;
        char $c6, $c13;
        org.bouncycastle.jce.provider.X509LDAPCertStoreSpi r7;

        r7 := @this: org.bouncycastle.jce.provider.X509LDAPCertStoreSpi;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>($r3);

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        $i2 = $i0 + $i1;

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i2);

        $i3 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>(44);

        i11 = $i3;

        $i15 = (int) -1;

        if $i3 != $i15 goto label1;

        i11 = virtualinvoke $r4.<java.lang.String: int length()>();

     label1:
        $i12 = i11 - 1;

        $c13 = virtualinvoke $r4.<java.lang.String: char charAt(int)>($i12);

        $i16 = (int) $c13;

        if $i16 != 92 goto label2;

        $i9 = i11 + 1;

        $i10 = virtualinvoke $r4.<java.lang.String: int indexOf(int,int)>(44, $i9);

        i11 = $i10;

        $i18 = (int) -1;

        if $i10 != $i18 goto label1;

        i11 = virtualinvoke $r4.<java.lang.String: int length()>();

        goto label1;

     label2:
        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, i11);

        $i4 = virtualinvoke $r5.<java.lang.String: int indexOf(int)>(61);

        $i5 = $i4 + 1;

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int)>($i5);

        r8 = $r6;

        $c6 = virtualinvoke $r6.<java.lang.String: char charAt(int)>(0);

        $i19 = (int) $c6;

        if $i19 != 32 goto label3;

        r8 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>(1);

     label3:
        $z0 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("\"");

        if $z0 == 0 goto label4;

        r8 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int)>(1);

     label4:
        $z1 = virtualinvoke r8.<java.lang.String: boolean endsWith(java.lang.String)>("\"");

        if $z1 == 0 goto label5;

        $i7 = virtualinvoke r8.<java.lang.String: int length()>();

        $i8 = $i7 - 1;

        r8 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, $i8);

     label5:
        return r8;
    }

    public java.util.Collection engineGetCertificates(java.security.cert.CertSelector) throws java.security.cert.CertStoreException
    {
        byte[] $r10, r11, $r20, $r21, $r24, $r26;
        java.security.cert.CertificateFactory $r8;
        java.io.ByteArrayInputStream $r18;
        boolean $z0, $z1, $z2, $z3;
        java.security.cert.X509CertSelector r1;
        java.util.Set $r4, $r5, $r6;
        org.bouncycastle.asn1.x509.CertificatePair $r15;
        java.lang.Exception $r28, $r34;
        java.security.cert.CertStoreException $r27, $r29;
        java.security.cert.Certificate $r22;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r16, $r17, $r23, $r25;
        java.lang.StringBuilder $r30, $r31, $r32;
        org.bouncycastle.asn1.DERObject $r14;
        org.bouncycastle.asn1.ASN1InputStream $r13;
        java.util.ArrayList $r12;
        java.util.HashSet $r2;
        int $i0;
        java.lang.String $r33;
        java.util.Iterator $r7, $r37;
        java.io.IOException $r36;
        java.lang.IllegalArgumentException $r35;
        java.security.cert.CertSelector r0;
        org.bouncycastle.jce.provider.X509LDAPCertStoreSpi r3;
        java.lang.Object $r9, $r19;

        r3 := @this: org.bouncycastle.jce.provider.X509LDAPCertStoreSpi;

        r0 := @parameter0: java.security.cert.CertSelector;

        $z0 = r0 instanceof java.security.cert.X509CertSelector;

        if $z0 != 0 goto label01;

        $r27 = new java.security.cert.CertStoreException;

        specialinvoke $r27.<java.security.cert.CertStoreException: void <init>(java.lang.String)>("selector is not a X509CertSelector");

        throw $r27;

     label01:
        r1 = (java.security.cert.X509CertSelector) r0;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        $r4 = specialinvoke r3.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: java.util.Set getEndCertificates(java.security.cert.X509CertSelector)>(r1);

        $r5 = specialinvoke r3.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: java.util.Set getCACertificates(java.security.cert.X509CertSelector)>(r1);

        interfaceinvoke $r4.<java.util.Set: boolean addAll(java.util.Collection)>($r5);

        $r6 = specialinvoke r3.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: java.util.Set getCrossCertificates(java.security.cert.X509CertSelector)>(r1);

        interfaceinvoke $r4.<java.util.Set: boolean addAll(java.util.Collection)>($r6);

        $r7 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $r8 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.lang.String)>("X.509", "BC");

     label03:
        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label17;

        $r9 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (byte[]) $r9;

        r11 = (byte[]) $r10;

        if r11 == null goto label03;

        $i0 = lengthof r11;

        if $i0 != 0 goto label04;

        goto label03;

     label04:
        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r11);

     label05:
        $r13 = new org.bouncycastle.asn1.ASN1InputStream;

        specialinvoke $r13.<org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>(r11);

        $r14 = virtualinvoke $r13.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        $r15 = staticinvoke <org.bouncycastle.asn1.x509.CertificatePair: org.bouncycastle.asn1.x509.CertificatePair getInstance(java.lang.Object)>($r14);

        interfaceinvoke $r12.<java.util.List: void clear()>();

        $r16 = virtualinvoke $r15.<org.bouncycastle.asn1.x509.CertificatePair: org.bouncycastle.asn1.x509.X509CertificateStructure getForward()>();

        if $r16 == null goto label06;

        $r25 = virtualinvoke $r15.<org.bouncycastle.asn1.x509.CertificatePair: org.bouncycastle.asn1.x509.X509CertificateStructure getForward()>();

        $r26 = virtualinvoke $r25.<org.bouncycastle.asn1.x509.X509CertificateStructure: byte[] getEncoded()>();

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r26);

     label06:
        $r17 = virtualinvoke $r15.<org.bouncycastle.asn1.x509.CertificatePair: org.bouncycastle.asn1.x509.X509CertificateStructure getReverse()>();

        if $r17 == null goto label07;

        $r23 = virtualinvoke $r15.<org.bouncycastle.asn1.x509.CertificatePair: org.bouncycastle.asn1.x509.X509CertificateStructure getReverse()>();

        $r24 = virtualinvoke $r23.<org.bouncycastle.asn1.x509.X509CertificateStructure: byte[] getEncoded()>();

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r24);

     label07:
        goto label10;

     label08:
        $r36 := @caughtexception;

        goto label10;

     label09:
        $r35 := @caughtexception;

     label10:
        $r37 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z3 = interfaceinvoke $r37.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label16;

        $r18 = new java.io.ByteArrayInputStream;

        $r19 = interfaceinvoke $r37.<java.util.Iterator: java.lang.Object next()>();

        $r20 = (byte[]) $r19;

        $r21 = (byte[]) $r20;

        specialinvoke $r18.<java.io.ByteArrayInputStream: void <init>(byte[])>($r21);

     label12:
        $r22 = virtualinvoke $r8.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r18);

        $z1 = virtualinvoke r1.<java.security.cert.X509CertSelector: boolean match(java.security.cert.Certificate)>($r22);

        if $z1 == 0 goto label13;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r22);

     label13:
        goto label15;

     label14:
        $r34 := @caughtexception;

     label15:
        goto label11;

     label16:
        goto label03;

     label17:
        goto label19;

     label18:
        $r28 := @caughtexception;

        $r29 = new java.security.cert.CertStoreException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("certificate cannot be constructed from LDAP result: ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.security.cert.CertStoreException: void <init>(java.lang.String)>($r33);

        throw $r29;

     label19:
        return $r2;

        catch java.io.IOException from label05 to label07 with label08;
        catch java.lang.IllegalArgumentException from label05 to label07 with label09;
        catch java.lang.Exception from label12 to label13 with label14;
        catch java.lang.Exception from label02 to label17 with label18;
    }

    private java.util.Set certSubjectSerialSearch(java.security.cert.X509CertSelector, java.lang.String[], java.lang.String, java.lang.String) throws java.security.cert.CertStoreException
    {
        java.security.cert.X509Certificate $r19, $r21, $r24, $r34;
        byte[] $r2, $r3, $r18;
        java.math.BigInteger $r22;
        java.security.cert.X509CertSelector r1;
        org.bouncycastle.jce.X509LDAPCertStoreParameters $r7, $r9;
        java.util.Set $r16, $r25, $r42;
        java.security.cert.CertStoreException $r27;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r28, $r29, $r30, $r37, $r38, $r39, $r40;
        javax.security.auth.x500.X500Principal $r17, $r20;
        java.lang.String[] r6;
        java.util.HashSet $r0;
        java.lang.String r5, $r8, $r10, $r15, $r23, $r31, r32, r33, r35, $r36, $r41;
        java.io.IOException $r26;
        org.bouncycastle.jce.provider.X509LDAPCertStoreSpi r4;

        r4 := @this: org.bouncycastle.jce.provider.X509LDAPCertStoreSpi;

        r1 := @parameter0: java.security.cert.X509CertSelector;

        r6 := @parameter1: java.lang.String[];

        r32 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

     label01:
        $r2 = virtualinvoke r1.<java.security.cert.X509CertSelector: byte[] getSubjectAsBytes()>();

        if $r2 != null goto label02;

        $r23 = virtualinvoke r1.<java.security.cert.X509CertSelector: java.lang.String getSubjectAsString()>();

        if $r23 != null goto label02;

        $r24 = virtualinvoke r1.<java.security.cert.X509CertSelector: java.security.cert.X509Certificate getCertificate()>();

        if $r24 == null goto label07;

     label02:
        r33 = null;

        $r34 = virtualinvoke r1.<java.security.cert.X509CertSelector: java.security.cert.X509Certificate getCertificate()>();

        if $r34 == null goto label03;

        $r19 = virtualinvoke r1.<java.security.cert.X509CertSelector: java.security.cert.X509Certificate getCertificate()>();

        $r20 = virtualinvoke $r19.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        r35 = virtualinvoke $r20.<javax.security.auth.x500.X500Principal: java.lang.String getName(java.lang.String)>("RFC1779");

        $r21 = virtualinvoke r1.<java.security.cert.X509CertSelector: java.security.cert.X509Certificate getCertificate()>();

        $r22 = virtualinvoke $r21.<java.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>();

        r33 = virtualinvoke $r22.<java.math.BigInteger: java.lang.String toString()>();

        goto label05;

     label03:
        $r3 = virtualinvoke r1.<java.security.cert.X509CertSelector: byte[] getSubjectAsBytes()>();

        if $r3 == null goto label04;

        $r17 = new javax.security.auth.x500.X500Principal;

        $r18 = virtualinvoke r1.<java.security.cert.X509CertSelector: byte[] getSubjectAsBytes()>();

        specialinvoke $r17.<javax.security.auth.x500.X500Principal: void <init>(byte[])>($r18);

        r35 = virtualinvoke $r17.<javax.security.auth.x500.X500Principal: java.lang.String getName(java.lang.String)>("RFC1779");

        goto label05;

     label04:
        r35 = virtualinvoke r1.<java.security.cert.X509CertSelector: java.lang.String getSubjectAsString()>();

     label05:
        $r36 = specialinvoke r4.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: java.lang.String parseDN(java.lang.String,java.lang.String)>(r35, r5);

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        $r42 = specialinvoke r4.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: java.util.Set search(java.lang.String,java.lang.String,java.lang.String[])>(r32, $r41, r6);

        interfaceinvoke $r0.<java.util.Set: boolean addAll(java.util.Collection)>($r42);

        if r33 == null goto label06;

        $r7 = r4.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: org.bouncycastle.jce.X509LDAPCertStoreParameters params>;

        $r8 = virtualinvoke $r7.<org.bouncycastle.jce.X509LDAPCertStoreParameters: java.lang.String getSearchForSerialNumberIn()>();

        if $r8 == null goto label06;

        $r9 = r4.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: org.bouncycastle.jce.X509LDAPCertStoreParameters params>;

        $r10 = virtualinvoke $r9.<org.bouncycastle.jce.X509LDAPCertStoreParameters: java.lang.String getSearchForSerialNumberIn()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = specialinvoke r4.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: java.util.Set search(java.lang.String,java.lang.String,java.lang.String[])>($r10, $r15, r6);

        interfaceinvoke $r0.<java.util.Set: boolean addAll(java.util.Collection)>($r16);

     label06:
        goto label08;

     label07:
        $r25 = specialinvoke r4.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: java.util.Set search(java.lang.String,java.lang.String,java.lang.String[])>(r32, "*", r6);

        interfaceinvoke $r0.<java.util.Set: boolean addAll(java.util.Collection)>($r25);

     label08:
        goto label10;

     label09:
        $r26 := @caughtexception;

        $r27 = new java.security.cert.CertStoreException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception processing selector: ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.security.cert.CertStoreException: void <init>(java.lang.String)>($r31);

        throw $r27;

     label10:
        return $r0;

        catch java.io.IOException from label01 to label08 with label09;
    }

    private java.util.Set getEndCertificates(java.security.cert.X509CertSelector) throws java.security.cert.CertStoreException
    {
        org.bouncycastle.jce.X509LDAPCertStoreParameters $r2, $r4, $r6;
        java.security.cert.X509CertSelector r8;
        java.util.Set $r9;
        java.lang.String[] $r0;
        org.bouncycastle.jce.provider.X509LDAPCertStoreSpi r1;
        java.lang.String $r3, $r5, $r7;

        r1 := @this: org.bouncycastle.jce.provider.X509LDAPCertStoreSpi;

        r8 := @parameter0: java.security.cert.X509CertSelector;

        $r0 = newarray (java.lang.String)[1];

        $r2 = r1.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: org.bouncycastle.jce.X509LDAPCertStoreParameters params>;

        $r3 = virtualinvoke $r2.<org.bouncycastle.jce.X509LDAPCertStoreParameters: java.lang.String getUserCertificateAttribute()>();

        $r0[0] = $r3;

        $r4 = r1.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: org.bouncycastle.jce.X509LDAPCertStoreParameters params>;

        $r5 = virtualinvoke $r4.<org.bouncycastle.jce.X509LDAPCertStoreParameters: java.lang.String getLdapUserCertificateAttributeName()>();

        $r6 = r1.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: org.bouncycastle.jce.X509LDAPCertStoreParameters params>;

        $r7 = virtualinvoke $r6.<org.bouncycastle.jce.X509LDAPCertStoreParameters: java.lang.String getUserCertificateSubjectAttributeName()>();

        $r9 = specialinvoke r1.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: java.util.Set certSubjectSerialSearch(java.security.cert.X509CertSelector,java.lang.String[],java.lang.String,java.lang.String)>(r8, $r0, $r5, $r7);

        return $r9;
    }

    private java.util.Set getCACertificates(java.security.cert.X509CertSelector) throws java.security.cert.CertStoreException
    {
        org.bouncycastle.jce.X509LDAPCertStoreParameters $r2, $r4, $r6;
        java.security.cert.X509CertSelector r8;
        java.util.Set $r9, $r10;
        java.lang.String[] $r0;
        org.bouncycastle.jce.provider.X509LDAPCertStoreSpi r1;
        java.lang.String $r3, $r5, $r7;
        boolean $z0;

        r1 := @this: org.bouncycastle.jce.provider.X509LDAPCertStoreSpi;

        r8 := @parameter0: java.security.cert.X509CertSelector;

        $r0 = newarray (java.lang.String)[1];

        $r2 = r1.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: org.bouncycastle.jce.X509LDAPCertStoreParameters params>;

        $r3 = virtualinvoke $r2.<org.bouncycastle.jce.X509LDAPCertStoreParameters: java.lang.String getCACertificateAttribute()>();

        $r0[0] = $r3;

        $r4 = r1.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: org.bouncycastle.jce.X509LDAPCertStoreParameters params>;

        $r5 = virtualinvoke $r4.<org.bouncycastle.jce.X509LDAPCertStoreParameters: java.lang.String getLdapCACertificateAttributeName()>();

        $r6 = r1.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: org.bouncycastle.jce.X509LDAPCertStoreParameters params>;

        $r7 = virtualinvoke $r6.<org.bouncycastle.jce.X509LDAPCertStoreParameters: java.lang.String getCACertificateSubjectAttributeName()>();

        $r9 = specialinvoke r1.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: java.util.Set certSubjectSerialSearch(java.security.cert.X509CertSelector,java.lang.String[],java.lang.String,java.lang.String)>(r8, $r0, $r5, $r7);

        $z0 = interfaceinvoke $r9.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r10 = specialinvoke r1.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: java.util.Set search(java.lang.String,java.lang.String,java.lang.String[])>(null, "*", $r0);

        interfaceinvoke $r9.<java.util.Set: boolean addAll(java.util.Collection)>($r10);

     label1:
        return $r9;
    }

    private java.util.Set getCrossCertificates(java.security.cert.X509CertSelector) throws java.security.cert.CertStoreException
    {
        org.bouncycastle.jce.X509LDAPCertStoreParameters $r2, $r4, $r6;
        java.security.cert.X509CertSelector r8;
        java.util.Set $r9, $r10;
        java.lang.String[] $r0;
        org.bouncycastle.jce.provider.X509LDAPCertStoreSpi r1;
        java.lang.String $r3, $r5, $r7;
        boolean $z0;

        r1 := @this: org.bouncycastle.jce.provider.X509LDAPCertStoreSpi;

        r8 := @parameter0: java.security.cert.X509CertSelector;

        $r0 = newarray (java.lang.String)[1];

        $r2 = r1.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: org.bouncycastle.jce.X509LDAPCertStoreParameters params>;

        $r3 = virtualinvoke $r2.<org.bouncycastle.jce.X509LDAPCertStoreParameters: java.lang.String getCrossCertificateAttribute()>();

        $r0[0] = $r3;

        $r4 = r1.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: org.bouncycastle.jce.X509LDAPCertStoreParameters params>;

        $r5 = virtualinvoke $r4.<org.bouncycastle.jce.X509LDAPCertStoreParameters: java.lang.String getLdapCrossCertificateAttributeName()>();

        $r6 = r1.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: org.bouncycastle.jce.X509LDAPCertStoreParameters params>;

        $r7 = virtualinvoke $r6.<org.bouncycastle.jce.X509LDAPCertStoreParameters: java.lang.String getCrossCertificateSubjectAttributeName()>();

        $r9 = specialinvoke r1.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: java.util.Set certSubjectSerialSearch(java.security.cert.X509CertSelector,java.lang.String[],java.lang.String,java.lang.String)>(r8, $r0, $r5, $r7);

        $z0 = interfaceinvoke $r9.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r10 = specialinvoke r1.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: java.util.Set search(java.lang.String,java.lang.String,java.lang.String[])>(null, "*", $r0);

        interfaceinvoke $r9.<java.util.Set: boolean addAll(java.util.Collection)>($r10);

     label1:
        return $r9;
    }

    public java.util.Collection engineGetCRLs(java.security.cert.CRLSelector) throws java.security.cert.CertStoreException
    {
        byte[] $r17, $r18, $r26, $r27;
        java.security.cert.CertificateFactory $r14;
        java.io.ByteArrayInputStream $r15;
        java.security.cert.X509CRLSelector r5;
        java.security.cert.CRL $r19;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.bouncycastle.jce.X509LDAPCertStoreParameters $r2, $r7, $r23, $r35;
        java.util.Collection $r10, $r20;
        java.util.Set $r11, $r12, $r34;
        java.lang.Exception $r39;
        java.security.cert.CertStoreException $r38, $r40;
        java.lang.StringBuilder $r29, $r30, $r31, $r32, $r41, $r42, $r43;
        javax.security.auth.x500.X500Principal $r25;
        java.lang.String[] $r0;
        java.util.HashSet $r6, $r9;
        java.security.cert.CRLSelector r4;
        java.lang.String $r3, $r8, $r24, $r28, $r33, $r36, $r37, $r44, r45;
        java.util.Iterator $r13, $r21;
        org.bouncycastle.jce.provider.X509LDAPCertStoreSpi r1;
        java.lang.Object $r16, $r22;

        r1 := @this: org.bouncycastle.jce.provider.X509LDAPCertStoreSpi;

        r4 := @parameter0: java.security.cert.CRLSelector;

        $r0 = newarray (java.lang.String)[1];

        $r2 = r1.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: org.bouncycastle.jce.X509LDAPCertStoreParameters params>;

        $r3 = virtualinvoke $r2.<org.bouncycastle.jce.X509LDAPCertStoreParameters: java.lang.String getCertificateRevocationListAttribute()>();

        $r0[0] = $r3;

        $z0 = r4 instanceof java.security.cert.X509CRLSelector;

        if $z0 != 0 goto label01;

        $r38 = new java.security.cert.CertStoreException;

        specialinvoke $r38.<java.security.cert.CertStoreException: void <init>(java.lang.String)>("selector is not a X509CRLSelector");

        throw $r38;

     label01:
        r5 = (java.security.cert.X509CRLSelector) r4;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        $r7 = r1.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: org.bouncycastle.jce.X509LDAPCertStoreParameters params>;

        $r8 = virtualinvoke $r7.<org.bouncycastle.jce.X509LDAPCertStoreParameters: java.lang.String getLdapCertificateRevocationListAttributeName()>();

        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        $r10 = virtualinvoke r5.<java.security.cert.X509CRLSelector: java.util.Collection getIssuerNames()>();

        if $r10 == null goto label06;

        $r20 = virtualinvoke r5.<java.security.cert.X509CRLSelector: java.util.Collection getIssuerNames()>();

        $r21 = interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z2 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label05;

        $r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        $z3 = $r22 instanceof java.lang.String;

        if $z3 == 0 goto label03;

        $r35 = r1.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: org.bouncycastle.jce.X509LDAPCertStoreParameters params>;

        $r36 = virtualinvoke $r35.<org.bouncycastle.jce.X509LDAPCertStoreParameters: java.lang.String getCertificateRevocationListIssuerAttributeName()>();

        $r37 = (java.lang.String) $r22;

        r45 = specialinvoke r1.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: java.lang.String parseDN(java.lang.String,java.lang.String)>($r37, $r36);

        goto label04;

     label03:
        $r23 = r1.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: org.bouncycastle.jce.X509LDAPCertStoreParameters params>;

        $r24 = virtualinvoke $r23.<org.bouncycastle.jce.X509LDAPCertStoreParameters: java.lang.String getCertificateRevocationListIssuerAttributeName()>();

        $r25 = new javax.security.auth.x500.X500Principal;

        $r26 = (byte[]) $r22;

        $r27 = (byte[]) $r26;

        specialinvoke $r25.<javax.security.auth.x500.X500Principal: void <init>(byte[])>($r27);

        $r28 = virtualinvoke $r25.<javax.security.auth.x500.X500Principal: java.lang.String getName(java.lang.String)>("RFC1779");

        r45 = specialinvoke r1.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: java.lang.String parseDN(java.lang.String,java.lang.String)>($r28, $r24);

     label04:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        $r34 = specialinvoke r1.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: java.util.Set search(java.lang.String,java.lang.String,java.lang.String[])>($r8, $r33, $r0);

        interfaceinvoke $r9.<java.util.Set: boolean addAll(java.util.Collection)>($r34);

        goto label02;

     label05:
        goto label07;

     label06:
        $r11 = specialinvoke r1.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: java.util.Set search(java.lang.String,java.lang.String,java.lang.String[])>($r8, "*", $r0);

        interfaceinvoke $r9.<java.util.Set: boolean addAll(java.util.Collection)>($r11);

     label07:
        $r12 = specialinvoke r1.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: java.util.Set search(java.lang.String,java.lang.String,java.lang.String[])>(null, "*", $r0);

        interfaceinvoke $r9.<java.util.Set: boolean addAll(java.util.Collection)>($r12);

        $r13 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $r14 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.lang.String)>("X.509", "BC");

     label09:
        $z4 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label11;

        $r15 = new java.io.ByteArrayInputStream;

        $r16 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        $r17 = (byte[]) $r16;

        $r18 = (byte[]) $r17;

        specialinvoke $r15.<java.io.ByteArrayInputStream: void <init>(byte[])>($r18);

        $r19 = virtualinvoke $r14.<java.security.cert.CertificateFactory: java.security.cert.CRL generateCRL(java.io.InputStream)>($r15);

        $z1 = virtualinvoke r5.<java.security.cert.X509CRLSelector: boolean match(java.security.cert.CRL)>($r19);

        if $z1 == 0 goto label10;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r19);

     label10:
        goto label09;

     label11:
        goto label13;

     label12:
        $r39 := @caughtexception;

        $r40 = new java.security.cert.CertStoreException;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CRL cannot be constructed from LDAP result ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r39);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<java.security.cert.CertStoreException: void <init>(java.lang.String)>($r44);

        throw $r40;

     label13:
        return $r6;

        catch java.lang.Exception from label08 to label11 with label12;
    }

    private java.util.Set search(java.lang.String, java.lang.String, java.lang.String[]) throws java.security.cert.CertStoreException
    {
        javax.naming.directory.Attribute $r28;
        boolean $z0, $z1;
        org.bouncycastle.jce.X509LDAPCertStoreParameters $r20;
        java.lang.Exception $r36, $r38, $r44;
        java.security.cert.CertStoreException $r39;
        javax.naming.directory.Attributes $r25;
        javax.naming.NamingEnumeration $r22, $r26, $r29;
        java.lang.StringBuilder $r0, $r2, $r3, $r5, $r13, $r14, $r15, $r16, $r18, $r19, $r31, $r32, $r34, $r35, $r40, $r41, $r42;
        javax.naming.directory.SearchResult r24;
        java.lang.Throwable $r37;
        java.lang.String[] r10, r11;
        javax.naming.directory.SearchControls $r9;
        java.util.HashSet $r6;
        int i0, $i1;
        java.lang.String r1, r4, $r12, $r17, $r21, $r33, $r43, r45, r47;
        javax.naming.directory.DirContext $r8, r46;
        org.bouncycastle.jce.provider.X509LDAPCertStoreSpi r7;
        java.lang.Object $r23, $r27, $r30;

        r7 := @this: org.bouncycastle.jce.provider.X509LDAPCertStoreSpi;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r10 := @parameter2: java.lang.String[];

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r45 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        if r1 != null goto label01;

        r45 = null;

     label01:
        r46 = null;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

     label02:
        $r8 = specialinvoke r7.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: javax.naming.directory.DirContext connectLDAP()>();

        r46 = $r8;

        $r9 = new javax.naming.directory.SearchControls;

        specialinvoke $r9.<javax.naming.directory.SearchControls: void <init>()>();

        virtualinvoke $r9.<javax.naming.directory.SearchControls: void setSearchScope(int)>(2);

        virtualinvoke $r9.<javax.naming.directory.SearchControls: void setCountLimit(long)>(0L);

        i0 = 0;

     label03:
        $i1 = lengthof r10;

        if i0 >= $i1 goto label09;

        r11 = newarray (java.lang.String)[1];

        $r12 = r10[i0];

        r11[0] = $r12;

        virtualinvoke $r9.<javax.naming.directory.SearchControls: void setReturningAttributes(java.lang.String[])>(r11);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(&(");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")(");

        $r17 = r11[0];

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=*))");

        r47 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        if r45 != null goto label04;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r33 = r11[0];

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=*)");

        r47 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        $r20 = r7.<org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: org.bouncycastle.jce.X509LDAPCertStoreParameters params>;

        $r21 = virtualinvoke $r20.<org.bouncycastle.jce.X509LDAPCertStoreParameters: java.lang.String getBaseDN()>();

        $r22 = interfaceinvoke $r8.<javax.naming.directory.DirContext: javax.naming.NamingEnumeration search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls)>($r21, r47, $r9);

     label05:
        $z1 = interfaceinvoke $r22.<javax.naming.NamingEnumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label08;

        $r23 = interfaceinvoke $r22.<javax.naming.NamingEnumeration: java.lang.Object next()>();

        r24 = (javax.naming.directory.SearchResult) $r23;

        $r25 = virtualinvoke r24.<javax.naming.directory.SearchResult: javax.naming.directory.Attributes getAttributes()>();

        $r26 = interfaceinvoke $r25.<javax.naming.directory.Attributes: javax.naming.NamingEnumeration getAll()>();

        $r27 = interfaceinvoke $r26.<javax.naming.NamingEnumeration: java.lang.Object next()>();

        $r28 = (javax.naming.directory.Attribute) $r27;

        $r29 = interfaceinvoke $r28.<javax.naming.directory.Attribute: javax.naming.NamingEnumeration getAll()>();

     label06:
        $z0 = interfaceinvoke $r29.<javax.naming.NamingEnumeration: boolean hasMore()>();

        if $z0 == 0 goto label07;

        $r30 = interfaceinvoke $r29.<javax.naming.NamingEnumeration: java.lang.Object next()>();

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r30);

        goto label06;

     label07:
        goto label05;

     label08:
        i0 = i0 + 1;

        goto label03;

     label09:
        if null == $r8 goto label10;

        interfaceinvoke $r8.<javax.naming.directory.DirContext: void close()>();

     label10:
        goto label18;

     label11:
        $r44 := @caughtexception;

        goto label18;

     label12:
        $r38 := @caughtexception;

        $r39 = new java.security.cert.CertStoreException;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error getting results from LDAP directory ");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<java.security.cert.CertStoreException: void <init>(java.lang.String)>($r43);

        throw $r39;

     label13:
        $r37 := @caughtexception;

     label14:
        if null == r46 goto label15;

        interfaceinvoke r46.<javax.naming.directory.DirContext: void close()>();

     label15:
        goto label17;

     label16:
        $r36 := @caughtexception;

     label17:
        throw $r37;

     label18:
        return $r6;

        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Exception from label02 to label09 with label12;
        catch java.lang.Throwable from label02 to label09 with label13;
        catch java.lang.Exception from label14 to label15 with label16;
        catch java.lang.Throwable from label12 to label14 with label13;
    }

    static void <clinit>()
    {
        <org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: java.lang.String URL_CONTEXT_PREFIX> = "com.sun.jndi.url";

        <org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: java.lang.String SEARCH_SECURITY_LEVEL> = "none";

        <org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: java.lang.String LDAP_PROVIDER> = "com.sun.jndi.ldap.LdapCtxFactory";

        <org.bouncycastle.jce.provider.X509LDAPCertStoreSpi: java.lang.String REFERRALS_IGNORE> = "ignore";

        return;
    }
}
