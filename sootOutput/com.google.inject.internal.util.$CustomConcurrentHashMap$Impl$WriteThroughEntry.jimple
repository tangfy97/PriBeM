final class com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$WriteThroughEntry extends com.google.inject.internal.util.$AbstractMapEntry
{
    final java.lang.Object key;
    java.lang.Object value;
    final com.google.inject.internal.util.$CustomConcurrentHashMap$Impl this$0;

    void <init>(com.google.inject.internal.util.$CustomConcurrentHashMap$Impl, java.lang.Object, java.lang.Object)
    {
        com.google.inject.internal.util.$CustomConcurrentHashMap$Impl r1;
        java.lang.Object r2, r3;
        com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$WriteThroughEntry r0;

        r0 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$WriteThroughEntry;

        r1 := @parameter0: com.google.inject.internal.util.$CustomConcurrentHashMap$Impl;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$WriteThroughEntry: com.google.inject.internal.util.$CustomConcurrentHashMap$Impl this$0> = r1;

        specialinvoke r0.<com.google.inject.internal.util.$AbstractMapEntry: void <init>()>();

        r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$WriteThroughEntry: java.lang.Object key> = r2;

        r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$WriteThroughEntry: java.lang.Object value> = r3;

        return;
    }

    public java.lang.Object getKey()
    {
        java.lang.Object $r1;
        com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$WriteThroughEntry r0;

        r0 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$WriteThroughEntry;

        $r1 = r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$WriteThroughEntry: java.lang.Object key>;

        return $r1;
    }

    public java.lang.Object getValue()
    {
        java.lang.Object $r1;
        com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$WriteThroughEntry r0;

        r0 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$WriteThroughEntry;

        $r1 = r0.<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$WriteThroughEntry: java.lang.Object value>;

        return $r1;
    }

    public java.lang.Object setValue(java.lang.Object)
    {
        com.google.inject.internal.util.$CustomConcurrentHashMap$Impl $r2;
        java.lang.Object r0, $r3, $r4;
        com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$WriteThroughEntry r1;
        java.lang.NullPointerException $r5;

        r1 := @this: com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$WriteThroughEntry;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>()>();

        throw $r5;

     label1:
        $r2 = r1.<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$WriteThroughEntry: com.google.inject.internal.util.$CustomConcurrentHashMap$Impl this$0>;

        $r3 = virtualinvoke r1.<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$WriteThroughEntry: java.lang.Object getKey()>();

        $r4 = virtualinvoke $r2.<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r0);

        r1.<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$WriteThroughEntry: java.lang.Object value> = r0;

        return $r4;
    }
}
