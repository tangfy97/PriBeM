class org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$1 extends org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler
{
    private final org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$StyleDeclarationColorValue this$1;

    void <init>(org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$StyleDeclarationColorValue)
    {
        org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$StyleDeclarationColorValue r1;
        org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$1 r0;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$1;

        r1 := @parameter0: org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$StyleDeclarationColorValue;

        specialinvoke r0.<org.apache.batik.css.dom.CSSOMSVGColor$AbstractModificationHandler: void <init>(org.apache.batik.css.dom.CSSOMSVGColor)>(r1);

        r0.<org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$1: org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$StyleDeclarationColorValue this$1> = r1;

        return;
    }

    protected org.apache.batik.css.engine.value.Value getValue()
    {
        org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$StyleDeclarationColorValue $r1;
        org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$1 r0;
        org.apache.batik.css.engine.value.Value $r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$1;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$1: org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$StyleDeclarationColorValue this$1>;

        $r2 = virtualinvoke $r1.<org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$StyleDeclarationColorValue: org.apache.batik.css.engine.value.Value getValue()>();

        return $r2;
    }

    public void textChanged(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMSVGStyleDeclaration $r4, $r9;
        org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler $r2;
        org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$StyleDeclarationColorValue $r1, $r3, $r5, $r8, $r10;
        org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$1 r0;
        org.w3c.dom.DOMException $r14;
        org.apache.batik.css.dom.CSSOMStyleDeclaration$ModificationHandler $r13;
        java.lang.String $r6, $r7, r11, $r12;

        r0 := @this: org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$1;

        r11 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$1: org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$StyleDeclarationColorValue this$1>;

        $r2 = $r1.<org.apache.batik.css.dom.CSSOMSVGColor: org.apache.batik.css.dom.CSSOMSVGColor$ModificationHandler handler>;

        if $r2 != null goto label1;

        $r14 = new org.w3c.dom.DOMException;

        specialinvoke $r14.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r14;

     label1:
        $r3 = r0.<org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$1: org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$StyleDeclarationColorValue this$1>;

        $r4 = staticinvoke <org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$StyleDeclarationColorValue: org.apache.batik.css.dom.CSSOMSVGStyleDeclaration access$000(org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$StyleDeclarationColorValue)>($r3);

        $r5 = r0.<org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$1: org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$StyleDeclarationColorValue this$1>;

        $r6 = $r5.<org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$StyleDeclarationColorValue: java.lang.String property>;

        $r7 = virtualinvoke $r4.<org.apache.batik.css.dom.CSSOMStyleDeclaration: java.lang.String getPropertyPriority(java.lang.String)>($r6);

        $r8 = r0.<org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$1: org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$StyleDeclarationColorValue this$1>;

        $r9 = staticinvoke <org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$StyleDeclarationColorValue: org.apache.batik.css.dom.CSSOMSVGStyleDeclaration access$000(org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$StyleDeclarationColorValue)>($r8);

        $r13 = $r9.<org.apache.batik.css.dom.CSSOMStyleDeclaration: org.apache.batik.css.dom.CSSOMStyleDeclaration$ModificationHandler handler>;

        $r10 = r0.<org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$1: org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$StyleDeclarationColorValue this$1>;

        $r12 = $r10.<org.apache.batik.css.dom.CSSOMSVGStyleDeclaration$StyleDeclarationColorValue: java.lang.String property>;

        interfaceinvoke $r13.<org.apache.batik.css.dom.CSSOMStyleDeclaration$ModificationHandler: void propertyChanged(java.lang.String,java.lang.String,java.lang.String)>($r12, r11, $r7);

        return;
    }
}
