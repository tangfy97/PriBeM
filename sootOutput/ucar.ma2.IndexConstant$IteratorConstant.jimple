class ucar.ma2.IndexConstant$IteratorConstant extends java.lang.Object implements ucar.ma2.IndexIterator
{
    private int currElement;
    private final ucar.ma2.Array maa;
    private long size;
    private ucar.ma2.Index counter;
    final ucar.ma2.IndexConstant this$0;

    void <init>(ucar.ma2.IndexConstant, long, ucar.ma2.Array)
    {
        ucar.ma2.IndexConstant r1;
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i2;
        long l0;
        ucar.ma2.Array r2;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        r1 := @parameter0: ucar.ma2.IndexConstant;

        l0 := @parameter1: long;

        r2 := @parameter2: ucar.ma2.Array;

        r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.IndexConstant this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i2 = (int) -1;

        r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement> = $i2;

        r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Index counter> = null;

        r0.<ucar.ma2.IndexConstant$IteratorConstant: long size> = l0;

        r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa> = r2;

        return;
    }

    public boolean hasNext()
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        long $l1, $l2, $l3;
        byte $b4;
        int $i0, $i5;
        boolean $z0;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $l3 = (long) $i0;

        $l1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: long size>;

        $l2 = $l1 - 1L;

        $b4 = $l3 cmp $l2;

        $i5 = (int) $b4;

        if $i5 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasMore(int)
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        long $l2, $l3, $l4, $l5;
        byte $b6;
        int $i0, i1, $i7;
        boolean $z0;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        i1 := @parameter0: int;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $l5 = (long) $i0;

        $l3 = r0.<ucar.ma2.IndexConstant$IteratorConstant: long size>;

        $l2 = (long) i1;

        $l4 = $l3 - $l2;

        $b6 = $l5 cmp $l4;

        $i7 = (int) $b6;

        if $i7 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String toString()
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        ucar.ma2.Array $r6;
        ucar.ma2.Index $r1, $r2, $r3, $r5;
        int[] $r7;
        int $i0;
        java.lang.String $r4;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Index counter>;

        if $r1 != null goto label1;

        $r5 = new ucar.ma2.Index;

        $r6 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $r7 = virtualinvoke $r6.<ucar.ma2.Array: int[] getShape()>();

        specialinvoke $r5.<ucar.ma2.Index: void <init>(int[])>($r7);

        r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Index counter> = $r5;

     label1:
        $r2 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Index counter>;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        virtualinvoke $r2.<ucar.ma2.Index: void setCurrentCounter(int)>($i0);

        $r3 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Index counter>;

        $r4 = virtualinvoke $r3.<ucar.ma2.Index: java.lang.String toString()>();

        return $r4;
    }

    public int[] getCurrentCounter()
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        ucar.ma2.Array $r6;
        ucar.ma2.Index $r1, $r2, $r3, $r5;
        int[] $r4, $r7;
        int $i0;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Index counter>;

        if $r1 != null goto label1;

        $r5 = new ucar.ma2.Index;

        $r6 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $r7 = virtualinvoke $r6.<ucar.ma2.Array: int[] getShape()>();

        specialinvoke $r5.<ucar.ma2.Index: void <init>(int[])>($r7);

        r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Index counter> = $r5;

     label1:
        $r2 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Index counter>;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        virtualinvoke $r2.<ucar.ma2.Index: void setCurrentCounter(int)>($i0);

        $r3 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Index counter>;

        $r4 = $r3.<ucar.ma2.Index: int[] current>;

        return $r4;
    }

    public double getDoubleCurrent()
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        ucar.ma2.Array $r1;
        double $d0;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $d0 = virtualinvoke $r1.<ucar.ma2.Array: double getDouble(int)>(0);

        return $d0;
    }

    public double getDoubleNext()
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0, $i1;
        ucar.ma2.Array $r1;
        double $d0;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $i1 = $i0 + 1;

        r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement> = $i1;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $d0 = virtualinvoke $r1.<ucar.ma2.Array: double getDouble(int)>(0);

        return $d0;
    }

    public void setDoubleCurrent(double)
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        ucar.ma2.Array $r1;
        double d0;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        d0 := @parameter0: double;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        virtualinvoke $r1.<ucar.ma2.Array: void setDouble(int,double)>(0, d0);

        return;
    }

    public void setDoubleNext(double)
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0, $i1;
        ucar.ma2.Array $r1;
        double d0;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        d0 := @parameter0: double;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $i1 = $i0 + 1;

        r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement> = $i1;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        virtualinvoke $r1.<ucar.ma2.Array: void setDouble(int,double)>(0, d0);

        return;
    }

    public float getFloatCurrent()
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0;
        float $f0;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $f0 = virtualinvoke $r1.<ucar.ma2.Array: float getFloat(int)>($i0);

        return $f0;
    }

    public float getFloatNext()
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0, $i1;
        float $f0;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $i1 = $i0 + 1;

        r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement> = $i1;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $f0 = virtualinvoke $r1.<ucar.ma2.Array: float getFloat(int)>(0);

        return $f0;
    }

    public void setFloatCurrent(float)
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0;
        float f0;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        f0 := @parameter0: float;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        virtualinvoke $r1.<ucar.ma2.Array: void setFloat(int,float)>($i0, f0);

        return;
    }

    public void setFloatNext(float)
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0, $i1;
        float f0;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        f0 := @parameter0: float;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $i1 = $i0 + 1;

        r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement> = $i1;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        virtualinvoke $r1.<ucar.ma2.Array: void setFloat(int,float)>(0, f0);

        return;
    }

    public long getLongCurrent()
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0;
        long $l1;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $l1 = virtualinvoke $r1.<ucar.ma2.Array: long getLong(int)>($i0);

        return $l1;
    }

    public long getLongNext()
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0, $i1;
        long $l2;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $i1 = $i0 + 1;

        r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement> = $i1;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $l2 = virtualinvoke $r1.<ucar.ma2.Array: long getLong(int)>(0);

        return $l2;
    }

    public void setLongCurrent(long)
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i1;
        long l0;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        l0 := @parameter0: long;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $i1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        virtualinvoke $r1.<ucar.ma2.Array: void setLong(int,long)>($i1, l0);

        return;
    }

    public void setLongNext(long)
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0, $i1;
        long l2;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        l2 := @parameter0: long;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $i1 = $i0 + 1;

        r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement> = $i1;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        virtualinvoke $r1.<ucar.ma2.Array: void setLong(int,long)>(0, l2);

        return;
    }

    public int getIntCurrent()
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0, $i1;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $i1 = virtualinvoke $r1.<ucar.ma2.Array: int getInt(int)>($i0);

        return $i1;
    }

    public int getIntNext()
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0, $i1, $i2;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $i1 = $i0 + 1;

        r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement> = $i1;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $i2 = virtualinvoke $r1.<ucar.ma2.Array: int getInt(int)>(0);

        return $i2;
    }

    public void setIntCurrent(int)
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int i0, $i1;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $i1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        virtualinvoke $r1.<ucar.ma2.Array: void setInt(int,int)>($i1, i0);

        return;
    }

    public void setIntNext(int)
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0, $i1, i2;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        i2 := @parameter0: int;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $i1 = $i0 + 1;

        r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement> = $i1;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        virtualinvoke $r1.<ucar.ma2.Array: void setInt(int,int)>(0, i2);

        return;
    }

    public short getShortCurrent()
    {
        short $s1;
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $s1 = virtualinvoke $r1.<ucar.ma2.Array: short getShort(int)>($i0);

        return $s1;
    }

    public short getShortNext()
    {
        short $s2;
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0, $i1;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $i1 = $i0 + 1;

        r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement> = $i1;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $s2 = virtualinvoke $r1.<ucar.ma2.Array: short getShort(int)>(0);

        return $s2;
    }

    public void setShortCurrent(short)
    {
        short s0;
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i1;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        s0 := @parameter0: short;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $i1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        virtualinvoke $r1.<ucar.ma2.Array: void setShort(int,short)>($i1, s0);

        return;
    }

    public void setShortNext(short)
    {
        short s2;
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0, $i1;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        s2 := @parameter0: short;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $i1 = $i0 + 1;

        r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement> = $i1;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        virtualinvoke $r1.<ucar.ma2.Array: void setShort(int,short)>(0, s2);

        return;
    }

    public byte getByteCurrent()
    {
        byte $b1;
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $b1 = virtualinvoke $r1.<ucar.ma2.Array: byte getByte(int)>($i0);

        return $b1;
    }

    public byte getByteNext()
    {
        byte $b2;
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0, $i1;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $i1 = $i0 + 1;

        r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement> = $i1;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $b2 = virtualinvoke $r1.<ucar.ma2.Array: byte getByte(int)>(0);

        return $b2;
    }

    public void setByteCurrent(byte)
    {
        byte b0;
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i1;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        b0 := @parameter0: byte;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $i1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        virtualinvoke $r1.<ucar.ma2.Array: void setByte(int,byte)>($i1, b0);

        return;
    }

    public void setByteNext(byte)
    {
        byte b2;
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0, $i1;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        b2 := @parameter0: byte;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $i1 = $i0 + 1;

        r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement> = $i1;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        virtualinvoke $r1.<ucar.ma2.Array: void setByte(int,byte)>(0, b2);

        return;
    }

    public char getCharCurrent()
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0;
        char $c1;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $c1 = virtualinvoke $r1.<ucar.ma2.Array: char getChar(int)>($i0);

        return $c1;
    }

    public char getCharNext()
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0, $i1;
        char $c2;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $i1 = $i0 + 1;

        r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement> = $i1;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $c2 = virtualinvoke $r1.<ucar.ma2.Array: char getChar(int)>(0);

        return $c2;
    }

    public void setCharCurrent(char)
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i1;
        char c0;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        c0 := @parameter0: char;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $i1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        virtualinvoke $r1.<ucar.ma2.Array: void setChar(int,char)>($i1, c0);

        return;
    }

    public void setCharNext(char)
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0, $i1;
        char c2;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        c2 := @parameter0: char;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $i1 = $i0 + 1;

        r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement> = $i1;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        virtualinvoke $r1.<ucar.ma2.Array: void setChar(int,char)>(0, c2);

        return;
    }

    public boolean getBooleanCurrent()
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0;
        ucar.ma2.Array $r1;
        boolean $z0;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $z0 = virtualinvoke $r1.<ucar.ma2.Array: boolean getBoolean(int)>($i0);

        return $z0;
    }

    public boolean getBooleanNext()
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0, $i1;
        ucar.ma2.Array $r1;
        boolean $z0;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $i1 = $i0 + 1;

        r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement> = $i1;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $z0 = virtualinvoke $r1.<ucar.ma2.Array: boolean getBoolean(int)>(0);

        return $z0;
    }

    public void setBooleanCurrent(boolean)
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0;
        ucar.ma2.Array $r1;
        boolean z0;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        z0 := @parameter0: boolean;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        virtualinvoke $r1.<ucar.ma2.Array: void setBoolean(int,boolean)>($i0, z0);

        return;
    }

    public void setBooleanNext(boolean)
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0, $i1;
        ucar.ma2.Array $r1;
        boolean z0;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        z0 := @parameter0: boolean;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $i1 = $i0 + 1;

        r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement> = $i1;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        virtualinvoke $r1.<ucar.ma2.Array: void setBoolean(int,boolean)>(0, z0);

        return;
    }

    public java.lang.Object getObjectCurrent()
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0;
        java.lang.Object $r2;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $r2 = virtualinvoke $r1.<ucar.ma2.Array: java.lang.Object getObject(int)>($i0);

        return $r2;
    }

    public java.lang.Object getObjectNext()
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0, $i1;
        java.lang.Object $r2;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $i1 = $i0 + 1;

        r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement> = $i1;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $r2 = virtualinvoke $r1.<ucar.ma2.Array: java.lang.Object getObject(int)>(0);

        return $r2;
    }

    public void setObjectCurrent(java.lang.Object)
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0;
        java.lang.Object r1;
        ucar.ma2.Array $r2;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        virtualinvoke $r2.<ucar.ma2.Array: void setObject(int,java.lang.Object)>($i0, r1);

        return;
    }

    public void setObjectNext(java.lang.Object)
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0, $i1;
        java.lang.Object r1;
        ucar.ma2.Array $r2;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        r1 := @parameter0: java.lang.Object;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $i1 = $i0 + 1;

        r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement> = $i1;

        $r2 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        virtualinvoke $r2.<ucar.ma2.Array: void setObject(int,java.lang.Object)>(0, r1);

        return;
    }

    public java.lang.Object next()
    {
        ucar.ma2.IndexConstant$IteratorConstant r0;
        int $i0, $i1;
        java.lang.Object $r2;
        ucar.ma2.Array $r1;

        r0 := @this: ucar.ma2.IndexConstant$IteratorConstant;

        $i0 = r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement>;

        $i1 = $i0 + 1;

        r0.<ucar.ma2.IndexConstant$IteratorConstant: int currElement> = $i1;

        $r1 = r0.<ucar.ma2.IndexConstant$IteratorConstant: ucar.ma2.Array maa>;

        $r2 = virtualinvoke $r1.<ucar.ma2.Array: java.lang.Object getObject(int)>(0);

        return $r2;
    }
}
