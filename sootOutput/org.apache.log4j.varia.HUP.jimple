class org.apache.log4j.varia.HUP extends java.lang.Thread
{
    int port;
    org.apache.log4j.varia.ExternallyRolledFileAppender er;

    void <init>(org.apache.log4j.varia.ExternallyRolledFileAppender, int)
    {
        int i0;
        org.apache.log4j.varia.HUP r0;
        org.apache.log4j.varia.ExternallyRolledFileAppender r1;

        r0 := @this: org.apache.log4j.varia.HUP;

        r1 := @parameter0: org.apache.log4j.varia.ExternallyRolledFileAppender;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        r0.<org.apache.log4j.varia.HUP: org.apache.log4j.varia.ExternallyRolledFileAppender er> = r1;

        r0.<org.apache.log4j.varia.HUP: int port> = i0;

        return;
    }

    public void run()
    {
        java.net.Socket $r2;
        java.io.InterruptedIOException $r13;
        java.net.ServerSocket $r1;
        java.net.InetAddress $r5;
        org.apache.log4j.varia.HUP r0;
        java.lang.StringBuffer $r3, $r4, $r6;
        java.lang.Thread $r8, $r14;
        int $i0;
        org.apache.log4j.varia.HUPNode $r9;
        java.lang.String $r7;
        boolean $z0;
        java.io.IOException $r12;
        java.lang.RuntimeException $r11;
        org.apache.log4j.varia.ExternallyRolledFileAppender $r10;

        r0 := @this: org.apache.log4j.varia.HUP;

     label1:
        $z0 = virtualinvoke r0.<java.lang.Thread: boolean isInterrupted()>();

        if $z0 != 0 goto label7;

     label2:
        $r1 = new java.net.ServerSocket;

        $i0 = r0.<org.apache.log4j.varia.HUP: int port>;

        specialinvoke $r1.<java.net.ServerSocket: void <init>(int)>($i0);

     label3:
        $r2 = virtualinvoke $r1.<java.net.ServerSocket: java.net.Socket accept()>();

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Connected to client at ");

        $r5 = virtualinvoke $r2.<java.net.Socket: java.net.InetAddress getInetAddress()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r7);

        $r8 = new java.lang.Thread;

        $r9 = new org.apache.log4j.varia.HUPNode;

        $r10 = r0.<org.apache.log4j.varia.HUP: org.apache.log4j.varia.ExternallyRolledFileAppender er>;

        specialinvoke $r9.<org.apache.log4j.varia.HUPNode: void <init>(java.net.Socket,org.apache.log4j.varia.ExternallyRolledFileAppender)>($r2, $r10);

        specialinvoke $r8.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r9, "ExternallyRolledFileAppender-HUP");

        virtualinvoke $r8.<java.lang.Thread: void start()>();

        goto label3;

     label4:
        $r13 := @caughtexception;

        $r14 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r14.<java.lang.Thread: void interrupt()>();

        virtualinvoke $r13.<java.lang.Throwable: void printStackTrace()>();

        goto label1;

     label5:
        $r12 := @caughtexception;

        virtualinvoke $r12.<java.lang.Throwable: void printStackTrace()>();

        goto label1;

     label6:
        $r11 := @caughtexception;

        virtualinvoke $r11.<java.lang.Throwable: void printStackTrace()>();

        goto label1;

     label7:
        return;

        catch java.io.InterruptedIOException from label2 to label4 with label4;
        catch java.io.IOException from label2 to label4 with label5;
        catch java.lang.RuntimeException from label2 to label4 with label6;
    }
}
