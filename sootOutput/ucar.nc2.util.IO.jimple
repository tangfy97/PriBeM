public class ucar.nc2.util.IO extends java.lang.Object
{
    public static int default_file_buffersize;
    public static int default_socket_buffersize;
    private static boolean showStackTrace;
    private static boolean debug;
    private static boolean showResponse;
    private static boolean showHeaders;
    private static java.lang.Class cl;
    static java.util.Formatter fout;

    public void <init>()
    {
        ucar.nc2.util.IO r0;

        r0 := @this: ucar.nc2.util.IO;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.io.InputStream getFileResource(java.lang.String)
    {
        boolean $z0, $z1, $z2, $z3, $z4;
        java.io.FileNotFoundException $r27;
        java.security.AccessControlException $r21;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r12, $r13, $r14, $r16, $r18, $r19, $r22, $r24, $r25, $r28, $r30, $r31;
        java.lang.String r1, $r9, $r15, $r20, $r26, $r32;
        java.io.PrintStream $r6, $r11, $r17, $r23, $r29;
        java.io.FileInputStream $r4;
        java.lang.Class $r0, $r2;
        java.io.InputStream $r3, r33;

        r1 := @parameter0: java.lang.String;

        $r0 = <ucar.nc2.util.IO: java.lang.Class cl>;

        if $r0 != null goto label1;

        <ucar.nc2.util.IO: java.lang.Class cl> = class "Lucar/nc2/util/IO;";

     label1:
        $r2 = <ucar.nc2.util.IO: java.lang.Class cl>;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);

        r33 = $r3;

        if $r3 == null goto label3;

        $z2 = <ucar.nc2.util.IO: boolean debug>;

        if $z2 == 0 goto label2;

        $r17 = <java.lang.System: java.io.PrintStream out>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource.getResourceAsStream ok on ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r20);

     label2:
        return $r3;

     label3:
        $z0 = <ucar.nc2.util.IO: boolean debug>;

        if $z0 == 0 goto label4;

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource.getResourceAsStream failed on (");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r15);

     label4:
        $r4 = new java.io.FileInputStream;

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.lang.String)>(r1);

        r33 = $r4;

        $z1 = <ucar.nc2.util.IO: boolean debug>;

        if $z1 == 0 goto label5;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource.FileInputStream ok on ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r9);

     label5:
        goto label9;

     label6:
        $r27 := @caughtexception;

        $z4 = <ucar.nc2.util.IO: boolean debug>;

        if $z4 == 0 goto label7;

        $r29 = <java.lang.System: java.io.PrintStream out>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  FileNotFoundException: Resource.getFile failed on ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r32);

     label7:
        goto label9;

     label8:
        $r21 := @caughtexception;

        $z3 = <ucar.nc2.util.IO: boolean debug>;

        if $z3 == 0 goto label9;

        $r23 = <java.lang.System: java.io.PrintStream out>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  AccessControlException: Resource.getFile failed on ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r26);

     label9:
        return r33;

        catch java.io.FileNotFoundException from label4 to label5 with label6;
        catch java.security.AccessControlException from label4 to label5 with label8;
    }

    public static long copy(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r2;
        byte[] r0;
        long $l2, l3;
        int $i0, $i1, $i5;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.io.OutputStream;

        l3 = 0L;

        $i0 = <ucar.nc2.util.IO: int default_file_buffersize>;

        r0 = newarray (byte)[$i0];

     label1:
        $i1 = virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r0);

        $i5 = (int) -1;

        if $i1 != $i5 goto label2;

        goto label3;

     label2:
        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>(r0, 0, $i1);

        $l2 = (long) $i1;

        l3 = l3 + $l2;

        goto label1;

     label3:
        return l3;
    }

    public static long copy2null(java.io.InputStream, int) throws java.io.IOException
    {
        byte[] $r1;
        int i1, $i3, $i5;
        long $l0, l2;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        i1 := @parameter1: int;

        l2 = 0L;

        if i1 > 0 goto label1;

        i1 = <ucar.nc2.util.IO: int default_file_buffersize>;

     label1:
        $r1 = newarray (byte)[i1];

     label2:
        $i3 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>($r1);

        $i5 = (int) -1;

        if $i3 != $i5 goto label3;

        goto label4;

     label3:
        $l0 = (long) $i3;

        l2 = l2 + $l0;

        goto label2;

     label4:
        return l2;
    }

    public static long touch(java.io.InputStream, int) throws java.io.IOException
    {
        byte[] $r1;
        long $l1, l3;
        byte $b0;
        int i2, $i4, i5, $i7;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        i2 := @parameter1: int;

        l3 = 0L;

        if i2 > 0 goto label1;

        i2 = <ucar.nc2.util.IO: int default_file_buffersize>;

     label1:
        $r1 = newarray (byte)[i2];

     label2:
        $i4 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>($r1);

        $i7 = (int) -1;

        if $i4 != $i7 goto label3;

        goto label6;

     label3:
        i5 = 0;

     label4:
        if i5 >= i2 goto label5;

        $b0 = $r1[i5];

        $l1 = (long) $b0;

        l3 = l3 + $l1;

        i5 = i5 + 1;

        goto label4;

     label5:
        goto label2;

     label6:
        return l3;
    }

    public static long copy2null(java.nio.channels.FileChannel, int) throws java.io.IOException
    {
        int i1, $i3, $i5;
        long $l0, l2;
        java.nio.channels.FileChannel r1;
        java.nio.ByteBuffer $r0;

        r1 := @parameter0: java.nio.channels.FileChannel;

        i1 := @parameter1: int;

        l2 = 0L;

        if i1 > 0 goto label1;

        i1 = <ucar.nc2.util.IO: int default_file_buffersize>;

     label1:
        $r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i1);

     label2:
        $i3 = virtualinvoke r1.<java.nio.channels.FileChannel: int read(java.nio.ByteBuffer)>($r0);

        $i5 = (int) -1;

        if $i3 != $i5 goto label3;

        goto label4;

     label3:
        $l0 = (long) $i3;

        l2 = l2 + $l0;

        virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        goto label2;

     label4:
        return l2;
    }

    public static long touch(java.nio.channels.FileChannel, int) throws java.io.IOException
    {
        byte[] $r2;
        long $l1, l3;
        java.nio.ByteBuffer $r0;
        byte $b0;
        int i2, $i4, i5, $i7;
        java.nio.channels.FileChannel r1;

        r1 := @parameter0: java.nio.channels.FileChannel;

        i2 := @parameter1: int;

        l3 = 0L;

        if i2 > 0 goto label1;

        i2 = <ucar.nc2.util.IO: int default_file_buffersize>;

     label1:
        $r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i2);

     label2:
        $i4 = virtualinvoke r1.<java.nio.channels.FileChannel: int read(java.nio.ByteBuffer)>($r0);

        $i7 = (int) -1;

        if $i4 != $i7 goto label3;

        goto label6;

     label3:
        $r2 = virtualinvoke $r0.<java.nio.ByteBuffer: byte[] array()>();

        i5 = 0;

     label4:
        if i5 >= i2 goto label5;

        $b0 = $r2[i5];

        $l1 = (long) $b0;

        l3 = l3 + $l1;

        i5 = i5 + 1;

        goto label4;

     label5:
        virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        goto label2;

     label6:
        return l3;
    }

    public static long copyB(java.io.InputStream, java.io.OutputStream, int) throws java.io.IOException
    {
        byte[] r0;
        long $l2, l4;
        int i0, $i1, $i3, i5, i6, $i8;
        java.lang.String $r7;
        java.io.OutputStream r2;
        java.io.PrintStream $r4;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.io.OutputStream;

        i0 := @parameter2: int;

        l4 = 0L;

        i5 = 0;

        i6 = 1;

        r0 = newarray (byte)[i0];

     label1:
        $i1 = virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r0);

        $i8 = (int) -1;

        if $i1 != $i8 goto label2;

        goto label4;

     label2:
        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>(r0, 0, $i1);

        $l2 = (long) $i1;

        l4 = l4 + $l2;

        if 0 == 0 goto label3;

        i5 = i5 + $i1;

        $i3 = 1000000 * i6;

        if i5 <= $i3 goto label3;

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Mb");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r7);

        i6 = i6 + 1;

     label3:
        goto label1;

     label4:
        return l4;
    }

    public static void copy(java.io.InputStream, java.io.OutputStream, int) throws java.io.IOException
    {
        java.io.OutputStream r2;
        byte[] r0;
        int $i0, $i1, i2, i3, $i5;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.io.OutputStream;

        i2 := @parameter2: int;

        $i0 = <ucar.nc2.util.IO: int default_file_buffersize>;

        r0 = newarray (byte)[$i0];

        i3 = 0;

     label1:
        $i1 = virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r0);

        $i5 = (int) -1;

        if $i1 != $i5 goto label2;

        goto label4;

     label2:
        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>(r0, 0, $i1);

        i3 = i3 + $i1;

        if i3 <= i2 goto label3;

        return;

     label3:
        goto label1;

     label4:
        return;
    }

    public static java.lang.String readContents(java.io.InputStream) throws java.io.IOException
    {
        java.lang.String $r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <ucar.nc2.util.IO: java.lang.String readContents(java.io.InputStream,java.lang.String)>(r0, "UTF-8");

        return $r1;
    }

    public static java.lang.String readContents(java.io.InputStream, java.lang.String) throws java.io.IOException
    {
        java.io.ByteArrayOutputStream $r0;
        int $i0, $i1;
        java.lang.String r2, $r3;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

        $r0 = new java.io.ByteArrayOutputStream;

        $i0 = <ucar.nc2.util.IO: int default_file_buffersize>;

        $i1 = 10 * $i0;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>(int)>($i1);

        staticinvoke <ucar.nc2.util.IO: long copy(java.io.InputStream,java.io.OutputStream)>(r1, $r0);

        $r3 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>(r2);

        return $r3;
    }

    public static byte[] readContentsToByteArray(java.io.InputStream) throws java.io.IOException
    {
        byte[] $r2;
        java.io.ByteArrayOutputStream $r0;
        int $i0, $i1;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        $r0 = new java.io.ByteArrayOutputStream;

        $i0 = <ucar.nc2.util.IO: int default_file_buffersize>;

        $i1 = 10 * $i0;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>(int)>($i1);

        staticinvoke <ucar.nc2.util.IO: long copy(java.io.InputStream,java.io.OutputStream)>(r1, $r0);

        $r2 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r2;
    }

    public static void writeContents(java.lang.String, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r3;
        byte[] $r2;
        java.io.ByteArrayInputStream $r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.io.OutputStream;

        $r0 = new java.io.ByteArrayInputStream;

        $r2 = virtualinvoke r1.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r0.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);

        staticinvoke <ucar.nc2.util.IO: long copy(java.io.InputStream,java.io.OutputStream)>($r0, r3);

        return;
    }

    public static void copyFile(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r6;
        java.io.BufferedInputStream $r0, r7;
        java.io.FileOutputStream $r4;
        java.io.FileInputStream $r1;
        java.io.BufferedOutputStream $r3, r8;
        java.lang.String r2, r5;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        r7 = null;

        r8 = null;

     label1:
        $r0 = new java.io.BufferedInputStream;

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.lang.String)>(r2);

        specialinvoke $r0.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r1);

        r7 = $r0;

        $r3 = new java.io.BufferedOutputStream;

        $r4 = new java.io.FileOutputStream;

        specialinvoke $r4.<java.io.FileOutputStream: void <init>(java.lang.String)>(r5);

        specialinvoke $r3.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r4);

        r8 = $r3;

        staticinvoke <ucar.nc2.util.IO: long copy(java.io.InputStream,java.io.OutputStream)>($r0, $r3);

     label2:
        if null == $r0 goto label3;

        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label3:
        if null == $r3 goto label8;

        virtualinvoke $r3.<java.io.OutputStream: void close()>();

        goto label8;

     label4:
        $r6 := @caughtexception;

     label5:
        if null == r7 goto label6;

        virtualinvoke r7.<java.io.InputStream: void close()>();

     label6:
        if null == r8 goto label7;

        virtualinvoke r8.<java.io.OutputStream: void close()>();

     label7:
        throw $r6;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static void copyFile(java.io.File, java.io.File) throws java.io.IOException
    {
        java.lang.Throwable $r6;
        java.io.BufferedInputStream $r0, r7;
        java.io.FileOutputStream $r4;
        java.io.FileInputStream $r1;
        java.io.File r2, r5;
        java.io.BufferedOutputStream $r3, r8;

        r2 := @parameter0: java.io.File;

        r5 := @parameter1: java.io.File;

        r7 = null;

        r8 = null;

     label1:
        $r0 = new java.io.BufferedInputStream;

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>(r2);

        specialinvoke $r0.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r1);

        r7 = $r0;

        $r3 = new java.io.BufferedOutputStream;

        $r4 = new java.io.FileOutputStream;

        specialinvoke $r4.<java.io.FileOutputStream: void <init>(java.io.File)>(r5);

        specialinvoke $r3.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r4);

        r8 = $r3;

        staticinvoke <ucar.nc2.util.IO: long copy(java.io.InputStream,java.io.OutputStream)>($r0, $r3);

     label2:
        if null == $r0 goto label3;

        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label3:
        if null == $r3 goto label8;

        virtualinvoke $r3.<java.io.OutputStream: void close()>();

        goto label8;

     label4:
        $r6 := @caughtexception;

     label5:
        if null == r7 goto label6;

        virtualinvoke r7.<java.io.InputStream: void close()>();

     label6:
        if null == r8 goto label7;

        virtualinvoke r8.<java.io.OutputStream: void close()>();

     label7:
        throw $r6;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static void copyFile(java.lang.String, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r2;
        int $i0;
        java.lang.String r1;
        java.io.File $r0;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.OutputStream;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        $i0 = <ucar.nc2.util.IO: int default_file_buffersize>;

        staticinvoke <ucar.nc2.util.IO: void copyFileB(java.io.File,java.io.OutputStream,int)>($r0, r2, $i0);

        return;
    }

    public static void copyFileB(java.io.File, java.io.OutputStream, int) throws java.io.IOException
    {
        java.io.OutputStream r3;
        java.lang.Throwable $r4;
        java.io.BufferedInputStream $r0, r5;
        int i0;
        java.io.FileInputStream $r1;
        java.io.File r2;

        r2 := @parameter0: java.io.File;

        r3 := @parameter1: java.io.OutputStream;

        i0 := @parameter2: int;

        r5 = null;

     label1:
        $r0 = new java.io.BufferedInputStream;

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>(r2);

        specialinvoke $r0.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r1);

        r5 = $r0;

        staticinvoke <ucar.nc2.util.IO: long copyB(java.io.InputStream,java.io.OutputStream,int)>($r0, r3, i0);

     label2:
        if null == $r0 goto label6;

        virtualinvoke $r0.<java.io.InputStream: void close()>();

        goto label6;

     label3:
        $r4 := @caughtexception;

     label4:
        if null == r5 goto label5;

        virtualinvoke r5.<java.io.InputStream: void close()>();

     label5:
        throw $r4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static long copyRafB(ucar.unidata.io.RandomAccessFile, long, long, java.io.OutputStream, byte[]) throws java.io.IOException
    {
        java.io.OutputStream r2;
        byte[] r0;
        ucar.unidata.io.RandomAccessFile r1;
        long l1, l2, $l4, $l5, $l6, $l9, l10;
        byte $b3;
        int i0, i7, $i8, $i11;

        r1 := @parameter0: ucar.unidata.io.RandomAccessFile;

        l2 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: java.io.OutputStream;

        r0 := @parameter4: byte[];

        i0 = lengthof r0;

        l10 = l1;

        virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: void seek(long)>(l2);

     label1:
        $b3 = l10 cmp 0L;

        $i11 = (int) $b3;

        if $i11 <= 0 goto label3;

        $l5 = (long) i0;

        $l6 = staticinvoke <java.lang.Math: long min(long,long)>(l10, $l5);

        i7 = (int) $l6;

        $i8 = virtualinvoke r1.<ucar.unidata.io.RandomAccessFile: int read(byte[],int,int)>(r0, 0, i7);

        if $i8 > 0 goto label2;

        goto label3;

     label2:
        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>(r0, 0, $i8);

        $l9 = (long) $i8;

        l10 = l10 - $l9;

        goto label1;

     label3:
        $l4 = l1 - l10;

        return $l4;
    }

    public static void copyDirTree(java.lang.String, java.lang.String) throws java.io.IOException
    {
        int $i0, i1;
        java.lang.String r1, r3, $r6, $r8, $r11, $r13, $r14, $r16, $r19, $r21;
        boolean $z0, $z1, $z2;
        java.io.File $r0, $r2, r5;
        java.lang.StringBuilder $r7, $r9, $r10, $r12, $r15, $r17, $r18, $r20;
        java.io.File[] $r4;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r3);

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label2;

        virtualinvoke $r2.<java.io.File: boolean mkdirs()>();

     label2:
        $r4 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();

        $i0 = lengthof $r4;

        i1 = 0;

     label3:
        if i1 >= $i0 goto label6;

        r5 = $r4[i1];

        $z2 = virtualinvoke r5.<java.io.File: boolean isDirectory()>();

        if $z2 == 0 goto label4;

        $r14 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r19 = virtualinvoke r5.<java.io.File: java.lang.String getName()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ucar.nc2.util.IO: void copyDirTree(java.lang.String,java.lang.String)>($r14, $r21);

        goto label5;

     label4:
        $r6 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r11 = virtualinvoke r5.<java.io.File: java.lang.String getName()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ucar.nc2.util.IO: void copyFile(java.lang.String,java.lang.String)>($r6, $r13);

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        return;
    }

    public static byte[] readFileToByteArray(java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r4;
        byte[] $r3;
        java.io.BufferedInputStream $r0, r5;
        java.io.FileInputStream $r1;
        java.lang.String r2;

        r2 := @parameter0: java.lang.String;

        r5 = null;

     label1:
        $r0 = new java.io.BufferedInputStream;

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.lang.String)>(r2);

        specialinvoke $r0.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r1);

        r5 = $r0;

        $r3 = staticinvoke <ucar.nc2.util.IO: byte[] readContentsToByteArray(java.io.InputStream)>($r0);

     label2:
        if $r0 == null goto label3;

        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label3:
        return $r3;

     label4:
        $r4 := @caughtexception;

     label5:
        if r5 == null goto label6;

        virtualinvoke r5.<java.io.InputStream: void close()>();

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static java.lang.String readFile(java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r6;
        java.io.StringWriter $r9;
        java.io.FileInputStream $r7;
        java.io.InputStreamReader $r8;
        int $i1;
        java.lang.String r2, $r5;
        ucar.nc2.util.UnsynchronizedBufferedWriter $r10;

        r2 := @parameter0: java.lang.String;

        $r8 = new java.io.InputStreamReader;

        $r7 = new java.io.FileInputStream;

        specialinvoke $r7.<java.io.FileInputStream: void <init>(java.lang.String)>(r2);

        specialinvoke $r8.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r7, "UTF-8");

     label1:
        $r9 = new java.io.StringWriter;

        $i1 = (int) 50000;

        specialinvoke $r9.<java.io.StringWriter: void <init>(int)>($i1);

        $r10 = new ucar.nc2.util.UnsynchronizedBufferedWriter;

        specialinvoke $r10.<ucar.nc2.util.UnsynchronizedBufferedWriter: void <init>(java.io.Writer)>($r9);

        virtualinvoke $r10.<ucar.nc2.util.UnsynchronizedBufferedWriter: void write(java.io.Reader)>($r8);

        $r5 = virtualinvoke $r9.<java.io.StringWriter: java.lang.String toString()>();

     label2:
        if $r8 == null goto label3;

        virtualinvoke $r8.<java.io.InputStreamReader: void close()>();

     label3:
        return $r5;

     label4:
        $r6 := @caughtexception;

     label5:
        if $r8 == null goto label6;

        virtualinvoke $r8.<java.io.InputStreamReader: void close()>();

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static void writeToFile(java.lang.String, java.io.File) throws java.io.IOException
    {
        java.lang.Throwable $r5;
        java.io.OutputStreamWriter $r0;
        java.io.FileOutputStream $r1;
        java.lang.String r4;
        java.io.File r2;
        ucar.nc2.util.UnsynchronizedBufferedWriter $r3;

        r4 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.File;

        $r0 = new java.io.OutputStreamWriter;

        $r1 = new java.io.FileOutputStream;

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.io.File)>(r2);

        specialinvoke $r0.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r1, "UTF-8");

        $r3 = new ucar.nc2.util.UnsynchronizedBufferedWriter;

        specialinvoke $r3.<ucar.nc2.util.UnsynchronizedBufferedWriter: void <init>(java.io.Writer)>($r0);

     label1:
        virtualinvoke $r3.<ucar.nc2.util.UnsynchronizedBufferedWriter: void write(java.lang.String)>(r4);

        virtualinvoke $r3.<ucar.nc2.util.UnsynchronizedBufferedWriter: void flush()>();

     label2:
        if null == $r3 goto label6;

        virtualinvoke $r3.<ucar.nc2.util.UnsynchronizedBufferedWriter: void close()>();

        goto label6;

     label3:
        $r5 := @caughtexception;

     label4:
        if null == $r3 goto label5;

        virtualinvoke $r3.<ucar.nc2.util.UnsynchronizedBufferedWriter: void close()>();

     label5:
        throw $r5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void writeToFile(byte[], java.io.File) throws java.io.IOException
    {
        java.lang.Throwable $r3;
        byte[] r2;
        java.io.FileOutputStream $r0;
        java.io.File r1;

        r2 := @parameter0: byte[];

        r1 := @parameter1: java.io.File;

        $r0 = new java.io.FileOutputStream;

        specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);

     label1:
        virtualinvoke $r0.<java.io.FileOutputStream: void write(byte[])>(r2);

        virtualinvoke $r0.<java.io.FileOutputStream: void flush()>();

     label2:
        if null == $r0 goto label6;

        virtualinvoke $r0.<java.io.FileOutputStream: void close()>();

        goto label6;

     label3:
        $r3 := @caughtexception;

     label4:
        if null == $r0 goto label5;

        virtualinvoke $r0.<java.io.FileOutputStream: void close()>();

     label5:
        throw $r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void writeToFile(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, r2;
        java.io.File $r1;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(r2);

        staticinvoke <ucar.nc2.util.IO: void writeToFile(java.lang.String,java.io.File)>(r0, $r1);

        return;
    }

    public static long writeToFile(java.io.InputStream, java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r4;
        java.io.FileOutputStream $r1;
        long $l0;
        java.lang.String r2;
        java.io.BufferedOutputStream $r0, r5;
        java.io.InputStream r3;

        r3 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

        r5 = null;

     label1:
        $r0 = new java.io.BufferedOutputStream;

        $r1 = new java.io.FileOutputStream;

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.lang.String)>(r2);

        specialinvoke $r0.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r1);

        r5 = $r0;

        $l0 = staticinvoke <ucar.nc2.util.IO: long copy(java.io.InputStream,java.io.OutputStream)>(r3, $r0);

     label2:
        if null == r3 goto label3;

        virtualinvoke r3.<java.io.InputStream: void close()>();

     label3:
        if null == $r0 goto label4;

        virtualinvoke $r0.<java.io.OutputStream: void close()>();

     label4:
        return $l0;

     label5:
        $r4 := @caughtexception;

     label6:
        if null == r3 goto label7;

        virtualinvoke r3.<java.io.InputStream: void close()>();

     label7:
        if null == r5 goto label8;

        virtualinvoke r5.<java.io.OutputStream: void close()>();

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static long appendToFile(java.io.InputStream, java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r4;
        java.io.FileOutputStream $r1;
        long $l0;
        java.lang.String r2;
        java.io.BufferedOutputStream $r0, r5;
        java.io.InputStream r3;

        r3 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

        r5 = null;

     label1:
        $r0 = new java.io.BufferedOutputStream;

        $r1 = new java.io.FileOutputStream;

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>(r2, 1);

        specialinvoke $r0.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r1);

        r5 = $r0;

        $l0 = staticinvoke <ucar.nc2.util.IO: long copy(java.io.InputStream,java.io.OutputStream)>(r3, $r0);

     label2:
        if null == r3 goto label3;

        virtualinvoke r3.<java.io.InputStream: void close()>();

     label3:
        if null == $r0 goto label4;

        virtualinvoke $r0.<java.io.OutputStream: void close()>();

     label4:
        return $l0;

     label5:
        $r4 := @caughtexception;

     label6:
        if null == r3 goto label7;

        virtualinvoke r3.<java.io.InputStream: void close()>();

     label7:
        if null == r5 goto label8;

        virtualinvoke r5.<java.io.OutputStream: void close()>();

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static long copyUrlB(java.lang.String, java.io.OutputStream, int) throws java.io.IOException
    {
        java.net.HttpURLConnection r103;
        java.util.zip.GZIPInputStream $r5;
        java.io.BufferedInputStream $r4;
        java.util.Map $r47;
        java.util.Set $r48;
        java.lang.Exception $r67;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r13, $r15, $r16, $r17, $r18, $r23, $r25, $r26, $r27, $r28, $r31, $r32, $r33, $r34, $r35, $r36, $r38, $r39, $r41, $r43, $r44, $r45, $r52, $r54, $r55, $r56, $r61, $r63, $r64, $r69, $r70, $r71, $r72, $r73, $r77, $r78, $r79, $r80, $r84, $r85, $r86, $r87, $r89, $r90, $r94, $r95, $r96, $r97, $r99, $r100;
        java.lang.Throwable $r66;
        long l7;
        java.net.URLConnection $r2;
        java.net.ConnectException $r82;
        java.lang.String r1, $r6, $r12, $r19, $r21, $r22, $r29, $r37, $r40, $r46, $r57, r60, $r65, $r74, $r81, $r88, $r91, $r98, $r101, r104, $r107, $r108;
        java.io.IOException $r30, $r68, $r76, $r83, $r93;
        java.net.UnknownHostException $r75;
        java.net.URL $r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.List r105;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        java.io.OutputStream r3;
        java.io.PrintStream $r8, $r14, $r20, $r24, $r42, $r53, $r58, $r62;
        java.util.Iterator $r49;
        java.net.MalformedURLException $r92;
        java.lang.Object $r50, $r51, $r59;
        java.io.InputStream r102, $r106;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.io.OutputStream;

        i0 := @parameter2: int;

        r102 = null;

     label01:
        $r0 = new java.net.URL;

        specialinvoke $r0.<java.net.URL: void <init>(java.lang.String)>(r1);

     label02:
        goto label04;

     label03:
        $r92 := @caughtexception;

        $r93 = new java.io.IOException;

        $r94 = new java.lang.StringBuilder;

        specialinvoke $r94.<java.lang.StringBuilder: void <init>()>();

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** MalformedURLException on URL <");

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r98 = virtualinvoke $r92.<java.net.MalformedURLException: java.lang.String getMessage()>();

        $r99 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r98);

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r93.<java.io.IOException: void <init>(java.lang.String)>($r101);

        throw $r93;

     label04:
        $r2 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>();

        r103 = null;

        $z0 = $r2 instanceof java.net.HttpURLConnection;

        if $z0 == 0 goto label05;

        r103 = (java.net.HttpURLConnection) $r2;

        virtualinvoke r103.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip");

     label05:
        $z1 = <ucar.nc2.util.IO: boolean showHeaders>;

        if $z1 == 0 goto label09;

        $r42 = <java.lang.System: java.io.PrintStream out>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nREQUEST Properties for ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r46);

        $r47 = virtualinvoke $r2.<java.net.URLConnection: java.util.Map getRequestProperties()>();

        $r48 = interfaceinvoke $r47.<java.util.Map: java.util.Set keySet()>();

        $r49 = interfaceinvoke $r48.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z3 = interfaceinvoke $r49.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label09;

        $r50 = interfaceinvoke $r49.<java.util.Iterator: java.lang.Object next()>();

        r104 = (java.lang.String) $r50;

        $r51 = interfaceinvoke $r47.<java.util.Map: java.lang.Object get(java.lang.Object)>(r104);

        r105 = (java.util.List) $r51;

        $r53 = <java.lang.System: java.io.PrintStream out>;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r104);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r53.<java.io.PrintStream: void print(java.lang.String)>($r57);

        i5 = 0;

     label07:
        $i4 = interfaceinvoke r105.<java.util.List: int size()>();

        if i5 >= $i4 goto label08;

        $r59 = interfaceinvoke r105.<java.util.List: java.lang.Object get(int)>(i5);

        r60 = (java.lang.String) $r59;

        $r62 = <java.lang.System: java.io.PrintStream out>;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r60);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r62.<java.io.PrintStream: void print(java.lang.String)>($r65);

        i5 = i5 + 1;

        goto label07;

     label08:
        $r58 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r58.<java.io.PrintStream: void println(java.lang.String)>("");

        goto label06;

     label09:
        if r103 == null goto label10;

        $i2 = virtualinvoke r103.<java.net.HttpURLConnection: int getResponseCode()>();

        $i3 = $i2 / 100;

        if $i3 == 2 goto label10;

        $r30 = new java.io.IOException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** Cant open URL <");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n Response code = ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r37 = virtualinvoke r103.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.io.IOException: void <init>(java.lang.String)>($r40);

        throw $r30;

     label10:
        $z2 = <ucar.nc2.util.IO: boolean showHeaders>;

        if $z2 == 0 goto label13;

        if r103 == null goto label13;

        $i1 = virtualinvoke r103.<java.net.HttpURLConnection: int getResponseCode()>();

        $r6 = virtualinvoke r103.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nRESPONSE for ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r12);

        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" HTTP/1.x ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r19);

        $r20 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>("Headers: ");

        i6 = 1;

     label11:
        $r21 = virtualinvoke $r2.<java.net.URLConnection: java.lang.String getHeaderField(int)>(i6);

        $r22 = virtualinvoke $r2.<java.net.URLConnection: java.lang.String getHeaderFieldKey(int)>(i6);

        if $r21 == null goto label13;

        if $r22 != null goto label12;

        goto label13;

     label12:
        $r24 = <java.lang.System: java.io.PrintStream out>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r29);

        i6 = i6 + 1;

        goto label11;

     label13:
        $r106 = virtualinvoke $r2.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        r102 = $r106;

        $r107 = "gzip";

        $r108 = virtualinvoke $r2.<java.net.URLConnection: java.lang.String getContentEncoding()>();

        $z7 = virtualinvoke $r107.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r108);

        if $z7 == 0 goto label14;

        $r4 = new java.io.BufferedInputStream;

        $r5 = new java.util.zip.GZIPInputStream;

        specialinvoke $r5.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r106);

        specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r5, 1000);

        r102 = $r4;

     label14:
        if r3 != null goto label15;

        l7 = staticinvoke <ucar.nc2.util.IO: long copy2null(java.io.InputStream,int)>(r102, i0);

        goto label16;

     label15:
        l7 = staticinvoke <ucar.nc2.util.IO: long copyB(java.io.InputStream,java.io.OutputStream,int)>(r102, r3, i0);

     label16:
        if r102 == null goto label26;

        virtualinvoke r102.<java.io.InputStream: void close()>();

        goto label26;

     label17:
        $r82 := @caughtexception;

        $z6 = <ucar.nc2.util.IO: boolean showStackTrace>;

        if $z6 == 0 goto label18;

        virtualinvoke $r82.<java.net.ConnectException: void printStackTrace()>();

     label18:
        $r83 = new java.io.IOException;

        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** ConnectException on URL: <");

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r88 = virtualinvoke $r82.<java.net.ConnectException: java.lang.String getMessage()>();

        $r89 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r88);

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nServer probably not running");

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r83.<java.io.IOException: void <init>(java.lang.String)>($r91);

        throw $r83;

     label19:
        $r75 := @caughtexception;

        $z5 = <ucar.nc2.util.IO: boolean showStackTrace>;

        if $z5 == 0 goto label20;

        virtualinvoke $r75.<java.net.UnknownHostException: void printStackTrace()>();

     label20:
        $r76 = new java.io.IOException;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** UnknownHostException on URL: <");

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r76.<java.io.IOException: void <init>(java.lang.String)>($r81);

        throw $r76;

     label21:
        $r67 := @caughtexception;

        $z4 = <ucar.nc2.util.IO: boolean showStackTrace>;

        if $z4 == 0 goto label22;

        virtualinvoke $r67.<java.lang.Exception: void printStackTrace()>();

     label22:
        $r68 = new java.io.IOException;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** Exception on URL: <");

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r67);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r68.<java.io.IOException: void <init>(java.lang.String)>($r74);

        throw $r68;

     label23:
        $r66 := @caughtexception;

     label24:
        if r102 == null goto label25;

        virtualinvoke r102.<java.io.InputStream: void close()>();

     label25:
        throw $r66;

     label26:
        return l7;

        catch java.net.MalformedURLException from label01 to label02 with label03;
        catch java.net.ConnectException from label04 to label16 with label17;
        catch java.net.UnknownHostException from label04 to label16 with label19;
        catch java.lang.Exception from label04 to label16 with label21;
        catch java.lang.Throwable from label04 to label16 with label23;
        catch java.lang.Throwable from label17 to label24 with label23;
    }

    public static java.io.InputStream getInputStreamFromUrl(java.lang.String) throws java.io.IOException
    {
        java.net.HttpURLConnection r100;
        java.util.zip.GZIPInputStream $r4;
        java.io.BufferedInputStream $r3;
        java.util.Map $r46;
        java.util.Set $r47;
        java.lang.Exception $r65;
        java.lang.StringBuilder $r6, $r8, $r9, $r10, $r12, $r14, $r15, $r16, $r17, $r22, $r24, $r25, $r26, $r27, $r30, $r31, $r32, $r33, $r34, $r35, $r37, $r38, $r40, $r42, $r43, $r44, $r51, $r53, $r54, $r55, $r60, $r62, $r63, $r67, $r68, $r69, $r70, $r71, $r75, $r76, $r77, $r78, $r82, $r83, $r84, $r85, $r87, $r88, $r92, $r93, $r94, $r95, $r97, $r98;
        java.net.URLConnection $r2;
        java.net.ConnectException $r80;
        java.lang.String r1, $r5, $r11, $r18, $r20, $r21, $r28, $r36, $r39, $r45, $r56, r59, $r64, $r72, $r79, $r86, $r89, $r96, $r99, r101, $r105, $r106;
        java.io.IOException $r29, $r66, $r74, $r81, $r91;
        java.net.UnknownHostException $r73;
        java.net.URL $r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.List r102;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.io.PrintStream $r7, $r13, $r19, $r23, $r41, $r52, $r57, $r61;
        java.util.Iterator $r48;
        java.net.MalformedURLException $r90;
        java.lang.Object $r49, $r50, $r58;
        java.io.InputStream $r103, r104;

        r1 := @parameter0: java.lang.String;

     label01:
        $r0 = new java.net.URL;

        specialinvoke $r0.<java.net.URL: void <init>(java.lang.String)>(r1);

     label02:
        goto label04;

     label03:
        $r90 := @caughtexception;

        $r91 = new java.io.IOException;

        $r92 = new java.lang.StringBuilder;

        specialinvoke $r92.<java.lang.StringBuilder: void <init>()>();

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** MalformedURLException on URL <");

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r96 = virtualinvoke $r90.<java.net.MalformedURLException: java.lang.String getMessage()>();

        $r97 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r96);

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r91.<java.io.IOException: void <init>(java.lang.String)>($r99);

        throw $r91;

     label04:
        $r2 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>();

        r100 = null;

        $z0 = $r2 instanceof java.net.HttpURLConnection;

        if $z0 == 0 goto label05;

        r100 = (java.net.HttpURLConnection) $r2;

        virtualinvoke r100.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip");

     label05:
        $z1 = <ucar.nc2.util.IO: boolean showHeaders>;

        if $z1 == 0 goto label09;

        $r41 = <java.lang.System: java.io.PrintStream out>;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nREQUEST Properties for ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>($r45);

        $r46 = virtualinvoke $r2.<java.net.URLConnection: java.util.Map getRequestProperties()>();

        $r47 = interfaceinvoke $r46.<java.util.Map: java.util.Set keySet()>();

        $r48 = interfaceinvoke $r47.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z3 = interfaceinvoke $r48.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label09;

        $r49 = interfaceinvoke $r48.<java.util.Iterator: java.lang.Object next()>();

        r101 = (java.lang.String) $r49;

        $r50 = interfaceinvoke $r46.<java.util.Map: java.lang.Object get(java.lang.Object)>(r101);

        r102 = (java.util.List) $r50;

        $r52 = <java.lang.System: java.io.PrintStream out>;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r101);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r52.<java.io.PrintStream: void print(java.lang.String)>($r56);

        i4 = 0;

     label07:
        $i3 = interfaceinvoke r102.<java.util.List: int size()>();

        if i4 >= $i3 goto label08;

        $r58 = interfaceinvoke r102.<java.util.List: java.lang.Object get(int)>(i4);

        r59 = (java.lang.String) $r58;

        $r61 = <java.lang.System: java.io.PrintStream out>;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r59);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r61.<java.io.PrintStream: void print(java.lang.String)>($r64);

        i4 = i4 + 1;

        goto label07;

     label08:
        $r57 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r57.<java.io.PrintStream: void println(java.lang.String)>("");

        goto label06;

     label09:
        if r100 == null goto label10;

        $i1 = virtualinvoke r100.<java.net.HttpURLConnection: int getResponseCode()>();

        $i2 = $i1 / 100;

        if $i2 == 2 goto label10;

        $r29 = new java.io.IOException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** Cant open URL <");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n Response code = ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r36 = virtualinvoke r100.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.io.IOException: void <init>(java.lang.String)>($r39);

        throw $r29;

     label10:
        $z2 = <ucar.nc2.util.IO: boolean showHeaders>;

        if $z2 == 0 goto label13;

        if r100 == null goto label13;

        $i0 = virtualinvoke r100.<java.net.HttpURLConnection: int getResponseCode()>();

        $r5 = virtualinvoke r100.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nRESPONSE for ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r11);

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" HTTP/1.x ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18);

        $r19 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>("Headers: ");

        i5 = 1;

     label11:
        $r20 = virtualinvoke $r2.<java.net.URLConnection: java.lang.String getHeaderField(int)>(i5);

        $r21 = virtualinvoke $r2.<java.net.URLConnection: java.lang.String getHeaderFieldKey(int)>(i5);

        if $r20 == null goto label13;

        if $r21 != null goto label12;

        goto label13;

     label12:
        $r23 = <java.lang.System: java.io.PrintStream out>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r28);

        i5 = i5 + 1;

        goto label11;

     label13:
        $r103 = virtualinvoke $r2.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        r104 = $r103;

        $r105 = "gzip";

        $r106 = virtualinvoke $r2.<java.net.URLConnection: java.lang.String getContentEncoding()>();

        $z7 = virtualinvoke $r105.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r106);

        if $z7 == 0 goto label14;

        $r3 = new java.io.BufferedInputStream;

        $r4 = new java.util.zip.GZIPInputStream;

        specialinvoke $r4.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r103);

        specialinvoke $r3.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r4, 1000);

        r104 = $r3;

     label14:
        return r104;

     label15:
        $r80 := @caughtexception;

        $z6 = <ucar.nc2.util.IO: boolean showStackTrace>;

        if $z6 == 0 goto label16;

        virtualinvoke $r80.<java.net.ConnectException: void printStackTrace()>();

     label16:
        $r81 = new java.io.IOException;

        $r82 = new java.lang.StringBuilder;

        specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** ConnectException on URL: <");

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r86 = virtualinvoke $r80.<java.net.ConnectException: java.lang.String getMessage()>();

        $r87 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86);

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nServer probably not running");

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r81.<java.io.IOException: void <init>(java.lang.String)>($r89);

        throw $r81;

     label17:
        $r73 := @caughtexception;

        $z5 = <ucar.nc2.util.IO: boolean showStackTrace>;

        if $z5 == 0 goto label18;

        virtualinvoke $r73.<java.net.UnknownHostException: void printStackTrace()>();

     label18:
        $r74 = new java.io.IOException;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** UnknownHostException on URL: <");

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r74.<java.io.IOException: void <init>(java.lang.String)>($r79);

        throw $r74;

     label19:
        $r65 := @caughtexception;

        $z4 = <ucar.nc2.util.IO: boolean showStackTrace>;

        if $z4 == 0 goto label20;

        virtualinvoke $r65.<java.lang.Exception: void printStackTrace()>();

     label20:
        $r66 = new java.io.IOException;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** Exception on URL: <");

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r65);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r66.<java.io.IOException: void <init>(java.lang.String)>($r72);

        throw $r66;

        catch java.net.MalformedURLException from label01 to label02 with label03;
        catch java.net.ConnectException from label04 to label14 with label15;
        catch java.net.UnknownHostException from label04 to label14 with label17;
        catch java.lang.Exception from label04 to label14 with label19;
    }

    public static java.lang.String readURLtoFile(java.lang.String, java.io.File)
    {
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r10, $r11, $r15, $r16, $r17, $r18, $r20, $r21, $r24, $r25, $r26, $r27, $r29, $r30, $r33, $r34, $r35, $r36, $r38, $r39, $r42, $r43, $r44, $r45, $r47, $r48;
        java.lang.Throwable $r13;
        java.io.BufferedOutputStream $r0;
        java.lang.String r3, $r9, $r12, $r19, $r22, $r28, $r31, $r37, $r40, $r46, $r49;
        java.io.FileOutputStream $r1;
        java.io.IOException $r4, $r14, $r23, $r32, $r41;
        java.io.File r2;

        r3 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.File;

     label01:
        $r0 = new java.io.BufferedOutputStream;

        $r1 = new java.io.FileOutputStream;

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.io.File)>(r2);

        specialinvoke $r0.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r1);

     label02:
        goto label05;

     label03:
        $r41 := @caughtexception;

        $z1 = <ucar.nc2.util.IO: boolean showStackTrace>;

        if $z1 == 0 goto label04;

        virtualinvoke $r41.<java.io.IOException: void printStackTrace()>();

     label04:
        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** IOException opening file: <");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r46 = virtualinvoke $r41.<java.io.IOException: java.lang.String getMessage()>();

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r49;

     label05:
        staticinvoke <ucar.nc2.util.IO: long copyUrlB(java.lang.String,java.io.OutputStream,int)>(r3, $r0, 20000);

     label06:
        virtualinvoke $r0.<java.io.OutputStream: void close()>();

     label07:
        goto label09;

     label08:
        $r32 := @caughtexception;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** IOException closing file : <");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r37 = virtualinvoke $r32.<java.io.IOException: java.lang.String getMessage()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r40;

     label09:
        return "ok";

     label10:
        $r23 := @caughtexception;

        $z0 = <ucar.nc2.util.IO: boolean showStackTrace>;

        if $z0 == 0 goto label11;

        virtualinvoke $r23.<java.io.IOException: void printStackTrace()>();

     label11:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** IOException reading URL: <");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r28 = virtualinvoke $r23.<java.io.IOException: java.lang.String getMessage()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        virtualinvoke $r0.<java.io.OutputStream: void close()>();

     label13:
        goto label15;

     label14:
        $r14 := @caughtexception;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** IOException closing file : <");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r19 = virtualinvoke $r14.<java.io.IOException: java.lang.String getMessage()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r22;

     label15:
        return $r31;

     label16:
        $r13 := @caughtexception;

     label17:
        virtualinvoke $r0.<java.io.OutputStream: void close()>();

     label18:
        goto label20;

     label19:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** IOException closing file : <");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r9 = virtualinvoke $r4.<java.io.IOException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;

     label20:
        throw $r13;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.io.IOException from label05 to label06 with label10;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label10 to label12 with label16;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    public static byte[] readURLContentsToByteArray(java.lang.String) throws java.io.IOException
    {
        byte[] $r2;
        java.lang.String r1;
        java.io.ByteArrayOutputStream $r0;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>(int)>(200000);

        staticinvoke <ucar.nc2.util.IO: long copyUrlB(java.lang.String,java.io.OutputStream,int)>(r1, $r0, 200000);

        $r2 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r2;
    }

    public static java.lang.String readURLtoFileWithExceptions(java.lang.String, java.io.File) throws java.io.IOException
    {
        int $i0;
        java.lang.String r0, $r2;
        java.io.File r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.File;

        $i0 = <ucar.nc2.util.IO: int default_socket_buffersize>;

        $r2 = staticinvoke <ucar.nc2.util.IO: java.lang.String readURLtoFileWithExceptions(java.lang.String,java.io.File,int)>(r0, r1, $i0);

        return $r2;
    }

    public static java.lang.String readURLtoFileWithExceptions(java.lang.String, java.io.File, int) throws java.io.IOException
    {
        java.lang.Throwable $r13;
        java.io.BufferedOutputStream $r0;
        int i0;
        java.lang.String r3, $r9, $r12, $r19, $r22;
        java.io.FileOutputStream $r1;
        java.io.IOException $r4, $r14;
        java.io.File r2;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r10, $r11, $r15, $r16, $r17, $r18, $r20, $r21;

        r3 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.File;

        i0 := @parameter2: int;

        $r0 = new java.io.BufferedOutputStream;

        $r1 = new java.io.FileOutputStream;

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.io.File)>(r2);

        specialinvoke $r0.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r1);

     label01:
        staticinvoke <ucar.nc2.util.IO: long copyUrlB(java.lang.String,java.io.OutputStream,int)>(r3, $r0, i0);

     label02:
        virtualinvoke $r0.<java.io.OutputStream: void close()>();

     label03:
        goto label05;

     label04:
        $r14 := @caughtexception;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** IOException closing file : <");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r19 = virtualinvoke $r14.<java.io.IOException: java.lang.String getMessage()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r22;

     label05:
        return "ok";

     label06:
        $r13 := @caughtexception;

     label07:
        virtualinvoke $r0.<java.io.OutputStream: void close()>();

     label08:
        goto label10;

     label09:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** IOException closing file : <");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r9 = virtualinvoke $r4.<java.io.IOException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;

     label10:
        throw $r13;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

    public static java.lang.String readURLcontentsWithException(java.lang.String) throws java.io.IOException
    {
        java.lang.String r1, $r2;
        java.io.ByteArrayOutputStream $r0;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>(int)>(20000);

        staticinvoke <ucar.nc2.util.IO: long copyUrlB(java.lang.String,java.io.OutputStream,int)>(r1, $r0, 20000);

        $r2 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String readURLcontents(java.lang.String)
    {
        java.io.IOException $r2;
        java.lang.String r0, $r1, $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <ucar.nc2.util.IO: java.lang.String readURLcontentsWithException(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r2.<java.io.IOException: java.lang.String getMessage()>();

        return $r3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static ucar.nc2.util.IO$HttpResult putToURL(java.lang.String, java.lang.String)
    {
        java.net.HttpURLConnection r38;
        byte[] $r7;
        java.net.URL $r39;
        ucar.nc2.util.IO$HttpResult $r41, $r44, $r46, $r48;
        java.io.ByteArrayInputStream $r43;
        boolean $z0, $z1;
        java.lang.StringBuilder $r13, $r14, $r15, $r17, $r22, $r23, $r24, $r26, $r27, $r32, $r33, $r34, $r36, $r40, $r45, $r47;
        java.io.BufferedOutputStream $r42;
        java.net.URLConnection $r2;
        int $i0, $i2, $i4, $i6;
        java.net.ConnectException $r19;
        java.lang.String r1, r6, $r8, $r16, $r18, $r25, $r28, $r35, $r37;
        java.io.OutputStream $r4;
        java.net.MalformedURLException $r29;
        java.io.IOException $r10;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

     label1:
        $r39 = new java.net.URL;

        specialinvoke $r39.<java.net.URL: void <init>(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r29 := @caughtexception;

        $r41 = new ucar.nc2.util.IO$HttpResult;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** MalformedURLException on URL (");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\n");

        $r35 = virtualinvoke $r29.<java.net.MalformedURLException: java.lang.String getMessage()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = (int) -1;

        specialinvoke $r41.<ucar.nc2.util.IO$HttpResult: void <init>(int,java.lang.String)>($i2, $r37);

        return $r41;

     label4:
        $r2 = virtualinvoke $r39.<java.net.URL: java.net.URLConnection openConnection()>();

        r38 = (java.net.HttpURLConnection) $r2;

        virtualinvoke r38.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        virtualinvoke r38.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("PUT");

        $r42 = new java.io.BufferedOutputStream;

        $r4 = virtualinvoke r38.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        specialinvoke $r42.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r4);

        $r43 = new java.io.ByteArrayInputStream;

        $r7 = virtualinvoke r6.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r43.<java.io.ByteArrayInputStream: void <init>(byte[])>($r7);

        staticinvoke <ucar.nc2.util.IO: long copy(java.io.InputStream,java.io.OutputStream)>($r43, $r42);

        virtualinvoke $r42.<java.io.OutputStream: void flush()>();

        virtualinvoke $r42.<java.io.OutputStream: void close()>();

        $i0 = virtualinvoke r38.<java.net.HttpURLConnection: int getResponseCode()>();

        $r8 = virtualinvoke r38.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

        $r44 = new ucar.nc2.util.IO$HttpResult;

        specialinvoke $r44.<ucar.nc2.util.IO$HttpResult: void <init>(int,java.lang.String)>($i0, $r8);

     label5:
        return $r44;

     label6:
        $r19 := @caughtexception;

        $z1 = <ucar.nc2.util.IO: boolean showStackTrace>;

        if $z1 == 0 goto label7;

        virtualinvoke $r19.<java.net.ConnectException: void printStackTrace()>();

     label7:
        $r46 = new ucar.nc2.util.IO$HttpResult;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** ConnectException on URL: <");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r25 = virtualinvoke $r19.<java.net.ConnectException: java.lang.String getMessage()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nServer probably not running");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $i4 = (int) -2;

        specialinvoke $r46.<ucar.nc2.util.IO$HttpResult: void <init>(int,java.lang.String)>($i4, $r28);

        return $r46;

     label8:
        $r10 := @caughtexception;

        $z0 = <ucar.nc2.util.IO: boolean showStackTrace>;

        if $z0 == 0 goto label9;

        virtualinvoke $r10.<java.io.IOException: void printStackTrace()>();

     label9:
        $r48 = new ucar.nc2.util.IO$HttpResult;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** IOException on URL: (");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\n");

        $r16 = virtualinvoke $r10.<java.io.IOException: java.lang.String getMessage()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $i6 = (int) -3;

        specialinvoke $r48.<ucar.nc2.util.IO$HttpResult: void <init>(int,java.lang.String)>($i6, $r18);

        return $r48;

        catch java.net.MalformedURLException from label1 to label2 with label3;
        catch java.net.ConnectException from label4 to label5 with label6;
        catch java.io.IOException from label4 to label5 with label8;
    }

    public static void testRead()
    {
        int i0;
        java.lang.String $r1, $r5, $r11, $r16, $r20;
        java.io.PrintStream $r7;
        java.io.File $r0, $r12;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r8, $r9, $r10, $r13, $r14, $r15, $r17, $r18, $r19;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>("");

        virtualinvoke $r0.<java.io.File: boolean mkdirs()>();

        i0 = 1;

     label1:
        if i0 >= 159 goto label2;

        $r1 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String padZero(int,int)>(i0, 3);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".jpg");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Open ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r11);

        $r12 = new java.io.File;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>($r16);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://moca.virtual.museum/legac/legac01.htm");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ucar.nc2.util.IO: java.lang.String readURLtoFile(java.lang.String,java.io.File)>($r20, $r12);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public static void main4(java.lang.String[])
    {
        long $l0, $l1, $l2, $l3;
        java.lang.String[] r14;
        java.lang.String $r1, $r8, $r13;
        double $d0, d1;
        java.io.PrintStream $r2, $r4, $r10;
        java.io.File $r0;
        java.lang.StringBuilder $r3, $r5, $r6, $r7, $r9, $r11, $r12;

        r14 := @parameter0: java.lang.String[];

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>("C:/temp/tempFile4.compress");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = staticinvoke <ucar.nc2.util.IO: java.lang.String readURLtoFile(java.lang.String,java.io.File)>("http://whoopee:8080/thredds/dodsC/test/2005052412_NAM.wmo.dods?Best_4-layer_lifted_index", $r0);

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = $l1 - $l0;

        $d0 = (double) $l2;

        d1 = 0.001 * $d0;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that took = ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sec");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" file size = ");

        $l3 = virtualinvoke $r0.<java.io.File: long length()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);

        return;
    }

    public static void mainn(java.lang.String[])
    {
        java.io.RandomAccessFile $r51, r52;
        java.lang.StringBuilder $r2, $r4, $r5, $r8, $r10, $r11, $r12, $r13, $r14, $r17, $r19, $r20, $r21, $r22, $r23, $r27, $r29, $r30, $r31, $r32, $r33, $r40, $r42, $r43, $r44, $r45, $r46;
        long $l0, $l2, $l3, $l5, $l6, $l7, l9, l10, l11, l14;
        java.util.ArrayList $r0, $r1;
        java.lang.String $r6, $r15, $r24, $r34, $r36, $r47;
        java.io.IOException $r7, $r39;
        java.io.File $r25, r35, $r50, r53;
        boolean $z0, $z1, $z2;
        java.lang.String[] r49;
        int $i1, $i4, i8, i12, i13;
        java.io.PrintStream $r3, $r9, $r18, $r28, $r41;
        java.util.Iterator $r16, $r48;
        java.lang.Object $r37, $r38;
        java.io.File[] $r26;

        r49 := @parameter0: java.lang.String[];

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        i8 = 0;

     label01:
        $r50 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("test", "tmp");

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r50);

        $r51 = new java.io.RandomAccessFile;

        specialinvoke $r51.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r50, "r");

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r51);

     label02:
        goto label04;

     label03:
        $r39 := @caughtexception;

        virtualinvoke $r39.<java.io.IOException: void printStackTrace()>();

        goto label05;

     label04:
        i8 = i8 + 1;

        $i1 = i8 % 50;

        if $i1 != 0 goto label01;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);

        goto label01;

     label05:
        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l9 = $l6 - $l0;

        $r41 = <java.lang.System: java.io.PrintStream out>;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Created and opened ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" files in ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l9);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msecs");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>($r47);

        $l7 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r48 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r48.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r38 = interfaceinvoke $r48.<java.util.Iterator: java.lang.Object next()>();

        r52 = (java.io.RandomAccessFile) $r38;

     label07:
        virtualinvoke r52.<java.io.RandomAccessFile: void close()>();

     label08:
        goto label10;

     label09:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.io.IOException: void printStackTrace()>();

     label10:
        goto label06;

     label11:
        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l10 = $l2 - $l7;

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Closed ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" files in ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l10);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msecs");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r15);

        $r16 = virtualinvoke $r0.<java.util.ArrayList: java.util.Iterator iterator()>();

     label12:
        $z1 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r37 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r53 = (java.io.File) $r37;

        virtualinvoke r53.<java.io.File: boolean delete()>();

        goto label12;

     label13:
        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l11 = $l3 - $l7;

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Deleted ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" files in ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l11);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msecs");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r24);

        i12 = 0;

        staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r25 = new java.io.File;

        specialinvoke $r25.<java.io.File: void <init>(java.lang.String)>("/var/tmp/");

        $r26 = virtualinvoke $r25.<java.io.File: java.io.File[] listFiles()>();

        i13 = 0;

     label14:
        $i4 = lengthof $r26;

        if i13 >= $i4 goto label16;

        r35 = $r26[i13];

        $r36 = virtualinvoke r35.<java.io.File: java.lang.String getName()>();

        $z2 = virtualinvoke $r36.<java.lang.String: boolean endsWith(java.lang.String)>("tmp");

        if $z2 == 0 goto label15;

        virtualinvoke r35.<java.io.File: boolean delete()>();

        i12 = i12 + 1;

     label15:
        i13 = i13 + 1;

        goto label14;

     label16:
        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l14 = $l5 - $l7;

        $r28 = <java.lang.System: java.io.PrintStream out>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Deleted ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" files in ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l14);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msecs");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r34);

        return;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.io.IOException from label07 to label08 with label09;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.io.PrintStream $r4;
        java.io.FileOutputStream $r0;
        long $l0, $l1, $l2;
        java.lang.String[] r9;
        java.util.Formatter $r1, $r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r7;
        java.lang.String $r8;
        double $d0, d1;

        r9 := @parameter0: java.lang.String[];

        $r0 = new java.io.FileOutputStream;

        specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.lang.String)>("C:/TEMP/read.txt");

        $r1 = new java.util.Formatter;

        specialinvoke $r1.<java.util.Formatter: void <init>(java.io.OutputStream)>($r0);

        <ucar.nc2.util.IO: java.util.Formatter fout> = $r1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        staticinvoke <ucar.nc2.util.IO: long copyUrlB(java.lang.String,java.io.OutputStream,int)>("http://newmotherlode.ucar.edu:8081/thredds/fileServer/fmrc/NCEP/GFS/Global_onedeg/files/GFS_Global_onedeg_20080922_0600.grib2", null, 1000000);

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = $l1 - $l0;

        $d0 = (double) $l2;

        d1 = 0.001 * $d0;

        $r2 = <ucar.nc2.util.IO: java.util.Formatter fout>;

        virtualinvoke $r2.<java.util.Formatter: void flush()>();

        virtualinvoke $r0.<java.io.FileOutputStream: void close()>();

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that took = ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sec");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);

        return;
    }

    static void <clinit>()
    {
        <ucar.nc2.util.IO: int default_file_buffersize> = 9200;

        <ucar.nc2.util.IO: int default_socket_buffersize> = 64000;

        <ucar.nc2.util.IO: boolean showStackTrace> = 0;

        <ucar.nc2.util.IO: boolean debug> = 0;

        <ucar.nc2.util.IO: boolean showResponse> = 0;

        <ucar.nc2.util.IO: boolean showHeaders> = 0;

        return;
    }
}
