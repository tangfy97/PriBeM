final class com.hp.hpl.jena.graph.compose.CompositionBase$3 extends com.hp.hpl.jena.util.iterator.Filter
{
    final java.util.Set val$seen;

    void <init>(java.util.Set)
    {
        java.util.Set r1;
        com.hp.hpl.jena.graph.compose.CompositionBase$3 r0;

        r0 := @this: com.hp.hpl.jena.graph.compose.CompositionBase$3;

        r1 := @parameter0: java.util.Set;

        r0.<com.hp.hpl.jena.graph.compose.CompositionBase$3: java.util.Set val$seen> = r1;

        specialinvoke r0.<com.hp.hpl.jena.util.iterator.Filter: void <init>()>();

        return;
    }

    public boolean accept(com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.graph.compose.CompositionBase$3 r0;
        java.util.Set $r2;
        com.hp.hpl.jena.graph.Triple r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.compose.CompositionBase$3;

        r1 := @parameter0: com.hp.hpl.jena.graph.Triple;

        $r2 = r0.<com.hp.hpl.jena.graph.compose.CompositionBase$3: java.util.Set val$seen>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public volatile boolean accept(java.lang.Object)
    {
        com.hp.hpl.jena.graph.compose.CompositionBase$3 r0;
        java.lang.Object r1;
        com.hp.hpl.jena.graph.Triple $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.compose.CompositionBase$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.hp.hpl.jena.graph.Triple) r1;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.graph.compose.CompositionBase$3: boolean accept(com.hp.hpl.jena.graph.Triple)>($r2);

        return $z0;
    }
}
