public class com.jidesoft.spinner.SpinnerPointModel extends javax.swing.AbstractSpinnerModel
{
    public static final int FIELD_X;
    public static final int FIELD_Y;
    private java.awt.Point point;
    private int field;

    public void <init>()
    {
        com.jidesoft.spinner.SpinnerPointModel r0;

        r0 := @this: com.jidesoft.spinner.SpinnerPointModel;

        specialinvoke r0.<com.jidesoft.spinner.SpinnerPointModel: void <init>(java.awt.Point)>(null);

        return;
    }

    public void <init>(java.awt.Point)
    {
        com.jidesoft.spinner.SpinnerPointModel r0;
        java.awt.Point r1, $r2;

        r0 := @this: com.jidesoft.spinner.SpinnerPointModel;

        r1 := @parameter0: java.awt.Point;

        specialinvoke r0.<javax.swing.AbstractSpinnerModel: void <init>()>();

        r0.<com.jidesoft.spinner.SpinnerPointModel: int field> = 0;

        if r1 != null goto label1;

        $r2 = new java.awt.Point;

        specialinvoke $r2.<java.awt.Point: void <init>()>();

        goto label2;

     label1:
        $r2 = r1;

     label2:
        r0.<com.jidesoft.spinner.SpinnerPointModel: java.awt.Point point> = $r2;

        return;
    }

    public java.lang.Object getValue()
    {
        com.jidesoft.spinner.SpinnerPointModel r0;
        java.awt.Point $r1;

        r0 := @this: com.jidesoft.spinner.SpinnerPointModel;

        $r1 = r0.<com.jidesoft.spinner.SpinnerPointModel: java.awt.Point point>;

        return $r1;
    }

    public void setValue(java.lang.Object)
    {
        java.lang.Object r0;
        com.jidesoft.spinner.SpinnerPointModel r1;
        java.awt.Point $r2;
        boolean $z0;

        r1 := @this: com.jidesoft.spinner.SpinnerPointModel;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.awt.Point;

        if $z0 == 0 goto label1;

        $r2 = (java.awt.Point) r0;

        virtualinvoke r1.<com.jidesoft.spinner.SpinnerPointModel: void setPoint(java.awt.Point)>($r2);

     label1:
        return;
    }

    public java.awt.Point getPoint()
    {
        com.jidesoft.spinner.SpinnerPointModel r0;
        java.awt.Point $r1;

        r0 := @this: com.jidesoft.spinner.SpinnerPointModel;

        $r1 = r0.<com.jidesoft.spinner.SpinnerPointModel: java.awt.Point point>;

        return $r1;
    }

    public void setPoint(java.awt.Point)
    {
        com.jidesoft.spinner.SpinnerPointModel r0;
        java.awt.Point r1, $r2;
        boolean $z0;

        r0 := @this: com.jidesoft.spinner.SpinnerPointModel;

        r1 := @parameter0: java.awt.Point;

        $r2 = r0.<com.jidesoft.spinner.SpinnerPointModel: java.awt.Point point>;

        $z0 = virtualinvoke $r2.<java.awt.Point: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        r0.<com.jidesoft.spinner.SpinnerPointModel: java.awt.Point point> = r1;

        virtualinvoke r0.<com.jidesoft.spinner.SpinnerPointModel: void fireStateChanged()>();

     label1:
        return;
    }

    public int getField()
    {
        int $i0;
        com.jidesoft.spinner.SpinnerPointModel r0;

        r0 := @this: com.jidesoft.spinner.SpinnerPointModel;

        $i0 = r0.<com.jidesoft.spinner.SpinnerPointModel: int field>;

        return $i0;
    }

    public void setField(int)
    {
        int i0;
        com.jidesoft.spinner.SpinnerPointModel r0;

        r0 := @this: com.jidesoft.spinner.SpinnerPointModel;

        i0 := @parameter0: int;

        r0.<com.jidesoft.spinner.SpinnerPointModel: int field> = i0;

        return;
    }

    public java.lang.Object getNextValue()
    {
        java.awt.Point $r1, r3;
        int $i0, $i1, $i2, $i3, $i4;
        com.jidesoft.spinner.SpinnerPointModel r0;
        java.lang.Object $r2;

        r0 := @this: com.jidesoft.spinner.SpinnerPointModel;

        $r1 = r0.<com.jidesoft.spinner.SpinnerPointModel: java.awt.Point point>;

        $r2 = virtualinvoke $r1.<java.awt.Point: java.lang.Object clone()>();

        r3 = (java.awt.Point) $r2;

        $i0 = r0.<com.jidesoft.spinner.SpinnerPointModel: int field>;

        if $i0 != 0 goto label1;

        $i3 = r3.<java.awt.Point: int x>;

        $i4 = $i3 + 1;

        r3.<java.awt.Point: int x> = $i4;

        goto label2;

     label1:
        $i1 = r3.<java.awt.Point: int y>;

        $i2 = $i1 + 1;

        r3.<java.awt.Point: int y> = $i2;

     label2:
        return r3;
    }

    public java.lang.Object getPreviousValue()
    {
        java.awt.Point $r1, r3;
        int $i0, $i1, $i2, $i3, $i4;
        com.jidesoft.spinner.SpinnerPointModel r0;
        java.lang.Object $r2;

        r0 := @this: com.jidesoft.spinner.SpinnerPointModel;

        $r1 = r0.<com.jidesoft.spinner.SpinnerPointModel: java.awt.Point point>;

        $r2 = virtualinvoke $r1.<java.awt.Point: java.lang.Object clone()>();

        r3 = (java.awt.Point) $r2;

        $i0 = r0.<com.jidesoft.spinner.SpinnerPointModel: int field>;

        if $i0 != 0 goto label1;

        $i3 = r3.<java.awt.Point: int x>;

        $i4 = $i3 - 1;

        r3.<java.awt.Point: int x> = $i4;

        goto label2;

     label1:
        $i1 = r3.<java.awt.Point: int y>;

        $i2 = $i1 - 1;

        r3.<java.awt.Point: int y> = $i2;

     label2:
        return r3;
    }

    public static void <clinit>()
    {
        <com.jidesoft.spinner.SpinnerPointModel: int FIELD_Y> = 1;

        <com.jidesoft.spinner.SpinnerPointModel: int FIELD_X> = 0;

        return;
    }
}
