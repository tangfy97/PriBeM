public abstract enum class com.google.gxp.compiler.base.OutputLanguage extends java.lang.Enum
{
    public static final enum com.google.gxp.compiler.base.OutputLanguage CPP;
    public static final enum com.google.gxp.compiler.base.OutputLanguage CPP_HEADER;
    public static final enum com.google.gxp.compiler.base.OutputLanguage JAVA;
    public static final enum com.google.gxp.compiler.base.OutputLanguage DYNAMIC_IMPL_JAVA;
    public static final enum com.google.gxp.compiler.base.OutputLanguage JAVASCRIPT;
    public static final enum com.google.gxp.compiler.base.OutputLanguage XMB;
    private final java.lang.String display;
    private final java.lang.String suffix;
    private final boolean suffixIncludesVersion;
    private final com.google.gxp.compiler.codegen.OutputLanguageUtil outputLanguageUtil;
    private static final com.google.gxp.compiler.base.OutputLanguage[] $VALUES;

    public static com.google.gxp.compiler.base.OutputLanguage[] values()
    {
        java.lang.Object $r1;
        com.google.gxp.compiler.base.OutputLanguage[] $r0, $r2;

        $r0 = <com.google.gxp.compiler.base.OutputLanguage: com.google.gxp.compiler.base.OutputLanguage[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (com.google.gxp.compiler.base.OutputLanguage[]) $r1;

        return $r2;
    }

    public static com.google.gxp.compiler.base.OutputLanguage valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        com.google.gxp.compiler.base.OutputLanguage $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/google/gxp/compiler/base/OutputLanguage;", r0);

        $r2 = (com.google.gxp.compiler.base.OutputLanguage) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.lang.String, java.lang.String, com.google.gxp.compiler.codegen.OutputLanguageUtil)
    {
        com.google.gxp.compiler.base.OutputLanguage r0;
        com.google.gxp.compiler.codegen.OutputLanguageUtil r4;
        int i0;
        java.lang.String r1, r2, r3;
        boolean $z0;

        r0 := @this: com.google.gxp.compiler.base.OutputLanguage;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: com.google.gxp.compiler.codegen.OutputLanguageUtil;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<com.google.gxp.compiler.base.OutputLanguage: java.lang.String display> = r2;

        r0.<com.google.gxp.compiler.base.OutputLanguage: java.lang.String suffix> = r3;

        $z0 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("%d");

        r0.<com.google.gxp.compiler.base.OutputLanguage: boolean suffixIncludesVersion> = $z0;

        r0.<com.google.gxp.compiler.base.OutputLanguage: com.google.gxp.compiler.codegen.OutputLanguageUtil outputLanguageUtil> = r4;

        return;
    }

    public java.lang.String getDisplay()
    {
        java.lang.String $r1;
        com.google.gxp.compiler.base.OutputLanguage r0;

        r0 := @this: com.google.gxp.compiler.base.OutputLanguage;

        $r1 = r0.<com.google.gxp.compiler.base.OutputLanguage: java.lang.String display>;

        return $r1;
    }

    public java.lang.String getSuffix()
    {
        java.lang.String $r1;
        com.google.gxp.compiler.base.OutputLanguage r0;

        r0 := @this: com.google.gxp.compiler.base.OutputLanguage;

        $r1 = r0.<com.google.gxp.compiler.base.OutputLanguage: java.lang.String suffix>;

        return $r1;
    }

    public boolean suffixIncludesVersion()
    {
        com.google.gxp.compiler.base.OutputLanguage r0;
        boolean $z0;

        r0 := @this: com.google.gxp.compiler.base.OutputLanguage;

        $z0 = r0.<com.google.gxp.compiler.base.OutputLanguage: boolean suffixIncludesVersion>;

        return $z0;
    }

    public java.lang.String validateExpression(com.google.gxp.compiler.alerts.AlertSink, com.google.gxp.compiler.base.NativeExpression)
    {
        com.google.gxp.compiler.base.OutputLanguage r0;
        com.google.gxp.compiler.alerts.AlertSink r1;
        com.google.gxp.compiler.base.NativeExpression r2;
        com.google.gxp.compiler.codegen.OutputLanguageUtil $r3;
        java.lang.String $r4;

        r0 := @this: com.google.gxp.compiler.base.OutputLanguage;

        r1 := @parameter0: com.google.gxp.compiler.alerts.AlertSink;

        r2 := @parameter1: com.google.gxp.compiler.base.NativeExpression;

        $r3 = r0.<com.google.gxp.compiler.base.OutputLanguage: com.google.gxp.compiler.codegen.OutputLanguageUtil outputLanguageUtil>;

        $r4 = virtualinvoke $r3.<com.google.gxp.compiler.codegen.OutputLanguageUtil: java.lang.String validateExpression(com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.base.NativeExpression,com.google.gxp.compiler.base.OutputLanguage)>(r1, r2, r0);

        return $r4;
    }

    public java.lang.String validateName(com.google.gxp.compiler.alerts.AlertSink, com.google.gxp.compiler.base.Node, java.lang.String)
    {
        com.google.gxp.compiler.base.OutputLanguage r0;
        com.google.gxp.compiler.alerts.AlertSink r1;
        com.google.gxp.compiler.base.Node r2;
        com.google.gxp.compiler.codegen.OutputLanguageUtil $r4;
        java.lang.String r3, $r5;

        r0 := @this: com.google.gxp.compiler.base.OutputLanguage;

        r1 := @parameter0: com.google.gxp.compiler.alerts.AlertSink;

        r2 := @parameter1: com.google.gxp.compiler.base.Node;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<com.google.gxp.compiler.base.OutputLanguage: com.google.gxp.compiler.codegen.OutputLanguageUtil outputLanguageUtil>;

        $r5 = virtualinvoke $r4.<com.google.gxp.compiler.codegen.OutputLanguageUtil: java.lang.String validateName(com.google.gxp.compiler.alerts.AlertSink,com.google.gxp.compiler.base.Node,java.lang.String,com.google.gxp.compiler.base.OutputLanguage)>(r1, r2, r3, r0);

        return $r5;
    }

    public java.lang.String toStringLiteral(java.lang.String)
    {
        com.google.gxp.compiler.base.OutputLanguage r0;
        com.google.gxp.compiler.codegen.OutputLanguageUtil $r2;
        java.lang.String r1, $r3;

        r0 := @this: com.google.gxp.compiler.base.OutputLanguage;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.google.gxp.compiler.base.OutputLanguage: com.google.gxp.compiler.codegen.OutputLanguageUtil outputLanguageUtil>;

        $r3 = virtualinvoke $r2.<com.google.gxp.compiler.codegen.OutputLanguageUtil: java.lang.String toStringLiteral(java.lang.String)>(r1);

        return $r3;
    }

    public abstract java.lang.Object acceptVisitor(com.google.gxp.compiler.base.OutputLanguageVisitor, java.lang.Object);

    void <init>(java.lang.String, int, java.lang.String, java.lang.String, com.google.gxp.compiler.codegen.OutputLanguageUtil, com.google.gxp.compiler.base.OutputLanguage$1)
    {
        com.google.gxp.compiler.base.OutputLanguage r0;
        com.google.gxp.compiler.codegen.OutputLanguageUtil r4;
        int i0;
        com.google.gxp.compiler.base.OutputLanguage$1 r5;
        java.lang.String r1, r2, r3;

        r0 := @this: com.google.gxp.compiler.base.OutputLanguage;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: com.google.gxp.compiler.codegen.OutputLanguageUtil;

        r5 := @parameter5: com.google.gxp.compiler.base.OutputLanguage$1;

        specialinvoke r0.<com.google.gxp.compiler.base.OutputLanguage: void <init>(java.lang.String,int,java.lang.String,java.lang.String,com.google.gxp.compiler.codegen.OutputLanguageUtil)>(r1, i0, r2, r3, r4);

        return;
    }

    static void <clinit>()
    {
        com.google.gxp.compiler.base.OutputLanguage$6 $r10;
        com.google.gxp.compiler.java.JavaUtil $r5, $r7;
        com.google.gxp.compiler.base.OutputLanguage[] $r11;
        com.google.gxp.compiler.js.JavaScriptUtil $r9;
        com.google.gxp.compiler.base.OutputLanguage$1 $r0;
        com.google.gxp.compiler.base.OutputLanguage$3 $r4;
        com.google.gxp.compiler.base.OutputLanguage$2 $r2;
        com.google.gxp.compiler.base.OutputLanguage$5 $r8;
        com.google.gxp.compiler.base.OutputLanguage$4 $r6;
        com.google.gxp.compiler.base.OutputLanguage $r12, $r13, $r14, $r15, $r16, $r17;
        com.google.gxp.compiler.cpp.CppUtil $r1, $r3;

        $r0 = new com.google.gxp.compiler.base.OutputLanguage$1;

        $r1 = <com.google.gxp.compiler.cpp.CppUtil: com.google.gxp.compiler.cpp.CppUtil INSTANCE>;

        specialinvoke $r0.<com.google.gxp.compiler.base.OutputLanguage$1: void <init>(java.lang.String,int,java.lang.String,java.lang.String,com.google.gxp.compiler.codegen.OutputLanguageUtil)>("CPP", 0, "C++", ".cc", $r1);

        <com.google.gxp.compiler.base.OutputLanguage: com.google.gxp.compiler.base.OutputLanguage CPP> = $r0;

        $r2 = new com.google.gxp.compiler.base.OutputLanguage$2;

        $r3 = <com.google.gxp.compiler.cpp.CppUtil: com.google.gxp.compiler.cpp.CppUtil INSTANCE>;

        specialinvoke $r2.<com.google.gxp.compiler.base.OutputLanguage$2: void <init>(java.lang.String,int,java.lang.String,java.lang.String,com.google.gxp.compiler.codegen.OutputLanguageUtil)>("CPP_HEADER", 1, "C++ header", ".h", $r3);

        <com.google.gxp.compiler.base.OutputLanguage: com.google.gxp.compiler.base.OutputLanguage CPP_HEADER> = $r2;

        $r4 = new com.google.gxp.compiler.base.OutputLanguage$3;

        $r5 = <com.google.gxp.compiler.java.JavaUtil: com.google.gxp.compiler.java.JavaUtil INSTANCE>;

        specialinvoke $r4.<com.google.gxp.compiler.base.OutputLanguage$3: void <init>(java.lang.String,int,java.lang.String,java.lang.String,com.google.gxp.compiler.codegen.OutputLanguageUtil)>("JAVA", 2, "Java", ".java", $r5);

        <com.google.gxp.compiler.base.OutputLanguage: com.google.gxp.compiler.base.OutputLanguage JAVA> = $r4;

        $r6 = new com.google.gxp.compiler.base.OutputLanguage$4;

        $r7 = <com.google.gxp.compiler.java.JavaUtil: com.google.gxp.compiler.java.JavaUtil INSTANCE>;

        specialinvoke $r6.<com.google.gxp.compiler.base.OutputLanguage$4: void <init>(java.lang.String,int,java.lang.String,java.lang.String,com.google.gxp.compiler.codegen.OutputLanguageUtil)>("DYNAMIC_IMPL_JAVA", 3, "Dynamic Java", "$Impl%d.java", $r7);

        <com.google.gxp.compiler.base.OutputLanguage: com.google.gxp.compiler.base.OutputLanguage DYNAMIC_IMPL_JAVA> = $r6;

        $r8 = new com.google.gxp.compiler.base.OutputLanguage$5;

        $r9 = <com.google.gxp.compiler.js.JavaScriptUtil: com.google.gxp.compiler.js.JavaScriptUtil INSTANCE>;

        specialinvoke $r8.<com.google.gxp.compiler.base.OutputLanguage$5: void <init>(java.lang.String,int,java.lang.String,java.lang.String,com.google.gxp.compiler.codegen.OutputLanguageUtil)>("JAVASCRIPT", 4, "JavaScript", ".js", $r9);

        <com.google.gxp.compiler.base.OutputLanguage: com.google.gxp.compiler.base.OutputLanguage JAVASCRIPT> = $r8;

        $r10 = new com.google.gxp.compiler.base.OutputLanguage$6;

        specialinvoke $r10.<com.google.gxp.compiler.base.OutputLanguage$6: void <init>(java.lang.String,int,java.lang.String,java.lang.String,com.google.gxp.compiler.codegen.OutputLanguageUtil)>("XMB", 5, "Xmb", ".xmb", null);

        <com.google.gxp.compiler.base.OutputLanguage: com.google.gxp.compiler.base.OutputLanguage XMB> = $r10;

        $r11 = newarray (com.google.gxp.compiler.base.OutputLanguage)[6];

        $r12 = <com.google.gxp.compiler.base.OutputLanguage: com.google.gxp.compiler.base.OutputLanguage CPP>;

        $r11[0] = $r12;

        $r13 = <com.google.gxp.compiler.base.OutputLanguage: com.google.gxp.compiler.base.OutputLanguage CPP_HEADER>;

        $r11[1] = $r13;

        $r14 = <com.google.gxp.compiler.base.OutputLanguage: com.google.gxp.compiler.base.OutputLanguage JAVA>;

        $r11[2] = $r14;

        $r15 = <com.google.gxp.compiler.base.OutputLanguage: com.google.gxp.compiler.base.OutputLanguage DYNAMIC_IMPL_JAVA>;

        $r11[3] = $r15;

        $r16 = <com.google.gxp.compiler.base.OutputLanguage: com.google.gxp.compiler.base.OutputLanguage JAVASCRIPT>;

        $r11[4] = $r16;

        $r17 = <com.google.gxp.compiler.base.OutputLanguage: com.google.gxp.compiler.base.OutputLanguage XMB>;

        $r11[5] = $r17;

        <com.google.gxp.compiler.base.OutputLanguage: com.google.gxp.compiler.base.OutputLanguage[] $VALUES> = $r11;

        return;
    }
}
