public class org.apache.batik.css.engine.sac.CSSClassCondition extends org.apache.batik.css.engine.sac.CSSAttributeCondition
{

    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.batik.css.engine.sac.CSSClassCondition r0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.batik.css.engine.sac.CSSClassCondition;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.batik.css.engine.sac.CSSAttributeCondition: void <init>(java.lang.String,java.lang.String,boolean,java.lang.String)>(r1, r2, 1, r3);

        return;
    }

    public short getConditionType()
    {
        org.apache.batik.css.engine.sac.CSSClassCondition r0;

        r0 := @this: org.apache.batik.css.engine.sac.CSSClassCondition;

        return 9;
    }

    public boolean match(org.w3c.dom.Element, java.lang.String)
    {
        org.apache.batik.css.engine.CSSStylableElement $r1;
        int $i0, $i1, $i2, $i3, $i5, $i6, i8, $i10;
        java.lang.String $r2, $r4, r5;
        boolean $z0, $z1, $z2;
        org.apache.batik.css.engine.sac.CSSClassCondition r3;
        char $c4, $c7;
        org.w3c.dom.Element r0;

        r3 := @this: org.apache.batik.css.engine.sac.CSSClassCondition;

        r0 := @parameter0: org.w3c.dom.Element;

        r5 := @parameter1: java.lang.String;

        $z0 = r0 instanceof org.apache.batik.css.engine.CSSStylableElement;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = (org.apache.batik.css.engine.CSSStylableElement) r0;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.engine.CSSStylableElement: java.lang.String getCSSClass()>();

        $r4 = virtualinvoke r3.<org.apache.batik.css.engine.sac.AbstractAttributeCondition: java.lang.String getValue()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        i8 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>($r4);

        goto label6;

     label2:
        if i8 == 0 goto label3;

        $i6 = i8 - 1;

        $c7 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i6);

        $z2 = staticinvoke <java.lang.Character: boolean isSpaceChar(char)>($c7);

        if $z2 == 0 goto label5;

     label3:
        $i2 = i8 + $i1;

        if $i2 == $i0 goto label4;

        $i3 = i8 + $i1;

        $c4 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i3);

        $z1 = staticinvoke <java.lang.Character: boolean isSpaceChar(char)>($c4);

        if $z1 == 0 goto label5;

     label4:
        return 1;

     label5:
        $i5 = i8 + $i1;

        i8 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String,int)>($r4, $i5);

     label6:
        $i10 = (int) -1;

        if i8 != $i10 goto label2;

        return 0;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r1, $r4;
        org.apache.batik.css.engine.sac.CSSClassCondition r2;
        java.lang.String $r3, $r5;

        r2 := @this: org.apache.batik.css.engine.sac.CSSClassCondition;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        $r3 = virtualinvoke r2.<org.apache.batik.css.engine.sac.AbstractAttributeCondition: java.lang.String getValue()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }
}
