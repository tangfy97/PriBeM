public final class org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl extends org.apache.lucene.util.AttributeImpl implements org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute, org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute
{
    private long value;
    private int valueSize;
    private int shift;
    private int precisionStep;
    private org.apache.lucene.util.BytesRef bytes;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.apache.lucene.util.BytesRef $r1;
        org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl r0;

        r0 := @this: org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl;

        specialinvoke r0.<org.apache.lucene.util.AttributeImpl: void <init>()>();

        r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: long value> = 0L;

        r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: int valueSize> = 0;

        r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: int shift> = 0;

        r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: int precisionStep> = 0;

        $r1 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r1.<org.apache.lucene.util.BytesRef: void <init>()>();

        r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: org.apache.lucene.util.BytesRef bytes> = $r1;

        return;
    }

    public org.apache.lucene.util.BytesRef getBytesRef()
    {
        org.apache.lucene.util.BytesRef $r1;
        org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl r0;

        r0 := @this: org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl;

        $r1 = r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: org.apache.lucene.util.BytesRef bytes>;

        return $r1;
    }

    public int fillBytesRef()
    {
        long $l0, $l4;
        java.lang.AssertionError $r3;
        int $i1, $i2, $i3, $i5, $i6, $i7, $i8;
        boolean $z0;
        org.apache.lucene.util.BytesRef $r1, $r2, $r5;
        java.lang.IllegalArgumentException $r4;
        org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl r0;

        r0 := @this: org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl;

     label1:
        $z0 = <org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i5 = r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: int valueSize>;

        if $i5 == 64 goto label2;

        $i6 = r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: int valueSize>;

        if $i6 == 32 goto label2;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        $i7 = r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: int valueSize>;

        if $i7 != 64 goto label3;

        $l4 = r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: long value>;

        $i3 = r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: int shift>;

        $r2 = r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: org.apache.lucene.util.BytesRef bytes>;

        $i8 = staticinvoke <org.apache.lucene.util.NumericUtils: int longToPrefixCoded(long,int,org.apache.lucene.util.BytesRef)>($l4, $i3, $r2);

        goto label4;

     label3:
        $l0 = r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: long value>;

        $i2 = (int) $l0;

        $i1 = r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: int shift>;

        $r1 = r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: org.apache.lucene.util.BytesRef bytes>;

        $i8 = staticinvoke <org.apache.lucene.util.NumericUtils: int intToPrefixCoded(int,int,org.apache.lucene.util.BytesRef)>($i2, $i1, $r1);

     label4:
        return $i8;

     label5:
        $r4 := @caughtexception;

        $r5 = r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: org.apache.lucene.util.BytesRef bytes>;

        $r5.<org.apache.lucene.util.BytesRef: int length> = 0;

        return 0;

        catch java.lang.IllegalArgumentException from label1 to label4 with label5;
    }

    public int getShift()
    {
        int $i0;
        org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl r0;

        r0 := @this: org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl;

        $i0 = r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: int shift>;

        return $i0;
    }

    public void setShift(int)
    {
        int i0;
        org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl r0;

        r0 := @this: org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl;

        i0 := @parameter0: int;

        r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: int shift> = i0;

        return;
    }

    public int incShift()
    {
        int $i0, $i1, $i2;
        org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl r0;

        r0 := @this: org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl;

        $i1 = r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: int shift>;

        $i0 = r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: int precisionStep>;

        $i2 = $i1 + $i0;

        r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: int shift> = $i2;

        return $i2;
    }

    public long getRawValue()
    {
        int $i0;
        long $l1, $l2, $l3, $l4, $l5;
        org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl r0;

        r0 := @this: org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl;

        $l4 = r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: long value>;

        $i0 = r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: int shift>;

        $l1 = 1L << $i0;

        $l2 = $l1 - 1L;

        $l3 = $l2 ^ -1L;

        $l5 = $l4 & $l3;

        return $l5;
    }

    public int getValueSize()
    {
        int $i0;
        org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl r0;

        r0 := @this: org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl;

        $i0 = r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: int valueSize>;

        return $i0;
    }

    public void init(long, int, int, int)
    {
        int i1, i2, i3;
        long l0;
        org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl r0;

        r0 := @this: org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: long value> = l0;

        r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: int valueSize> = i1;

        r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: int precisionStep> = i2;

        r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: int shift> = i3;

        return;
    }

    public void clear()
    {
        org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl r0;

        r0 := @this: org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl;

        return;
    }

    public void reflectWith(org.apache.lucene.util.AttributeReflector)
    {
        org.apache.lucene.util.AttributeReflector r1;
        org.apache.lucene.util.BytesRef $r2, $r3;
        long $l1;
        java.lang.Integer $r4, $r6;
        org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl r0;
        java.lang.Long $r5;
        int $i0, $i2;

        r0 := @this: org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl;

        r1 := @parameter0: org.apache.lucene.util.AttributeReflector;

        virtualinvoke r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: int fillBytesRef()>();

        $r2 = r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: org.apache.lucene.util.BytesRef bytes>;

        $r3 = staticinvoke <org.apache.lucene.util.BytesRef: org.apache.lucene.util.BytesRef deepCopyOf(org.apache.lucene.util.BytesRef)>($r2);

        interfaceinvoke r1.<org.apache.lucene.util.AttributeReflector: void reflect(java.lang.Class,java.lang.String,java.lang.Object)>(class "Lorg/apache/lucene/analysis/tokenattributes/TermToBytesRefAttribute;", "bytes", $r3);

        $i0 = r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: int shift>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke r1.<org.apache.lucene.util.AttributeReflector: void reflect(java.lang.Class,java.lang.String,java.lang.Object)>(class "Lorg/apache/lucene/analysis/NumericTokenStream$NumericTermAttribute;", "shift", $r4);

        $l1 = virtualinvoke r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: long getRawValue()>();

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        interfaceinvoke r1.<org.apache.lucene.util.AttributeReflector: void reflect(java.lang.Class,java.lang.String,java.lang.Object)>(class "Lorg/apache/lucene/analysis/NumericTokenStream$NumericTermAttribute;", "rawValue", $r5);

        $i2 = r0.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: int valueSize>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke r1.<org.apache.lucene.util.AttributeReflector: void reflect(java.lang.Class,java.lang.String,java.lang.Object)>(class "Lorg/apache/lucene/analysis/NumericTokenStream$NumericTermAttribute;", "valueSize", $r6);

        return;
    }

    public void copyTo(org.apache.lucene.util.AttributeImpl)
    {
        org.apache.lucene.util.AttributeImpl r0;
        org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute r1;
        int $i0, $i1, $i2;
        long $l3;
        org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl r2;

        r2 := @this: org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl;

        r0 := @parameter0: org.apache.lucene.util.AttributeImpl;

        r1 = (org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute) r0;

        $l3 = r2.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: long value>;

        $i2 = r2.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: int valueSize>;

        $i1 = r2.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: int precisionStep>;

        $i0 = r2.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: int shift>;

        interfaceinvoke r1.<org.apache.lucene.analysis.NumericTokenStream$NumericTermAttribute: void init(long,int,int,int)>($l3, $i2, $i1, $i0);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/analysis/NumericTokenStream;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl: boolean $assertionsDisabled> = $z1;

        return;
    }
}
