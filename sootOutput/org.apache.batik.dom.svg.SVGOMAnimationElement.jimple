public abstract class org.apache.batik.dom.svg.SVGOMAnimationElement extends org.apache.batik.dom.svg.SVGOMElement implements org.w3c.dom.svg.SVGAnimationElement
{
    protected static org.apache.batik.util.DoublyIndexedTable xmlTraitInformation;
    protected org.apache.batik.dom.svg.SVGOMAnimatedBoolean externalResourcesRequired;

    protected void <init>()
    {
        org.apache.batik.dom.svg.SVGOMAnimationElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimationElement;

        specialinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: void <init>()>();

        return;
    }

    protected void <init>(java.lang.String, org.apache.batik.dom.AbstractDocument)
    {
        org.apache.batik.dom.AbstractDocument r2;
        java.lang.String r1;
        org.apache.batik.dom.svg.SVGOMAnimationElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimationElement;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.batik.dom.AbstractDocument;

        specialinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: void <init>(java.lang.String,org.apache.batik.dom.AbstractDocument)>(r1, r2);

        specialinvoke r0.<org.apache.batik.dom.svg.SVGOMAnimationElement: void initializeLiveAttributes()>();

        return;
    }

    protected void initializeAllLiveAttributes()
    {
        org.apache.batik.dom.svg.SVGOMAnimationElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimationElement;

        specialinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: void initializeAllLiveAttributes()>();

        specialinvoke r0.<org.apache.batik.dom.svg.SVGOMAnimationElement: void initializeLiveAttributes()>();

        return;
    }

    private void initializeLiveAttributes()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedBoolean $r1;
        org.apache.batik.dom.svg.SVGOMAnimationElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimationElement;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: org.apache.batik.dom.svg.SVGOMAnimatedBoolean createLiveAnimatedBoolean(java.lang.String,java.lang.String,boolean)>(null, "externalResourcesRequired", 0);

        r0.<org.apache.batik.dom.svg.SVGOMAnimationElement: org.apache.batik.dom.svg.SVGOMAnimatedBoolean externalResourcesRequired> = $r1;

        return;
    }

    public org.w3c.dom.svg.SVGElement getTargetElement()
    {
        org.w3c.dom.svg.SVGElement $r3;
        org.apache.batik.dom.svg.SVGContext $r1;
        org.apache.batik.dom.svg.SVGOMAnimationElement r0;
        org.apache.batik.dom.svg.SVGAnimationContext $r2;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimationElement;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: org.apache.batik.dom.svg.SVGContext getSVGContext()>();

        $r2 = (org.apache.batik.dom.svg.SVGAnimationContext) $r1;

        $r3 = interfaceinvoke $r2.<org.apache.batik.dom.svg.SVGAnimationContext: org.w3c.dom.svg.SVGElement getTargetElement()>();

        return $r3;
    }

    public float getStartTime()
    {
        org.apache.batik.dom.svg.SVGContext $r1;
        org.apache.batik.dom.svg.SVGOMAnimationElement r0;
        org.apache.batik.dom.svg.SVGAnimationContext $r2;
        float $f0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimationElement;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: org.apache.batik.dom.svg.SVGContext getSVGContext()>();

        $r2 = (org.apache.batik.dom.svg.SVGAnimationContext) $r1;

        $f0 = interfaceinvoke $r2.<org.apache.batik.dom.svg.SVGAnimationContext: float getStartTime()>();

        return $f0;
    }

    public float getCurrentTime()
    {
        org.apache.batik.dom.svg.SVGContext $r1;
        org.apache.batik.dom.svg.SVGOMAnimationElement r0;
        org.apache.batik.dom.svg.SVGAnimationContext $r2;
        float $f0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimationElement;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: org.apache.batik.dom.svg.SVGContext getSVGContext()>();

        $r2 = (org.apache.batik.dom.svg.SVGAnimationContext) $r1;

        $f0 = interfaceinvoke $r2.<org.apache.batik.dom.svg.SVGAnimationContext: float getCurrentTime()>();

        return $f0;
    }

    public float getSimpleDuration() throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGContext $r1;
        byte $b0;
        org.apache.batik.dom.svg.SVGOMAnimationElement r0;
        org.apache.batik.dom.svg.SVGAnimationContext $r2;
        org.w3c.dom.DOMException $r3;
        float $f0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimationElement;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: org.apache.batik.dom.svg.SVGContext getSVGContext()>();

        $r2 = (org.apache.batik.dom.svg.SVGAnimationContext) $r1;

        $f0 = interfaceinvoke $r2.<org.apache.batik.dom.svg.SVGAnimationContext: float getSimpleDuration()>();

        $b0 = $f0 cmpl #InfinityF;

        if $b0 != 0 goto label1;

        $r3 = virtualinvoke r0.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(9, "animation.dur.indefinite", null);

        throw $r3;

     label1:
        return $f0;
    }

    public float getHyperlinkBeginTime()
    {
        org.apache.batik.dom.svg.SVGContext $r1;
        org.apache.batik.dom.svg.SVGOMAnimationElement r0;
        org.apache.batik.dom.svg.SVGAnimationContext $r2;
        float $f0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimationElement;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: org.apache.batik.dom.svg.SVGContext getSVGContext()>();

        $r2 = (org.apache.batik.dom.svg.SVGAnimationContext) $r1;

        $f0 = interfaceinvoke $r2.<org.apache.batik.dom.svg.SVGAnimationContext: float getHyperlinkBeginTime()>();

        return $f0;
    }

    public boolean beginElement() throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGContext $r1;
        org.apache.batik.dom.svg.SVGOMAnimationElement r0;
        org.apache.batik.dom.svg.SVGAnimationContext $r2;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimationElement;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: org.apache.batik.dom.svg.SVGContext getSVGContext()>();

        $r2 = (org.apache.batik.dom.svg.SVGAnimationContext) $r1;

        $z0 = interfaceinvoke $r2.<org.w3c.dom.smil.ElementTimeControl: boolean beginElement()>();

        return $z0;
    }

    public boolean beginElementAt(float) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGContext $r1;
        org.apache.batik.dom.svg.SVGOMAnimationElement r0;
        org.apache.batik.dom.svg.SVGAnimationContext $r2;
        float f0;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimationElement;

        f0 := @parameter0: float;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: org.apache.batik.dom.svg.SVGContext getSVGContext()>();

        $r2 = (org.apache.batik.dom.svg.SVGAnimationContext) $r1;

        $z0 = interfaceinvoke $r2.<org.w3c.dom.smil.ElementTimeControl: boolean beginElementAt(float)>(f0);

        return $z0;
    }

    public boolean endElement() throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGContext $r1;
        org.apache.batik.dom.svg.SVGOMAnimationElement r0;
        org.apache.batik.dom.svg.SVGAnimationContext $r2;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimationElement;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: org.apache.batik.dom.svg.SVGContext getSVGContext()>();

        $r2 = (org.apache.batik.dom.svg.SVGAnimationContext) $r1;

        $z0 = interfaceinvoke $r2.<org.w3c.dom.smil.ElementTimeControl: boolean endElement()>();

        return $z0;
    }

    public boolean endElementAt(float) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGContext $r1;
        org.apache.batik.dom.svg.SVGOMAnimationElement r0;
        org.apache.batik.dom.svg.SVGAnimationContext $r2;
        float f0;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimationElement;

        f0 := @parameter0: float;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: org.apache.batik.dom.svg.SVGContext getSVGContext()>();

        $r2 = (org.apache.batik.dom.svg.SVGAnimationContext) $r1;

        $z0 = interfaceinvoke $r2.<org.w3c.dom.smil.ElementTimeControl: boolean endElementAt(float)>(f0);

        return $z0;
    }

    public org.w3c.dom.svg.SVGAnimatedBoolean getExternalResourcesRequired()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedBoolean $r1;
        org.apache.batik.dom.svg.SVGOMAnimationElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimationElement;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimationElement: org.apache.batik.dom.svg.SVGOMAnimatedBoolean externalResourcesRequired>;

        return $r1;
    }

    public org.w3c.dom.svg.SVGStringList getRequiredFeatures()
    {
        org.apache.batik.dom.svg.SVGOMAnimationElement r0;
        org.w3c.dom.svg.SVGStringList $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimationElement;

        $r1 = staticinvoke <org.apache.batik.dom.svg.SVGTestsSupport: org.w3c.dom.svg.SVGStringList getRequiredFeatures(org.w3c.dom.Element)>(r0);

        return $r1;
    }

    public org.w3c.dom.svg.SVGStringList getRequiredExtensions()
    {
        org.apache.batik.dom.svg.SVGOMAnimationElement r0;
        org.w3c.dom.svg.SVGStringList $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimationElement;

        $r1 = staticinvoke <org.apache.batik.dom.svg.SVGTestsSupport: org.w3c.dom.svg.SVGStringList getRequiredExtensions(org.w3c.dom.Element)>(r0);

        return $r1;
    }

    public org.w3c.dom.svg.SVGStringList getSystemLanguage()
    {
        org.apache.batik.dom.svg.SVGOMAnimationElement r0;
        org.w3c.dom.svg.SVGStringList $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimationElement;

        $r1 = staticinvoke <org.apache.batik.dom.svg.SVGTestsSupport: org.w3c.dom.svg.SVGStringList getSystemLanguage(org.w3c.dom.Element)>(r0);

        return $r1;
    }

    public boolean hasExtension(java.lang.String)
    {
        java.lang.String r1;
        org.apache.batik.dom.svg.SVGOMAnimationElement r0;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimationElement;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.batik.dom.svg.SVGTestsSupport: boolean hasExtension(org.w3c.dom.Element,java.lang.String)>(r0, r1);

        return $z0;
    }

    protected org.apache.batik.util.DoublyIndexedTable getTraitInformationTable()
    {
        org.apache.batik.util.DoublyIndexedTable $r0;
        org.apache.batik.dom.svg.SVGOMAnimationElement r1;

        r1 := @this: org.apache.batik.dom.svg.SVGOMAnimationElement;

        $r0 = <org.apache.batik.dom.svg.SVGOMAnimationElement: org.apache.batik.util.DoublyIndexedTable xmlTraitInformation>;

        return $r0;
    }

    static void <clinit>()
    {
        org.apache.batik.util.DoublyIndexedTable $r0, $r1;
        org.apache.batik.dom.svg.TraitInformation $r2;

        $r0 = new org.apache.batik.util.DoublyIndexedTable;

        $r1 = <org.apache.batik.dom.svg.SVGOMElement: org.apache.batik.util.DoublyIndexedTable xmlTraitInformation>;

        specialinvoke $r0.<org.apache.batik.util.DoublyIndexedTable: void <init>(org.apache.batik.util.DoublyIndexedTable)>($r1);

        $r2 = new org.apache.batik.dom.svg.TraitInformation;

        specialinvoke $r2.<org.apache.batik.dom.svg.TraitInformation: void <init>(boolean,int)>(1, 49);

        virtualinvoke $r0.<org.apache.batik.util.DoublyIndexedTable: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>(null, "externalResourcesRequired", $r2);

        <org.apache.batik.dom.svg.SVGOMAnimationElement: org.apache.batik.util.DoublyIndexedTable xmlTraitInformation> = $r0;

        return;
    }
}
