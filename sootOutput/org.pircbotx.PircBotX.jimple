public class org.pircbotx.PircBotX extends java.lang.Object
{
    public static final java.lang.String VERSION;
    protected static final java.util.concurrent.atomic.AtomicInteger botCount;
    protected java.net.Socket socket;
    protected org.pircbotx.InputThread inputThread;
    protected org.pircbotx.OutputThread outputThread;
    protected java.nio.charset.Charset charset;
    protected java.net.InetAddress inetAddress;
    protected java.lang.String server;
    protected int port;
    protected java.lang.String password;
    protected long messageDelay;
    protected org.pircbotx.ManyToManyMap userChanInfo;
    protected final java.util.Map userNickMap;
    protected org.pircbotx.DccManager dccManager;
    protected java.util.List dccPorts;
    protected java.net.InetAddress dccInetAddress;
    protected boolean autoNickChange;
    protected boolean verbose;
    protected boolean capEnabled;
    protected final java.util.List capHandlers;
    protected java.util.List enabledCapabilities;
    protected java.lang.String name;
    protected java.lang.String nick;
    protected java.lang.String login;
    protected java.lang.String version;
    protected java.lang.String finger;
    protected java.lang.String channelPrefixes;
    protected final java.lang.Object logLock;
    protected org.pircbotx.hooks.managers.ListenerManager listenerManager;
    protected int socketTimeout;
    protected final org.pircbotx.ServerInfo serverInfo;
    protected final org.pircbotx.PircBotX$ListBuilder channelListBuilder;
    protected javax.net.SocketFactory socketFactory;
    protected boolean loggedIn;
    protected java.lang.String webIrcUsername;
    protected java.lang.String webIrcHostname;
    protected java.net.InetAddress webIrcAddress;
    protected java.lang.String webIrcPassword;
    protected boolean autoSplitMessage;
    protected java.lang.Thread shutdownHook;
    protected boolean autoReconnect;
    protected boolean autoReconnectChannels;
    protected java.util.Map whoisBuilder;
    protected int maxLineLength;

    public void <init>()
    {
        org.pircbotx.ServerInfo $r24;
        java.util.HashMap $r18, $r26;
        java.util.ArrayList $r20, $r21, $r22;
        java.nio.charset.Charset $r1;
        java.util.concurrent.atomic.AtomicInteger $r14;
        java.util.Map $r4;
        int $i1;
        java.lang.String $r9;
        org.pircbotx.PircBotX r0;
        org.pircbotx.DccManager $r19;
        org.pircbotx.PircBotX$UserChannelMap $r17;
        java.util.List $r15;
        java.lang.Object $r23;
        org.pircbotx.PircBotX$ListBuilder $r25;
        org.pircbotx.cap.EnableCapHandler $r27;

        r0 := @this: org.pircbotx.PircBotX;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.pircbotx.PircBotX: org.pircbotx.InputThread inputThread> = null;

        r0.<org.pircbotx.PircBotX: org.pircbotx.OutputThread outputThread> = null;

        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

        r0.<org.pircbotx.PircBotX: java.nio.charset.Charset charset> = $r1;

        r0.<org.pircbotx.PircBotX: java.net.InetAddress inetAddress> = null;

        r0.<org.pircbotx.PircBotX: java.lang.String server> = null;

        $i1 = (int) -1;

        r0.<org.pircbotx.PircBotX: int port> = $i1;

        r0.<org.pircbotx.PircBotX: java.lang.String password> = null;

        $r17 = new org.pircbotx.PircBotX$UserChannelMap;

        specialinvoke $r17.<org.pircbotx.PircBotX$UserChannelMap: void <init>(org.pircbotx.PircBotX)>(r0);

        r0.<org.pircbotx.PircBotX: org.pircbotx.ManyToManyMap userChanInfo> = $r17;

        $r18 = new java.util.HashMap;

        specialinvoke $r18.<java.util.HashMap: void <init>()>();

        $r4 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r18);

        r0.<org.pircbotx.PircBotX: java.util.Map userNickMap> = $r4;

        $r19 = new org.pircbotx.DccManager;

        specialinvoke $r19.<org.pircbotx.DccManager: void <init>(org.pircbotx.PircBotX)>(r0);

        r0.<org.pircbotx.PircBotX: org.pircbotx.DccManager dccManager> = $r19;

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        r0.<org.pircbotx.PircBotX: java.util.List dccPorts> = $r20;

        r0.<org.pircbotx.PircBotX: java.net.InetAddress dccInetAddress> = null;

        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        r0.<org.pircbotx.PircBotX: java.util.List capHandlers> = $r21;

        $r22 = new java.util.ArrayList;

        specialinvoke $r22.<java.util.ArrayList: void <init>()>();

        r0.<org.pircbotx.PircBotX: java.util.List enabledCapabilities> = $r22;

        r0.<org.pircbotx.PircBotX: java.lang.String name> = "PircBotX";

        $r9 = r0.<org.pircbotx.PircBotX: java.lang.String name>;

        r0.<org.pircbotx.PircBotX: java.lang.String nick> = $r9;

        r0.<org.pircbotx.PircBotX: java.lang.String login> = "PircBotX";

        r0.<org.pircbotx.PircBotX: java.lang.String version> = "PircBotX 1.9, a fork of PircBot, the Java IRC bot - pircbotx.googlecode.com";

        r0.<org.pircbotx.PircBotX: java.lang.String finger> = "You ought to be arrested for fingering a bot!";

        r0.<org.pircbotx.PircBotX: java.lang.String channelPrefixes> = "#&+!";

        $r23 = new java.lang.Object;

        specialinvoke $r23.<java.lang.Object: void <init>()>();

        r0.<org.pircbotx.PircBotX: java.lang.Object logLock> = $r23;

        $r24 = new org.pircbotx.ServerInfo;

        specialinvoke $r24.<org.pircbotx.ServerInfo: void <init>(org.pircbotx.PircBotX)>(r0);

        r0.<org.pircbotx.PircBotX: org.pircbotx.ServerInfo serverInfo> = $r24;

        $r25 = new org.pircbotx.PircBotX$ListBuilder;

        specialinvoke $r25.<org.pircbotx.PircBotX$ListBuilder: void <init>()>();

        r0.<org.pircbotx.PircBotX: org.pircbotx.PircBotX$ListBuilder channelListBuilder> = $r25;

        r0.<org.pircbotx.PircBotX: javax.net.SocketFactory socketFactory> = null;

        r0.<org.pircbotx.PircBotX: boolean loggedIn> = 0;

        r0.<org.pircbotx.PircBotX: java.lang.String webIrcUsername> = null;

        r0.<org.pircbotx.PircBotX: java.lang.String webIrcHostname> = null;

        r0.<org.pircbotx.PircBotX: java.net.InetAddress webIrcAddress> = null;

        r0.<org.pircbotx.PircBotX: java.lang.String webIrcPassword> = null;

        r0.<org.pircbotx.PircBotX: boolean autoSplitMessage> = 1;

        $r26 = new java.util.HashMap;

        specialinvoke $r26.<java.util.HashMap: void <init>()>();

        r0.<org.pircbotx.PircBotX: java.util.Map whoisBuilder> = $r26;

        r0.<org.pircbotx.PircBotX: int maxLineLength> = 512;

        $r14 = <org.pircbotx.PircBotX: java.util.concurrent.atomic.AtomicInteger botCount>;

        virtualinvoke $r14.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        virtualinvoke r0.<org.pircbotx.PircBotX: void useShutdownHook(boolean)>(1);

        $r15 = virtualinvoke r0.<org.pircbotx.PircBotX: java.util.List getCapHandlers()>();

        $r27 = new org.pircbotx.cap.EnableCapHandler;

        specialinvoke $r27.<org.pircbotx.cap.EnableCapHandler: void <init>(java.lang.String,boolean)>("multi-prefix", 1);

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r27);

        r0.<org.pircbotx.PircBotX: int socketTimeout> = 300000;

        r0.<org.pircbotx.PircBotX: boolean autoNickChange> = 0;

        r0.<org.pircbotx.PircBotX: boolean verbose> = 0;

        r0.<org.pircbotx.PircBotX: boolean capEnabled> = 0;

        r0.<org.pircbotx.PircBotX: long messageDelay> = 1000L;

        return;
    }

    public synchronized void connect(java.lang.String) throws java.io.IOException, org.pircbotx.exception.IrcException, org.pircbotx.exception.NickAlreadyInUseException
    {
        java.lang.String r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.pircbotx.PircBotX: void connect(java.lang.String,int,java.lang.String,javax.net.SocketFactory)>(r1, 6667, null, null);

        return;
    }

    public synchronized void connect(java.lang.String, int) throws java.io.IOException, org.pircbotx.exception.IrcException, org.pircbotx.exception.NickAlreadyInUseException
    {
        int i0;
        java.lang.String r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        virtualinvoke r0.<org.pircbotx.PircBotX: void connect(java.lang.String,int,java.lang.String,javax.net.SocketFactory)>(r1, i0, null, null);

        return;
    }

    public synchronized void connect(java.lang.String, int, java.lang.String) throws java.io.IOException, org.pircbotx.exception.IrcException, org.pircbotx.exception.NickAlreadyInUseException
    {
        int i0;
        java.lang.String r1, r2;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        virtualinvoke r0.<org.pircbotx.PircBotX: void connect(java.lang.String,int,java.lang.String,javax.net.SocketFactory)>(r1, i0, r2, null);

        return;
    }

    public synchronized void connect(java.lang.String, int, javax.net.SocketFactory) throws java.io.IOException, org.pircbotx.exception.IrcException, org.pircbotx.exception.NickAlreadyInUseException
    {
        javax.net.SocketFactory r2;
        int i0;
        java.lang.String r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: javax.net.SocketFactory;

        virtualinvoke r0.<org.pircbotx.PircBotX: void connect(java.lang.String,int,java.lang.String,javax.net.SocketFactory)>(r1, i0, null, r2);

        return;
    }

    public synchronized void connect(java.lang.String, int, java.lang.String, javax.net.SocketFactory) throws java.io.IOException, org.pircbotx.exception.IrcException, org.pircbotx.exception.NickAlreadyInUseException
    {
        org.pircbotx.cap.CapHandler r164, r165, r166, r167, r168, r169;
        java.lang.StringBuilder $r8, $r9, $r10, $r13, $r14, $r15, $r16, $r55, $r56, $r57, $r89, $r91, $r92, $r94, $r96, $r97, $r102, $r104, $r105, $r107, $r109, $r111, $r112, $r114, $r115, $r117, $r118, $r121, $r125, $r126, $r127, $r136, $r137, $r138, $r139, $r141, $r142, $r149, $r150, $r151, $r154, $r155, $r157, $r158, $r160;
        org.pircbotx.ManyToManyMap $r4;
        org.pircbotx.InputThread $r32, $r39;
        java.io.IOException $r12, $r170;
        java.io.InputStreamReader $r21;
        java.nio.charset.Charset $r24, $r28;
        int i0, $i1, $i2, i3, i4, i5;
        java.io.OutputStreamWriter $r25;
        org.pircbotx.OutputThread $r33, $r34, $r45, $r95, $r103, $r108, $r123, $r148, $r153;
        java.lang.Object $r48, $r49, $r51, $r61, $r62, $r66, $r68, $r70, $r74, $r77, $r81, $r84, $r85, $r99;
        java.net.InetAddress[] $r6;
        java.net.InetAddress $r20, $r119, $r129, $r132, r145;
        org.pircbotx.PircBotX r0;
        java.lang.Exception $r134;
        java.lang.Throwable $r135, r144;
        java.util.ArrayList $r5;
        java.lang.String r1, r2, $r11, $r17, $r37, $r50, $r58, $r63, $r67, $r69, $r71, $r86, $r90, $r93, $r98, $r100, $r101, $r106, $r110, $r113, $r116, $r120, $r122, $r128, $r140, $r143, $r146, r147, $r152, $r156, $r159, $r161, $r162, r163;
        java.io.BufferedWriter $r30;
        java.io.BufferedReader $r29;
        org.pircbotx.hooks.managers.ListenerManager $r35, $r40;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, z26, $z27, $z28, z29;
        javax.net.SocketFactory r3;
        java.util.List $r42, $r43, $r46, $r47, $r53, $r59, $r65, $r72, $r75, $r78, $r79, $r82;
        java.net.Socket $r7, $r18, $r19, $r22, $r26, $r31, $r38, $r87, $r124, $r130, $r131;
        org.pircbotx.exception.IrcException $r54, $r133;
        java.lang.String[] $r52, $r64;
        java.io.OutputStream $r27;
        java.util.Iterator $r44, $r60, $r73, $r76, $r80, $r83;
        org.pircbotx.exception.NickAlreadyInUseException $r88;
        org.pircbotx.hooks.events.ConnectEvent $r41;
        org.pircbotx.hooks.events.SocketConnectEvent $r36;
        java.io.InputStream $r23;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: javax.net.SocketFactory;

     label01:
        r0.<org.pircbotx.PircBotX: java.lang.String server> = r1;

        r0.<org.pircbotx.PircBotX: int port> = i0;

        r0.<org.pircbotx.PircBotX: java.lang.String password> = r2;

        r0.<org.pircbotx.PircBotX: javax.net.SocketFactory socketFactory> = r3;

        $z0 = virtualinvoke r0.<org.pircbotx.PircBotX: boolean isConnected()>();

        if $z0 == 0 goto label02;

        $r133 = new org.pircbotx.exception.IrcException;

        specialinvoke $r133.<org.pircbotx.exception.IrcException: void <init>(java.lang.String)>("The PircBotX is already connected to an IRC server.  Disconnect first.");

        throw $r133;

     label02:
        $r4 = r0.<org.pircbotx.PircBotX: org.pircbotx.ManyToManyMap userChanInfo>;

        virtualinvoke $r4.<org.pircbotx.ManyToManyMap: void clear()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<org.pircbotx.PircBotX: java.util.List enabledCapabilities> = $r5;

        r144 = null;

        $r6 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>(r1);

        i3 = lengthof $r6;

        i4 = 0;

     label03:
        if i4 >= i3 goto label08;

        r145 = $r6[i4];

        $r125 = new java.lang.StringBuilder;

        specialinvoke $r125.<java.lang.StringBuilder: void <init>()>();

        $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*** Trying address ");

        $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r145);

        $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.pircbotx.PircBotX: void log(java.lang.String)>($r128);

     label04:
        if r3 != null goto label05;

        $r131 = new java.net.Socket;

        $r132 = r0.<org.pircbotx.PircBotX: java.net.InetAddress inetAddress>;

        specialinvoke $r131.<java.net.Socket: void <init>(java.lang.String,int,java.net.InetAddress,int)>(r1, i0, $r132, 0);

        r0.<org.pircbotx.PircBotX: java.net.Socket socket> = $r131;

        goto label06;

     label05:
        $r129 = r0.<org.pircbotx.PircBotX: java.net.InetAddress inetAddress>;

        $r130 = virtualinvoke r3.<javax.net.SocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)>(r1, i0, $r129, 0);

        r0.<org.pircbotx.PircBotX: java.net.Socket socket> = $r130;

     label06:
        goto label08;

     label07:
        $r135 := @caughtexception;

        $r136 = new java.lang.StringBuilder;

        specialinvoke $r136.<java.lang.StringBuilder: void <init>()>();

        $r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*** Unable to connect to ");

        $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using the IP address ");

        $r140 = virtualinvoke r145.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r141 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r140);

        $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", trying to check another address.");

        $r143 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.pircbotx.PircBotX: void log(java.lang.String)>($r143);

        r144 = $r135;

        i4 = i4 + 1;

        goto label03;

     label08:
        $r7 = r0.<org.pircbotx.PircBotX: java.net.Socket socket>;

        if $r7 == null goto label09;

        $r18 = r0.<org.pircbotx.PircBotX: java.net.Socket socket>;

        if $r18 == null goto label10;

        $r124 = r0.<org.pircbotx.PircBotX: java.net.Socket socket>;

        $z23 = virtualinvoke $r124.<java.net.Socket: boolean isConnected()>();

        if $z23 != 0 goto label10;

     label09:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*** Unable to connect to any working IP address for hostname ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.pircbotx.PircBotX: void log(java.lang.String)>($r11);

        $r12 = new java.io.IOException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to connect to the IRC network ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (last connection attempt exception attached)");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r17, r144);

        throw $r12;

     label10:
        virtualinvoke r0.<org.pircbotx.PircBotX: void log(java.lang.String)>("*** Connected to server.");

        $r19 = r0.<org.pircbotx.PircBotX: java.net.Socket socket>;

        $r20 = virtualinvoke $r19.<java.net.Socket: java.net.InetAddress getLocalAddress()>();

        r0.<org.pircbotx.PircBotX: java.net.InetAddress inetAddress> = $r20;

        $r21 = new java.io.InputStreamReader;

        $r22 = r0.<org.pircbotx.PircBotX: java.net.Socket socket>;

        $r23 = virtualinvoke $r22.<java.net.Socket: java.io.InputStream getInputStream()>();

        $r24 = virtualinvoke r0.<org.pircbotx.PircBotX: java.nio.charset.Charset getEncoding()>();

        specialinvoke $r21.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r23, $r24);

        $r25 = new java.io.OutputStreamWriter;

        $r26 = r0.<org.pircbotx.PircBotX: java.net.Socket socket>;

        $r27 = virtualinvoke $r26.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        $r28 = virtualinvoke r0.<org.pircbotx.PircBotX: java.nio.charset.Charset getEncoding()>();

        specialinvoke $r25.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r27, $r28);

        $r29 = new java.io.BufferedReader;

        specialinvoke $r29.<java.io.BufferedReader: void <init>(java.io.Reader)>($r21);

        $r30 = new java.io.BufferedWriter;

        specialinvoke $r30.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r25);

        $r31 = r0.<org.pircbotx.PircBotX: java.net.Socket socket>;

        $r32 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.InputThread createInputThread(java.net.Socket,java.io.BufferedReader)>($r31, $r29);

        r0.<org.pircbotx.PircBotX: org.pircbotx.InputThread inputThread> = $r32;

        $r33 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.OutputThread createOutputThread(java.io.BufferedWriter)>($r30);

        r0.<org.pircbotx.PircBotX: org.pircbotx.OutputThread outputThread> = $r33;

        $r34 = r0.<org.pircbotx.PircBotX: org.pircbotx.OutputThread outputThread>;

        virtualinvoke $r34.<org.pircbotx.OutputThread: void start()>();

        $r35 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r36 = new org.pircbotx.hooks.events.SocketConnectEvent;

        specialinvoke $r36.<org.pircbotx.hooks.events.SocketConnectEvent: void <init>(org.pircbotx.PircBotX)>(r0);

        interfaceinvoke $r35.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r36);

        $z1 = r0.<org.pircbotx.PircBotX: boolean capEnabled>;

        if $z1 == 0 goto label11;

        $r123 = r0.<org.pircbotx.PircBotX: org.pircbotx.OutputThread outputThread>;

        virtualinvoke $r123.<org.pircbotx.OutputThread: void sendRawLineNow(java.lang.String)>("CAP LS");

     label11:
        $r37 = r0.<org.pircbotx.PircBotX: java.lang.String webIrcPassword>;

        if $r37 == null goto label12;

        $r108 = r0.<org.pircbotx.PircBotX: org.pircbotx.OutputThread outputThread>;

        $r107 = new java.lang.StringBuilder;

        specialinvoke $r107.<java.lang.StringBuilder: void <init>()>();

        $r109 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WEBIRC ");

        $r110 = r0.<org.pircbotx.PircBotX: java.lang.String webIrcPassword>;

        $r111 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110);

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r113 = r0.<org.pircbotx.PircBotX: java.lang.String webIrcUsername>;

        $r114 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r113);

        $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r116 = r0.<org.pircbotx.PircBotX: java.lang.String webIrcHostname>;

        $r117 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r116);

        $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r119 = r0.<org.pircbotx.PircBotX: java.net.InetAddress webIrcAddress>;

        $r120 = virtualinvoke $r119.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r121 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r120);

        $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r108.<org.pircbotx.OutputThread: void sendRawLineNow(java.lang.String)>($r122);

     label12:
        if r2 == null goto label13;

        $r101 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        $z22 = virtualinvoke $r101.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z22 != 0 goto label13;

        $r103 = r0.<org.pircbotx.PircBotX: org.pircbotx.OutputThread outputThread>;

        $r102 = new java.lang.StringBuilder;

        specialinvoke $r102.<java.lang.StringBuilder: void <init>()>();

        $r104 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PASS ");

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r103.<org.pircbotx.OutputThread: void sendRawLineNow(java.lang.String)>($r106);

     label13:
        $r146 = virtualinvoke r0.<org.pircbotx.PircBotX: java.lang.String getName()>();

        r147 = $r146;

        $r148 = r0.<org.pircbotx.PircBotX: org.pircbotx.OutputThread outputThread>;

        $r149 = new java.lang.StringBuilder;

        specialinvoke $r149.<java.lang.StringBuilder: void <init>()>();

        $r150 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NICK ");

        $r151 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r146);

        $r152 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r148.<org.pircbotx.OutputThread: void sendRawLineNow(java.lang.String)>($r152);

        $r153 = r0.<org.pircbotx.PircBotX: org.pircbotx.OutputThread outputThread>;

        $r154 = new java.lang.StringBuilder;

        specialinvoke $r154.<java.lang.StringBuilder: void <init>()>();

        $r155 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USER ");

        $r156 = virtualinvoke r0.<org.pircbotx.PircBotX: java.lang.String getLogin()>();

        $r157 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r156);

        $r158 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" 8 * :");

        $r159 = virtualinvoke r0.<org.pircbotx.PircBotX: java.lang.String getVersion()>();

        $r160 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r159);

        $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r153.<org.pircbotx.OutputThread: void sendRawLineNow(java.lang.String)>($r161);

        i5 = 1;

        z26 = 0;

     label14:
        $r162 = virtualinvoke $r29.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r162 == null goto label41;

        virtualinvoke r0.<org.pircbotx.PircBotX: void handleLine(java.lang.String)>($r162);

        $r42 = staticinvoke <org.pircbotx.Utils: java.util.List tokenizeLine(java.lang.String)>($r162);

        $i2 = interfaceinvoke $r42.<java.util.List: int size()>();

        if $i2 < 2 goto label36;

        $r49 = interfaceinvoke $r42.<java.util.List: java.lang.Object get(int)>(0);

        $r50 = (java.lang.String) $r49;

        $z4 = virtualinvoke $r50.<java.lang.String: boolean startsWith(java.lang.String)>(":");

        if $z4 == 0 goto label15;

        $r99 = interfaceinvoke $r42.<java.util.List: java.lang.Object remove(int)>(0);

        r163 = (java.lang.String) $r99;

     label15:
        $r51 = interfaceinvoke $r42.<java.util.List: java.lang.Object remove(int)>(0);

        $r100 = (java.lang.String) $r51;

        $r52 = newarray (java.lang.String)[12];

        $r52[0] = "001";

        $r52[1] = "002";

        $r52[2] = "003";

        $r52[3] = "004";

        $r52[4] = "005";

        $r52[5] = "251";

        $r52[6] = "252";

        $r52[7] = "253";

        $r52[8] = "254";

        $r52[9] = "255";

        $r52[10] = "375";

        $r52[11] = "376";

        $r53 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r52);

        $z5 = interfaceinvoke $r53.<java.util.List: boolean contains(java.lang.Object)>($r100);

        if $z5 == 0 goto label16;

        goto label41;

     label16:
        $z6 = virtualinvoke $r100.<java.lang.String: boolean equals(java.lang.Object)>("433");

        if $z6 == 0 goto label18;

        $z21 = r0.<org.pircbotx.PircBotX: boolean autoNickChange>;

        if $z21 == 0 goto label17;

        i5 = i5 + 1;

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r90 = virtualinvoke r0.<org.pircbotx.PircBotX: java.lang.String getName()>();

        $r91 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r90);

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

        r147 = $r93;

        $r95 = r0.<org.pircbotx.PircBotX: org.pircbotx.OutputThread outputThread>;

        $r94 = new java.lang.StringBuilder;

        specialinvoke $r94.<java.lang.StringBuilder: void <init>()>();

        $r96 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NICK ");

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r93);

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r95.<org.pircbotx.OutputThread: void sendRawLineNow(java.lang.String)>($r98);

        goto label36;

     label17:
        $r87 = r0.<org.pircbotx.PircBotX: java.net.Socket socket>;

        virtualinvoke $r87.<java.net.Socket: void close()>();

        r0.<org.pircbotx.PircBotX: org.pircbotx.InputThread inputThread> = null;

        $r88 = new org.pircbotx.exception.NickAlreadyInUseException;

        specialinvoke $r88.<org.pircbotx.exception.NickAlreadyInUseException: void <init>(java.lang.String)>($r162);

        throw $r88;

     label18:
        $z7 = virtualinvoke $r100.<java.lang.String: boolean equals(java.lang.Object)>("439");

        if $z7 == 0 goto label19;

        goto label36;

     label19:
        $z8 = r0.<org.pircbotx.PircBotX: boolean capEnabled>;

        if $z8 == 0 goto label20;

        $z19 = virtualinvoke $r100.<java.lang.String: boolean equals(java.lang.Object)>("451");

        if $z19 == 0 goto label20;

        $r85 = interfaceinvoke $r42.<java.util.List: java.lang.Object get(int)>(0);

        $r86 = (java.lang.String) $r85;

        $z20 = virtualinvoke $r86.<java.lang.String: boolean equals(java.lang.Object)>("CAP");

        if $z20 == 0 goto label20;

        goto label36;

     label20:
        $z27 = virtualinvoke $r100.<java.lang.String: boolean startsWith(java.lang.String)>("5");

        if $z27 != 0 goto label21;

        $z9 = virtualinvoke $r100.<java.lang.String: boolean startsWith(java.lang.String)>("4");

        if $z9 == 0 goto label22;

     label21:
        $r54 = new org.pircbotx.exception.IrcException;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not log into the IRC server: ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r162);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r54.<org.pircbotx.exception.IrcException: void <init>(java.lang.String)>($r58);

        throw $r54;

     label22:
        $z10 = virtualinvoke $r100.<java.lang.String: boolean equals(java.lang.Object)>("CAP");

        if $z10 == 0 goto label34;

        $r62 = interfaceinvoke $r42.<java.util.List: java.lang.Object get(int)>(2);

        $r63 = (java.lang.String) $r62;

        $r64 = virtualinvoke $r63.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r65 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r64);

        $r66 = interfaceinvoke $r42.<java.util.List: java.lang.Object get(int)>(1);

        $r67 = (java.lang.String) $r66;

        $z12 = virtualinvoke $r67.<java.lang.String: boolean equals(java.lang.Object)>("LS");

        if $z12 == 0 goto label25;

        $r82 = r0.<org.pircbotx.PircBotX: java.util.List capHandlers>;

        $r83 = interfaceinvoke $r82.<java.util.List: java.util.Iterator iterator()>();

     label23:
        $z18 = interfaceinvoke $r83.<java.util.Iterator: boolean hasNext()>();

        if $z18 == 0 goto label24;

        $r84 = interfaceinvoke $r83.<java.util.Iterator: java.lang.Object next()>();

        r164 = (org.pircbotx.cap.CapHandler) $r84;

        interfaceinvoke r164.<org.pircbotx.cap.CapHandler: void handleLS(org.pircbotx.PircBotX,java.util.List)>(r0, $r65);

        goto label23;

     label24:
        goto label33;

     label25:
        $r68 = interfaceinvoke $r42.<java.util.List: java.lang.Object get(int)>(1);

        $r69 = (java.lang.String) $r68;

        $z13 = virtualinvoke $r69.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z13 == 0 goto label28;

        $r78 = virtualinvoke r0.<org.pircbotx.PircBotX: java.util.List getEnabledCapabilities()>();

        interfaceinvoke $r78.<java.util.List: boolean addAll(java.util.Collection)>($r65);

        $r79 = r0.<org.pircbotx.PircBotX: java.util.List capHandlers>;

        $r80 = interfaceinvoke $r79.<java.util.List: java.util.Iterator iterator()>();

     label26:
        $z17 = interfaceinvoke $r80.<java.util.Iterator: boolean hasNext()>();

        if $z17 == 0 goto label27;

        $r81 = interfaceinvoke $r80.<java.util.Iterator: java.lang.Object next()>();

        r165 = (org.pircbotx.cap.CapHandler) $r81;

        interfaceinvoke r165.<org.pircbotx.cap.CapHandler: void handleACK(org.pircbotx.PircBotX,java.util.List)>(r0, $r65);

        goto label26;

     label27:
        goto label33;

     label28:
        $r70 = interfaceinvoke $r42.<java.util.List: java.lang.Object get(int)>(1);

        $r71 = (java.lang.String) $r70;

        $z14 = virtualinvoke $r71.<java.lang.String: boolean equals(java.lang.Object)>("NAK");

        if $z14 == 0 goto label31;

        $r75 = r0.<org.pircbotx.PircBotX: java.util.List capHandlers>;

        $r76 = interfaceinvoke $r75.<java.util.List: java.util.Iterator iterator()>();

     label29:
        $z16 = interfaceinvoke $r76.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label30;

        $r77 = interfaceinvoke $r76.<java.util.Iterator: java.lang.Object next()>();

        r166 = (org.pircbotx.cap.CapHandler) $r77;

        interfaceinvoke r166.<org.pircbotx.cap.CapHandler: void handleNAK(org.pircbotx.PircBotX,java.util.List)>(r0, $r65);

        goto label29;

     label30:
        goto label33;

     label31:
        $r72 = r0.<org.pircbotx.PircBotX: java.util.List capHandlers>;

        $r73 = interfaceinvoke $r72.<java.util.List: java.util.Iterator iterator()>();

     label32:
        $z15 = interfaceinvoke $r73.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label33;

        $r74 = interfaceinvoke $r73.<java.util.Iterator: java.lang.Object next()>();

        r167 = (org.pircbotx.cap.CapHandler) $r74;

        interfaceinvoke r167.<org.pircbotx.cap.CapHandler: void handleUnknown(org.pircbotx.PircBotX,java.lang.String)>(r0, $r162);

        goto label32;

     label33:
        goto label36;

     label34:
        $r59 = r0.<org.pircbotx.PircBotX: java.util.List capHandlers>;

        $r60 = interfaceinvoke $r59.<java.util.List: java.util.Iterator iterator()>();

     label35:
        $z11 = interfaceinvoke $r60.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label36;

        $r61 = interfaceinvoke $r60.<java.util.Iterator: java.lang.Object next()>();

        r168 = (org.pircbotx.cap.CapHandler) $r61;

        interfaceinvoke r168.<org.pircbotx.cap.CapHandler: void handleUnknown(org.pircbotx.PircBotX,java.lang.String)>(r0, $r162);

        goto label35;

     label36:
        $z28 = r0.<org.pircbotx.PircBotX: boolean capEnabled>;

        if $z28 == 0 goto label40;

        if z26 != 0 goto label40;

        z29 = 1;

        $r43 = r0.<org.pircbotx.PircBotX: java.util.List capHandlers>;

        $r44 = interfaceinvoke $r43.<java.util.List: java.util.Iterator iterator()>();

     label37:
        $z2 = interfaceinvoke $r44.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label39;

        $r48 = interfaceinvoke $r44.<java.util.Iterator: java.lang.Object next()>();

        r169 = (org.pircbotx.cap.CapHandler) $r48;

        $z3 = interfaceinvoke r169.<org.pircbotx.cap.CapHandler: boolean isDone()>();

        if $z3 != 0 goto label38;

        z29 = 0;

        goto label39;

     label38:
        goto label37;

     label39:
        if z29 == 0 goto label40;

        $r45 = r0.<org.pircbotx.PircBotX: org.pircbotx.OutputThread outputThread>;

        virtualinvoke $r45.<org.pircbotx.OutputThread: void sendRawLineNow(java.lang.String)>("CAP END");

        z26 = 1;

        $r46 = r0.<org.pircbotx.PircBotX: java.util.List enabledCapabilities>;

        $r47 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r46);

        r0.<org.pircbotx.PircBotX: java.util.List enabledCapabilities> = $r47;

     label40:
        goto label14;

     label41:
        r0.<org.pircbotx.PircBotX: java.lang.String nick> = r147;

        r0.<org.pircbotx.PircBotX: boolean loggedIn> = 1;

        virtualinvoke r0.<org.pircbotx.PircBotX: void log(java.lang.String)>("*** Logged onto server.");

        $r38 = r0.<org.pircbotx.PircBotX: java.net.Socket socket>;

        $i1 = virtualinvoke r0.<org.pircbotx.PircBotX: int getSocketTimeout()>();

        virtualinvoke $r38.<java.net.Socket: void setSoTimeout(int)>($i1);

        $r39 = r0.<org.pircbotx.PircBotX: org.pircbotx.InputThread inputThread>;

        virtualinvoke $r39.<org.pircbotx.InputThread: void start()>();

        $r40 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r41 = new org.pircbotx.hooks.events.ConnectEvent;

        specialinvoke $r41.<org.pircbotx.hooks.events.ConnectEvent: void <init>(org.pircbotx.PircBotX)>(r0);

        interfaceinvoke $r40.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r41);

     label42:
        goto label46;

     label43:
        $r134 := @caughtexception;

        $z24 = $r134 instanceof org.pircbotx.exception.IrcException;

        if $z24 == 0 goto label44;

        $z25 = $r134 instanceof org.pircbotx.exception.NickAlreadyInUseException;

        if $z25 != 0 goto label45;

     label44:
        virtualinvoke r0.<org.pircbotx.PircBotX: void shutdown(boolean)>(1);

     label45:
        $r170 = new java.io.IOException;

        specialinvoke $r170.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Can\'t connect to server", $r134);

        throw $r170;

     label46:
        return;

        catch java.lang.Throwable from label04 to label06 with label07;
        catch java.lang.Exception from label01 to label42 with label43;
    }

    protected org.pircbotx.InputThread createInputThread(java.net.Socket, java.io.BufferedReader)
    {
        java.net.Socket r2;
        org.pircbotx.InputThread $r0;
        java.util.concurrent.atomic.AtomicInteger $r6;
        java.lang.StringBuilder $r4, $r5, $r7, $r8;
        java.io.BufferedReader r3;
        java.lang.String $r9;
        org.pircbotx.PircBotX r1;

        r1 := @this: org.pircbotx.PircBotX;

        r2 := @parameter0: java.net.Socket;

        r3 := @parameter1: java.io.BufferedReader;

        $r0 = new org.pircbotx.InputThread;

        specialinvoke $r0.<org.pircbotx.InputThread: void <init>(org.pircbotx.PircBotX,java.net.Socket,java.io.BufferedReader)>(r1, r2, r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bot");

        $r6 = <org.pircbotx.PircBotX: java.util.concurrent.atomic.AtomicInteger botCount>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-input");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<org.pircbotx.InputThread: void setName(java.lang.String)>($r9);

        return $r0;
    }

    protected org.pircbotx.OutputThread createOutputThread(java.io.BufferedWriter)
    {
        java.io.BufferedWriter r2;
        org.pircbotx.OutputThread $r0;
        java.util.concurrent.atomic.AtomicInteger $r5;
        java.lang.StringBuilder $r3, $r4, $r6, $r7;
        java.lang.String $r8;
        org.pircbotx.PircBotX r1;

        r1 := @this: org.pircbotx.PircBotX;

        r2 := @parameter0: java.io.BufferedWriter;

        $r0 = new org.pircbotx.OutputThread;

        specialinvoke $r0.<org.pircbotx.OutputThread: void <init>(org.pircbotx.PircBotX,java.io.BufferedWriter)>(r1, r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bot");

        $r5 = <org.pircbotx.PircBotX: java.util.concurrent.atomic.AtomicInteger botCount>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-output");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<org.pircbotx.OutputThread: void setName(java.lang.String)>($r8);

        return $r0;
    }

    public synchronized void reconnect() throws java.io.IOException, org.pircbotx.exception.IrcException, org.pircbotx.exception.NickAlreadyInUseException
    {
        org.pircbotx.exception.IrcException $r7, $r11;
        int $i0;
        java.lang.String $r1, $r2, $r3;
        org.pircbotx.PircBotX r0;
        org.pircbotx.hooks.events.ReconnectEvent $r6, $r10, $r13, $r16;
        java.io.IOException $r14;
        java.lang.RuntimeException $r8;
        javax.net.SocketFactory $r4;
        org.pircbotx.hooks.managers.ListenerManager $r5, $r9, $r12, $r15;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = virtualinvoke r0.<org.pircbotx.PircBotX: java.lang.String getServer()>();

        if $r1 != null goto label1;

        $r7 = new org.pircbotx.exception.IrcException;

        specialinvoke $r7.<org.pircbotx.exception.IrcException: void <init>(java.lang.String)>("Cannot reconnect to an IRC server because we were never connected to one previously!");

        throw $r7;

     label1:
        $r2 = virtualinvoke r0.<org.pircbotx.PircBotX: java.lang.String getServer()>();

        $i0 = virtualinvoke r0.<org.pircbotx.PircBotX: int getPort()>();

        $r3 = virtualinvoke r0.<org.pircbotx.PircBotX: java.lang.String getPassword()>();

        $r4 = virtualinvoke r0.<org.pircbotx.PircBotX: javax.net.SocketFactory getSocketFactory()>();

        virtualinvoke r0.<org.pircbotx.PircBotX: void connect(java.lang.String,int,java.lang.String,javax.net.SocketFactory)>($r2, $i0, $r3, $r4);

     label2:
        goto label6;

     label3:
        $r14 := @caughtexception;

        $r15 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r16 = new org.pircbotx.hooks.events.ReconnectEvent;

        specialinvoke $r16.<org.pircbotx.hooks.events.ReconnectEvent: void <init>(org.pircbotx.PircBotX,boolean,java.lang.Exception)>(r0, 0, $r14);

        interfaceinvoke $r15.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r16);

        throw $r14;

     label4:
        $r11 := @caughtexception;

        $r12 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r13 = new org.pircbotx.hooks.events.ReconnectEvent;

        specialinvoke $r13.<org.pircbotx.hooks.events.ReconnectEvent: void <init>(org.pircbotx.PircBotX,boolean,java.lang.Exception)>(r0, 0, $r11);

        interfaceinvoke $r12.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r13);

        throw $r11;

     label5:
        $r8 := @caughtexception;

        $r9 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r10 = new org.pircbotx.hooks.events.ReconnectEvent;

        specialinvoke $r10.<org.pircbotx.hooks.events.ReconnectEvent: void <init>(org.pircbotx.PircBotX,boolean,java.lang.Exception)>(r0, 0, $r8);

        interfaceinvoke $r9.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r10);

        throw $r8;

     label6:
        $r5 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r6 = new org.pircbotx.hooks.events.ReconnectEvent;

        specialinvoke $r6.<org.pircbotx.hooks.events.ReconnectEvent: void <init>(org.pircbotx.PircBotX,boolean,java.lang.Exception)>(r0, 1, null);

        interfaceinvoke $r5.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r6);

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch org.pircbotx.exception.IrcException from label1 to label2 with label4;
        catch java.lang.RuntimeException from label1 to label2 with label5;
    }

    public synchronized void disconnect()
    {
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        virtualinvoke r0.<org.pircbotx.PircBotX: void quitServer()>();

        return;
    }

    public void setCapEnabled(boolean)
    {
        org.pircbotx.PircBotX r0;
        boolean z0;

        r0 := @this: org.pircbotx.PircBotX;

        z0 := @parameter0: boolean;

        r0.<org.pircbotx.PircBotX: boolean capEnabled> = z0;

        return;
    }

    public void setAutoNickChange(boolean)
    {
        org.pircbotx.PircBotX r0;
        boolean z0;

        r0 := @this: org.pircbotx.PircBotX;

        z0 := @parameter0: boolean;

        r0.<org.pircbotx.PircBotX: boolean autoNickChange> = z0;

        return;
    }

    public org.pircbotx.IdentServer startIdentServer()
    {
        java.lang.String $r2;
        org.pircbotx.PircBotX r1;
        org.pircbotx.IdentServer $r0;

        r1 := @this: org.pircbotx.PircBotX;

        $r0 = new org.pircbotx.IdentServer;

        $r2 = virtualinvoke r1.<org.pircbotx.PircBotX: java.lang.String getLogin()>();

        specialinvoke $r0.<org.pircbotx.IdentServer: void <init>(org.pircbotx.PircBotX,java.lang.String)>(r1, $r2);

        virtualinvoke $r0.<org.pircbotx.IdentServer: void start()>();

        return $r0;
    }

    public void joinChannel(java.lang.String)
    {
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String r0, $r5;
        org.pircbotx.PircBotX r1;
        java.lang.IllegalArgumentException $r6;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t join a null channel");

        throw $r6;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JOIN ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void sendRawLine(java.lang.String)>($r5);

        return;
    }

    public void joinChannel(java.lang.String, java.lang.String)
    {
        java.lang.IllegalArgumentException $r8, $r14;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r9, $r10, $r11, $r12;
        java.lang.String r0, r1, $r7, $r13;
        org.pircbotx.PircBotX r2;

        r2 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t join a null channel");

        throw $r14;

     label1:
        if r1 != null goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t channel ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with null key");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<org.pircbotx.PircBotX: void joinChannel(java.lang.String)>($r7);

        return;
    }

    public void partChannel(org.pircbotx.Channel)
    {
        java.lang.IllegalArgumentException $r7;
        org.pircbotx.Channel r0;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4, $r6;
        org.pircbotx.PircBotX r1;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: org.pircbotx.Channel;

        if r0 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t part a null channel");

        throw $r7;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PART ");

        $r4 = virtualinvoke r0.<org.pircbotx.Channel: java.lang.String getName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void sendRawLine(java.lang.String)>($r6);

        return;
    }

    public void partChannel(org.pircbotx.Channel, java.lang.String)
    {
        java.lang.IllegalArgumentException $r10;
        org.pircbotx.Channel r0;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r8;
        java.lang.String $r4, r7, $r9;
        org.pircbotx.PircBotX r1;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: org.pircbotx.Channel;

        r7 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t part a null channel");

        throw $r10;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PART ");

        $r4 = virtualinvoke r0.<org.pircbotx.Channel: java.lang.String getName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void sendRawLine(java.lang.String)>($r9);

        return;
    }

    public void cycle(org.pircbotx.Channel)
    {
        org.pircbotx.Channel r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: org.pircbotx.Channel;

        virtualinvoke r0.<org.pircbotx.PircBotX: void cycle(org.pircbotx.Channel,java.lang.String)>(r1, "");

        return;
    }

    public void cycle(org.pircbotx.Channel, java.lang.String)
    {
        org.pircbotx.PircBotX$1 $r3;
        org.pircbotx.Channel r1;
        java.lang.String r4;
        org.pircbotx.PircBotX r0;
        org.pircbotx.hooks.managers.ListenerManager $r2;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: org.pircbotx.Channel;

        r4 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.pircbotx.PircBotX: void partChannel(org.pircbotx.Channel)>(r1);

        $r2 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r3 = new org.pircbotx.PircBotX$1;

        specialinvoke $r3.<org.pircbotx.PircBotX$1: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,java.lang.String)>(r0, r1, r4);

        interfaceinvoke $r2.<org.pircbotx.hooks.managers.ListenerManager: boolean addListener(org.pircbotx.hooks.Listener)>($r3);

        return;
    }

    public void quitServer()
    {
        java.lang.RuntimeException $r1;
        org.pircbotx.PircBotX r0;
        boolean $z0;

        r0 := @this: org.pircbotx.PircBotX;

        $z0 = virtualinvoke r0.<org.pircbotx.PircBotX: boolean isConnected()>();

        if $z0 != 0 goto label1;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Can\'t quit from server because we are already disconnected!");

        throw $r1;

     label1:
        virtualinvoke r0.<org.pircbotx.PircBotX: void quitServer(java.lang.String)>("");

        return;
    }

    public void quitServer(java.lang.String)
    {
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String r3, $r5;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        r3 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("QUIT :");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.pircbotx.PircBotX: void sendRawLine(java.lang.String)>($r5);

        return;
    }

    public void sendRawLine(java.lang.String)
    {
        java.lang.String r0;
        org.pircbotx.PircBotX r1;
        java.lang.NullPointerException $r3;
        boolean $z0;
        org.pircbotx.OutputThread $r2;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot send null messages to server");

        throw $r3;

     label1:
        $z0 = virtualinvoke r1.<org.pircbotx.PircBotX: boolean isConnected()>();

        if $z0 == 0 goto label2;

        $r2 = r1.<org.pircbotx.PircBotX: org.pircbotx.OutputThread outputThread>;

        virtualinvoke $r2.<org.pircbotx.OutputThread: void send(java.lang.String)>(r0);

     label2:
        return;
    }

    public void sendRawLineNow(java.lang.String)
    {
        java.lang.String r0;
        org.pircbotx.PircBotX r1;
        java.lang.NullPointerException $r3;
        boolean $z0;
        org.pircbotx.OutputThread $r2;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot send null messages to server");

        throw $r3;

     label1:
        $z0 = virtualinvoke r1.<org.pircbotx.PircBotX: boolean isConnected()>();

        if $z0 == 0 goto label2;

        $r2 = r1.<org.pircbotx.PircBotX: org.pircbotx.OutputThread outputThread>;

        virtualinvoke $r2.<org.pircbotx.OutputThread: void sendRawLineNow(java.lang.String)>(r0);

     label2:
        return;
    }

    public void sendRawLineSplit(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.pircbotx.PircBotX: void sendRawLineSplit(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, "");

        return;
    }

    public void sendRawLineSplit(java.lang.String, java.lang.String, java.lang.String)
    {
        org.pircbotx.PircBotX r7;
        boolean $z0;
        java.lang.StringBuilder $r0, $r2, $r4, $r5, $r8, $r9, $r10, $r12, $r13, $r15, $r16;
        int $i0, $i1, $i2, i3, $i4, i5, $i6, $i7, $i8, $i9, i10, $i11;
        java.lang.String r1, r3, $r6, $r11, $r14, $r17, r18;
        double $d0, $d1, $d2, $d3;

        r7 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r18 := @parameter2: java.lang.String;

        if r18 != null goto label1;

        r18 = "";

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke r7.<org.pircbotx.PircBotX: int getMaxLineLength()>();

        $i9 = $i0 - 2;

        $z0 = r7.<org.pircbotx.PircBotX: boolean autoSplitMessage>;

        if $z0 == 0 goto label2;

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i1 >= $i9 goto label3;

     label2:
        virtualinvoke r7.<org.pircbotx.PircBotX: void sendRawLine(java.lang.String)>($r6);

        return;

     label3:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = virtualinvoke $r11.<java.lang.String: int length()>();

        i3 = $i9 - $i2;

        $i4 = virtualinvoke r3.<java.lang.String: int length()>();

        $d1 = (double) $i4;

        $d0 = (double) i3;

        $d2 = $d1 / $d0;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        i5 = (int) $d3;

        i10 = 0;

     label4:
        if i10 >= i5 goto label7;

        $i6 = i5 - 1;

        if i10 == $i6 goto label5;

        $i8 = i10 + 1;

        $i11 = $i8 * i3;

        goto label6;

     label5:
        $i11 = virtualinvoke r3.<java.lang.String: int length()>();

     label6:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $i7 = i10 * i3;

        $r14 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>($i7, $i11);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r7.<org.pircbotx.PircBotX: void sendRawLine(java.lang.String)>($r17);

        i10 = i10 + 1;

        goto label4;

     label7:
        return;
    }

    public void sendMessage(java.lang.String, java.lang.String)
    {
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String r0, $r6, r7;
        org.pircbotx.PircBotX r1;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t send message to null target");

        throw $r8;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PRIVMSG ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void sendRawLineSplit(java.lang.String,java.lang.String)>($r6, r7);

        return;
    }

    public void sendMessage(org.pircbotx.User, java.lang.String)
    {
        java.lang.String $r2, r3;
        org.pircbotx.PircBotX r1;
        java.lang.IllegalArgumentException $r4;
        org.pircbotx.User r0;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: org.pircbotx.User;

        r3 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t send message to null user");

        throw $r4;

     label1:
        $r2 = virtualinvoke r0.<org.pircbotx.User: java.lang.String getNick()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void sendMessage(java.lang.String,java.lang.String)>($r2, r3);

        return;
    }

    public void sendMessage(org.pircbotx.Channel, java.lang.String)
    {
        org.pircbotx.Channel r0;
        java.lang.String $r2, r3;
        org.pircbotx.PircBotX r1;
        java.lang.IllegalArgumentException $r4;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: org.pircbotx.Channel;

        r3 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t send message to null channel");

        throw $r4;

     label1:
        $r2 = virtualinvoke r0.<org.pircbotx.Channel: java.lang.String getName()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void sendMessage(java.lang.String,java.lang.String)>($r2, r3);

        return;
    }

    public void sendMessage(org.pircbotx.Channel, org.pircbotx.User, java.lang.String)
    {
        java.lang.IllegalArgumentException $r11, $r12;
        org.pircbotx.Channel r0;
        java.lang.StringBuilder $r4, $r6, $r7, $r9;
        java.lang.String $r3, $r5, r8, $r10;
        org.pircbotx.PircBotX r2;
        org.pircbotx.User r1;

        r2 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: org.pircbotx.Channel;

        r1 := @parameter1: org.pircbotx.User;

        r8 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t send message to null channel");

        throw $r12;

     label1:
        if r1 != null goto label2;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t send message to null user");

        throw $r11;

     label2:
        $r3 = virtualinvoke r0.<org.pircbotx.Channel: java.lang.String getName()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r1.<org.pircbotx.User: java.lang.String getNick()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<org.pircbotx.PircBotX: void sendMessage(java.lang.String,java.lang.String)>($r3, $r10);

        return;
    }

    public void sendAction(java.lang.String, java.lang.String)
    {
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String r0, r4, $r6;
        org.pircbotx.PircBotX r1;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t send action to null target");

        throw $r7;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ACTION ");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void sendCTCPCommand(java.lang.String,java.lang.String)>(r0, $r6);

        return;
    }

    public void sendAction(org.pircbotx.User, java.lang.String)
    {
        java.lang.String $r2, r3;
        org.pircbotx.PircBotX r1;
        java.lang.IllegalArgumentException $r4;
        org.pircbotx.User r0;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: org.pircbotx.User;

        r3 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t send message to null user");

        throw $r4;

     label1:
        $r2 = virtualinvoke r0.<org.pircbotx.User: java.lang.String getNick()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void sendAction(java.lang.String,java.lang.String)>($r2, r3);

        return;
    }

    public void sendAction(org.pircbotx.Channel, java.lang.String)
    {
        org.pircbotx.Channel r0;
        java.lang.String $r2, r3;
        org.pircbotx.PircBotX r1;
        java.lang.IllegalArgumentException $r4;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: org.pircbotx.Channel;

        r3 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t send message to null channel");

        throw $r4;

     label1:
        $r2 = virtualinvoke r0.<org.pircbotx.Channel: java.lang.String getName()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void sendAction(java.lang.String,java.lang.String)>($r2, r3);

        return;
    }

    public void sendNotice(java.lang.String, java.lang.String)
    {
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String r0, $r6, r7;
        org.pircbotx.PircBotX r1;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t send notice to null target");

        throw $r8;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NOTICE ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void sendRawLineSplit(java.lang.String,java.lang.String)>($r6, r7);

        return;
    }

    public void sendNotice(org.pircbotx.User, java.lang.String)
    {
        java.lang.String $r2, r3;
        org.pircbotx.PircBotX r1;
        java.lang.IllegalArgumentException $r4;
        org.pircbotx.User r0;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: org.pircbotx.User;

        r3 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t send notice to null user");

        throw $r4;

     label1:
        $r2 = virtualinvoke r0.<org.pircbotx.User: java.lang.String getNick()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void sendNotice(java.lang.String,java.lang.String)>($r2, r3);

        return;
    }

    public void sendNotice(org.pircbotx.Channel, java.lang.String)
    {
        org.pircbotx.Channel r0;
        java.lang.String $r2, r3;
        org.pircbotx.PircBotX r1;
        java.lang.IllegalArgumentException $r4;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: org.pircbotx.Channel;

        r3 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t send notice to null channel");

        throw $r4;

     label1:
        $r2 = virtualinvoke r0.<org.pircbotx.Channel: java.lang.String getName()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void sendNotice(java.lang.String,java.lang.String)>($r2, r3);

        return;
    }

    public void sendCTCPCommand(java.lang.String, java.lang.String)
    {
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String r0, $r6, r7;
        org.pircbotx.PircBotX r1;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t send CTCP command to null target");

        throw $r8;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PRIVMSG ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :\u0001");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void sendRawLineSplit(java.lang.String,java.lang.String,java.lang.String)>($r6, r7, "\u0001");

        return;
    }

    public void sendCTCPCommand(org.pircbotx.User, java.lang.String)
    {
        java.lang.String $r2, r3;
        org.pircbotx.PircBotX r1;
        java.lang.IllegalArgumentException $r4;
        org.pircbotx.User r0;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: org.pircbotx.User;

        r3 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t send CTCP command to null user");

        throw $r4;

     label1:
        $r2 = virtualinvoke r0.<org.pircbotx.User: java.lang.String getNick()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void sendCTCPCommand(java.lang.String,java.lang.String)>($r2, r3);

        return;
    }

    public void sendCTCPCommand(org.pircbotx.Channel, java.lang.String)
    {
        org.pircbotx.Channel r0;
        java.lang.String $r2, r3;
        org.pircbotx.PircBotX r1;
        java.lang.IllegalArgumentException $r4;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: org.pircbotx.Channel;

        r3 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t send CTCP command to null channel");

        throw $r4;

     label1:
        $r2 = virtualinvoke r0.<org.pircbotx.Channel: java.lang.String getName()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void sendCTCPCommand(java.lang.String,java.lang.String)>($r2, r3);

        return;
    }

    public void sendCTCPResponse(java.lang.String, java.lang.String)
    {
        java.lang.IllegalArgumentException $r10;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r7, $r8;
        java.lang.String r0, r6, $r9;
        org.pircbotx.PircBotX r1;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t send CTCP response to null target");

        throw $r10;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NOTICE ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :\u0001");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0001");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void sendRawLine(java.lang.String)>($r9);

        return;
    }

    public void sendCTCPResponse(org.pircbotx.User, java.lang.String)
    {
        java.lang.String $r2, r3;
        org.pircbotx.PircBotX r1;
        java.lang.IllegalArgumentException $r4;
        org.pircbotx.User r0;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: org.pircbotx.User;

        r3 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t send CTCP response to null user");

        throw $r4;

     label1:
        $r2 = virtualinvoke r0.<org.pircbotx.User: java.lang.String getNick()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void sendCTCPResponse(java.lang.String,java.lang.String)>($r2, r3);

        return;
    }

    public transient void sendCAPREQ(java.lang.String[])
    {
        java.lang.String[] r3;
        java.util.List $r4;
        java.lang.StringBuilder $r1, $r2, $r6;
        java.lang.String $r5, $r7;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        r3 := @parameter0: java.lang.String[];

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CAP REQ :");

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r3);

        $r5 = staticinvoke <org.pircbotx.Utils: java.lang.String join(java.util.Collection,java.lang.String)>($r4, " ");

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.pircbotx.PircBotX: void sendRawLine(java.lang.String)>($r7);

        return;
    }

    public void changeNick(java.lang.String)
    {
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String r0, $r5;
        org.pircbotx.PircBotX r1;
        java.lang.IllegalArgumentException $r6;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t change to null nick");

        throw $r6;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NICK ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void sendRawLine(java.lang.String)>($r5);

        return;
    }

    public void identify(java.lang.String)
    {
        java.lang.IllegalArgumentException $r8;
        org.pircbotx.PircBotX$2 $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String r0, $r7;
        org.pircbotx.PircBotX r1;
        boolean $z0;
        org.pircbotx.hooks.managers.ListenerManager $r2;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t identify with null password");

        throw $r8;

     label1:
        $z0 = r1.<org.pircbotx.PircBotX: boolean loggedIn>;

        if $z0 == 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NICKSERV IDENTIFY ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void sendRawLine(java.lang.String)>($r7);

        goto label3;

     label2:
        $r2 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r3 = new org.pircbotx.PircBotX$2;

        specialinvoke $r3.<org.pircbotx.PircBotX$2: void <init>(org.pircbotx.PircBotX,java.lang.String)>(r1, r0);

        interfaceinvoke $r2.<org.pircbotx.hooks.managers.ListenerManager: boolean addListener(org.pircbotx.hooks.Listener)>($r3);

     label3:
        return;
    }

    public void setMode(org.pircbotx.Channel, java.lang.String)
    {
        java.lang.IllegalArgumentException $r10, $r11;
        org.pircbotx.Channel r0;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r8;
        java.lang.String r1, $r5, $r9;
        org.pircbotx.PircBotX r2;

        r2 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: org.pircbotx.Channel;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t set mode on null channel");

        throw $r11;

     label1:
        if r1 != null goto label2;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t set mode on channel to null");

        throw $r10;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MODE ");

        $r5 = virtualinvoke r0.<org.pircbotx.Channel: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<org.pircbotx.PircBotX: void sendRawLine(java.lang.String)>($r9);

        return;
    }

    public transient void setMode(org.pircbotx.Channel, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r2;
        int i0, i1;
        java.lang.String r1, $r7, $r9, $r11;
        org.pircbotx.PircBotX r4;
        java.lang.IllegalArgumentException $r13, $r14, $r15;
        org.pircbotx.Channel r0;
        java.lang.StringBuilder $r3, $r5, $r6, $r8, $r12;
        java.lang.Object r10;

        r4 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: org.pircbotx.Channel;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        if r0 != null goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t set mode on null channel");

        throw $r15;

     label1:
        if r1 != null goto label2;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t set mode on channel to null");

        throw $r14;

     label2:
        if r2 != null goto label3;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t set mode arguments to null");

        throw $r13;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(" ");

        i0 = lengthof r2;

        i1 = 0;

     label4:
        if i1 >= i0 goto label5;

        r10 = r2[i1];

        $r11 = virtualinvoke r10.<java.lang.Object: java.lang.String toString()>();

        $r12 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        i1 = i1 + 1;

        goto label4;

     label5:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String)>(r0, $r9);

        return;
    }

    public void setMode(org.pircbotx.Channel, java.lang.String, org.pircbotx.User)
    {
        java.lang.IllegalArgumentException $r9, $r10;
        org.pircbotx.Channel r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String r0, $r6, $r8;
        org.pircbotx.PircBotX r2;
        org.pircbotx.User r1;

        r2 := @this: org.pircbotx.PircBotX;

        r3 := @parameter0: org.pircbotx.Channel;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: org.pircbotx.User;

        if r0 != null goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t set user mode on channel to null");

        throw $r10;

     label1:
        if r1 != null goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t set user mode on null user");

        throw $r9;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke r1.<org.pircbotx.User: java.lang.String getNick()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String)>(r3, $r8);

        return;
    }

    public void setChannelLimit(org.pircbotx.Channel, int)
    {
        java.lang.Object[] $r2;
        org.pircbotx.Channel r1;
        int i0;
        org.pircbotx.PircBotX r0;
        java.lang.Integer $r3;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: org.pircbotx.Channel;

        i0 := @parameter1: int;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[0] = $r3;

        virtualinvoke r0.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String,java.lang.Object[])>(r1, "+l", $r2);

        return;
    }

    public void removeChannelLimit(org.pircbotx.Channel)
    {
        org.pircbotx.Channel r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: org.pircbotx.Channel;

        virtualinvoke r0.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String)>(r1, "-l");

        return;
    }

    public void setChannelKey(org.pircbotx.Channel, java.lang.String)
    {
        java.lang.Object[] $r3;
        org.pircbotx.Channel r2;
        java.lang.String r0;
        org.pircbotx.PircBotX r1;
        java.lang.IllegalArgumentException $r4;

        r1 := @this: org.pircbotx.PircBotX;

        r2 := @parameter0: org.pircbotx.Channel;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t set channel key to null");

        throw $r4;

     label1:
        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r0;

        virtualinvoke r1.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String,java.lang.Object[])>(r2, "+k", $r3);

        return;
    }

    public void removeChannelKey(org.pircbotx.Channel, java.lang.String)
    {
        java.lang.Object[] $r3;
        org.pircbotx.Channel r2;
        java.lang.String r0;
        org.pircbotx.PircBotX r1;
        java.lang.IllegalArgumentException $r4;

        r1 := @this: org.pircbotx.PircBotX;

        r2 := @parameter0: org.pircbotx.Channel;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t remove channel key with null key");

        throw $r4;

     label1:
        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r0;

        virtualinvoke r1.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String,java.lang.Object[])>(r2, "-k", $r3);

        return;
    }

    public void setInviteOnly(org.pircbotx.Channel)
    {
        org.pircbotx.Channel r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: org.pircbotx.Channel;

        virtualinvoke r0.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String)>(r1, "+i");

        return;
    }

    public void removeInviteOnly(org.pircbotx.Channel)
    {
        org.pircbotx.Channel r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: org.pircbotx.Channel;

        virtualinvoke r0.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String)>(r1, "-i");

        return;
    }

    public void setModerated(org.pircbotx.Channel)
    {
        org.pircbotx.Channel r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: org.pircbotx.Channel;

        virtualinvoke r0.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String)>(r1, "+m");

        return;
    }

    public void removeModerated(org.pircbotx.Channel)
    {
        org.pircbotx.Channel r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: org.pircbotx.Channel;

        virtualinvoke r0.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String)>(r1, "-m");

        return;
    }

    public void setNoExternalMessages(org.pircbotx.Channel)
    {
        org.pircbotx.Channel r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: org.pircbotx.Channel;

        virtualinvoke r0.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String)>(r1, "+n");

        return;
    }

    public void removeNoExternalMessages(org.pircbotx.Channel)
    {
        org.pircbotx.Channel r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: org.pircbotx.Channel;

        virtualinvoke r0.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String)>(r1, "-n");

        return;
    }

    public void setSecret(org.pircbotx.Channel)
    {
        org.pircbotx.Channel r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: org.pircbotx.Channel;

        virtualinvoke r0.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String)>(r1, "+s");

        return;
    }

    public void removeSecret(org.pircbotx.Channel)
    {
        org.pircbotx.Channel r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: org.pircbotx.Channel;

        virtualinvoke r0.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String)>(r1, "-s");

        return;
    }

    public void setTopicProtection(org.pircbotx.Channel)
    {
        org.pircbotx.Channel r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: org.pircbotx.Channel;

        virtualinvoke r0.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String)>(r1, "+t");

        return;
    }

    public void removeTopicProtection(org.pircbotx.Channel)
    {
        org.pircbotx.Channel r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: org.pircbotx.Channel;

        virtualinvoke r0.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String)>(r1, "-t");

        return;
    }

    public void sendInvite(java.lang.String, java.lang.String)
    {
        java.lang.IllegalArgumentException $r9, $r10;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;
        java.lang.String r0, r1, $r8;
        org.pircbotx.PircBotX r2;

        r2 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t send invite to null nick");

        throw $r10;

     label1:
        if r1 != null goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t send invite to null channel");

        throw $r9;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INVITE ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<org.pircbotx.PircBotX: void sendRawLine(java.lang.String)>($r8);

        return;
    }

    public void sendInvite(org.pircbotx.User, java.lang.String)
    {
        java.lang.String $r2, r3;
        org.pircbotx.PircBotX r1;
        java.lang.IllegalArgumentException $r4;
        org.pircbotx.User r0;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: org.pircbotx.User;

        r3 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t send invite to null user");

        throw $r4;

     label1:
        $r2 = virtualinvoke r0.<org.pircbotx.User: java.lang.String getNick()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void sendInvite(java.lang.String,java.lang.String)>($r2, r3);

        return;
    }

    public void sendInvite(org.pircbotx.User, org.pircbotx.Channel)
    {
        org.pircbotx.Channel r1;
        java.lang.String $r3, $r4;
        org.pircbotx.PircBotX r2;
        java.lang.IllegalArgumentException $r5, $r6;
        org.pircbotx.User r0;

        r2 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: org.pircbotx.User;

        r1 := @parameter1: org.pircbotx.Channel;

        if r0 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t send invite to null user");

        throw $r6;

     label1:
        if r1 != null goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t send invite to null channel");

        throw $r5;

     label2:
        $r3 = virtualinvoke r0.<org.pircbotx.User: java.lang.String getNick()>();

        $r4 = virtualinvoke r1.<org.pircbotx.Channel: java.lang.String getName()>();

        virtualinvoke r2.<org.pircbotx.PircBotX: void sendInvite(java.lang.String,java.lang.String)>($r3, $r4);

        return;
    }

    public void sendInvite(org.pircbotx.Channel, org.pircbotx.Channel)
    {
        org.pircbotx.Channel r0, r1;
        java.lang.String $r3, $r4;
        org.pircbotx.PircBotX r2;
        java.lang.IllegalArgumentException $r5, $r6;

        r2 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: org.pircbotx.Channel;

        r1 := @parameter1: org.pircbotx.Channel;

        if r0 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t send invite to null target channel");

        throw $r6;

     label1:
        if r1 != null goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t send invite to null invite channel");

        throw $r5;

     label2:
        $r3 = virtualinvoke r0.<org.pircbotx.Channel: java.lang.String getName()>();

        $r4 = virtualinvoke r1.<org.pircbotx.Channel: java.lang.String getName()>();

        virtualinvoke r2.<org.pircbotx.PircBotX: void sendInvite(java.lang.String,java.lang.String)>($r3, $r4);

        return;
    }

    public void ban(org.pircbotx.Channel, java.lang.String)
    {
        java.lang.IllegalArgumentException $r10, $r11;
        org.pircbotx.Channel r0;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r8;
        java.lang.String r1, $r5, $r9;
        org.pircbotx.PircBotX r2;

        r2 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: org.pircbotx.Channel;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t set ban on null channel");

        throw $r11;

     label1:
        if r1 != null goto label2;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t set ban on null hostmask");

        throw $r10;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MODE ");

        $r5 = virtualinvoke r0.<org.pircbotx.Channel: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" +b ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<org.pircbotx.PircBotX: void sendRawLine(java.lang.String)>($r9);

        return;
    }

    public void unBan(org.pircbotx.Channel, java.lang.String)
    {
        java.lang.IllegalArgumentException $r10, $r11;
        org.pircbotx.Channel r0;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r8;
        java.lang.String r1, $r5, $r9;
        org.pircbotx.PircBotX r2;

        r2 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: org.pircbotx.Channel;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t remove ban on null channel");

        throw $r11;

     label1:
        if r1 != null goto label2;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t remove ban on null hostmask");

        throw $r10;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MODE ");

        $r5 = virtualinvoke r0.<org.pircbotx.Channel: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -b ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<org.pircbotx.PircBotX: void sendRawLine(java.lang.String)>($r9);

        return;
    }

    public void op(org.pircbotx.Channel, org.pircbotx.User)
    {
        java.lang.IllegalArgumentException $r8;
        org.pircbotx.Channel r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;
        org.pircbotx.PircBotX r1;
        org.pircbotx.User r0;

        r1 := @this: org.pircbotx.PircBotX;

        r2 := @parameter0: org.pircbotx.Channel;

        r0 := @parameter1: org.pircbotx.User;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t set op on null user");

        throw $r8;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+o ");

        $r5 = virtualinvoke r0.<org.pircbotx.User: java.lang.String getNick()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String)>(r2, $r7);

        return;
    }

    public void deOp(org.pircbotx.Channel, org.pircbotx.User)
    {
        java.lang.IllegalArgumentException $r8;
        org.pircbotx.Channel r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;
        org.pircbotx.PircBotX r1;
        org.pircbotx.User r0;

        r1 := @this: org.pircbotx.PircBotX;

        r2 := @parameter0: org.pircbotx.Channel;

        r0 := @parameter1: org.pircbotx.User;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t remove op on null user");

        throw $r8;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-o ");

        $r5 = virtualinvoke r0.<org.pircbotx.User: java.lang.String getNick()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String)>(r2, $r7);

        return;
    }

    public void voice(org.pircbotx.Channel, org.pircbotx.User)
    {
        java.lang.IllegalArgumentException $r8;
        org.pircbotx.Channel r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;
        org.pircbotx.PircBotX r1;
        org.pircbotx.User r0;

        r1 := @this: org.pircbotx.PircBotX;

        r2 := @parameter0: org.pircbotx.Channel;

        r0 := @parameter1: org.pircbotx.User;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t set voice on null user");

        throw $r8;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+v ");

        $r5 = virtualinvoke r0.<org.pircbotx.User: java.lang.String getNick()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String)>(r2, $r7);

        return;
    }

    public void deVoice(org.pircbotx.Channel, org.pircbotx.User)
    {
        java.lang.IllegalArgumentException $r8;
        org.pircbotx.Channel r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;
        org.pircbotx.PircBotX r1;
        org.pircbotx.User r0;

        r1 := @this: org.pircbotx.PircBotX;

        r2 := @parameter0: org.pircbotx.Channel;

        r0 := @parameter1: org.pircbotx.User;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t remove voice on null user");

        throw $r8;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-v ");

        $r5 = virtualinvoke r0.<org.pircbotx.User: java.lang.String getNick()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String)>(r2, $r7);

        return;
    }

    public void halfOp(org.pircbotx.Channel, org.pircbotx.User)
    {
        java.lang.IllegalArgumentException $r8;
        org.pircbotx.Channel r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;
        org.pircbotx.PircBotX r1;
        org.pircbotx.User r0;

        r1 := @this: org.pircbotx.PircBotX;

        r2 := @parameter0: org.pircbotx.Channel;

        r0 := @parameter1: org.pircbotx.User;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t set halfop on null user");

        throw $r8;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+h ");

        $r5 = virtualinvoke r0.<org.pircbotx.User: java.lang.String getNick()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String)>(r2, $r7);

        return;
    }

    public void deHalfOp(org.pircbotx.Channel, org.pircbotx.User)
    {
        java.lang.IllegalArgumentException $r8;
        org.pircbotx.Channel r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;
        org.pircbotx.PircBotX r1;
        org.pircbotx.User r0;

        r1 := @this: org.pircbotx.PircBotX;

        r2 := @parameter0: org.pircbotx.Channel;

        r0 := @parameter1: org.pircbotx.User;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t remove halfop on null user");

        throw $r8;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-h ");

        $r5 = virtualinvoke r0.<org.pircbotx.User: java.lang.String getNick()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String)>(r2, $r7);

        return;
    }

    public void owner(org.pircbotx.Channel, org.pircbotx.User)
    {
        java.lang.IllegalArgumentException $r8;
        org.pircbotx.Channel r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;
        org.pircbotx.PircBotX r1;
        org.pircbotx.User r0;

        r1 := @this: org.pircbotx.PircBotX;

        r2 := @parameter0: org.pircbotx.Channel;

        r0 := @parameter1: org.pircbotx.User;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t set owner on null user");

        throw $r8;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+q ");

        $r5 = virtualinvoke r0.<org.pircbotx.User: java.lang.String getNick()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String)>(r2, $r7);

        return;
    }

    public void deOwner(org.pircbotx.Channel, org.pircbotx.User)
    {
        java.lang.IllegalArgumentException $r8;
        org.pircbotx.Channel r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;
        org.pircbotx.PircBotX r1;
        org.pircbotx.User r0;

        r1 := @this: org.pircbotx.PircBotX;

        r2 := @parameter0: org.pircbotx.Channel;

        r0 := @parameter1: org.pircbotx.User;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t remove owner on null user");

        throw $r8;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-q ");

        $r5 = virtualinvoke r0.<org.pircbotx.User: java.lang.String getNick()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String)>(r2, $r7);

        return;
    }

    public void superOp(org.pircbotx.Channel, org.pircbotx.User)
    {
        java.lang.IllegalArgumentException $r8;
        org.pircbotx.Channel r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;
        org.pircbotx.PircBotX r1;
        org.pircbotx.User r0;

        r1 := @this: org.pircbotx.PircBotX;

        r2 := @parameter0: org.pircbotx.Channel;

        r0 := @parameter1: org.pircbotx.User;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t set super op on null user");

        throw $r8;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+a ");

        $r5 = virtualinvoke r0.<org.pircbotx.User: java.lang.String getNick()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String)>(r2, $r7);

        return;
    }

    public void deSuperOp(org.pircbotx.Channel, org.pircbotx.User)
    {
        java.lang.IllegalArgumentException $r8;
        org.pircbotx.Channel r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;
        org.pircbotx.PircBotX r1;
        org.pircbotx.User r0;

        r1 := @this: org.pircbotx.PircBotX;

        r2 := @parameter0: org.pircbotx.Channel;

        r0 := @parameter1: org.pircbotx.User;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t remove super op on null user");

        throw $r8;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-a ");

        $r5 = virtualinvoke r0.<org.pircbotx.User: java.lang.String getNick()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void setMode(org.pircbotx.Channel,java.lang.String)>(r2, $r7);

        return;
    }

    public void setTopic(org.pircbotx.Channel, java.lang.String)
    {
        java.lang.IllegalArgumentException $r10, $r11;
        org.pircbotx.Channel r0;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r8;
        java.lang.String r1, $r5, $r9;
        org.pircbotx.PircBotX r2;

        r2 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: org.pircbotx.Channel;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t set topic on null channel");

        throw $r11;

     label1:
        if r1 != null goto label2;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t set topic to null");

        throw $r10;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TOPIC ");

        $r5 = virtualinvoke r0.<org.pircbotx.Channel: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<org.pircbotx.PircBotX: void sendRawLine(java.lang.String)>($r9);

        return;
    }

    public void kick(org.pircbotx.Channel, org.pircbotx.User)
    {
        org.pircbotx.Channel r1;
        org.pircbotx.PircBotX r0;
        org.pircbotx.User r2;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: org.pircbotx.Channel;

        r2 := @parameter1: org.pircbotx.User;

        virtualinvoke r0.<org.pircbotx.PircBotX: void kick(org.pircbotx.Channel,org.pircbotx.User,java.lang.String)>(r1, r2, "");

        return;
    }

    public void kick(org.pircbotx.Channel, org.pircbotx.User, java.lang.String)
    {
        java.lang.String $r5, $r8, r11, $r13;
        org.pircbotx.PircBotX r2;
        java.lang.IllegalArgumentException $r14, $r15;
        org.pircbotx.Channel r0;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r9, $r10, $r12;
        org.pircbotx.User r1;

        r2 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: org.pircbotx.Channel;

        r1 := @parameter1: org.pircbotx.User;

        r11 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t kick on null channel");

        throw $r15;

     label1:
        if r1 != null goto label2;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t kick null user");

        throw $r14;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("KICK ");

        $r5 = virtualinvoke r0.<org.pircbotx.Channel: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = virtualinvoke r1.<org.pircbotx.User: java.lang.String getNick()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<org.pircbotx.PircBotX: void sendRawLine(java.lang.String)>($r13);

        return;
    }

    public void listChannels()
    {
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        virtualinvoke r0.<org.pircbotx.PircBotX: void listChannels(java.lang.String)>(null);

        return;
    }

    public void listChannels(java.lang.String)
    {
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String r2, $r6;
        org.pircbotx.PircBotX r0;
        org.pircbotx.PircBotX$ListBuilder $r1;
        boolean $z0;

        r0 := @this: org.pircbotx.PircBotX;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.pircbotx.PircBotX: org.pircbotx.PircBotX$ListBuilder channelListBuilder>;

        $z0 = virtualinvoke $r1.<org.pircbotx.PircBotX$ListBuilder: boolean isRunning()>();

        if $z0 != 0 goto label2;

        if r2 != null goto label1;

        virtualinvoke r0.<org.pircbotx.PircBotX: void sendRawLine(java.lang.String)>("LIST");

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LIST ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.pircbotx.PircBotX: void sendRawLine(java.lang.String)>($r6);

     label2:
        return;
    }

    public org.pircbotx.DccFileTransfer dccSendFile(java.io.File, org.pircbotx.User, int) throws java.io.IOException
    {
        org.pircbotx.DccFileTransfer $r2;
        int i0;
        org.pircbotx.PircBotX r3;
        java.lang.IllegalArgumentException $r4, $r5;
        org.pircbotx.User r1;
        java.io.File r0;

        r3 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: org.pircbotx.User;

        i0 := @parameter2: int;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t send a null file");

        throw $r5;

     label1:
        if r1 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t send file to null user");

        throw $r4;

     label2:
        $r2 = new org.pircbotx.DccFileTransfer;

        specialinvoke $r2.<org.pircbotx.DccFileTransfer: void <init>(org.pircbotx.PircBotX,java.io.File,org.pircbotx.User,int)>(r3, r0, r1, i0);

        virtualinvoke $r2.<org.pircbotx.DccFileTransfer: void doSend(boolean)>(1);

        return $r2;
    }

    public org.pircbotx.DccChat dccSendChatRequest(org.pircbotx.User, int) throws java.io.IOException, java.net.SocketTimeoutException
    {
        java.net.Socket $r12;
        java.net.ServerSocket $r3;
        java.net.InetAddress $r4, r15;
        int i0, $i1;
        org.pircbotx.DccChat $r13;
        java.lang.String $r5, $r11;
        org.pircbotx.PircBotX r1;
        org.pircbotx.DccManager $r2;
        java.lang.IllegalArgumentException $r14;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;
        org.pircbotx.User r0;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: org.pircbotx.User;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t send chat request to null user");

        throw $r14;

     label1:
        $r2 = r1.<org.pircbotx.PircBotX: org.pircbotx.DccManager dccManager>;

        $r3 = virtualinvoke $r2.<org.pircbotx.DccManager: java.net.ServerSocket createServerSocket()>();

        virtualinvoke $r3.<java.net.ServerSocket: void setSoTimeout(int)>(i0);

        $i1 = virtualinvoke $r3.<java.net.ServerSocket: int getLocalPort()>();

        $r4 = virtualinvoke r1.<org.pircbotx.PircBotX: java.net.InetAddress getDccInetAddress()>();

        r15 = $r4;

        if $r4 != null goto label2;

        r15 = virtualinvoke r1.<org.pircbotx.PircBotX: java.net.InetAddress getInetAddress()>();

     label2:
        $r5 = staticinvoke <org.pircbotx.DccManager: java.lang.String addressToInteger(java.net.InetAddress)>(r15);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DCC CHAT chat ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void sendCTCPCommand(org.pircbotx.User,java.lang.String)>(r0, $r11);

        $r12 = virtualinvoke $r3.<java.net.ServerSocket: java.net.Socket accept()>();

        virtualinvoke $r3.<java.net.ServerSocket: void close()>();

        $r13 = new org.pircbotx.DccChat;

        specialinvoke $r13.<org.pircbotx.DccChat: void <init>(org.pircbotx.PircBotX,org.pircbotx.User,java.net.Socket)>(r1, r0, $r12);

        return $r13;
    }

    public void log(java.lang.String)
    {
        java.io.PrintStream $r3;
        java.lang.Throwable $r9;
        long $l0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r2, $r4, $r5, $r7;
        java.lang.String r6, $r8;
        org.pircbotx.PircBotX r0;
        boolean $z0;

        r0 := @this: org.pircbotx.PircBotX;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<org.pircbotx.PircBotX: java.lang.Object logLock>;

        entermonitor $r1;

     label1:
        $z0 = r0.<org.pircbotx.PircBotX: boolean verbose>;

        if $z0 == 0 goto label2;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label2:
        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void logException(java.lang.Throwable)
    {
        java.io.PrintWriter $r3;
        java.lang.Throwable r4, $r12;
        java.io.StringWriter $r2;
        java.util.StringTokenizer $r5;
        java.lang.Object $r1;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r6, $r9, $r11;
        org.pircbotx.PircBotX r0;
        boolean $z0, $z1;

        r0 := @this: org.pircbotx.PircBotX;

        r4 := @parameter0: java.lang.Throwable;

        $r1 = r0.<org.pircbotx.PircBotX: java.lang.Object logLock>;

        entermonitor $r1;

     label1:
        $z0 = r0.<org.pircbotx.PircBotX: boolean verbose>;

        if $z0 != 0 goto label3;

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r2 = new java.io.StringWriter;

        specialinvoke $r2.<java.io.StringWriter: void <init>()>();

        $r3 = new java.io.PrintWriter;

        specialinvoke $r3.<java.io.PrintWriter: void <init>(java.io.Writer)>($r2);

        virtualinvoke r4.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>($r3);

        virtualinvoke $r3.<java.io.PrintWriter: void flush()>();

        $r5 = new java.util.StringTokenizer;

        $r6 = virtualinvoke $r2.<java.io.StringWriter: java.lang.String toString()>();

        specialinvoke $r5.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r6, "\r\n");

        virtualinvoke r0.<org.pircbotx.PircBotX: void log(java.lang.String)>("### Your implementation of PircBotX is faulty and you have");

        virtualinvoke r0.<org.pircbotx.PircBotX: void log(java.lang.String)>("### allowed an uncaught Exception or Error to propagate in your");

        virtualinvoke r0.<org.pircbotx.PircBotX: void log(java.lang.String)>("### code. It may be possible for PircBotX to continue operating");

        virtualinvoke r0.<org.pircbotx.PircBotX: void log(java.lang.String)>("### normally. Here is the stack trace that was produced: -");

        virtualinvoke r0.<org.pircbotx.PircBotX: void log(java.lang.String)>("### ");

     label4:
        $z1 = virtualinvoke $r5.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label5;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("### ");

        $r9 = virtualinvoke $r5.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.pircbotx.PircBotX: void log(java.lang.String)>($r11);

        goto label4;

     label5:
        exitmonitor $r1;

     label6:
        goto label9;

     label7:
        $r12 := @caughtexception;

        exitmonitor $r1;

     label8:
        throw $r12;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    protected void handleLine(java.lang.String) throws java.io.IOException
    {
        org.pircbotx.hooks.events.KickEvent $r130;
        org.pircbotx.hooks.events.NoticeEvent $r128;
        org.pircbotx.hooks.events.JoinEvent $r125;
        org.pircbotx.hooks.events.PingEvent $r116;
        java.lang.StringBuilder $r3, $r4, $r56, $r57, $r60, $r61, $r110, $r123, $r124;
        org.pircbotx.User $r14, $r27, $r41, $r47;
        org.pircbotx.ManyToManyMap $r20, $r30, $r33, $r38, $r46, $r50, $r52;
        long $l5;
        org.pircbotx.hooks.events.MessageEvent $r121;
        java.util.StringTokenizer $r113;
        org.pircbotx.hooks.events.PrivateMessageEvent $r122;
        org.pircbotx.hooks.events.InviteEvent $r132;
        org.pircbotx.hooks.events.FingerEvent $r118;
        org.pircbotx.UserSnapshot $r34;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, $i30, $i32, $i33, $i34;
        org.pircbotx.Channel $r103, r104;
        java.lang.Object $r7, $r9, $r25, $r89, $r94;
        org.pircbotx.hooks.events.VersionEvent $r114;
        org.pircbotx.hooks.events.TopicEvent $r131;
        org.pircbotx.PircBotX r1;
        java.util.Set $r19;
        org.pircbotx.hooks.events.PartEvent $r126;
        java.lang.String r0, $r5, $r8, $r10, $r11, $r21, $r24, $r26, $r28, $r29, $r35, $r42, $r45, $r51, $r58, $r62, $r65, $r68, $r72, $r82, $r85, $r88, $r90, $r93, r97, r98, r99, r100, r101, $r102, $r105, r106, r107, r108;
        java.lang.NumberFormatException $r96;
        org.pircbotx.hooks.events.QuitEvent $r129;
        org.pircbotx.hooks.managers.ListenerManager $r12, $r15, $r17, $r22, $r31, $r36, $r39, $r43, $r48, $r53, $r63, $r66, $r70, $r74, $r76, $r78, $r80, $r83, $r86, $r91;
        org.pircbotx.hooks.events.ServerPingEvent $r111;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34;
        org.pircbotx.DccManager $r73;
        java.util.List $r6;
        org.pircbotx.hooks.events.ActionEvent $r115;
        org.pircbotx.hooks.events.UnknownEvent $r112, $r119, $r120, $r133;
        org.pircbotx.hooks.events.NickChangeEvent $r127;
        char $c10, $c20;
        java.lang.IllegalArgumentException $r109;
        org.pircbotx.hooks.events.TimeEvent $r117;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label01;

        $r109 = new java.lang.IllegalArgumentException;

        specialinvoke $r109.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t process null line");

        throw $r109;

     label01:
        $r110 = new java.lang.StringBuilder;

        specialinvoke $r110.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<<<");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void log(java.lang.String)>($r5);

        $r6 = staticinvoke <org.pircbotx.Utils: java.util.List tokenizeLine(java.lang.String)>(r0);

        r97 = "";

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0);

        $r8 = (java.lang.String) $r7;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>(":");

        if $z0 == 0 goto label02;

        $r94 = interfaceinvoke $r6.<java.util.List: java.lang.Object remove(int)>(0);

        r97 = (java.lang.String) $r94;

     label02:
        $r9 = interfaceinvoke $r6.<java.util.List: java.lang.Object remove(int)>(0);

        $r10 = (java.lang.String) $r9;

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String toUpperCase()>();

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("PING");

        if $z1 == 0 goto label03;

        $r91 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r111 = new org.pircbotx.hooks.events.ServerPingEvent;

        $r93 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(5);

        specialinvoke $r111.<org.pircbotx.hooks.events.ServerPingEvent: void <init>(org.pircbotx.PircBotX,java.lang.String)>(r1, $r93);

        interfaceinvoke $r91.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r111);

        return;

     label03:
        $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("ERROR ");

        if $z2 == 0 goto label04;

        virtualinvoke r1.<org.pircbotx.PircBotX: void shutdown(boolean)>(1);

        return;

     label04:
        r98 = "";

        r99 = "";

        r100 = null;

        $i0 = virtualinvoke r97.<java.lang.String: int indexOf(java.lang.String)>("!");

        $i1 = virtualinvoke r97.<java.lang.String: int indexOf(java.lang.String)>("@");

        $z3 = virtualinvoke r97.<java.lang.String: boolean startsWith(java.lang.String)>(":");

        if $z3 == 0 goto label11;

        if $i0 <= 0 goto label05;

        if $i1 <= 0 goto label05;

        if $i0 >= $i1 goto label05;

        r101 = virtualinvoke r97.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

        $i26 = $i0 + 1;

        r98 = virtualinvoke r97.<java.lang.String: java.lang.String substring(int,int)>($i26, $i1);

        $i27 = $i1 + 1;

        r99 = virtualinvoke r97.<java.lang.String: java.lang.String substring(int)>($i27);

        goto label12;

     label05:
        $i30 = (int) -1;

        i28 = $i30;

     label06:
        i28 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

     label07:
        goto label09;

     label08:
        $r96 := @caughtexception;

     label09:
        $i32 = (int) -1;

        if i28 == $i32 goto label10;

        $i22 = virtualinvoke r97.<java.lang.String: int length()>();

        $i23 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>($r11, $i22);

        $i24 = $i23 + 4;

        $i25 = virtualinvoke r0.<java.lang.String: int length()>();

        $r90 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i24, $i25);

        virtualinvoke r1.<org.pircbotx.PircBotX: void processServerResponse(int,java.lang.String)>(i28, $r90);

        return;

     label10:
        r101 = r97;

        goto label12;

     label11:
        $r12 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r112 = new org.pircbotx.hooks.events.UnknownEvent;

        specialinvoke $r112.<org.pircbotx.hooks.events.UnknownEvent: void <init>(org.pircbotx.PircBotX,java.lang.String)>(r1, r0);

        interfaceinvoke $r12.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r112);

        return;

     label12:
        $z4 = virtualinvoke r101.<java.lang.String: boolean startsWith(java.lang.String)>(":");

        if $z4 == 0 goto label13;

        r101 = virtualinvoke r101.<java.lang.String: java.lang.String substring(int)>(1);

     label13:
        if null != null goto label16;

        $z31 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z31 != 0 goto label14;

        $r89 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0);

        $r102 = (java.lang.String) $r89;

        goto label15;

     label14:
        $r102 = "";

     label15:
        r100 = $r102;

     label16:
        $z32 = virtualinvoke r100.<java.lang.String: boolean startsWith(java.lang.String)>(":");

        if $z32 == 0 goto label17;

        r100 = virtualinvoke r100.<java.lang.String: java.lang.String substring(int)>(1);

     label17:
        $r14 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.User getUser(java.lang.String)>(r101);

        $i2 = virtualinvoke r100.<java.lang.String: int length()>();

        if $i2 == 0 goto label18;

        $r88 = r1.<org.pircbotx.PircBotX: java.lang.String channelPrefixes>;

        $c20 = virtualinvoke r100.<java.lang.String: char charAt(int)>(0);

        $i33 = (int) $c20;

        $i21 = virtualinvoke $r88.<java.lang.String: int indexOf(int)>($i33);

        if $i21 < 0 goto label18;

        $r103 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.Channel getChannel(java.lang.String)>(r100);

        goto label19;

     label18:
        $r103 = null;

     label19:
        r104 = $r103;

        $z33 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(" :");

        if $z33 == 0 goto label20;

        $i18 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(" :");

        $i19 = $i18 + 2;

        $r105 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i19);

        goto label21;

     label20:
        $r105 = "";

     label21:
        r106 = $r105;

        $z5 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("PRIVMSG");

        if $z5 == 0 goto label30;

        $i12 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(":\u0001");

        if $i12 <= 0 goto label30;

        $z23 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("\u0001");

        if $z23 == 0 goto label30;

        $i13 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(":\u0001");

        $i14 = $i13 + 2;

        $i15 = virtualinvoke r0.<java.lang.String: int length()>();

        $i16 = $i15 - 1;

        $r68 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i14, $i16);

        $r113 = new java.util.StringTokenizer;

        specialinvoke $r113.<java.util.StringTokenizer: void <init>(java.lang.String)>($r68);

        $z24 = virtualinvoke $r68.<java.lang.String: boolean equals(java.lang.Object)>("VERSION");

        if $z24 == 0 goto label22;

        $r86 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r114 = new org.pircbotx.hooks.events.VersionEvent;

        specialinvoke $r114.<org.pircbotx.hooks.events.VersionEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.User,org.pircbotx.Channel)>(r1, $r14, r104);

        interfaceinvoke $r86.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r114);

        goto label29;

     label22:
        $z25 = virtualinvoke $r68.<java.lang.String: boolean startsWith(java.lang.String)>("ACTION ");

        if $z25 == 0 goto label23;

        $r83 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r115 = new org.pircbotx.hooks.events.ActionEvent;

        $r85 = virtualinvoke $r68.<java.lang.String: java.lang.String substring(int)>(7);

        specialinvoke $r115.<org.pircbotx.hooks.events.ActionEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.User,org.pircbotx.Channel,java.lang.String)>(r1, $r14, r104, $r85);

        interfaceinvoke $r83.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r115);

        goto label29;

     label23:
        $z26 = virtualinvoke $r68.<java.lang.String: boolean startsWith(java.lang.String)>("PING ");

        if $z26 == 0 goto label24;

        $r80 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r116 = new org.pircbotx.hooks.events.PingEvent;

        $r82 = virtualinvoke $r68.<java.lang.String: java.lang.String substring(int)>(5);

        specialinvoke $r116.<org.pircbotx.hooks.events.PingEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.User,org.pircbotx.Channel,java.lang.String)>(r1, $r14, r104, $r82);

        interfaceinvoke $r80.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r116);

        goto label29;

     label24:
        $z27 = virtualinvoke $r68.<java.lang.String: boolean equals(java.lang.Object)>("TIME");

        if $z27 == 0 goto label25;

        $r78 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r117 = new org.pircbotx.hooks.events.TimeEvent;

        specialinvoke $r117.<org.pircbotx.hooks.events.TimeEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.User,org.pircbotx.Channel)>(r1, $r14, r104);

        interfaceinvoke $r78.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r117);

        goto label29;

     label25:
        $z28 = virtualinvoke $r68.<java.lang.String: boolean equals(java.lang.Object)>("FINGER");

        if $z28 == 0 goto label26;

        $r76 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r118 = new org.pircbotx.hooks.events.FingerEvent;

        specialinvoke $r118.<org.pircbotx.hooks.events.FingerEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.User,org.pircbotx.Channel)>(r1, $r14, r104);

        interfaceinvoke $r76.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r118);

        goto label29;

     label26:
        $i17 = virtualinvoke $r113.<java.util.StringTokenizer: int countTokens()>();

        if $i17 < 5 goto label28;

        $r72 = virtualinvoke $r113.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z29 = virtualinvoke $r72.<java.lang.String: boolean equals(java.lang.Object)>("DCC");

        if $z29 == 0 goto label28;

        $r73 = r1.<org.pircbotx.PircBotX: org.pircbotx.DccManager dccManager>;

        $z30 = virtualinvoke $r73.<org.pircbotx.DccManager: boolean processRequest(org.pircbotx.User,java.lang.String)>($r14, $r68);

        if $z30 != 0 goto label27;

        $r74 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r119 = new org.pircbotx.hooks.events.UnknownEvent;

        specialinvoke $r119.<org.pircbotx.hooks.events.UnknownEvent: void <init>(org.pircbotx.PircBotX,java.lang.String)>(r1, r0);

        interfaceinvoke $r74.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r119);

     label27:
        goto label29;

     label28:
        $r70 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r120 = new org.pircbotx.hooks.events.UnknownEvent;

        specialinvoke $r120.<org.pircbotx.hooks.events.UnknownEvent: void <init>(org.pircbotx.PircBotX,java.lang.String)>(r1, r0);

        interfaceinvoke $r70.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r120);

     label29:
        goto label50;

     label30:
        $z34 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("PRIVMSG");

        if $z34 == 0 goto label31;

        $r65 = r1.<org.pircbotx.PircBotX: java.lang.String channelPrefixes>;

        $c10 = virtualinvoke r100.<java.lang.String: char charAt(int)>(0);

        $i34 = (int) $c10;

        $i11 = virtualinvoke $r65.<java.lang.String: int indexOf(int)>($i34);

        if $i11 < 0 goto label31;

        $r66 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r121 = new org.pircbotx.hooks.events.MessageEvent;

        specialinvoke $r121.<org.pircbotx.hooks.events.MessageEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User,java.lang.String)>(r1, r104, $r14, r106);

        interfaceinvoke $r66.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r121);

        goto label50;

     label31:
        $z6 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("PRIVMSG");

        if $z6 == 0 goto label32;

        $r63 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r122 = new org.pircbotx.hooks.events.PrivateMessageEvent;

        specialinvoke $r122.<org.pircbotx.hooks.events.PrivateMessageEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.User,java.lang.String)>(r1, $r14, r106);

        interfaceinvoke $r63.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r122);

        goto label50;

     label32:
        $z7 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("JOIN");

        if $z7 == 0 goto label34;

        $r51 = r1.<org.pircbotx.PircBotX: java.lang.String nick>;

        $z22 = virtualinvoke r101.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r51);

        if $z22 == 0 goto label33;

        $r123 = new java.lang.StringBuilder;

        specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WHO ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r100);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void sendRawLine(java.lang.String)>($r58);

        $r124 = new java.lang.StringBuilder;

        specialinvoke $r124.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MODE ");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r100);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.pircbotx.PircBotX: void sendRawLine(java.lang.String)>($r62);

     label33:
        virtualinvoke $r14.<org.pircbotx.User: void setLogin(java.lang.String)>(r98);

        virtualinvoke $r14.<org.pircbotx.User: void setHostmask(java.lang.String)>(r99);

        $r52 = r1.<org.pircbotx.PircBotX: org.pircbotx.ManyToManyMap userChanInfo>;

        virtualinvoke $r52.<org.pircbotx.ManyToManyMap: boolean put(java.lang.Object,java.lang.Object)>(r104, $r14);

        $r53 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r125 = new org.pircbotx.hooks.events.JoinEvent;

        specialinvoke $r125.<org.pircbotx.hooks.events.JoinEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User)>(r1, r104, $r14);

        interfaceinvoke $r53.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r125);

        goto label50;

     label34:
        $z8 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("PART");

        if $z8 == 0 goto label37;

        $r45 = virtualinvoke r1.<org.pircbotx.PircBotX: java.lang.String getNick()>();

        $z21 = virtualinvoke r101.<java.lang.String: boolean equals(java.lang.Object)>($r45);

        if $z21 == 0 goto label35;

        $r50 = r1.<org.pircbotx.PircBotX: org.pircbotx.ManyToManyMap userChanInfo>;

        virtualinvoke $r50.<org.pircbotx.ManyToManyMap: java.util.Set deleteA(java.lang.Object)>(r104);

        goto label36;

     label35:
        $r46 = r1.<org.pircbotx.PircBotX: org.pircbotx.ManyToManyMap userChanInfo>;

        $r47 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.User getUser(java.lang.String)>(r101);

        virtualinvoke $r46.<org.pircbotx.ManyToManyMap: boolean dissociate(java.lang.Object,java.lang.Object)>(r104, $r47);

     label36:
        $r48 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r126 = new org.pircbotx.hooks.events.PartEvent;

        specialinvoke $r126.<org.pircbotx.hooks.events.PartEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User,java.lang.String)>(r1, r104, $r14, r106);

        interfaceinvoke $r48.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r126);

        goto label50;

     label37:
        $z9 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("NICK");

        if $z9 == 0 goto label39;

        r107 = r100;

        $r41 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.User getUser(java.lang.String)>(r101);

        virtualinvoke $r41.<org.pircbotx.User: void setNick(java.lang.String)>(r100);

        $r42 = virtualinvoke r1.<org.pircbotx.PircBotX: java.lang.String getNick()>();

        $z20 = virtualinvoke r101.<java.lang.String: boolean equals(java.lang.Object)>($r42);

        if $z20 == 0 goto label38;

        virtualinvoke r1.<org.pircbotx.PircBotX: void setNick(java.lang.String)>(r100);

     label38:
        $r43 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r127 = new org.pircbotx.hooks.events.NickChangeEvent;

        specialinvoke $r127.<org.pircbotx.hooks.events.NickChangeEvent: void <init>(org.pircbotx.PircBotX,java.lang.String,java.lang.String,org.pircbotx.User)>(r1, r101, r107, $r14);

        interfaceinvoke $r43.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r127);

        goto label50;

     label39:
        $z10 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("NOTICE");

        if $z10 == 0 goto label40;

        $r39 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r128 = new org.pircbotx.hooks.events.NoticeEvent;

        specialinvoke $r128.<org.pircbotx.hooks.events.NoticeEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.User,org.pircbotx.Channel,java.lang.String)>(r1, $r14, r104, r106);

        interfaceinvoke $r39.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r128);

        goto label50;

     label40:
        $z11 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("QUIT");

        if $z11 == 0 goto label42;

        $r34 = virtualinvoke $r14.<org.pircbotx.User: org.pircbotx.UserSnapshot generateSnapshot()>();

        $r35 = virtualinvoke r1.<org.pircbotx.PircBotX: java.lang.String getNick()>();

        $z19 = virtualinvoke r101.<java.lang.String: boolean equals(java.lang.Object)>($r35);

        if $z19 != 0 goto label41;

        $r38 = r1.<org.pircbotx.PircBotX: org.pircbotx.ManyToManyMap userChanInfo>;

        virtualinvoke $r38.<org.pircbotx.ManyToManyMap: java.util.Set deleteB(java.lang.Object)>($r14);

     label41:
        $r36 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r129 = new org.pircbotx.hooks.events.QuitEvent;

        specialinvoke $r129.<org.pircbotx.hooks.events.QuitEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.UserSnapshot,java.lang.String)>(r1, $r34, r106);

        interfaceinvoke $r36.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r129);

        goto label50;

     label42:
        $z12 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("KICK");

        if $z12 == 0 goto label45;

        $r25 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(1);

        $r26 = (java.lang.String) $r25;

        $r27 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.User getUser(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<org.pircbotx.User: java.lang.String getNick()>();

        $r29 = virtualinvoke r1.<org.pircbotx.PircBotX: java.lang.String getNick()>();

        $z18 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>($r29);

        if $z18 == 0 goto label43;

        $r33 = r1.<org.pircbotx.PircBotX: org.pircbotx.ManyToManyMap userChanInfo>;

        virtualinvoke $r33.<org.pircbotx.ManyToManyMap: java.util.Set deleteA(java.lang.Object)>(r104);

        goto label44;

     label43:
        $r30 = r1.<org.pircbotx.PircBotX: org.pircbotx.ManyToManyMap userChanInfo>;

        virtualinvoke $r30.<org.pircbotx.ManyToManyMap: boolean dissociate(java.lang.Object,java.lang.Object,boolean)>(r104, $r27, 1);

     label44:
        $r31 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r130 = new org.pircbotx.hooks.events.KickEvent;

        specialinvoke $r130.<org.pircbotx.hooks.events.KickEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User,org.pircbotx.User,java.lang.String)>(r1, r104, $r14, $r27, r106);

        interfaceinvoke $r31.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r130);

        goto label50;

     label45:
        $z13 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("MODE");

        if $z13 == 0 goto label47;

        $i6 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>(r100, 2);

        $i7 = virtualinvoke r100.<java.lang.String: int length()>();

        $i8 = $i6 + $i7;

        $i9 = $i8 + 1;

        $r24 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i9);

        r108 = $r24;

        $z17 = virtualinvoke $r24.<java.lang.String: boolean startsWith(java.lang.String)>(":");

        if $z17 == 0 goto label46;

        r108 = virtualinvoke $r24.<java.lang.String: java.lang.String substring(int)>(1);

     label46:
        virtualinvoke r1.<org.pircbotx.PircBotX: void processMode(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r100, r101, r98, r99, r108);

        goto label50;

     label47:
        $z14 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("TOPIC");

        if $z14 == 0 goto label48;

        $i3 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(" :");

        $i4 = $i3 + 2;

        $r21 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i4);

        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r104.<org.pircbotx.Channel: void setTopic(java.lang.String)>($r21);

        virtualinvoke r104.<org.pircbotx.Channel: void setTopicSetter(java.lang.String)>(r101);

        virtualinvoke r104.<org.pircbotx.Channel: void setTopicTimestamp(long)>($l5);

        $r22 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r131 = new org.pircbotx.hooks.events.TopicEvent;

        specialinvoke $r131.<org.pircbotx.hooks.events.TopicEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,java.lang.String,org.pircbotx.User,long,boolean)>(r1, r104, $r21, $r14, $l5, 1);

        interfaceinvoke $r22.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r131);

        goto label50;

     label48:
        $z15 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z15 == 0 goto label49;

        $r17 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r132 = new org.pircbotx.hooks.events.InviteEvent;

        specialinvoke $r132.<org.pircbotx.hooks.events.InviteEvent: void <init>(org.pircbotx.PircBotX,java.lang.String,java.lang.String)>(r1, r101, r106);

        interfaceinvoke $r17.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r132);

        $r19 = virtualinvoke $r14.<org.pircbotx.User: java.util.Set getChannels()>();

        $z16 = interfaceinvoke $r19.<java.util.Set: boolean isEmpty()>();

        if $z16 == 0 goto label50;

        $r20 = r1.<org.pircbotx.PircBotX: org.pircbotx.ManyToManyMap userChanInfo>;

        virtualinvoke $r20.<org.pircbotx.ManyToManyMap: java.util.Set deleteB(java.lang.Object)>($r14);

        goto label50;

     label49:
        $r15 = virtualinvoke r1.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r133 = new org.pircbotx.hooks.events.UnknownEvent;

        specialinvoke $r133.<org.pircbotx.hooks.events.UnknownEvent: void <init>(org.pircbotx.PircBotX,java.lang.String)>(r1, r0);

        interfaceinvoke $r15.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r133);

     label50:
        return;

        catch java.lang.NumberFormatException from label06 to label07 with label08;
    }

    protected void processServerResponse(int, java.lang.String)
    {
        org.pircbotx.ServerInfo $r3, $r57, $r58, $r63, $r65, $r67, $r76;
        org.pircbotx.hooks.events.ServerResponseEvent $r134;
        java.util.Map $r6, $r11, $r13, $r18, $r23, $r29, $r34, $r43, $r56;
        java.lang.StringBuilder $r66, $r69, $r73, $r74;
        org.pircbotx.User $r92, $r103;
        org.pircbotx.ManyToManyMap $r101;
        long $l1, $l2, $l3, $l5, l16;
        org.pircbotx.ChannelListEntry $r122;
        org.pircbotx.hooks.events.WhoisEvent $r9;
        org.pircbotx.hooks.events.WhoisEvent$WhoisEventBuilder $r8, $r16, $r21, $r26, $r32, $r37, $r45, $r49;
        int i0, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i17;
        org.pircbotx.hooks.events.ChannelInfoEvent $r115;
        org.pircbotx.Channel $r78, $r80, $r84, $r90, $r105, $r113;
        java.lang.Object $r7, $r14, $r19, $r24, $r30, $r35, $r44;
        org.pircbotx.PircBotX$ListBuilder $r116, $r118, $r123, $r124;
        org.pircbotx.hooks.events.TopicEvent $r108;
        org.pircbotx.hooks.events.MotdEvent $r62;
        org.pircbotx.PircBotX r2;
        java.util.Set $r87, $r117;
        java.lang.String r0, $r5, $r10, $r12, $r15, $r17, $r20, $r22, $r25, $r28, $r31, $r33, $r36, $r38, $r40, $r41, $r42, $r50, $r51, $r52, $r53, $r54, $r55, $r59, $r60, $r64, $r68, $r71, $r72, $r75, $r77, $r79, $r81, $r83, $r89, $r91, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r102, $r104, $r106, $r109, $r111, $r112, $r119, $r120, $r121, $r127, r130, r131, r132;
        java.lang.NumberFormatException $r126, $r128, $r129;
        org.pircbotx.hooks.managers.ListenerManager $r4, $r61, $r85, $r107, $r114, $r133;
        java.util.List $r47;
        java.lang.String[] $r1, $r27, $r39, $r46, $r48, $r70, $r82, $r88, $r110;
        java.lang.IllegalArgumentException $r125;
        org.pircbotx.hooks.events.UserListEvent $r86;

        r2 := @this: org.pircbotx.PircBotX;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label01;

        $r125 = new java.lang.IllegalArgumentException;

        specialinvoke $r125.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t process null response");

        throw $r125;

     label01:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        if i0 != 321 goto label02;

        $r124 = r2.<org.pircbotx.PircBotX: org.pircbotx.PircBotX$ListBuilder channelListBuilder>;

        virtualinvoke $r124.<org.pircbotx.PircBotX$ListBuilder: void setRunning(boolean)>(1);

        goto label33;

     label02:
        if i0 != 322 goto label07;

        $i6 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(32);

        $i7 = $i6 + 1;

        $i8 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(32, $i7);

        $i9 = $i8 + 1;

        $i10 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(32, $i9);

        $i11 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);

        $i12 = $i6 + 1;

        $r119 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i12, $i8);

        i15 = 0;

     label03:
        $i13 = $i8 + 1;

        $r120 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i13, $i10);

        i15 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r120);

     label04:
        goto label06;

     label05:
        $r129 := @caughtexception;

     label06:
        $i14 = $i11 + 1;

        $r121 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i14);

        $r123 = r2.<org.pircbotx.PircBotX: org.pircbotx.PircBotX$ListBuilder channelListBuilder>;

        $r122 = new org.pircbotx.ChannelListEntry;

        specialinvoke $r122.<org.pircbotx.ChannelListEntry: void <init>(java.lang.String,int,java.lang.String)>($r119, i15, $r121);

        virtualinvoke $r123.<org.pircbotx.PircBotX$ListBuilder: void add(java.lang.Object)>($r122);

        goto label33;

     label07:
        if i0 != 323 goto label08;

        $r114 = virtualinvoke r2.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r115 = new org.pircbotx.hooks.events.ChannelInfoEvent;

        $r116 = r2.<org.pircbotx.PircBotX: org.pircbotx.PircBotX$ListBuilder channelListBuilder>;

        $r117 = virtualinvoke $r116.<org.pircbotx.PircBotX$ListBuilder: java.util.Set finish()>();

        specialinvoke $r115.<org.pircbotx.hooks.events.ChannelInfoEvent: void <init>(org.pircbotx.PircBotX,java.util.Set)>(r2, $r117);

        interfaceinvoke $r114.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r115);

        $r118 = r2.<org.pircbotx.PircBotX: org.pircbotx.PircBotX$ListBuilder channelListBuilder>;

        virtualinvoke $r118.<org.pircbotx.PircBotX$ListBuilder: void setRunning(boolean)>(0);

        goto label33;

     label08:
        if i0 != 332 goto label09;

        $r110 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(" ", 3);

        r130 = $r110[1];

        $r111 = $r110[2];

        $r112 = virtualinvoke $r111.<java.lang.String: java.lang.String substring(int)>(1);

        $r113 = virtualinvoke r2.<org.pircbotx.PircBotX: org.pircbotx.Channel getChannel(java.lang.String)>(r130);

        virtualinvoke $r113.<org.pircbotx.Channel: void setTopic(java.lang.String)>($r112);

        goto label33;

     label09:
        if i0 != 333 goto label14;

        r131 = $r1[1];

        $r102 = $r1[2];

        $r103 = virtualinvoke r2.<org.pircbotx.PircBotX: org.pircbotx.User getUser(java.lang.String)>($r102);

        l16 = 0L;

     label10:
        $r104 = $r1[3];

        $l5 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r104);

        l16 = $l5 * 1000L;

     label11:
        goto label13;

     label12:
        $r128 := @caughtexception;

     label13:
        $r105 = virtualinvoke r2.<org.pircbotx.PircBotX: org.pircbotx.Channel getChannel(java.lang.String)>(r131);

        virtualinvoke $r105.<org.pircbotx.Channel: void setTopicTimestamp(long)>(l16);

        $r106 = virtualinvoke $r103.<org.pircbotx.User: java.lang.String getNick()>();

        virtualinvoke $r105.<org.pircbotx.Channel: void setTopicSetter(java.lang.String)>($r106);

        $r107 = virtualinvoke r2.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r108 = new org.pircbotx.hooks.events.TopicEvent;

        $r109 = virtualinvoke $r105.<org.pircbotx.Channel: java.lang.String getTopic()>();

        specialinvoke $r108.<org.pircbotx.hooks.events.TopicEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,java.lang.String,org.pircbotx.User,long,boolean)>(r2, $r105, $r109, $r103, l16, 0);

        interfaceinvoke $r107.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r108);

        goto label33;

     label14:
        if i0 != 352 goto label15;

        $r88 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(" ", 9);

        $r89 = $r88[1];

        $r90 = virtualinvoke r2.<org.pircbotx.PircBotX: org.pircbotx.Channel getChannel(java.lang.String)>($r89);

        $r91 = $r88[5];

        $r92 = virtualinvoke r2.<org.pircbotx.PircBotX: org.pircbotx.User getUser(java.lang.String)>($r91);

        $r93 = $r88[2];

        virtualinvoke $r92.<org.pircbotx.User: void setLogin(java.lang.String)>($r93);

        $r94 = $r88[3];

        virtualinvoke $r92.<org.pircbotx.User: void setHostmask(java.lang.String)>($r94);

        $r95 = $r88[4];

        virtualinvoke $r92.<org.pircbotx.User: void setServer(java.lang.String)>($r95);

        $r96 = $r88[5];

        virtualinvoke $r92.<org.pircbotx.User: void setNick(java.lang.String)>($r96);

        $r97 = $r88[6];

        virtualinvoke $r92.<org.pircbotx.User: void parseStatus(org.pircbotx.Channel,java.lang.String)>($r90, $r97);

        $r98 = $r88[7];

        $r99 = virtualinvoke $r98.<java.lang.String: java.lang.String substring(int)>(1);

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r99);

        virtualinvoke $r92.<org.pircbotx.User: void setHops(int)>($i4);

        $r100 = $r88[8];

        virtualinvoke $r92.<org.pircbotx.User: void setRealName(java.lang.String)>($r100);

        $r101 = r2.<org.pircbotx.PircBotX: org.pircbotx.ManyToManyMap userChanInfo>;

        virtualinvoke $r101.<org.pircbotx.ManyToManyMap: boolean put(java.lang.Object,java.lang.Object)>($r90, $r92);

        goto label33;

     label15:
        if i0 != 315 goto label16;

        $r82 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r83 = $r82[1];

        $r84 = virtualinvoke r2.<org.pircbotx.PircBotX: org.pircbotx.Channel getChannel(java.lang.String)>($r83);

        $r85 = virtualinvoke r2.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r86 = new org.pircbotx.hooks.events.UserListEvent;

        $r87 = virtualinvoke r2.<org.pircbotx.PircBotX: java.util.Set getUsers(org.pircbotx.Channel)>($r84);

        specialinvoke $r86.<org.pircbotx.hooks.events.UserListEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,java.util.Set)>(r2, $r84, $r87);

        interfaceinvoke $r85.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r86);

        goto label33;

     label16:
        if i0 != 324 goto label17;

        $r79 = $r1[1];

        $r80 = virtualinvoke r2.<org.pircbotx.PircBotX: org.pircbotx.Channel getChannel(java.lang.String)>($r79);

        $r81 = $r1[2];

        virtualinvoke $r80.<org.pircbotx.Channel: void setMode(java.lang.String)>($r81);

        goto label33;

     label17:
        if i0 != 329 goto label22;

     label18:
        $r77 = $r1[2];

        i17 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r77);

        r132 = $r1[1];

     label19:
        goto label21;

     label20:
        $r126 := @caughtexception;

        $r127 = $r1[1];

        i17 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r127);

        r132 = $r1[0];

     label21:
        $r78 = virtualinvoke r2.<org.pircbotx.PircBotX: org.pircbotx.Channel getChannel(java.lang.String)>(r132);

        $l3 = (long) i17;

        virtualinvoke $r78.<org.pircbotx.Channel: void setCreateTimestamp(long)>($l3);

        goto label33;

     label22:
        if i0 != 375 goto label23;

        $r76 = virtualinvoke r2.<org.pircbotx.PircBotX: org.pircbotx.ServerInfo getServerInfo()>();

        virtualinvoke $r76.<org.pircbotx.ServerInfo: void setMotd(java.lang.String)>("");

        goto label33;

     label23:
        if i0 != 372 goto label24;

        $r65 = virtualinvoke r2.<org.pircbotx.PircBotX: org.pircbotx.ServerInfo getServerInfo()>();

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke r2.<org.pircbotx.PircBotX: org.pircbotx.ServerInfo getServerInfo()>();

        $r68 = virtualinvoke $r67.<org.pircbotx.ServerInfo: java.lang.String getMotd()>();

        $r69 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        $r70 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(" ", 3);

        $r71 = $r70[2];

        $r72 = virtualinvoke $r71.<java.lang.String: java.lang.String trim()>();

        $r73 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r65.<org.pircbotx.ServerInfo: void setMotd(java.lang.String)>($r75);

        goto label33;

     label24:
        if i0 != 376 goto label25;

        $r57 = virtualinvoke r2.<org.pircbotx.PircBotX: org.pircbotx.ServerInfo getServerInfo()>();

        $r58 = virtualinvoke r2.<org.pircbotx.PircBotX: org.pircbotx.ServerInfo getServerInfo()>();

        $r59 = virtualinvoke $r58.<org.pircbotx.ServerInfo: java.lang.String getMotd()>();

        $r60 = virtualinvoke $r59.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r57.<org.pircbotx.ServerInfo: void setMotd(java.lang.String)>($r60);

        $r61 = virtualinvoke r2.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r62 = new org.pircbotx.hooks.events.MotdEvent;

        $r63 = virtualinvoke r2.<org.pircbotx.PircBotX: org.pircbotx.ServerInfo getServerInfo()>();

        $r64 = virtualinvoke $r63.<org.pircbotx.ServerInfo: java.lang.String getMotd()>();

        specialinvoke $r62.<org.pircbotx.hooks.events.MotdEvent: void <init>(org.pircbotx.PircBotX,java.lang.String)>(r2, $r64);

        interfaceinvoke $r61.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r62);

        goto label33;

     label25:
        if i0 == 4 goto label26;

        if i0 != 5 goto label27;

     label26:
        $r3 = virtualinvoke r2.<org.pircbotx.PircBotX: org.pircbotx.ServerInfo getServerInfo()>();

        virtualinvoke $r3.<org.pircbotx.ServerInfo: void parse(int,java.lang.String)>(i0, r0);

        goto label33;

     label27:
        if i0 != 311 goto label28;

        $r48 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(" ", 6);

        $r49 = new org.pircbotx.hooks.events.WhoisEvent$WhoisEventBuilder;

        specialinvoke $r49.<org.pircbotx.hooks.events.WhoisEvent$WhoisEventBuilder: void <init>()>();

        $r50 = $r48[1];

        virtualinvoke $r49.<org.pircbotx.hooks.events.WhoisEvent$WhoisEventBuilder: void setNick(java.lang.String)>($r50);

        $r51 = $r48[2];

        virtualinvoke $r49.<org.pircbotx.hooks.events.WhoisEvent$WhoisEventBuilder: void setLogin(java.lang.String)>($r51);

        $r52 = $r48[3];

        virtualinvoke $r49.<org.pircbotx.hooks.events.WhoisEvent$WhoisEventBuilder: void setHostname(java.lang.String)>($r52);

        $r53 = $r48[5];

        $r54 = virtualinvoke $r53.<java.lang.String: java.lang.String substring(int)>(1);

        virtualinvoke $r49.<org.pircbotx.hooks.events.WhoisEvent$WhoisEventBuilder: void setRealname(java.lang.String)>($r54);

        $r56 = r2.<org.pircbotx.PircBotX: java.util.Map whoisBuilder>;

        $r55 = $r1[1];

        interfaceinvoke $r56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r55, $r49);

        goto label33;

     label28:
        if i0 != 319 goto label29;

        $r39 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(" ", 3);

        $r40 = $r39[2];

        $r41 = virtualinvoke $r40.<java.lang.String: java.lang.String substring(int)>(1);

        $r43 = r2.<org.pircbotx.PircBotX: java.util.Map whoisBuilder>;

        $r42 = $r1[1];

        $r44 = interfaceinvoke $r43.<java.util.Map: java.lang.Object get(java.lang.Object)>($r42);

        $r45 = (org.pircbotx.hooks.events.WhoisEvent$WhoisEventBuilder) $r44;

        $r46 = virtualinvoke $r41.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r47 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r46);

        virtualinvoke $r45.<org.pircbotx.hooks.events.WhoisEvent$WhoisEventBuilder: void setChannels(java.util.List)>($r47);

        goto label33;

     label29:
        if i0 != 312 goto label30;

        $r27 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(" ", 4);

        $r29 = r2.<org.pircbotx.PircBotX: java.util.Map whoisBuilder>;

        $r28 = $r1[1];

        $r30 = interfaceinvoke $r29.<java.util.Map: java.lang.Object get(java.lang.Object)>($r28);

        $r32 = (org.pircbotx.hooks.events.WhoisEvent$WhoisEventBuilder) $r30;

        $r31 = $r27[2];

        virtualinvoke $r32.<org.pircbotx.hooks.events.WhoisEvent$WhoisEventBuilder: void setServer(java.lang.String)>($r31);

        $r34 = r2.<org.pircbotx.PircBotX: java.util.Map whoisBuilder>;

        $r33 = $r1[1];

        $r35 = interfaceinvoke $r34.<java.util.Map: java.lang.Object get(java.lang.Object)>($r33);

        $r37 = (org.pircbotx.hooks.events.WhoisEvent$WhoisEventBuilder) $r35;

        $r36 = $r27[3];

        $r38 = virtualinvoke $r36.<java.lang.String: java.lang.String substring(int)>(1);

        virtualinvoke $r37.<org.pircbotx.hooks.events.WhoisEvent$WhoisEventBuilder: void setServerInfo(java.lang.String)>($r38);

        goto label33;

     label30:
        if i0 != 317 goto label31;

        $r18 = r2.<org.pircbotx.PircBotX: java.util.Map whoisBuilder>;

        $r17 = $r1[1];

        $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17);

        $r21 = (org.pircbotx.hooks.events.WhoisEvent$WhoisEventBuilder) $r19;

        $r20 = $r1[2];

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r20);

        virtualinvoke $r21.<org.pircbotx.hooks.events.WhoisEvent$WhoisEventBuilder: void setIdleSeconds(long)>($l1);

        $r23 = r2.<org.pircbotx.PircBotX: java.util.Map whoisBuilder>;

        $r22 = $r1[1];

        $r24 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>($r22);

        $r26 = (org.pircbotx.hooks.events.WhoisEvent$WhoisEventBuilder) $r24;

        $r25 = $r1[3];

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r25);

        virtualinvoke $r26.<org.pircbotx.hooks.events.WhoisEvent$WhoisEventBuilder: void setSignOnTime(long)>($l2);

        goto label33;

     label31:
        if i0 != 330 goto label32;

        $r13 = r2.<org.pircbotx.PircBotX: java.util.Map whoisBuilder>;

        $r12 = $r1[1];

        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r12);

        $r16 = (org.pircbotx.hooks.events.WhoisEvent$WhoisEventBuilder) $r14;

        $r15 = $r1[2];

        virtualinvoke $r16.<org.pircbotx.hooks.events.WhoisEvent$WhoisEventBuilder: void setRegisteredAs(java.lang.String)>($r15);

        goto label33;

     label32:
        if i0 != 318 goto label33;

        $r4 = virtualinvoke r2.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r6 = r2.<org.pircbotx.PircBotX: java.util.Map whoisBuilder>;

        $r5 = $r1[1];

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r8 = (org.pircbotx.hooks.events.WhoisEvent$WhoisEventBuilder) $r7;

        $r9 = virtualinvoke $r8.<org.pircbotx.hooks.events.WhoisEvent$WhoisEventBuilder: org.pircbotx.hooks.events.WhoisEvent generateEvent(org.pircbotx.PircBotX)>(r2);

        interfaceinvoke $r4.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r9);

        $r11 = r2.<org.pircbotx.PircBotX: java.util.Map whoisBuilder>;

        $r10 = $r1[1];

        interfaceinvoke $r11.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r10);

     label33:
        $r133 = virtualinvoke r2.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r134 = new org.pircbotx.hooks.events.ServerResponseEvent;

        specialinvoke $r134.<org.pircbotx.hooks.events.ServerResponseEvent: void <init>(org.pircbotx.PircBotX,int,java.lang.String)>(r2, i0, r0);

        interfaceinvoke $r133.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r134);

        return;

        catch java.lang.NumberFormatException from label03 to label04 with label05;
        catch java.lang.NumberFormatException from label10 to label11 with label12;
        catch java.lang.NumberFormatException from label18 to label19 with label20;
    }

    protected void processMode(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        org.pircbotx.hooks.events.SetTopicProtectionEvent $r117;
        org.pircbotx.User $r2, $r7, $r57, $r65, $r73, $r81, $r89;
        org.pircbotx.hooks.events.RemoveChannelLimitEvent $r114;
        java.util.StringTokenizer $r100;
        org.pircbotx.hooks.events.SetModeratedEvent $r123;
        org.pircbotx.hooks.events.RemoveNoExternalMessagesEvent $r120;
        org.pircbotx.hooks.events.RemoveChannelKeyEvent $r112;
        org.pircbotx.hooks.events.SetSecretEvent $r127;
        org.pircbotx.hooks.events.SetChannelBanEvent $r115;
        int $i1, $i2, $i3, $i5, $i6, i7, i8, i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        org.pircbotx.hooks.events.SetPrivateEvent $r125;
        org.pircbotx.hooks.events.VoiceEvent $r103, $r104;
        org.pircbotx.Channel $r9;
        org.pircbotx.hooks.events.OwnerEvent $r109, $r110;
        org.pircbotx.hooks.events.RemoveChannelBanEvent $r116;
        org.pircbotx.PircBotX r0;
        org.pircbotx.hooks.events.SuperOpEvent $r107, $r108;
        java.util.Set $r58, $r61, $r66, $r69, $r74, $r77, $r82, $r85, $r90, $r93;
        org.pircbotx.hooks.events.RemoveSecretEvent $r128;
        org.pircbotx.hooks.events.OpEvent $r101, $r102;
        java.lang.String r1, r3, $r4, r8, $r12, $r15, $r42, $r45, $r50, $r55, $r56, $r64, $r72, $r80, $r88, $r96, r97, r98, $r99;
        org.pircbotx.hooks.events.RemoveModeratedEvent $r124;
        org.pircbotx.hooks.events.RemoveInviteOnlyEvent $r122;
        org.pircbotx.hooks.events.UserModeEvent $r130;
        org.pircbotx.hooks.managers.ListenerManager $r5, $r13, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r43, $r46, $r48, $r51, $r53, $r59, $r62, $r67, $r70, $r75, $r78, $r83, $r86, $r91, $r94;
        org.pircbotx.hooks.events.SetNoExternalMessagesEvent $r119;
        org.pircbotx.hooks.events.SetInviteOnlyEvent $r121;
        boolean $z0;
        org.pircbotx.hooks.events.HalfOpEvent $r105, $r106;
        org.pircbotx.hooks.events.ModeEvent $r129;
        org.pircbotx.hooks.events.SetChannelLimitEvent $r113;
        org.pircbotx.hooks.events.RemoveTopicProtectionEvent $r118;
        java.lang.String[] r11;
        org.pircbotx.hooks.events.SetChannelKeyEvent $r111;
        org.pircbotx.hooks.events.RemovePrivateEvent $r126;
        char $c0, $c4;

        r0 := @this: org.pircbotx.PircBotX;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r97 := @parameter2: java.lang.String;

        r98 := @parameter3: java.lang.String;

        r8 := @parameter4: java.lang.String;

        $r2 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.User getUser(java.lang.String)>(r1);

        $r4 = r0.<org.pircbotx.PircBotX: java.lang.String channelPrefixes>;

        $c0 = virtualinvoke r3.<java.lang.String: char charAt(int)>(0);

        $i11 = (int) $c0;

        $i1 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>($i11);

        if $i1 < 0 goto label44;

        $r9 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.Channel getChannel(java.lang.String)>(r3);

        virtualinvoke $r9.<org.pircbotx.Channel: void parseMode(java.lang.String)>(r8);

        $r100 = new java.util.StringTokenizer;

        specialinvoke $r100.<java.util.StringTokenizer: void <init>(java.lang.String)>(r8);

        $i2 = virtualinvoke $r100.<java.util.StringTokenizer: int countTokens()>();

        r11 = newarray (java.lang.String)[$i2];

        i7 = 0;

     label01:
        $z0 = virtualinvoke $r100.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label02;

        $r96 = virtualinvoke $r100.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r11[i7] = $r96;

        i7 = i7 + 1;

        goto label01;

     label02:
        i8 = 32;

        i9 = 1;

        i10 = 0;

     label03:
        $r12 = r11[0];

        $i3 = virtualinvoke $r12.<java.lang.String: int length()>();

        if i10 >= $i3 goto label43;

        $r15 = r11[0];

        $c4 = virtualinvoke $r15.<java.lang.String: char charAt(int)>(i10);

        $i12 = (int) $c4;

        if $i12 == 43 goto label04;

        $i13 = (int) $c4;

        if $i13 != 45 goto label05;

     label04:
        i8 = $c4;

        goto label42;

     label05:
        $i14 = (int) $c4;

        if $i14 != 111 goto label08;

        $r88 = r11[i9];

        $r89 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.User getUser(java.lang.String)>($r88);

        if i8 != 43 goto label06;

        $r93 = $r9.<org.pircbotx.Channel: java.util.Set ops>;

        interfaceinvoke $r93.<java.util.Set: boolean add(java.lang.Object)>($r89);

        $r94 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r101 = new org.pircbotx.hooks.events.OpEvent;

        specialinvoke $r101.<org.pircbotx.hooks.events.OpEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User,org.pircbotx.User,boolean)>(r0, $r9, $r2, $r89, 1);

        interfaceinvoke $r94.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r101);

        goto label07;

     label06:
        $r90 = $r9.<org.pircbotx.Channel: java.util.Set ops>;

        interfaceinvoke $r90.<java.util.Set: boolean remove(java.lang.Object)>($r89);

        $r91 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r102 = new org.pircbotx.hooks.events.OpEvent;

        specialinvoke $r102.<org.pircbotx.hooks.events.OpEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User,org.pircbotx.User,boolean)>(r0, $r9, $r2, $r89, 0);

        interfaceinvoke $r91.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r102);

     label07:
        i9 = i9 + 1;

        goto label42;

     label08:
        $i15 = (int) $c4;

        if $i15 != 118 goto label11;

        $r80 = r11[i9];

        $r81 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.User getUser(java.lang.String)>($r80);

        if i8 != 43 goto label09;

        $r85 = $r9.<org.pircbotx.Channel: java.util.Set voices>;

        interfaceinvoke $r85.<java.util.Set: boolean add(java.lang.Object)>($r81);

        $r86 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r103 = new org.pircbotx.hooks.events.VoiceEvent;

        specialinvoke $r103.<org.pircbotx.hooks.events.VoiceEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User,org.pircbotx.User,boolean)>(r0, $r9, $r2, $r81, 1);

        interfaceinvoke $r86.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r103);

        goto label10;

     label09:
        $r82 = $r9.<org.pircbotx.Channel: java.util.Set voices>;

        interfaceinvoke $r82.<java.util.Set: boolean remove(java.lang.Object)>($r81);

        $r83 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r104 = new org.pircbotx.hooks.events.VoiceEvent;

        specialinvoke $r104.<org.pircbotx.hooks.events.VoiceEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User,org.pircbotx.User,boolean)>(r0, $r9, $r2, $r81, 0);

        interfaceinvoke $r83.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r104);

     label10:
        i9 = i9 + 1;

        goto label42;

     label11:
        $i16 = (int) $c4;

        if $i16 != 104 goto label14;

        $r72 = r11[i9];

        $r73 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.User getUser(java.lang.String)>($r72);

        if i8 != 43 goto label12;

        $r77 = $r9.<org.pircbotx.Channel: java.util.Set halfOps>;

        interfaceinvoke $r77.<java.util.Set: boolean add(java.lang.Object)>($r73);

        $r78 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r105 = new org.pircbotx.hooks.events.HalfOpEvent;

        specialinvoke $r105.<org.pircbotx.hooks.events.HalfOpEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User,org.pircbotx.User,boolean)>(r0, $r9, $r2, $r73, 1);

        interfaceinvoke $r78.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r105);

        goto label13;

     label12:
        $r74 = $r9.<org.pircbotx.Channel: java.util.Set halfOps>;

        interfaceinvoke $r74.<java.util.Set: boolean remove(java.lang.Object)>($r73);

        $r75 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r106 = new org.pircbotx.hooks.events.HalfOpEvent;

        specialinvoke $r106.<org.pircbotx.hooks.events.HalfOpEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User,org.pircbotx.User,boolean)>(r0, $r9, $r2, $r73, 0);

        interfaceinvoke $r75.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r106);

     label13:
        i9 = i9 + 1;

        goto label42;

     label14:
        $i17 = (int) $c4;

        if $i17 != 97 goto label17;

        $r64 = r11[i9];

        $r65 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.User getUser(java.lang.String)>($r64);

        if i8 != 43 goto label15;

        $r69 = $r9.<org.pircbotx.Channel: java.util.Set superOps>;

        interfaceinvoke $r69.<java.util.Set: boolean add(java.lang.Object)>($r65);

        $r70 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r107 = new org.pircbotx.hooks.events.SuperOpEvent;

        specialinvoke $r107.<org.pircbotx.hooks.events.SuperOpEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User,org.pircbotx.User,boolean)>(r0, $r9, $r2, $r65, 1);

        interfaceinvoke $r70.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r107);

        goto label16;

     label15:
        $r66 = $r9.<org.pircbotx.Channel: java.util.Set superOps>;

        interfaceinvoke $r66.<java.util.Set: boolean remove(java.lang.Object)>($r65);

        $r67 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r108 = new org.pircbotx.hooks.events.SuperOpEvent;

        specialinvoke $r108.<org.pircbotx.hooks.events.SuperOpEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User,org.pircbotx.User,boolean)>(r0, $r9, $r2, $r65, 0);

        interfaceinvoke $r67.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r108);

     label16:
        i9 = i9 + 1;

        goto label42;

     label17:
        $i18 = (int) $c4;

        if $i18 != 113 goto label20;

        $r56 = r11[i9];

        $r57 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.User getUser(java.lang.String)>($r56);

        if i8 != 43 goto label18;

        $r61 = $r9.<org.pircbotx.Channel: java.util.Set owners>;

        interfaceinvoke $r61.<java.util.Set: boolean add(java.lang.Object)>($r57);

        $r62 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r109 = new org.pircbotx.hooks.events.OwnerEvent;

        specialinvoke $r109.<org.pircbotx.hooks.events.OwnerEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User,org.pircbotx.User,boolean)>(r0, $r9, $r2, $r57, 1);

        interfaceinvoke $r62.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r109);

        goto label19;

     label18:
        $r58 = $r9.<org.pircbotx.Channel: java.util.Set owners>;

        interfaceinvoke $r58.<java.util.Set: boolean remove(java.lang.Object)>($r57);

        $r59 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r110 = new org.pircbotx.hooks.events.OwnerEvent;

        specialinvoke $r110.<org.pircbotx.hooks.events.OwnerEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User,org.pircbotx.User,boolean)>(r0, $r9, $r2, $r57, 0);

        interfaceinvoke $r59.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r110);

     label19:
        i9 = i9 + 1;

        goto label42;

     label20:
        $i19 = (int) $c4;

        if $i19 != 107 goto label25;

        if i8 != 43 goto label21;

        $r53 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r111 = new org.pircbotx.hooks.events.SetChannelKeyEvent;

        $r55 = r11[i9];

        specialinvoke $r111.<org.pircbotx.hooks.events.SetChannelKeyEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User,java.lang.String)>(r0, $r9, $r2, $r55);

        interfaceinvoke $r53.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r111);

        goto label24;

     label21:
        $r51 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r112 = new org.pircbotx.hooks.events.RemoveChannelKeyEvent;

        $i6 = lengthof r11;

        if i9 >= $i6 goto label22;

        $r99 = r11[i9];

        goto label23;

     label22:
        $r99 = null;

     label23:
        specialinvoke $r112.<org.pircbotx.hooks.events.RemoveChannelKeyEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User,java.lang.String)>(r0, $r9, $r2, $r99);

        interfaceinvoke $r51.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r112);

     label24:
        i9 = i9 + 1;

        goto label42;

     label25:
        $i20 = (int) $c4;

        if $i20 != 108 goto label27;

        if i8 != 43 goto label26;

        $r48 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r113 = new org.pircbotx.hooks.events.SetChannelLimitEvent;

        $r50 = r11[i9];

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r50);

        specialinvoke $r113.<org.pircbotx.hooks.events.SetChannelLimitEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User,int)>(r0, $r9, $r2, $i5);

        interfaceinvoke $r48.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r113);

        i9 = i9 + 1;

        goto label42;

     label26:
        $r46 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r114 = new org.pircbotx.hooks.events.RemoveChannelLimitEvent;

        specialinvoke $r114.<org.pircbotx.hooks.events.RemoveChannelLimitEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User)>(r0, $r9, $r2);

        interfaceinvoke $r46.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r114);

        goto label42;

     label27:
        $i21 = (int) $c4;

        if $i21 != 98 goto label30;

        if i8 != 43 goto label28;

        $r43 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r115 = new org.pircbotx.hooks.events.SetChannelBanEvent;

        $r45 = r11[i9];

        specialinvoke $r115.<org.pircbotx.hooks.events.SetChannelBanEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User,java.lang.String)>(r0, $r9, $r2, $r45);

        interfaceinvoke $r43.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r115);

        goto label29;

     label28:
        $r40 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r116 = new org.pircbotx.hooks.events.RemoveChannelBanEvent;

        $r42 = r11[i9];

        specialinvoke $r116.<org.pircbotx.hooks.events.RemoveChannelBanEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User,java.lang.String)>(r0, $r9, $r2, $r42);

        interfaceinvoke $r40.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r116);

     label29:
        i9 = i9 + 1;

        goto label42;

     label30:
        $i22 = (int) $c4;

        if $i22 != 116 goto label32;

        if i8 != 43 goto label31;

        $r38 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r117 = new org.pircbotx.hooks.events.SetTopicProtectionEvent;

        specialinvoke $r117.<org.pircbotx.hooks.events.SetTopicProtectionEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User)>(r0, $r9, $r2);

        interfaceinvoke $r38.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r117);

        goto label42;

     label31:
        $r36 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r118 = new org.pircbotx.hooks.events.RemoveTopicProtectionEvent;

        specialinvoke $r118.<org.pircbotx.hooks.events.RemoveTopicProtectionEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User)>(r0, $r9, $r2);

        interfaceinvoke $r36.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r118);

        goto label42;

     label32:
        $i23 = (int) $c4;

        if $i23 != 110 goto label34;

        if i8 != 43 goto label33;

        $r34 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r119 = new org.pircbotx.hooks.events.SetNoExternalMessagesEvent;

        specialinvoke $r119.<org.pircbotx.hooks.events.SetNoExternalMessagesEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User)>(r0, $r9, $r2);

        interfaceinvoke $r34.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r119);

        goto label42;

     label33:
        $r32 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r120 = new org.pircbotx.hooks.events.RemoveNoExternalMessagesEvent;

        specialinvoke $r120.<org.pircbotx.hooks.events.RemoveNoExternalMessagesEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User)>(r0, $r9, $r2);

        interfaceinvoke $r32.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r120);

        goto label42;

     label34:
        $i24 = (int) $c4;

        if $i24 != 105 goto label36;

        if i8 != 43 goto label35;

        $r30 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r121 = new org.pircbotx.hooks.events.SetInviteOnlyEvent;

        specialinvoke $r121.<org.pircbotx.hooks.events.SetInviteOnlyEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User)>(r0, $r9, $r2);

        interfaceinvoke $r30.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r121);

        goto label42;

     label35:
        $r28 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r122 = new org.pircbotx.hooks.events.RemoveInviteOnlyEvent;

        specialinvoke $r122.<org.pircbotx.hooks.events.RemoveInviteOnlyEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User)>(r0, $r9, $r2);

        interfaceinvoke $r28.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r122);

        goto label42;

     label36:
        $i25 = (int) $c4;

        if $i25 != 109 goto label38;

        if i8 != 43 goto label37;

        $r26 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r123 = new org.pircbotx.hooks.events.SetModeratedEvent;

        specialinvoke $r123.<org.pircbotx.hooks.events.SetModeratedEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User)>(r0, $r9, $r2);

        interfaceinvoke $r26.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r123);

        goto label42;

     label37:
        $r24 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r124 = new org.pircbotx.hooks.events.RemoveModeratedEvent;

        specialinvoke $r124.<org.pircbotx.hooks.events.RemoveModeratedEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User)>(r0, $r9, $r2);

        interfaceinvoke $r24.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r124);

        goto label42;

     label38:
        $i26 = (int) $c4;

        if $i26 != 112 goto label40;

        if i8 != 43 goto label39;

        $r22 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r125 = new org.pircbotx.hooks.events.SetPrivateEvent;

        specialinvoke $r125.<org.pircbotx.hooks.events.SetPrivateEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User)>(r0, $r9, $r2);

        interfaceinvoke $r22.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r125);

        goto label42;

     label39:
        $r20 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r126 = new org.pircbotx.hooks.events.RemovePrivateEvent;

        specialinvoke $r126.<org.pircbotx.hooks.events.RemovePrivateEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User)>(r0, $r9, $r2);

        interfaceinvoke $r20.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r126);

        goto label42;

     label40:
        $i27 = (int) $c4;

        if $i27 != 115 goto label42;

        if i8 != 43 goto label41;

        $r18 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r127 = new org.pircbotx.hooks.events.SetSecretEvent;

        specialinvoke $r127.<org.pircbotx.hooks.events.SetSecretEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User)>(r0, $r9, $r2);

        interfaceinvoke $r18.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r127);

        goto label42;

     label41:
        $r16 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r128 = new org.pircbotx.hooks.events.RemoveSecretEvent;

        specialinvoke $r128.<org.pircbotx.hooks.events.RemoveSecretEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User)>(r0, $r9, $r2);

        interfaceinvoke $r16.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r128);

     label42:
        i10 = i10 + 1;

        goto label03;

     label43:
        $r13 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r129 = new org.pircbotx.hooks.events.ModeEvent;

        specialinvoke $r129.<org.pircbotx.hooks.events.ModeEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.Channel,org.pircbotx.User,java.lang.String)>(r0, $r9, $r2, r8);

        interfaceinvoke $r13.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r129);

        goto label45;

     label44:
        $r5 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r130 = new org.pircbotx.hooks.events.UserModeEvent;

        $r7 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.User getUser(java.lang.String)>(r3);

        specialinvoke $r130.<org.pircbotx.hooks.events.UserModeEvent: void <init>(org.pircbotx.PircBotX,org.pircbotx.User,org.pircbotx.User,java.lang.String)>(r0, $r7, $r2, r8);

        interfaceinvoke $r5.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r130);

     label45:
        return;
    }

    protected void processDcc(org.pircbotx.User, java.lang.String)
    {
        java.lang.String r2;
        org.pircbotx.PircBotX r0;
        org.pircbotx.User r1;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: org.pircbotx.User;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void setVerbose(boolean)
    {
        org.pircbotx.PircBotX r0;
        boolean z0;

        r0 := @this: org.pircbotx.PircBotX;

        z0 := @parameter0: boolean;

        r0.<org.pircbotx.PircBotX: boolean verbose> = z0;

        return;
    }

    public void setName(java.lang.String)
    {
        java.lang.String r0;
        org.pircbotx.PircBotX r1;
        java.lang.IllegalArgumentException $r2;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t set name to null");

        throw $r2;

     label1:
        r1.<org.pircbotx.PircBotX: java.lang.String name> = r0;

        return;
    }

    protected void setNick(java.lang.String)
    {
        java.lang.Throwable $r8;
        java.util.Map $r1, $r5, $r7;
        java.lang.String $r2, $r4, r6;
        org.pircbotx.PircBotX r0;
        org.pircbotx.User $r3;

        r0 := @this: org.pircbotx.PircBotX;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<org.pircbotx.PircBotX: java.util.Map userNickMap>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.pircbotx.PircBotX: java.lang.String nick>;

        $r3 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.User getUser(java.lang.String)>($r2);

        $r5 = r0.<org.pircbotx.PircBotX: java.util.Map userNickMap>;

        $r4 = r0.<org.pircbotx.PircBotX: java.lang.String nick>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r4);

        $r7 = r0.<org.pircbotx.PircBotX: java.util.Map userNickMap>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r3);

        r0.<org.pircbotx.PircBotX: java.lang.String nick> = r6;

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setLogin(java.lang.String)
    {
        java.lang.String r0;
        org.pircbotx.PircBotX r1;
        java.lang.IllegalArgumentException $r2;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t login to null");

        throw $r2;

     label1:
        r1.<org.pircbotx.PircBotX: java.lang.String login> = r0;

        return;
    }

    public void setVersion(java.lang.String)
    {
        java.lang.String r0;
        org.pircbotx.PircBotX r1;
        java.lang.IllegalArgumentException $r2;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t version to null");

        throw $r2;

     label1:
        r1.<org.pircbotx.PircBotX: java.lang.String version> = r0;

        return;
    }

    public void setFinger(java.lang.String)
    {
        java.lang.String r0;
        org.pircbotx.PircBotX r1;
        java.lang.IllegalArgumentException $r2;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t finger to null");

        throw $r2;

     label1:
        r1.<org.pircbotx.PircBotX: java.lang.String finger> = r0;

        return;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = r0.<org.pircbotx.PircBotX: java.lang.String name>;

        return $r1;
    }

    public java.lang.String getNick()
    {
        java.lang.String $r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = r0.<org.pircbotx.PircBotX: java.lang.String nick>;

        return $r1;
    }

    public java.lang.String getLogin()
    {
        java.lang.String $r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = r0.<org.pircbotx.PircBotX: java.lang.String login>;

        return $r1;
    }

    public java.lang.String getVersion()
    {
        java.lang.String $r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = r0.<org.pircbotx.PircBotX: java.lang.String version>;

        return $r1;
    }

    public java.lang.String getFinger()
    {
        java.lang.String $r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = r0.<org.pircbotx.PircBotX: java.lang.String finger>;

        return $r1;
    }

    public boolean isConnected()
    {
        org.pircbotx.InputThread $r1, $r2;
        org.pircbotx.PircBotX r0;
        boolean $z0, $z1;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = r0.<org.pircbotx.PircBotX: org.pircbotx.InputThread inputThread>;

        if $r1 == null goto label1;

        $r2 = r0.<org.pircbotx.PircBotX: org.pircbotx.InputThread inputThread>;

        $z0 = virtualinvoke $r2.<org.pircbotx.InputThread: boolean isConnected()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void setMessageDelay(long)
    {
        byte $b1;
        int $i2;
        long l0;
        org.pircbotx.PircBotX r0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.pircbotx.PircBotX;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot have a negative time.");

        throw $r2;

     label1:
        r0.<org.pircbotx.PircBotX: long messageDelay> = l0;

        return;
    }

    public long getMessageDelay()
    {
        long $l0;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        $l0 = r0.<org.pircbotx.PircBotX: long messageDelay>;

        return $l0;
    }

    public int getMaxLineLength()
    {
        int $i0;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        $i0 = r0.<org.pircbotx.PircBotX: int maxLineLength>;

        return $i0;
    }

    public int getOutgoingQueueSize()
    {
        int $i0;
        org.pircbotx.PircBotX r0;
        org.pircbotx.OutputThread $r1;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = r0.<org.pircbotx.PircBotX: org.pircbotx.OutputThread outputThread>;

        $i0 = virtualinvoke $r1.<org.pircbotx.OutputThread: int getQueueSize()>();

        return $i0;
    }

    public java.lang.String getServer()
    {
        java.lang.String $r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = r0.<org.pircbotx.PircBotX: java.lang.String server>;

        return $r1;
    }

    public int getPort()
    {
        int $i0;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        $i0 = r0.<org.pircbotx.PircBotX: int port>;

        return $i0;
    }

    public java.lang.String getPassword()
    {
        java.lang.String $r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = r0.<org.pircbotx.PircBotX: java.lang.String password>;

        return $r1;
    }

    public void setEncoding(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.nio.charset.Charset $r2;
        java.lang.String r0;
        org.pircbotx.PircBotX r1;
        java.lang.NullPointerException $r3;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Can\'t set charset to null");

        throw $r3;

     label1:
        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r0);

        virtualinvoke r1.<org.pircbotx.PircBotX: void setEncoding(java.nio.charset.Charset)>($r2);

        return;
    }

    public void setEncoding(java.nio.charset.Charset)
    {
        java.nio.charset.Charset r0;
        org.pircbotx.PircBotX r1;
        java.lang.NullPointerException $r2;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: java.nio.charset.Charset;

        if r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Can\'t set charset to null");

        throw $r2;

     label1:
        r1.<org.pircbotx.PircBotX: java.nio.charset.Charset charset> = r0;

        return;
    }

    public java.nio.charset.Charset getEncoding()
    {
        org.pircbotx.PircBotX r0;
        java.nio.charset.Charset $r1;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = r0.<org.pircbotx.PircBotX: java.nio.charset.Charset charset>;

        return $r1;
    }

    public java.net.InetAddress getInetAddress()
    {
        java.net.InetAddress $r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = r0.<org.pircbotx.PircBotX: java.net.InetAddress inetAddress>;

        return $r1;
    }

    public void setDccInetAddress(java.net.InetAddress)
    {
        java.net.InetAddress r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: java.net.InetAddress;

        r0.<org.pircbotx.PircBotX: java.net.InetAddress dccInetAddress> = r1;

        return;
    }

    public java.net.InetAddress getDccInetAddress()
    {
        java.net.InetAddress $r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = r0.<org.pircbotx.PircBotX: java.net.InetAddress dccInetAddress>;

        return $r1;
    }

    public java.util.List getDccPorts()
    {
        java.util.List $r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = r0.<org.pircbotx.PircBotX: java.util.List dccPorts>;

        return $r1;
    }

    public java.lang.String toString()
    {
        int $i0;
        java.lang.String $r3, $r10, $r17, $r20;
        org.pircbotx.PircBotX r2;
        boolean $z0;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r19;

        r2 := @this: org.pircbotx.PircBotX;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Version{");

        $r3 = r2.<org.pircbotx.PircBotX: java.lang.String version>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Connected{");

        $z0 = virtualinvoke r2.<org.pircbotx.PircBotX: boolean isConnected()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Server{");

        $r10 = r2.<org.pircbotx.PircBotX: java.lang.String server>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Port{");

        $i0 = r2.<org.pircbotx.PircBotX: int port>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Password{");

        $r17 = r2.<org.pircbotx.PircBotX: java.lang.String password>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r20;
    }

    public int getSocketTimeout()
    {
        int $i0;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        $i0 = r0.<org.pircbotx.PircBotX: int socketTimeout>;

        return $i0;
    }

    public void setSocketTimeout(int)
    {
        int i0;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        i0 := @parameter0: int;

        r0.<org.pircbotx.PircBotX: int socketTimeout> = i0;

        return;
    }

    public java.util.Set getChannels()
    {
        java.util.Set $r2;
        org.pircbotx.PircBotX r0;
        org.pircbotx.ManyToManyMap $r1;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = r0.<org.pircbotx.PircBotX: org.pircbotx.ManyToManyMap userChanInfo>;

        $r2 = virtualinvoke $r1.<org.pircbotx.ManyToManyMap: java.util.Set getAValues()>();

        return $r2;
    }

    public java.util.Set getChannels(org.pircbotx.User)
    {
        org.pircbotx.ManyToManyMap $r2;
        java.util.Set $r3;
        org.pircbotx.PircBotX r1;
        org.pircbotx.User r0;
        java.lang.NullPointerException $r4;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: org.pircbotx.User;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Can\'t get a null user");

        throw $r4;

     label1:
        $r2 = r1.<org.pircbotx.PircBotX: org.pircbotx.ManyToManyMap userChanInfo>;

        $r3 = virtualinvoke $r2.<org.pircbotx.ManyToManyMap: java.util.Set getAValues(java.lang.Object)>(r0);

        return $r3;
    }

    public org.pircbotx.Channel getChannel(java.lang.String)
    {
        org.pircbotx.ManyToManyMap $r2, $r6;
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.lang.NullPointerException $r10;
        org.pircbotx.Channel $r5, r8;
        java.lang.Object $r7;
        java.lang.String r0, $r9;
        org.pircbotx.PircBotX r1;
        boolean $z0, $z1;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("Can\'t get a null channel");

        throw $r10;

     label1:
        $r2 = r1.<org.pircbotx.PircBotX: org.pircbotx.ManyToManyMap userChanInfo>;

        $r3 = virtualinvoke $r2.<org.pircbotx.ManyToManyMap: java.util.Set getAValues()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.pircbotx.Channel) $r7;

        $r9 = virtualinvoke r8.<org.pircbotx.Channel: java.lang.String getName()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label3;

        return r8;

     label3:
        goto label2;

     label4:
        $r5 = new org.pircbotx.Channel;

        specialinvoke $r5.<org.pircbotx.Channel: void <init>(org.pircbotx.PircBotX,java.lang.String)>(r1, r0);

        $r6 = r1.<org.pircbotx.PircBotX: org.pircbotx.ManyToManyMap userChanInfo>;

        virtualinvoke $r6.<org.pircbotx.ManyToManyMap: boolean putB(java.lang.Object)>($r5);

        return $r5;
    }

    public java.util.Set getChannelsNames()
    {
        java.util.Set $r2;
        org.pircbotx.PircBotX$3 $r0;
        org.pircbotx.PircBotX r1;

        r1 := @this: org.pircbotx.PircBotX;

        $r0 = new org.pircbotx.PircBotX$3;

        specialinvoke $r0.<org.pircbotx.PircBotX$3: void <init>(org.pircbotx.PircBotX)>(r1);

        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0);

        return $r2;
    }

    public boolean channelExists(java.lang.String)
    {
        org.pircbotx.ManyToManyMap $r2;
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.lang.IllegalArgumentException $r8;
        org.pircbotx.Channel r6;
        java.lang.Object $r5;
        java.lang.String r0, $r7;
        org.pircbotx.PircBotX r1;
        boolean $z0, $z1;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t check for null channel existing");

        throw $r8;

     label1:
        $r2 = r1.<org.pircbotx.PircBotX: org.pircbotx.ManyToManyMap userChanInfo>;

        $r3 = virtualinvoke $r2.<org.pircbotx.ManyToManyMap: java.util.Set getAValues()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.pircbotx.Channel) $r5;

        $r7 = virtualinvoke r6.<org.pircbotx.Channel: java.lang.String getName()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        goto label2;

     label4:
        return 0;
    }

    public java.util.Set getUsers(org.pircbotx.Channel)
    {
        org.pircbotx.ManyToManyMap $r2;
        org.pircbotx.Channel r0;
        java.util.Set $r3;
        org.pircbotx.PircBotX r1;
        java.lang.NullPointerException $r4;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: org.pircbotx.Channel;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Can\'t get a null channel");

        throw $r4;

     label1:
        $r2 = r1.<org.pircbotx.PircBotX: org.pircbotx.ManyToManyMap userChanInfo>;

        $r3 = virtualinvoke $r2.<org.pircbotx.ManyToManyMap: java.util.Set getBValues(java.lang.Object)>(r0);

        return $r3;
    }

    public java.util.Set getUsers()
    {
        java.util.Set $r2;
        org.pircbotx.PircBotX r0;
        org.pircbotx.ManyToManyMap $r1;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = r0.<org.pircbotx.PircBotX: org.pircbotx.ManyToManyMap userChanInfo>;

        $r2 = virtualinvoke $r1.<org.pircbotx.ManyToManyMap: java.util.Set getBValues()>();

        return $r2;
    }

    public org.pircbotx.User getUser(java.lang.String)
    {
        org.pircbotx.ManyToManyMap $r4;
        java.lang.NullPointerException $r8;
        java.util.Map $r2, $r5;
        java.lang.Object $r6;
        java.lang.String r0;
        org.pircbotx.PircBotX r1;
        org.pircbotx.User $r3, $r7;
        boolean $z0;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("Can\'t get a null user");

        throw $r8;

     label1:
        $r2 = r1.<org.pircbotx.PircBotX: java.util.Map userNickMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        $r5 = r1.<org.pircbotx.PircBotX: java.util.Map userNickMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r7 = (org.pircbotx.User) $r6;

        return $r7;

     label2:
        $r3 = new org.pircbotx.User;

        specialinvoke $r3.<org.pircbotx.User: void <init>(org.pircbotx.PircBotX,java.lang.String)>(r1, r0);

        $r4 = r1.<org.pircbotx.PircBotX: org.pircbotx.ManyToManyMap userChanInfo>;

        virtualinvoke $r4.<org.pircbotx.ManyToManyMap: boolean putA(java.lang.Object)>($r3);

        return $r3;
    }

    public org.pircbotx.User getUserBot()
    {
        java.lang.String $r1;
        org.pircbotx.PircBotX r0;
        org.pircbotx.User $r2;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = virtualinvoke r0.<org.pircbotx.PircBotX: java.lang.String getNick()>();

        $r2 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.User getUser(java.lang.String)>($r1);

        return $r2;
    }

    public boolean userExists(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.String r1;
        org.pircbotx.PircBotX r0;
        boolean $z0;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.pircbotx.PircBotX: java.util.Map userNickMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public org.pircbotx.ServerInfo getServerInfo()
    {
        org.pircbotx.ServerInfo $r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = r0.<org.pircbotx.PircBotX: org.pircbotx.ServerInfo serverInfo>;

        return $r1;
    }

    public org.pircbotx.hooks.managers.ListenerManager getListenerManager()
    {
        org.pircbotx.hooks.CoreHooks $r4;
        org.pircbotx.hooks.managers.ThreadedListenerManager $r3;
        org.pircbotx.PircBotX r0;
        org.pircbotx.hooks.managers.ListenerManager $r1, $r2, $r5;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager listenerManager>;

        if $r1 != null goto label1;

        $r3 = new org.pircbotx.hooks.managers.ThreadedListenerManager;

        specialinvoke $r3.<org.pircbotx.hooks.managers.ThreadedListenerManager: void <init>()>();

        r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager listenerManager> = $r3;

        $r5 = r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager listenerManager>;

        $r4 = new org.pircbotx.hooks.CoreHooks;

        specialinvoke $r4.<org.pircbotx.hooks.CoreHooks: void <init>()>();

        interfaceinvoke $r5.<org.pircbotx.hooks.managers.ListenerManager: boolean addListener(org.pircbotx.hooks.Listener)>($r4);

     label1:
        $r2 = r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager listenerManager>;

        return $r2;
    }

    public void setListenerManager(org.pircbotx.hooks.managers.ListenerManager)
    {
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.lang.IllegalArgumentException $r7;
        org.pircbotx.hooks.Listener r6;
        org.pircbotx.hooks.CoreHooks $r4;
        java.lang.Object $r5;
        org.pircbotx.PircBotX r1;
        org.pircbotx.hooks.managers.ListenerManager r0;
        boolean $z0, $z1;

        r1 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: org.pircbotx.hooks.managers.ListenerManager;

        if r0 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t set listener manager to null");

        throw $r7;

     label1:
        r1.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager listenerManager> = r0;

        $r2 = interfaceinvoke r0.<org.pircbotx.hooks.managers.ListenerManager: java.util.Set getListeners()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.pircbotx.hooks.Listener) $r5;

        $z1 = r6 instanceof org.pircbotx.hooks.CoreHooks;

        if $z1 == 0 goto label3;

        return;

     label3:
        goto label2;

     label4:
        $r4 = new org.pircbotx.hooks.CoreHooks;

        specialinvoke $r4.<org.pircbotx.hooks.CoreHooks: void <init>()>();

        interfaceinvoke r0.<org.pircbotx.hooks.managers.ListenerManager: boolean addListener(org.pircbotx.hooks.Listener)>($r4);

        return;
    }

    public javax.net.SocketFactory getSocketFactory()
    {
        javax.net.SocketFactory $r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = r0.<org.pircbotx.PircBotX: javax.net.SocketFactory socketFactory>;

        return $r1;
    }

    public boolean isVerbose()
    {
        org.pircbotx.PircBotX r0;
        boolean $z0;

        r0 := @this: org.pircbotx.PircBotX;

        $z0 = r0.<org.pircbotx.PircBotX: boolean verbose>;

        return $z0;
    }

    public boolean isAutoNickChange()
    {
        org.pircbotx.PircBotX r0;
        boolean $z0;

        r0 := @this: org.pircbotx.PircBotX;

        $z0 = r0.<org.pircbotx.PircBotX: boolean autoNickChange>;

        return $z0;
    }

    public boolean hasShutdownHook()
    {
        org.pircbotx.PircBotX r0;
        java.lang.Thread $r1;
        boolean $z0;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = r0.<org.pircbotx.PircBotX: java.lang.Thread shutdownHook>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void useShutdownHook(boolean)
    {
        java.util.concurrent.atomic.AtomicInteger $r11;
        java.lang.Thread $r1, $r3, $r4, $r9;
        java.lang.String $r14;
        org.pircbotx.PircBotX r0;
        java.lang.ref.WeakReference $r5;
        boolean z0;
        java.lang.Runtime $r2, $r6;
        org.pircbotx.PircBotX$4 $r7;
        java.lang.StringBuilder $r8, $r10, $r12, $r13;

        r0 := @this: org.pircbotx.PircBotX;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r4 = r0.<org.pircbotx.PircBotX: java.lang.Thread shutdownHook>;

        if $r4 != null goto label1;

        $r5 = new java.lang.ref.WeakReference;

        specialinvoke $r5.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        $r6 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r7 = new org.pircbotx.PircBotX$4;

        specialinvoke $r7.<org.pircbotx.PircBotX$4: void <init>(org.pircbotx.PircBotX,java.lang.ref.WeakReference)>(r0, $r5);

        r0.<org.pircbotx.PircBotX: java.lang.Thread shutdownHook> = $r7;

        virtualinvoke $r6.<java.lang.Runtime: void addShutdownHook(java.lang.Thread)>($r7);

        $r9 = r0.<org.pircbotx.PircBotX: java.lang.Thread shutdownHook>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bot");

        $r11 = <org.pircbotx.PircBotX: java.util.concurrent.atomic.AtomicInteger botCount>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-shutdownhook");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.lang.Thread: void setName(java.lang.String)>($r14);

        goto label2;

     label1:
        if z0 != 0 goto label2;

        $r1 = r0.<org.pircbotx.PircBotX: java.lang.Thread shutdownHook>;

        if $r1 == null goto label2;

        $r2 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r3 = r0.<org.pircbotx.PircBotX: java.lang.Thread shutdownHook>;

        virtualinvoke $r2.<java.lang.Runtime: boolean removeShutdownHook(java.lang.Thread)>($r3);

        r0.<org.pircbotx.PircBotX: java.lang.Thread shutdownHook> = null;

     label2:
        return;
    }

    public void shutdown()
    {
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        virtualinvoke r0.<org.pircbotx.PircBotX: void shutdown(boolean)>(0);

        return;
    }

    public void shutdown(boolean)
    {
        java.util.Map $r8;
        org.pircbotx.PircBotX r0;
        boolean $z0, $z1, z2, $z3, $z4, $z5;
        org.pircbotx.DccManager $r29;
        java.util.Set $r5, $r12;
        java.lang.Exception $r24, $r26, $r27, $r28;
        org.pircbotx.hooks.events.DisconnectEvent $r11;
        java.net.Socket $r3, $r22, $r23;
        org.pircbotx.ManyToManyMap $r7;
        org.pircbotx.InputThread $r2;
        java.util.HashMap $r4;
        java.lang.String $r16, $r18, $r20, $r21, $r31;
        java.util.Map$Entry r32;
        java.util.Iterator $r6, $r13;
        java.lang.RuntimeException $r25;
        org.pircbotx.OutputThread $r1;
        org.pircbotx.Channel r30;
        java.lang.Object $r14, $r15, $r17, $r19;
        org.pircbotx.PircBotX$ListBuilder $r9;
        org.pircbotx.hooks.managers.ListenerManager $r10;

        r0 := @this: org.pircbotx.PircBotX;

        z2 := @parameter0: boolean;

     label01:
        $r1 = r0.<org.pircbotx.PircBotX: org.pircbotx.OutputThread outputThread>;

        virtualinvoke $r1.<org.pircbotx.OutputThread: void interrupt()>();

        $r2 = r0.<org.pircbotx.PircBotX: org.pircbotx.InputThread inputThread>;

        virtualinvoke $r2.<org.pircbotx.InputThread: void interrupt()>();

     label02:
        goto label04;

     label03:
        $r28 := @caughtexception;

        virtualinvoke r0.<org.pircbotx.PircBotX: void logException(java.lang.Throwable)>($r28);

     label04:
        $r3 = r0.<org.pircbotx.PircBotX: java.net.Socket socket>;

        $z0 = virtualinvoke $r3.<java.net.Socket: boolean isClosed()>();

        if $z0 != 0 goto label08;

     label05:
        $r22 = r0.<org.pircbotx.PircBotX: java.net.Socket socket>;

        virtualinvoke $r22.<java.net.Socket: void shutdownInput()>();

        $r23 = r0.<org.pircbotx.PircBotX: java.net.Socket socket>;

        virtualinvoke $r23.<java.net.Socket: void close()>();

     label06:
        goto label08;

     label07:
        $r27 := @caughtexception;

        virtualinvoke r0.<org.pircbotx.PircBotX: void logException(java.lang.Throwable)>($r27);

     label08:
        $r29 = r0.<org.pircbotx.PircBotX: org.pircbotx.DccManager dccManager>;

        virtualinvoke $r29.<org.pircbotx.DccManager: void close()>();

     label09:
        goto label11;

     label10:
        $r26 := @caughtexception;

        virtualinvoke r0.<org.pircbotx.PircBotX: void logException(java.lang.Throwable)>($r26);

     label11:
        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r5 = virtualinvoke r0.<org.pircbotx.PircBotX: java.util.Set getChannels()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label12:
        $z5 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label15;

        $r19 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r30 = (org.pircbotx.Channel) $r19;

        $r20 = virtualinvoke r30.<org.pircbotx.Channel: java.lang.String getChannelKey()>();

        if $r20 != null goto label13;

        $r31 = "";

        goto label14;

     label13:
        $r31 = virtualinvoke r30.<org.pircbotx.Channel: java.lang.String getChannelKey()>();

     label14:
        $r21 = virtualinvoke r30.<org.pircbotx.Channel: java.lang.String getName()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r31);

        goto label12;

     label15:
        $r7 = r0.<org.pircbotx.PircBotX: org.pircbotx.ManyToManyMap userChanInfo>;

        virtualinvoke $r7.<org.pircbotx.ManyToManyMap: void clear()>();

        $r8 = r0.<org.pircbotx.PircBotX: java.util.Map userNickMap>;

        interfaceinvoke $r8.<java.util.Map: void clear()>();

        $r9 = r0.<org.pircbotx.PircBotX: org.pircbotx.PircBotX$ListBuilder channelListBuilder>;

        virtualinvoke $r9.<org.pircbotx.PircBotX$ListBuilder: java.util.Set finish()>();

        $z1 = r0.<org.pircbotx.PircBotX: boolean autoReconnect>;

        if $z1 == 0 goto label20;

        if z2 != 0 goto label20;

     label16:
        virtualinvoke r0.<org.pircbotx.PircBotX: void reconnect()>();

        $z3 = r0.<org.pircbotx.PircBotX: boolean autoReconnectChannels>;

        if $z3 == 0 goto label18;

        $r12 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        $r13 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label17:
        $z4 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label18;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r32 = (java.util.Map$Entry) $r14;

        $r15 = interfaceinvoke r32.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r16 = (java.lang.String) $r15;

        $r17 = interfaceinvoke r32.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18 = (java.lang.String) $r17;

        virtualinvoke r0.<org.pircbotx.PircBotX: void joinChannel(java.lang.String,java.lang.String)>($r16, $r18);

        goto label17;

     label18:
        goto label21;

     label19:
        $r24 := @caughtexception;

        $r25 = new java.lang.RuntimeException;

        specialinvoke $r25.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Can\'t reconnect to server", $r24);

        throw $r25;

     label20:
        $r10 = virtualinvoke r0.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        $r11 = new org.pircbotx.hooks.events.DisconnectEvent;

        specialinvoke $r11.<org.pircbotx.hooks.events.DisconnectEvent: void <init>(org.pircbotx.PircBotX)>(r0);

        interfaceinvoke $r10.<org.pircbotx.hooks.managers.ListenerManager: void dispatchEvent(org.pircbotx.hooks.Event)>($r11);

        virtualinvoke r0.<org.pircbotx.PircBotX: void log(java.lang.String)>("*** Disconnected.");

     label21:
        return;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Exception from label16 to label18 with label19;
    }

    public org.pircbotx.hooks.Event waitFor(java.lang.Class) throws java.lang.InterruptedException
    {
        org.pircbotx.PircBotX$WaitListener $r1;
        java.lang.Class r0;
        org.pircbotx.PircBotX r2;
        java.lang.IllegalArgumentException $r6;
        org.pircbotx.hooks.Event $r4;
        org.pircbotx.hooks.managers.ListenerManager $r3, $r5;

        r2 := @this: org.pircbotx.PircBotX;

        r0 := @parameter0: java.lang.Class;

        if r0 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t wait for null event");

        throw $r6;

     label1:
        $r1 = new org.pircbotx.PircBotX$WaitListener;

        specialinvoke $r1.<org.pircbotx.PircBotX$WaitListener: void <init>()>();

        $r3 = virtualinvoke r2.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        interfaceinvoke $r3.<org.pircbotx.hooks.managers.ListenerManager: boolean addListener(org.pircbotx.hooks.Listener)>($r1);

        $r4 = virtualinvoke $r1.<org.pircbotx.PircBotX$WaitListener: org.pircbotx.hooks.Event waitFor(java.lang.Class)>(r0);

        $r5 = virtualinvoke r2.<org.pircbotx.PircBotX: org.pircbotx.hooks.managers.ListenerManager getListenerManager()>();

        interfaceinvoke $r5.<org.pircbotx.hooks.managers.ListenerManager: boolean removeListener(org.pircbotx.hooks.Listener)>($r1);

        return $r4;
    }

    public void setInetAddress(java.net.InetAddress)
    {
        java.net.InetAddress r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: java.net.InetAddress;

        r0.<org.pircbotx.PircBotX: java.net.InetAddress inetAddress> = r1;

        return;
    }

    public org.pircbotx.DccManager getDccManager()
    {
        org.pircbotx.DccManager $r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = r0.<org.pircbotx.PircBotX: org.pircbotx.DccManager dccManager>;

        return $r1;
    }

    protected void setDccPorts(java.util.List)
    {
        java.util.List r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: java.util.List;

        r0.<org.pircbotx.PircBotX: java.util.List dccPorts> = r1;

        return;
    }

    public boolean isCapEnabled()
    {
        org.pircbotx.PircBotX r0;
        boolean $z0;

        r0 := @this: org.pircbotx.PircBotX;

        $z0 = r0.<org.pircbotx.PircBotX: boolean capEnabled>;

        return $z0;
    }

    public java.util.List getCapHandlers()
    {
        java.util.List $r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = r0.<org.pircbotx.PircBotX: java.util.List capHandlers>;

        return $r1;
    }

    public java.util.List getEnabledCapabilities()
    {
        java.util.List $r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = r0.<org.pircbotx.PircBotX: java.util.List enabledCapabilities>;

        return $r1;
    }

    public java.lang.String getWebIrcUsername()
    {
        java.lang.String $r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = r0.<org.pircbotx.PircBotX: java.lang.String webIrcUsername>;

        return $r1;
    }

    public void setWebIrcUsername(java.lang.String)
    {
        java.lang.String r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: java.lang.String;

        r0.<org.pircbotx.PircBotX: java.lang.String webIrcUsername> = r1;

        return;
    }

    public void setWebIrcHostname(java.lang.String)
    {
        java.lang.String r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: java.lang.String;

        r0.<org.pircbotx.PircBotX: java.lang.String webIrcHostname> = r1;

        return;
    }

    public java.lang.String getWebIrcHostname()
    {
        java.lang.String $r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = r0.<org.pircbotx.PircBotX: java.lang.String webIrcHostname>;

        return $r1;
    }

    public void setWebIrcAddress(java.net.InetAddress)
    {
        java.net.InetAddress r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: java.net.InetAddress;

        r0.<org.pircbotx.PircBotX: java.net.InetAddress webIrcAddress> = r1;

        return;
    }

    public java.net.InetAddress getWebIrcAddress()
    {
        java.net.InetAddress $r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = r0.<org.pircbotx.PircBotX: java.net.InetAddress webIrcAddress>;

        return $r1;
    }

    public void setWebIrcPassword(java.lang.String)
    {
        java.lang.String r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        r1 := @parameter0: java.lang.String;

        r0.<org.pircbotx.PircBotX: java.lang.String webIrcPassword> = r1;

        return;
    }

    public java.lang.String getWebIrcPassword()
    {
        java.lang.String $r1;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        $r1 = r0.<org.pircbotx.PircBotX: java.lang.String webIrcPassword>;

        return $r1;
    }

    public void setAutoSplitMessage(boolean)
    {
        org.pircbotx.PircBotX r0;
        boolean z0;

        r0 := @this: org.pircbotx.PircBotX;

        z0 := @parameter0: boolean;

        r0.<org.pircbotx.PircBotX: boolean autoSplitMessage> = z0;

        return;
    }

    public boolean isAutoSplitMessage()
    {
        org.pircbotx.PircBotX r0;
        boolean $z0;

        r0 := @this: org.pircbotx.PircBotX;

        $z0 = r0.<org.pircbotx.PircBotX: boolean autoSplitMessage>;

        return $z0;
    }

    public boolean isAutoReconnect()
    {
        org.pircbotx.PircBotX r0;
        boolean $z0;

        r0 := @this: org.pircbotx.PircBotX;

        $z0 = r0.<org.pircbotx.PircBotX: boolean autoReconnect>;

        return $z0;
    }

    public void setAutoReconnect(boolean)
    {
        org.pircbotx.PircBotX r0;
        boolean z0;

        r0 := @this: org.pircbotx.PircBotX;

        z0 := @parameter0: boolean;

        r0.<org.pircbotx.PircBotX: boolean autoReconnect> = z0;

        return;
    }

    public boolean isAutoReconnectChannels()
    {
        org.pircbotx.PircBotX r0;
        boolean $z0;

        r0 := @this: org.pircbotx.PircBotX;

        $z0 = r0.<org.pircbotx.PircBotX: boolean autoReconnectChannels>;

        return $z0;
    }

    public void setAutoReconnectChannels(boolean)
    {
        org.pircbotx.PircBotX r0;
        boolean z0;

        r0 := @this: org.pircbotx.PircBotX;

        z0 := @parameter0: boolean;

        r0.<org.pircbotx.PircBotX: boolean autoReconnectChannels> = z0;

        return;
    }

    public void setMaxLineLength(int)
    {
        int i0;
        org.pircbotx.PircBotX r0;

        r0 := @this: org.pircbotx.PircBotX;

        i0 := @parameter0: int;

        r0.<org.pircbotx.PircBotX: int maxLineLength> = i0;

        return;
    }

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicInteger $r0;

        <org.pircbotx.PircBotX: java.lang.String VERSION> = "1.9";

        $r0 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        <org.pircbotx.PircBotX: java.util.concurrent.atomic.AtomicInteger botCount> = $r0;

        return;
    }
}
