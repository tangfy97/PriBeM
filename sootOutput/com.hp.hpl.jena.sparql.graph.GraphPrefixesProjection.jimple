public class com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection extends com.hp.hpl.jena.shared.impl.PrefixMappingImpl
{
    private java.lang.String graphName;
    private com.hp.hpl.jena.sparql.core.DatasetPrefixStorage prefixes;

    public void <init>(java.lang.String, com.hp.hpl.jena.sparql.core.DatasetPrefixStorage)
    {
        com.hp.hpl.jena.sparql.core.DatasetPrefixStorage r2;
        com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetPrefixStorage;

        specialinvoke r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection: java.lang.String graphName> = r1;

        r0.<com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection: com.hp.hpl.jena.sparql.core.DatasetPrefixStorage prefixes> = r2;

        return;
    }

    public java.lang.String getNsURIPrefix(java.lang.String)
    {
        com.hp.hpl.jena.sparql.core.DatasetPrefixStorage $r4;
        com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection r0;
        java.lang.String r1, $r2, $r3, $r5;

        r0 := @this: com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: java.lang.String getNsURIPrefix(java.lang.String)>(r1);

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r4 = r0.<com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection: com.hp.hpl.jena.sparql.core.DatasetPrefixStorage prefixes>;

        $r3 = r0.<com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection: java.lang.String graphName>;

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.sparql.core.DatasetPrefixStorage: java.lang.String readByURI(java.lang.String,java.lang.String)>($r3, r1);

        if $r5 == null goto label2;

        specialinvoke r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: void set(java.lang.String,java.lang.String)>($r5, r1);

     label2:
        return $r5;
    }

    public java.util.Map getNsPrefixMap()
    {
        com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection r0;
        java.util.Map$Entry r7;
        java.util.Iterator $r5;
        java.util.Set $r4;
        com.hp.hpl.jena.sparql.core.DatasetPrefixStorage $r2;
        java.util.Map $r3;
        java.lang.Object $r6, $r8, $r10;
        java.lang.String $r1, $r9, $r11;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection;

        $r2 = r0.<com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection: com.hp.hpl.jena.sparql.core.DatasetPrefixStorage prefixes>;

        $r1 = r0.<com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection: java.lang.String graphName>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.sparql.core.DatasetPrefixStorage: java.util.Map readPrefixMap(java.lang.String)>($r1);

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.String) $r8;

        $r10 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (java.lang.String) $r10;

        specialinvoke r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: void set(java.lang.String,java.lang.String)>($r9, $r11);

        goto label1;

     label2:
        return $r3;
    }

    protected void set(java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection r0;
        com.hp.hpl.jena.sparql.core.DatasetPrefixStorage $r5, $r7;
        java.lang.String r1, $r2, r3, $r4, $r6;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection: java.lang.String get(java.lang.String)>(r1);

        if $r2 == null goto label2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r7 = r0.<com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection: com.hp.hpl.jena.sparql.core.DatasetPrefixStorage prefixes>;

        $r6 = r0.<com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection: java.lang.String graphName>;

        interfaceinvoke $r7.<com.hp.hpl.jena.sparql.core.DatasetPrefixStorage: void removeFromPrefixMap(java.lang.String,java.lang.String)>($r6, r1);

     label2:
        $r5 = r0.<com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection: com.hp.hpl.jena.sparql.core.DatasetPrefixStorage prefixes>;

        $r4 = r0.<com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection: java.lang.String graphName>;

        interfaceinvoke $r5.<com.hp.hpl.jena.sparql.core.DatasetPrefixStorage: void insertPrefix(java.lang.String,java.lang.String,java.lang.String)>($r4, r1, r3);

        specialinvoke r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: void set(java.lang.String,java.lang.String)>(r1, r3);

        return;
    }

    protected java.lang.String get(java.lang.String)
    {
        com.hp.hpl.jena.sparql.core.DatasetPrefixStorage $r4;
        com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection r0;
        java.lang.String r1, $r2, $r3, $r5;

        r0 := @this: com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: java.lang.String get(java.lang.String)>(r1);

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r4 = r0.<com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection: com.hp.hpl.jena.sparql.core.DatasetPrefixStorage prefixes>;

        $r3 = r0.<com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection: java.lang.String graphName>;

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.sparql.core.DatasetPrefixStorage: java.lang.String readPrefix(java.lang.String,java.lang.String)>($r3, r1);

        if $r5 == null goto label2;

        specialinvoke r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: void set(java.lang.String,java.lang.String)>(r1, $r5);

     label2:
        return $r5;
    }

    public com.hp.hpl.jena.shared.PrefixMapping removeNsPrefix(java.lang.String)
    {
        com.hp.hpl.jena.sparql.core.DatasetPrefixStorage $r4;
        com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection r0;
        java.lang.String r1, $r2, $r3;

        r0 := @this: com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: java.lang.String getNsPrefixURI(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $r4 = r0.<com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection: com.hp.hpl.jena.sparql.core.DatasetPrefixStorage prefixes>;

        $r3 = r0.<com.hp.hpl.jena.sparql.graph.GraphPrefixesProjection: java.lang.String graphName>;

        interfaceinvoke $r4.<com.hp.hpl.jena.sparql.core.DatasetPrefixStorage: void removeFromPrefixMap(java.lang.String,java.lang.String)>($r3, r1);

     label1:
        specialinvoke r0.<com.hp.hpl.jena.shared.impl.PrefixMappingImpl: com.hp.hpl.jena.shared.PrefixMapping removeNsPrefix(java.lang.String)>(r1);

        return r0;
    }
}
