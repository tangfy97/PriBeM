public abstract class org.apache.batik.css.dom.CSSOMStoredStyleDeclaration extends org.apache.batik.css.dom.CSSOMSVGStyleDeclaration implements org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider, org.apache.batik.css.dom.CSSOMStyleDeclaration$ModificationHandler, org.apache.batik.css.engine.StyleDeclarationProvider
{
    protected org.apache.batik.css.engine.StyleDeclaration declaration;

    public void <init>(org.apache.batik.css.engine.CSSEngine)
    {
        org.apache.batik.css.dom.CSSOMStoredStyleDeclaration r0;
        org.apache.batik.css.engine.CSSEngine r1;

        r0 := @this: org.apache.batik.css.dom.CSSOMStoredStyleDeclaration;

        r1 := @parameter0: org.apache.batik.css.engine.CSSEngine;

        specialinvoke r0.<org.apache.batik.css.dom.CSSOMSVGStyleDeclaration: void <init>(org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider,org.w3c.dom.css.CSSRule,org.apache.batik.css.engine.CSSEngine)>(null, null, r1);

        r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider valueProvider> = r0;

        virtualinvoke r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: void setModificationHandler(org.apache.batik.css.dom.CSSOMStyleDeclaration$ModificationHandler)>(r0);

        return;
    }

    public org.apache.batik.css.engine.StyleDeclaration getStyleDeclaration()
    {
        org.apache.batik.css.engine.StyleDeclaration $r1;
        org.apache.batik.css.dom.CSSOMStoredStyleDeclaration r0;

        r0 := @this: org.apache.batik.css.dom.CSSOMStoredStyleDeclaration;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMStoredStyleDeclaration: org.apache.batik.css.engine.StyleDeclaration declaration>;

        return $r1;
    }

    public void setStyleDeclaration(org.apache.batik.css.engine.StyleDeclaration)
    {
        org.apache.batik.css.engine.StyleDeclaration r1;
        org.apache.batik.css.dom.CSSOMStoredStyleDeclaration r0;

        r0 := @this: org.apache.batik.css.dom.CSSOMStoredStyleDeclaration;

        r1 := @parameter0: org.apache.batik.css.engine.StyleDeclaration;

        r0.<org.apache.batik.css.dom.CSSOMStoredStyleDeclaration: org.apache.batik.css.engine.StyleDeclaration declaration> = r1;

        return;
    }

    public org.apache.batik.css.engine.value.Value getValue(java.lang.String)
    {
        org.apache.batik.css.engine.StyleDeclaration $r3, $r4, $r5;
        org.apache.batik.css.dom.CSSOMStoredStyleDeclaration r0;
        org.apache.batik.css.engine.value.Value $r6;
        org.apache.batik.css.engine.CSSEngine $r2;
        int $i0, $i1, $i2, i3;
        java.lang.String r1;

        r0 := @this: org.apache.batik.css.dom.CSSOMStoredStyleDeclaration;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.batik.css.dom.CSSOMSVGStyleDeclaration: org.apache.batik.css.engine.CSSEngine cssEngine>;

        $i0 = virtualinvoke $r2.<org.apache.batik.css.engine.CSSEngine: int getPropertyIndex(java.lang.String)>(r1);

        i3 = 0;

        goto label3;

     label1:
        $r4 = r0.<org.apache.batik.css.dom.CSSOMStoredStyleDeclaration: org.apache.batik.css.engine.StyleDeclaration declaration>;

        $i2 = virtualinvoke $r4.<org.apache.batik.css.engine.StyleDeclaration: int getIndex(int)>(i3);

        if $i0 != $i2 goto label2;

        $r5 = r0.<org.apache.batik.css.dom.CSSOMStoredStyleDeclaration: org.apache.batik.css.engine.StyleDeclaration declaration>;

        $r6 = virtualinvoke $r5.<org.apache.batik.css.engine.StyleDeclaration: org.apache.batik.css.engine.value.Value getValue(int)>(i3);

        return $r6;

     label2:
        i3 = i3 + 1;

     label3:
        $r3 = r0.<org.apache.batik.css.dom.CSSOMStoredStyleDeclaration: org.apache.batik.css.engine.StyleDeclaration declaration>;

        $i1 = virtualinvoke $r3.<org.apache.batik.css.engine.StyleDeclaration: int size()>();

        if i3 < $i1 goto label1;

        return null;
    }

    public boolean isImportant(java.lang.String)
    {
        org.apache.batik.css.engine.StyleDeclaration $r3, $r4, $r5;
        org.apache.batik.css.dom.CSSOMStoredStyleDeclaration r0;
        org.apache.batik.css.engine.CSSEngine $r2;
        int $i0, $i1, $i2, i3;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.batik.css.dom.CSSOMStoredStyleDeclaration;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.batik.css.dom.CSSOMSVGStyleDeclaration: org.apache.batik.css.engine.CSSEngine cssEngine>;

        $i0 = virtualinvoke $r2.<org.apache.batik.css.engine.CSSEngine: int getPropertyIndex(java.lang.String)>(r1);

        i3 = 0;

        goto label3;

     label1:
        $r4 = r0.<org.apache.batik.css.dom.CSSOMStoredStyleDeclaration: org.apache.batik.css.engine.StyleDeclaration declaration>;

        $i2 = virtualinvoke $r4.<org.apache.batik.css.engine.StyleDeclaration: int getIndex(int)>(i3);

        if $i0 != $i2 goto label2;

        $r5 = r0.<org.apache.batik.css.dom.CSSOMStoredStyleDeclaration: org.apache.batik.css.engine.StyleDeclaration declaration>;

        $z0 = virtualinvoke $r5.<org.apache.batik.css.engine.StyleDeclaration: boolean getPriority(int)>(i3);

        return $z0;

     label2:
        i3 = i3 + 1;

     label3:
        $r3 = r0.<org.apache.batik.css.dom.CSSOMStoredStyleDeclaration: org.apache.batik.css.engine.StyleDeclaration declaration>;

        $i1 = virtualinvoke $r3.<org.apache.batik.css.engine.StyleDeclaration: int size()>();

        if i3 < $i1 goto label1;

        return 0;
    }

    public java.lang.String getText()
    {
        org.apache.batik.css.engine.StyleDeclaration $r2;
        org.apache.batik.css.dom.CSSOMStoredStyleDeclaration r0;
        java.lang.String $r3;
        org.apache.batik.css.engine.CSSEngine $r1;

        r0 := @this: org.apache.batik.css.dom.CSSOMStoredStyleDeclaration;

        $r2 = r0.<org.apache.batik.css.dom.CSSOMStoredStyleDeclaration: org.apache.batik.css.engine.StyleDeclaration declaration>;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMSVGStyleDeclaration: org.apache.batik.css.engine.CSSEngine cssEngine>;

        $r3 = virtualinvoke $r2.<org.apache.batik.css.engine.StyleDeclaration: java.lang.String toString(org.apache.batik.css.engine.CSSEngine)>($r1);

        return $r3;
    }

    public int getLength()
    {
        int $i0;
        org.apache.batik.css.engine.StyleDeclaration $r1;
        org.apache.batik.css.dom.CSSOMStoredStyleDeclaration r0;

        r0 := @this: org.apache.batik.css.dom.CSSOMStoredStyleDeclaration;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMStoredStyleDeclaration: org.apache.batik.css.engine.StyleDeclaration declaration>;

        $i0 = virtualinvoke $r1.<org.apache.batik.css.engine.StyleDeclaration: int size()>();

        return $i0;
    }

    public java.lang.String item(int)
    {
        org.apache.batik.css.engine.StyleDeclaration $r1;
        int i0, $i1;
        org.apache.batik.css.dom.CSSOMStoredStyleDeclaration r0;
        java.lang.String $r3;
        org.apache.batik.css.engine.CSSEngine $r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMStoredStyleDeclaration;

        i0 := @parameter0: int;

        $r2 = r0.<org.apache.batik.css.dom.CSSOMSVGStyleDeclaration: org.apache.batik.css.engine.CSSEngine cssEngine>;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMStoredStyleDeclaration: org.apache.batik.css.engine.StyleDeclaration declaration>;

        $i1 = virtualinvoke $r1.<org.apache.batik.css.engine.StyleDeclaration: int getIndex(int)>(i0);

        $r3 = virtualinvoke $r2.<org.apache.batik.css.engine.CSSEngine: java.lang.String getPropertyName(int)>($i1);

        return $r3;
    }

    public abstract void propertyChanged(java.lang.String, java.lang.String, java.lang.String) throws org.w3c.dom.DOMException;

    public abstract void propertyRemoved(java.lang.String) throws org.w3c.dom.DOMException;

    public abstract void textChanged(java.lang.String) throws org.w3c.dom.DOMException;
}
