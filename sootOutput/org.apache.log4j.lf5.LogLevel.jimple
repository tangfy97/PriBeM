public class org.apache.log4j.lf5.LogLevel extends java.lang.Object implements java.io.Serializable
{
    public static final org.apache.log4j.lf5.LogLevel FATAL;
    public static final org.apache.log4j.lf5.LogLevel ERROR;
    public static final org.apache.log4j.lf5.LogLevel WARN;
    public static final org.apache.log4j.lf5.LogLevel INFO;
    public static final org.apache.log4j.lf5.LogLevel DEBUG;
    public static final org.apache.log4j.lf5.LogLevel SEVERE;
    public static final org.apache.log4j.lf5.LogLevel WARNING;
    public static final org.apache.log4j.lf5.LogLevel CONFIG;
    public static final org.apache.log4j.lf5.LogLevel FINE;
    public static final org.apache.log4j.lf5.LogLevel FINER;
    public static final org.apache.log4j.lf5.LogLevel FINEST;
    protected java.lang.String _label;
    protected int _precedence;
    private static org.apache.log4j.lf5.LogLevel[] _log4JLevels;
    private static org.apache.log4j.lf5.LogLevel[] _jdk14Levels;
    private static org.apache.log4j.lf5.LogLevel[] _allDefaultLevels;
    private static java.util.Map _logLevelMap;
    private static java.util.Map _logLevelColorMap;
    private static java.util.Map _registeredLogLevelMap;

    public void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        org.apache.log4j.lf5.LogLevel r0;

        r0 := @this: org.apache.log4j.lf5.LogLevel;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.log4j.lf5.LogLevel: java.lang.String _label> = r1;

        r0.<org.apache.log4j.lf5.LogLevel: int _precedence> = i0;

        return;
    }

    public java.lang.String getLabel()
    {
        java.lang.String $r1;
        org.apache.log4j.lf5.LogLevel r0;

        r0 := @this: org.apache.log4j.lf5.LogLevel;

        $r1 = r0.<org.apache.log4j.lf5.LogLevel: java.lang.String _label>;

        return $r1;
    }

    public boolean encompasses(org.apache.log4j.lf5.LogLevel)
    {
        int $i0, $i1;
        org.apache.log4j.lf5.LogLevel r0, r1;

        r1 := @this: org.apache.log4j.lf5.LogLevel;

        r0 := @parameter0: org.apache.log4j.lf5.LogLevel;

        $i0 = virtualinvoke r0.<org.apache.log4j.lf5.LogLevel: int getPrecedence()>();

        $i1 = virtualinvoke r1.<org.apache.log4j.lf5.LogLevel: int getPrecedence()>();

        if $i0 > $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static org.apache.log4j.lf5.LogLevel valueOf(java.lang.String) throws org.apache.log4j.lf5.LogLevelFormatException
    {
        java.lang.StringBuffer $r0, $r1, $r2, $r3, $r4;
        java.util.Map $r8, $r9, $r13;
        int $i0;
        java.lang.String $r5, $r7, $r11, $r12, r15;
        org.apache.log4j.lf5.LogLevel r16;
        org.apache.log4j.lf5.LogLevelFormatException $r6;
        java.lang.Object $r10, $r14;

        r15 := @parameter0: java.lang.String;

        r16 = null;

        if r15 == null goto label1;

        $r11 = virtualinvoke r15.<java.lang.String: java.lang.String trim()>();

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String toUpperCase()>();

        r15 = $r12;

        $r13 = <org.apache.log4j.lf5.LogLevel: java.util.Map _logLevelMap>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r12);

        r16 = (org.apache.log4j.lf5.LogLevel) $r14;

     label1:
        if r16 != null goto label2;

        $r8 = <org.apache.log4j.lf5.LogLevel: java.util.Map _registeredLogLevelMap>;

        $i0 = interfaceinvoke $r8.<java.util.Map: int size()>();

        if $i0 <= 0 goto label2;

        $r9 = <org.apache.log4j.lf5.LogLevel: java.util.Map _registeredLogLevelMap>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r15);

        r16 = (org.apache.log4j.lf5.LogLevel) $r10;

     label2:
        if r16 != null goto label3;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error while trying to parse (");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r15);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") into");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" a LogLevel.");

        $r6 = new org.apache.log4j.lf5.LogLevelFormatException;

        $r7 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<org.apache.log4j.lf5.LogLevelFormatException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label3:
        return r16;
    }

    public static org.apache.log4j.lf5.LogLevel register(org.apache.log4j.lf5.LogLevel)
    {
        org.apache.log4j.lf5.LogLevel r0, $r7;
        java.util.Map $r1, $r4;
        java.lang.Object $r3, $r6;
        java.lang.String $r2, $r5;

        r0 := @parameter0: org.apache.log4j.lf5.LogLevel;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = <org.apache.log4j.lf5.LogLevel: java.util.Map _logLevelMap>;

        $r2 = virtualinvoke r0.<org.apache.log4j.lf5.LogLevel: java.lang.String getLabel()>();

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        if $r3 != null goto label2;

        $r4 = <org.apache.log4j.lf5.LogLevel: java.util.Map _registeredLogLevelMap>;

        $r5 = virtualinvoke r0.<org.apache.log4j.lf5.LogLevel: java.lang.String getLabel()>();

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r0);

        $r7 = (org.apache.log4j.lf5.LogLevel) $r6;

        return $r7;

     label2:
        return null;
    }

    public static void register(org.apache.log4j.lf5.LogLevel[])
    {
        int $i0, i1;
        org.apache.log4j.lf5.LogLevel[] r0;
        org.apache.log4j.lf5.LogLevel $r1;

        r0 := @parameter0: org.apache.log4j.lf5.LogLevel[];

        if r0 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label2;

        $r1 = r0[i1];

        staticinvoke <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel register(org.apache.log4j.lf5.LogLevel)>($r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static void register(java.util.List)
    {
        java.util.List r0;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        boolean $z0;
        org.apache.log4j.lf5.LogLevel $r3;

        r0 := @parameter0: java.util.List;

        if r0 == null goto label2;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (org.apache.log4j.lf5.LogLevel) $r2;

        staticinvoke <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel register(org.apache.log4j.lf5.LogLevel)>($r3);

        goto label1;

     label2:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        int $i0, $i1;
        java.lang.Object r0;
        boolean $z0, z1;
        org.apache.log4j.lf5.LogLevel r1, $r2;

        r1 := @this: org.apache.log4j.lf5.LogLevel;

        r0 := @parameter0: java.lang.Object;

        z1 = 0;

        $z0 = r0 instanceof org.apache.log4j.lf5.LogLevel;

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r1.<org.apache.log4j.lf5.LogLevel: int getPrecedence()>();

        $r2 = (org.apache.log4j.lf5.LogLevel) r0;

        $i1 = virtualinvoke $r2.<org.apache.log4j.lf5.LogLevel: int getPrecedence()>();

        if $i0 != $i1 goto label1;

        z1 = 1;

     label1:
        return z1;
    }

    public int hashCode()
    {
        int $i0;
        java.lang.String $r1;
        org.apache.log4j.lf5.LogLevel r0;

        r0 := @this: org.apache.log4j.lf5.LogLevel;

        $r1 = r0.<org.apache.log4j.lf5.LogLevel: java.lang.String _label>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        org.apache.log4j.lf5.LogLevel r0;

        r0 := @this: org.apache.log4j.lf5.LogLevel;

        $r1 = r0.<org.apache.log4j.lf5.LogLevel: java.lang.String _label>;

        return $r1;
    }

    public void setLogLevelColorMap(org.apache.log4j.lf5.LogLevel, java.awt.Color)
    {
        java.awt.Color r4;
        java.util.Map $r1, $r2;
        org.apache.log4j.lf5.LogLevel r0, r3;

        r3 := @this: org.apache.log4j.lf5.LogLevel;

        r0 := @parameter0: org.apache.log4j.lf5.LogLevel;

        r4 := @parameter1: java.awt.Color;

        $r1 = <org.apache.log4j.lf5.LogLevel: java.util.Map _logLevelColorMap>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r0);

        if r4 != null goto label1;

        r4 = <java.awt.Color: java.awt.Color black>;

     label1:
        $r2 = <org.apache.log4j.lf5.LogLevel: java.util.Map _logLevelColorMap>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r4);

        return;
    }

    public static void resetLogLevelColorMap()
    {
        java.awt.Color $r3;
        org.apache.log4j.lf5.LogLevel $r4;
        java.util.Map $r0, $r5;
        int $i0, i1;
        org.apache.log4j.lf5.LogLevel[] $r1, $r2;

        $r0 = <org.apache.log4j.lf5.LogLevel: java.util.Map _logLevelColorMap>;

        interfaceinvoke $r0.<java.util.Map: void clear()>();

        i1 = 0;

     label1:
        $r1 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel[] _allDefaultLevels>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r5 = <org.apache.log4j.lf5.LogLevel: java.util.Map _logLevelColorMap>;

        $r2 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel[] _allDefaultLevels>;

        $r4 = $r2[i1];

        $r3 = <java.awt.Color: java.awt.Color black>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static java.util.List getLog4JLevels()
    {
        java.util.List $r1;
        org.apache.log4j.lf5.LogLevel[] $r0;

        $r0 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel[] _log4JLevels>;

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        return $r1;
    }

    public static java.util.List getJdk14Levels()
    {
        java.util.List $r1;
        org.apache.log4j.lf5.LogLevel[] $r0;

        $r0 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel[] _jdk14Levels>;

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        return $r1;
    }

    public static java.util.List getAllDefaultLevels()
    {
        java.util.List $r1;
        org.apache.log4j.lf5.LogLevel[] $r0;

        $r0 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel[] _allDefaultLevels>;

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        return $r1;
    }

    public static java.util.Map getLogLevelColorMap()
    {
        java.util.Map $r0;

        $r0 = <org.apache.log4j.lf5.LogLevel: java.util.Map _logLevelColorMap>;

        return $r0;
    }

    protected int getPrecedence()
    {
        int $i0;
        org.apache.log4j.lf5.LogLevel r0;

        r0 := @this: org.apache.log4j.lf5.LogLevel;

        $i0 = r0.<org.apache.log4j.lf5.LogLevel: int _precedence>;

        return $i0;
    }

    static void <clinit>()
    {
        java.awt.Color $r43;
        java.util.Map $r45, $r48;
        java.util.HashMap $r11, $r38, $r40;
        int $i0, $i1, i2, i3;
        java.lang.String $r49;
        org.apache.log4j.lf5.LogLevel $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r44, $r47, $r51;
        org.apache.log4j.lf5.LogLevel[] $r12, $r18, $r26, $r39, $r41, $r42, $r46, $r50;

        $r0 = new org.apache.log4j.lf5.LogLevel;

        specialinvoke $r0.<org.apache.log4j.lf5.LogLevel: void <init>(java.lang.String,int)>("FATAL", 0);

        <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel FATAL> = $r0;

        $r1 = new org.apache.log4j.lf5.LogLevel;

        specialinvoke $r1.<org.apache.log4j.lf5.LogLevel: void <init>(java.lang.String,int)>("ERROR", 1);

        <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel ERROR> = $r1;

        $r2 = new org.apache.log4j.lf5.LogLevel;

        specialinvoke $r2.<org.apache.log4j.lf5.LogLevel: void <init>(java.lang.String,int)>("WARN", 2);

        <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel WARN> = $r2;

        $r3 = new org.apache.log4j.lf5.LogLevel;

        specialinvoke $r3.<org.apache.log4j.lf5.LogLevel: void <init>(java.lang.String,int)>("INFO", 3);

        <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel INFO> = $r3;

        $r4 = new org.apache.log4j.lf5.LogLevel;

        specialinvoke $r4.<org.apache.log4j.lf5.LogLevel: void <init>(java.lang.String,int)>("DEBUG", 4);

        <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel DEBUG> = $r4;

        $r5 = new org.apache.log4j.lf5.LogLevel;

        specialinvoke $r5.<org.apache.log4j.lf5.LogLevel: void <init>(java.lang.String,int)>("SEVERE", 1);

        <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel SEVERE> = $r5;

        $r6 = new org.apache.log4j.lf5.LogLevel;

        specialinvoke $r6.<org.apache.log4j.lf5.LogLevel: void <init>(java.lang.String,int)>("WARNING", 2);

        <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel WARNING> = $r6;

        $r7 = new org.apache.log4j.lf5.LogLevel;

        specialinvoke $r7.<org.apache.log4j.lf5.LogLevel: void <init>(java.lang.String,int)>("CONFIG", 4);

        <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel CONFIG> = $r7;

        $r8 = new org.apache.log4j.lf5.LogLevel;

        specialinvoke $r8.<org.apache.log4j.lf5.LogLevel: void <init>(java.lang.String,int)>("FINE", 5);

        <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel FINE> = $r8;

        $r9 = new org.apache.log4j.lf5.LogLevel;

        specialinvoke $r9.<org.apache.log4j.lf5.LogLevel: void <init>(java.lang.String,int)>("FINER", 6);

        <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel FINER> = $r9;

        $r10 = new org.apache.log4j.lf5.LogLevel;

        specialinvoke $r10.<org.apache.log4j.lf5.LogLevel: void <init>(java.lang.String,int)>("FINEST", 7);

        <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel FINEST> = $r10;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        <org.apache.log4j.lf5.LogLevel: java.util.Map _registeredLogLevelMap> = $r11;

        $r12 = newarray (org.apache.log4j.lf5.LogLevel)[5];

        $r13 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel FATAL>;

        $r12[0] = $r13;

        $r14 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel ERROR>;

        $r12[1] = $r14;

        $r15 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel WARN>;

        $r12[2] = $r15;

        $r16 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel INFO>;

        $r12[3] = $r16;

        $r17 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel DEBUG>;

        $r12[4] = $r17;

        <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel[] _log4JLevels> = $r12;

        $r18 = newarray (org.apache.log4j.lf5.LogLevel)[7];

        $r19 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel SEVERE>;

        $r18[0] = $r19;

        $r20 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel WARNING>;

        $r18[1] = $r20;

        $r21 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel INFO>;

        $r18[2] = $r21;

        $r22 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel CONFIG>;

        $r18[3] = $r22;

        $r23 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel FINE>;

        $r18[4] = $r23;

        $r24 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel FINER>;

        $r18[5] = $r24;

        $r25 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel FINEST>;

        $r18[6] = $r25;

        <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel[] _jdk14Levels> = $r18;

        $r26 = newarray (org.apache.log4j.lf5.LogLevel)[11];

        $r27 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel FATAL>;

        $r26[0] = $r27;

        $r28 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel ERROR>;

        $r26[1] = $r28;

        $r29 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel WARN>;

        $r26[2] = $r29;

        $r30 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel INFO>;

        $r26[3] = $r30;

        $r31 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel DEBUG>;

        $r26[4] = $r31;

        $r32 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel SEVERE>;

        $r26[5] = $r32;

        $r33 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel WARNING>;

        $r26[6] = $r33;

        $r34 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel CONFIG>;

        $r26[7] = $r34;

        $r35 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel FINE>;

        $r26[8] = $r35;

        $r36 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel FINER>;

        $r26[9] = $r36;

        $r37 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel FINEST>;

        $r26[10] = $r37;

        <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel[] _allDefaultLevels> = $r26;

        $r38 = new java.util.HashMap;

        specialinvoke $r38.<java.util.HashMap: void <init>()>();

        <org.apache.log4j.lf5.LogLevel: java.util.Map _logLevelMap> = $r38;

        i2 = 0;

     label1:
        $r39 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel[] _allDefaultLevels>;

        $i0 = lengthof $r39;

        if i2 >= $i0 goto label2;

        $r48 = <org.apache.log4j.lf5.LogLevel: java.util.Map _logLevelMap>;

        $r46 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel[] _allDefaultLevels>;

        $r47 = $r46[i2];

        $r49 = virtualinvoke $r47.<org.apache.log4j.lf5.LogLevel: java.lang.String getLabel()>();

        $r50 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel[] _allDefaultLevels>;

        $r51 = $r50[i2];

        interfaceinvoke $r48.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r49, $r51);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r40 = new java.util.HashMap;

        specialinvoke $r40.<java.util.HashMap: void <init>()>();

        <org.apache.log4j.lf5.LogLevel: java.util.Map _logLevelColorMap> = $r40;

        i3 = 0;

     label3:
        $r41 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel[] _allDefaultLevels>;

        $i1 = lengthof $r41;

        if i3 >= $i1 goto label4;

        $r45 = <org.apache.log4j.lf5.LogLevel: java.util.Map _logLevelColorMap>;

        $r42 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel[] _allDefaultLevels>;

        $r44 = $r42[i3];

        $r43 = <java.awt.Color: java.awt.Color black>;

        interfaceinvoke $r45.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r44, $r43);

        i3 = i3 + 1;

        goto label3;

     label4:
        return;
    }
}
