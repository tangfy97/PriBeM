class org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip$3 extends java.lang.Object implements org.waveprotocol.wave.model.document.MutableDocument$Action
{
    final java.util.Map val$anchors;
    final org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip this$0;

    void <init>(org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip, java.util.Map)
    {
        org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip$3 r0;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip r1;
        java.util.Map r2;

        r0 := @this: org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip$3;

        r1 := @parameter0: org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip;

        r2 := @parameter1: java.util.Map;

        r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip$3: org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip this$0> = r1;

        r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip$3: java.util.Map val$anchors> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void exec(org.waveprotocol.wave.model.document.MutableDocument)
    {
        org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip$3 r8;
        java.lang.Integer $r11;
        java.lang.Iterable $r2;
        java.util.Map $r9, $r10;
        int $i0;
        java.lang.String $r5, $r6, $r7;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r3;
        org.waveprotocol.wave.model.document.MutableDocument r0;
        java.lang.Object $r1, $r4;

        r8 := @this: org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip$3;

        r0 := @parameter0: org.waveprotocol.wave.model.document.MutableDocument;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.Object getDocumentElement()>();

        $r2 = staticinvoke <org.waveprotocol.wave.model.document.util.DocIterate: java.lang.Iterable deepElements(org.waveprotocol.wave.model.document.ReadableDocument,java.lang.Object,java.lang.Object)>(r0, $r1, null);

        $r3 = interfaceinvoke $r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = "reply";

        $r6 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.String getTagName(java.lang.Object)>($r4);

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label2;

        $r7 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.String getAttribute(java.lang.Object,java.lang.String)>($r4, "id");

        if $r7 == null goto label2;

        $r9 = r8.<org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip$3: java.util.Map val$anchors>;

        $z2 = interfaceinvoke $r9.<java.util.Map: boolean containsKey(java.lang.Object)>($r7);

        if $z2 != 0 goto label2;

        $r10 = r8.<org.waveprotocol.wave.model.conversation.WaveletBasedConversationBlip$3: java.util.Map val$anchors>;

        $i0 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.MutableDocument: int getLocation(java.lang.Object)>($r4);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r11);

     label2:
        goto label1;

     label3:
        return;
    }
}
