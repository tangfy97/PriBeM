public final class org.apache.lucene.analysis.ga.IrishLowerCaseFilter extends org.apache.lucene.analysis.TokenFilter
{
    private final org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt;

    public void <init>(org.apache.lucene.analysis.TokenStream)
    {
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r3;
        org.apache.lucene.analysis.TokenStream r1;
        org.apache.lucene.analysis.ga.IrishLowerCaseFilter r0;
        org.apache.lucene.util.Attribute $r2;

        r0 := @this: org.apache.lucene.analysis.ga.IrishLowerCaseFilter;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        specialinvoke r0.<org.apache.lucene.analysis.TokenFilter: void <init>(org.apache.lucene.analysis.TokenStream)>(r1);

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.ga.IrishLowerCaseFilter: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        $r3 = (org.apache.lucene.analysis.tokenattributes.CharTermAttribute) $r2;

        r0.<org.apache.lucene.analysis.ga.IrishLowerCaseFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt> = $r3;

        return;
    }

    public boolean incrementToken() throws java.io.IOException
    {
        byte b12;
        int $i0, $i3, $i6, $i7, $i8, i11, i13, i14, $i15, $i16, $i17, $i19, $i20;
        boolean $z0, $z1;
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r2, $r4, $r5, $r7;
        org.apache.lucene.analysis.TokenStream $r1;
        char $c1, $c2, $c4, $c5, $c9, $c10;
        org.apache.lucene.analysis.ga.IrishLowerCaseFilter r0;
        char[] $r3, $r6, r8;

        r0 := @this: org.apache.lucene.analysis.ga.IrishLowerCaseFilter;

        $r1 = r0.<org.apache.lucene.analysis.ga.IrishLowerCaseFilter: org.apache.lucene.analysis.TokenStream input>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.analysis.TokenStream: boolean incrementToken()>();

        if $z0 == 0 goto label7;

        $r2 = r0.<org.apache.lucene.analysis.ga.IrishLowerCaseFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $r3 = interfaceinvoke $r2.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: char[] buffer()>();

        r8 = $r3;

        $r4 = r0.<org.apache.lucene.analysis.ga.IrishLowerCaseFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $i0 = interfaceinvoke $r4.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: int length()>();

        i11 = $i0;

        b12 = 0;

        if $i0 <= 1 goto label4;

        $c4 = $r3[0];

        $i15 = (int) $c4;

        if $i15 == 110 goto label1;

        $c10 = $r3[0];

        $i16 = (int) $c10;

        if $i16 != 116 goto label4;

     label1:
        $c5 = $r3[1];

        $i17 = (int) $c5;

        $z1 = specialinvoke r0.<org.apache.lucene.analysis.ga.IrishLowerCaseFilter: boolean isUpperVowel(int)>($i17);

        if $z1 == 0 goto label4;

        $r5 = r0.<org.apache.lucene.analysis.ga.IrishLowerCaseFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $i6 = $i0 + 1;

        $r6 = interfaceinvoke $r5.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: char[] resizeBuffer(int)>($i6);

        r8 = $r6;

        i13 = $i0;

     label2:
        if i13 <= 1 goto label3;

        $i8 = i13 - 1;

        $c9 = $r6[$i8];

        $r6[i13] = $c9;

        $i19 = (int) -1;

        i13 = i13 + $i19;

        goto label2;

     label3:
        $r6[1] = 45;

        $r7 = r0.<org.apache.lucene.analysis.ga.IrishLowerCaseFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $i7 = $i0 + 1;

        interfaceinvoke $r7.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: org.apache.lucene.analysis.tokenattributes.CharTermAttribute setLength(int)>($i7);

        b12 = 2;

        i11 = $i0 + 1;

     label4:
        i14 = b12;

     label5:
        if i14 >= i11 goto label6;

        $c1 = r8[i14];

        $c2 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c1);

        $i20 = (int) $c2;

        $i3 = staticinvoke <java.lang.Character: int toChars(int,char[],int)>($i20, r8, i14);

        i14 = i14 + $i3;

        goto label5;

     label6:
        return 1;

     label7:
        return 0;
    }

    private boolean isUpperVowel(int)
    {
        int i0;
        org.apache.lucene.analysis.ga.IrishLowerCaseFilter r0;

        r0 := @this: org.apache.lucene.analysis.ga.IrishLowerCaseFilter;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 65: goto label1;
            case 69: goto label1;
            case 73: goto label1;
            case 79: goto label1;
            case 85: goto label1;
            case 193: goto label1;
            case 201: goto label1;
            case 205: goto label1;
            case 211: goto label1;
            case 218: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }
}
