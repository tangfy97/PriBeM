public final class com.ctc.wstx.io.StreamBootstrapper extends com.ctc.wstx.io.InputBootstrapper
{
    static final int MIN_BUF_SIZE;
    final java.io.InputStream mIn;
    private byte[] mByteBuffer;
    private int mInputPtr;
    private int mInputLen;
    boolean mBigEndian;
    boolean mHadBOM;
    boolean mByteSizeFound;
    int mBytesPerChar;
    boolean mEBCDIC;
    java.lang.String mInputEncoding;
    int[] mSingleByteTranslation;

    private void <init>(java.io.InputStream, java.lang.String, java.lang.String)
    {
        com.ctc.wstx.io.StreamBootstrapper r0;
        java.lang.String r1, r2;
        java.io.InputStream r3;

        r0 := @this: com.ctc.wstx.io.StreamBootstrapper;

        r3 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<com.ctc.wstx.io.InputBootstrapper: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        r0.<com.ctc.wstx.io.StreamBootstrapper: boolean mBigEndian> = 1;

        r0.<com.ctc.wstx.io.StreamBootstrapper: boolean mHadBOM> = 0;

        r0.<com.ctc.wstx.io.StreamBootstrapper: boolean mByteSizeFound> = 0;

        r0.<com.ctc.wstx.io.StreamBootstrapper: boolean mEBCDIC> = 0;

        r0.<com.ctc.wstx.io.StreamBootstrapper: java.lang.String mInputEncoding> = null;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int[] mSingleByteTranslation> = null;

        r0.<com.ctc.wstx.io.StreamBootstrapper: java.io.InputStream mIn> = r3;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen> = 0;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = 0;

        return;
    }

    public static com.ctc.wstx.io.StreamBootstrapper getInstance(java.io.InputStream, java.lang.String, java.lang.String)
    {
        com.ctc.wstx.io.StreamBootstrapper $r0;
        java.lang.String r2, r3;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r0 = new com.ctc.wstx.io.StreamBootstrapper;

        specialinvoke $r0.<com.ctc.wstx.io.StreamBootstrapper: void <init>(java.io.InputStream,java.lang.String,java.lang.String)>(r1, r2, r3);

        return $r0;
    }

    public java.io.Reader bootstrapInput(com.ctc.wstx.api.ReaderConfig, boolean, int) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        byte[] $r2, $r4, $r6, $r9, $r12, $r32;
        com.ctc.wstx.api.ReaderConfig r0;
        com.ctc.wstx.io.AsciiReader $r5;
        com.ctc.wstx.io.StreamBootstrapper r1;
        com.ctc.wstx.io.BaseReader r28;
        com.ctc.wstx.io.UTF32Reader $r30;
        java.lang.StringBuffer $r20, $r21, $r23;
        java.lang.String $r14, $r15, $r16, $r17, $r22, $r24, r25, $r26, $r27, $r29, $r36, $r37;
        java.io.InputStreamReader $r35;
        com.ctc.wstx.io.MergedStream $r3;
        com.ctc.wstx.exc.WstxIOException $r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8, $z9, $z10;
        com.ctc.wstx.io.ISOLatinReader $r8;
        java.io.UnsupportedEncodingException $r18;
        com.ctc.wstx.io.UTF8Reader $r11;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i15, $i16, $i17;
        java.io.InputStream $r7, $r10, $r13, $r31, r33;

        r1 := @this: com.ctc.wstx.io.StreamBootstrapper;

        r0 := @parameter0: com.ctc.wstx.api.ReaderConfig;

        z7 := @parameter1: boolean;

        i1 := @parameter2: int;

        r25 = null;

        $i0 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: int getInputBufferLength()>();

        i14 = $i0;

        if $i0 >= 128 goto label01;

        i14 = 128;

     label01:
        $r2 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: byte[] allocFullBBuffer(int)>(i14);

        r1.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer> = $r2;

        virtualinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: void resolveStreamEncoding()>();

        $z0 = virtualinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: boolean hasXmlDecl()>();

        if $z0 == 0 goto label02;

        virtualinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: void readXmlDecl(boolean,int)>(z7, i1);

        $r16 = r1.<com.ctc.wstx.io.StreamBootstrapper: java.lang.String mFoundEncoding>;

        if $r16 == null goto label05;

        $r17 = r1.<com.ctc.wstx.io.StreamBootstrapper: java.lang.String mFoundEncoding>;

        r25 = virtualinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: java.lang.String verifyXmlEncoding(java.lang.String)>($r17);

        goto label05;

     label02:
        if 272 != i1 goto label03;

        $z8 = 1;

        goto label04;

     label03:
        $z8 = 0;

     label04:
        r1.<com.ctc.wstx.io.StreamBootstrapper: boolean mXml11Handling> = $z8;

     label05:
        if r25 != null goto label14;

        $z4 = r1.<com.ctc.wstx.io.StreamBootstrapper: boolean mEBCDIC>;

        if $z4 == 0 goto label07;

        $r14 = r1.<com.ctc.wstx.io.StreamBootstrapper: java.lang.String mFoundEncoding>;

        if $r14 == null goto label06;

        $r15 = r1.<com.ctc.wstx.io.StreamBootstrapper: java.lang.String mFoundEncoding>;

        $i13 = virtualinvoke $r15.<java.lang.String: int length()>();

        if $i13 != 0 goto label07;

     label06:
        virtualinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: void reportXmlProblem(java.lang.String)>("Missing encoding declaration: underlying encoding looks like an EBCDIC variant, but no xml encoding declaration found");

     label07:
        $i15 = r1.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        if $i15 != 2 goto label10;

        $z6 = r1.<com.ctc.wstx.io.StreamBootstrapper: boolean mBigEndian>;

        if $z6 == 0 goto label08;

        $r26 = "UTF-16BE";

        goto label09;

     label08:
        $r26 = "UTF-16LE";

     label09:
        r25 = $r26;

        goto label14;

     label10:
        $i12 = r1.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        if $i12 != 4 goto label13;

        $z5 = r1.<com.ctc.wstx.io.StreamBootstrapper: boolean mBigEndian>;

        if $z5 == 0 goto label11;

        $r27 = "UTF-32BE";

        goto label12;

     label11:
        $r27 = "UTF-32LE";

     label12:
        r25 = $r27;

        goto label14;

     label13:
        r25 = "UTF-8";

     label14:
        r1.<com.ctc.wstx.io.StreamBootstrapper: java.lang.String mInputEncoding> = r25;

        if r25 != "UTF-8" goto label15;

        $r11 = new com.ctc.wstx.io.UTF8Reader;

        $r13 = r1.<com.ctc.wstx.io.StreamBootstrapper: java.io.InputStream mIn>;

        $r12 = r1.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $i11 = r1.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i10 = r1.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen>;

        specialinvoke $r11.<com.ctc.wstx.io.UTF8Reader: void <init>(com.ctc.wstx.api.ReaderConfig,java.io.InputStream,byte[],int,int)>(r0, $r13, $r12, $i11, $i10);

        r28 = $r11;

        goto label28;

     label15:
        if r25 != "ISO-8859-1" goto label16;

        $r8 = new com.ctc.wstx.io.ISOLatinReader;

        $r10 = r1.<com.ctc.wstx.io.StreamBootstrapper: java.io.InputStream mIn>;

        $r9 = r1.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $i9 = r1.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i8 = r1.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen>;

        specialinvoke $r8.<com.ctc.wstx.io.ISOLatinReader: void <init>(com.ctc.wstx.api.ReaderConfig,java.io.InputStream,byte[],int,int)>(r0, $r10, $r9, $i9, $i8);

        r28 = $r8;

        goto label28;

     label16:
        if r25 != "US-ASCII" goto label17;

        $r5 = new com.ctc.wstx.io.AsciiReader;

        $r7 = r1.<com.ctc.wstx.io.StreamBootstrapper: java.io.InputStream mIn>;

        $r6 = r1.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $i7 = r1.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i6 = r1.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen>;

        specialinvoke $r5.<com.ctc.wstx.io.AsciiReader: void <init>(com.ctc.wstx.api.ReaderConfig,java.io.InputStream,byte[],int,int)>(r0, $r7, $r6, $i7, $i6);

        r28 = $r5;

        goto label28;

     label17:
        $z1 = virtualinvoke r25.<java.lang.String: boolean startsWith(java.lang.String)>("UTF-32");

        if $z1 == 0 goto label21;

        if r25 != "UTF-32" goto label20;

        $z3 = r1.<com.ctc.wstx.io.StreamBootstrapper: boolean mBigEndian>;

        if $z3 == 0 goto label18;

        $r29 = "UTF-32BE";

        goto label19;

     label18:
        $r29 = "UTF-32LE";

     label19:
        r1.<com.ctc.wstx.io.StreamBootstrapper: java.lang.String mInputEncoding> = $r29;

     label20:
        $r30 = new com.ctc.wstx.io.UTF32Reader;

        $r31 = r1.<com.ctc.wstx.io.StreamBootstrapper: java.io.InputStream mIn>;

        $r32 = r1.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $i16 = r1.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i17 = r1.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen>;

        $z9 = r1.<com.ctc.wstx.io.StreamBootstrapper: boolean mBigEndian>;

        specialinvoke $r30.<com.ctc.wstx.io.UTF32Reader: void <init>(com.ctc.wstx.api.ReaderConfig,java.io.InputStream,byte[],int,int,boolean)>(r0, $r31, $r32, $i16, $i17, $z9);

        r28 = $r30;

        goto label28;

     label21:
        r33 = r1.<com.ctc.wstx.io.StreamBootstrapper: java.io.InputStream mIn>;

        $i3 = r1.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i2 = r1.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen>;

        if $i3 >= $i2 goto label22;

        $r3 = new com.ctc.wstx.io.MergedStream;

        $r4 = r1.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $i5 = r1.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i4 = r1.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen>;

        specialinvoke $r3.<com.ctc.wstx.io.MergedStream: void <init>(com.ctc.wstx.api.ReaderConfig,java.io.InputStream,byte[],int,int)>(r0, r33, $r4, $i5, $i4);

        r33 = $r3;

     label22:
        if r25 != "UTF-16" goto label25;

        $z2 = r1.<com.ctc.wstx.io.StreamBootstrapper: boolean mBigEndian>;

        if $z2 == 0 goto label23;

        $r37 = "UTF-16BE";

        $r36 = "UTF-16BE";

        goto label24;

     label23:
        $r37 = "UTF-16LE";

        $r36 = "UTF-16LE";

     label24:
        r25 = $r37;

        r1.<com.ctc.wstx.io.StreamBootstrapper: java.lang.String mInputEncoding> = $r36;

     label25:
        $r35 = new java.io.InputStreamReader;

        specialinvoke $r35.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r33, r25);

     label26:
        return $r35;

     label27:
        $r18 := @caughtexception;

        $r19 = new com.ctc.wstx.exc.WstxIOException;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unsupported encoding: ");

        $r22 = virtualinvoke $r18.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r19.<com.ctc.wstx.exc.WstxIOException: void <init>(java.lang.String)>($r24);

        throw $r19;

     label28:
        $z10 = r1.<com.ctc.wstx.io.StreamBootstrapper: boolean mXml11Handling>;

        if $z10 == 0 goto label29;

        virtualinvoke r28.<com.ctc.wstx.io.BaseReader: void setXmlCompliancy(int)>(272);

     label29:
        return r28;

        catch java.io.UnsupportedEncodingException from label25 to label26 with label27;
    }

    public java.lang.String getInputEncoding()
    {
        com.ctc.wstx.io.StreamBootstrapper r0;
        java.lang.String $r1;

        r0 := @this: com.ctc.wstx.io.StreamBootstrapper;

        $r1 = r0.<com.ctc.wstx.io.StreamBootstrapper: java.lang.String mInputEncoding>;

        return $r1;
    }

    public int getInputTotal()
    {
        com.ctc.wstx.io.StreamBootstrapper r0;
        int $i0, $i1, $i2, $i3, i4;

        r0 := @this: com.ctc.wstx.io.StreamBootstrapper;

        $i1 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputProcessed>;

        $i0 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        i4 = $i1 + $i0;

        $i2 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        if $i2 <= 1 goto label1;

        $i3 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        i4 = i4 / $i3;

     label1:
        return i4;
    }

    public int getInputColumn()
    {
        com.ctc.wstx.io.StreamBootstrapper r0;
        int $i0, $i1, $i2, $i3, i4;

        r0 := @this: com.ctc.wstx.io.StreamBootstrapper;

        $i1 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i0 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputRowStart>;

        i4 = $i1 - $i0;

        $i2 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        if $i2 <= 1 goto label1;

        $i3 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        i4 = i4 / $i3;

     label1:
        return i4;
    }

    protected void resolveStreamEncoding() throws java.io.IOException, com.ctc.wstx.exc.WstxException
    {
        byte[] $r1, $r2, $r3, $r4;
        byte $b0, $b1, $b5, $b9;
        int[] $r5;
        com.ctc.wstx.io.StreamBootstrapper r0;
        boolean $z0, $z1, $z2, $z3;
        short $s2, $s6, $s10, $s21, $s23, $s25;
        int $i3, $i4, $i7, $i8, $i11, i12, $i13, $i14, $i15, i16, $i17, $i18, $i19, $i20, $i22, $i24, $i26, $i28, $i30, $i32;

        r0 := @this: com.ctc.wstx.io.StreamBootstrapper;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar> = 0;

        r0.<com.ctc.wstx.io.StreamBootstrapper: boolean mBigEndian> = 1;

        $z0 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: boolean ensureLoaded(int)>(4);

        if $z0 == 0 goto label20;

        $r1 = r0.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $b0 = $r1[0];

        $i20 = (int) $b0;

        $i4 = $i20 << 24;

        $r2 = r0.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $b1 = $r2[1];

        $s21 = (short) $b1;

        $s2 = $s21 & 255;

        $i22 = (int) $s2;

        $i3 = $i22 << 16;

        $i8 = $i4 | $i3;

        $r3 = r0.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $b5 = $r3[2];

        $s23 = (short) $b5;

        $s6 = $s23 & 255;

        $i24 = (int) $s6;

        $i7 = $i24 << 8;

        $i11 = $i8 | $i7;

        $r4 = r0.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $b9 = $r4[3];

        $s25 = (short) $b9;

        $s10 = $s25 & 255;

        $i26 = (int) $s10;

        i12 = $i11 | $i26;

        lookupswitch(i12)
        {
            case -16842752: goto label04;
            case -131072: goto label02;
            case 65279: goto label01;
            case 65534: goto label03;
            default: goto label05;
        };

     label01:
        r0.<com.ctc.wstx.io.StreamBootstrapper: boolean mBigEndian> = 1;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar> = 4;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = 4;

        goto label17;

     label02:
        r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar> = 4;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = 4;

        r0.<com.ctc.wstx.io.StreamBootstrapper: boolean mBigEndian> = 0;

        goto label17;

     label03:
        specialinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: void reportWeirdUCS4(java.lang.String)>("2143");

        goto label17;

     label04:
        specialinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: void reportWeirdUCS4(java.lang.String)>("3412");

        goto label17;

     label05:
        i16 = i12 >>> 16;

        $i28 = (int) 65279;

        if i16 != $i28 goto label06;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar> = 2;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = 2;

        r0.<com.ctc.wstx.io.StreamBootstrapper: boolean mBigEndian> = 1;

        goto label17;

     label06:
        $i30 = (int) 65534;

        if i16 != $i30 goto label07;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar> = 2;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = 2;

        r0.<com.ctc.wstx.io.StreamBootstrapper: boolean mBigEndian> = 0;

        goto label17;

     label07:
        $i17 = i12 >>> 8;

        if $i17 != 15711167 goto label08;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = 3;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar> = 1;

        r0.<com.ctc.wstx.io.StreamBootstrapper: boolean mBigEndian> = 1;

        goto label17;

     label08:
        lookupswitch(i12)
        {
            case 60: goto label09;
            case 15360: goto label11;
            case 3932160: goto label12;
            case 3932223: goto label13;
            case 1006632960: goto label10;
            case 1006649088: goto label14;
            case 1010792557: goto label15;
            case 1282385812: goto label16;
            default: goto label17;
        };

     label09:
        r0.<com.ctc.wstx.io.StreamBootstrapper: boolean mBigEndian> = 1;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar> = 4;

        goto label17;

     label10:
        r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar> = 4;

        r0.<com.ctc.wstx.io.StreamBootstrapper: boolean mBigEndian> = 0;

        goto label17;

     label11:
        specialinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: void reportWeirdUCS4(java.lang.String)>("2143");

        goto label17;

     label12:
        specialinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: void reportWeirdUCS4(java.lang.String)>("3412");

        goto label17;

     label13:
        r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar> = 2;

        r0.<com.ctc.wstx.io.StreamBootstrapper: boolean mBigEndian> = 1;

        goto label17;

     label14:
        r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar> = 2;

        r0.<com.ctc.wstx.io.StreamBootstrapper: boolean mBigEndian> = 0;

        goto label17;

     label15:
        r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar> = 1;

        r0.<com.ctc.wstx.io.StreamBootstrapper: boolean mBigEndian> = 1;

        goto label17;

     label16:
        $i32 = (int) -1;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar> = $i32;

        r0.<com.ctc.wstx.io.StreamBootstrapper: boolean mEBCDIC> = 1;

        $r5 = staticinvoke <com.ctc.wstx.io.EBCDICCodec: int[] getCp037Mapping()>();

        r0.<com.ctc.wstx.io.StreamBootstrapper: int[] mSingleByteTranslation> = $r5;

        goto label17;

     label17:
        $i18 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        if $i18 <= 0 goto label18;

        $z2 = 1;

        goto label19;

     label18:
        $z2 = 0;

     label19:
        r0.<com.ctc.wstx.io.StreamBootstrapper: boolean mHadBOM> = $z2;

        $i13 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i14 = neg $i13;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputProcessed> = $i14;

        $i15 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputRowStart> = $i15;

     label20:
        $i19 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        if $i19 == 0 goto label21;

        $z3 = 1;

        goto label22;

     label21:
        $z3 = 0;

     label22:
        r0.<com.ctc.wstx.io.StreamBootstrapper: boolean mByteSizeFound> = $z3;

        $z1 = r0.<com.ctc.wstx.io.StreamBootstrapper: boolean mByteSizeFound>;

        if $z1 != 0 goto label23;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar> = 1;

        r0.<com.ctc.wstx.io.StreamBootstrapper: boolean mBigEndian> = 1;

     label23:
        return;
    }

    protected java.lang.String verifyXmlEncoding(java.lang.String) throws com.ctc.wstx.exc.WstxException
    {
        com.ctc.wstx.io.StreamBootstrapper r1;
        java.lang.String $r0, r2;

        r1 := @this: com.ctc.wstx.io.StreamBootstrapper;

        r2 := @parameter0: java.lang.String;

        $r0 = staticinvoke <com.ctc.wstx.io.CharsetNames: java.lang.String normalize(java.lang.String)>(r2);

        if $r0 != "UTF-8" goto label1;

        specialinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: void verifyEncoding(java.lang.String,int)>($r0, 1);

        goto label9;

     label1:
        if $r0 != "ISO-8859-1" goto label2;

        specialinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: void verifyEncoding(java.lang.String,int)>($r0, 1);

        goto label9;

     label2:
        if $r0 != "US-ASCII" goto label3;

        specialinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: void verifyEncoding(java.lang.String,int)>($r0, 1);

        goto label9;

     label3:
        if $r0 != "UTF-16" goto label4;

        specialinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: void verifyEncoding(java.lang.String,int)>($r0, 2);

        goto label9;

     label4:
        if $r0 != "UTF-16LE" goto label5;

        specialinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: void verifyEncoding(java.lang.String,int,boolean)>($r0, 2, 0);

        goto label9;

     label5:
        if $r0 != "UTF-16BE" goto label6;

        specialinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: void verifyEncoding(java.lang.String,int,boolean)>($r0, 2, 1);

        goto label9;

     label6:
        if $r0 != "UTF-32" goto label7;

        specialinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: void verifyEncoding(java.lang.String,int)>($r0, 4);

        goto label9;

     label7:
        if $r0 != "UTF-32LE" goto label8;

        specialinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: void verifyEncoding(java.lang.String,int,boolean)>($r0, 4, 0);

        goto label9;

     label8:
        if $r0 != "UTF-32BE" goto label9;

        specialinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: void verifyEncoding(java.lang.String,int,boolean)>($r0, 4, 1);

     label9:
        return $r0;
    }

    protected boolean ensureLoaded(int) throws java.io.IOException
    {
        byte[] $r1, $r2;
        com.ctc.wstx.io.StreamBootstrapper r0;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        java.io.InputStream $r3;

        r0 := @this: com.ctc.wstx.io.StreamBootstrapper;

        i2 := @parameter0: int;

        $i1 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen>;

        $i0 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        i10 = $i1 - $i0;

     label1:
        if i10 >= i2 goto label3;

        $r3 = r0.<com.ctc.wstx.io.StreamBootstrapper: java.io.InputStream mIn>;

        $r2 = r0.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $i6 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen>;

        $r1 = r0.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $i4 = lengthof $r1;

        $i3 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen>;

        $i5 = $i4 - $i3;

        $i7 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r2, $i6, $i5);

        if $i7 >= 1 goto label2;

        return 0;

     label2:
        $i8 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen>;

        $i9 = $i8 + $i7;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen> = $i9;

        i10 = i10 + $i7;

        goto label1;

     label3:
        return 1;
    }

    protected void loadMore() throws java.io.IOException, com.ctc.wstx.exc.WstxException
    {
        byte[] $r1, $r2;
        javax.xml.stream.Location $r5;
        com.ctc.wstx.io.StreamBootstrapper r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        com.ctc.wstx.exc.WstxEOFException $r4;
        java.io.InputStream $r3;

        r0 := @this: com.ctc.wstx.io.StreamBootstrapper;

        $i1 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputProcessed>;

        $i0 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen>;

        $i2 = $i1 + $i0;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputProcessed> = $i2;

        $i4 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputRowStart>;

        $i3 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen>;

        $i5 = $i4 - $i3;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputRowStart> = $i5;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = 0;

        $r3 = r0.<com.ctc.wstx.io.StreamBootstrapper: java.io.InputStream mIn>;

        $r2 = r0.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $r1 = r0.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $i6 = lengthof $r1;

        $i7 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i6);

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen> = $i7;

        $i8 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen>;

        if $i8 >= 1 goto label1;

        $r4 = new com.ctc.wstx.exc.WstxEOFException;

        $r5 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: javax.xml.stream.Location getLocation()>();

        specialinvoke $r4.<com.ctc.wstx.exc.WstxEOFException: void <init>(java.lang.String,javax.xml.stream.Location)>(" in xml declaration", $r5);

        throw $r4;

     label1:
        return;
    }

    protected void pushback()
    {
        com.ctc.wstx.io.StreamBootstrapper r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: com.ctc.wstx.io.StreamBootstrapper;

        $i0 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        if $i0 >= 0 goto label1;

        $i5 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i4 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        $i6 = $i5 + $i4;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = $i6;

        goto label2;

     label1:
        $i2 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i1 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        $i3 = $i2 - $i1;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = $i3;

     label2:
        return;
    }

    protected int getNext() throws java.io.IOException, com.ctc.wstx.exc.WstxException
    {
        byte[] $r1;
        short $s3, $s12;
        byte $b9;
        com.ctc.wstx.io.StreamBootstrapper r0;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i11, $i13;

        r0 := @this: com.ctc.wstx.io.StreamBootstrapper;

        $i0 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        if $i0 == 1 goto label2;

        $i6 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        $i11 = (int) -1;

        if $i6 != $i11 goto label1;

        $i8 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int nextTranslated()>();

        return $i8;

     label1:
        $i7 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int nextMultiByte()>();

        return $i7;

     label2:
        $i2 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i1 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen>;

        if $i2 >= $i1 goto label3;

        $r1 = r0.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $i4 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i5 = $i4 + 1;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = $i5;

        $b9 = $r1[$i4];

        goto label4;

     label3:
        $b9 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: byte nextByte()>();

     label4:
        $s12 = (short) $b9;

        $s3 = $s12 & 255;

        $i13 = (int) $s3;

        return $i13;
    }

    protected int getNextAfterWs(boolean) throws java.io.IOException, com.ctc.wstx.exc.WstxException
    {
        byte[] $r1;
        short $s4, $s18;
        byte $b13;
        com.ctc.wstx.io.StreamBootstrapper r0;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, $i15, $i17, $i19;
        boolean z0;

        r0 := @this: com.ctc.wstx.io.StreamBootstrapper;

        z0 := @parameter0: boolean;

        $i0 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        if $i0 != 1 goto label1;

        i11 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int skipSbWs()>();

        goto label3;

     label1:
        $i1 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        $i15 = (int) -1;

        if $i1 != $i15 goto label2;

        i11 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int skipTranslatedWs()>();

        goto label3;

     label2:
        i11 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int skipMbWs()>();

     label3:
        if z0 == 0 goto label4;

        if i11 != 0 goto label4;

        $i10 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int getNext()>();

        virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: void reportUnexpectedChar(int,java.lang.String)>($i10, "; expected a white space");

     label4:
        $i12 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        if $i12 == 1 goto label6;

        $i7 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        $i17 = (int) -1;

        if $i7 != $i17 goto label5;

        $i9 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int nextTranslated()>();

        return $i9;

     label5:
        $i8 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int nextMultiByte()>();

        return $i8;

     label6:
        $i3 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i2 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen>;

        if $i3 >= $i2 goto label7;

        $r1 = r0.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $i5 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i6 = $i5 + 1;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = $i6;

        $b13 = $r1[$i5];

        goto label8;

     label7:
        $b13 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: byte nextByte()>();

     label8:
        $s18 = (short) $b13;

        $s4 = $s18 & 255;

        $i19 = (int) $s4;

        return $i19;
    }

    protected int checkKeyword(java.lang.String) throws java.io.IOException, com.ctc.wstx.exc.WstxException
    {
        com.ctc.wstx.io.StreamBootstrapper r0;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.io.StreamBootstrapper;

        r1 := @parameter0: java.lang.String;

        $i0 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        if $i0 == 1 goto label2;

        $i2 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        $i6 = (int) -1;

        if $i2 != $i6 goto label1;

        $i4 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int checkTranslatedKeyword(java.lang.String)>(r1);

        return $i4;

     label1:
        $i3 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int checkMbKeyword(java.lang.String)>(r1);

        return $i3;

     label2:
        $i1 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int checkSbKeyword(java.lang.String)>(r1);

        return $i1;
    }

    protected int readQuotedValue(char[], int) throws java.io.IOException, com.ctc.wstx.exc.WstxException
    {
        byte[] $r2;
        byte $b13, b14;
        int i0, $i1, $i2, i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, i12, i15, $i16, $i18, $i20;
        com.ctc.wstx.io.StreamBootstrapper r1;
        boolean z0, z1, $z3, $z4, $z5;
        char $c5;
        char[] r0;

        r1 := @this: com.ctc.wstx.io.StreamBootstrapper;

        r0 := @parameter0: char[];

        i3 := @parameter1: int;

        i12 = 0;

        i0 = lengthof r0;

        $i1 = r1.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        if $i1 != 1 goto label01;

        $z5 = 1;

        $z4 = 1;

        goto label02;

     label01:
        $z5 = 0;

        $z4 = 0;

     label02:
        z0 = $z5;

        if $z4 != 0 goto label03;

        $i11 = r1.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        if $i11 <= 1 goto label03;

        $z3 = 1;

        goto label04;

     label03:
        $z3 = 0;

     label04:
        z1 = $z3;

     label05:
        if i12 >= i0 goto label20;

        if z0 == 0 goto label11;

        $i8 = r1.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i7 = r1.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen>;

        if $i8 >= $i7 goto label06;

        $r2 = r1.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $i9 = r1.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i10 = $i9 + 1;

        r1.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = $i10;

        $b13 = $r2[$i9];

        goto label07;

     label06:
        $b13 = virtualinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: byte nextByte()>();

     label07:
        b14 = $b13;

        if $b13 != 0 goto label08;

        virtualinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: void reportNull()>();

     label08:
        if b14 == 13 goto label09;

        if b14 != 10 goto label10;

     label09:
        virtualinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: void skipSbLF(byte)>(b14);

        b14 = 10;

     label10:
        i15 = b14 & 255;

        goto label15;

     label11:
        if z1 == 0 goto label13;

        $i6 = virtualinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: int nextMultiByte()>();

        i15 = $i6;

        if $i6 == 13 goto label12;

        if $i6 != 10 goto label15;

     label12:
        virtualinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: void skipMbLF(int)>($i6);

        i15 = 10;

        goto label15;

     label13:
        $i2 = virtualinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: int nextTranslated()>();

        i15 = $i2;

        if $i2 == 13 goto label14;

        if $i2 != 10 goto label15;

     label14:
        virtualinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: void skipTranslatedLF(int)>($i2);

        i15 = 10;

     label15:
        if i15 != i3 goto label18;

        if i12 >= i0 goto label16;

        $i16 = i12;

        goto label17;

     label16:
        $i18 = (int) -1;

        $i16 = $i18;

     label17:
        return $i16;

     label18:
        if i12 >= i0 goto label19;

        $i4 = i12;

        i12 = i12 + 1;

        $c5 = (char) i15;

        r0[$i4] = $c5;

     label19:
        goto label05;

     label20:
        $i20 = (int) -1;

        return $i20;
    }

    protected boolean hasXmlDecl() throws java.io.IOException, com.ctc.wstx.exc.WstxException
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6;
        byte $b17, $b20, $b23, $b26, $b29, $b32;
        com.ctc.wstx.io.StreamBootstrapper r0;
        boolean $z0, $z1, $z2;
        short $s33, $s43;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i21, $i22, $i24, $i25, $i27, $i28, $i30, $i31, $i34, $i35, i36, i37, $i38, $i39, $i40, $i41, $i42, $i44, $i46;

        r0 := @this: com.ctc.wstx.io.StreamBootstrapper;

        $i0 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        if $i0 != 1 goto label1;

        $z2 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: boolean ensureLoaded(int)>(6);

        if $z2 == 0 goto label5;

        $r1 = r0.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $i16 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $b17 = $r1[$i16];

        $i38 = (int) $b17;

        if $i38 != 60 goto label5;

        $r2 = r0.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $i18 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i19 = $i18 + 1;

        $b20 = $r2[$i19];

        $i39 = (int) $b20;

        if $i39 != 63 goto label5;

        $r3 = r0.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $i21 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i22 = $i21 + 2;

        $b23 = $r3[$i22];

        $i40 = (int) $b23;

        if $i40 != 120 goto label5;

        $r4 = r0.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $i24 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i25 = $i24 + 3;

        $b26 = $r4[$i25];

        $i41 = (int) $b26;

        if $i41 != 109 goto label5;

        $r5 = r0.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $i27 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i28 = $i27 + 4;

        $b29 = $r5[$i28];

        $i42 = (int) $b29;

        if $i42 != 108 goto label5;

        $r6 = r0.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $i30 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i31 = $i30 + 5;

        $b32 = $r6[$i31];

        $s43 = (short) $b32;

        $s33 = $s43 & 255;

        $i44 = (int) $s33;

        if $i44 > 32 goto label5;

        $i34 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i35 = $i34 + 6;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = $i35;

        return 1;

     label1:
        $i1 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        $i46 = (int) -1;

        if $i1 != $i46 goto label3;

        $z1 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: boolean ensureLoaded(int)>(6);

        if $z1 == 0 goto label5;

        i36 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i10 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int nextTranslated()>();

        if $i10 != 60 goto label2;

        $i11 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int nextTranslated()>();

        if $i11 != 63 goto label2;

        $i12 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int nextTranslated()>();

        if $i12 != 120 goto label2;

        $i13 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int nextTranslated()>();

        if $i13 != 109 goto label2;

        $i14 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int nextTranslated()>();

        if $i14 != 108 goto label2;

        $i15 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int nextTranslated()>();

        if $i15 > 32 goto label2;

        return 1;

     label2:
        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = i36;

        goto label5;

     label3:
        $i2 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        $i3 = 6 * $i2;

        $z0 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: boolean ensureLoaded(int)>($i3);

        if $z0 == 0 goto label5;

        i37 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i4 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int nextMultiByte()>();

        if $i4 != 60 goto label4;

        $i5 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int nextMultiByte()>();

        if $i5 != 63 goto label4;

        $i6 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int nextMultiByte()>();

        if $i6 != 120 goto label4;

        $i7 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int nextMultiByte()>();

        if $i7 != 109 goto label4;

        $i8 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int nextMultiByte()>();

        if $i8 != 108 goto label4;

        $i9 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int nextMultiByte()>();

        if $i9 > 32 goto label4;

        return 1;

     label4:
        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = i37;

     label5:
        return 0;
    }

    protected javax.xml.stream.Location getLocation()
    {
        com.ctc.wstx.io.StreamBootstrapper r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        com.ctc.wstx.io.WstxInputLocation $r1;
        java.lang.String $r2, $r3;

        r0 := @this: com.ctc.wstx.io.StreamBootstrapper;

        $i1 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputProcessed>;

        $i0 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        i9 = $i1 + $i0;

        $i3 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i2 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputRowStart>;

        i10 = $i3 - $i2;

        $i4 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        if $i4 <= 1 goto label1;

        $i7 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        i9 = i9 / $i7;

        $i8 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        i10 = i10 / $i8;

     label1:
        $r1 = new com.ctc.wstx.io.WstxInputLocation;

        $r3 = r0.<com.ctc.wstx.io.StreamBootstrapper: java.lang.String mPublicId>;

        $r2 = r0.<com.ctc.wstx.io.StreamBootstrapper: java.lang.String mSystemId>;

        $i6 = i9 - 1;

        $i5 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputRow>;

        specialinvoke $r1.<com.ctc.wstx.io.WstxInputLocation: void <init>(com.ctc.wstx.io.WstxInputLocation,java.lang.String,java.lang.String,int,int,int)>(null, $r3, $r2, $i6, $i5, i10);

        return $r1;
    }

    protected byte nextByte() throws java.io.IOException, com.ctc.wstx.exc.WstxException
    {
        byte[] $r1;
        byte $b4;
        com.ctc.wstx.io.StreamBootstrapper r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.ctc.wstx.io.StreamBootstrapper;

        $i1 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i0 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen>;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: void loadMore()>();

     label1:
        $r1 = r0.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $i2 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i3 = $i2 + 1;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = $i3;

        $b4 = $r1[$i2];

        return $b4;
    }

    protected int skipSbWs() throws java.io.IOException, com.ctc.wstx.exc.WstxException
    {
        byte[] $r1;
        short $s3, $s10;
        byte b2, $b9;
        com.ctc.wstx.io.StreamBootstrapper r0;
        int $i0, $i1, $i4, $i5, $i6, $i7, i8, $i11, $i12, $i13;

        r0 := @this: com.ctc.wstx.io.StreamBootstrapper;

        i8 = 0;

     label1:
        $i1 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i0 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen>;

        if $i1 >= $i0 goto label2;

        $r1 = r0.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $i6 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i7 = $i6 + 1;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = $i7;

        $b9 = $r1[$i6];

        goto label3;

     label2:
        $b9 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: byte nextByte()>();

     label3:
        b2 = $b9;

        $s10 = (short) $b9;

        $s3 = $s10 & 255;

        $i11 = (int) $s3;

        if $i11 <= 32 goto label4;

        $i4 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i5 = $i4 - 1;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = $i5;

        goto label8;

     label4:
        $i12 = (int) $b9;

        if $i12 == 13 goto label5;

        $i13 = (int) $b9;

        if $i13 != 10 goto label6;

     label5:
        virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: void skipSbLF(byte)>(b2);

        goto label7;

     label6:
        if $b9 != 0 goto label7;

        virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: void reportNull()>();

     label7:
        i8 = i8 + 1;

        goto label1;

     label8:
        return i8;
    }

    protected void skipSbLF(byte) throws java.io.IOException, com.ctc.wstx.exc.WstxException
    {
        byte[] $r1;
        byte b0, $b7;
        com.ctc.wstx.io.StreamBootstrapper r0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12;

        r0 := @this: com.ctc.wstx.io.StreamBootstrapper;

        b0 := @parameter0: byte;

        $i11 = (int) b0;

        if $i11 != 13 goto label3;

        $i2 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i1 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen>;

        if $i2 >= $i1 goto label1;

        $r1 = r0.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $i5 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i6 = $i5 + 1;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = $i6;

        $b7 = $r1[$i5];

        goto label2;

     label1:
        $b7 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: byte nextByte()>();

     label2:
        $i12 = (int) $b7;

        if $i12 == 10 goto label3;

        $i3 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i4 = $i3 - 1;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = $i4;

     label3:
        $i8 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputRow>;

        $i9 = $i8 + 1;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputRow> = $i9;

        $i10 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputRowStart> = $i10;

        return;
    }

    protected int checkSbKeyword(java.lang.String) throws java.io.IOException, com.ctc.wstx.exc.WstxException
    {
        byte[] $r2;
        short $s4, $s6, $s11, $s14;
        byte b3, $b10;
        int $i0, $i1, $i2, $i7, $i8, i9, $i12, $i13, $i15;
        com.ctc.wstx.io.StreamBootstrapper r1;
        java.lang.String r0;
        char $c5;

        r1 := @this: com.ctc.wstx.io.StreamBootstrapper;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i9 = 1;

     label1:
        if i9 >= $i0 goto label6;

        $i2 = r1.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i1 = r1.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen>;

        if $i2 >= $i1 goto label2;

        $r2 = r1.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $i7 = r1.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i8 = $i7 + 1;

        r1.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = $i8;

        $b10 = $r2[$i7];

        goto label3;

     label2:
        $b10 = virtualinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: byte nextByte()>();

     label3:
        b3 = $b10;

        if $b10 != 0 goto label4;

        virtualinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: void reportNull()>();

     label4:
        $s11 = (short) b3;

        $s4 = $s11 & 255;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9);

        $i12 = (int) $s4;

        $i13 = (int) $c5;

        if $i12 == $i13 goto label5;

        $s14 = (short) b3;

        $s6 = $s14 & 255;

        $i15 = (int) $s6;

        return $i15;

     label5:
        i9 = i9 + 1;

        goto label1;

     label6:
        return 0;
    }

    protected int nextMultiByte() throws java.io.IOException, com.ctc.wstx.exc.WstxException
    {
        byte[] $r1, $r2, $r3, $r4;
        byte b2, b5, b9, $b42, $b43, $b45, $b46;
        com.ctc.wstx.io.StreamBootstrapper r0;
        short $s12, $s15, $s18, $s20, $s23, $s26, $s32, $s34, $s35, $s36, $s47, $s49, $s51, $s52, $s56, $s58, $s60, $s63, $s65, $s67;
        boolean $z0, $z1;
        int $i0, $i1, $i3, $i4, $i6, $i7, $i8, $i10, $i11, $i13, $i14, $i16, $i17, $i19, $i21, $i22, $i24, $i25, $i27, $i28, $i29, $i30, $i31, $i33, $i37, $i38, $i39, $i40, $i41, i44, $i48, $i50, $i53, $i54, $i55, $i57, $i59, $i61, $i62, $i64, $i66, $i68;

        r0 := @this: com.ctc.wstx.io.StreamBootstrapper;

        $i1 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i0 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen>;

        if $i1 >= $i0 goto label01;

        $r4 = r0.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $i40 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i41 = $i40 + 1;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = $i41;

        $b42 = $r4[$i40];

        goto label02;

     label01:
        $b42 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: byte nextByte()>();

     label02:
        b2 = $b42;

        $i4 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i3 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen>;

        if $i4 >= $i3 goto label03;

        $r3 = r0.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $i38 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i39 = $i38 + 1;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = $i39;

        $b43 = $r3[$i38];

        goto label04;

     label03:
        $b43 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: byte nextByte()>();

     label04:
        b5 = $b43;

        $i6 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        if $i6 != 2 goto label06;

        $z1 = r0.<com.ctc.wstx.io.StreamBootstrapper: boolean mBigEndian>;

        if $z1 == 0 goto label05;

        $s47 = (short) b2;

        $s35 = $s47 & 255;

        $i48 = (int) $s35;

        $i37 = $i48 << 8;

        $s49 = (short) $b43;

        $s36 = $s49 & 255;

        $i50 = (int) $s36;

        i44 = $i37 | $i50;

        goto label12;

     label05:
        $s51 = (short) b2;

        $s34 = $s51 & 255;

        $s52 = (short) $b43;

        $s32 = $s52 & 255;

        $i53 = (int) $s32;

        $i33 = $i53 << 8;

        $i54 = (int) $s34;

        i44 = $i54 | $i33;

        goto label12;

     label06:
        $i8 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i7 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen>;

        if $i8 >= $i7 goto label07;

        $r2 = r0.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $i30 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i31 = $i30 + 1;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = $i31;

        $b45 = $r2[$i30];

        goto label08;

     label07:
        $b45 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: byte nextByte()>();

     label08:
        b9 = $b45;

        $i11 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i10 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen>;

        if $i11 >= $i10 goto label09;

        $r1 = r0.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $i28 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i29 = $i28 + 1;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = $i29;

        $b46 = $r1[$i28];

        goto label10;

     label09:
        $b46 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: byte nextByte()>();

     label10:
        $z0 = r0.<com.ctc.wstx.io.StreamBootstrapper: boolean mBigEndian>;

        if $z0 == 0 goto label11;

        $i55 = (int) b2;

        $i22 = $i55 << 24;

        $s56 = (short) b5;

        $s20 = $s56 & 255;

        $i57 = (int) $s20;

        $i21 = $i57 << 16;

        $i25 = $i22 | $i21;

        $s58 = (short) b9;

        $s23 = $s58 & 255;

        $i59 = (int) $s23;

        $i24 = $i59 << 8;

        $i27 = $i25 | $i24;

        $s60 = (short) $b46;

        $s26 = $s60 & 255;

        $i61 = (int) $s26;

        i44 = $i27 | $i61;

        goto label12;

     label11:
        $i62 = (int) $b46;

        $i14 = $i62 << 24;

        $s63 = (short) b9;

        $s12 = $s63 & 255;

        $i64 = (int) $s12;

        $i13 = $i64 << 16;

        $i17 = $i14 | $i13;

        $s65 = (short) b5;

        $s15 = $s65 & 255;

        $i66 = (int) $s15;

        $i16 = $i66 << 8;

        $i19 = $i17 | $i16;

        $s67 = (short) b2;

        $s18 = $s67 & 255;

        $i68 = (int) $s18;

        i44 = $i19 | $i68;

     label12:
        if i44 != 0 goto label13;

        virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: void reportNull()>();

     label13:
        return i44;
    }

    protected int nextTranslated() throws java.io.IOException, com.ctc.wstx.exc.WstxException
    {
        byte[] $r2;
        short $s2, $s8;
        byte $b6;
        int[] $r1;
        com.ctc.wstx.io.StreamBootstrapper r0;
        int $i0, $i1, $i3, $i4, $i5, i7, $i9;

        r0 := @this: com.ctc.wstx.io.StreamBootstrapper;

        $i1 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i0 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputLen>;

        if $i1 >= $i0 goto label1;

        $r2 = r0.<com.ctc.wstx.io.StreamBootstrapper: byte[] mByteBuffer>;

        $i3 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i4 = $i3 + 1;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = $i4;

        $b6 = $r2[$i3];

        goto label2;

     label1:
        $b6 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: byte nextByte()>();

     label2:
        $r1 = r0.<com.ctc.wstx.io.StreamBootstrapper: int[] mSingleByteTranslation>;

        $s8 = (short) $b6;

        $s2 = $s8 & 255;

        $i9 = (int) $s2;

        $i5 = $r1[$i9];

        i7 = $i5;

        if $i5 >= 0 goto label3;

        i7 = neg $i5;

     label3:
        return i7;
    }

    protected int skipMbWs() throws java.io.IOException, com.ctc.wstx.exc.WstxException
    {
        com.ctc.wstx.io.StreamBootstrapper r0;
        int $i0, $i1, $i2, $i3, i4;

        r0 := @this: com.ctc.wstx.io.StreamBootstrapper;

        i4 = 0;

     label1:
        $i0 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int nextMultiByte()>();

        if $i0 <= 32 goto label2;

        $i2 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i1 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        $i3 = $i2 - $i1;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = $i3;

        goto label6;

     label2:
        if $i0 == 13 goto label3;

        if $i0 != 10 goto label4;

     label3:
        virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: void skipMbLF(int)>($i0);

        goto label5;

     label4:
        if $i0 != 0 goto label5;

        virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: void reportNull()>();

     label5:
        i4 = i4 + 1;

        goto label1;

     label6:
        return i4;
    }

    protected int skipTranslatedWs() throws java.io.IOException, com.ctc.wstx.exc.WstxException
    {
        com.ctc.wstx.io.StreamBootstrapper r0;
        int $i0, $i1, $i2, i3;

        r0 := @this: com.ctc.wstx.io.StreamBootstrapper;

        i3 = 0;

     label1:
        $i0 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int nextTranslated()>();

        if $i0 <= 32 goto label2;

        if $i0 == 133 goto label2;

        $i1 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i2 = $i1 - 1;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = $i2;

        goto label6;

     label2:
        if $i0 == 13 goto label3;

        if $i0 != 10 goto label4;

     label3:
        virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: void skipTranslatedLF(int)>($i0);

        goto label5;

     label4:
        if $i0 != 0 goto label5;

        virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: void reportNull()>();

     label5:
        i3 = i3 + 1;

        goto label1;

     label6:
        return i3;
    }

    protected void skipMbLF(int) throws java.io.IOException, com.ctc.wstx.exc.WstxException
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.ctc.wstx.io.StreamBootstrapper r0;

        r0 := @this: com.ctc.wstx.io.StreamBootstrapper;

        i0 := @parameter0: int;

        if i0 != 13 goto label1;

        $i1 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int nextMultiByte()>();

        if $i1 == 10 goto label1;

        $i3 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i2 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        $i4 = $i3 - $i2;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = $i4;

     label1:
        $i5 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputRow>;

        $i6 = $i5 + 1;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputRow> = $i6;

        $i7 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputRowStart> = $i7;

        return;
    }

    protected void skipTranslatedLF(int) throws java.io.IOException, com.ctc.wstx.exc.WstxException
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.ctc.wstx.io.StreamBootstrapper r0;

        r0 := @this: com.ctc.wstx.io.StreamBootstrapper;

        i0 := @parameter0: int;

        if i0 != 13 goto label1;

        $i1 = virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: int nextTranslated()>();

        if $i1 == 10 goto label1;

        $i2 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        $i3 = $i2 - 1;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr> = $i3;

     label1:
        $i4 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputRow>;

        $i5 = $i4 + 1;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputRow> = $i5;

        $i6 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputPtr>;

        r0.<com.ctc.wstx.io.StreamBootstrapper: int mInputRowStart> = $i6;

        return;
    }

    protected int checkMbKeyword(java.lang.String) throws java.io.IOException, com.ctc.wstx.exc.WstxException
    {
        int $i0, $i1, i3, $i4;
        com.ctc.wstx.io.StreamBootstrapper r1;
        char $c2;
        java.lang.String r0;

        r1 := @this: com.ctc.wstx.io.StreamBootstrapper;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i3 = 1;

     label1:
        if i3 >= $i0 goto label4;

        $i1 = virtualinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: int nextMultiByte()>();

        if $i1 != 0 goto label2;

        virtualinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: void reportNull()>();

     label2:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $i4 = (int) $c2;

        if $i1 == $i4 goto label3;

        return $i1;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return 0;
    }

    protected int checkTranslatedKeyword(java.lang.String) throws java.io.IOException, com.ctc.wstx.exc.WstxException
    {
        int $i0, $i1, i3, $i4;
        com.ctc.wstx.io.StreamBootstrapper r1;
        char $c2;
        java.lang.String r0;

        r1 := @this: com.ctc.wstx.io.StreamBootstrapper;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i3 = 1;

     label1:
        if i3 >= $i0 goto label4;

        $i1 = virtualinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: int nextTranslated()>();

        if $i1 != 0 goto label2;

        virtualinvoke r1.<com.ctc.wstx.io.StreamBootstrapper: void reportNull()>();

     label2:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $i4 = (int) $c2;

        if $i1 == $i4 goto label3;

        return $i1;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return 0;
    }

    private void verifyEncoding(java.lang.String, int) throws com.ctc.wstx.exc.WstxException
    {
        java.lang.StringBuffer $r1, $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14;
        com.ctc.wstx.io.StreamBootstrapper r0;
        int i0, $i1, $i2;
        java.lang.String r3, $r10, $r15;
        boolean $z0, $z1;

        r0 := @this: com.ctc.wstx.io.StreamBootstrapper;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = r0.<com.ctc.wstx.io.StreamBootstrapper: boolean mByteSizeFound>;

        if $z0 == 0 goto label2;

        $i1 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        if i0 == $i1 goto label2;

        $z1 = r0.<com.ctc.wstx.io.StreamBootstrapper: boolean mEBCDIC>;

        if $z1 == 0 goto label1;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Declared encoding \'");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' incompatible with auto-detected physical encoding (EBCDIC variant), can not decode input since actual code page not known");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: void reportXmlProblem(java.lang.String)>($r15);

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Declared encoding \'");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' uses ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" bytes per character; but physical encoding appeared to use ");

        $i2 = r0.<com.ctc.wstx.io.StreamBootstrapper: int mBytesPerChar>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; cannot decode");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: void reportXmlProblem(java.lang.String)>($r10);

     label2:
        return;
    }

    private void verifyEncoding(java.lang.String, int, boolean) throws com.ctc.wstx.exc.WstxException
    {
        java.lang.StringBuffer $r2, $r3, $r4, $r5, $r6, $r7;
        com.ctc.wstx.io.StreamBootstrapper r0;
        int i0;
        java.lang.String r1, $r8, $r9;
        boolean $z0, z1, $z2;

        r0 := @this: com.ctc.wstx.io.StreamBootstrapper;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z1 := @parameter2: boolean;

        $z0 = r0.<com.ctc.wstx.io.StreamBootstrapper: boolean mByteSizeFound>;

        if $z0 == 0 goto label3;

        specialinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: void verifyEncoding(java.lang.String,int)>(r1, i0);

        $z2 = r0.<com.ctc.wstx.io.StreamBootstrapper: boolean mBigEndian>;

        if z1 == $z2 goto label3;

        if z1 == 0 goto label1;

        $r9 = "big";

        goto label2;

     label1:
        $r9 = "little";

     label2:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Declared encoding \'");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' has different endianness (");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" endian) than what physical ordering appeared to be; cannot decode");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<com.ctc.wstx.io.StreamBootstrapper: void reportXmlProblem(java.lang.String)>($r8);

     label3:
        return;
    }

    private void reportWeirdUCS4(java.lang.String) throws java.io.IOException
    {
        java.io.CharConversionException $r0;
        java.lang.StringBuffer $r1, $r2, $r4, $r5;
        com.ctc.wstx.io.StreamBootstrapper r7;
        java.lang.String r3, $r6;

        r7 := @this: com.ctc.wstx.io.StreamBootstrapper;

        r3 := @parameter0: java.lang.String;

        $r0 = new java.io.CharConversionException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unsupported UCS-4 endianness (");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") detected");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.io.CharConversionException: void <init>(java.lang.String)>($r6);

        throw $r0;
    }

    private void reportMissingBOM(java.lang.String) throws com.ctc.wstx.exc.WstxException
    {
        java.lang.StringBuffer $r1, $r2, $r4, $r5;
        javax.xml.stream.Location $r8;
        com.ctc.wstx.exc.WstxException $r0;
        com.ctc.wstx.io.StreamBootstrapper r7;
        java.lang.String r3, $r6;

        r7 := @this: com.ctc.wstx.io.StreamBootstrapper;

        r3 := @parameter0: java.lang.String;

        $r0 = new com.ctc.wstx.exc.WstxException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Missing BOM for encoding \'");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'; can not be omitted");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r8 = virtualinvoke r7.<com.ctc.wstx.io.StreamBootstrapper: javax.xml.stream.Location getLocation()>();

        specialinvoke $r0.<com.ctc.wstx.exc.WstxException: void <init>(java.lang.String,javax.xml.stream.Location)>($r6, $r8);

        throw $r0;
    }

    public static void <clinit>()
    {
        <com.ctc.wstx.io.StreamBootstrapper: int MIN_BUF_SIZE> = 128;

        return;
    }
}
