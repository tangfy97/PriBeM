public final class org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl extends org.waveprotocol.wave.communication.gwt.JsonMessage implements org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta
{
    private static final java.lang.String keySignedOriginalDelta;
    private static final java.lang.String keyHashedVersionAppliedAt;
    private static final java.lang.String keyOperationsApplied;
    private static final java.lang.String keyApplicationTimestamp;

    protected void <init>()
    {
        org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl;

        specialinvoke r0.<org.waveprotocol.wave.communication.gwt.JsonMessage: void <init>()>();

        return;
    }

    public static org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl create()
    {
        org.waveprotocol.wave.communication.gwt.JsonMessage $r0;
        org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl r1;

        $r0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonMessage: org.waveprotocol.wave.communication.gwt.JsonMessage createJsonMessage()>();

        r1 = (org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl) $r0;

        return r1;
    }

    public void copyFrom(org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta)
    {
        org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta r1;
        org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl r0, $r2;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta;

        $r2 = (org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl) r1;

        specialinvoke r0.<org.waveprotocol.wave.communication.gwt.JsonMessage: void copyFrom(org.waveprotocol.wave.communication.gwt.JsonMessage)>($r2);

        return;
    }

    public org.waveprotocol.wave.federation.ProtocolSignedDelta getSignedOriginalDelta()
    {
        org.waveprotocol.wave.federation.jso.ProtocolSignedDeltaJsoImpl $r2;
        org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl r0;
        com.google.gwt.core.client.JavaScriptObject $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "1");

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: com.google.gwt.core.client.JavaScriptObject getPropertyAsObject(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "1");

        $r2 = (org.waveprotocol.wave.federation.jso.ProtocolSignedDeltaJsoImpl) $r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public void setSignedOriginalDelta(org.waveprotocol.wave.federation.ProtocolSignedDelta)
    {
        org.waveprotocol.wave.federation.jso.ProtocolSignedDeltaJsoImpl $r2;
        org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl r0;
        org.waveprotocol.wave.federation.ProtocolSignedDelta r1;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolSignedDelta;

        $r2 = (org.waveprotocol.wave.federation.jso.ProtocolSignedDeltaJsoImpl) r1;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void setPropertyAsObject(com.google.gwt.core.client.JavaScriptObject,java.lang.String,com.google.gwt.core.client.JavaScriptObject)>(r0, "1", $r2);

        return;
    }

    public boolean hasHashedVersionAppliedAt()
    {
        org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "2");

        return $z0;
    }

    public void clearHashedVersionAppliedAt()
    {
        org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "2");

        if $z0 == 0 goto label1;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void deleteProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "2");

     label1:
        return;
    }

    public org.waveprotocol.wave.federation.ProtocolHashedVersion getHashedVersionAppliedAt()
    {
        org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl r0;
        com.google.gwt.core.client.JavaScriptObject $r1;
        org.waveprotocol.wave.federation.jso.ProtocolHashedVersionJsoImpl $r2;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "2");

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: com.google.gwt.core.client.JavaScriptObject getPropertyAsObject(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "2");

        $r2 = (org.waveprotocol.wave.federation.jso.ProtocolHashedVersionJsoImpl) $r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public void setHashedVersionAppliedAt(org.waveprotocol.wave.federation.ProtocolHashedVersion)
    {
        org.waveprotocol.wave.federation.ProtocolHashedVersion r1;
        org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl r0;
        org.waveprotocol.wave.federation.jso.ProtocolHashedVersionJsoImpl $r2;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolHashedVersion;

        $r2 = (org.waveprotocol.wave.federation.jso.ProtocolHashedVersionJsoImpl) r1;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void setPropertyAsObject(com.google.gwt.core.client.JavaScriptObject,java.lang.String,com.google.gwt.core.client.JavaScriptObject)>(r0, "2", $r2);

        return;
    }

    public int getOperationsApplied()
    {
        int $i0;
        org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "3");

        if $z0 == 0 goto label1;

        $i0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: int getPropertyAsInteger(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "3");

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public void setOperationsApplied(int)
    {
        int i0;
        org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl;

        i0 := @parameter0: int;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void setPropertyAsInteger(com.google.gwt.core.client.JavaScriptObject,java.lang.String,int)>(r0, "3", i0);

        return;
    }

    public double getApplicationTimestamp()
    {
        org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl r0;
        boolean $z0;
        double $d0;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl;

        $z0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: boolean hasProperty(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "4");

        if $z0 == 0 goto label1;

        $d0 = staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: double getPropertyAsDouble(com.google.gwt.core.client.JavaScriptObject,java.lang.String)>(r0, "4");

        goto label2;

     label1:
        $d0 = 0.0;

     label2:
        return $d0;
    }

    public void setApplicationTimestamp(double)
    {
        org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl r0;
        double d0;

        r0 := @this: org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl;

        d0 := @parameter0: double;

        staticinvoke <org.waveprotocol.wave.communication.gwt.JsonHelper: void setPropertyAsDouble(com.google.gwt.core.client.JavaScriptObject,java.lang.String,double)>(r0, "4", d0);

        return;
    }

    public boolean isEqualTo(java.lang.Object)
    {
        org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl r1;
        org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta $r2;
        java.lang.Object r0;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl;

        if $z0 == 0 goto label1;

        $z3 = virtualinvoke r1.<org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl: boolean nativeIsEqualTo(java.lang.Object)>(r0);

        return $z3;

     label1:
        $z1 = r0 instanceof org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta;

        if $z1 == 0 goto label2;

        $r2 = (org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta) r0;

        $z2 = staticinvoke <org.waveprotocol.wave.federation.ProtocolAppliedWaveletDeltaUtil: boolean isEqual(org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta,org.waveprotocol.wave.federation.ProtocolAppliedWaveletDelta)>(r1, $r2);

        return $z2;

     label2:
        return 0;
    }

    public static void <clinit>()
    {
        <org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl: java.lang.String keyApplicationTimestamp> = "4";

        <org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl: java.lang.String keyOperationsApplied> = "3";

        <org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl: java.lang.String keyHashedVersionAppliedAt> = "2";

        <org.waveprotocol.wave.federation.jso.ProtocolAppliedWaveletDeltaJsoImpl: java.lang.String keySignedOriginalDelta> = "1";

        return;
    }
}
