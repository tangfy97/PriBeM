public class ucar.unidata.geoloc.vertical.AtmosLnPressure extends ucar.unidata.geoloc.vertical.VerticalTransformImpl
{
    public static final java.lang.String P0;
    public static final java.lang.String LEV;
    private ucar.ma2.Array pressure;
    static final boolean $assertionsDisabled;

    public void <init>(ucar.nc2.NetcdfFile, ucar.nc2.Dimension, java.util.List)
    {
        boolean $z0, $z1;
        java.util.List r2;
        ucar.unidata.geoloc.vertical.AtmosLnPressure r0;
        ucar.ma2.ArrayDouble$D1 $r9;
        java.lang.StringBuilder $r16, $r17, $r18, $r19, $r21, $r25, $r26, $r27, $r28, $r30;
        ucar.nc2.NetcdfFile r4;
        long $l0;
        java.lang.AssertionError $r13;
        int $i1, $i2;
        ucar.nc2.Variable $r5, $r7;
        java.lang.String $r3, $r6, $r12, $r20, $r22, $r29, $r31;
        double $d0, $d1, $d2, $d3, d4;
        ucar.ma2.IndexIterator $r11;
        java.io.IOException $r14, $r23;
        java.lang.IllegalArgumentException $r15, $r24;
        ucar.ma2.Array $r8, $r10;
        ucar.nc2.Dimension r1;

        r0 := @this: ucar.unidata.geoloc.vertical.AtmosLnPressure;

        r4 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: ucar.nc2.Dimension;

        r2 := @parameter2: java.util.List;

        specialinvoke r0.<ucar.unidata.geoloc.vertical.VerticalTransformImpl: void <init>(ucar.nc2.Dimension)>(r1);

        $r3 = virtualinvoke r0.<ucar.unidata.geoloc.vertical.AtmosLnPressure: java.lang.String getParameterStringValue(java.util.List,java.lang.String)>(r2, "ReferencePressureVariableName");

        $r5 = virtualinvoke r4.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>($r3);

     label01:
        $d0 = virtualinvoke $r5.<ucar.nc2.Variable: double readScalarDouble()>();

     label02:
        goto label04;

     label03:
        $r23 := @caughtexception;

        $r24 = new java.lang.IllegalArgumentException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AtmosLnPressure failed to read ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" err= ");

        $r29 = virtualinvoke $r23.<java.io.IOException: java.lang.String getMessage()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r31);

        throw $r24;

     label04:
        $r6 = virtualinvoke r0.<ucar.unidata.geoloc.vertical.AtmosLnPressure: java.lang.String getParameterStringValue(java.util.List,java.lang.String)>(r2, "VerticalCoordinateVariableName");

        $r7 = virtualinvoke r4.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>($r6);

     label05:
        $r8 = virtualinvoke $r7.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $z0 = <ucar.unidata.geoloc.vertical.AtmosLnPressure: boolean $assertionsDisabled>;

        if $z0 != 0 goto label06;

        $i2 = virtualinvoke $r8.<ucar.ma2.Array: int getRank()>();

        if $i2 == 1 goto label06;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label06:
        $r9 = new ucar.ma2.ArrayDouble$D1;

        $l0 = virtualinvoke $r8.<ucar.ma2.Array: long getSize()>();

        $i1 = (int) $l0;

        specialinvoke $r9.<ucar.ma2.ArrayDouble$D1: void <init>(int)>($i1);

        r0.<ucar.unidata.geoloc.vertical.AtmosLnPressure: ucar.ma2.Array pressure> = $r9;

        $r10 = r0.<ucar.unidata.geoloc.vertical.AtmosLnPressure: ucar.ma2.Array pressure>;

        $r11 = virtualinvoke $r10.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

     label07:
        $z1 = virtualinvoke $r8.<ucar.ma2.Array: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $d1 = virtualinvoke $r8.<ucar.ma2.Array: double nextDouble()>();

        $d2 = neg $d1;

        $d3 = staticinvoke <java.lang.Math: double exp(double)>($d2);

        d4 = $d0 * $d3;

        interfaceinvoke $r11.<ucar.ma2.IndexIterator: void setDoubleNext(double)>(d4);

        goto label07;

     label08:
        goto label10;

     label09:
        $r14 := @caughtexception;

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AtmosLnPressure failed to read ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" err= ");

        $r20 = virtualinvoke $r14.<java.io.IOException: java.lang.String getMessage()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r15;

     label10:
        $r12 = virtualinvoke $r5.<ucar.nc2.Variable: java.lang.String getUnitsString()>();

        r0.<ucar.unidata.geoloc.vertical.AtmosLnPressure: java.lang.String units> = $r12;

        return;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.io.IOException from label05 to label08 with label09;
    }

    public ucar.ma2.ArrayDouble$D3 getCoordinateArray(int) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        long $l0;
        java.lang.NullPointerException r6, r7;
        int[] $r2;
        int i1, i2, i3, i4, i5, i6, i7;
        double $d0;
        ucar.ma2.IndexIterator $r5;
        ucar.ma2.Array $r1, $r4;
        ucar.unidata.geoloc.vertical.AtmosLnPressure r0;
        ucar.ma2.ArrayDouble$D3 $r3;

        r0 := @this: ucar.unidata.geoloc.vertical.AtmosLnPressure;

        i4 := @parameter0: int;

        r6 = new java.lang.NullPointerException;

        specialinvoke r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("This statement would have triggered an Exception: virtualinvoke ps_1.<ucar.ma2.Array: ucar.ma2.Index getIndex()>()");

        throw r6;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <ucar.unidata.geoloc.vertical.AtmosLnPressure: java.lang.String LEV> = "VerticalCoordinateVariableName";

        <ucar.unidata.geoloc.vertical.AtmosLnPressure: java.lang.String P0> = "ReferencePressureVariableName";

        $r0 = class "Lucar/unidata/geoloc/vertical/AtmosLnPressure;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <ucar.unidata.geoloc.vertical.AtmosLnPressure: boolean $assertionsDisabled> = $z1;

        return;
    }
}
