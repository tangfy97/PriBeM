class org.apache.solr.common.cloud.SolrZkClient$1 extends org.apache.solr.common.cloud.ZkClientConnectionStrategy$ZkUpdate
{
    final org.apache.solr.common.cloud.SolrZkClient this$0;

    void <init>(org.apache.solr.common.cloud.SolrZkClient)
    {
        org.apache.solr.common.cloud.SolrZkClient$1 r0;
        org.apache.solr.common.cloud.SolrZkClient r1;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient$1;

        r1 := @parameter0: org.apache.solr.common.cloud.SolrZkClient;

        r0.<org.apache.solr.common.cloud.SolrZkClient$1: org.apache.solr.common.cloud.SolrZkClient this$0> = r1;

        specialinvoke r0.<org.apache.solr.common.cloud.ZkClientConnectionStrategy$ZkUpdate: void <init>()>();

        return;
    }

    public void update(org.apache.solr.common.cloud.SolrZooKeeper)
    {
        java.lang.Throwable $r10;
        boolean $z0, $z1;
        org.apache.solr.common.cloud.SolrZkClient$1 r0;
        org.apache.solr.common.cloud.SolrZkClient $r1, $r4, $r5, $r6, $r7, $r8, $r11, $r12, $r13;
        org.apache.solr.common.cloud.SolrZooKeeper $r2, r3, $r9, $r14;

        r0 := @this: org.apache.solr.common.cloud.SolrZkClient$1;

        r3 := @parameter0: org.apache.solr.common.cloud.SolrZooKeeper;

        $r1 = r0.<org.apache.solr.common.cloud.SolrZkClient$1: org.apache.solr.common.cloud.SolrZkClient this$0>;

        $r2 = staticinvoke <org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.SolrZooKeeper access$000(org.apache.solr.common.cloud.SolrZkClient)>($r1);

        $r4 = r0.<org.apache.solr.common.cloud.SolrZkClient$1: org.apache.solr.common.cloud.SolrZkClient this$0>;

        staticinvoke <org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.SolrZooKeeper access$002(org.apache.solr.common.cloud.SolrZkClient,org.apache.solr.common.cloud.SolrZooKeeper)>($r4, r3);

     label1:
        $r5 = r0.<org.apache.solr.common.cloud.SolrZkClient$1: org.apache.solr.common.cloud.SolrZkClient this$0>;

        staticinvoke <org.apache.solr.common.cloud.SolrZkClient: void access$100(org.apache.solr.common.cloud.SolrZkClient,org.apache.solr.common.cloud.SolrZooKeeper)>($r5, $r2);

     label2:
        $r6 = r0.<org.apache.solr.common.cloud.SolrZkClient$1: org.apache.solr.common.cloud.SolrZkClient this$0>;

        $z0 = staticinvoke <org.apache.solr.common.cloud.SolrZkClient: boolean access$200(org.apache.solr.common.cloud.SolrZkClient)>($r6);

        if $z0 == 0 goto label6;

        $r8 = r0.<org.apache.solr.common.cloud.SolrZkClient$1: org.apache.solr.common.cloud.SolrZkClient this$0>;

        $r7 = r0.<org.apache.solr.common.cloud.SolrZkClient$1: org.apache.solr.common.cloud.SolrZkClient this$0>;

        $r9 = staticinvoke <org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.SolrZooKeeper access$000(org.apache.solr.common.cloud.SolrZkClient)>($r7);

        staticinvoke <org.apache.solr.common.cloud.SolrZkClient: void access$100(org.apache.solr.common.cloud.SolrZkClient,org.apache.solr.common.cloud.SolrZooKeeper)>($r8, $r9);

        goto label6;

     label3:
        $r10 := @caughtexception;

     label4:
        $r11 = r0.<org.apache.solr.common.cloud.SolrZkClient$1: org.apache.solr.common.cloud.SolrZkClient this$0>;

        $z1 = staticinvoke <org.apache.solr.common.cloud.SolrZkClient: boolean access$200(org.apache.solr.common.cloud.SolrZkClient)>($r11);

        if $z1 == 0 goto label5;

        $r13 = r0.<org.apache.solr.common.cloud.SolrZkClient$1: org.apache.solr.common.cloud.SolrZkClient this$0>;

        $r12 = r0.<org.apache.solr.common.cloud.SolrZkClient$1: org.apache.solr.common.cloud.SolrZkClient this$0>;

        $r14 = staticinvoke <org.apache.solr.common.cloud.SolrZkClient: org.apache.solr.common.cloud.SolrZooKeeper access$000(org.apache.solr.common.cloud.SolrZkClient)>($r12);

        staticinvoke <org.apache.solr.common.cloud.SolrZkClient: void access$100(org.apache.solr.common.cloud.SolrZkClient,org.apache.solr.common.cloud.SolrZooKeeper)>($r13, $r14);

     label5:
        throw $r10;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
