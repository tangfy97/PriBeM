public class com.hp.hpl.jena.sparql.engine.main.QC extends java.lang.Object
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.engine.main.QC r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.main.QC;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.hp.hpl.jena.sparql.engine.main.OpExecutorFactory getFactory(com.hp.hpl.jena.sparql.util.Context)
    {
        java.lang.Object $r2;
        com.hp.hpl.jena.sparql.engine.main.OpExecutorFactory $r3;
        com.hp.hpl.jena.sparql.util.Context r0;
        com.hp.hpl.jena.sparql.util.Symbol $r1;

        r0 := @parameter0: com.hp.hpl.jena.sparql.util.Context;

        $r1 = <com.hp.hpl.jena.sparql.ARQConstants: com.hp.hpl.jena.sparql.util.Symbol sysOpExecutorFactory>;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.util.Context: java.lang.Object get(com.hp.hpl.jena.sparql.util.Symbol)>($r1);

        $r3 = (com.hp.hpl.jena.sparql.engine.main.OpExecutorFactory) $r2;

        return $r3;
    }

    public static void setFactory(com.hp.hpl.jena.sparql.util.Context, com.hp.hpl.jena.sparql.engine.main.OpExecutorFactory)
    {
        com.hp.hpl.jena.sparql.engine.main.OpExecutorFactory r1;
        com.hp.hpl.jena.sparql.util.Context r0;
        com.hp.hpl.jena.sparql.util.Symbol $r2;

        r0 := @parameter0: com.hp.hpl.jena.sparql.util.Context;

        r1 := @parameter1: com.hp.hpl.jena.sparql.engine.main.OpExecutorFactory;

        $r2 = <com.hp.hpl.jena.sparql.ARQConstants: com.hp.hpl.jena.sparql.util.Symbol sysOpExecutorFactory>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.util.Context: void set(com.hp.hpl.jena.sparql.util.Symbol,java.lang.Object)>($r2, r1);

        return;
    }

    public static com.hp.hpl.jena.sparql.algebra.Op substitute(com.hp.hpl.jena.sparql.algebra.Op, com.hp.hpl.jena.sparql.engine.binding.Binding)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding r1;
        com.hp.hpl.jena.sparql.algebra.Op r0, $r2;

        r0 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        r1 := @parameter1: com.hp.hpl.jena.sparql.engine.binding.Binding;

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.core.Substitute: com.hp.hpl.jena.sparql.algebra.Op substitute(com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.engine.binding.Binding)>(r0, r1);

        return $r2;
    }

    public static com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.Op, com.hp.hpl.jena.sparql.engine.QueryIterator, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        com.hp.hpl.jena.sparql.engine.ExecutionContext r2;
        com.hp.hpl.jena.sparql.algebra.Op r0;
        com.hp.hpl.jena.sparql.engine.QueryIterator r1, $r3;

        r0 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        r1 := @parameter1: com.hp.hpl.jena.sparql.engine.QueryIterator;

        r2 := @parameter2: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.engine.QueryIterator,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r0, r1, r2);

        return $r3;
    }

    public static com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.Op, com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding r0;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterSingleton $r2;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r1;
        com.hp.hpl.jena.sparql.algebra.Op r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r4;

        r3 := @parameter0: com.hp.hpl.jena.sparql.algebra.Op;

        r0 := @parameter1: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r1 := @parameter2: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.engine.iterator.QueryIterSingleton: com.hp.hpl.jena.sparql.engine.iterator.QueryIterSingleton create(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r0, r1);

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.engine.main.OpExecutor: com.hp.hpl.jena.sparql.engine.QueryIterator execute(com.hp.hpl.jena.sparql.algebra.Op,com.hp.hpl.jena.sparql.engine.QueryIterator,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r3, $r2, r1);

        return $r4;
    }

    public static com.hp.hpl.jena.sparql.engine.QueryIterator executeDirect(com.hp.hpl.jena.sparql.core.BasicPattern, com.hp.hpl.jena.sparql.engine.QueryIterator, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        com.hp.hpl.jena.sparql.core.BasicPattern r1;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r2;
        com.hp.hpl.jena.sparql.engine.QueryIterator r0, $r3;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.BasicPattern;

        r0 := @parameter1: com.hp.hpl.jena.sparql.engine.QueryIterator;

        r2 := @parameter2: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.engine.iterator.QueryIterBlockTriples: com.hp.hpl.jena.sparql.engine.QueryIterator create(com.hp.hpl.jena.sparql.engine.QueryIterator,com.hp.hpl.jena.sparql.core.BasicPattern,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r0, r1, r2);

        return $r3;
    }
}
