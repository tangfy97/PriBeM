public class org.eclipse.jetty.servlets.IncludableGzipFilter extends org.eclipse.jetty.servlets.GzipFilter
{
    boolean _uncheckedPrintWriter;

    public void <init>()
    {
        org.eclipse.jetty.servlets.IncludableGzipFilter r0;

        r0 := @this: org.eclipse.jetty.servlets.IncludableGzipFilter;

        specialinvoke r0.<org.eclipse.jetty.servlets.GzipFilter: void <init>()>();

        r0.<org.eclipse.jetty.servlets.IncludableGzipFilter: boolean _uncheckedPrintWriter> = 0;

        return;
    }

    public void init(javax.servlet.FilterConfig) throws javax.servlet.ServletException
    {
        org.eclipse.jetty.servlets.IncludableGzipFilter r0;
        javax.servlet.FilterConfig r1;
        java.lang.Boolean $r3;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.servlets.IncludableGzipFilter;

        r1 := @parameter0: javax.servlet.FilterConfig;

        specialinvoke r0.<org.eclipse.jetty.servlets.GzipFilter: void init(javax.servlet.FilterConfig)>(r1);

        $r2 = interfaceinvoke r1.<javax.servlet.FilterConfig: java.lang.String getInitParameter(java.lang.String)>("uncheckedPrintWriter");

        if $r2 == null goto label1;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r2);

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        r0.<org.eclipse.jetty.servlets.IncludableGzipFilter: boolean _uncheckedPrintWriter> = $z0;

     label1:
        return;
    }

    protected org.eclipse.jetty.http.gzip.CompressedResponseWrapper createWrappedResponse(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)
    {
        java.lang.IllegalStateException $r1;
        org.eclipse.jetty.servlets.IncludableGzipFilter r7;
        javax.servlet.http.HttpServletResponse r9;
        javax.servlet.http.HttpServletRequest r8;
        java.lang.StringBuilder $r2, $r3, $r4;
        org.eclipse.jetty.servlets.IncludableGzipFilter$IncludableResponseWrapper r12;
        java.lang.String r0, $r5;
        org.eclipse.jetty.servlets.IncludableGzipFilter$3 $r6;
        org.eclipse.jetty.servlets.IncludableGzipFilter$2 $r10;
        org.eclipse.jetty.servlets.IncludableGzipFilter$1 $r11;
        boolean $z0, $z1;

        r7 := @this: org.eclipse.jetty.servlets.IncludableGzipFilter;

        r8 := @parameter0: javax.servlet.http.HttpServletRequest;

        r9 := @parameter1: javax.servlet.http.HttpServletResponse;

        r0 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        $r11 = new org.eclipse.jetty.servlets.IncludableGzipFilter$1;

        specialinvoke $r11.<org.eclipse.jetty.servlets.IncludableGzipFilter$1: void <init>(org.eclipse.jetty.servlets.IncludableGzipFilter,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r7, r8, r9);

        r12 = $r11;

        goto label4;

     label1:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("gzip");

        if $z0 == 0 goto label2;

        $r10 = new org.eclipse.jetty.servlets.IncludableGzipFilter$2;

        specialinvoke $r10.<org.eclipse.jetty.servlets.IncludableGzipFilter$2: void <init>(org.eclipse.jetty.servlets.IncludableGzipFilter,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>(r7, r8, r9, r0);

        r12 = $r10;

        goto label4;

     label2:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("deflate");

        if $z1 == 0 goto label3;

        $r6 = new org.eclipse.jetty.servlets.IncludableGzipFilter$3;

        specialinvoke $r6.<org.eclipse.jetty.servlets.IncludableGzipFilter$3: void <init>(org.eclipse.jetty.servlets.IncludableGzipFilter,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>(r7, r8, r9, r0);

        r12 = $r6;

        goto label4;

     label3:
        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not supported");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label4:
        virtualinvoke r7.<org.eclipse.jetty.servlets.IncludableGzipFilter: void configureWrappedResponse(org.eclipse.jetty.http.gzip.CompressedResponseWrapper)>(r12);

        return r12;
    }
}
