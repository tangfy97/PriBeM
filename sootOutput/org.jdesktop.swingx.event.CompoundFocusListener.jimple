public class org.jdesktop.swingx.event.CompoundFocusListener extends org.jdesktop.beans.AbstractBean
{
    private javax.swing.JComponent root;
    private java.beans.PropertyChangeListener managerListener;
    private boolean focused;

    public void <init>(javax.swing.JComponent)
    {
        javax.swing.JComponent r1, $r3;
        java.awt.KeyboardFocusManager $r4;
        org.jdesktop.swingx.event.CompoundFocusListener r0;
        java.lang.Object $r2;
        java.awt.Component $r5;

        r0 := @this: org.jdesktop.swingx.event.CompoundFocusListener;

        r1 := @parameter0: javax.swing.JComponent;

        specialinvoke r0.<org.jdesktop.beans.AbstractBean: void <init>()>();

        $r2 = staticinvoke <org.jdesktop.swingx.util.Contract: java.lang.Object asNotNull(java.lang.Object,java.lang.String)>(r1, "root must not be null");

        $r3 = (javax.swing.JComponent) $r2;

        r0.<org.jdesktop.swingx.event.CompoundFocusListener: javax.swing.JComponent root> = $r3;

        $r4 = staticinvoke <java.awt.KeyboardFocusManager: java.awt.KeyboardFocusManager getCurrentKeyboardFocusManager()>();

        specialinvoke r0.<org.jdesktop.swingx.event.CompoundFocusListener: void addManagerListener(java.awt.KeyboardFocusManager)>($r4);

        $r5 = virtualinvoke $r4.<java.awt.KeyboardFocusManager: java.awt.Component getPermanentFocusOwner()>();

        virtualinvoke r0.<org.jdesktop.swingx.event.CompoundFocusListener: void permanentFocusOwnerChanged(java.awt.Component)>($r5);

        return;
    }

    public boolean isFocused()
    {
        org.jdesktop.swingx.event.CompoundFocusListener r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.event.CompoundFocusListener;

        $z0 = r0.<org.jdesktop.swingx.event.CompoundFocusListener: boolean focused>;

        return $z0;
    }

    public void release()
    {
        org.jdesktop.swingx.event.CompoundFocusListener r0;
        java.awt.KeyboardFocusManager $r1;

        r0 := @this: org.jdesktop.swingx.event.CompoundFocusListener;

        $r1 = staticinvoke <java.awt.KeyboardFocusManager: java.awt.KeyboardFocusManager getCurrentKeyboardFocusManager()>();

        specialinvoke r0.<org.jdesktop.swingx.event.CompoundFocusListener: void removeManagerListener(java.awt.KeyboardFocusManager)>($r1);

        specialinvoke r0.<org.jdesktop.swingx.event.CompoundFocusListener: void removeAllListeners()>();

        r0.<org.jdesktop.swingx.event.CompoundFocusListener: javax.swing.JComponent root> = null;

        return;
    }

    private void removeAllListeners()
    {
        java.beans.PropertyChangeListener[] $r1;
        java.beans.PropertyChangeListener r2;
        org.jdesktop.swingx.event.CompoundFocusListener r0;
        int i0, i1;

        r0 := @this: org.jdesktop.swingx.event.CompoundFocusListener;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.event.CompoundFocusListener: java.beans.PropertyChangeListener[] getPropertyChangeListeners()>();

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = $r1[i1];

        virtualinvoke r0.<org.jdesktop.swingx.event.CompoundFocusListener: void removePropertyChangeListener(java.beans.PropertyChangeListener)>(r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected void permanentFocusOwnerChanged(java.awt.Component)
    {
        javax.swing.JComponent $r2;
        org.jdesktop.swingx.event.CompoundFocusListener r1;
        java.awt.Component r0;
        boolean $z0;

        r1 := @this: org.jdesktop.swingx.event.CompoundFocusListener;

        r0 := @parameter0: java.awt.Component;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = r1.<org.jdesktop.swingx.event.CompoundFocusListener: javax.swing.JComponent root>;

        $z0 = staticinvoke <org.jdesktop.swingx.SwingXUtilities: boolean isDescendingFrom(java.awt.Component,java.awt.Component)>(r0, $r2);

        specialinvoke r1.<org.jdesktop.swingx.event.CompoundFocusListener: void setFocused(boolean)>($z0);

        return;
    }

    private void setFocused(boolean)
    {
        org.jdesktop.swingx.event.CompoundFocusListener r0;
        java.lang.Boolean $r1, $r2;
        boolean $z0, z1, $z2;

        r0 := @this: org.jdesktop.swingx.event.CompoundFocusListener;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.event.CompoundFocusListener: boolean isFocused()>();

        r0.<org.jdesktop.swingx.event.CompoundFocusListener: boolean focused> = z1;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z2 = virtualinvoke r0.<org.jdesktop.swingx.event.CompoundFocusListener: boolean isFocused()>();

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        virtualinvoke r0.<org.jdesktop.swingx.event.CompoundFocusListener: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("focused", $r1, $r2);

        return;
    }

    private void addManagerListener(java.awt.KeyboardFocusManager)
    {
        org.jdesktop.swingx.event.CompoundFocusListener r1;
        java.awt.KeyboardFocusManager r0;
        java.beans.PropertyChangeListener $r2;

        r1 := @this: org.jdesktop.swingx.event.CompoundFocusListener;

        r0 := @parameter0: java.awt.KeyboardFocusManager;

        $r2 = specialinvoke r1.<org.jdesktop.swingx.event.CompoundFocusListener: java.beans.PropertyChangeListener getManagerListener()>();

        virtualinvoke r0.<java.awt.KeyboardFocusManager: void addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>("permanentFocusOwner", $r2);

        return;
    }

    private void removeManagerListener(java.awt.KeyboardFocusManager)
    {
        org.jdesktop.swingx.event.CompoundFocusListener r1;
        java.awt.KeyboardFocusManager r0;
        java.beans.PropertyChangeListener $r2;

        r1 := @this: org.jdesktop.swingx.event.CompoundFocusListener;

        r0 := @parameter0: java.awt.KeyboardFocusManager;

        $r2 = specialinvoke r1.<org.jdesktop.swingx.event.CompoundFocusListener: java.beans.PropertyChangeListener getManagerListener()>();

        virtualinvoke r0.<java.awt.KeyboardFocusManager: void removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)>("permanentFocusOwner", $r2);

        return;
    }

    private java.beans.PropertyChangeListener getManagerListener()
    {
        java.beans.PropertyChangeListener $r1, $r2;
        org.jdesktop.swingx.event.CompoundFocusListener r0;
        org.jdesktop.swingx.event.CompoundFocusListener$1 $r3;

        r0 := @this: org.jdesktop.swingx.event.CompoundFocusListener;

        $r1 = r0.<org.jdesktop.swingx.event.CompoundFocusListener: java.beans.PropertyChangeListener managerListener>;

        if $r1 != null goto label1;

        $r3 = new org.jdesktop.swingx.event.CompoundFocusListener$1;

        specialinvoke $r3.<org.jdesktop.swingx.event.CompoundFocusListener$1: void <init>(org.jdesktop.swingx.event.CompoundFocusListener)>(r0);

        r0.<org.jdesktop.swingx.event.CompoundFocusListener: java.beans.PropertyChangeListener managerListener> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.event.CompoundFocusListener: java.beans.PropertyChangeListener managerListener>;

        return $r2;
    }
}
