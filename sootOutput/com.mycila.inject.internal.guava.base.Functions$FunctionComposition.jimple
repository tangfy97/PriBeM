class com.mycila.inject.internal.guava.base.Functions$FunctionComposition extends java.lang.Object implements com.mycila.inject.internal.guava.base.Function, java.io.Serializable
{
    private final com.mycila.inject.internal.guava.base.Function g;
    private final com.mycila.inject.internal.guava.base.Function f;
    private static final long serialVersionUID;

    public void <init>(com.mycila.inject.internal.guava.base.Function, com.mycila.inject.internal.guava.base.Function)
    {
        com.mycila.inject.internal.guava.base.Functions$FunctionComposition r0;
        java.lang.Object $r2, $r5;
        com.mycila.inject.internal.guava.base.Function r1, $r3, r4, $r6;

        r0 := @this: com.mycila.inject.internal.guava.base.Functions$FunctionComposition;

        r1 := @parameter0: com.mycila.inject.internal.guava.base.Function;

        r4 := @parameter1: com.mycila.inject.internal.guava.base.Function;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (com.mycila.inject.internal.guava.base.Function) $r2;

        r0.<com.mycila.inject.internal.guava.base.Functions$FunctionComposition: com.mycila.inject.internal.guava.base.Function g> = $r3;

        $r5 = staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $r6 = (com.mycila.inject.internal.guava.base.Function) $r5;

        r0.<com.mycila.inject.internal.guava.base.Functions$FunctionComposition: com.mycila.inject.internal.guava.base.Function f> = $r6;

        return;
    }

    public java.lang.Object apply(java.lang.Object)
    {
        com.mycila.inject.internal.guava.base.Functions$FunctionComposition r0;
        java.lang.Object r1, $r4, $r5;
        com.mycila.inject.internal.guava.base.Function $r2, $r3;

        r0 := @this: com.mycila.inject.internal.guava.base.Functions$FunctionComposition;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<com.mycila.inject.internal.guava.base.Functions$FunctionComposition: com.mycila.inject.internal.guava.base.Function g>;

        $r2 = r0.<com.mycila.inject.internal.guava.base.Functions$FunctionComposition: com.mycila.inject.internal.guava.base.Function f>;

        $r4 = interfaceinvoke $r2.<com.mycila.inject.internal.guava.base.Function: java.lang.Object apply(java.lang.Object)>(r1);

        $r5 = interfaceinvoke $r3.<com.mycila.inject.internal.guava.base.Function: java.lang.Object apply(java.lang.Object)>($r4);

        return $r5;
    }

    public boolean equals(java.lang.Object)
    {
        com.mycila.inject.internal.guava.base.Functions$FunctionComposition r1, r2;
        java.lang.Object r0;
        com.mycila.inject.internal.guava.base.Function $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3;

        r2 := @this: com.mycila.inject.internal.guava.base.Functions$FunctionComposition;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof com.mycila.inject.internal.guava.base.Functions$FunctionComposition;

        if $z0 == 0 goto label3;

        r1 = (com.mycila.inject.internal.guava.base.Functions$FunctionComposition) r0;

        $r4 = r2.<com.mycila.inject.internal.guava.base.Functions$FunctionComposition: com.mycila.inject.internal.guava.base.Function f>;

        $r3 = r1.<com.mycila.inject.internal.guava.base.Functions$FunctionComposition: com.mycila.inject.internal.guava.base.Function f>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        $r6 = r2.<com.mycila.inject.internal.guava.base.Functions$FunctionComposition: com.mycila.inject.internal.guava.base.Function g>;

        $r5 = r1.<com.mycila.inject.internal.guava.base.Functions$FunctionComposition: com.mycila.inject.internal.guava.base.Function g>;

        $z2 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;

     label3:
        return 0;
    }

    public int hashCode()
    {
        com.mycila.inject.internal.guava.base.Functions$FunctionComposition r0;
        int $i0, $i1, $i2;
        com.mycila.inject.internal.guava.base.Function $r1, $r2;

        r0 := @this: com.mycila.inject.internal.guava.base.Functions$FunctionComposition;

        $r1 = r0.<com.mycila.inject.internal.guava.base.Functions$FunctionComposition: com.mycila.inject.internal.guava.base.Function f>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $r2 = r0.<com.mycila.inject.internal.guava.base.Functions$FunctionComposition: com.mycila.inject.internal.guava.base.Function g>;

        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i2 = $i0 ^ $i1;

        return $i2;
    }

    public java.lang.String toString()
    {
        com.mycila.inject.internal.guava.base.Functions$FunctionComposition r1;
        java.lang.StringBuilder $r0, $r4, $r5, $r8, $r9;
        com.mycila.inject.internal.guava.base.Function $r2, $r6;
        java.lang.String $r3, $r7, $r10;

        r1 := @this: com.mycila.inject.internal.guava.base.Functions$FunctionComposition;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<com.mycila.inject.internal.guava.base.Functions$FunctionComposition: com.mycila.inject.internal.guava.base.Function g>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r6 = r1.<com.mycila.inject.internal.guava.base.Functions$FunctionComposition: com.mycila.inject.internal.guava.base.Function f>;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public static void <clinit>()
    {
        <com.mycila.inject.internal.guava.base.Functions$FunctionComposition: long serialVersionUID> = 0L;

        return;
    }
}
