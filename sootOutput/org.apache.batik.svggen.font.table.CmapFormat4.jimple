public class org.apache.batik.svggen.font.table.CmapFormat4 extends org.apache.batik.svggen.font.table.CmapFormat
{
    public int language;
    private int segCountX2;
    private int searchRange;
    private int entrySelector;
    private int rangeShift;
    private int[] endCode;
    private int[] startCode;
    private int[] idDelta;
    private int[] idRangeOffset;
    private int[] glyphIdArray;
    private int segCount;
    private int first;
    private int last;

    protected void <init>(java.io.RandomAccessFile) throws java.io.IOException
    {
        java.io.RandomAccessFile r1;
        int[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        org.apache.batik.svggen.font.table.CmapFormat4 r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i27, $i28, i29, $i30, i31, $i32, i33, i34, i35, $i37;

        r0 := @this: org.apache.batik.svggen.font.table.CmapFormat4;

        r1 := @parameter0: java.io.RandomAccessFile;

        specialinvoke r0.<org.apache.batik.svggen.font.table.CmapFormat: void <init>(java.io.RandomAccessFile)>(r1);

        r0.<org.apache.batik.svggen.font.table.CmapFormat: int format> = 4;

        $i0 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        r0.<org.apache.batik.svggen.font.table.CmapFormat4: int segCountX2> = $i0;

        $i1 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int segCountX2>;

        $i2 = $i1 / 2;

        r0.<org.apache.batik.svggen.font.table.CmapFormat4: int segCount> = $i2;

        $i3 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int segCount>;

        $r2 = newarray (int)[$i3];

        r0.<org.apache.batik.svggen.font.table.CmapFormat4: int[] endCode> = $r2;

        $i4 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int segCount>;

        $r3 = newarray (int)[$i4];

        r0.<org.apache.batik.svggen.font.table.CmapFormat4: int[] startCode> = $r3;

        $i5 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int segCount>;

        $r4 = newarray (int)[$i5];

        r0.<org.apache.batik.svggen.font.table.CmapFormat4: int[] idDelta> = $r4;

        $i6 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int segCount>;

        $r5 = newarray (int)[$i6];

        r0.<org.apache.batik.svggen.font.table.CmapFormat4: int[] idRangeOffset> = $r5;

        $i7 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        r0.<org.apache.batik.svggen.font.table.CmapFormat4: int searchRange> = $i7;

        $i8 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        r0.<org.apache.batik.svggen.font.table.CmapFormat4: int entrySelector> = $i8;

        $i9 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        r0.<org.apache.batik.svggen.font.table.CmapFormat4: int rangeShift> = $i9;

        $i37 = (int) -1;

        r0.<org.apache.batik.svggen.font.table.CmapFormat4: int last> = $i37;

        i29 = 0;

        goto label03;

     label01:
        $r6 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int[] endCode>;

        $i10 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        $r6[i29] = $i10;

        $r7 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int[] endCode>;

        $i12 = $r7[i29];

        $i11 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int last>;

        if $i12 <= $i11 goto label02;

        $r8 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int[] endCode>;

        $i13 = $r8[i29];

        r0.<org.apache.batik.svggen.font.table.CmapFormat4: int last> = $i13;

     label02:
        i29 = i29 + 1;

     label03:
        $i30 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int segCount>;

        if i29 < $i30 goto label01;

        virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        i31 = 0;

        goto label07;

     label04:
        $r9 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int[] startCode>;

        $i14 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        $r9[i31] = $i14;

        if i31 == 0 goto label05;

        $r11 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int[] startCode>;

        $i17 = $r11[i31];

        $i16 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int first>;

        if $i17 >= $i16 goto label06;

     label05:
        $r10 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int[] startCode>;

        $i15 = $r10[i31];

        r0.<org.apache.batik.svggen.font.table.CmapFormat4: int first> = $i15;

     label06:
        i31 = i31 + 1;

     label07:
        $i32 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int segCount>;

        if i31 < $i32 goto label04;

        i33 = 0;

        goto label09;

     label08:
        $r12 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int[] idDelta>;

        $i19 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        $r12[i33] = $i19;

        i33 = i33 + 1;

     label09:
        $i18 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int segCount>;

        if i33 < $i18 goto label08;

        i34 = 0;

        goto label11;

     label10:
        $r13 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int[] idRangeOffset>;

        $i21 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        $r13[i34] = $i21;

        i34 = i34 + 1;

     label11:
        $i20 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int segCount>;

        if i34 < $i20 goto label10;

        $i22 = r0.<org.apache.batik.svggen.font.table.CmapFormat: int length>;

        $i25 = $i22 - 16;

        $i23 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int segCount>;

        $i24 = $i23 * 8;

        $i26 = $i25 - $i24;

        i27 = $i26 / 2;

        $r14 = newarray (int)[i27];

        r0.<org.apache.batik.svggen.font.table.CmapFormat4: int[] glyphIdArray> = $r14;

        i35 = 0;

        goto label13;

     label12:
        $r15 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int[] glyphIdArray>;

        $i28 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        $r15[i35] = $i28;

        i35 = i35 + 1;

     label13:
        if i35 < i27 goto label12;

        return;
    }

    public int getFirst()
    {
        int $i0;
        org.apache.batik.svggen.font.table.CmapFormat4 r0;

        r0 := @this: org.apache.batik.svggen.font.table.CmapFormat4;

        $i0 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int first>;

        return $i0;
    }

    public int getLast()
    {
        int $i0;
        org.apache.batik.svggen.font.table.CmapFormat4 r0;

        r0 := @this: org.apache.batik.svggen.font.table.CmapFormat4;

        $i0 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int last>;

        return $i0;
    }

    public int mapCharCode(int)
    {
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        org.apache.batik.svggen.font.table.CmapFormat4 r0;
        java.lang.StringBuffer $r11, $r13, $r15;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, $i19;
        java.lang.String $r12, $r14;
        java.io.PrintStream $r10;
        java.lang.ArrayIndexOutOfBoundsException $r8;

        r0 := @this: org.apache.batik.svggen.font.table.CmapFormat4;

        i0 := @parameter0: int;

     label01:
        if i0 < 0 goto label02;

        $i19 = (int) 65534;

        if i0 < $i19 goto label03;

     label02:
        return 0;

     label03:
        i17 = 0;

        goto label07;

     label04:
        $r1 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int[] endCode>;

        $i2 = $r1[i17];

        if $i2 < i0 goto label06;

        $r2 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int[] startCode>;

        $i3 = $r2[i17];

        if $i3 > i0 goto label08;

        $r3 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int[] idRangeOffset>;

        $i4 = $r3[i17];

        if $i4 <= 0 goto label05;

        $r7 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int[] glyphIdArray>;

        $r5 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int[] idRangeOffset>;

        $i8 = $r5[i17];

        $i11 = $i8 / 2;

        $r6 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int[] startCode>;

        $i9 = $r6[i17];

        $i10 = i0 - $i9;

        $i14 = $i11 + $i10;

        $i12 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int segCount>;

        $i13 = $i12 - i17;

        $i15 = $i14 - $i13;

        $i16 = $r7[$i15];

        return $i16;

     label05:
        $r4 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int[] idDelta>;

        $i5 = $r4[i17];

        $i6 = $i5 + i0;

        $i7 = $i6 % 65536;

        return $i7;

     label06:
        i17 = i17 + 1;

     label07:
        $i1 = r0.<org.apache.batik.svggen.font.table.CmapFormat4: int segCount>;

        if i17 < $i1 goto label04;

     label08:
        goto label10;

     label09:
        $r8 := @caughtexception;

        $r10 = <java.lang.System: java.io.PrintStream err>;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("error: Array out of bounds - ");

        $r12 = virtualinvoke $r8.<java.lang.Throwable: java.lang.String getMessage()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r14);

     label10:
        return 0;

        catch java.lang.ArrayIndexOutOfBoundsException from label01 to label08 with label09;
    }

    public java.lang.String toString()
    {
        int[] $r13, $r17, $r21, $r25;
        org.apache.batik.svggen.font.table.CmapFormat4 r1;
        java.lang.StringBuffer $r0, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r15, $r16, $r19, $r20, $r23, $r24, $r27;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2, $r14, $r18, $r22, $r26, $r28;

        r1 := @this: org.apache.batik.svggen.font.table.CmapFormat4;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(80);

        $r2 = specialinvoke r1.<org.apache.batik.svggen.font.table.CmapFormat: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", segCountX2: ");

        $i0 = r1.<org.apache.batik.svggen.font.table.CmapFormat4: int segCountX2>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", searchRange: ");

        $i1 = r1.<org.apache.batik.svggen.font.table.CmapFormat4: int searchRange>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", entrySelector: ");

        $i2 = r1.<org.apache.batik.svggen.font.table.CmapFormat4: int entrySelector>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", rangeShift: ");

        $i3 = r1.<org.apache.batik.svggen.font.table.CmapFormat4: int rangeShift>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", endCode: ");

        $r13 = r1.<org.apache.batik.svggen.font.table.CmapFormat4: int[] endCode>;

        $r14 = staticinvoke <org.apache.batik.svggen.font.table.CmapFormat4: java.lang.String intToStr(int[])>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", startCode: ");

        $r17 = r1.<org.apache.batik.svggen.font.table.CmapFormat4: int[] startCode>;

        $r18 = staticinvoke <org.apache.batik.svggen.font.table.CmapFormat4: java.lang.String intToStr(int[])>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", idDelta: ");

        $r21 = r1.<org.apache.batik.svggen.font.table.CmapFormat4: int[] idDelta>;

        $r22 = staticinvoke <org.apache.batik.svggen.font.table.CmapFormat4: java.lang.String intToStr(int[])>($r21);

        $r23 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", idRangeOffset: ");

        $r25 = r1.<org.apache.batik.svggen.font.table.CmapFormat4: int[] idRangeOffset>;

        $r26 = staticinvoke <org.apache.batik.svggen.font.table.CmapFormat4: java.lang.String intToStr(int[])>($r25);

        $r27 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r28;
    }

    private static java.lang.String intToStr(int[])
    {
        int[] r0;
        java.lang.StringBuffer $r1;
        int i0, $i1, $i2, $i3, i4;
        java.lang.String $r2;

        r0 := @parameter0: int[];

        i0 = lengthof r0;

        $r1 = new java.lang.StringBuffer;

        $i1 = i0 * 8;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        i4 = 0;

        goto label3;

     label1:
        $i2 = r0[i4];

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        $i3 = i0 - 1;

        if i4 >= $i3 goto label2;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

     label2:
        i4 = i4 + 1;

     label3:
        if i4 < i0 goto label1;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }
}
