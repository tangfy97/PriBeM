public class org.apache.batik.ext.awt.image.spi.ImageWriterParams extends java.lang.Object
{
    private java.lang.Integer resolution;
    private java.lang.Float jpegQuality;
    private java.lang.Boolean jpegForceBaseline;
    private java.lang.String compressionMethod;

    public void <init>()
    {
        org.apache.batik.ext.awt.image.spi.ImageWriterParams r0;

        r0 := @this: org.apache.batik.ext.awt.image.spi.ImageWriterParams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Integer getResolution()
    {
        org.apache.batik.ext.awt.image.spi.ImageWriterParams r0;
        java.lang.Integer $r1;

        r0 := @this: org.apache.batik.ext.awt.image.spi.ImageWriterParams;

        $r1 = r0.<org.apache.batik.ext.awt.image.spi.ImageWriterParams: java.lang.Integer resolution>;

        return $r1;
    }

    public java.lang.Float getJPEGQuality()
    {
        org.apache.batik.ext.awt.image.spi.ImageWriterParams r0;
        java.lang.Float $r1;

        r0 := @this: org.apache.batik.ext.awt.image.spi.ImageWriterParams;

        $r1 = r0.<org.apache.batik.ext.awt.image.spi.ImageWriterParams: java.lang.Float jpegQuality>;

        return $r1;
    }

    public java.lang.Boolean getJPEGForceBaseline()
    {
        org.apache.batik.ext.awt.image.spi.ImageWriterParams r0;
        java.lang.Boolean $r1;

        r0 := @this: org.apache.batik.ext.awt.image.spi.ImageWriterParams;

        $r1 = r0.<org.apache.batik.ext.awt.image.spi.ImageWriterParams: java.lang.Boolean jpegForceBaseline>;

        return $r1;
    }

    public java.lang.String getCompressionMethod()
    {
        org.apache.batik.ext.awt.image.spi.ImageWriterParams r0;
        java.lang.String $r1;

        r0 := @this: org.apache.batik.ext.awt.image.spi.ImageWriterParams;

        $r1 = r0.<org.apache.batik.ext.awt.image.spi.ImageWriterParams: java.lang.String compressionMethod>;

        return $r1;
    }

    public void setResolution(int)
    {
        org.apache.batik.ext.awt.image.spi.ImageWriterParams r0;
        int i0;
        java.lang.Integer $r1;

        r0 := @this: org.apache.batik.ext.awt.image.spi.ImageWriterParams;

        i0 := @parameter0: int;

        $r1 = new java.lang.Integer;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i0);

        r0.<org.apache.batik.ext.awt.image.spi.ImageWriterParams: java.lang.Integer resolution> = $r1;

        return;
    }

    public void setJPEGQuality(float, boolean)
    {
        java.lang.Float $r1;
        org.apache.batik.ext.awt.image.spi.ImageWriterParams r0;
        float f0;
        java.lang.Boolean $r2;
        boolean z0;

        r0 := @this: org.apache.batik.ext.awt.image.spi.ImageWriterParams;

        f0 := @parameter0: float;

        z0 := @parameter1: boolean;

        $r1 = new java.lang.Float;

        specialinvoke $r1.<java.lang.Float: void <init>(float)>(f0);

        r0.<org.apache.batik.ext.awt.image.spi.ImageWriterParams: java.lang.Float jpegQuality> = $r1;

        if z0 == 0 goto label1;

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label2;

     label1:
        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label2:
        r0.<org.apache.batik.ext.awt.image.spi.ImageWriterParams: java.lang.Boolean jpegForceBaseline> = $r2;

        return;
    }

    public void setCompressionMethod(java.lang.String)
    {
        org.apache.batik.ext.awt.image.spi.ImageWriterParams r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.ext.awt.image.spi.ImageWriterParams;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.batik.ext.awt.image.spi.ImageWriterParams: java.lang.String compressionMethod> = r1;

        return;
    }
}
