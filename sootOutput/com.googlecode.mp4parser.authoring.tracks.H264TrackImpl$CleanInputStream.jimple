public class com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$CleanInputStream extends java.io.FilterInputStream
{
    int prevprev;
    int prev;
    final com.googlecode.mp4parser.authoring.tracks.H264TrackImpl this$0;

    void <init>(com.googlecode.mp4parser.authoring.tracks.H264TrackImpl, java.io.InputStream)
    {
        com.googlecode.mp4parser.authoring.tracks.H264TrackImpl r1;
        int $i1, $i3;
        com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$CleanInputStream r0;
        java.io.InputStream r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$CleanInputStream;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl;

        r2 := @parameter1: java.io.InputStream;

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$CleanInputStream: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl this$0> = r1;

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>(r2);

        $i1 = (int) -1;

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$CleanInputStream: int prevprev> = $i1;

        $i3 = (int) -1;

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$CleanInputStream: int prev> = $i3;

        return;
    }

    public boolean markSupported()
    {
        com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$CleanInputStream r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$CleanInputStream;

        return 0;
    }

    public int read() throws java.io.IOException
    {
        int $i0, $i1, $i2, i3, $i4, $i6, $i8;
        com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$CleanInputStream r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$CleanInputStream;

        $i0 = specialinvoke r0.<java.io.FilterInputStream: int read()>();

        i3 = $i0;

        if $i0 != 3 goto label1;

        $i1 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$CleanInputStream: int prevprev>;

        if $i1 != 0 goto label1;

        $i2 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$CleanInputStream: int prev>;

        if $i2 != 0 goto label1;

        $i6 = (int) -1;

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$CleanInputStream: int prevprev> = $i6;

        $i8 = (int) -1;

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$CleanInputStream: int prev> = $i8;

        i3 = specialinvoke r0.<java.io.FilterInputStream: int read()>();

     label1:
        $i4 = r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$CleanInputStream: int prev>;

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$CleanInputStream: int prevprev> = $i4;

        r0.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$CleanInputStream: int prev> = i3;

        return i3;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        byte[] r0;
        java.lang.IndexOutOfBoundsException $r6;
        java.lang.NullPointerException $r5;
        byte $b5, $b7;
        int i0, i1, $i2, $i3, $i4, $i6, $i8, i9, $i11, $i13, $i15;
        com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$CleanInputStream r1;
        java.io.IOException $r3;

        r1 := @this: com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$CleanInputStream;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r0 != null goto label01;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>()>();

        throw $r5;

     label01:
        if i0 < 0 goto label02;

        if i1 < 0 goto label02;

        $i2 = lengthof r0;

        $i3 = $i2 - i0;

        if i1 <= $i3 goto label03;

     label02:
        $r6 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r6;

     label03:
        if i1 != 0 goto label04;

        return 0;

     label04:
        $i4 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$CleanInputStream: int read()>();

        $i11 = (int) -1;

        if $i4 != $i11 goto label05;

        $i13 = (int) -1;

        return $i13;

     label05:
        $b5 = (byte) $i4;

        r0[i0] = $b5;

        i9 = 1;

     label06:
        goto label09;

     label07:
        $i6 = virtualinvoke r1.<com.googlecode.mp4parser.authoring.tracks.H264TrackImpl$CleanInputStream: int read()>();

        $i15 = (int) -1;

        if $i6 != $i15 goto label08;

        goto label12;

     label08:
        $i8 = i0 + i9;

        $b7 = (byte) $i6;

        r0[$i8] = $b7;

        i9 = i9 + 1;

     label09:
        if i9 < i1 goto label07;

     label10:
        goto label12;

     label11:
        $r3 := @caughtexception;

     label12:
        return i9;

        catch java.io.IOException from label06 to label10 with label11;
    }
}
