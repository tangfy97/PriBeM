public final class org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder extends org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase
{
    protected long mValue;

    public void <init>()
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder r0;

        r0 := @this: org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder;

        specialinvoke r0.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$DecoderBase: void <init>()>();

        return;
    }

    public java.lang.String getType()
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder r0;

        r0 := @this: org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder;

        return "long";
    }

    public long getValue()
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder r0;
        long $l0;

        r0 := @this: org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder;

        $l0 = r0.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: long mValue>;

        return $l0;
    }

    public void decode(java.lang.String) throws java.lang.IllegalArgumentException
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder r1;
        long $l3, $l5, $l8, $l9, $l17;
        int $i0, $i2, $i4, $i6, $i7, $i10, $i11, i12, $i13, $i14, i15, i16, $i18, $i19, $i21;
        java.lang.String r0, $r2;
        boolean z0, $z2, $z3;
        char $c1;

        r1 := @this: org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i18 = (int) $c1;

        if $i18 != 45 goto label01;

        $z3 = 1;

        $z2 = 1;

        goto label02;

     label01:
        $z3 = 0;

        $z2 = 0;

     label02:
        z0 = $z2;

        if $z3 != 0 goto label03;

        $i19 = (int) $c1;

        if $i19 != 43 goto label04;

     label03:
        i12 = virtualinvoke r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: int skipSignAndZeroes(java.lang.String,char,boolean,int)>(r0, $c1, 1, $i0);

        goto label05;

     label04:
        i12 = virtualinvoke r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: int skipSignAndZeroes(java.lang.String,char,boolean,int)>(r0, $c1, 0, $i0);

     label05:
        $i10 = r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: int mNextPtr>;

        $i11 = $i0 - $i10;

        if $i11 != 0 goto label08;

        if z0 == 0 goto label06;

        $i13 = neg i12;

        goto label07;

     label06:
        $i13 = i12;

     label07:
        $l9 = (long) $i13;

        r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: long mValue> = $l9;

        return;

     label08:
        virtualinvoke r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: void verifyDigits(java.lang.String,int,int)>(r0, $i10, $i0);

        if $i11 > 8 goto label11;

        $i6 = $i10 + $i11;

        $i7 = staticinvoke <org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: int parseInt(int,java.lang.String,int,int)>(i12, r0, $i10, $i6);

        if z0 == 0 goto label09;

        $i14 = neg $i7;

        goto label10;

     label09:
        $i14 = $i7;

     label10:
        $l8 = (long) $i14;

        r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: long mValue> = $l8;

        return;

     label11:
        $i21 = (int) -1;

        i15 = $i10 + $i21;

        i16 = $i11 + 1;

        if i16 > 18 goto label14;

        $i4 = i15 + i16;

        $l5 = staticinvoke <org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: long parseLong(java.lang.String,int,int)>(r0, i15, $i4);

        if z0 == 0 goto label12;

        $l17 = neg $l5;

        goto label13;

     label12:
        $l17 = $l5;

     label13:
        r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: long mValue> = $l17;

        return;

     label14:
        $i2 = i15 + i16;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i15, $i2);

        $l3 = specialinvoke r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: long parseUsingBD(java.lang.String,boolean)>($r2, z0);

        r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: long mValue> = $l3;

        return;
    }

    public void decode(char[], int, int) throws java.lang.IllegalArgumentException
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder r1;
        long $l3, $l5, $l9, $l14, $l17;
        int i0, i2, $i4, $i6, $i7, $i8, $i10, $i11, i12, $i13, i15, i16, $i18, $i19, $i21;
        java.lang.String $r3;
        boolean z0, $z2, $z3;
        char c1;
        char[] r0;

        r1 := @this: org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        c1 = r0[i0];

        $i18 = (int) c1;

        if $i18 != 45 goto label01;

        $z3 = 1;

        $z2 = 1;

        goto label02;

     label01:
        $z3 = 0;

        $z2 = 0;

     label02:
        z0 = $z2;

        if $z3 != 0 goto label03;

        $i19 = (int) c1;

        if $i19 != 43 goto label04;

     label03:
        i12 = virtualinvoke r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: int skipSignAndZeroes(char[],char,boolean,int,int)>(r0, c1, 1, i0, i2);

        goto label05;

     label04:
        i12 = virtualinvoke r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: int skipSignAndZeroes(char[],char,boolean,int,int)>(r0, c1, 0, i0, i2);

     label05:
        $i10 = r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: int mNextPtr>;

        $i11 = i2 - $i10;

        if $i11 != 0 goto label08;

        if z0 == 0 goto label06;

        $i13 = neg i12;

        goto label07;

     label06:
        $i13 = i12;

     label07:
        $l9 = (long) $i13;

        r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: long mValue> = $l9;

        return;

     label08:
        virtualinvoke r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: void verifyDigits(char[],int,int,int)>(r0, i0, i2, $i10);

        if $i11 > 8 goto label11;

        $i6 = $i10 + $i11;

        $i7 = staticinvoke <org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: int parseInt(int,char[],int,int)>(i12, r0, $i10, $i6);

        if z0 == 0 goto label09;

        $i8 = neg $i7;

        $l14 = (long) $i8;

        goto label10;

     label09:
        $l14 = (long) $i7;

     label10:
        r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: long mValue> = $l14;

        return;

     label11:
        $i21 = (int) -1;

        i15 = $i10 + $i21;

        i16 = $i11 + 1;

        if i16 > 18 goto label14;

        $i4 = i15 + i16;

        $l5 = staticinvoke <org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: long parseLong(char[],int,int)>(r0, i15, $i4);

        if z0 == 0 goto label12;

        $l17 = neg $l5;

        goto label13;

     label12:
        $l17 = $l5;

     label13:
        r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: long mValue> = $l17;

        return;

     label14:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(char[],int,int)>(r0, i15, i16);

        $l3 = specialinvoke r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: long parseUsingBD(java.lang.String,boolean)>($r3, z0);

        r1.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: long mValue> = $l3;

        return;
    }

    private long parseUsingBD(java.lang.String, boolean)
    {
        org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder r6;
        long $l1, $l3;
        java.lang.StringBuffer $r4, $r5, $r8, $r9;
        int $i0, $i2;
        java.math.BigInteger $r0, $r2, $r11, $r12;
        java.lang.String r1, $r7, $r10;
        boolean z0;
        java.lang.IllegalArgumentException $r3;

        r6 := @this: org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r0 = new java.math.BigInteger;

        specialinvoke $r0.<java.math.BigInteger: void <init>(java.lang.String)>(r1);

        if z0 == 0 goto label1;

        $r11 = virtualinvoke $r0.<java.math.BigInteger: java.math.BigInteger negate()>();

        $r12 = <org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: java.math.BigInteger BD_MIN_LONG>;

        $i2 = virtualinvoke $r11.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r12);

        if $i2 < 0 goto label2;

        $l3 = virtualinvoke $r11.<java.math.BigInteger: long longValue()>();

        return $l3;

     label1:
        $r2 = <org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: java.math.BigInteger BD_MAX_LONG>;

        $i0 = virtualinvoke $r0.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r2);

        if $i0 > 0 goto label2;

        $l1 = virtualinvoke $r0.<java.math.BigInteger: long longValue()>();

        return $l1;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("value \"");

        $r7 = virtualinvoke r6.<org.codehaus.stax2.ri.typed.ValueDecoderFactory$LongDecoder: java.lang.String lexicalDesc(java.lang.String)>(r1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" not a valid long: overflow.");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r3;
    }
}
