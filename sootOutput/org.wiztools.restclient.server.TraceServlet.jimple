public class org.wiztools.restclient.server.TraceServlet extends javax.servlet.http.HttpServlet
{

    public void <init>()
    {
        org.wiztools.restclient.server.TraceServlet r0;

        r0 := @this: org.wiztools.restclient.server.TraceServlet;

        specialinvoke r0.<javax.servlet.http.HttpServlet: void <init>()>();

        return;
    }

    private void process(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException, javax.servlet.ServletException
    {
        java.util.Enumeration $r13, $r19, $r35;
        boolean $z0, $z1, $z2;
        java.io.PrintWriter $r1;
        org.wiztools.restclient.server.TraceServlet r44;
        java.lang.StringBuilder $r2, $r3, $r6, $r8, $r9, $r11, $r14, $r15, $r17, $r26, $r27, $r28, $r30, $r31, $r32, $r38, $r39, $r40, $r41, $r42;
        javax.servlet.ServletInputStream $r20;
        java.lang.String[] $r22, $r24;
        javax.servlet.http.HttpServletRequest r4;
        int i0, i1, i2, i3;
        java.lang.String $r5, $r7, $r10, $r12, $r16, $r18, $r21, $r25, $r29, $r33, $r37, $r43, r45, r46, r47, r48, r49;
        javax.servlet.http.HttpServletResponse r0;
        java.lang.Object $r23, $r34, $r36;

        r44 := @this: org.wiztools.restclient.server.TraceServlet;

        r4 := @parameter0: javax.servlet.http.HttpServletRequest;

        r0 := @parameter1: javax.servlet.http.HttpServletResponse;

        interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>("text/plain; charset=UTF-8");

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: java.io.PrintWriter getWriter()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("**RESTClient TraceServlet**");

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("\n*Method*");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r5 = interfaceinvoke r4.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("\n*Path Info*");

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r10 = interfaceinvoke r4.<javax.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("\n*Headers*");

        $r13 = interfaceinvoke r4.<javax.servlet.http.HttpServletRequest: java.util.Enumeration getHeaderNames()>();

     label01:
        $z0 = interfaceinvoke $r13.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label04;

        $r34 = interfaceinvoke $r13.<java.util.Enumeration: java.lang.Object nextElement()>();

        r45 = (java.lang.String) $r34;

        $r35 = interfaceinvoke r4.<javax.servlet.http.HttpServletRequest: java.util.Enumeration getHeaders(java.lang.String)>(r45);

     label02:
        $z2 = interfaceinvoke $r35.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z2 == 0 goto label03;

        $r36 = interfaceinvoke $r35.<java.util.Enumeration: java.lang.Object nextElement()>();

        r46 = (java.lang.String) $r36;

        $r37 = virtualinvoke r46.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\n", "\n\t");

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r43);

        goto label02;

     label03:
        goto label01;

     label04:
        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("\n*Query String*");

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r16 = interfaceinvoke r4.<javax.servlet.http.HttpServletRequest: java.lang.String getQueryString()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("\n*Parameters*");

        $r19 = interfaceinvoke r4.<javax.servlet.http.HttpServletRequest: java.util.Enumeration getParameterNames()>();

     label05:
        $z1 = interfaceinvoke $r19.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label08;

        $r23 = interfaceinvoke $r19.<java.util.Enumeration: java.lang.Object nextElement()>();

        r47 = (java.lang.String) $r23;

        $r24 = interfaceinvoke r4.<javax.servlet.http.HttpServletRequest: java.lang.String[] getParameterValues(java.lang.String)>(r47);

        i0 = lengthof $r24;

        i1 = 0;

     label06:
        if i1 >= i0 goto label07;

        r48 = $r24[i1];

        $r25 = virtualinvoke r48.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\n", "\n\t");

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t~Parameter Name: ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r47);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r29);

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("\t~Parameter Value:");

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>($r33);

        i1 = i1 + 1;

        goto label06;

     label07:
        goto label05;

     label08:
        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>("\n*Body (First 100 characters only)*");

        $r20 = interfaceinvoke r4.<javax.servlet.http.HttpServletRequest: javax.servlet.ServletInputStream getInputStream()>();

        $r21 = staticinvoke <org.wiztools.restclient.server.Util: java.lang.String inputStreamToString(java.io.InputStream)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        i2 = lengthof $r22;

        i3 = 0;

     label09:
        if i3 >= i2 goto label10;

        r49 = $r22[i3];

        virtualinvoke $r1.<java.io.PrintWriter: void print(java.lang.String)>("\t");

        virtualinvoke $r1.<java.io.PrintWriter: void println(java.lang.String)>(r49);

        i3 = i3 + 1;

        goto label09;

     label10:
        virtualinvoke $r1.<java.io.PrintWriter: void println()>();

        virtualinvoke $r1.<java.io.PrintWriter: void flush()>();

        virtualinvoke $r1.<java.io.PrintWriter: void close()>();

        return;
    }

    public void doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException, javax.servlet.ServletException
    {
        javax.servlet.http.HttpServletResponse r2;
        org.wiztools.restclient.server.TraceServlet r0;
        javax.servlet.http.HttpServletRequest r1;

        r0 := @this: org.wiztools.restclient.server.TraceServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        specialinvoke r0.<org.wiztools.restclient.server.TraceServlet: void process(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2);

        return;
    }

    public void doPost(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException, javax.servlet.ServletException
    {
        javax.servlet.http.HttpServletResponse r2;
        org.wiztools.restclient.server.TraceServlet r0;
        javax.servlet.http.HttpServletRequest r1;

        r0 := @this: org.wiztools.restclient.server.TraceServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        specialinvoke r0.<org.wiztools.restclient.server.TraceServlet: void process(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2);

        return;
    }

    public void doPut(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException, javax.servlet.ServletException
    {
        javax.servlet.http.HttpServletResponse r2;
        org.wiztools.restclient.server.TraceServlet r0;
        javax.servlet.http.HttpServletRequest r1;

        r0 := @this: org.wiztools.restclient.server.TraceServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        specialinvoke r0.<org.wiztools.restclient.server.TraceServlet: void process(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2);

        return;
    }

    public void doDelete(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException, javax.servlet.ServletException
    {
        javax.servlet.http.HttpServletResponse r2;
        org.wiztools.restclient.server.TraceServlet r0;
        javax.servlet.http.HttpServletRequest r1;

        r0 := @this: org.wiztools.restclient.server.TraceServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        specialinvoke r0.<org.wiztools.restclient.server.TraceServlet: void process(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2);

        return;
    }
}
