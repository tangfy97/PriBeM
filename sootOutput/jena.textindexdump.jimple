public class jena.textindexdump extends arq.cmdline.CmdARQ
{
    private static org.slf4j.Logger log;
    public static final arq.cmdline.ArgDecl assemblerDescDecl;
    protected org.apache.jena.query.text.TextIndex textIndex;

    public static transient void main(java.lang.String[])
    {
        java.lang.String[] r1;
        jena.textindexdump $r0;

        r1 := @parameter0: java.lang.String[];

        staticinvoke <org.apache.jena.query.text.TextQuery: void init()>();

        $r0 = new jena.textindexdump;

        specialinvoke $r0.<jena.textindexdump: void <init>(java.lang.String[])>(r1);

        virtualinvoke $r0.<jena.textindexdump: void mainRun()>();

        return;
    }

    protected void <init>(java.lang.String[])
    {
        arq.cmdline.ArgDecl $r2;
        java.lang.String[] r1;
        jena.textindexdump r0;

        r0 := @this: jena.textindexdump;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<arq.cmdline.CmdARQ: void <init>(java.lang.String[])>(r1);

        r0.<jena.textindexdump: org.apache.jena.query.text.TextIndex textIndex> = null;

        $r2 = <jena.textindexdump: arq.cmdline.ArgDecl assemblerDescDecl>;

        specialinvoke r0.<arq.cmdline.CmdARQ: void add(arq.cmdline.ArgDecl,java.lang.String,java.lang.String)>($r2, "--desc=", "Assembler description file");

        return;
    }

    protected void processModulesAndArgs()
    {
        arq.cmdline.ArgDecl $r1, $r6, $r9;
        org.apache.jena.query.text.TextIndex $r4;
        jena.textindexdump r0;
        int $i0, $i1, $i2;
        java.lang.String r12;
        boolean $z0;
        com.hp.hpl.jena.rdf.model.Resource $r2;
        java.util.List $r7, $r8;
        arq.cmd.CmdException $r5, $r10, $r11;
        java.lang.Object $r3;

        r0 := @this: jena.textindexdump;

        specialinvoke r0.<arq.cmdline.CmdARQ: void processModulesAndArgs()>();

        $r1 = <jena.textindexdump: arq.cmdline.ArgDecl assemblerDescDecl>;

        $z0 = specialinvoke r0.<arq.cmdline.CmdARQ: boolean contains(arq.cmdline.ArgDecl)>($r1);

        if $z0 == 0 goto label3;

        $r6 = <jena.textindexdump: arq.cmdline.ArgDecl assemblerDescDecl>;

        $r7 = virtualinvoke r0.<jena.textindexdump: java.util.List getValues(arq.cmdline.ArgDecl)>($r6);

        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i1 == 1 goto label1;

        $r11 = new arq.cmd.CmdException;

        specialinvoke $r11.<arq.cmd.CmdException: void <init>(java.lang.String)>("Multiple assembler descriptions given");

        throw $r11;

     label1:
        $r8 = virtualinvoke r0.<jena.textindexdump: java.util.List getPositional()>();

        $i2 = interfaceinvoke $r8.<java.util.List: int size()>();

        if $i2 == 0 goto label2;

        $r10 = new arq.cmd.CmdException;

        specialinvoke $r10.<arq.cmd.CmdException: void <init>(java.lang.String)>("Additional assembler descriptions given");

        throw $r10;

     label2:
        $r9 = <jena.textindexdump: arq.cmdline.ArgDecl assemblerDescDecl>;

        r12 = virtualinvoke r0.<jena.textindexdump: java.lang.String getValue(arq.cmdline.ArgDecl)>($r9);

        goto label5;

     label3:
        $i0 = virtualinvoke r0.<jena.textindexdump: int getNumPositional()>();

        if $i0 == 1 goto label4;

        $r5 = new arq.cmd.CmdException;

        specialinvoke $r5.<arq.cmd.CmdException: void <init>(java.lang.String)>("Multiple assembler descriptions given");

        throw $r5;

     label4:
        r12 = virtualinvoke r0.<jena.textindexdump: java.lang.String getPositionalArg(int)>(0);

     label5:
        $r2 = <org.apache.jena.query.text.assembler.TextVocab: com.hp.hpl.jena.rdf.model.Resource textIndex>;

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.core.assembler.AssemblerUtils: java.lang.Object build(java.lang.String,com.hp.hpl.jena.rdf.model.Resource)>(r12, $r2);

        $r4 = (org.apache.jena.query.text.TextIndex) $r3;

        r0.<jena.textindexdump: org.apache.jena.query.text.TextIndex textIndex> = $r4;

        return;
    }

    protected java.lang.String getSummary()
    {
        jena.textindexdump r1;
        java.lang.StringBuilder $r0, $r3, $r4;
        java.lang.String $r2, $r5;

        r1 := @this: jena.textindexdump;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<jena.textindexdump: java.lang.String getCommandName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" assemblerFile");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    protected void exec()
    {
        org.apache.jena.query.text.TextIndex $r1, $r2, $r6, $r10, $r12;
        jena.textindexdump r0;
        java.lang.String $r7, $r9;
        boolean $z0, $z1;
        java.io.PrintStream $r4;
        org.apache.jena.query.text.TextIndexLucene $r13;
        java.lang.StringBuilder $r3, $r5, $r8;
        org.apache.jena.query.text.TextIndexSolr $r11;

        r0 := @this: jena.textindexdump;

        $r1 = r0.<jena.textindexdump: org.apache.jena.query.text.TextIndex textIndex>;

        $z0 = $r1 instanceof org.apache.jena.query.text.TextIndexLucene;

        if $z0 == 0 goto label1;

        $r12 = r0.<jena.textindexdump: org.apache.jena.query.text.TextIndex textIndex>;

        $r13 = (org.apache.jena.query.text.TextIndexLucene) $r12;

        staticinvoke <jena.textindexdump: void dump(org.apache.jena.query.text.TextIndexLucene)>($r13);

        goto label3;

     label1:
        $r2 = r0.<jena.textindexdump: org.apache.jena.query.text.TextIndex textIndex>;

        $z1 = $r2 instanceof org.apache.jena.query.text.TextIndexSolr;

        if $z1 == 0 goto label2;

        $r10 = r0.<jena.textindexdump: org.apache.jena.query.text.TextIndex textIndex>;

        $r11 = (org.apache.jena.query.text.TextIndexSolr) $r10;

        staticinvoke <jena.textindexdump: void dump(org.apache.jena.query.text.TextIndexSolr)>($r11);

        goto label3;

     label2:
        $r4 = <java.lang.System: java.io.PrintStream err>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported index type : ");

        $r6 = r0.<jena.textindexdump: org.apache.jena.query.text.TextIndex textIndex>;

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.util.Utils: java.lang.String className(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r9);

     label3:
        return;
    }

    private static void dump(org.apache.jena.query.text.TextIndexSolr)
    {
        java.io.PrintStream $r0;
        org.apache.jena.query.text.TextIndexSolr r1;

        r1 := @parameter0: org.apache.jena.query.text.TextIndexSolr;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Not implemented : dump Solr index");

        return;
    }

    private static void dump(org.apache.jena.query.text.TextIndexLucene)
    {
        org.apache.lucene.search.Query $r9;
        org.apache.lucene.search.ScoreDoc r12;
        org.apache.lucene.index.IndexableField r21;
        org.apache.lucene.document.Document $r18;
        org.apache.lucene.store.Directory $r1;
        org.apache.lucene.search.ScoreDoc[] r11;
        boolean $z0;
        org.apache.jena.query.text.TextIndexException $r32;
        org.apache.lucene.index.DirectoryReader $r3;
        org.apache.jena.query.text.TextIndexLucene r0;
        java.lang.Exception $r31;
        java.lang.StringBuilder $r13, $r15, $r16, $r22, $r24, $r26, $r27, $r29;
        org.apache.lucene.search.IndexSearcher $r4;
        org.apache.jena.query.text.EntityDefinition $r7;
        int i0, $i1, $i2, i3;
        java.lang.String $r8, $r17, $r25, $r28, $r30;
        java.io.PrintStream $r14, $r23;
        org.apache.lucene.search.TopDocs $r10;
        java.util.Iterator $r19;
        org.apache.lucene.analysis.Analyzer $r2;
        org.apache.lucene.util.Version $r6;
        org.apache.lucene.queryparser.classic.QueryParser $r5;
        java.lang.Object $r20;

        r0 := @parameter0: org.apache.jena.query.text.TextIndexLucene;

     label1:
        $r1 = virtualinvoke r0.<org.apache.jena.query.text.TextIndexLucene: org.apache.lucene.store.Directory getDirectory()>();

        $r2 = virtualinvoke r0.<org.apache.jena.query.text.TextIndexLucene: org.apache.lucene.analysis.Analyzer getAnalyzer()>();

        $r3 = staticinvoke <org.apache.lucene.index.DirectoryReader: org.apache.lucene.index.DirectoryReader open(org.apache.lucene.store.Directory)>($r1);

        $r4 = new org.apache.lucene.search.IndexSearcher;

        specialinvoke $r4.<org.apache.lucene.search.IndexSearcher: void <init>(org.apache.lucene.index.IndexReader)>($r3);

        $r5 = new org.apache.lucene.queryparser.classic.QueryParser;

        $r6 = <org.apache.jena.query.text.TextIndexLucene: org.apache.lucene.util.Version VER>;

        $r7 = virtualinvoke r0.<org.apache.jena.query.text.TextIndexLucene: org.apache.jena.query.text.EntityDefinition getDocDef()>();

        $r8 = virtualinvoke $r7.<org.apache.jena.query.text.EntityDefinition: java.lang.String getPrimaryField()>();

        specialinvoke $r5.<org.apache.lucene.queryparser.classic.QueryParser: void <init>(org.apache.lucene.util.Version,java.lang.String,org.apache.lucene.analysis.Analyzer)>($r6, $r8, $r2);

        $r9 = virtualinvoke $r5.<org.apache.lucene.queryparser.classic.QueryParser: org.apache.lucene.search.Query parse(java.lang.String)>("*:*");

        $r10 = virtualinvoke $r4.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.TopDocs search(org.apache.lucene.search.Query,int)>($r9, 1000);

        r11 = $r10.<org.apache.lucene.search.TopDocs: org.apache.lucene.search.ScoreDoc[] scoreDocs>;

        i0 = lengthof r11;

        i3 = 0;

     label2:
        if i3 >= i0 goto label5;

        r12 = r11[i3];

        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Doc: ");

        $i1 = r12.<org.apache.lucene.search.ScoreDoc: int doc>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r17);

        $i2 = r12.<org.apache.lucene.search.ScoreDoc: int doc>;

        $r18 = virtualinvoke $r4.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.document.Document doc(int)>($i2);

        $r19 = virtualinvoke $r18.<org.apache.lucene.document.Document: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r21 = (org.apache.lucene.index.IndexableField) $r20;

        $r23 = <java.lang.System: java.io.PrintStream out>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r25 = interfaceinvoke r21.<org.apache.lucene.index.IndexableField: java.lang.String name()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r28 = interfaceinvoke r21.<org.apache.lucene.index.IndexableField: java.lang.String stringValue()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r30);

        goto label3;

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        goto label7;

     label6:
        $r31 := @caughtexception;

        $r32 = new org.apache.jena.query.text.TextIndexException;

        specialinvoke $r32.<org.apache.jena.query.text.TextIndexException: void <init>(java.lang.Throwable)>($r31);

        throw $r32;

     label7:
        return;

        catch java.lang.Exception from label1 to label5 with label6;
    }

    static void <clinit>()
    {
        arq.cmdline.ArgDecl $r1;
        java.lang.String[] $r2;
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Ljena/textindexdump;");

        <jena.textindexdump: org.slf4j.Logger log> = $r0;

        $r1 = new arq.cmdline.ArgDecl;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "dataset";

        specialinvoke $r1.<arq.cmdline.ArgDecl: void <init>(boolean,java.lang.String,java.lang.String[])>(1, "desc", $r2);

        <jena.textindexdump: arq.cmdline.ArgDecl assemblerDescDecl> = $r1;

        return;
    }
}
