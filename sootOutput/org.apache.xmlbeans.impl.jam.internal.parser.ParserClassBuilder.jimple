public class org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder extends org.apache.xmlbeans.impl.jam.provider.JamClassBuilder implements org.apache.xmlbeans.impl.jam.provider.JamClassPopulator
{
    private static final boolean VERBOSE;
    private org.apache.xmlbeans.impl.jam.provider.ResourcePath mSourcePath;
    private boolean mVerbose;
    private java.io.PrintWriter mOut;

    private void <init>()
    {
        java.io.PrintWriter $r1;
        java.io.PrintStream $r2;
        org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.provider.JamClassBuilder: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder: boolean mVerbose> = 0;

        $r1 = new java.io.PrintWriter;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r2);

        r0.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder: java.io.PrintWriter mOut> = $r1;

        return;
    }

    public void <init>(org.apache.xmlbeans.impl.jam.provider.JamServiceContext)
    {
        java.io.PrintWriter $r1;
        java.io.PrintStream $r2;
        org.apache.xmlbeans.impl.jam.provider.JamServiceContext r3;
        org.apache.xmlbeans.impl.jam.provider.ResourcePath $r4;
        org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder;

        r3 := @parameter0: org.apache.xmlbeans.impl.jam.provider.JamServiceContext;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.provider.JamClassBuilder: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder: boolean mVerbose> = 0;

        $r1 = new java.io.PrintWriter;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r2);

        r0.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder: java.io.PrintWriter mOut> = $r1;

        $r4 = interfaceinvoke r3.<org.apache.xmlbeans.impl.jam.provider.JamServiceContext: org.apache.xmlbeans.impl.jam.provider.ResourcePath getInputSourcepath()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder: org.apache.xmlbeans.impl.jam.provider.ResourcePath mSourcePath> = $r4;

        return;
    }

    public org.apache.xmlbeans.impl.jam.mutable.MClass build(java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder r9;
        boolean $z0, $z1;
        java.io.PrintWriter $r14, $r21, $r26;
        java.lang.StringBuffer $r4, $r5, $r6, $r7, $r15, $r16, $r17, $r18, $r22, $r23, $r27, $r28, $r36, $r38, $r39, $r40;
        int $i2, $i4;
        java.lang.String r0, r1, $r3, $r8, $r19, $r24, $r29;
        org.apache.xmlbeans.impl.jam.provider.ResourcePath $r10;
        char $c0, $c1;
        java.io.IOException $r33;
        java.lang.IllegalArgumentException $r34, $r35, $r37;
        java.io.InputStreamReader $r41;
        java.io.InputStream $r11;

        r9 := @this: org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label01;

        $r34 = new java.lang.IllegalArgumentException;

        specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null pkg");

        throw $r34;

     label01:
        if r1 != null goto label02;

        $r35 = new java.lang.IllegalArgumentException;

        specialinvoke $r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null name");

        throw $r35;

     label02:
        $r36 = new java.lang.StringBuffer;

        specialinvoke $r36.<java.lang.StringBuffer: void <init>()>();

        $c0 = <java.io.File: char separatorChar>;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>(46, $c0);

        $r4 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $c1 = <java.io.File: char separatorChar>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".java");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $i2 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(".");

        $i4 = (int) -1;

        if $i2 == $i4 goto label03;

        $r37 = new java.lang.IllegalArgumentException;

        specialinvoke $r37.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("inner classes are NYI at the moment");

        throw $r37;

     label03:
        $r10 = r9.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder: org.apache.xmlbeans.impl.jam.provider.ResourcePath mSourcePath>;

        $r11 = virtualinvoke $r10.<org.apache.xmlbeans.impl.jam.provider.ResourcePath: java.io.InputStream findInPath(java.lang.String)>($r8);

        if $r11 != null goto label05;

        $z1 = r9.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder: boolean mVerbose>;

        if $z1 == 0 goto label04;

        $r26 = r9.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder: java.io.PrintWriter mOut>;

        $r38 = new java.lang.StringBuffer;

        specialinvoke $r38.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[ParserClassBuilder] could not find ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r26.<java.io.PrintWriter: void println(java.lang.String)>($r29);

     label04:
        return null;

     label05:
        $z0 = r9.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder: boolean mVerbose>;

        if $z0 == 0 goto label06;

        $r14 = r9.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder: java.io.PrintWriter mOut>;

        $r39 = new java.lang.StringBuffer;

        specialinvoke $r39.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[ParserClassBuilder] loading class ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintWriter: void println(java.lang.String)>($r19);

        $r21 = r9.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder: java.io.PrintWriter mOut>;

        $r40 = new java.lang.StringBuffer;

        specialinvoke $r40.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[ParserClassBuilder] from file ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintWriter: void println(java.lang.String)>($r24);

     label06:
        $r41 = new java.io.InputStreamReader;

        specialinvoke $r41.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r11);

     label07:
        virtualinvoke $r41.<java.io.Reader: void close()>();

     label08:
        goto label10;

     label09:
        $r33 := @caughtexception;

        virtualinvoke $r33.<java.io.IOException: void printStackTrace()>();

        goto label10;

     label10:
        return null;

        catch java.io.IOException from label07 to label08 with label09;
    }

    public void populate(org.apache.xmlbeans.impl.jam.mutable.MClass)
    {
        java.lang.IllegalStateException $r0;
        org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder r1;
        org.apache.xmlbeans.impl.jam.mutable.MClass r2;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder;

        r2 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MClass;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("NYI");

        throw $r0;
    }

    private static org.apache.xmlbeans.impl.jam.mutable.MClass[] parse(java.io.Reader, org.apache.xmlbeans.impl.jam.JamClassLoader) throws java.lang.Exception
    {
        java.lang.IllegalStateException $r2;
        org.apache.xmlbeans.impl.jam.JamClassLoader r1;
        java.io.Reader r0;
        java.lang.IllegalArgumentException $r3, $r4;

        r0 := @parameter0: java.io.Reader;

        r1 := @parameter1: org.apache.xmlbeans.impl.jam.JamClassLoader;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null in");

        throw $r4;

     label1:
        if r1 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null loader");

        throw $r3;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("temporarily NI");

        throw $r2;
    }

    public static void main(java.lang.String[])
    {
        org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool $r0;
        java.lang.String[] r1;

        r1 := @parameter0: java.lang.String[];

        $r0 = new org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool;

        specialinvoke $r0.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: void <init>()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: void process(java.lang.String[])>(r1);

        return;
    }

    void <init>(org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$1)
    {
        org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$1 r1;
        org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$1;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder: void <init>()>();

        return;
    }

    static org.apache.xmlbeans.impl.jam.mutable.MClass[] access$100(java.io.Reader, org.apache.xmlbeans.impl.jam.JamClassLoader) throws java.lang.Exception
    {
        java.io.Reader r0;
        org.apache.xmlbeans.impl.jam.JamClassLoader r1;
        org.apache.xmlbeans.impl.jam.mutable.MClass[] $r2;

        r0 := @parameter0: java.io.Reader;

        r1 := @parameter1: org.apache.xmlbeans.impl.jam.JamClassLoader;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder: org.apache.xmlbeans.impl.jam.mutable.MClass[] parse(java.io.Reader,org.apache.xmlbeans.impl.jam.JamClassLoader)>(r0, r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder: boolean VERBOSE> = 0;

        return;
    }
}
