class com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ToStringHandler extends java.lang.Object implements com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$Handler
{
    final com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker this$0;

    private void <init>(com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker)
    {
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker r1;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ToStringHandler r0;

        r0 := @this: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ToStringHandler;

        r1 := @parameter0: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker;

        r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ToStringHandler: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean isInlinable()
    {
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ToStringHandler r0;

        r0 := @this: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ToStringHandler;

        return 1;
    }

    public void handle(java.lang.String, java.lang.Object)
    {
        com.google.gxp.compiler.dot.GraphSink $r2;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker $r1;
        com.google.gxp.compiler.dot.NodeShape $r5;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ToStringHandler r0;
        java.lang.Object r4;
        java.lang.String r3, $r6;

        r0 := @this: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ToStringHandler;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Object;

        $r1 = r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ToStringHandler: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker this$0>;

        $r2 = staticinvoke <com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: com.google.gxp.compiler.dot.GraphSink access$200(com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker)>($r1);

        $r5 = <com.google.gxp.compiler.dot.NodeShape: com.google.gxp.compiler.dot.NodeShape PLAIN_TEXT>;

        $r6 = staticinvoke <com.google.gxp.compiler.dot.ReflectiveGraphRenderer: java.lang.String access$100(java.lang.Object)>(r4);

        interfaceinvoke $r2.<com.google.gxp.compiler.dot.GraphSink: void simpleNode(java.lang.String,com.google.gxp.compiler.dot.NodeShape,java.lang.String)>(r3, $r5, $r6);

        return;
    }

    void <init>(com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker, com.google.gxp.compiler.dot.ReflectiveGraphRenderer$1)
    {
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$1 r2;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker r1;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ToStringHandler r0;

        r0 := @this: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ToStringHandler;

        r1 := @parameter0: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker;

        r2 := @parameter1: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$1;

        specialinvoke r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ToStringHandler: void <init>(com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker)>(r1);

        return;
    }
}
