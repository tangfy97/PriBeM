public class com.hp.hpl.jena.sparql.modify.request.QuadDataAcc extends com.hp.hpl.jena.sparql.modify.request.QuadDataAccSink implements com.hp.hpl.jena.sparql.syntax.TripleCollectorMark
{
    private final java.util.List quads;
    private final java.util.List quadsView;

    public void <init>()
    {
        com.hp.hpl.jena.sparql.modify.request.QuadDataAcc r0;
        java.util.ArrayList $r1;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.QuadDataAcc;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.modify.request.QuadDataAcc: void <init>(java.util.List)>($r1);

        return;
    }

    public void <init>(java.util.List)
    {
        org.apache.jena.atlas.lib.SinkToCollection $r1;
        java.util.List r2, $r3;
        com.hp.hpl.jena.sparql.modify.request.QuadDataAcc r0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.QuadDataAcc;

        r2 := @parameter0: java.util.List;

        $r1 = new org.apache.jena.atlas.lib.SinkToCollection;

        specialinvoke $r1.<org.apache.jena.atlas.lib.SinkToCollection: void <init>(java.util.Collection)>(r2);

        specialinvoke r0.<com.hp.hpl.jena.sparql.modify.request.QuadDataAccSink: void <init>(org.apache.jena.atlas.lib.Sink)>($r1);

        r0.<com.hp.hpl.jena.sparql.modify.request.QuadDataAcc: java.util.List quads> = r2;

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r2);

        r0.<com.hp.hpl.jena.sparql.modify.request.QuadDataAcc: java.util.List quadsView> = $r3;

        return;
    }

    public java.util.List getQuads()
    {
        java.util.List $r1;
        com.hp.hpl.jena.sparql.modify.request.QuadDataAcc r0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.QuadDataAcc;

        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.QuadDataAcc: java.util.List quadsView>;

        return $r1;
    }

    public int hashCode()
    {
        int $i0;
        java.util.List $r1;
        com.hp.hpl.jena.sparql.modify.request.QuadDataAcc r0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.QuadDataAcc;

        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.QuadDataAcc: java.util.List quads>;

        $i0 = interfaceinvoke $r1.<java.util.List: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.List $r3, $r4;
        com.hp.hpl.jena.sparql.modify.request.QuadDataAcc r1, r2;
        java.lang.Object r0;
        boolean $z0, $z1;

        r2 := @this: com.hp.hpl.jena.sparql.modify.request.QuadDataAcc;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof com.hp.hpl.jena.sparql.modify.request.QuadDataAcc;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (com.hp.hpl.jena.sparql.modify.request.QuadDataAcc) r0;

        $r4 = r2.<com.hp.hpl.jena.sparql.modify.request.QuadDataAcc: java.util.List quads>;

        $r3 = r1.<com.hp.hpl.jena.sparql.modify.request.QuadDataAcc: java.util.List quads>;

        $z1 = interfaceinvoke $r4.<java.util.List: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    public int mark()
    {
        int $i0;
        java.util.List $r1;
        com.hp.hpl.jena.sparql.modify.request.QuadDataAcc r0;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.QuadDataAcc;

        $r1 = r0.<com.hp.hpl.jena.sparql.modify.request.QuadDataAcc: java.util.List quads>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public void addTriple(int, com.hp.hpl.jena.graph.Triple)
    {
        java.util.List $r4;
        com.hp.hpl.jena.sparql.modify.request.QuadDataAcc r0;
        int i0;
        com.hp.hpl.jena.graph.Node $r3;
        com.hp.hpl.jena.graph.Triple r1;
        com.hp.hpl.jena.sparql.core.Quad $r2;

        r0 := @this: com.hp.hpl.jena.sparql.modify.request.QuadDataAcc;

        i0 := @parameter0: int;

        r1 := @parameter1: com.hp.hpl.jena.graph.Triple;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.modify.request.QuadDataAcc: void check(com.hp.hpl.jena.graph.Triple)>(r1);

        $r4 = r0.<com.hp.hpl.jena.sparql.modify.request.QuadDataAcc: java.util.List quads>;

        $r2 = new com.hp.hpl.jena.sparql.core.Quad;

        $r3 = r0.<com.hp.hpl.jena.sparql.modify.request.QuadDataAcc: com.hp.hpl.jena.graph.Node graphNode>;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.core.Quad: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Triple)>($r3, r1);

        interfaceinvoke $r4.<java.util.List: void add(int,java.lang.Object)>(i0, $r2);

        return;
    }

    public void addTriplePath(int, com.hp.hpl.jena.sparql.core.TriplePath)
    {
        java.lang.UnsupportedOperationException $r0;
        com.hp.hpl.jena.sparql.modify.request.QuadDataAcc r1;
        int i0;
        com.hp.hpl.jena.sparql.core.TriplePath r2;

        r1 := @this: com.hp.hpl.jena.sparql.modify.request.QuadDataAcc;

        i0 := @parameter0: int;

        r2 := @parameter1: com.hp.hpl.jena.sparql.core.TriplePath;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Can\'t add paths to quads");

        throw $r0;
    }
}
