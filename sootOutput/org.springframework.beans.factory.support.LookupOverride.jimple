public class org.springframework.beans.factory.support.LookupOverride extends org.springframework.beans.factory.support.MethodOverride
{
    private final java.lang.String beanName;

    public void <init>(java.lang.String, java.lang.String)
    {
        org.springframework.beans.factory.support.LookupOverride r0;
        java.lang.String r1, r2;

        r0 := @this: org.springframework.beans.factory.support.LookupOverride;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.springframework.beans.factory.support.MethodOverride: void <init>(java.lang.String)>(r1);

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r2, "Bean name must not be null");

        r0.<org.springframework.beans.factory.support.LookupOverride: java.lang.String beanName> = r2;

        return;
    }

    public java.lang.String getBeanName()
    {
        org.springframework.beans.factory.support.LookupOverride r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.beans.factory.support.LookupOverride;

        $r1 = r0.<org.springframework.beans.factory.support.LookupOverride: java.lang.String beanName>;

        return $r1;
    }

    public boolean matches(java.lang.reflect.Method)
    {
        org.springframework.beans.factory.support.LookupOverride r2;
        int $i0;
        java.lang.Class[] $r4;
        java.lang.String $r1, $r3;
        java.lang.reflect.Method r0;
        boolean $z0;

        r2 := @this: org.springframework.beans.factory.support.LookupOverride;

        r0 := @parameter0: java.lang.reflect.Method;

        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String getName()>();

        $r3 = virtualinvoke r2.<org.springframework.beans.factory.support.LookupOverride: java.lang.String getMethodName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r4;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String toString()
    {
        org.springframework.beans.factory.support.LookupOverride r1;
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7;
        java.lang.String $r2, $r5, $r8;

        r1 := @this: org.springframework.beans.factory.support.LookupOverride;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("LookupOverride for method \'");

        $r2 = virtualinvoke r1.<org.springframework.beans.factory.support.LookupOverride: java.lang.String getMethodName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'; will return bean \'");

        $r5 = r1.<org.springframework.beans.factory.support.LookupOverride: java.lang.String beanName>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public boolean equals(java.lang.Object)
    {
        org.springframework.beans.factory.support.LookupOverride r1, $r2;
        java.lang.Object r0;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, $z2;

        r1 := @this: org.springframework.beans.factory.support.LookupOverride;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.springframework.beans.factory.support.LookupOverride;

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r1.<org.springframework.beans.factory.support.MethodOverride: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label1;

        $r4 = r1.<org.springframework.beans.factory.support.LookupOverride: java.lang.String beanName>;

        $r2 = (org.springframework.beans.factory.support.LookupOverride) r0;

        $r3 = $r2.<org.springframework.beans.factory.support.LookupOverride: java.lang.String beanName>;

        $z2 = staticinvoke <org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z2 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int hashCode()
    {
        org.springframework.beans.factory.support.LookupOverride r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1;

        r0 := @this: org.springframework.beans.factory.support.LookupOverride;

        $i0 = specialinvoke r0.<org.springframework.beans.factory.support.MethodOverride: int hashCode()>();

        $i1 = 29 * $i0;

        $r1 = r0.<org.springframework.beans.factory.support.LookupOverride: java.lang.String beanName>;

        $i2 = staticinvoke <org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>($r1);

        $i3 = $i1 + $i2;

        return $i3;
    }
}
