class com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker extends com.hp.hpl.jena.util.iterator.NiceIterator implements com.hp.hpl.jena.util.iterator.ExtendedIterator
{
    boolean closed;
    java.util.Iterator baseNodeIt;
    com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode node;
    com.hp.hpl.jena.graph.Node nodeN;
    com.hp.hpl.jena.graph.Node predicate;
    java.util.Iterator succIt;
    com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode succ;
    java.util.Iterator aliasesIt;
    com.hp.hpl.jena.graph.Triple next;

    void <init>(boolean, com.hp.hpl.jena.graph.Node, java.util.HashMap)
    {
        java.util.Iterator $r4;
        java.util.Collection $r3;
        com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker r0;
        java.util.HashMap r2;
        com.hp.hpl.jena.graph.Node r1;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker;

        z0 := @parameter0: boolean;

        r1 := @parameter1: com.hp.hpl.jena.graph.Node;

        r2 := @parameter2: java.util.HashMap;

        specialinvoke r0.<com.hp.hpl.jena.util.iterator.NiceIterator: void <init>()>();

        r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: java.util.Iterator succIt> = null;

        r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: java.util.Iterator aliasesIt> = null;

        r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: com.hp.hpl.jena.graph.Node predicate> = r1;

        r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: boolean closed> = z0;

        $r3 = virtualinvoke r2.<java.util.HashMap: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

        r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: java.util.Iterator baseNodeIt> = $r4;

        virtualinvoke r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: void walkOne()>();

        return;
    }

    public boolean hasNext()
    {
        com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker r0;
        com.hp.hpl.jena.graph.Triple $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker;

        $r1 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: com.hp.hpl.jena.graph.Triple next>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.hp.hpl.jena.graph.Triple next()
    {
        com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker r0;
        com.hp.hpl.jena.graph.Triple r1;

        r0 := @this: com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker;

        r1 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: com.hp.hpl.jena.graph.Triple next>;

        virtualinvoke r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: void walkOne()>();

        return r1;
    }

    protected void walkOne()
    {
        com.hp.hpl.jena.graph.Node $r8, $r15, $r16, $r17, $r28, $r29, $r30, $r37, $r38, $r39;
        boolean $z0, $z1, $z2, $z3;
        java.util.Set $r41;
        com.hp.hpl.jena.graph.Triple $r14, $r26, $r36;
        com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode $r6, $r7, $r9, $r10, $r21, $r22, $r23, $r24, $r27, $r34, $r35, r40;
        java.util.Iterator $r1, $r2, $r3, $r4, $r11, $r12, $r13, $r18, $r19, $r25, $r31, $r32;
        com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker r0;
        java.lang.Object $r5, $r20, $r33;

        r0 := @this: com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker;

        $r1 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: java.util.Iterator aliasesIt>;

        if $r1 == null goto label04;

     label01:
        $r31 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: java.util.Iterator aliasesIt>;

        $z3 = interfaceinvoke $r31.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label03;

        $r32 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: java.util.Iterator aliasesIt>;

        $r33 = interfaceinvoke $r32.<java.util.Iterator: java.lang.Object next()>();

        r40 = (com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode) $r33;

        $r34 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode succ>;

        if r40 == $r34 goto label02;

        $r35 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode node>;

        if r40 == $r35 goto label02;

        $r36 = new com.hp.hpl.jena.graph.Triple;

        $r39 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: com.hp.hpl.jena.graph.Node nodeN>;

        $r38 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: com.hp.hpl.jena.graph.Node predicate>;

        $r37 = r40.<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode: com.hp.hpl.jena.graph.Node rdfNode>;

        specialinvoke $r36.<com.hp.hpl.jena.graph.Triple: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r39, $r38, $r37);

        r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: com.hp.hpl.jena.graph.Triple next> = $r36;

        return;

     label02:
        goto label01;

     label03:
        r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: java.util.Iterator aliasesIt> = null;

     label04:
        $r2 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: java.util.Iterator succIt>;

        if $r2 == null goto label08;

     label05:
        $r18 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: java.util.Iterator succIt>;

        $z2 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label07;

        $r19 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: java.util.Iterator succIt>;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        $r21 = (com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode) $r20;

        r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode succ> = $r21;

        $r23 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode succ>;

        $r22 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode node>;

        if $r23 != $r22 goto label06;

        goto label05;

     label06:
        $r24 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode succ>;

        $r25 = virtualinvoke $r24.<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode: java.util.Iterator siblingIterator()>();

        r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: java.util.Iterator aliasesIt> = $r25;

        $r26 = new com.hp.hpl.jena.graph.Triple;

        $r30 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: com.hp.hpl.jena.graph.Node nodeN>;

        $r29 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: com.hp.hpl.jena.graph.Node predicate>;

        $r27 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode succ>;

        $r28 = $r27.<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode: com.hp.hpl.jena.graph.Node rdfNode>;

        specialinvoke $r26.<com.hp.hpl.jena.graph.Triple: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r30, $r29, $r28);

        r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: com.hp.hpl.jena.graph.Triple next> = $r26;

        return;

     label07:
        r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: java.util.Iterator succIt> = null;

     label08:
        $r3 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: java.util.Iterator baseNodeIt>;

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r4 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: java.util.Iterator baseNodeIt>;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode) $r5;

        r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode node> = $r6;

        $r7 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode node>;

        $r8 = $r7.<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode: com.hp.hpl.jena.graph.Node rdfNode>;

        r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: com.hp.hpl.jena.graph.Node nodeN> = $r8;

        $r9 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode node>;

        $r10 = virtualinvoke $r9.<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode: com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode leadNode()>();

        $z1 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: boolean closed>;

        if $z1 == 0 goto label09;

        $r41 = $r10.<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode: java.util.Set succClosed>;

        goto label10;

     label09:
        $r41 = $r10.<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode: java.util.Set succ>;

     label10:
        $r11 = interfaceinvoke $r41.<java.util.Set: java.util.Iterator iterator()>();

        r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: java.util.Iterator succIt> = $r11;

        $r12 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: java.util.Iterator succIt>;

        $r13 = virtualinvoke $r10.<com.hp.hpl.jena.reasoner.transitiveReasoner.GraphNode: java.util.Iterator concatenateSiblings(java.util.Iterator)>($r12);

        r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: java.util.Iterator succIt> = $r13;

        $r14 = new com.hp.hpl.jena.graph.Triple;

        $r17 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: com.hp.hpl.jena.graph.Node nodeN>;

        $r16 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: com.hp.hpl.jena.graph.Node predicate>;

        $r15 = r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: com.hp.hpl.jena.graph.Node nodeN>;

        specialinvoke $r14.<com.hp.hpl.jena.graph.Triple: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r17, $r16, $r15);

        r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: com.hp.hpl.jena.graph.Triple next> = $r14;

        goto label12;

     label11:
        r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: com.hp.hpl.jena.graph.Triple next> = null;

     label12:
        return;
    }

    public volatile java.lang.Object next()
    {
        com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker r0;
        com.hp.hpl.jena.graph.Triple $r1;

        r0 := @this: com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveGraphCache$FullGraphWalker: com.hp.hpl.jena.graph.Triple next()>();

        return $r1;
    }
}
