public class org.tukaani.xz.check.CRC64 extends org.tukaani.xz.check.Check
{
    private static final long poly;
    private static final long[] crcTable;
    private long crc;

    public void <init>()
    {
        org.tukaani.xz.check.CRC64 r0;

        r0 := @this: org.tukaani.xz.check.CRC64;

        specialinvoke r0.<org.tukaani.xz.check.Check: void <init>()>();

        r0.<org.tukaani.xz.check.CRC64: long crc> = -1L;

        r0.<org.tukaani.xz.check.CRC64: int size> = 8;

        r0.<org.tukaani.xz.check.CRC64: java.lang.String name> = "CRC64";

        return;
    }

    public void update(byte[], int, int)
    {
        byte[] r1;
        long $l3, $l8, $l9, $l10, $l11;
        long[] $r2;
        byte $b5;
        int i0, i1, $i2, $i4, $i6, $i7, i12, $i13;
        org.tukaani.xz.check.CRC64 r0;

        r0 := @this: org.tukaani.xz.check.CRC64;

        r1 := @parameter0: byte[];

        i12 := @parameter1: int;

        i0 := @parameter2: int;

        i1 = i12 + i0;

     label1:
        if i12 >= i1 goto label2;

        $r2 = <org.tukaani.xz.check.CRC64: long[] crcTable>;

        $i2 = i12;

        i12 = i12 + 1;

        $b5 = r1[$i2];

        $l3 = r0.<org.tukaani.xz.check.CRC64: long crc>;

        $i4 = (int) $l3;

        $i13 = (int) $b5;

        $i6 = $i13 ^ $i4;

        $i7 = $i6 & 255;

        $l10 = $r2[$i7];

        $l8 = r0.<org.tukaani.xz.check.CRC64: long crc>;

        $l9 = $l8 >>> 8;

        $l11 = $l10 ^ $l9;

        r0.<org.tukaani.xz.check.CRC64: long crc> = $l11;

        goto label1;

     label2:
        return;
    }

    public byte[] finish()
    {
        byte[] r1;
        long $l0, l1, $l4;
        org.tukaani.xz.check.CRC64 r0;
        byte $b6;
        int $i2, $i3, $i5, i7;

        r0 := @this: org.tukaani.xz.check.CRC64;

        $l0 = r0.<org.tukaani.xz.check.CRC64: long crc>;

        l1 = $l0 ^ -1L;

        r0.<org.tukaani.xz.check.CRC64: long crc> = -1L;

        r1 = newarray (byte)[8];

        i7 = 0;

     label1:
        $i2 = lengthof r1;

        if i7 >= $i2 goto label2;

        $i3 = i7 * 8;

        $l4 = l1 >> $i3;

        $i5 = (int) $l4;

        $b6 = (byte) $i5;

        r1[i7] = $b6;

        i7 = i7 + 1;

        goto label1;

     label2:
        return r1;
    }

    static void <clinit>()
    {
        long $l1, $l3, l5;
        long[] $r0, $r1, $r2;
        byte $b2;
        int $i0, i4, i6;

        <org.tukaani.xz.check.CRC64: long poly> = -3932672073523589310L;

        $r0 = newarray (long)[256];

        <org.tukaani.xz.check.CRC64: long[] crcTable> = $r0;

        i4 = 0;

     label1:
        $r1 = <org.tukaani.xz.check.CRC64: long[] crcTable>;

        $i0 = lengthof $r1;

        if i4 >= $i0 goto label6;

        l5 = (long) i4;

        i6 = 0;

     label2:
        if i6 >= 8 goto label5;

        $l1 = l5 & 1L;

        $b2 = $l1 cmp 1L;

        if $b2 != 0 goto label3;

        $l3 = l5 >>> 1;

        l5 = $l3 ^ -3932672073523589310L;

        goto label4;

     label3:
        l5 = l5 >>> 1;

     label4:
        i6 = i6 + 1;

        goto label2;

     label5:
        $r2 = <org.tukaani.xz.check.CRC64: long[] crcTable>;

        $r2[i4] = l5;

        i4 = i4 + 1;

        goto label1;

     label6:
        return;
    }
}
