public abstract class org.bouncycastle.crypto.digests.GeneralDigest extends java.lang.Object implements org.bouncycastle.crypto.ExtendedDigest
{
    private static final int BYTE_LENGTH;
    private byte[] xBuf;
    private int xBufOff;
    private long byteCount;

    protected void <init>()
    {
        byte[] $r1;
        org.bouncycastle.crypto.digests.GeneralDigest r0;

        r0 := @this: org.bouncycastle.crypto.digests.GeneralDigest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[4];

        r0.<org.bouncycastle.crypto.digests.GeneralDigest: byte[] xBuf> = $r1;

        r0.<org.bouncycastle.crypto.digests.GeneralDigest: int xBufOff> = 0;

        return;
    }

    protected void <init>(org.bouncycastle.crypto.digests.GeneralDigest)
    {
        byte[] $r2, $r3, $r4, $r5, $r6;
        long $l3;
        org.bouncycastle.crypto.digests.GeneralDigest r0, r1;
        int $i0, $i1, $i2;

        r0 := @this: org.bouncycastle.crypto.digests.GeneralDigest;

        r1 := @parameter0: org.bouncycastle.crypto.digests.GeneralDigest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<org.bouncycastle.crypto.digests.GeneralDigest: byte[] xBuf>;

        $i0 = lengthof $r2;

        $r3 = newarray (byte)[$i0];

        r0.<org.bouncycastle.crypto.digests.GeneralDigest: byte[] xBuf> = $r3;

        $r6 = r1.<org.bouncycastle.crypto.digests.GeneralDigest: byte[] xBuf>;

        $r5 = r0.<org.bouncycastle.crypto.digests.GeneralDigest: byte[] xBuf>;

        $r4 = r1.<org.bouncycastle.crypto.digests.GeneralDigest: byte[] xBuf>;

        $i1 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r5, 0, $i1);

        $i2 = r1.<org.bouncycastle.crypto.digests.GeneralDigest: int xBufOff>;

        r0.<org.bouncycastle.crypto.digests.GeneralDigest: int xBufOff> = $i2;

        $l3 = r1.<org.bouncycastle.crypto.digests.GeneralDigest: long byteCount>;

        r0.<org.bouncycastle.crypto.digests.GeneralDigest: long byteCount> = $l3;

        return;
    }

    public void update(byte)
    {
        byte[] $r1, $r2, $r3;
        long $l5, $l6;
        org.bouncycastle.crypto.digests.GeneralDigest r0;
        byte b2;
        int $i0, $i1, $i3, $i4;

        r0 := @this: org.bouncycastle.crypto.digests.GeneralDigest;

        b2 := @parameter0: byte;

        $r1 = r0.<org.bouncycastle.crypto.digests.GeneralDigest: byte[] xBuf>;

        $i0 = r0.<org.bouncycastle.crypto.digests.GeneralDigest: int xBufOff>;

        $i1 = $i0 + 1;

        r0.<org.bouncycastle.crypto.digests.GeneralDigest: int xBufOff> = $i1;

        $r1[$i0] = b2;

        $i4 = r0.<org.bouncycastle.crypto.digests.GeneralDigest: int xBufOff>;

        $r2 = r0.<org.bouncycastle.crypto.digests.GeneralDigest: byte[] xBuf>;

        $i3 = lengthof $r2;

        if $i4 != $i3 goto label1;

        $r3 = r0.<org.bouncycastle.crypto.digests.GeneralDigest: byte[] xBuf>;

        virtualinvoke r0.<org.bouncycastle.crypto.digests.GeneralDigest: void processWord(byte[],int)>($r3, 0);

        r0.<org.bouncycastle.crypto.digests.GeneralDigest: int xBufOff> = 0;

     label1:
        $l5 = r0.<org.bouncycastle.crypto.digests.GeneralDigest: long byteCount>;

        $l6 = $l5 + 1L;

        r0.<org.bouncycastle.crypto.digests.GeneralDigest: long byteCount> = $l6;

        return;
    }

    public void update(byte[], int, int)
    {
        byte[] r1, $r2, $r3, $r4, $r5;
        long $l5, $l6, $l7;
        org.bouncycastle.crypto.digests.GeneralDigest r0;
        byte $b1, $b8;
        int $i0, $i2, $i3, $i4, i9, i10, $i11, $i13, $i15;

        r0 := @this: org.bouncycastle.crypto.digests.GeneralDigest;

        r1 := @parameter0: byte[];

        i9 := @parameter1: int;

        i10 := @parameter2: int;

     label1:
        $i0 = r0.<org.bouncycastle.crypto.digests.GeneralDigest: int xBufOff>;

        if $i0 == 0 goto label2;

        if i10 <= 0 goto label2;

        $b8 = r1[i9];

        virtualinvoke r0.<org.bouncycastle.crypto.digests.GeneralDigest: void update(byte)>($b8);

        i9 = i9 + 1;

        $i13 = (int) -1;

        i10 = i10 + $i13;

        goto label1;

     label2:
        $r5 = r0.<org.bouncycastle.crypto.digests.GeneralDigest: byte[] xBuf>;

        $i11 = lengthof $r5;

        if i10 <= $i11 goto label3;

        virtualinvoke r0.<org.bouncycastle.crypto.digests.GeneralDigest: void processWord(byte[],int)>(r1, i9);

        $r2 = r0.<org.bouncycastle.crypto.digests.GeneralDigest: byte[] xBuf>;

        $i2 = lengthof $r2;

        i9 = i9 + $i2;

        $r3 = r0.<org.bouncycastle.crypto.digests.GeneralDigest: byte[] xBuf>;

        $i3 = lengthof $r3;

        i10 = i10 - $i3;

        $l6 = r0.<org.bouncycastle.crypto.digests.GeneralDigest: long byteCount>;

        $r4 = r0.<org.bouncycastle.crypto.digests.GeneralDigest: byte[] xBuf>;

        $i4 = lengthof $r4;

        $l5 = (long) $i4;

        $l7 = $l6 + $l5;

        r0.<org.bouncycastle.crypto.digests.GeneralDigest: long byteCount> = $l7;

        goto label2;

     label3:
        if i10 <= 0 goto label4;

        $b1 = r1[i9];

        virtualinvoke r0.<org.bouncycastle.crypto.digests.GeneralDigest: void update(byte)>($b1);

        i9 = i9 + 1;

        $i15 = (int) -1;

        i10 = i10 + $i15;

        goto label3;

     label4:
        return;
    }

    public void finish()
    {
        org.bouncycastle.crypto.digests.GeneralDigest r0;
        int $i2;
        long $l0, l1;

        r0 := @this: org.bouncycastle.crypto.digests.GeneralDigest;

        $l0 = r0.<org.bouncycastle.crypto.digests.GeneralDigest: long byteCount>;

        l1 = $l0 << 3;

        virtualinvoke r0.<org.bouncycastle.crypto.digests.GeneralDigest: void update(byte)>(-128);

     label1:
        $i2 = r0.<org.bouncycastle.crypto.digests.GeneralDigest: int xBufOff>;

        if $i2 == 0 goto label2;

        virtualinvoke r0.<org.bouncycastle.crypto.digests.GeneralDigest: void update(byte)>(0);

        goto label1;

     label2:
        virtualinvoke r0.<org.bouncycastle.crypto.digests.GeneralDigest: void processLength(long)>(l1);

        virtualinvoke r0.<org.bouncycastle.crypto.digests.GeneralDigest: void processBlock()>();

        return;
    }

    public void reset()
    {
        byte[] $r1, $r2;
        org.bouncycastle.crypto.digests.GeneralDigest r0;
        int $i0, i1;

        r0 := @this: org.bouncycastle.crypto.digests.GeneralDigest;

        r0.<org.bouncycastle.crypto.digests.GeneralDigest: long byteCount> = 0L;

        r0.<org.bouncycastle.crypto.digests.GeneralDigest: int xBufOff> = 0;

        i1 = 0;

     label1:
        $r1 = r0.<org.bouncycastle.crypto.digests.GeneralDigest: byte[] xBuf>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r2 = r0.<org.bouncycastle.crypto.digests.GeneralDigest: byte[] xBuf>;

        $r2[i1] = 0;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public int getByteLength()
    {
        org.bouncycastle.crypto.digests.GeneralDigest r0;

        r0 := @this: org.bouncycastle.crypto.digests.GeneralDigest;

        return 64;
    }

    protected abstract void processWord(byte[], int);

    protected abstract void processLength(long);

    protected abstract void processBlock();

    public static void <clinit>()
    {
        <org.bouncycastle.crypto.digests.GeneralDigest: int BYTE_LENGTH> = 64;

        return;
    }
}
