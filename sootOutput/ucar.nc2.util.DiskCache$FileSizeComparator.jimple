class ucar.nc2.util.DiskCache$FileSizeComparator extends java.lang.Object implements java.util.Comparator
{

    private void <init>()
    {
        ucar.nc2.util.DiskCache$FileSizeComparator r0;

        r0 := @this: ucar.nc2.util.DiskCache$FileSizeComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(java.io.File, java.io.File)
    {
        long $l0, $l1, $l3, $l4;
        java.io.File r0, r1;
        ucar.nc2.util.DiskCache$FileSizeComparator r2;
        byte $b2, $b5, $b6;
        int $i7;

        r2 := @this: ucar.nc2.util.DiskCache$FileSizeComparator;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

        $l0 = virtualinvoke r0.<java.io.File: long length()>();

        $l1 = virtualinvoke r1.<java.io.File: long length()>();

        $b2 = $l0 cmp $l1;

        $i7 = (int) $b2;

        if $i7 >= 0 goto label1;

        $b6 = -1;

        goto label3;

     label1:
        $l3 = virtualinvoke r0.<java.io.File: long length()>();

        $l4 = virtualinvoke r1.<java.io.File: long length()>();

        $b5 = $l3 cmp $l4;

        if $b5 != 0 goto label2;

        $b6 = 0;

        goto label3;

     label2:
        $b6 = 1;

     label3:
        return $b6;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        ucar.nc2.util.DiskCache$FileSizeComparator r0;
        int $i0;
        java.lang.Object r1, r2;
        java.io.File $r3, $r4;

        r0 := @this: ucar.nc2.util.DiskCache$FileSizeComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.io.File) r1;

        $r3 = (java.io.File) r2;

        $i0 = virtualinvoke r0.<ucar.nc2.util.DiskCache$FileSizeComparator: int compare(java.io.File,java.io.File)>($r4, $r3);

        return $i0;
    }
}
