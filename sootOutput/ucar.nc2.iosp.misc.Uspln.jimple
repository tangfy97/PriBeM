public class ucar.nc2.iosp.misc.Uspln extends ucar.nc2.iosp.misc.AbstractLightningIOSP
{
    private static final java.lang.String MAGIC;
    private static final java.lang.String MAGIC_OLD;
    private static final java.lang.String MAGIC_EX;
    private static final java.lang.String TIME_FORMAT;
    private static final java.lang.String TIME_FORMAT_EX;
    private boolean isExtended;
    private long[] offsets;
    private double lat_min;
    private double lat_max;
    private double lon_min;
    private double lon_max;
    private double time_min;
    private double time_max;
    private ucar.ma2.StructureMembers sm;
    private java.text.SimpleDateFormat isoDateFormat;
    private int nelems;

    public void <init>()
    {
        int $i1;
        ucar.nc2.iosp.misc.Uspln r0;

        r0 := @this: ucar.nc2.iosp.misc.Uspln;

        specialinvoke r0.<ucar.nc2.iosp.misc.AbstractLightningIOSP: void <init>()>();

        r0.<ucar.nc2.iosp.misc.Uspln: boolean isExtended> = 0;

        r0.<ucar.nc2.iosp.misc.Uspln: java.text.SimpleDateFormat isoDateFormat> = null;

        $i1 = (int) -1;

        r0.<ucar.nc2.iosp.misc.Uspln: int nelems> = $i1;

        return;
    }

    public boolean isValidFile(ucar.unidata.io.RandomAccessFile) throws java.io.IOException
    {
        byte[] r2;
        ucar.unidata.io.RandomAccessFile r0;
        long $l1, $l2;
        byte $b3;
        int $i0, $i4;
        ucar.nc2.iosp.misc.Uspln r4;
        java.lang.String $r1, $r5;
        boolean $z0, $z1, $z2;

        r4 := @this: ucar.nc2.iosp.misc.Uspln;

        r0 := @parameter0: ucar.unidata.io.RandomAccessFile;

        virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: void seek(long)>(0L);

        $r1 = "LIGHTNING-..PLN1";

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $l1 = virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: long length()>();

        $l2 = (long) $i0;

        $b3 = $l1 cmp $l2;

        $i4 = (int) $b3;

        if $i4 >= 0 goto label1;

        return 0;

     label1:
        r2 = newarray (byte)[$i0];

        virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: int read(byte[])>(r2);

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(byte[])>(r2);

        $z0 = staticinvoke <ucar.unidata.util.StringUtil: boolean regexpMatch(java.lang.String,java.lang.String)>($r5, "LIGHTNING-..PLN1");

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <ucar.unidata.util.StringUtil: boolean regexpMatch(java.lang.String,java.lang.String)>($r5, "..PLN-LIGHTNING");

        if $z1 == 0 goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    public void open(ucar.unidata.io.RandomAccessFile, ucar.nc2.NetcdfFile, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile r1;
        java.util.TimeZone $r4;
        java.text.SimpleDateFormat $r2, $r3, $r5;
        ucar.nc2.Sequence $r7;
        ucar.ma2.StructureMembers $r8, $r9;
        ucar.nc2.util.CancelTask r10;
        ucar.nc2.iosp.misc.Uspln r0;
        ucar.nc2.NetcdfFile r6;
        java.lang.String $r11;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.iosp.misc.Uspln;

        r1 := @parameter0: ucar.unidata.io.RandomAccessFile;

        r6 := @parameter1: ucar.nc2.NetcdfFile;

        r10 := @parameter2: ucar.nc2.util.CancelTask;

        r0.<ucar.nc2.iosp.misc.Uspln: ucar.unidata.io.RandomAccessFile raf> = r1;

        $z0 = specialinvoke r0.<ucar.nc2.iosp.misc.Uspln: boolean checkFormat()>();

        r0.<ucar.nc2.iosp.misc.Uspln: boolean isExtended> = $z0;

        $r2 = new java.text.SimpleDateFormat;

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>()>();

        r0.<ucar.nc2.iosp.misc.Uspln: java.text.SimpleDateFormat isoDateFormat> = $r2;

        $r3 = r0.<ucar.nc2.iosp.misc.Uspln: java.text.SimpleDateFormat isoDateFormat>;

        $r4 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke $r3.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r4);

        $r5 = r0.<ucar.nc2.iosp.misc.Uspln: java.text.SimpleDateFormat isoDateFormat>;

        $z1 = r0.<ucar.nc2.iosp.misc.Uspln: boolean isExtended>;

        if $z1 == 0 goto label1;

        $r11 = "yyyy-MM-dd\'T\'HH:mm:ss.SSS";

        goto label2;

     label1:
        $r11 = "yyyy-MM-dd\'T\'HH:mm:ss";

     label2:
        virtualinvoke $r5.<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>($r11);

        $r7 = virtualinvoke r0.<ucar.nc2.iosp.misc.Uspln: ucar.nc2.Sequence makeSequence(ucar.nc2.NetcdfFile)>(r6);

        virtualinvoke r6.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r7);

        virtualinvoke r0.<ucar.nc2.iosp.misc.Uspln: void addLightningGlobalAttributes(ucar.nc2.NetcdfFile)>(r6);

        virtualinvoke r6.<ucar.nc2.NetcdfFile: void finish()>();

        $r8 = virtualinvoke $r7.<ucar.nc2.Sequence: ucar.ma2.StructureMembers makeStructureMembers()>();

        r0.<ucar.nc2.iosp.misc.Uspln: ucar.ma2.StructureMembers sm> = $r8;

        $r9 = r0.<ucar.nc2.iosp.misc.Uspln: ucar.ma2.StructureMembers sm>;

        staticinvoke <ucar.ma2.ArrayStructureBB: int setOffsets(ucar.ma2.StructureMembers)>($r9);

        return;
    }

    protected ucar.nc2.Sequence makeSequence(ucar.nc2.NetcdfFile)
    {
        java.lang.Double $r15;
        ucar.nc2.Sequence $r0;
        ucar.nc2.constants.AxisType $r3, $r6, $r9;
        ucar.nc2.Variable $r5, $r8, $r11, $r13, $r17, $r19, $r21, $r23;
        boolean $z0;
        ucar.ma2.DataType $r4, $r7, $r10, $r12, $r16, $r18, $r20, $r22;
        ucar.nc2.Attribute $r14;
        ucar.nc2.iosp.misc.Uspln r2;
        ucar.nc2.NetcdfFile r1;

        r2 := @this: ucar.nc2.iosp.misc.Uspln;

        r1 := @parameter0: ucar.nc2.NetcdfFile;

        $r0 = new ucar.nc2.Sequence;

        specialinvoke $r0.<ucar.nc2.Sequence: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r1, null, null, "record");

        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r3 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r5 = virtualinvoke r2.<ucar.nc2.iosp.misc.Uspln: ucar.nc2.Variable makeLightningVariable(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String,java.lang.String,ucar.nc2.constants.AxisType)>(r1, null, $r0, "time", $r4, "", "time of stroke", null, "seconds since 1970-01-01 00:00:00", $r3);

        virtualinvoke $r0.<ucar.nc2.Sequence: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r5);

        $r7 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r6 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r8 = virtualinvoke r2.<ucar.nc2.iosp.misc.Uspln: ucar.nc2.Variable makeLightningVariable(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String,java.lang.String,ucar.nc2.constants.AxisType)>(r1, null, $r0, "lat", $r7, "", "latitude", "latitude", "degrees_north", $r6);

        virtualinvoke $r0.<ucar.nc2.Sequence: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r8);

        $r10 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r9 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r11 = virtualinvoke r2.<ucar.nc2.iosp.misc.Uspln: ucar.nc2.Variable makeLightningVariable(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String,java.lang.String,ucar.nc2.constants.AxisType)>(r1, null, $r0, "lon", $r10, "", "longitude", "longitude", "degrees_east", $r9);

        virtualinvoke $r0.<ucar.nc2.Sequence: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r11);

        $r12 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        $r13 = virtualinvoke r2.<ucar.nc2.iosp.misc.Uspln: ucar.nc2.Variable makeLightningVariable(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String,java.lang.String,ucar.nc2.constants.AxisType)>(r1, null, $r0, "sgnl", $r12, "", "signed peak amplitude (signal strength)", null, "kAmps", null);

        $r14 = new ucar.nc2.Attribute;

        $r15 = new java.lang.Double;

        specialinvoke $r15.<java.lang.Double: void <init>(double)>(999.0);

        specialinvoke $r14.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.Number)>("missing_value", $r15);

        virtualinvoke $r13.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r14);

        virtualinvoke $r0.<ucar.nc2.Sequence: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r13);

        $z0 = r2.<ucar.nc2.iosp.misc.Uspln: boolean isExtended>;

        if $z0 == 0 goto label1;

        $r18 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        $r19 = virtualinvoke r2.<ucar.nc2.iosp.misc.Uspln: ucar.nc2.Variable makeLightningVariable(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String,java.lang.String,ucar.nc2.constants.AxisType)>(r1, null, $r0, "majorAxis", $r18, "", "error ellipse semi-major axis", null, "km", null);

        virtualinvoke $r0.<ucar.nc2.Sequence: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r19);

        $r20 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        $r21 = virtualinvoke r2.<ucar.nc2.iosp.misc.Uspln: ucar.nc2.Variable makeLightningVariable(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String,java.lang.String,ucar.nc2.constants.AxisType)>(r1, null, $r0, "minorAxis", $r20, "", "error ellipse minor axis ", null, "km", null);

        virtualinvoke $r0.<ucar.nc2.Sequence: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r21);

        $r22 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        $r23 = virtualinvoke r2.<ucar.nc2.iosp.misc.Uspln: ucar.nc2.Variable makeLightningVariable(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String,java.lang.String,ucar.nc2.constants.AxisType)>(r1, null, $r0, "ellipseAngle", $r22, "", "error ellipse axis angle of orientation ", null, "degrees", null);

        virtualinvoke $r0.<ucar.nc2.Sequence: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r23);

        goto label2;

     label1:
        $r16 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        $r17 = virtualinvoke r2.<ucar.nc2.iosp.misc.Uspln: ucar.nc2.Variable makeLightningVariable(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String,java.lang.String,ucar.nc2.constants.AxisType)>(r1, null, $r0, "mult", $r16, "", "multiplicity [#strokes per flash]", null, "", null);

        virtualinvoke $r0.<ucar.nc2.Sequence: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r17);

     label2:
        return $r0;
    }

    protected void addLightningGlobalAttributes(ucar.nc2.NetcdfFile)
    {
        ucar.nc2.Attribute $r2, $r3;
        ucar.nc2.iosp.misc.Uspln r0;
        java.lang.StringBuilder $r4, $r5, $r6;
        ucar.nc2.NetcdfFile r1;
        java.lang.String $r7, $r8;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.misc.Uspln;

        r1 := @parameter0: ucar.nc2.NetcdfFile;

        specialinvoke r0.<ucar.nc2.iosp.misc.AbstractLightningIOSP: void addLightningGlobalAttributes(ucar.nc2.NetcdfFile)>(r1);

        $r2 = new ucar.nc2.Attribute;

        specialinvoke $r2.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("title", "USPLN Lightning Data");

        virtualinvoke r1.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r2);

        $r3 = new ucar.nc2.Attribute;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USPLN1 ");

        $z0 = r0.<ucar.nc2.iosp.misc.Uspln: boolean isExtended>;

        if $z0 == 0 goto label1;

        $r8 = "(extended)";

        goto label2;

     label1:
        $r8 = "(original)";

     label2:
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("file_format", $r7);

        virtualinvoke r1.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r3);

        return;
    }

    private boolean checkFormat() throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r1, $r2, $r3;
        ucar.nc2.iosp.misc.Uspln r0;
        java.lang.String $r4;
        boolean $z0, $z1, z2;

        r0 := @this: ucar.nc2.iosp.misc.Uspln;

        $r1 = r0.<ucar.nc2.iosp.misc.Uspln: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r1.<ucar.unidata.io.RandomAccessFile: void seek(long)>(0L);

        z2 = 0;

     label1:
        $r2 = r0.<ucar.nc2.iosp.misc.Uspln: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $r3 = r0.<ucar.nc2.iosp.misc.Uspln: ucar.unidata.io.RandomAccessFile raf>;

        $r4 = virtualinvoke $r3.<ucar.unidata.io.RandomAccessFile: java.lang.String readLine()>();

        if $r4 != null goto label2;

        goto label5;

     label2:
        $z0 = staticinvoke <ucar.unidata.util.StringUtil: boolean regexpMatch(java.lang.String,java.lang.String)>($r4, "LIGHTNING-..PLN1");

        if $z0 != 0 goto label3;

        $z1 = staticinvoke <ucar.unidata.util.StringUtil: boolean regexpMatch(java.lang.String,java.lang.String)>($r4, "..PLN-LIGHTNING");

        if $z1 == 0 goto label4;

     label3:
        z2 = staticinvoke <ucar.unidata.util.StringUtil: boolean regexpMatch(java.lang.String,java.lang.String)>($r4, ".*PLN1EX.*");

        goto label5;

     label4:
        goto label1;

     label5:
        return z2;
    }

    int readAllData(ucar.unidata.io.RandomAccessFile) throws java.io.IOException, java.lang.NumberFormatException, java.text.ParseException
    {
        ucar.unidata.io.RandomAccessFile r4;
        ucar.nc2.iosp.misc.Uspln$Stroke $r21;
        java.util.Date $r8;
        java.lang.Long $r6, r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7;
        java.util.TimeZone $r2;
        ucar.nc2.iosp.misc.Uspln r3;
        java.text.SimpleDateFormat $r1;
        long $l1, $l3;
        java.util.ArrayList $r0;
        long[] $r16, $r19;
        java.util.StringTokenizer $r5;
        int $i0, i2, i4, i5, i6;
        java.lang.String $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r20;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, d21, d22;
        java.lang.Object $r17;

        r3 := @this: ucar.nc2.iosp.misc.Uspln;

        r4 := @parameter0: ucar.unidata.io.RandomAccessFile;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new java.text.SimpleDateFormat;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd\'T\'HH:mm:ss");

        $r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke $r1.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r2);

        r3.<ucar.nc2.iosp.misc.Uspln: double lat_min> = 1000.0;

        r3.<ucar.nc2.iosp.misc.Uspln: double lat_max> = -1000.0;

        r3.<ucar.nc2.iosp.misc.Uspln: double lon_min> = 1000.0;

        r3.<ucar.nc2.iosp.misc.Uspln: double lon_max> = -1000.0;

        r3.<ucar.nc2.iosp.misc.Uspln: double time_min> = #Infinity;

        r3.<ucar.nc2.iosp.misc.Uspln: double time_max> = #-Infinity;

        virtualinvoke r4.<ucar.unidata.io.RandomAccessFile: void seek(long)>(0L);

        i2 = 0;

        z7 = 0;

     label01:
        $l3 = virtualinvoke r4.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $r20 = virtualinvoke r4.<ucar.unidata.io.RandomAccessFile: java.lang.String readLine()>();

        if $r20 != null goto label02;

        goto label12;

     label02:
        $z0 = staticinvoke <ucar.unidata.util.StringUtil: boolean regexpMatch(java.lang.String,java.lang.String)>($r20, "LIGHTNING-..PLN1");

        if $z0 != 0 goto label03;

        $z3 = staticinvoke <ucar.unidata.util.StringUtil: boolean regexpMatch(java.lang.String,java.lang.String)>($r20, "..PLN-LIGHTNING");

        if $z3 == 0 goto label05;

     label03:
        if z7 != 0 goto label01;

        $z1 = staticinvoke <ucar.unidata.util.StringUtil: boolean regexpMatch(java.lang.String,java.lang.String)>($r20, ".*PLN1EX.*");

        r3.<ucar.nc2.iosp.misc.Uspln: boolean isExtended> = $z1;

        $z2 = r3.<ucar.nc2.iosp.misc.Uspln: boolean isExtended>;

        if $z2 == 0 goto label04;

        virtualinvoke $r1.<java.text.SimpleDateFormat: void applyPattern(java.lang.String)>("yyyy-MM-dd\'T\'HH:mm:ss.SSS");

     label04:
        z7 = 1;

        goto label01;

     label05:
        $r5 = new java.util.StringTokenizer;

        specialinvoke $r5.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r20, ",\r\n");

     label06:
        $z4 = virtualinvoke $r5.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z4 == 0 goto label11;

        $r7 = virtualinvoke $r5.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r8 = virtualinvoke $r1.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r7);

        $r9 = virtualinvoke $r5.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r9);

        $r10 = virtualinvoke $r5.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r10);

        $r11 = virtualinvoke $r5.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $d2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r11);

        i4 = 1;

        d21 = #NaN;

        d22 = #NaN;

        i5 = 0;

        $z5 = r3.<ucar.nc2.iosp.misc.Uspln: boolean isExtended>;

        if $z5 == 0 goto label07;

        $r13 = virtualinvoke $r5.<java.util.StringTokenizer: java.lang.String nextToken()>();

        d21 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r13);

        $r14 = virtualinvoke $r5.<java.util.StringTokenizer: java.lang.String nextToken()>();

        d22 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r14);

        $r15 = virtualinvoke $r5.<java.util.StringTokenizer: java.lang.String nextToken()>();

        i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r15);

        goto label08;

     label07:
        $r12 = virtualinvoke $r5.<java.util.StringTokenizer: java.lang.String nextToken()>();

        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r12);

     label08:
        $z6 = r3.<ucar.nc2.iosp.misc.Uspln: boolean isExtended>;

        if $z6 == 0 goto label09;

        $r21 = new ucar.nc2.iosp.misc.Uspln$Stroke;

        specialinvoke $r21.<ucar.nc2.iosp.misc.Uspln$Stroke: void <init>(ucar.nc2.iosp.misc.Uspln,java.util.Date,double,double,double,double,double,int)>(r3, $r8, $d0, $d1, $d2, d21, d22, i5);

        goto label10;

     label09:
        $r21 = new ucar.nc2.iosp.misc.Uspln$Stroke;

        specialinvoke $r21.<ucar.nc2.iosp.misc.Uspln$Stroke: void <init>(ucar.nc2.iosp.misc.Uspln,java.util.Date,double,double,double,int)>(r3, $r8, $d0, $d1, $d2, i4);

     label10:
        $d4 = r3.<ucar.nc2.iosp.misc.Uspln: double lat_min>;

        $d3 = $r21.<ucar.nc2.iosp.misc.Uspln$Stroke: double lat>;

        $d5 = staticinvoke <java.lang.Math: double min(double,double)>($d4, $d3);

        r3.<ucar.nc2.iosp.misc.Uspln: double lat_min> = $d5;

        $d7 = r3.<ucar.nc2.iosp.misc.Uspln: double lat_max>;

        $d6 = $r21.<ucar.nc2.iosp.misc.Uspln$Stroke: double lat>;

        $d8 = staticinvoke <java.lang.Math: double max(double,double)>($d7, $d6);

        r3.<ucar.nc2.iosp.misc.Uspln: double lat_max> = $d8;

        $d10 = r3.<ucar.nc2.iosp.misc.Uspln: double lon_min>;

        $d9 = $r21.<ucar.nc2.iosp.misc.Uspln$Stroke: double lon>;

        $d11 = staticinvoke <java.lang.Math: double min(double,double)>($d10, $d9);

        r3.<ucar.nc2.iosp.misc.Uspln: double lon_min> = $d11;

        $d13 = r3.<ucar.nc2.iosp.misc.Uspln: double lon_max>;

        $d12 = $r21.<ucar.nc2.iosp.misc.Uspln$Stroke: double lon>;

        $d14 = staticinvoke <java.lang.Math: double max(double,double)>($d13, $d12);

        r3.<ucar.nc2.iosp.misc.Uspln: double lon_max> = $d14;

        $d16 = r3.<ucar.nc2.iosp.misc.Uspln: double time_min>;

        $d15 = $r21.<ucar.nc2.iosp.misc.Uspln$Stroke: double secs>;

        $d17 = staticinvoke <java.lang.Math: double min(double,double)>($d16, $d15);

        r3.<ucar.nc2.iosp.misc.Uspln: double time_min> = $d17;

        $d19 = r3.<ucar.nc2.iosp.misc.Uspln: double time_max>;

        $d18 = $r21.<ucar.nc2.iosp.misc.Uspln$Stroke: double secs>;

        $d20 = staticinvoke <java.lang.Math: double max(double,double)>($d19, $d18);

        r3.<ucar.nc2.iosp.misc.Uspln: double time_max> = $d20;

        goto label06;

     label11:
        $r6 = new java.lang.Long;

        specialinvoke $r6.<java.lang.Long: void <init>(long)>($l3);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        i2 = i2 + 1;

        goto label01;

     label12:
        $r16 = newarray (long)[i2];

        r3.<ucar.nc2.iosp.misc.Uspln: long[] offsets> = $r16;

        i6 = 0;

     label13:
        $i0 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        if i6 >= $i0 goto label14;

        $r17 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r18 = (java.lang.Long) $r17;

        $r19 = r3.<ucar.nc2.iosp.misc.Uspln: long[] offsets>;

        $l1 = virtualinvoke r18.<java.lang.Long: long longValue()>();

        $r19[i6] = $l1;

        i6 = i6 + 1;

        goto label13;

     label14:
        return i2;
    }

    public ucar.ma2.Array readData(ucar.nc2.Variable, ucar.ma2.Section) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.ma2.ArraySequence $r0;
        ucar.ma2.StructureMembers $r2;
        ucar.ma2.Section r5;
        ucar.ma2.StructureDataIterator $r3;
        int $i0;
        ucar.nc2.iosp.misc.Uspln r1;
        ucar.nc2.Variable r4;

        r1 := @this: ucar.nc2.iosp.misc.Uspln;

        r4 := @parameter0: ucar.nc2.Variable;

        r5 := @parameter1: ucar.ma2.Section;

        $r0 = new ucar.ma2.ArraySequence;

        $r2 = r1.<ucar.nc2.iosp.misc.Uspln: ucar.ma2.StructureMembers sm>;

        $r3 = virtualinvoke r1.<ucar.nc2.iosp.misc.Uspln: ucar.ma2.StructureDataIterator getStructureIterator(ucar.nc2.Structure,int)>(null, 0);

        $i0 = r1.<ucar.nc2.iosp.misc.Uspln: int nelems>;

        specialinvoke $r0.<ucar.ma2.ArraySequence: void <init>(ucar.ma2.StructureMembers,ucar.ma2.StructureDataIterator,int)>($r2, $r3, $i0);

        return $r0;
    }

    public ucar.ma2.StructureDataIterator getStructureIterator(ucar.nc2.Structure, int) throws java.io.IOException
    {
        int i0;
        ucar.nc2.iosp.misc.Uspln r1;
        ucar.nc2.iosp.misc.Uspln$UsplnSeqIter $r0;
        ucar.nc2.Structure r2;

        r1 := @this: ucar.nc2.iosp.misc.Uspln;

        r2 := @parameter0: ucar.nc2.Structure;

        i0 := @parameter1: int;

        $r0 = new ucar.nc2.iosp.misc.Uspln$UsplnSeqIter;

        specialinvoke $r0.<ucar.nc2.iosp.misc.Uspln$UsplnSeqIter: void <init>(ucar.nc2.iosp.misc.Uspln)>(r1);

        return $r0;
    }

    public java.lang.String getFileTypeId()
    {
        ucar.nc2.iosp.misc.Uspln r0;

        r0 := @this: ucar.nc2.iosp.misc.Uspln;

        return "USPLN";
    }

    public java.lang.String getFileTypeDescription()
    {
        ucar.nc2.iosp.misc.Uspln r0;

        r0 := @this: ucar.nc2.iosp.misc.Uspln;

        return "US Precision Lightning Network";
    }

    public java.lang.String getFileTypeVersion()
    {
        ucar.nc2.iosp.misc.Uspln r0;

        r0 := @this: ucar.nc2.iosp.misc.Uspln;

        return "1";
    }

    static ucar.unidata.io.RandomAccessFile access$000(ucar.nc2.iosp.misc.Uspln)
    {
        ucar.nc2.iosp.misc.Uspln r0;
        ucar.unidata.io.RandomAccessFile $r1;

        r0 := @parameter0: ucar.nc2.iosp.misc.Uspln;

        $r1 = r0.<ucar.nc2.iosp.misc.Uspln: ucar.unidata.io.RandomAccessFile raf>;

        return $r1;
    }

    static ucar.unidata.io.RandomAccessFile access$100(ucar.nc2.iosp.misc.Uspln)
    {
        ucar.nc2.iosp.misc.Uspln r0;
        ucar.unidata.io.RandomAccessFile $r1;

        r0 := @parameter0: ucar.nc2.iosp.misc.Uspln;

        $r1 = r0.<ucar.nc2.iosp.misc.Uspln: ucar.unidata.io.RandomAccessFile raf>;

        return $r1;
    }

    static ucar.unidata.io.RandomAccessFile access$200(ucar.nc2.iosp.misc.Uspln)
    {
        ucar.nc2.iosp.misc.Uspln r0;
        ucar.unidata.io.RandomAccessFile $r1;

        r0 := @parameter0: ucar.nc2.iosp.misc.Uspln;

        $r1 = r0.<ucar.nc2.iosp.misc.Uspln: ucar.unidata.io.RandomAccessFile raf>;

        return $r1;
    }

    static int access$302(ucar.nc2.iosp.misc.Uspln, int)
    {
        int i0;
        ucar.nc2.iosp.misc.Uspln r0;

        r0 := @parameter0: ucar.nc2.iosp.misc.Uspln;

        i0 := @parameter1: int;

        r0.<ucar.nc2.iosp.misc.Uspln: int nelems> = i0;

        return i0;
    }

    static java.text.SimpleDateFormat access$400(ucar.nc2.iosp.misc.Uspln)
    {
        ucar.nc2.iosp.misc.Uspln r0;
        java.text.SimpleDateFormat $r1;

        r0 := @parameter0: ucar.nc2.iosp.misc.Uspln;

        $r1 = r0.<ucar.nc2.iosp.misc.Uspln: java.text.SimpleDateFormat isoDateFormat>;

        return $r1;
    }

    static boolean access$500(ucar.nc2.iosp.misc.Uspln)
    {
        ucar.nc2.iosp.misc.Uspln r0;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.iosp.misc.Uspln;

        $z0 = r0.<ucar.nc2.iosp.misc.Uspln: boolean isExtended>;

        return $z0;
    }

    static ucar.ma2.StructureMembers access$600(ucar.nc2.iosp.misc.Uspln)
    {
        ucar.nc2.iosp.misc.Uspln r0;
        ucar.ma2.StructureMembers $r1;

        r0 := @parameter0: ucar.nc2.iosp.misc.Uspln;

        $r1 = r0.<ucar.nc2.iosp.misc.Uspln: ucar.ma2.StructureMembers sm>;

        return $r1;
    }

    static ucar.unidata.io.RandomAccessFile access$700(ucar.nc2.iosp.misc.Uspln)
    {
        ucar.nc2.iosp.misc.Uspln r0;
        ucar.unidata.io.RandomAccessFile $r1;

        r0 := @parameter0: ucar.nc2.iosp.misc.Uspln;

        $r1 = r0.<ucar.nc2.iosp.misc.Uspln: ucar.unidata.io.RandomAccessFile raf>;

        return $r1;
    }

    static ucar.unidata.io.RandomAccessFile access$800(ucar.nc2.iosp.misc.Uspln)
    {
        ucar.nc2.iosp.misc.Uspln r0;
        ucar.unidata.io.RandomAccessFile $r1;

        r0 := @parameter0: ucar.nc2.iosp.misc.Uspln;

        $r1 = r0.<ucar.nc2.iosp.misc.Uspln: ucar.unidata.io.RandomAccessFile raf>;

        return $r1;
    }

    public static void <clinit>()
    {
        <ucar.nc2.iosp.misc.Uspln: java.lang.String TIME_FORMAT_EX> = "yyyy-MM-dd\'T\'HH:mm:ss.SSS";

        <ucar.nc2.iosp.misc.Uspln: java.lang.String TIME_FORMAT> = "yyyy-MM-dd\'T\'HH:mm:ss";

        <ucar.nc2.iosp.misc.Uspln: java.lang.String MAGIC_EX> = ".*PLN1EX.*";

        <ucar.nc2.iosp.misc.Uspln: java.lang.String MAGIC_OLD> = "..PLN-LIGHTNING";

        <ucar.nc2.iosp.misc.Uspln: java.lang.String MAGIC> = "LIGHTNING-..PLN1";

        return;
    }
}
