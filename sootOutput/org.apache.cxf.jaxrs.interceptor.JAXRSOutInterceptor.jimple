public class org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor extends org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor
{
    private static final java.util.logging.Logger LOG;
    private static final java.util.ResourceBundle BUNDLE;

    public void <init>()
    {
        org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor r0;

        r0 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor;

        specialinvoke r0.<org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor: void <init>(java.lang.String)>("marshal");

        return;
    }

    public void handleMessage(org.apache.cxf.message.Message)
    {
        org.apache.cxf.jaxrs.lifecycle.ResourceProvider $r11, $r28, $r46;
        javax.ws.rs.container.AsyncResponse $r10, $r22, $r39;
        java.util.logging.Logger $r14, $r31, $r49;
        java.lang.Exception $r40;
        org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor r2;
        org.apache.cxf.jaxrs.model.ClassResourceInfo $r56, $r59, $r62;
        java.lang.StringBuilder $r13, $r15, $r17, $r30, $r32, $r34, $r48, $r50, $r52;
        java.lang.Throwable $r12, $r23, $r29, $r47;
        org.apache.cxf.jaxrs.provider.ProviderFactory $r1;
        org.apache.cxf.jaxrs.impl.AsyncResponseImpl $r9, $r21, $r38;
        java.lang.Boolean $r41;
        java.lang.String $r16, $r18, $r33, $r35, $r51, $r53;
        org.apache.cxf.message.Message r0;
        org.apache.cxf.message.Exchange $r3, $r5, $r7, $r19, $r24, $r26, $r36, $r42, $r44, $r54, $r57, $r60;
        java.lang.Object $r4, $r6, $r8, $r20, $r25, $r27, $r37, $r43, $r45, $r55, $r58, $r61;

        r2 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>(r0);

     label01:
        specialinvoke r2.<org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: void processResponse(org.apache.cxf.jaxrs.provider.ProviderFactory,org.apache.cxf.message.Message)>($r1, r0);

     label02:
        $r3 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r4 = interfaceinvoke $r3.<org.apache.cxf.message.Exchange: java.lang.Object remove(java.lang.Object)>("service.root.instance");

        $r5 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r6 = interfaceinvoke $r5.<org.apache.cxf.message.Exchange: java.lang.Object remove(java.lang.Object)>("service.root.provider");

        if $r4 == null goto label06;

        if $r6 == null goto label06;

     label03:
        $r11 = (org.apache.cxf.jaxrs.lifecycle.ResourceProvider) $r6;

        interfaceinvoke $r11.<org.apache.cxf.jaxrs.lifecycle.ResourceProvider: void releaseInstance(org.apache.cxf.message.Message,java.lang.Object)>(r0, $r4);

     label04:
        goto label06;

     label05:
        $r47 := @caughtexception;

        $r49 = <org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: java.util.logging.Logger LOG>;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception occurred during releasing the service instance, ");

        $r51 = virtualinvoke $r47.<java.lang.Throwable: java.lang.String getMessage()>();

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r49.<java.util.logging.Logger: void warning(java.lang.String)>($r53);

     label06:
        virtualinvoke $r1.<org.apache.cxf.jaxrs.provider.ProviderFactory: void clearThreadLocalProxies()>();

        $r54 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r55 = interfaceinvoke $r54.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Object)>("root.resource.class");

        $r56 = (org.apache.cxf.jaxrs.model.ClassResourceInfo) $r55;

        if $r56 == null goto label07;

        virtualinvoke $r56.<org.apache.cxf.jaxrs.model.ClassResourceInfo: void clearThreadLocalProxies()>();

     label07:
        $r7 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r8 = interfaceinvoke $r7.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Ljavax/ws/rs/container/AsyncResponse;");

        $r10 = (javax.ws.rs.container.AsyncResponse) $r8;

        if $r10 == null goto label08;

        $r9 = (org.apache.cxf.jaxrs.impl.AsyncResponseImpl) $r10;

        virtualinvoke $r9.<org.apache.cxf.jaxrs.impl.AsyncResponseImpl: void reset()>();

     label08:
        goto label25;

     label09:
        $r40 := @caughtexception;

        $r41 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("jaxrs.out.fault", $r41);

     label10:
        $r42 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r43 = interfaceinvoke $r42.<org.apache.cxf.message.Exchange: java.lang.Object remove(java.lang.Object)>("service.root.instance");

        $r44 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r45 = interfaceinvoke $r44.<org.apache.cxf.message.Exchange: java.lang.Object remove(java.lang.Object)>("service.root.provider");

        if $r43 == null goto label14;

        if $r45 == null goto label14;

     label11:
        $r46 = (org.apache.cxf.jaxrs.lifecycle.ResourceProvider) $r45;

        interfaceinvoke $r46.<org.apache.cxf.jaxrs.lifecycle.ResourceProvider: void releaseInstance(org.apache.cxf.message.Message,java.lang.Object)>(r0, $r43);

     label12:
        goto label14;

     label13:
        $r29 := @caughtexception;

        $r31 = <org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: java.util.logging.Logger LOG>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception occurred during releasing the service instance, ");

        $r33 = virtualinvoke $r29.<java.lang.Throwable: java.lang.String getMessage()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<java.util.logging.Logger: void warning(java.lang.String)>($r35);

     label14:
        virtualinvoke $r1.<org.apache.cxf.jaxrs.provider.ProviderFactory: void clearThreadLocalProxies()>();

        $r57 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r58 = interfaceinvoke $r57.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Object)>("root.resource.class");

        $r59 = (org.apache.cxf.jaxrs.model.ClassResourceInfo) $r58;

        if $r59 == null goto label15;

        virtualinvoke $r59.<org.apache.cxf.jaxrs.model.ClassResourceInfo: void clearThreadLocalProxies()>();

     label15:
        $r36 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r37 = interfaceinvoke $r36.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Ljavax/ws/rs/container/AsyncResponse;");

        $r39 = (javax.ws.rs.container.AsyncResponse) $r37;

        if $r39 == null goto label16;

        $r38 = (org.apache.cxf.jaxrs.impl.AsyncResponseImpl) $r39;

        virtualinvoke $r38.<org.apache.cxf.jaxrs.impl.AsyncResponseImpl: void reset()>();

     label16:
        goto label25;

     label17:
        $r23 := @caughtexception;

     label18:
        $r24 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r25 = interfaceinvoke $r24.<org.apache.cxf.message.Exchange: java.lang.Object remove(java.lang.Object)>("service.root.instance");

        $r26 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r27 = interfaceinvoke $r26.<org.apache.cxf.message.Exchange: java.lang.Object remove(java.lang.Object)>("service.root.provider");

        if $r25 == null goto label22;

        if $r27 == null goto label22;

     label19:
        $r28 = (org.apache.cxf.jaxrs.lifecycle.ResourceProvider) $r27;

        interfaceinvoke $r28.<org.apache.cxf.jaxrs.lifecycle.ResourceProvider: void releaseInstance(org.apache.cxf.message.Message,java.lang.Object)>(r0, $r25);

     label20:
        goto label22;

     label21:
        $r12 := @caughtexception;

        $r14 = <org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: java.util.logging.Logger LOG>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception occurred during releasing the service instance, ");

        $r16 = virtualinvoke $r12.<java.lang.Throwable: java.lang.String getMessage()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.util.logging.Logger: void warning(java.lang.String)>($r18);

     label22:
        virtualinvoke $r1.<org.apache.cxf.jaxrs.provider.ProviderFactory: void clearThreadLocalProxies()>();

        $r60 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r61 = interfaceinvoke $r60.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Object)>("root.resource.class");

        $r62 = (org.apache.cxf.jaxrs.model.ClassResourceInfo) $r61;

        if $r62 == null goto label23;

        virtualinvoke $r62.<org.apache.cxf.jaxrs.model.ClassResourceInfo: void clearThreadLocalProxies()>();

     label23:
        $r19 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r20 = interfaceinvoke $r19.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Ljavax/ws/rs/container/AsyncResponse;");

        $r22 = (javax.ws.rs.container.AsyncResponse) $r20;

        if $r22 == null goto label24;

        $r21 = (org.apache.cxf.jaxrs.impl.AsyncResponseImpl) $r22;

        virtualinvoke $r21.<org.apache.cxf.jaxrs.impl.AsyncResponseImpl: void reset()>();

     label24:
        throw $r23;

     label25:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    private void processResponse(org.apache.cxf.jaxrs.provider.ProviderFactory, org.apache.cxf.message.Message)
    {
        org.apache.cxf.message.MessageContentsList $r2;
        org.apache.cxf.jaxrs.model.OperationResourceInfo $r24;
        java.lang.Integer $r18;
        boolean $z0, $z1, $z2;
        java.util.List $r26;
        org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor r0;
        javax.ws.rs.core.Response $r14, r19;
        javax.ws.rs.core.Response$ResponseBuilder $r4, $r5;
        org.apache.cxf.jaxrs.provider.ProviderFactory r6, $r25;
        org.apache.cxf.jaxrs.model.ProviderInfo r8;
        short $s3;
        int $i0, $i1, $i2;
        java.lang.String $r17, $r22;
        java.util.Iterator $r27;
        org.apache.cxf.message.Message r1, $r11;
        org.apache.cxf.message.Exchange $r10, $r15, $r20;
        org.apache.cxf.jaxrs.ext.ResponseHandler $r13;
        java.lang.Object $r3, $r7, $r9, $r12, $r16, $r23;
        java.lang.Class $r21;

        r0 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor;

        r6 := @parameter0: org.apache.cxf.jaxrs.provider.ProviderFactory;

        r1 := @parameter1: org.apache.cxf.message.Message;

        $z0 = specialinvoke r0.<org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: boolean isResponseAlreadyHandled(org.apache.cxf.message.Message)>(r1);

        if $z0 == 0 goto label01;

        return;

     label01:
        $r2 = staticinvoke <org.apache.cxf.message.MessageContentsList: org.apache.cxf.message.MessageContentsList getContentsList(org.apache.cxf.message.Message)>(r1);

        if $r2 == null goto label02;

        $i0 = virtualinvoke $r2.<org.apache.cxf.message.MessageContentsList: int size()>();

        if $i0 != 0 goto label03;

     label02:
        return;

     label03:
        $r3 = virtualinvoke $r2.<org.apache.cxf.message.MessageContentsList: java.lang.Object get(int)>(0);

        $z1 = $r3 instanceof javax.ws.rs.core.Response;

        if $z1 == 0 goto label04;

        r19 = (javax.ws.rs.core.Response) $r3;

        $i2 = virtualinvoke r19.<javax.ws.rs.core.Response: int getStatus()>();

        if $i2 != 500 goto label07;

        $r15 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r16 = interfaceinvoke $r15.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Object)>("exception.from.mapper");

        if $r16 == null goto label07;

        $r17 = <org.apache.cxf.message.Message: java.lang.String RESPONSE_CODE>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(500);

        interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r18);

        return;

     label04:
        if $r3 == null goto label05;

        $s3 = 200;

        goto label06;

     label05:
        $s3 = 204;

     label06:
        $i1 = specialinvoke r0.<org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: int getStatus(org.apache.cxf.message.Message,int)>(r1, $s3);

        $r4 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(int)>($i1);

        $r5 = virtualinvoke $r4.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>($r3);

        r19 = virtualinvoke $r5.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>();

     label07:
        $r20 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r21 = class "Lorg/apache/cxf/jaxrs/model/OperationResourceInfo;";

        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.String getName()>();

        $r23 = interfaceinvoke $r20.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Object)>($r22);

        $r24 = (org.apache.cxf.jaxrs.model.OperationResourceInfo) $r23;

        $r25 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>(r1);

        $r26 = virtualinvoke $r25.<org.apache.cxf.jaxrs.provider.ProviderFactory: java.util.List getResponseHandlers()>();

        $r27 = interfaceinvoke $r26.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z2 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r7 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.cxf.jaxrs.model.ProviderInfo) $r7;

        $r9 = virtualinvoke r8.<org.apache.cxf.jaxrs.model.ProviderInfo: java.lang.Object getProvider()>();

        $r10 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r11 = interfaceinvoke $r10.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: void injectContexts(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)>($r9, r8, $r11);

        $r12 = virtualinvoke r8.<org.apache.cxf.jaxrs.model.ProviderInfo: java.lang.Object getProvider()>();

        $r13 = (org.apache.cxf.jaxrs.ext.ResponseHandler) $r12;

        $r14 = interfaceinvoke $r13.<org.apache.cxf.jaxrs.ext.ResponseHandler: javax.ws.rs.core.Response handleResponse(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo,javax.ws.rs.core.Response)>(r1, $r24, r19);

        if $r14 == null goto label09;

        r19 = $r14;

     label09:
        goto label08;

     label10:
        specialinvoke r0.<org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: void serializeMessage(org.apache.cxf.jaxrs.provider.ProviderFactory,org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)>(r6, r1, r19, $r24, 1);

        return;
    }

    private int getStatus(org.apache.cxf.message.Message, int)
    {
        org.apache.cxf.message.Message r0;
        org.apache.cxf.message.Exchange $r1;
        java.lang.Integer $r4;
        org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor r5;
        int i0, $i1;
        java.lang.Object $r3;
        java.lang.String $r2;

        r5 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        i0 := @parameter1: int;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r2 = <org.apache.cxf.message.Message: java.lang.String RESPONSE_CODE>;

        $r3 = interfaceinvoke $r1.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Object)>($r2);

        if $r3 != null goto label1;

        $i1 = i0;

        goto label2;

     label1:
        $r4 = (java.lang.Integer) $r3;

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

     label2:
        return $i1;
    }

    private void serializeMessage(org.apache.cxf.jaxrs.provider.ProviderFactory, org.apache.cxf.message.Message, javax.ws.rs.core.Response, org.apache.cxf.jaxrs.model.OperationResourceInfo, boolean)
    {
        org.apache.cxf.jaxrs.model.OperationResourceInfo r4;
        java.lang.Integer $r31;
        javax.ws.rs.core.MediaType $r22, $r33;
        java.util.Map $r51;
        java.lang.StringBuilder $r42, $r44, $r45;
        java.lang.Throwable $r59, $r61, $r64;
        java.lang.Object[] $r53;
        java.util.ResourceBundle $r54;
        java.lang.String $r13, $r19, $r30, $r32, $r35, $r39, $r41, $r46, $r56, $r57, $r58, $r63, $r72, $r73;
        java.io.IOException $r60, $r65;
        org.apache.cxf.message.Exchange $r2;
        org.apache.cxf.jaxrs.impl.ResponseImpl $r7, $r10, $r11, $r26;
        java.lang.reflect.Method $r5, r6, $r68;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z9, $z10, $z11;
        java.util.logging.Logger $r37, $r43, $r55;
        java.util.List $r28;
        javax.ws.rs.core.Response $r0, r66;
        org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor r9;
        java.lang.reflect.Type $r25;
        org.apache.cxf.jaxrs.model.ClassResourceInfo $r47;
        java.lang.String[] $r34;
        java.lang.'annotation'.Annotation[] $r8, $r27, $r69, r70;
        org.apache.cxf.jaxrs.provider.ProviderFactory r15;
        org.apache.cxf.common.i18n.Message $r52;
        java.util.logging.Level $r36;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.Boolean $r20;
        java.io.OutputStream $r48, $r50;
        org.apache.cxf.message.Message r1;
        javax.ws.rs.core.MultivaluedMap $r12;
        java.lang.Object $r3, $r14, $r16, $r17, $r18, $r21, $r24, $r29, $r49, r67, $r71;
        java.lang.Class $r23, $r38, $r40, $r62, $r74;

        r9 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor;

        r15 := @parameter0: org.apache.cxf.jaxrs.provider.ProviderFactory;

        r1 := @parameter1: org.apache.cxf.message.Message;

        r66 := @parameter2: javax.ws.rs.core.Response;

        r4 := @parameter3: org.apache.cxf.jaxrs.model.OperationResourceInfo;

        z1 := @parameter4: boolean;

        $r0 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.Response copyResponseIfNeeded(javax.ws.rs.core.Response)>(r66);

        $r2 = interfaceinvoke r1.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r3 = virtualinvoke $r0.<javax.ws.rs.core.Response: java.lang.Object getEntity()>();

        r67 = $r3;

        $i0 = virtualinvoke $r0.<javax.ws.rs.core.Response: int getStatus()>();

        if $i0 != 200 goto label01;

        if z1 == 0 goto label01;

        if r4 == null goto label01;

        $r57 = "HEAD";

        $r58 = virtualinvoke r4.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.String getHttpMethod()>();

        $z7 = virtualinvoke $r57.<java.lang.String: boolean equals(java.lang.Object)>($r58);

        if $z7 == 0 goto label01;

        $z11 = 1;

        $z10 = 1;

        goto label02;

     label01:
        $z11 = 0;

        $z10 = 0;

     label02:
        z0 = $z10;

        if $z11 == 0 goto label03;

        if $r3 == null goto label03;

        $r55 = <org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: java.util.logging.Logger LOG>;

        $r52 = new org.apache.cxf.common.i18n.Message;

        $r54 = <org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: java.util.ResourceBundle BUNDLE>;

        $r53 = newarray (java.lang.Object)[0];

        specialinvoke $r52.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("HEAD_WITHOUT_ENTITY", $r54, $r53);

        $r56 = virtualinvoke $r52.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r55.<java.util.logging.Logger: void info(java.lang.String)>($r56);

        r67 = null;

     label03:
        if r4 != null goto label04;

        $r68 = null;

        goto label06;

     label04:
        $r5 = virtualinvoke r4.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.reflect.Method getAnnotatedMethod()>();

        if $r5 == null goto label05;

        $r68 = virtualinvoke r4.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.reflect.Method getAnnotatedMethod()>();

        goto label06;

     label05:
        $r68 = virtualinvoke r4.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.reflect.Method getMethodToInvoke()>();

     label06:
        r6 = $r68;

        if $r68 == null goto label07;

        $r69 = virtualinvoke $r68.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[] getAnnotations()>();

        goto label08;

     label07:
        $r69 = newarray (java.lang.'annotation'.Annotation)[0];

     label08:
        $r7 = (org.apache.cxf.jaxrs.impl.ResponseImpl) $r0;

        $r8 = virtualinvoke $r7.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.'annotation'.Annotation[] getEntityAnnotations()>();

        if $r8 == null goto label09;

        $i6 = lengthof $r69;

        $i5 = lengthof $r8;

        $i7 = $i6 + $i5;

        r70 = newarray (java.lang.'annotation'.Annotation)[$i7];

        $i8 = lengthof $r69;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r69, 0, r70, 0, $i8);

        $i10 = lengthof $r69;

        $i9 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, r70, $i10, $i9);

        goto label10;

     label09:
        r70 = $r69;

     label10:
        $r10 = (org.apache.cxf.jaxrs.impl.ResponseImpl) $r0;

        $i1 = virtualinvoke $r0.<javax.ws.rs.core.Response: int getStatus()>();

        $i2 = specialinvoke r9.<org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: int getActualStatus(int,java.lang.Object)>($i1, r67);

        virtualinvoke $r10.<org.apache.cxf.jaxrs.impl.ResponseImpl: void setStatus(int)>($i2);

        $r11 = (org.apache.cxf.jaxrs.impl.ResponseImpl) $r0;

        virtualinvoke $r11.<org.apache.cxf.jaxrs.impl.ResponseImpl: void setEntity(java.lang.Object,java.lang.'annotation'.Annotation[])>(r67, r70);

        $r12 = virtualinvoke $r0.<javax.ws.rs.core.Response: javax.ws.rs.core.MultivaluedMap getMetadata()>();

        $r13 = <org.apache.cxf.message.Message: java.lang.String PROTOCOL_HEADERS>;

        $r14 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r13);

        $r51 = (java.util.Map) $r14;

        if z1 == 0 goto label11;

        if $r51 == null goto label11;

        interfaceinvoke $r12.<javax.ws.rs.core.MultivaluedMap: void putAll(java.util.Map)>($r51);

     label11:
        $r71 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("Content-Type");

        $r72 = (java.lang.String) $r71;

        if $r72 == null goto label12;

        $z6 = interfaceinvoke $r12.<javax.ws.rs.core.MultivaluedMap: boolean containsKey(java.lang.Object)>("Content-Type");

        if $z6 != 0 goto label12;

        interfaceinvoke $r12.<javax.ws.rs.core.MultivaluedMap: void putSingle(java.lang.Object,java.lang.Object)>("Content-Type", $r72);

     label12:
        $r73 = <org.apache.cxf.message.Message: java.lang.String PROTOCOL_HEADERS>;

        interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r73, $r12);

        specialinvoke r9.<org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: void setResponseDate(javax.ws.rs.core.MultivaluedMap,boolean)>($r12, z1);

     label13:
        staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: void runContainerResponseFilters(org.apache.cxf.jaxrs.provider.ProviderFactory,javax.ws.rs.core.Response,org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.reflect.Method)>(r15, $r0, r1, r4, r6);

     label14:
        goto label17;

     label15:
        $r65 := @caughtexception;

        specialinvoke r9.<org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: void handleWriteException(org.apache.cxf.jaxrs.provider.ProviderFactory,org.apache.cxf.message.Message,java.lang.Throwable,boolean)>(r15, r1, $r65, z1);

        return;

     label16:
        $r64 := @caughtexception;

        specialinvoke r9.<org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: void handleWriteException(org.apache.cxf.jaxrs.provider.ProviderFactory,org.apache.cxf.message.Message,java.lang.Throwable,boolean)>(r15, r1, $r64, z1);

        return;

     label17:
        $r16 = virtualinvoke $r0.<javax.ws.rs.core.Response: java.lang.Object getEntity()>();

        $r17 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.Object getEntity(java.lang.Object)>($r16);

        $i3 = virtualinvoke $r0.<javax.ws.rs.core.Response: int getStatus()>();

        $i4 = specialinvoke r9.<org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: int getActualStatus(int,java.lang.Object)>($i3, $r17);

        specialinvoke r9.<org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: void setResponseStatus(org.apache.cxf.message.Message,int)>(r1, $i4);

        if $r17 != null goto label19;

        if z0 != 0 goto label18;

        interfaceinvoke $r12.<javax.ws.rs.core.MultivaluedMap: void putSingle(java.lang.Object,java.lang.Object)>("Content-Length", "0");

        interfaceinvoke $r12.<javax.ws.rs.core.MultivaluedMap: java.lang.Object remove(java.lang.Object)>("Content-Type");

        interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object remove(java.lang.Object)>("Content-Type");

     label18:
        return;

     label19:
        $r18 = interfaceinvoke $r2.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Object)>("ignore.message.writers");

        if $r18 != null goto label20;

        $z9 = 0;

        goto label21;

     label20:
        $r19 = virtualinvoke $r18.<java.lang.Object: java.lang.String toString()>();

        $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r19);

        $z9 = virtualinvoke $r20.<java.lang.Boolean: boolean booleanValue()>();

     label21:
        if $z9 == 0 goto label22;

        $r49 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/io/OutputStream;");

        $r50 = (java.io.OutputStream) $r49;

        specialinvoke r9.<org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: void writeResponseToStream(java.io.OutputStream,java.lang.Object)>($r50, $r17);

        return;

     label22:
        $r21 = interfaceinvoke $r12.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("Content-Type");

        $r22 = specialinvoke r9.<org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: javax.ws.rs.core.MediaType getResponseMediaType(java.lang.Object)>($r21);

        $r23 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.Class getRawResponseClass(java.lang.Object)>($r17);

        if r6 == null goto label23;

        $r47 = virtualinvoke r4.<org.apache.cxf.jaxrs.model.OperationResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo getClassResourceInfo()>();

        $r74 = virtualinvoke $r47.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class getServiceClass()>();

        goto label24;

     label23:
        $r74 = null;

     label24:
        $r24 = virtualinvoke $r0.<javax.ws.rs.core.Response: java.lang.Object getEntity()>();

        $r25 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.reflect.Type getGenericResponseType(java.lang.reflect.Method,java.lang.Class,java.lang.Object,java.lang.Class,org.apache.cxf.message.Exchange)>(r6, $r74, $r24, $r23, $r2);

        $r26 = (org.apache.cxf.jaxrs.impl.ResponseImpl) $r0;

        $r27 = virtualinvoke $r26.<org.apache.cxf.jaxrs.impl.ResponseImpl: java.lang.'annotation'.Annotation[] getEntityAnnotations()>();

        $r28 = virtualinvoke r15.<org.apache.cxf.jaxrs.provider.ProviderFactory: java.util.List createMessageBodyWriterInterceptor(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)>($r23, $r25, $r27, $r22, r1);

        $r29 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/io/OutputStream;");

        $r48 = (java.io.OutputStream) $r29;

        if $r28 == null goto label25;

        $z2 = interfaceinvoke $r28.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label26;

     label25:
        interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("Content-Type", "text/plain");

        $r30 = <org.apache.cxf.message.Message: java.lang.String RESPONSE_CODE>;

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(500);

        interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r30, $r31);

        $r32 = virtualinvoke $r23.<java.lang.Class: java.lang.String getSimpleName()>();

        specialinvoke r9.<org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: void writeResponseErrorMessage(java.io.OutputStream,java.lang.String,java.lang.String)>($r48, "NO_MSG_WRITER", $r32);

        return;

     label26:
        $r33 = specialinvoke r9.<org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: javax.ws.rs.core.MediaType checkFinalContentType(javax.ws.rs.core.MediaType,java.util.List)>($r22, $r28);

        $r34 = newarray (java.lang.String)[0];

        $r35 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.String mediaTypeToString(javax.ws.rs.core.MediaType,java.lang.String[])>($r33, $r34);

        $r37 = <org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: java.util.logging.Logger LOG>;

        $r36 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z3 = virtualinvoke $r37.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r36);

        if $z3 == 0 goto label27;

        $r43 = <org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: java.util.logging.Logger LOG>;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Response content type is: ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r43.<java.util.logging.Logger: void fine(java.lang.String)>($r46);

     label27:
        interfaceinvoke $r12.<javax.ws.rs.core.MultivaluedMap: void putSingle(java.lang.Object,java.lang.Object)>("Content-Type", $r35);

        interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("Content-Type", $r35);

        $z4 = specialinvoke r9.<org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: boolean checkBufferingMode(org.apache.cxf.message.Message,java.util.List,boolean)>(r1, $r28, z1);

     label28:
        staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: void writeMessageBody(java.util.List,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message)>($r28, $r17, $r23, $r25, $r27, $r33, $r12, r1);

        $z5 = specialinvoke r9.<org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: boolean isResponseRedirected(org.apache.cxf.message.Message)>(r1);

        if $z5 == 0 goto label31;

     label29:
        if $z4 == 0 goto label30;

        interfaceinvoke r1.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljava/io/OutputStream;", $r48);

        $r40 = class "Ljavax/xml/stream/XMLStreamWriter;";

        $r41 = virtualinvoke $r40.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r41, null);

     label30:
        return;

     label31:
        specialinvoke r9.<org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: void checkCachedStream(org.apache.cxf.message.Message,java.io.OutputStream,boolean)>(r1, $r48, $z4);

     label32:
        if $z4 == 0 goto label36;

        interfaceinvoke r1.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljava/io/OutputStream;", $r48);

        $r38 = class "Ljavax/xml/stream/XMLStreamWriter;";

        $r39 = virtualinvoke $r38.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r39, null);

        goto label36;

     label33:
        $r61 := @caughtexception;

     label34:
        if $z4 == 0 goto label35;

        interfaceinvoke r1.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljava/io/OutputStream;", $r48);

        $r62 = class "Ljavax/xml/stream/XMLStreamWriter;";

        $r63 = virtualinvoke $r62.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r63, null);

     label35:
        throw $r61;

     label36:
        goto label39;

     label37:
        $r60 := @caughtexception;

        specialinvoke r9.<org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: void handleWriteException(org.apache.cxf.jaxrs.provider.ProviderFactory,org.apache.cxf.message.Message,java.lang.Throwable,boolean)>(r15, r1, $r60, z1);

        goto label39;

     label38:
        $r59 := @caughtexception;

        specialinvoke r9.<org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: void handleWriteException(org.apache.cxf.jaxrs.provider.ProviderFactory,org.apache.cxf.message.Message,java.lang.Throwable,boolean)>(r15, r1, $r59, z1);

     label39:
        return;

        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label28 to label29 with label33;
        catch java.lang.Throwable from label31 to label32 with label33;
        catch java.lang.Throwable from label33 to label34 with label33;
        catch java.io.IOException from label28 to label30 with label37;
        catch java.io.IOException from label31 to label36 with label37;
        catch java.lang.Throwable from label28 to label30 with label38;
        catch java.lang.Throwable from label31 to label36 with label38;
    }

    private javax.ws.rs.core.MediaType getResponseMediaType(java.lang.Object)
    {
        javax.ws.rs.core.MediaType r3, $r4;
        org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor r2;
        java.lang.Object r0;
        java.lang.String $r1;
        boolean $z0;

        r2 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof javax.ws.rs.core.MediaType;

        if $z0 == 0 goto label1;

        r3 = (javax.ws.rs.core.MediaType) r0;

        goto label4;

     label1:
        if r0 != null goto label2;

        $r4 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType WILDCARD_TYPE>;

        goto label3;

     label2:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MediaType toMediaType(java.lang.String)>($r1);

     label3:
        r3 = $r4;

     label4:
        return r3;
    }

    private int getActualStatus(int, java.lang.Object)
    {
        short $s1;
        org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor r1;
        int i0, $i3;
        java.lang.Object r0;

        r1 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Object;

        $i3 = (int) -1;

        if i0 != $i3 goto label3;

        if r0 != null goto label1;

        $s1 = 204;

        goto label2;

     label1:
        $s1 = 200;

     label2:
        return $s1;

     label3:
        return i0;
    }

    private boolean checkBufferingMode(org.apache.cxf.message.Message, java.util.List, boolean)
    {
        javax.ws.rs.ext.MessageBodyWriter $r4;
        org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider $r9, $r10;
        int $i0, $i1;
        javax.ws.rs.ext.WriterInterceptor r2;
        boolean z0, $z1, z2, z3, $z4;
        org.apache.cxf.jaxrs.impl.WriterInterceptorMBW $r3;
        org.apache.cxf.message.Message r5;
        org.apache.cxf.staxutils.CachingXmlEventWriter $r8;
        java.util.List r0;
        org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor r11;
        java.lang.Object $r1, $r6;
        org.apache.cxf.io.CachedOutputStream $r7;

        r11 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor;

        r5 := @parameter0: org.apache.cxf.message.Message;

        r0 := @parameter1: java.util.List;

        z0 := @parameter2: boolean;

        if z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i1);

        r2 = (javax.ws.rs.ext.WriterInterceptor) $r1;

        $r3 = (org.apache.cxf.jaxrs.impl.WriterInterceptorMBW) r2;

        $r4 = virtualinvoke $r3.<org.apache.cxf.jaxrs.impl.WriterInterceptorMBW: javax.ws.rs.ext.MessageBodyWriter getMBW()>();

        $r6 = interfaceinvoke r5.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("org.apache.cxf.output.buffering");

        $z1 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isTrue(java.lang.Object)>($r6);

        z3 = $z1;

        z2 = $r4 instanceof org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider;

        if $z1 != 0 goto label2;

        if $r6 != null goto label2;

        if z2 == 0 goto label2;

        $r10 = (org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider) $r4;

        z3 = virtualinvoke $r10.<org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider: boolean getEnableBuffering()>();

     label2:
        if z3 == 0 goto label6;

        if z2 == 0 goto label3;

        $r9 = (org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider) $r4;

        $z4 = virtualinvoke $r9.<org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider: boolean getEnableStreaming()>();

        goto label4;

     label3:
        $z4 = 0;

     label4:
        if $z4 == 0 goto label5;

        $r8 = new org.apache.cxf.staxutils.CachingXmlEventWriter;

        specialinvoke $r8.<org.apache.cxf.staxutils.CachingXmlEventWriter: void <init>()>();

        interfaceinvoke r5.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljavax/xml/stream/XMLStreamWriter;", $r8);

        goto label6;

     label5:
        $r7 = new org.apache.cxf.io.CachedOutputStream;

        specialinvoke $r7.<org.apache.cxf.io.CachedOutputStream: void <init>()>();

        interfaceinvoke r5.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljava/io/OutputStream;", $r7);

     label6:
        return z3;
    }

    private void checkCachedStream(org.apache.cxf.message.Message, java.io.OutputStream, boolean) throws java.lang.Exception
    {
        java.lang.Throwable $r13;
        long $l0;
        byte $b1;
        javax.xml.stream.events.XMLEvent r11;
        int $i2;
        javax.xml.stream.XMLStreamWriter $r7, r15, r17;
        java.lang.String $r2;
        boolean z0, $z1, $z2, $z3;
        java.io.OutputStream r5, r18;
        java.util.Iterator $r9;
        org.apache.cxf.message.Message r0;
        org.apache.cxf.staxutils.CachingXmlEventWriter r16;
        java.util.List $r6, $r8;
        org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor r14;
        java.lang.Class $r1;
        java.lang.Object $r3, $r4, $r10, $r12;
        org.apache.cxf.io.CachedOutputStream r19;

        r14 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r5 := @parameter1: java.io.OutputStream;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label01;

        $r12 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljavax/xml/stream/XMLStreamWriter;");

        r15 = (javax.xml.stream.XMLStreamWriter) $r12;

        goto label02;

     label01:
        $r1 = class "Ljavax/xml/stream/XMLStreamWriter;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r2);

        r15 = (javax.xml.stream.XMLStreamWriter) $r3;

     label02:
        $z1 = r15 instanceof org.apache.cxf.staxutils.CachingXmlEventWriter;

        if $z1 == 0 goto label09;

        r16 = (org.apache.cxf.staxutils.CachingXmlEventWriter) r15;

        $r6 = virtualinvoke r16.<org.apache.cxf.staxutils.CachingXmlEventWriter: java.util.List getEvents()>();

        $i2 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i2 == 0 goto label08;

        r17 = null;

     label03:
        $r7 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream)>(r5);

        r17 = $r7;

        $r8 = virtualinvoke r16.<org.apache.cxf.staxutils.CachingXmlEventWriter: java.util.List getEvents()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z3 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label05;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (javax.xml.stream.events.XMLEvent) $r10;

        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)>(r11, $r7);

        goto label04;

     label05:
        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void close(javax.xml.stream.XMLStreamWriter)>($r7);

        goto label08;

     label06:
        $r13 := @caughtexception;

     label07:
        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void close(javax.xml.stream.XMLStreamWriter)>(r17);

        throw $r13;

     label08:
        interfaceinvoke r0.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljavax/xml/stream/XMLStreamWriter;", null);

        return;

     label09:
        if z0 == 0 goto label10;

        $r4 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/io/OutputStream;");

        r18 = (java.io.OutputStream) $r4;

        if r18 == r5 goto label10;

        $z2 = r18 instanceof org.apache.cxf.io.CachedOutputStream;

        if $z2 == 0 goto label10;

        r19 = (org.apache.cxf.io.CachedOutputStream) r18;

        $l0 = virtualinvoke r19.<org.apache.cxf.io.CachedOutputStream: long size()>();

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label10;

        virtualinvoke r19.<org.apache.cxf.io.CachedOutputStream: void writeCacheTo(java.io.OutputStream)>(r5);

     label10:
        return;

        catch java.lang.Throwable from label03 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

    private void handleWriteException(org.apache.cxf.jaxrs.provider.ProviderFactory, org.apache.cxf.message.Message, java.lang.Throwable, boolean)
    {
        java.lang.Throwable r4;
        org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor r0;
        javax.ws.rs.core.Response r5;
        org.apache.cxf.message.Message r2;
        javax.ws.rs.InternalServerErrorException $r3;
        org.apache.cxf.jaxrs.provider.ProviderFactory r1;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor;

        r1 := @parameter0: org.apache.cxf.jaxrs.provider.ProviderFactory;

        r2 := @parameter1: org.apache.cxf.message.Message;

        r4 := @parameter2: java.lang.Throwable;

        z0 := @parameter3: boolean;

        r5 = null;

        if z0 == 0 goto label1;

        r5 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.Response convertFaultToResponse(java.lang.Throwable,org.apache.cxf.message.Message)>(r4, r2);

     label1:
        if r5 != null goto label2;

        specialinvoke r0.<org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: void setResponseStatus(org.apache.cxf.message.Message,int)>(r2, 500);

        $r3 = new javax.ws.rs.InternalServerErrorException;

        specialinvoke $r3.<javax.ws.rs.InternalServerErrorException: void <init>(java.lang.Throwable)>(r4);

        throw $r3;

     label2:
        specialinvoke r0.<org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: void serializeMessage(org.apache.cxf.jaxrs.provider.ProviderFactory,org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)>(r1, r2, r5, null, 0);

        return;
    }

    private void writeResponseErrorMessage(java.io.OutputStream, java.lang.String, java.lang.String)
    {
        java.io.OutputStream r7;
        byte[] $r9;
        java.lang.Object[] $r2;
        java.io.IOException $r10;
        org.apache.cxf.common.i18n.Message $r0;
        java.util.logging.Logger $r5;
        java.util.ResourceBundle $r4;
        org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor r11;
        java.lang.String r1, r3, $r6, $r8;

        r11 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor;

        r7 := @parameter0: java.io.OutputStream;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

     label1:
        $r0 = new org.apache.cxf.common.i18n.Message;

        $r4 = <org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: java.util.ResourceBundle BUNDLE>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r3;

        specialinvoke $r0.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>(r1, $r4, $r2);

        $r5 = <org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: java.util.logging.Logger LOG>;

        $r6 = virtualinvoke $r0.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r5.<java.util.logging.Logger: void warning(java.lang.String)>($r6);

        if r7 == null goto label2;

        $r8 = virtualinvoke $r0.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        $r9 = virtualinvoke $r8.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke r7.<java.io.OutputStream: void write(byte[])>($r9);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private javax.ws.rs.core.MediaType checkFinalContentType(javax.ws.rs.core.MediaType, java.util.List)
    {
        javax.ws.rs.Produces $r13;
        javax.ws.rs.ext.MessageBodyWriter $r3;
        java.lang.String[] $r7;
        javax.ws.rs.core.MediaType $r6, $r12, r15;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2, $z3;
        org.apache.cxf.jaxrs.impl.WriterInterceptorMBW $r2;
        java.util.List r0, $r8, $r9, $r10;
        org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor r14;
        java.lang.'annotation'.Annotation $r5;
        java.lang.Object $r1, $r11;
        java.lang.Class $r4;

        r14 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor;

        r15 := @parameter0: javax.ws.rs.core.MediaType;

        r0 := @parameter1: java.util.List;

        $z0 = virtualinvoke r15.<javax.ws.rs.core.MediaType: boolean isWildcardType()>();

        if $z0 != 0 goto label1;

        $z3 = virtualinvoke r15.<javax.ws.rs.core.MediaType: boolean isWildcardSubtype()>();

        if $z3 == 0 goto label7;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 1 goto label2;

        $i2 = 0;

        goto label3;

     label2:
        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        $i2 = $i1 - 1;

     label3:
        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i2);

        $r2 = (org.apache.cxf.jaxrs.impl.WriterInterceptorMBW) $r1;

        $r3 = virtualinvoke $r2.<org.apache.cxf.jaxrs.impl.WriterInterceptorMBW: javax.ws.rs.ext.MessageBodyWriter getMBW()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljavax/ws/rs/Produces;");

        $r13 = (javax.ws.rs.Produces) $r5;

        if $r13 == null goto label6;

        $r7 = interfaceinvoke $r13.<javax.ws.rs.Produces: java.lang.String[] value()>();

        $r8 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List getMediaTypes(java.lang.String[])>($r7);

        $r9 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List sortMediaTypes(java.util.List,java.lang.String)>($r8, "qs");

        $r10 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List intersectMimeTypes(java.util.List,javax.ws.rs.core.MediaType)>($r9, r15);

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(0);

        r15 = (javax.ws.rs.core.MediaType) $r11;

        $z1 = virtualinvoke r15.<javax.ws.rs.core.MediaType: boolean isWildcardType()>();

        if $z1 != 0 goto label4;

        $z2 = virtualinvoke r15.<javax.ws.rs.core.MediaType: boolean isWildcardSubtype()>();

        if $z2 == 0 goto label5;

     label4:
        $r12 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType APPLICATION_OCTET_STREAM_TYPE>;

        return $r12;

     label5:
        goto label7;

     label6:
        $r6 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType APPLICATION_OCTET_STREAM_TYPE>;

        return $r6;

     label7:
        return r15;
    }

    private void setResponseDate(javax.ws.rs.core.MultivaluedMap, boolean)
    {
        javax.ws.rs.core.MultivaluedMap r1;
        org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor r4;
        java.util.Date $r2;
        java.text.SimpleDateFormat $r0;
        java.lang.String $r3;
        boolean z0;

        r4 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor;

        r1 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        z0 := @parameter1: boolean;

        if z0 != 0 goto label1;

        return;

     label1:
        $r0 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.text.SimpleDateFormat getHttpDateFormat()>();

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>()>();

        $r3 = virtualinvoke $r0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r2);

        interfaceinvoke r1.<javax.ws.rs.core.MultivaluedMap: void putSingle(java.lang.Object,java.lang.Object)>("Date", $r3);

        return;
    }

    private boolean isResponseAlreadyHandled(org.apache.cxf.message.Message)
    {
        org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor r0;
        org.apache.cxf.message.Message r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor;

        r1 := @parameter0: org.apache.cxf.message.Message;

        $z0 = specialinvoke r0.<org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: boolean isResponseAlreadyCommited(org.apache.cxf.message.Message)>(r1);

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: boolean isResponseRedirected(org.apache.cxf.message.Message)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private boolean isResponseAlreadyCommited(org.apache.cxf.message.Message)
    {
        org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor r4;
        org.apache.cxf.message.Message r0;
        java.lang.Boolean $r1;
        java.lang.Object $r3;
        org.apache.cxf.message.Exchange $r2;
        boolean $z0;

        r4 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r3 = interfaceinvoke $r2.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Object)>("http.response.done");

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    private boolean isResponseRedirected(org.apache.cxf.message.Message)
    {
        org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor r3;
        org.apache.cxf.message.Message r0;
        java.lang.Boolean $r1;
        java.lang.Object $r2;
        boolean $z0;

        r3 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("http.request.redirected");

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    private void writeResponseToStream(java.io.OutputStream, java.lang.Object)
    {
        java.io.OutputStream r3;
        byte[] $r2;
        java.lang.RuntimeException $r6;
        java.util.logging.Logger $r5;
        java.lang.Exception $r4;
        org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor r7;
        int $i0;
        java.lang.Object r0;
        java.lang.String $r1;

        r7 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor;

        r3 := @parameter0: java.io.OutputStream;

        r0 := @parameter1: java.lang.Object;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $i0 = lengthof $r2;

        virtualinvoke r3.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = <org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: java.util.logging.Logger LOG>;

        virtualinvoke $r5.<java.util.logging.Logger: void severe(java.lang.String)>("Problem with writing the data to the output stream");

        virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>();

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r6;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void setResponseStatus(org.apache.cxf.message.Message, int)
    {
        org.apache.cxf.message.Message r0;
        javax.servlet.http.HttpServletResponse r5;
        java.lang.Integer $r2;
        org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor r3;
        int i0;
        java.lang.Object $r4;
        java.lang.String $r1;
        boolean $z0;

        r3 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        i0 := @parameter1: int;

        $r1 = <org.apache.cxf.message.Message: java.lang.String RESPONSE_CODE>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        $z0 = specialinvoke r3.<org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: boolean isResponseHeadersCopied(org.apache.cxf.message.Message)>(r0);

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("HTTP.RESPONSE");

        r5 = (javax.servlet.http.HttpServletResponse) $r4;

        interfaceinvoke r5.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(i0);

     label1:
        return;
    }

    private boolean isResponseHeadersCopied(org.apache.cxf.message.Message)
    {
        org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor r2;
        org.apache.cxf.message.Message r0;
        java.lang.Object $r1;
        boolean $z0;

        r2 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("http.headers.copied");

        $z0 = staticinvoke <org.apache.cxf.message.MessageUtils: boolean isTrue(java.lang.Object)>($r1);

        return $z0;
    }

    public void handleFault(org.apache.cxf.message.Message)
    {
        java.lang.Boolean $r1;
        org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor r2;
        org.apache.cxf.message.Message r0;

        r2 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>("jaxrs.out.fault", $r1);

        return;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;
        java.util.ResourceBundle $r1;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/interceptor/JAXRSOutInterceptor;");

        <org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: java.util.logging.Logger LOG> = $r0;

        $r1 = staticinvoke <org.apache.cxf.common.i18n.BundleUtils: java.util.ResourceBundle getBundle(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/interceptor/JAXRSOutInterceptor;");

        <org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor: java.util.ResourceBundle BUNDLE> = $r1;

        return;
    }
}
