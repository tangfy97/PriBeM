public final class org.apache.tika.metadata.PropertyTypeException extends java.lang.IllegalArgumentException
{

    public void <init>(java.lang.String)
    {
        org.apache.tika.metadata.PropertyTypeException r0;
        java.lang.String r1;

        r0 := @this: org.apache.tika.metadata.PropertyTypeException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(org.apache.tika.metadata.Property$PropertyType, org.apache.tika.metadata.Property$PropertyType)
    {
        org.apache.tika.metadata.Property$PropertyType r3, r6;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7;
        org.apache.tika.metadata.PropertyTypeException r0;
        java.lang.String $r8;

        r0 := @this: org.apache.tika.metadata.PropertyTypeException;

        r3 := @parameter0: org.apache.tika.metadata.Property$PropertyType;

        r6 := @parameter1: org.apache.tika.metadata.Property$PropertyType;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected a property of type ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but received ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        return;
    }

    public void <init>(org.apache.tika.metadata.Property$ValueType, org.apache.tika.metadata.Property$ValueType)
    {
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7;
        org.apache.tika.metadata.Property$ValueType r3, r6;
        org.apache.tika.metadata.PropertyTypeException r0;
        java.lang.String $r8;

        r0 := @this: org.apache.tika.metadata.PropertyTypeException;

        r3 := @parameter0: org.apache.tika.metadata.Property$ValueType;

        r6 := @parameter1: org.apache.tika.metadata.Property$ValueType;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected a property with a ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" value, but received a ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        return;
    }

    public void <init>(org.apache.tika.metadata.Property$PropertyType)
    {
        java.lang.StringBuilder $r3, $r4, $r5;
        org.apache.tika.metadata.PropertyTypeException r0;
        org.apache.tika.metadata.Property$PropertyType r1, $r2;
        java.lang.String $r6;

        r0 := @this: org.apache.tika.metadata.PropertyTypeException;

        r1 := @parameter0: org.apache.tika.metadata.Property$PropertyType;

        $r2 = <org.apache.tika.metadata.Property$PropertyType: org.apache.tika.metadata.Property$PropertyType COMPOSITE>;

        if r1 == $r2 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r6 = "Composite Properties must not include other Composite Properties as either Primary or Secondary";

     label2:
        specialinvoke r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        return;
    }
}
