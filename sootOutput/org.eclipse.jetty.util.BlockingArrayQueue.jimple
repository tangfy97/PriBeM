public class org.eclipse.jetty.util.BlockingArrayQueue extends java.util.AbstractList implements java.util.concurrent.BlockingQueue
{
    public final int DEFAULT_CAPACITY;
    public final int DEFAULT_GROWTH;
    private final int _limit;
    private final java.util.concurrent.atomic.AtomicInteger _size;
    private final int _growCapacity;
    private volatile int _capacity;
    private java.lang.Object[] _elements;
    private final java.util.concurrent.locks.ReentrantLock _headLock;
    private final java.util.concurrent.locks.Condition _notEmpty;
    private int _head;
    private long _space0;
    private long _space1;
    private long _space2;
    private long _space3;
    private long _space4;
    private long _space5;
    private long _space6;
    private long _space7;
    private final java.util.concurrent.locks.ReentrantLock _tailLock;
    private int _tail;

    public void <init>()
    {
        java.lang.Object[] $r6, $r7;
        java.util.concurrent.locks.ReentrantLock $r2, $r3, $r5;
        java.util.concurrent.locks.Condition $r4;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;
        org.eclipse.jetty.util.BlockingArrayQueue r0;

        r0 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int DEFAULT_GROWTH> = 64;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int DEFAULT_CAPACITY> = 128;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int DEFAULT_CAPACITY> = 128;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int DEFAULT_GROWTH> = 64;

        $r1 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size> = $r1;

        $r2 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock> = $r2;

        $r3 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.Condition newCondition()>();

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.Condition _notEmpty> = $r4;

        $r5 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r5.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock> = $r5;

        $r6 = newarray (java.lang.Object)[128];

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements> = $r6;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _growCapacity> = 64;

        $r7 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $i0 = lengthof $r7;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity> = $i0;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _limit> = 2147483647;

        return;
    }

    public void <init>(int)
    {
        java.lang.Object[] $r6, $r7;
        java.util.concurrent.locks.ReentrantLock $r3, $r9, $r10;
        java.util.concurrent.locks.Condition $r4;
        java.util.concurrent.atomic.AtomicInteger $r8;
        int i0, $i1, $i3;
        org.eclipse.jetty.util.BlockingArrayQueue r0;

        r0 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        i0 := @parameter0: int;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int DEFAULT_GROWTH> = 64;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int DEFAULT_CAPACITY> = 128;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int DEFAULT_CAPACITY> = 128;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int DEFAULT_GROWTH> = 64;

        $r8 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r8.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size> = $r8;

        $r9 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r9.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock> = $r9;

        $r3 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.Condition newCondition()>();

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.Condition _notEmpty> = $r4;

        $r10 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r10.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock> = $r10;

        $r6 = newarray (java.lang.Object)[i0];

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements> = $r6;

        $r7 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $i1 = lengthof $r7;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity> = $i1;

        $i3 = (int) -1;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _growCapacity> = $i3;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _limit> = i0;

        return;
    }

    public void <init>(int, int)
    {
        java.lang.Object[] $r6, $r7;
        java.util.concurrent.locks.ReentrantLock $r2, $r3, $r5;
        java.util.concurrent.locks.Condition $r4;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int i0, $i1, i2;
        org.eclipse.jetty.util.BlockingArrayQueue r0;

        r0 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int DEFAULT_GROWTH> = 64;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int DEFAULT_CAPACITY> = 128;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int DEFAULT_CAPACITY> = 128;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int DEFAULT_GROWTH> = 64;

        $r1 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size> = $r1;

        $r2 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock> = $r2;

        $r3 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.Condition newCondition()>();

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.Condition _notEmpty> = $r4;

        $r5 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r5.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock> = $r5;

        $r6 = newarray (java.lang.Object)[i0];

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements> = $r6;

        $r7 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $i1 = lengthof $r7;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity> = $i1;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _growCapacity> = i2;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _limit> = 2147483647;

        return;
    }

    public void <init>(int, int, int)
    {
        java.lang.Object[] $r6, $r7;
        java.util.concurrent.locks.ReentrantLock $r2, $r3, $r5;
        java.lang.IllegalArgumentException $r8;
        java.util.concurrent.locks.Condition $r4;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int i0, i1, $i2, i3;
        org.eclipse.jetty.util.BlockingArrayQueue r0;

        r0 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int DEFAULT_GROWTH> = 64;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int DEFAULT_CAPACITY> = 128;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int DEFAULT_CAPACITY> = 128;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int DEFAULT_GROWTH> = 64;

        $r1 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size> = $r1;

        $r2 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock> = $r2;

        $r3 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.Condition newCondition()>();

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.Condition _notEmpty> = $r4;

        $r5 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r5.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock> = $r5;

        if i0 <= i1 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r8;

     label1:
        $r6 = newarray (java.lang.Object)[i0];

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements> = $r6;

        $r7 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $i2 = lengthof $r7;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity> = $i2;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _growCapacity> = i3;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _limit> = i1;

        return;
    }

    public int getCapacity()
    {
        int $i0;
        org.eclipse.jetty.util.BlockingArrayQueue r0;

        r0 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        $i0 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity>;

        return $i0;
    }

    public int getLimit()
    {
        int $i0;
        org.eclipse.jetty.util.BlockingArrayQueue r0;

        r0 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        $i0 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _limit>;

        return $i0;
    }

    public boolean add(java.lang.Object)
    {
        java.lang.Object r1;
        org.eclipse.jetty.util.BlockingArrayQueue r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.util.BlockingArrayQueue: boolean offer(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.Object element()
    {
        java.lang.Object $r1;
        java.util.NoSuchElementException $r2;
        org.eclipse.jetty.util.BlockingArrayQueue r0;

        r0 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object peek()>();

        if $r1 != null goto label1;

        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();

        throw $r2;

     label1:
        return $r1;
    }

    public java.lang.Object peek()
    {
        java.lang.Throwable $r6;
        java.lang.Object[] $r5;
        java.util.concurrent.locks.ReentrantLock $r2, $r4, $r7;
        java.util.concurrent.atomic.AtomicInteger $r1, $r3;
        int $i0, $i1, $i2;
        java.lang.Object r8;
        org.eclipse.jetty.util.BlockingArrayQueue r0;

        r0 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        $r1 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        r8 = null;

        $r2 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label2:
        $r3 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        $i1 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if $i1 <= 0 goto label3;

        $r5 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $i2 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _head>;

        r8 = $r5[$i2];

     label3:
        $r4 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label6;

     label4:
        $r6 := @caughtexception;

     label5:
        $r7 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r7.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r6;

     label6:
        return r8;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean offer(java.lang.Object)
    {
        java.lang.NullPointerException $r16;
        java.util.concurrent.atomic.AtomicInteger $r3, $r4, $r6;
        org.eclipse.jetty.util.BlockingArrayQueue r1;
        boolean $z0, $z1;
        java.lang.Throwable $r17, $r19, $r21;
        java.lang.Object[] $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.util.concurrent.locks.ReentrantLock $r2, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r18, $r20, $r22;
        java.util.concurrent.locks.Condition $r9;
        java.lang.Object r0;

        r1 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label01;

        $r16 = new java.lang.NullPointerException;

        specialinvoke $r16.<java.lang.NullPointerException: void <init>()>();

        throw $r16;

     label01:
        $r2 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label02:
        $r3 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        $i0 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $i1 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _limit>;

        if $i0 < $i1 goto label04;

     label03:
        $r15 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock>;

        virtualinvoke $r15.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return 0;

     label04:
        $r4 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        $i2 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        $i3 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity>;

        if $i2 != $i3 goto label11;

        $r11 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r11.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label05:
        $z0 = specialinvoke r1.<org.eclipse.jetty.util.BlockingArrayQueue: boolean grow()>();

        if $z0 != 0 goto label08;

     label06:
        $r13 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r13.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

     label07:
        $r14 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock>;

        virtualinvoke $r14.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return 0;

     label08:
        $r12 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r12.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label11;

     label09:
        $r21 := @caughtexception;

     label10:
        $r22 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r22.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r21;

     label11:
        $r5 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $i4 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _tail>;

        $r5[$i4] = r0;

        $i5 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _tail>;

        $i7 = $i5 + 1;

        $i6 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity>;

        $i8 = $i7 % $i6;

        r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _tail> = $i8;

        $r6 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        $i9 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        if 0 != $i9 goto label12;

        $z1 = 1;

        goto label13;

     label12:
        $z1 = 0;

     label13:
        $r7 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock>;

        virtualinvoke $r7.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label16;

     label14:
        $r19 := @caughtexception;

     label15:
        $r20 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock>;

        virtualinvoke $r20.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r19;

     label16:
        if $z1 == 0 goto label21;

        $r8 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r8.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label17:
        $r9 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.Condition _notEmpty>;

        interfaceinvoke $r9.<java.util.concurrent.locks.Condition: void signal()>();

     label18:
        $r10 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r10.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label21;

     label19:
        $r17 := @caughtexception;

     label20:
        $r18 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r18.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r17;

     label21:
        return 1;

        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label04 to label07 with label14;
        catch java.lang.Throwable from label08 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
    }

    public java.lang.Object poll()
    {
        java.lang.Throwable $r8;
        java.lang.Object[] $r4, $r5;
        java.util.concurrent.atomic.AtomicInteger $r1, $r3, $r6;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6;
        org.eclipse.jetty.util.BlockingArrayQueue r0;
        java.util.concurrent.locks.ReentrantLock $r2, $r9, $r11;
        java.util.concurrent.locks.Condition $r7;
        java.lang.Object r10;

        r0 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        $r1 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        r10 = null;

        $r2 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label2:
        $r3 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        $i1 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if $i1 <= 0 goto label3;

        i2 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _head>;

        $r4 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        r10 = $r4[i2];

        $r5 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $r5[i2] = null;

        $i4 = i2 + 1;

        $i3 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity>;

        $i5 = $i4 % $i3;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _head> = $i5;

        $r6 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        $i6 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        if $i6 <= 0 goto label3;

        $r7 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.Condition _notEmpty>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Condition: void signal()>();

     label3:
        $r11 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r11.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label6;

     label4:
        $r8 := @caughtexception;

     label5:
        $r9 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r9.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r8;

     label6:
        return r10;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.lang.Object take() throws java.lang.InterruptedException
    {
        java.lang.Throwable $r9;
        java.lang.Object[] $r3, $r4;
        java.util.concurrent.atomic.AtomicInteger $r2, $r5;
        int $i0, $i1, $i2, $i3, $i4, i5;
        org.eclipse.jetty.util.BlockingArrayQueue r0;
        java.util.concurrent.locks.ReentrantLock $r1, $r6, $r10;
        java.util.concurrent.locks.Condition $r7, $r8, $r12;
        java.lang.InterruptedException $r11;
        java.lang.Object r13;

        r0 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        $r1 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lockInterruptibly()>();

     label1:
        $r2 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        $i0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if $i0 != 0 goto label2;

        $r8 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.Condition _notEmpty>;

        interfaceinvoke $r8.<java.util.concurrent.locks.Condition: void await()>();

        goto label1;

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        $r12 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.Condition _notEmpty>;

        interfaceinvoke $r12.<java.util.concurrent.locks.Condition: void signal()>();

        throw $r11;

     label4:
        i5 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _head>;

        $r3 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        r13 = $r3[i5];

        $r4 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $r4[i5] = null;

        $i2 = i5 + 1;

        $i1 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity>;

        $i3 = $i2 % $i1;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _head> = $i3;

        $r5 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        $i4 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        if $i4 <= 0 goto label5;

        $r7 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.Condition _notEmpty>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Condition: void signal()>();

     label5:
        $r6 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label8;

     label6:
        $r9 := @caughtexception;

     label7:
        $r10 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r10.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r9;

     label8:
        return r13;

        catch java.lang.InterruptedException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public java.lang.Object poll(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        java.lang.Throwable $r11;
        java.lang.Object[] $r4, $r5;
        long l0, l10;
        byte $b9;
        java.util.concurrent.atomic.AtomicInteger $r3, $r6;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i11;
        org.eclipse.jetty.util.BlockingArrayQueue r1;
        java.util.concurrent.locks.ReentrantLock $r2, $r7, $r10, $r12;
        java.util.concurrent.TimeUnit r0;
        java.util.concurrent.locks.Condition $r8, $r9, $r14;
        java.lang.InterruptedException $r13;
        java.lang.Object r15;

        r1 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        l0 := @parameter0: long;

        r0 := @parameter1: java.util.concurrent.TimeUnit;

        l10 = virtualinvoke r0.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);

        $r2 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lockInterruptibly()>();

     label01:
        $r3 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        $i1 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if $i1 != 0 goto label04;

        $b9 = l10 cmp 0L;

        $i11 = (int) $b9;

        if $i11 > 0 goto label03;

     label02:
        $r10 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r10.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return null;

     label03:
        $r9 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.Condition _notEmpty>;

        l10 = interfaceinvoke $r9.<java.util.concurrent.locks.Condition: long awaitNanos(long)>(l10);

        goto label01;

     label04:
        goto label06;

     label05:
        $r13 := @caughtexception;

        $r14 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.Condition _notEmpty>;

        interfaceinvoke $r14.<java.util.concurrent.locks.Condition: void signal()>();

        throw $r13;

     label06:
        $r4 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $i2 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _head>;

        r15 = $r4[$i2];

        $r5 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $i3 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _head>;

        $r5[$i3] = null;

        $i4 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _head>;

        $i6 = $i4 + 1;

        $i5 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity>;

        $i7 = $i6 % $i5;

        r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _head> = $i7;

        $r6 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        $i8 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        if $i8 <= 0 goto label07;

        $r8 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.Condition _notEmpty>;

        interfaceinvoke $r8.<java.util.concurrent.locks.Condition: void signal()>();

     label07:
        $r7 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r7.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label10;

     label08:
        $r11 := @caughtexception;

     label09:
        $r12 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r12.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r11;

     label10:
        return r15;

        catch java.lang.InterruptedException from label01 to label02 with label05;
        catch java.lang.InterruptedException from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public java.lang.Object remove()
    {
        java.lang.Object $r1;
        java.util.NoSuchElementException $r2;
        org.eclipse.jetty.util.BlockingArrayQueue r0;

        r0 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object poll()>();

        if $r1 != null goto label1;

        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();

        throw $r2;

     label1:
        return $r1;
    }

    public void clear()
    {
        java.lang.Throwable $r6, $r8;
        java.util.concurrent.locks.ReentrantLock $r1, $r2, $r4, $r5, $r7, $r9;
        java.util.concurrent.atomic.AtomicInteger $r3;
        org.eclipse.jetty.util.BlockingArrayQueue r0;

        r0 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        $r1 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r2 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label2:
        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _head> = 0;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _tail> = 0;

        $r3 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0);

     label3:
        $r4 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label6;

     label4:
        $r8 := @caughtexception;

     label5:
        $r9 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r9.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r8;

     label6:
        $r5 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock>;

        virtualinvoke $r5.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label9;

     label7:
        $r6 := @caughtexception;

     label8:
        $r7 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock>;

        virtualinvoke $r7.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r6;

     label9:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public boolean isEmpty()
    {
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;
        org.eclipse.jetty.util.BlockingArrayQueue r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        $r1 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int size()
    {
        int $i0;
        org.eclipse.jetty.util.BlockingArrayQueue r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        $r1 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        return $i0;
    }

    public java.lang.Object get(int)
    {
        java.lang.Throwable $r17, $r19;
        java.lang.IndexOutOfBoundsException $r3;
        java.lang.Object[] $r13;
        java.util.concurrent.atomic.AtomicInteger $r8, $r12;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r11;
        org.eclipse.jetty.util.BlockingArrayQueue r0;
        java.util.concurrent.locks.ReentrantLock $r1, $r2, $r14, $r15, $r18, $r20;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9, $r10;
        java.lang.Object $r16;

        r0 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        i0 := @parameter0: int;

        $r1 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label01:
        $r2 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label02:
        if i0 < 0 goto label03;

        $r12 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        $i1 = virtualinvoke $r12.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if i0 < $i1 goto label04;

     label03:
        $r3 = new java.lang.IndexOutOfBoundsException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!(0<");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<=");

        $r8 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r11);

        throw $r3;

     label04:
        $i2 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _head>;

        i5 = $i2 + i0;

        $i3 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity>;

        if i5 < $i3 goto label05;

        $i4 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity>;

        i5 = i5 - $i4;

     label05:
        $r13 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $r16 = $r13[i5];

     label06:
        $r14 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r14.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

     label07:
        $r15 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock>;

        virtualinvoke $r15.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $r16;

     label08:
        $r19 := @caughtexception;

     label09:
        $r20 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r20.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r19;

     label10:
        $r17 := @caughtexception;

     label11:
        $r18 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock>;

        virtualinvoke $r18.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r17;

        catch java.lang.Throwable from label02 to label06 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label01 to label07 with label10;
        catch java.lang.Throwable from label08 to label11 with label10;
    }

    public java.lang.Object remove(int)
    {
        java.lang.IndexOutOfBoundsException $r3;
        java.util.concurrent.atomic.AtomicInteger $r8, $r12, $r16, $r24;
        org.eclipse.jetty.util.BlockingArrayQueue r0;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9, $r10;
        java.lang.Throwable $r26, $r28;
        java.lang.Object[] $r13, $r14, $r15, $r17, $r19, $r20, $r21, $r22, $r23;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23;
        java.lang.String $r11;
        java.util.concurrent.locks.ReentrantLock $r1, $r2, $r27, $r29, $r30, $r31;
        java.lang.Object $r18, $r25;

        r0 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        i0 := @parameter0: int;

        $r1 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label01:
        $r2 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label02:
        if i0 < 0 goto label03;

        $r12 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        $i1 = virtualinvoke $r12.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if i0 < $i1 goto label04;

     label03:
        $r3 = new java.lang.IndexOutOfBoundsException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!(0<");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<=");

        $r8 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r11);

        throw $r3;

     label04:
        $i2 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _head>;

        i23 = $i2 + i0;

        $i3 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity>;

        if i23 < $i3 goto label05;

        $i22 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity>;

        i23 = i23 - $i22;

     label05:
        $r13 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $r25 = $r13[i23];

        $i4 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _tail>;

        if i23 >= $i4 goto label06;

        $r23 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $i19 = i23 + 1;

        $r22 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $i17 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _tail>;

        $i18 = $i17 - i23;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r23, $i19, $r22, i23, $i18);

        $i20 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _tail>;

        $i21 = $i20 - 1;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _tail> = $i21;

        $r24 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        virtualinvoke $r24.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        goto label09;

     label06:
        $r15 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $i8 = i23 + 1;

        $r14 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $i5 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity>;

        $i6 = $i5 - i23;

        $i7 = $i6 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r15, $i8, $r14, i23, $i7);

        $i9 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _tail>;

        if $i9 <= 0 goto label07;

        $r19 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $i12 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity>;

        $r17 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $r18 = $r17[0];

        $r19[$i12] = $r18;

        $r21 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $r20 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $i13 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _tail>;

        $i14 = $i13 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r21, 1, $r20, 0, $i14);

        $i15 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _tail>;

        $i16 = $i15 - 1;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _tail> = $i16;

        goto label08;

     label07:
        $i10 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity>;

        $i11 = $i10 - 1;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _tail> = $i11;

     label08:
        $r16 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        virtualinvoke $r16.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

     label09:
        $r30 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r30.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

     label10:
        $r31 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock>;

        virtualinvoke $r31.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $r25;

     label11:
        $r28 := @caughtexception;

     label12:
        $r29 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r29.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r28;

     label13:
        $r26 := @caughtexception;

     label14:
        $r27 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock>;

        virtualinvoke $r27.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r26;

        catch java.lang.Throwable from label02 to label09 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label01 to label10 with label13;
        catch java.lang.Throwable from label11 to label14 with label13;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        java.lang.Throwable $r20, $r22;
        java.lang.IndexOutOfBoundsException $r4;
        java.lang.Object[] $r14, $r15;
        java.lang.NullPointerException $r19;
        java.util.concurrent.atomic.AtomicInteger $r9, $r13;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r12;
        org.eclipse.jetty.util.BlockingArrayQueue r1;
        java.util.concurrent.locks.ReentrantLock $r2, $r3, $r16, $r17, $r21, $r23;
        java.lang.Object r0, $r18;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r10, $r11;

        r1 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Object;

        if r0 != null goto label01;

        $r19 = new java.lang.NullPointerException;

        specialinvoke $r19.<java.lang.NullPointerException: void <init>()>();

        throw $r19;

     label01:
        $r2 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label02:
        $r3 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label03:
        if i0 < 0 goto label04;

        $r13 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        $i1 = virtualinvoke $r13.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if i0 < $i1 goto label05;

     label04:
        $r4 = new java.lang.IndexOutOfBoundsException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!(0<");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<=");

        $r9 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r12);

        throw $r4;

     label05:
        $i2 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _head>;

        i5 = $i2 + i0;

        $i3 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity>;

        if i5 < $i3 goto label06;

        $i4 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity>;

        i5 = i5 - $i4;

     label06:
        $r14 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $r18 = $r14[i5];

        $r15 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $r15[i5] = r0;

     label07:
        $r16 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r16.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

     label08:
        $r17 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock>;

        virtualinvoke $r17.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return $r18;

     label09:
        $r22 := @caughtexception;

     label10:
        $r23 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r23.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r22;

     label11:
        $r20 := @caughtexception;

     label12:
        $r21 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock>;

        virtualinvoke $r21.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r20;

        catch java.lang.Throwable from label03 to label07 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label02 to label08 with label11;
        catch java.lang.Throwable from label09 to label12 with label11;
    }

    public void add(int, java.lang.Object)
    {
        java.lang.IndexOutOfBoundsException $r4;
        java.lang.IllegalStateException $r28;
        java.lang.NullPointerException $r29;
        java.util.concurrent.atomic.AtomicInteger $r9, $r13, $r14, $r15;
        org.eclipse.jetty.util.BlockingArrayQueue r1;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r10, $r11;
        java.lang.Throwable $r30, $r32;
        java.lang.Object[] $r16, $r17, $r18, $r20, $r21, $r22, $r24, $r25, $r26, $r27;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25;
        java.lang.String $r12;
        java.util.concurrent.locks.ReentrantLock $r2, $r3, $r19, $r31, $r33, $r34;
        java.lang.Object r0, $r23;

        r1 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Object;

        if r0 != null goto label01;

        $r29 = new java.lang.NullPointerException;

        specialinvoke $r29.<java.lang.NullPointerException: void <init>()>();

        throw $r29;

     label01:
        $r2 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label02:
        $r3 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label03:
        if i0 < 0 goto label04;

        $r13 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        $i1 = virtualinvoke $r13.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if i0 <= $i1 goto label05;

     label04:
        $r4 = new java.lang.IndexOutOfBoundsException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!(0<");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<=");

        $r9 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r12);

        throw $r4;

     label05:
        $r14 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        $i2 = virtualinvoke $r14.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if i0 != $i2 goto label06;

        virtualinvoke r1.<org.eclipse.jetty.util.BlockingArrayQueue: boolean add(java.lang.Object)>(r0);

        goto label11;

     label06:
        $i4 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _tail>;

        $i3 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _head>;

        if $i4 != $i3 goto label07;

        $z0 = specialinvoke r1.<org.eclipse.jetty.util.BlockingArrayQueue: boolean grow()>();

        if $z0 != 0 goto label07;

        $r28 = new java.lang.IllegalStateException;

        specialinvoke $r28.<java.lang.IllegalStateException: void <init>(java.lang.String)>("full");

        throw $r28;

     label07:
        $i5 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _head>;

        $i24 = $i5 + i0;

        i25 = $i24;

        $i6 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity>;

        if $i24 < $i6 goto label08;

        $i23 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity>;

        i25 = $i24 - $i23;

     label08:
        $r15 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        virtualinvoke $r15.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $i7 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _tail>;

        $i9 = $i7 + 1;

        $i8 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity>;

        $i10 = $i9 % $i8;

        r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _tail> = $i10;

        $i11 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _tail>;

        if i25 >= $i11 goto label09;

        $r26 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $r25 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $i22 = i25 + 1;

        $i20 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _tail>;

        $i21 = $i20 - i25;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r26, i25, $r25, $i22, $i21);

        $r27 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $r27[i25] = r0;

        goto label11;

     label09:
        $i12 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _tail>;

        if $i12 <= 0 goto label10;

        $r21 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $r20 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $i17 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _tail>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r21, 0, $r20, 1, $i17);

        $r24 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $r22 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $i18 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity>;

        $i19 = $i18 - 1;

        $r23 = $r22[$i19];

        $r24[0] = $r23;

     label10:
        $r17 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $r16 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $i16 = i25 + 1;

        $i13 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity>;

        $i14 = $i13 - i25;

        $i15 = $i14 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r17, i25, $r16, $i16, $i15);

        $r18 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $r18[i25] = r0;

     label11:
        $r34 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r34.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label14;

     label12:
        $r32 := @caughtexception;

     label13:
        $r33 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r33.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r32;

     label14:
        $r19 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock>;

        virtualinvoke $r19.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label17;

     label15:
        $r30 := @caughtexception;

     label16:
        $r31 = r1.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock>;

        virtualinvoke $r31.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r30;

     label17:
        return;

        catch java.lang.Throwable from label03 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label02 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    private boolean grow()
    {
        java.lang.Throwable $r8, $r10;
        java.lang.Object[] r3, $r4, $r5, $r7, $r12;
        java.util.concurrent.atomic.AtomicInteger $r6;
        int $i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12;
        org.eclipse.jetty.util.BlockingArrayQueue r0;
        java.util.concurrent.locks.ReentrantLock $r1, $r2, $r9, $r11, $r13, $r14;

        r0 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        $i0 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _growCapacity>;

        if $i0 > 0 goto label01;

        return 0;

     label01:
        $r1 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label02:
        $r2 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label03:
        i1 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _head>;

        i2 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _tail>;

        $i4 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity>;

        $i3 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _growCapacity>;

        $i5 = $i4 + $i3;

        r3 = newarray (java.lang.Object)[$i5];

        if i1 >= i2 goto label04;

        i11 = i2 - i1;

        $r7 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, i1, r3, 0, i11);

        goto label07;

     label04:
        if i1 > i2 goto label05;

        $r6 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.atomic.AtomicInteger _size>;

        $i9 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if $i9 <= 0 goto label06;

     label05:
        $i6 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity>;

        $i7 = $i6 + i2;

        i11 = $i7 - i1;

        $i8 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity>;

        $i10 = $i8 - i1;

        $r4 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, i1, r3, 0, $i10);

        $r5 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r3, $i10, i2);

        goto label07;

     label06:
        i11 = 0;

     label07:
        r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements> = r3;

        $r12 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.lang.Object[] _elements>;

        $i12 = lengthof $r12;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _capacity> = $i12;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _head> = 0;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: int _tail> = i11;

     label08:
        $r13 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r13.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

     label09:
        $r14 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock>;

        virtualinvoke $r14.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return 1;

     label10:
        $r10 := @caughtexception;

     label11:
        $r11 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r11.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r10;

     label12:
        $r8 := @caughtexception;

     label13:
        $r9 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock>;

        virtualinvoke $r9.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r8;

        catch java.lang.Throwable from label03 to label08 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label02 to label09 with label12;
        catch java.lang.Throwable from label10 to label13 with label12;
    }

    public int drainTo(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        org.eclipse.jetty.util.BlockingArrayQueue r1;
        java.util.Collection r2;

        r1 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public int drainTo(java.util.Collection, int)
    {
        java.lang.UnsupportedOperationException $r0;
        java.util.Collection r2;
        int i0;
        org.eclipse.jetty.util.BlockingArrayQueue r1;

        r1 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        r2 := @parameter0: java.util.Collection;

        i0 := @parameter1: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean offer(java.lang.Object, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        java.util.concurrent.TimeUnit r3;
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object r2;
        long l0;
        org.eclipse.jetty.util.BlockingArrayQueue r1;

        r1 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        r2 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        r3 := @parameter2: java.util.concurrent.TimeUnit;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void put(java.lang.Object) throws java.lang.InterruptedException
    {
        java.lang.IllegalStateException $r2;
        java.lang.Object r1;
        org.eclipse.jetty.util.BlockingArrayQueue r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.util.BlockingArrayQueue: boolean add(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("full");

        throw $r2;

     label1:
        return;
    }

    public int remainingCapacity()
    {
        java.lang.Throwable $r5, $r7;
        java.util.concurrent.locks.ReentrantLock $r1, $r2, $r3, $r4, $r6, $r8;
        int $i0, $i1, i2;
        org.eclipse.jetty.util.BlockingArrayQueue r0;

        r0 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        $r1 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock>;

        virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r2 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label2:
        $i0 = virtualinvoke r0.<org.eclipse.jetty.util.BlockingArrayQueue: int getCapacity()>();

        $i1 = virtualinvoke r0.<org.eclipse.jetty.util.BlockingArrayQueue: int size()>();

        i2 = $i0 - $i1;

     label3:
        $r3 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

     label4:
        $r4 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock>;

        virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return i2;

     label5:
        $r7 := @caughtexception;

     label6:
        $r8 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _headLock>;

        virtualinvoke $r8.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r7;

     label7:
        $r5 := @caughtexception;

     label8:
        $r6 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: java.util.concurrent.locks.ReentrantLock _tailLock>;

        virtualinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch java.lang.Throwable from label1 to label4 with label7;
        catch java.lang.Throwable from label5 to label8 with label7;
    }

    long sumOfSpace()
    {
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22;
        org.eclipse.jetty.util.BlockingArrayQueue r0;

        r0 := @this: org.eclipse.jetty.util.BlockingArrayQueue;

        $l0 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: long _space0>;

        $l1 = $l0 + 1L;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: long _space0> = $l1;

        $l2 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: long _space1>;

        $l3 = $l2 + 1L;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: long _space1> = $l3;

        $l6 = $l0 + $l2;

        $l4 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: long _space2>;

        $l5 = $l4 + 1L;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: long _space2> = $l5;

        $l9 = $l6 + $l4;

        $l7 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: long _space3>;

        $l8 = $l7 + 1L;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: long _space3> = $l8;

        $l12 = $l9 + $l7;

        $l10 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: long _space4>;

        $l11 = $l10 + 1L;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: long _space4> = $l11;

        $l15 = $l12 + $l10;

        $l13 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: long _space5>;

        $l14 = $l13 + 1L;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: long _space5> = $l14;

        $l18 = $l15 + $l13;

        $l16 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: long _space6>;

        $l17 = $l16 + 1L;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: long _space6> = $l17;

        $l21 = $l18 + $l16;

        $l19 = r0.<org.eclipse.jetty.util.BlockingArrayQueue: long _space7>;

        $l20 = $l19 + 1L;

        r0.<org.eclipse.jetty.util.BlockingArrayQueue: long _space7> = $l20;

        $l22 = $l21 + $l19;

        return $l22;
    }
}
