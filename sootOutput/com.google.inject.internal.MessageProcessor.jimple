final class com.google.inject.internal.MessageProcessor extends com.google.inject.internal.AbstractProcessor
{
    private static final java.util.logging.Logger logger;

    void <init>(com.google.inject.internal.Errors)
    {
        com.google.inject.internal.Errors r1;
        com.google.inject.internal.MessageProcessor r0;

        r0 := @this: com.google.inject.internal.MessageProcessor;

        r1 := @parameter0: com.google.inject.internal.Errors;

        specialinvoke r0.<com.google.inject.internal.AbstractProcessor: void <init>(com.google.inject.internal.Errors)>(r1);

        return;
    }

    public java.lang.Boolean visit(com.google.inject.spi.Message)
    {
        java.lang.Throwable $r1, $r5, $r13;
        java.util.logging.Logger $r8;
        com.google.inject.internal.MessageProcessor r2;
        java.util.logging.Level $r9;
        com.google.inject.internal.Errors $r3;
        com.google.inject.spi.Message r0;
        java.lang.Boolean $r4;
        java.lang.StringBuilder $r7, $r10, $r11;
        java.lang.String $r6, $r12;

        r2 := @this: com.google.inject.internal.MessageProcessor;

        r0 := @parameter0: com.google.inject.spi.Message;

        $r1 = virtualinvoke r0.<com.google.inject.spi.Message: java.lang.Throwable getCause()>();

        if $r1 == null goto label1;

        $r5 = virtualinvoke r0.<com.google.inject.spi.Message: java.lang.Throwable getCause()>();

        $r6 = staticinvoke <com.google.inject.internal.MessageProcessor: java.lang.String getRootMessage(java.lang.Throwable)>($r5);

        $r8 = <com.google.inject.internal.MessageProcessor: java.util.logging.Logger logger>;

        $r9 = <java.util.logging.Level: java.util.logging.Level INFO>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An exception was caught and reported. Message: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke r0.<com.google.inject.spi.Message: java.lang.Throwable getCause()>();

        virtualinvoke $r8.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r9, $r12, $r13);

     label1:
        $r3 = r2.<com.google.inject.internal.MessageProcessor: com.google.inject.internal.Errors errors>;

        virtualinvoke $r3.<com.google.inject.internal.Errors: com.google.inject.internal.Errors addMessage(com.google.inject.spi.Message)>(r0);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        return $r4;
    }

    public static java.lang.String getRootMessage(java.lang.Throwable)
    {
        java.lang.Throwable r0, $r1;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.Throwable;

        $r1 = virtualinvoke r0.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r1 != null goto label1;

        $r2 = virtualinvoke r0.<java.lang.Throwable: java.lang.String toString()>();

        goto label2;

     label1:
        $r2 = staticinvoke <com.google.inject.internal.MessageProcessor: java.lang.String getRootMessage(java.lang.Throwable)>($r1);

     label2:
        return $r2;
    }

    public volatile java.lang.Object visit(com.google.inject.spi.Message)
    {
        java.lang.Boolean $r2;
        com.google.inject.spi.Message r1;
        com.google.inject.internal.MessageProcessor r0;

        r0 := @this: com.google.inject.internal.MessageProcessor;

        r1 := @parameter0: com.google.inject.spi.Message;

        $r2 = virtualinvoke r0.<com.google.inject.internal.MessageProcessor: java.lang.Boolean visit(com.google.inject.spi.Message)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lcom/google/inject/Guice;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.google.inject.internal.MessageProcessor: java.util.logging.Logger logger> = $r2;

        return;
    }
}
