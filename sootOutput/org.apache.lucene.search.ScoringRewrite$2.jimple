final class org.apache.lucene.search.ScoringRewrite$2 extends org.apache.lucene.search.MultiTermQuery$RewriteMethod
{

    void <init>()
    {
        org.apache.lucene.search.ScoringRewrite$2 r0;

        r0 := @this: org.apache.lucene.search.ScoringRewrite$2;

        specialinvoke r0.<org.apache.lucene.search.MultiTermQuery$RewriteMethod: void <init>()>();

        return;
    }

    public org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader, org.apache.lucene.search.MultiTermQuery) throws java.io.IOException
    {
        org.apache.lucene.search.ScoringRewrite $r2;
        org.apache.lucene.search.Query $r3;
        org.apache.lucene.search.ScoringRewrite$2 r7;
        java.util.List $r5;
        org.apache.lucene.search.MultiTermQuery r1;
        org.apache.lucene.search.BooleanQuery r4;
        org.apache.lucene.search.ConstantScoreQuery $r6;
        float $f0;
        org.apache.lucene.index.IndexReader r0;
        boolean $z0;

        r7 := @this: org.apache.lucene.search.ScoringRewrite$2;

        r0 := @parameter0: org.apache.lucene.index.IndexReader;

        r1 := @parameter1: org.apache.lucene.search.MultiTermQuery;

        $r2 = <org.apache.lucene.search.ScoringRewrite: org.apache.lucene.search.ScoringRewrite SCORING_BOOLEAN_QUERY_REWRITE>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.search.ScoringRewrite: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader,org.apache.lucene.search.MultiTermQuery)>(r0, r1);

        r4 = (org.apache.lucene.search.BooleanQuery) $r3;

        $r5 = virtualinvoke r4.<org.apache.lucene.search.BooleanQuery: java.util.List clauses()>();

        $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return r4;

     label1:
        $r6 = new org.apache.lucene.search.ConstantScoreQuery;

        specialinvoke $r6.<org.apache.lucene.search.ConstantScoreQuery: void <init>(org.apache.lucene.search.Query)>(r4);

        $f0 = virtualinvoke r1.<org.apache.lucene.search.MultiTermQuery: float getBoost()>();

        virtualinvoke $r6.<org.apache.lucene.search.Query: void setBoost(float)>($f0);

        return $r6;
    }
}
