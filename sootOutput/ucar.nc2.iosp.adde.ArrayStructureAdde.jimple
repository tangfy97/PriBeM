public class ucar.nc2.iosp.adde.ArrayStructureAdde extends ucar.ma2.ArrayStructure
{
    private int MISSING_VALUE_INT;
    private double MISSING_VALUE_DOUBLE;
    protected int[][] data;
    protected double[] scaleFactor;

    public void <init>(ucar.ma2.StructureMembers, int[], int[][], double[])
    {
        ucar.nc2.iosp.adde.ArrayStructureAdde r0;
        int[][] r3;
        ucar.ma2.StructureMembers r1;
        int[] r2;
        double[] r4;
        int $i1;

        r0 := @this: ucar.nc2.iosp.adde.ArrayStructureAdde;

        r1 := @parameter0: ucar.ma2.StructureMembers;

        r2 := @parameter1: int[];

        r3 := @parameter2: int[][];

        r4 := @parameter3: double[];

        specialinvoke r0.<ucar.ma2.ArrayStructure: void <init>(ucar.ma2.StructureMembers,int[])>(r1, r2);

        $i1 = (int) -9999;

        r0.<ucar.nc2.iosp.adde.ArrayStructureAdde: int MISSING_VALUE_INT> = $i1;

        r0.<ucar.nc2.iosp.adde.ArrayStructureAdde: double MISSING_VALUE_DOUBLE> = #NaN;

        r0.<ucar.nc2.iosp.adde.ArrayStructureAdde: int[][] data> = r3;

        r0.<ucar.nc2.iosp.adde.ArrayStructureAdde: double[] scaleFactor> = r4;

        return;
    }

    public ucar.ma2.Array createView(ucar.ma2.Index)
    {
        ucar.nc2.iosp.adde.ArrayStructureAdde $r0, r1;
        int[][] $r4;
        ucar.ma2.StructureData[] $r5;
        double[] $r3;
        ucar.ma2.StructureMembers $r6;
        ucar.ma2.Index r2;
        int $i0;

        r1 := @this: ucar.nc2.iosp.adde.ArrayStructureAdde;

        r2 := @parameter0: ucar.ma2.Index;

        $r0 = new ucar.nc2.iosp.adde.ArrayStructureAdde;

        $r6 = r1.<ucar.nc2.iosp.adde.ArrayStructureAdde: ucar.ma2.StructureMembers members>;

        $i0 = r1.<ucar.nc2.iosp.adde.ArrayStructureAdde: int nelems>;

        $r5 = r1.<ucar.nc2.iosp.adde.ArrayStructureAdde: ucar.ma2.StructureData[] sdata>;

        $r4 = r1.<ucar.nc2.iosp.adde.ArrayStructureAdde: int[][] data>;

        $r3 = r1.<ucar.nc2.iosp.adde.ArrayStructureAdde: double[] scaleFactor>;

        specialinvoke $r0.<ucar.nc2.iosp.adde.ArrayStructureAdde: void <init>(ucar.ma2.StructureMembers,ucar.ma2.Index,int,ucar.ma2.StructureData[],int[][],double[])>($r6, r2, $i0, $r5, $r4, $r3);

        return $r0;
    }

    protected ucar.ma2.StructureData makeStructureData(ucar.ma2.ArrayStructure, int)
    {
        ucar.nc2.iosp.adde.ArrayStructureAdde r0;
        int i0;
        ucar.ma2.ArrayStructure r1;

        r0 := @this: ucar.nc2.iosp.adde.ArrayStructureAdde;

        r1 := @parameter0: ucar.ma2.ArrayStructure;

        i0 := @parameter1: int;

        return null;
    }

    void <init>(ucar.ma2.StructureMembers, ucar.ma2.Index, int, ucar.ma2.StructureData[], int[][], double[])
    {
        ucar.nc2.iosp.adde.ArrayStructureAdde r0;
        int[][] r4;
        ucar.ma2.StructureData[] r3;
        double[] r5;
        ucar.ma2.StructureMembers r1;
        ucar.ma2.Index r2;
        int i0, $i2;

        r0 := @this: ucar.nc2.iosp.adde.ArrayStructureAdde;

        r1 := @parameter0: ucar.ma2.StructureMembers;

        r2 := @parameter1: ucar.ma2.Index;

        i0 := @parameter2: int;

        r3 := @parameter3: ucar.ma2.StructureData[];

        r4 := @parameter4: int[][];

        r5 := @parameter5: double[];

        specialinvoke r0.<ucar.ma2.ArrayStructure: void <init>(ucar.ma2.StructureMembers,ucar.ma2.Index)>(r1, r2);

        $i2 = (int) -9999;

        r0.<ucar.nc2.iosp.adde.ArrayStructureAdde: int MISSING_VALUE_INT> = $i2;

        r0.<ucar.nc2.iosp.adde.ArrayStructureAdde: double MISSING_VALUE_DOUBLE> = #NaN;

        r0.<ucar.nc2.iosp.adde.ArrayStructureAdde: int nelems> = i0;

        r0.<ucar.nc2.iosp.adde.ArrayStructureAdde: ucar.ma2.StructureData[] sdata> = r3;

        r0.<ucar.nc2.iosp.adde.ArrayStructureAdde: int[][] data> = r4;

        r0.<ucar.nc2.iosp.adde.ArrayStructureAdde: double[] scaleFactor> = r5;

        return;
    }

    public java.lang.Object getStorage()
    {
        ucar.nc2.iosp.adde.ArrayStructureAdde r0;
        int[][] $r1;

        r0 := @this: ucar.nc2.iosp.adde.ArrayStructureAdde;

        $r1 = r0.<ucar.nc2.iosp.adde.ArrayStructureAdde: int[][] data>;

        return $r1;
    }

    public double getScalarDouble(int, ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.iosp.adde.ArrayStructureAdde r3;
        int[][] $r4;
        double[] $r6, $r7;
        ucar.ma2.StructureMembers$Member r0;
        byte $b3;
        int[] $r5;
        int $i0, i1, i2;
        java.lang.String $r14;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        ucar.ma2.DataType $r1, $r2, $r11;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r9, $r10, $r12, $r13;

        r3 := @this: ucar.nc2.iosp.adde.ArrayStructureAdde;

        i1 := @parameter0: int;

        r0 := @parameter1: ucar.ma2.StructureMembers$Member;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r2 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        if $r1 == $r2 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type is ");

        $r11 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", must be double");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r8;

     label1:
        $i0 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: int getDataParam()>();

        $r4 = r3.<ucar.nc2.iosp.adde.ArrayStructureAdde: int[][] data>;

        $r5 = $r4[$i0];

        i2 = $r5[i1];

        if i2 != -2139062144 goto label2;

        $d5 = r3.<ucar.nc2.iosp.adde.ArrayStructureAdde: double MISSING_VALUE_DOUBLE>;

        return $d5;

     label2:
        $r6 = r3.<ucar.nc2.iosp.adde.ArrayStructureAdde: double[] scaleFactor>;

        $d0 = $r6[$i0];

        $b3 = $d0 cmpl 0.0;

        if $b3 == 0 goto label3;

        $d3 = (double) i2;

        $r7 = r3.<ucar.nc2.iosp.adde.ArrayStructureAdde: double[] scaleFactor>;

        $d2 = $r7[$i0];

        $d4 = $d3 * $d2;

        return $d4;

     label3:
        $d1 = (double) i2;

        return $d1;
    }

    public double[] getJavaArrayDouble(int, ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.iosp.adde.ArrayStructureAdde r1;
        double[] r0;
        int i0;
        ucar.ma2.StructureMembers$Member r2;
        double $d0;

        r1 := @this: ucar.nc2.iosp.adde.ArrayStructureAdde;

        i0 := @parameter0: int;

        r2 := @parameter1: ucar.ma2.StructureMembers$Member;

        r0 = newarray (double)[1];

        $d0 = virtualinvoke r1.<ucar.nc2.iosp.adde.ArrayStructureAdde: double getScalarDouble(int,ucar.ma2.StructureMembers$Member)>(i0, r2);

        r0[0] = $d0;

        return r0;
    }

    public float getScalarFloat(int, ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.iosp.adde.ArrayStructureAdde r1;
        int i0;
        java.lang.IllegalArgumentException $r0;
        ucar.ma2.StructureMembers$Member r2;

        r1 := @this: ucar.nc2.iosp.adde.ArrayStructureAdde;

        i0 := @parameter0: int;

        r2 := @parameter1: ucar.ma2.StructureMembers$Member;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported type");

        throw $r0;
    }

    public float[] getJavaArrayFloat(int, ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.iosp.adde.ArrayStructureAdde r1;
        int i0;
        java.lang.IllegalArgumentException $r0;
        ucar.ma2.StructureMembers$Member r2;

        r1 := @this: ucar.nc2.iosp.adde.ArrayStructureAdde;

        i0 := @parameter0: int;

        r2 := @parameter1: ucar.ma2.StructureMembers$Member;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported type");

        throw $r0;
    }

    public byte getScalarByte(int, ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.iosp.adde.ArrayStructureAdde r1;
        int i0;
        java.lang.IllegalArgumentException $r0;
        ucar.ma2.StructureMembers$Member r2;

        r1 := @this: ucar.nc2.iosp.adde.ArrayStructureAdde;

        i0 := @parameter0: int;

        r2 := @parameter1: ucar.ma2.StructureMembers$Member;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported type");

        throw $r0;
    }

    public byte[] getJavaArrayByte(int, ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.iosp.adde.ArrayStructureAdde r1;
        int i0;
        java.lang.IllegalArgumentException $r0;
        ucar.ma2.StructureMembers$Member r2;

        r1 := @this: ucar.nc2.iosp.adde.ArrayStructureAdde;

        i0 := @parameter0: int;

        r2 := @parameter1: ucar.ma2.StructureMembers$Member;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported type");

        throw $r0;
    }

    public short getScalarShort(int, ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.iosp.adde.ArrayStructureAdde r1;
        int i0;
        java.lang.IllegalArgumentException $r0;
        ucar.ma2.StructureMembers$Member r2;

        r1 := @this: ucar.nc2.iosp.adde.ArrayStructureAdde;

        i0 := @parameter0: int;

        r2 := @parameter1: ucar.ma2.StructureMembers$Member;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported type");

        throw $r0;
    }

    public short[] getJavaArrayShort(int, ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.iosp.adde.ArrayStructureAdde r1;
        int i0;
        java.lang.IllegalArgumentException $r0;
        ucar.ma2.StructureMembers$Member r2;

        r1 := @this: ucar.nc2.iosp.adde.ArrayStructureAdde;

        i0 := @parameter0: int;

        r2 := @parameter1: ucar.ma2.StructureMembers$Member;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported type");

        throw $r0;
    }

    public int getScalarInt(int, ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.iosp.adde.ArrayStructureAdde r3;
        int[][] $r4;
        ucar.ma2.StructureMembers$Member r0;
        int[] $r5;
        int $i0, i1, i2, $i3;
        java.lang.String $r12;
        ucar.ma2.DataType $r1, $r2, $r9;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r10, $r11;

        r3 := @this: ucar.nc2.iosp.adde.ArrayStructureAdde;

        i1 := @parameter0: int;

        r0 := @parameter1: ucar.ma2.StructureMembers$Member;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r2 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        if $r1 == $r2 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type is ");

        $r9 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", must be int");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label1:
        $i0 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: int getDataParam()>();

        $r4 = r3.<ucar.nc2.iosp.adde.ArrayStructureAdde: int[][] data>;

        $r5 = $r4[$i0];

        i2 = $r5[i1];

        if i2 != -2139062144 goto label2;

        $i3 = r3.<ucar.nc2.iosp.adde.ArrayStructureAdde: int MISSING_VALUE_INT>;

        return $i3;

     label2:
        return i2;
    }

    public int[] getJavaArrayInt(int, ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.iosp.adde.ArrayStructureAdde r1;
        int[] r0;
        int i0, $i1;
        ucar.ma2.StructureMembers$Member r2;

        r1 := @this: ucar.nc2.iosp.adde.ArrayStructureAdde;

        i0 := @parameter0: int;

        r2 := @parameter1: ucar.ma2.StructureMembers$Member;

        r0 = newarray (int)[1];

        $i1 = virtualinvoke r1.<ucar.nc2.iosp.adde.ArrayStructureAdde: int getScalarInt(int,ucar.ma2.StructureMembers$Member)>(i0, r2);

        r0[0] = $i1;

        return r0;
    }

    public long getScalarLong(int, ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.iosp.adde.ArrayStructureAdde r1;
        int i0;
        java.lang.IllegalArgumentException $r0;
        ucar.ma2.StructureMembers$Member r2;

        r1 := @this: ucar.nc2.iosp.adde.ArrayStructureAdde;

        i0 := @parameter0: int;

        r2 := @parameter1: ucar.ma2.StructureMembers$Member;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported type");

        throw $r0;
    }

    public long[] getJavaArrayLong(int, ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.iosp.adde.ArrayStructureAdde r1;
        int i0;
        java.lang.IllegalArgumentException $r0;
        ucar.ma2.StructureMembers$Member r2;

        r1 := @this: ucar.nc2.iosp.adde.ArrayStructureAdde;

        i0 := @parameter0: int;

        r2 := @parameter1: ucar.ma2.StructureMembers$Member;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported type");

        throw $r0;
    }

    public char getScalarChar(int, ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.iosp.adde.ArrayStructureAdde r1;
        int i0;
        java.lang.IllegalArgumentException $r0;
        ucar.ma2.StructureMembers$Member r2;

        r1 := @this: ucar.nc2.iosp.adde.ArrayStructureAdde;

        i0 := @parameter0: int;

        r2 := @parameter1: ucar.ma2.StructureMembers$Member;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported type");

        throw $r0;
    }

    public char[] getJavaArrayChar(int, ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.iosp.adde.ArrayStructureAdde r1;
        int i0;
        java.lang.IllegalArgumentException $r0;
        ucar.ma2.StructureMembers$Member r2;

        r1 := @this: ucar.nc2.iosp.adde.ArrayStructureAdde;

        i0 := @parameter0: int;

        r2 := @parameter1: ucar.ma2.StructureMembers$Member;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported type");

        throw $r0;
    }

    public java.lang.String getScalarString(int, ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.iosp.adde.ArrayStructureAdde r3;
        int[][] $r4;
        ucar.ma2.StructureMembers$Member r0;
        int[] $r5;
        int $i0, i1, $i2;
        java.lang.String $r6, $r15;
        ucar.ma2.DataType $r1, $r2, $r7, $r8, $r12;
        java.lang.IllegalArgumentException $r9;
        java.lang.StringBuilder $r10, $r11, $r13, $r14;

        r3 := @this: ucar.nc2.iosp.adde.ArrayStructureAdde;

        i1 := @parameter0: int;

        r0 := @parameter1: ucar.ma2.StructureMembers$Member;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r2 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r1 == $r2 goto label1;

        $r7 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r8 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if $r7 != $r8 goto label2;

     label1:
        $i0 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: int getDataParam()>();

        $r4 = r3.<ucar.nc2.iosp.adde.ArrayStructureAdde: int[][] data>;

        $r5 = $r4[$i0];

        $i2 = $r5[i1];

        $r6 = staticinvoke <edu.wisc.ssec.mcidas.McIDASUtil: java.lang.String intBitsToString(int)>($i2);

        return $r6;

     label2:
        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type is ");

        $r12 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", must be String or char");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r9;
    }

    public java.lang.String[] getJavaArrayString(int, ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.iosp.adde.ArrayStructureAdde r1;
        int i0;
        java.lang.String[] $r0;
        ucar.ma2.StructureMembers$Member r2;

        r1 := @this: ucar.nc2.iosp.adde.ArrayStructureAdde;

        i0 := @parameter0: int;

        r2 := @parameter1: ucar.ma2.StructureMembers$Member;

        $r0 = newarray (java.lang.String)[0];

        return $r0;
    }

    public ucar.ma2.StructureData getScalarStructure(int, ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.iosp.adde.ArrayStructureAdde r0;
        int i0;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.nc2.iosp.adde.ArrayStructureAdde;

        i0 := @parameter0: int;

        r1 := @parameter1: ucar.ma2.StructureMembers$Member;

        return null;
    }

    public ucar.ma2.ArrayStructure getArrayStructure(int, ucar.ma2.StructureMembers$Member)
    {
        ucar.nc2.iosp.adde.ArrayStructureAdde r0;
        int i0;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.nc2.iosp.adde.ArrayStructureAdde;

        i0 := @parameter0: int;

        r1 := @parameter1: ucar.ma2.StructureMembers$Member;

        return null;
    }
}
