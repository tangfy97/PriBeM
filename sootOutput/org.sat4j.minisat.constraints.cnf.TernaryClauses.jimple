public class org.sat4j.minisat.constraints.cnf.TernaryClauses extends java.lang.Object implements org.sat4j.minisat.core.Constr, java.io.Serializable
{
    private static final long serialVersionUID;
    private final org.sat4j.specs.IVecInt stubs;
    private final org.sat4j.minisat.core.ILits voc;
    private final int phead;
    static final boolean $assertionsDisabled;

    public void <init>(org.sat4j.minisat.core.ILits, int)
    {
        int i0;
        org.sat4j.core.VecInt $r1;
        org.sat4j.minisat.constraints.cnf.TernaryClauses r0;
        org.sat4j.minisat.core.ILits r2;

        r0 := @this: org.sat4j.minisat.constraints.cnf.TernaryClauses;

        r2 := @parameter0: org.sat4j.minisat.core.ILits;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.sat4j.core.VecInt;

        specialinvoke $r1.<org.sat4j.core.VecInt: void <init>()>();

        r0.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.specs.IVecInt stubs> = $r1;

        r0.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.minisat.core.ILits voc> = r2;

        r0.<org.sat4j.minisat.constraints.cnf.TernaryClauses: int phead> = i0;

        return;
    }

    public void addTernaryClause(int, int)
    {
        int i0, i1;
        org.sat4j.specs.IVecInt $r1, $r2;
        org.sat4j.minisat.constraints.cnf.TernaryClauses r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.TernaryClauses;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.specs.IVecInt stubs>;

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i0);

        $r2 = r0.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.specs.IVecInt stubs>;

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i1);

        return;
    }

    public void remove()
    {
        org.sat4j.minisat.constraints.cnf.TernaryClauses r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.TernaryClauses;

        return;
    }

    public boolean propagate(org.sat4j.minisat.core.UnitPropagationListener, int)
    {
        org.sat4j.minisat.constraints.cnf.TernaryClauses r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.sat4j.minisat.core.UnitPropagationListener r8;
        org.sat4j.minisat.core.Propagatable $r16;
        java.lang.AssertionError $r14, $r15;
        int i0, $i1, $i2, $i3, $i4, i5, $i6;
        org.sat4j.minisat.core.ILits $r1, $r4, $r5, $r6, $r7, $r9, $r11;
        org.sat4j.specs.IVecInt $r2, $r3, $r13;

        r0 := @this: org.sat4j.minisat.constraints.cnf.TernaryClauses;

        r8 := @parameter0: org.sat4j.minisat.core.UnitPropagationListener;

        i0 := @parameter1: int;

        $z0 = <org.sat4j.minisat.constraints.cnf.TernaryClauses: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r11 = r0.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.minisat.core.ILits voc>;

        $z9 = interfaceinvoke $r11.<org.sat4j.minisat.core.ILits: boolean isSatisfied(int)>(i0);

        if $z9 != 0 goto label1;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label1:
        $z1 = <org.sat4j.minisat.constraints.cnf.TernaryClauses: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r9 = r0.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.minisat.core.ILits voc>;

        $i4 = r0.<org.sat4j.minisat.constraints.cnf.TernaryClauses: int phead>;

        $z8 = interfaceinvoke $r9.<org.sat4j.minisat.core.ILits: boolean isFalsified(int)>($i4);

        if $z8 != 0 goto label2;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label2:
        $r1 = r0.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.minisat.core.ILits voc>;

        $r16 = (org.sat4j.minisat.core.Propagatable) r0;

        interfaceinvoke $r1.<org.sat4j.minisat.core.ILits: void attach(int,org.sat4j.minisat.core.Propagatable)>(i0, $r16);

        i5 = 0;

     label3:
        $r13 = r0.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.specs.IVecInt stubs>;

        $i6 = interfaceinvoke $r13.<org.sat4j.specs.IVecInt: int size()>();

        if i5 >= $i6 goto label7;

        $r2 = r0.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.specs.IVecInt stubs>;

        $i1 = interfaceinvoke $r2.<org.sat4j.specs.IVecInt: int get(int)>(i5);

        $r3 = r0.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.specs.IVecInt stubs>;

        $i2 = i5 + 1;

        $i3 = interfaceinvoke $r3.<org.sat4j.specs.IVecInt: int get(int)>($i2);

        $r4 = r0.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.minisat.core.ILits voc>;

        $z2 = interfaceinvoke $r4.<org.sat4j.minisat.core.ILits: boolean isSatisfied(int)>($i1);

        if $z2 != 0 goto label6;

        $r5 = r0.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.minisat.core.ILits voc>;

        $z3 = interfaceinvoke $r5.<org.sat4j.minisat.core.ILits: boolean isSatisfied(int)>($i3);

        if $z3 == 0 goto label4;

        goto label6;

     label4:
        $r6 = r0.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.minisat.core.ILits voc>;

        $z4 = interfaceinvoke $r6.<org.sat4j.minisat.core.ILits: boolean isFalsified(int)>($i1);

        if $z4 == 0 goto label5;

        $z7 = interfaceinvoke r8.<org.sat4j.minisat.core.UnitPropagationListener: boolean enqueue(int,org.sat4j.minisat.core.Constr)>($i3, r0);

        if $z7 != 0 goto label5;

        return 0;

     label5:
        $r7 = r0.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.minisat.core.ILits voc>;

        $z5 = interfaceinvoke $r7.<org.sat4j.minisat.core.ILits: boolean isFalsified(int)>($i3);

        if $z5 == 0 goto label6;

        $z6 = interfaceinvoke r8.<org.sat4j.minisat.core.UnitPropagationListener: boolean enqueue(int,org.sat4j.minisat.core.Constr)>($i1, r0);

        if $z6 != 0 goto label6;

        return 0;

     label6:
        i5 = i5 + 2;

        goto label3;

     label7:
        return 1;
    }

    public boolean simplify()
    {
        org.sat4j.minisat.constraints.cnf.TernaryClauses r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.TernaryClauses;

        return 0;
    }

    public void undo(int)
    {
        int i0;
        org.sat4j.minisat.constraints.cnf.TernaryClauses r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.TernaryClauses;

        i0 := @parameter0: int;

        return;
    }

    public void calcReason(int, org.sat4j.specs.IVecInt)
    {
        org.sat4j.minisat.constraints.cnf.TernaryClauses r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.AssertionError $r20, $r21, $r22;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, $i26;
        org.sat4j.minisat.core.ILits $r4, $r7, $r10, $r13, $r15, $r18;
        org.sat4j.specs.IVecInt r0, $r2, $r3, $r5, $r6, $r9, $r12, $r14, $r16, $r17;

        r1 := @this: org.sat4j.minisat.constraints.cnf.TernaryClauses;

        i0 := @parameter0: int;

        r0 := @parameter1: org.sat4j.specs.IVecInt;

        $z0 = <org.sat4j.minisat.constraints.cnf.TernaryClauses: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $r18 = r1.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.minisat.core.ILits voc>;

        $i22 = r1.<org.sat4j.minisat.constraints.cnf.TernaryClauses: int phead>;

        $z8 = interfaceinvoke $r18.<org.sat4j.minisat.core.ILits: boolean isFalsified(int)>($i22);

        if $z8 != 0 goto label01;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label01:
        $i26 = (int) -1;

        if i0 != $i26 goto label05;

        i23 = 0;

     label02:
        $r13 = r1.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.minisat.core.ILits voc>;

        $r12 = r1.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.specs.IVecInt stubs>;

        $i12 = interfaceinvoke $r12.<org.sat4j.specs.IVecInt: int get(int)>(i23);

        $z6 = interfaceinvoke $r13.<org.sat4j.minisat.core.ILits: boolean isFalsified(int)>($i12);

        if $z6 == 0 goto label03;

        $r15 = r1.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.minisat.core.ILits voc>;

        $r14 = r1.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.specs.IVecInt stubs>;

        $i13 = i23 + 1;

        $i14 = interfaceinvoke $r14.<org.sat4j.specs.IVecInt: int get(int)>($i13);

        $z7 = interfaceinvoke $r15.<org.sat4j.minisat.core.ILits: boolean isFalsified(int)>($i14);

        if $z7 != 0 goto label04;

     label03:
        i23 = i23 + 2;

        goto label02;

     label04:
        $i15 = r1.<org.sat4j.minisat.constraints.cnf.TernaryClauses: int phead>;

        $i16 = $i15 ^ 1;

        interfaceinvoke r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i16);

        $r16 = r1.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.specs.IVecInt stubs>;

        $i17 = interfaceinvoke $r16.<org.sat4j.specs.IVecInt: int get(int)>(i23);

        $i18 = $i17 ^ 1;

        interfaceinvoke r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i18);

        $r17 = r1.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.specs.IVecInt stubs>;

        $i19 = i23 + 1;

        $i20 = interfaceinvoke $r17.<org.sat4j.specs.IVecInt: int get(int)>($i19);

        $i21 = $i20 ^ 1;

        interfaceinvoke r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i21);

        goto label10;

     label05:
        $i1 = r1.<org.sat4j.minisat.constraints.cnf.TernaryClauses: int phead>;

        $i2 = $i1 ^ 1;

        interfaceinvoke r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i2);

        i24 = 0;

     label06:
        $r2 = r1.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.specs.IVecInt stubs>;

        $i3 = interfaceinvoke $r2.<org.sat4j.specs.IVecInt: int get(int)>(i24);

        if $i3 != i0 goto label07;

        $r4 = r1.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.minisat.core.ILits voc>;

        $r3 = r1.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.specs.IVecInt stubs>;

        $i4 = i24 ^ 1;

        $i5 = interfaceinvoke $r3.<org.sat4j.specs.IVecInt: int get(int)>($i4);

        $z1 = interfaceinvoke $r4.<org.sat4j.minisat.core.ILits: boolean isFalsified(int)>($i5);

        if $z1 != 0 goto label08;

     label07:
        i24 = i24 + 1;

        goto label06;

     label08:
        $z2 = <org.sat4j.minisat.constraints.cnf.TernaryClauses: boolean $assertionsDisabled>;

        if $z2 != 0 goto label09;

        $r10 = r1.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.minisat.core.ILits voc>;

        $r9 = r1.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.specs.IVecInt stubs>;

        $i11 = interfaceinvoke $r9.<org.sat4j.specs.IVecInt: int get(int)>(i24);

        $z5 = interfaceinvoke $r10.<org.sat4j.minisat.core.ILits: boolean isFalsified(int)>($i11);

        if $z5 == 0 goto label09;

        $r21 = new java.lang.AssertionError;

        specialinvoke $r21.<java.lang.AssertionError: void <init>()>();

        throw $r21;

     label09:
        $r5 = r1.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.specs.IVecInt stubs>;

        $i6 = i24 ^ 1;

        $i7 = interfaceinvoke $r5.<org.sat4j.specs.IVecInt: int get(int)>($i6);

        $i8 = $i7 ^ 1;

        interfaceinvoke r0.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i8);

        $z3 = <org.sat4j.minisat.constraints.cnf.TernaryClauses: boolean $assertionsDisabled>;

        if $z3 != 0 goto label10;

        $r7 = r1.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.minisat.core.ILits voc>;

        $r6 = r1.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.specs.IVecInt stubs>;

        $i9 = i24 ^ 1;

        $i10 = interfaceinvoke $r6.<org.sat4j.specs.IVecInt: int get(int)>($i9);

        $z4 = interfaceinvoke $r7.<org.sat4j.minisat.core.ILits: boolean isFalsified(int)>($i10);

        if $z4 != 0 goto label10;

        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();

        throw $r22;

     label10:
        return;
    }

    public boolean learnt()
    {
        org.sat4j.minisat.constraints.cnf.TernaryClauses r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.TernaryClauses;

        return 0;
    }

    public void incActivity(double)
    {
        org.sat4j.minisat.constraints.cnf.TernaryClauses r0;
        double d0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.TernaryClauses;

        d0 := @parameter0: double;

        return;
    }

    public double getActivity()
    {
        org.sat4j.minisat.constraints.cnf.TernaryClauses r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.TernaryClauses;

        return 0.0;
    }

    public boolean locked()
    {
        org.sat4j.minisat.constraints.cnf.TernaryClauses r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.TernaryClauses;

        return 0;
    }

    public void setLearnt()
    {
        org.sat4j.minisat.constraints.cnf.TernaryClauses r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.TernaryClauses;

        return;
    }

    public void register()
    {
        org.sat4j.minisat.constraints.cnf.TernaryClauses r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.TernaryClauses;

        return;
    }

    public void rescaleBy(double)
    {
        org.sat4j.minisat.constraints.cnf.TernaryClauses r0;
        double d0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.TernaryClauses;

        d0 := @parameter0: double;

        return;
    }

    public int size()
    {
        org.sat4j.specs.IVecInt $r1;
        int $i0;
        org.sat4j.minisat.constraints.cnf.TernaryClauses r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.TernaryClauses;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.TernaryClauses: org.sat4j.specs.IVecInt stubs>;

        $i0 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: int size()>();

        return $i0;
    }

    public int get(int)
    {
        int i0;
        java.lang.UnsupportedOperationException $r0;
        org.sat4j.minisat.constraints.cnf.TernaryClauses r1;

        r1 := @this: org.sat4j.minisat.constraints.cnf.TernaryClauses;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void assertConstraint(org.sat4j.minisat.core.UnitPropagationListener)
    {
        org.sat4j.minisat.core.UnitPropagationListener r2;
        java.lang.UnsupportedOperationException $r0;
        org.sat4j.minisat.constraints.cnf.TernaryClauses r1;

        r1 := @this: org.sat4j.minisat.constraints.cnf.TernaryClauses;

        r2 := @parameter0: org.sat4j.minisat.core.UnitPropagationListener;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.sat4j.minisat.constraints.cnf.TernaryClauses: long serialVersionUID> = 1L;

        $r0 = class "Lorg/sat4j/minisat/constraints/cnf/TernaryClauses;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.sat4j.minisat.constraints.cnf.TernaryClauses: boolean $assertionsDisabled> = $z1;

        return;
    }
}
