class ucar.nc2.iosp.hdf5.H5header$FractalHeap extends java.lang.Object
{
    int version;
    short heapIdLen;
    byte flags;
    int maxSizeOfObjects;
    long nextHugeObjectId;
    long freeSpace;
    long managedSpace;
    long allocatedManagedSpace;
    long offsetDirectBlock;
    long nManagedObjects;
    long sizeHugeObjects;
    long nHugeObjects;
    long sizeTinyObjects;
    long nTinyObjects;
    long btreeAddress;
    long freeSpaceTrackerAddress;
    short maxHeapSize;
    short startingNumRows;
    short currentNumRows;
    long maxDirectBlockSize;
    short tableWidth;
    long startingBlockSize;
    long rootBlockAddress;
    ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock rootBlock;
    short ioFilterLen;
    long sizeFilteredRootDirectBlock;
    int ioFilterMask;
    byte[] ioFilterInfo;
    ucar.nc2.iosp.hdf5.H5header$FractalHeap$DoublingTable doublingTable;
    final ucar.nc2.iosp.hdf5.H5header this$0;

    void <init>(ucar.nc2.iosp.hdf5.H5header, java.lang.String, long) throws java.io.IOException
    {
        byte[] $r106, $r108, $r120;
        ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock r82, $r135;
        byte $b2, $b5, $b30, $b58;
        ucar.nc2.iosp.hdf5.H5header r1;
        java.lang.StringBuilder $r18, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r60, $r61, $r62, $r63, $r67, $r68, $r69, $r70, $r71, $r72, $r89, $r90, $r91, $r95, $r97, $r101, $r103, $r111, $r112, $r116, $r118, $r121, $r123, $r125, $r126, $r127, $r128, $r129, $r130, $r131, $r132;
        long l0, $l1, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l20, $l21, $l24, $l32, $l33, $l34, $l35, $l36, $l37, $l38, $l39, $l40, $l43, $l44, $l47, $l48, $l49, $l50, $l52, $l55, $l56, $l57, $l59, $l60, $l62, $l63, $l64, $l65, $l66, $l68, $l69, $l70, $l71, $l72, $l73, $l76;
        short $s3, $s4, $s19, $s22, $s23, $s25, $s26, $s28, $s29, $s41, $s42, $s45, $s46, $s51, $s53, $s54, $s75;
        ucar.nc2.iosp.hdf5.H5header$FractalHeap$DoublingTable $r78, $r84, $r133;
        int $i6, $i27, $i31, $i61, $i67, $i74, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89;
        java.io.PrintStream $r16, $r30, $r45, $r58, $r65, $r93, $r99, $r114;
        java.lang.Object $r81;
        ucar.nc2.iosp.hdf5.H5header$FractalHeap r0;
        java.lang.String r19, $r29, $r44, $r57, $r64, $r73, $r92, $r98, $r104, $r113, $r119, $r122;
        java.lang.IllegalStateException $r124;
        ucar.unidata.io.RandomAccessFile $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r74, $r96, $r102, $r105, $r107, $r117;
        boolean $z0, $z1, z2, $z3, $z4, $z5, $z6, $z7, $z9, $z10, $z11;
        java.util.List $r79, $r85;
        ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock $r77, $r86, $r134;
        ucar.nc2.iosp.hdf5.H5header$MemTracker $r87;
        java.util.Iterator $r80;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$FractalHeap;

        r1 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        r19 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: void order(int)>(1);

        $r3 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $l1 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$100(ucar.nc2.iosp.hdf5.H5header,long)>(r1, l0);

        virtualinvoke $r3.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l1);

        $z0 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1500()>();

        if $z0 == 0 goto label01;

        $r114 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r121 = new java.lang.StringBuilder;

        specialinvoke $r121.<java.lang.StringBuilder: void <init>()>();

        $r116 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-- readFractalHeap position=");

        $r117 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $l76 = virtualinvoke $r117.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $r118 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l76);

        $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r114.<java.io.PrintStream: void println(java.lang.String)>($r119);

     label01:
        $r120 = newarray (byte)[4];

        $r4 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        virtualinvoke $r4.<ucar.unidata.io.RandomAccessFile: int read(byte[])>($r120);

        $r122 = new java.lang.String;

        specialinvoke $r122.<java.lang.String: void <init>(byte[])>($r120);

        $z1 = virtualinvoke $r122.<java.lang.String: boolean equals(java.lang.Object)>("FRHP");

        if $z1 != 0 goto label02;

        $r124 = new java.lang.IllegalStateException;

        $r123 = new java.lang.StringBuilder;

        specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();

        $r111 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r122);

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should equal FRHP");

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r124.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r113);

        throw $r124;

     label02:
        $r6 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $b2 = virtualinvoke $r6.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        $i77 = (int) $b2;

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: int version> = $i77;

        $r7 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $s3 = virtualinvoke $r7.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short heapIdLen> = $s3;

        $r8 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $s4 = virtualinvoke $r8.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short ioFilterLen> = $s4;

        $r9 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $b5 = virtualinvoke $r9.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: byte flags> = $b5;

        $r10 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $i6 = virtualinvoke $r10.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: int maxSizeOfObjects> = $i6;

        $l7 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$3900(ucar.nc2.iosp.hdf5.H5header)>(r1);

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long nextHugeObjectId> = $l7;

        $l8 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$4000(ucar.nc2.iosp.hdf5.H5header)>(r1);

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long btreeAddress> = $l8;

        $l9 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$3900(ucar.nc2.iosp.hdf5.H5header)>(r1);

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long freeSpace> = $l9;

        $l10 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$4000(ucar.nc2.iosp.hdf5.H5header)>(r1);

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long freeSpaceTrackerAddress> = $l10;

        $l11 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$3900(ucar.nc2.iosp.hdf5.H5header)>(r1);

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long managedSpace> = $l11;

        $l12 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$3900(ucar.nc2.iosp.hdf5.H5header)>(r1);

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long allocatedManagedSpace> = $l12;

        $l13 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$3900(ucar.nc2.iosp.hdf5.H5header)>(r1);

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long offsetDirectBlock> = $l13;

        $l14 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$3900(ucar.nc2.iosp.hdf5.H5header)>(r1);

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long nManagedObjects> = $l14;

        $l15 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$3900(ucar.nc2.iosp.hdf5.H5header)>(r1);

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long sizeHugeObjects> = $l15;

        $l16 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$3900(ucar.nc2.iosp.hdf5.H5header)>(r1);

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long nHugeObjects> = $l16;

        $l17 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$3900(ucar.nc2.iosp.hdf5.H5header)>(r1);

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long sizeTinyObjects> = $l17;

        $l18 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$3900(ucar.nc2.iosp.hdf5.H5header)>(r1);

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long nTinyObjects> = $l18;

        $r11 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $s19 = virtualinvoke $r11.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short tableWidth> = $s19;

        $l20 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$3900(ucar.nc2.iosp.hdf5.H5header)>(r1);

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long startingBlockSize> = $l20;

        $l21 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$3900(ucar.nc2.iosp.hdf5.H5header)>(r1);

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long maxDirectBlockSize> = $l21;

        $r12 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $s22 = virtualinvoke $r12.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short maxHeapSize> = $s22;

        $r13 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $s23 = virtualinvoke $r13.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short startingNumRows> = $s23;

        $l24 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$4000(ucar.nc2.iosp.hdf5.H5header)>(r1);

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long rootBlockAddress> = $l24;

        $r14 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $s25 = virtualinvoke $r14.<ucar.unidata.io.RandomAccessFile: short readShort()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short currentNumRows> = $s25;

        $s26 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short ioFilterLen>;

        $i78 = (int) $s26;

        if $i78 <= 0 goto label03;

        $z11 = 1;

        $z10 = 1;

        goto label04;

     label03:
        $z11 = 0;

        $z10 = 0;

     label04:
        z2 = $z10;

        if $z11 == 0 goto label05;

        $l73 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$3900(ucar.nc2.iosp.hdf5.H5header)>(r1);

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long sizeFilteredRootDirectBlock> = $l73;

        $r105 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $i74 = virtualinvoke $r105.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: int ioFilterMask> = $i74;

        $s75 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short ioFilterLen>;

        $i79 = (int) $s75;

        $r106 = newarray (byte)[$i79];

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: byte[] ioFilterInfo> = $r106;

        $r107 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r108 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: byte[] ioFilterInfo>;

        virtualinvoke $r107.<ucar.unidata.io.RandomAccessFile: int read(byte[])>($r108);

     label05:
        $r15 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        virtualinvoke $r15.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        $z3 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1500()>();

        if $z3 != 0 goto label06;

        $z7 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$7000()>();

        if $z7 == 0 goto label07;

     label06:
        $r16 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r125 = new java.lang.StringBuilder;

        specialinvoke $r125.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FractalHeap for ");

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" version=");

        $i27 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: int version>;

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" heapIdLen=");

        $s28 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short heapIdLen>;

        $i80 = (int) $s28;

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i80);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ioFilterLen=");

        $s29 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short ioFilterLen>;

        $i81 = (int) $s29;

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i81);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" flags= ");

        $b30 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: byte flags>;

        $i82 = (int) $b30;

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i82);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r29);

        $r30 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r126 = new java.lang.StringBuilder;

        specialinvoke $r126.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" maxSizeOfObjects=");

        $i31 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: int maxSizeOfObjects>;

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i31);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nextHugeObjectId=");

        $l32 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long nextHugeObjectId>;

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l32);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" btreeAddress=");

        $l33 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long btreeAddress>;

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l33);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" managedSpace=");

        $l34 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long managedSpace>;

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l34);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" allocatedManagedSpace=");

        $l35 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long allocatedManagedSpace>;

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l35);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" freeSpace=");

        $l36 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long freeSpace>;

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l36);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r44);

        $r45 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r127 = new java.lang.StringBuilder;

        specialinvoke $r127.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nManagedObjects=");

        $l37 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long nManagedObjects>;

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l37);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nHugeObjects= ");

        $l38 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long nHugeObjects>;

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l38);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nTinyObjects=");

        $l39 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long nTinyObjects>;

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l39);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" maxDirectBlockSize=");

        $l40 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long maxDirectBlockSize>;

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l40);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" maxHeapSize= 2^");

        $s41 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short maxHeapSize>;

        $i83 = (int) $s41;

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i83);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r45.<java.io.PrintStream: void println(java.lang.String)>($r57);

        $r58 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r128 = new java.lang.StringBuilder;

        specialinvoke $r128.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" DoublingTable: tableWidth=");

        $s42 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short tableWidth>;

        $i84 = (int) $s42;

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i84);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" startingBlockSize=");

        $l43 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long startingBlockSize>;

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l43);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r58.<java.io.PrintStream: void println(java.lang.String)>($r64);

        $r65 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r129 = new java.lang.StringBuilder;

        specialinvoke $r129.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rootBlockAddress=");

        $l44 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long rootBlockAddress>;

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l44);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" startingNumRows=");

        $s45 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short startingNumRows>;

        $i85 = (int) $s45;

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i85);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" currentNumRows=");

        $s46 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short currentNumRows>;

        $i86 = (int) $s46;

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i86);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r65.<java.io.PrintStream: void println(java.lang.String)>($r73);

     label07:
        $z9 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1300()>();

        if $z9 == 0 goto label08;

        $r99 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r130 = new java.lang.StringBuilder;

        specialinvoke $r130.<java.lang.StringBuilder: void <init>()>();

        $r101 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    *now at position=");

        $r102 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $l72 = virtualinvoke $r102.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $r103 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l72);

        $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r99.<java.io.PrintStream: void println(java.lang.String)>($r104);

     label08:
        $r74 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $l47 = virtualinvoke $r74.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $z4 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1500()>();

        if $z4 == 0 goto label09;

        $r93 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r131 = new java.lang.StringBuilder;

        specialinvoke $r131.<java.lang.StringBuilder: void <init>()>();

        $r95 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-- end FractalHeap position=");

        $r96 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $l71 = virtualinvoke $r96.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $r97 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l71);

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r93.<java.io.PrintStream: void println(java.lang.String)>($r98);

     label09:
        staticinvoke <ucar.nc2.iosp.hdf5.H5header: byte access$5200(ucar.nc2.iosp.hdf5.H5header)>(r1);

        staticinvoke <ucar.nc2.iosp.hdf5.H5header: byte access$5100(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $z5 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1700()>();

        if $z5 == 0 goto label10;

        $r87 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.nc2.iosp.hdf5.H5header$MemTracker access$1800(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r132 = new java.lang.StringBuilder;

        specialinvoke $r132.<java.lang.StringBuilder: void <init>()>();

        $r89 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Group FractalHeap (");

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r87.<ucar.nc2.iosp.hdf5.H5header$MemTracker: void add(java.lang.String,long,long)>($r92, l0, $l47);

     label10:
        $r133 = new ucar.nc2.iosp.hdf5.H5header$FractalHeap$DoublingTable;

        $s51 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short tableWidth>;

        $l50 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long startingBlockSize>;

        $l49 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long allocatedManagedSpace>;

        $l48 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long maxDirectBlockSize>;

        $i87 = (int) $s51;

        specialinvoke $r133.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DoublingTable: void <init>(ucar.nc2.iosp.hdf5.H5header$FractalHeap,int,long,long,long)>(r0, $i87, $l50, $l49, $l48);

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header$FractalHeap$DoublingTable doublingTable> = $r133;

        $r134 = new ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock;

        $s53 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short currentNumRows>;

        $l52 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long startingBlockSize>;

        $i88 = (int) $s53;

        specialinvoke $r134.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: void <init>(ucar.nc2.iosp.hdf5.H5header$FractalHeap,int,long)>(r0, $i88, $l52);

        r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock rootBlock> = $r134;

        $s54 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short currentNumRows>;

        if $s54 != 0 goto label11;

        $r135 = new ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock;

        specialinvoke $r135.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: void <init>(ucar.nc2.iosp.hdf5.H5header$FractalHeap,ucar.nc2.iosp.hdf5.H5header$1)>(r0, null);

        $r84 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header$FractalHeap$DoublingTable doublingTable>;

        $r85 = $r84.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DoublingTable: java.util.List blockList>;

        interfaceinvoke $r85.<java.util.List: boolean add(java.lang.Object)>($r135);

        $l65 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long rootBlockAddress>;

        $l66 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$100(ucar.nc2.iosp.hdf5.H5header,long)>(r1, $l65);

        virtualinvoke r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: void readDirectBlock(long,long,ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock)>($l66, l0, $r135);

        $l69 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long startingBlockSize>;

        $i67 = $r135.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: int extraBytes>;

        $l68 = (long) $i67;

        $l70 = $l69 - $l68;

        $r135.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: long size> = $l70;

        $r86 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock rootBlock>;

        virtualinvoke $r86.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: void add(ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock)>($r135);

        goto label14;

     label11:
        $r77 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock rootBlock>;

        $l55 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long rootBlockAddress>;

        $l56 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$100(ucar.nc2.iosp.hdf5.H5header,long)>(r1, $l55);

        virtualinvoke r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: void readIndirectBlock(ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock,long,long,boolean)>($r77, $l56, l0, z2);

        $r78 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header$FractalHeap$DoublingTable doublingTable>;

        $r79 = $r78.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DoublingTable: java.util.List blockList>;

        $r80 = interfaceinvoke $r79.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z6 = interfaceinvoke $r80.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label14;

        $r81 = interfaceinvoke $r80.<java.util.Iterator: java.lang.Object next()>();

        r82 = (ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock) $r81;

        $l57 = r82.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: long address>;

        $b58 = $l57 cmp 0L;

        $i89 = (int) $b58;

        if $i89 <= 0 goto label13;

        $l59 = r82.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: long address>;

        $l60 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$100(ucar.nc2.iosp.hdf5.H5header,long)>(r1, $l59);

        virtualinvoke r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: void readDirectBlock(long,long,ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock)>($l60, l0, r82);

        $l63 = r82.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: long size>;

        $i61 = r82.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: int extraBytes>;

        $l62 = (long) $i61;

        $l64 = $l63 - $l62;

        r82.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: long size> = $l64;

     label13:
        goto label12;

     label14:
        return;
    }

    void showDetails(java.util.Formatter)
    {
        byte $b3;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r55, $r56, $r57, $r58;
        java.lang.Object[] $r13, $r29, $r43, $r53;
        ucar.nc2.iosp.hdf5.H5header$FractalHeap r3;
        long $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l15;
        short $s1, $s2, $s14, $s16, $s17;
        java.lang.String $r12, $r28, $r42, $r52;
        java.util.Formatter r0;
        ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock $r54;
        int $i0, $i4, $i18, $i19, $i20, $i21, $i22, $i23;

        r3 := @this: ucar.nc2.iosp.hdf5.H5header$FractalHeap;

        r0 := @parameter0: java.util.Formatter;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FractalHeap version=");

        $i0 = r3.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: int version>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" heapIdLen=");

        $s1 = r3.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short heapIdLen>;

        $i18 = (int) $s1;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ioFilterLen=");

        $s2 = r3.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short ioFilterLen>;

        $i19 = (int) $s2;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" flags= ");

        $b3 = r3.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: byte flags>;

        $i20 = (int) $b3;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>($r12, $r13);

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" maxSizeOfObjects=");

        $i4 = r3.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: int maxSizeOfObjects>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nextHugeObjectId=");

        $l5 = r3.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long nextHugeObjectId>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" btreeAddress=");

        $l6 = r3.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long btreeAddress>;

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" managedSpace=");

        $l7 = r3.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long managedSpace>;

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" allocatedManagedSpace=");

        $l8 = r3.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long allocatedManagedSpace>;

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" freeSpace=");

        $l9 = r3.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long freeSpace>;

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r29 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>($r28, $r29);

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nManagedObjects=");

        $l10 = r3.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long nManagedObjects>;

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nHugeObjects= ");

        $l11 = r3.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long nHugeObjects>;

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l11);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nTinyObjects=");

        $l12 = r3.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long nTinyObjects>;

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l12);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" maxDirectBlockSize=");

        $l13 = r3.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long maxDirectBlockSize>;

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l13);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" maxHeapSize= 2^");

        $s14 = r3.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short maxHeapSize>;

        $i21 = (int) $s14;

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        $r43 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>($r42, $r43);

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rootBlockAddress=");

        $l15 = r3.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long rootBlockAddress>;

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l15);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" startingNumRows=");

        $s16 = r3.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short startingNumRows>;

        $i22 = (int) $s16;

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" currentNumRows=");

        $s17 = r3.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short currentNumRows>;

        $i23 = (int) $s17;

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        $r53 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>($r52, $r53);

        $r54 = r3.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock rootBlock>;

        virtualinvoke $r54.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: void showDetails(java.util.Formatter)>(r0);

        return;
    }

    ucar.nc2.iosp.hdf5.H5header$FractalHeap$DHeapId getHeapId(byte[]) throws java.io.IOException
    {
        ucar.nc2.iosp.hdf5.H5header$FractalHeap r1;
        byte[] r2;
        ucar.nc2.iosp.hdf5.H5header$FractalHeap$DHeapId $r0;

        r1 := @this: ucar.nc2.iosp.hdf5.H5header$FractalHeap;

        r2 := @parameter0: byte[];

        $r0 = new ucar.nc2.iosp.hdf5.H5header$FractalHeap$DHeapId;

        specialinvoke $r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DHeapId: void <init>(ucar.nc2.iosp.hdf5.H5header$FractalHeap,byte[])>(r1, r2);

        return $r0;
    }

    void readIndirectBlock(ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock, long, long, boolean) throws java.io.IOException
    {
        byte[] r3;
        ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock $r67;
        byte $b1, $b4, $b25;
        ucar.nc2.iosp.hdf5.H5header $r1, $r4, $r7, $r9, $r10, $r11, $r22, $r23, $r32, $r33, $r41, $r42, $r44, $r56;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r26, $r27, $r28, $r29, $r36, $r37, $r38, $r39, $r47, $r48, $r53, $r54, $r62, $r65, $r66, $r68, $r70;
        ucar.nc2.iosp.hdf5.H5header$FractalHeap r0;
        long l0, $l2, l3, $l8, $l11, $l12, $l13, $l14, $l17, l18;
        short $s5, $s6;
        java.lang.String $r18, $r30, $r40, $r49, $r55, $r61;
        java.lang.IllegalStateException $r63, $r64;
        ucar.unidata.io.RandomAccessFile $r2, $r5, $r8, $r43, $r57;
        boolean $z0, $z1, $z2, z3, $z4, $z5, $z6, $z7, $z8;
        java.util.List $r60;
        ucar.nc2.iosp.hdf5.H5header$FractalHeap$DoublingTable $r20, $r58, $r59;
        ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock r19, $r69;
        int $i7, $i9, $i10, $i15, i16, i19, $i20, i21, $i22, i23, i24, $i26, $i27, $i28, $i30, $i31;
        java.io.PrintStream $r12, $r24, $r34, $r45;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$FractalHeap;

        r19 := @parameter0: ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock;

        l0 := @parameter1: long;

        l3 := @parameter2: long;

        z3 := @parameter3: boolean;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r2 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r1);

        virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: void seek(long)>(l0);

        r3 = newarray (byte)[4];

        $r4 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r5 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r4);

        virtualinvoke $r5.<ucar.unidata.io.RandomAccessFile: int read(byte[])>(r3);

        $r61 = new java.lang.String;

        specialinvoke $r61.<java.lang.String: void <init>(byte[])>(r3);

        $z0 = virtualinvoke $r61.<java.lang.String: boolean equals(java.lang.Object)>("FHIB");

        if $z0 != 0 goto label01;

        $r63 = new java.lang.IllegalStateException;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should equal FHIB");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r63.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r55);

        throw $r63;

     label01:
        $r7 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r8 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r7);

        $b1 = virtualinvoke $r8.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        $r9 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header this$0>;

        $l2 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$4000(ucar.nc2.iosp.hdf5.H5header)>($r9);

        $b4 = l3 cmp $l2;

        if $b4 == 0 goto label02;

        $r64 = new java.lang.IllegalStateException;

        specialinvoke $r64.<java.lang.IllegalStateException: void <init>()>();

        throw $r64;

     label02:
        $s5 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short maxHeapSize>;

        $i26 = (int) $s5;

        i16 = $i26 / 8;

        $s6 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short maxHeapSize>;

        $i27 = (int) $s6;

        $i7 = $i27 % 8;

        if $i7 == 0 goto label03;

        i16 = i16 + 1;

     label03:
        $r10 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header this$0>;

        $l8 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$5700(ucar.nc2.iosp.hdf5.H5header,int)>($r10, i16);

        $z1 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1500()>();

        if $z1 != 0 goto label04;

        $z7 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$7000()>();

        if $z7 == 0 goto label05;

     label04:
        $r11 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r12 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>($r11);

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -- FH IndirectBlock version=");

        $i28 = (int) $b1;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i28);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" blockOffset= ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r18);

     label05:
        $r56 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r57 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r56);

        $l17 = virtualinvoke $r57.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $z8 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1300()>();

        if $z8 == 0 goto label06;

        $r44 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r45 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>($r44);

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    *now at position=");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l17);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r45.<java.io.PrintStream: void println(java.lang.String)>($r49);

     label06:
        l18 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: long startingBlockSize>;

        i19 = 0;

     label07:
        $i20 = r19.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: int directRows>;

        if i19 >= $i20 goto label14;

        if i19 <= 1 goto label08;

        l18 = l18 * 2L;

     label08:
        i21 = 0;

     label09:
        $r58 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header$FractalHeap$DoublingTable doublingTable>;

        $i22 = $r58.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DoublingTable: int tableWidth>;

        if i21 >= $i22 goto label13;

        $r67 = new ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock;

        specialinvoke $r67.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: void <init>(ucar.nc2.iosp.hdf5.H5header$FractalHeap,ucar.nc2.iosp.hdf5.H5header$1)>(r0, null);

        virtualinvoke r19.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: void add(ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock)>($r67);

        $r32 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header this$0>;

        $l12 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$4000(ucar.nc2.iosp.hdf5.H5header)>($r32);

        $r67.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: long address> = $l12;

        if z3 == 0 goto label10;

        $r41 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header this$0>;

        $l14 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$3900(ucar.nc2.iosp.hdf5.H5header)>($r41);

        $r67.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: long sizeFilteredDirectBlock> = $l14;

        $r42 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r43 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r42);

        $i15 = virtualinvoke $r43.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        $r67.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: int filterMask> = $i15;

     label10:
        $z5 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1500()>();

        if $z5 != 0 goto label11;

        $z6 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$7000()>();

        if $z6 == 0 goto label12;

     label11:
        $r33 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r34 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>($r33);

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  DirectChild ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i21);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" address= ");

        $l13 = $r67.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: long address>;

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l13);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r40);

     label12:
        $r67.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: long size> = l18;

        $r59 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header$FractalHeap$DoublingTable doublingTable>;

        $r60 = $r59.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DoublingTable: java.util.List blockList>;

        interfaceinvoke $r60.<java.util.List: boolean add(java.lang.Object)>($r67);

        i21 = i21 + 1;

        goto label09;

     label13:
        i19 = i19 + 1;

        goto label07;

     label14:
        i23 = 0;

     label15:
        $i9 = r19.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: int indirectRows>;

        if i23 >= $i9 goto label21;

        l18 = l18 * 2L;

        i24 = 0;

     label16:
        $r20 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header$FractalHeap$DoublingTable doublingTable>;

        $i10 = $r20.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DoublingTable: int tableWidth>;

        if i24 >= $i10 goto label20;

        $r69 = new ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock;

        $i30 = (int) -1;

        specialinvoke $r69.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: void <init>(ucar.nc2.iosp.hdf5.H5header$FractalHeap,int,long)>(r0, $i30, l18);

        virtualinvoke r19.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock: void add(ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock)>($r69);

        $r22 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header this$0>;

        $l11 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$4000(ucar.nc2.iosp.hdf5.H5header)>($r22);

        $z2 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1500()>();

        if $z2 != 0 goto label17;

        $z4 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$7000()>();

        if $z4 == 0 goto label18;

     label17:
        $r23 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r24 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>($r23);

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  InDirectChild ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" address= ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l11);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r30);

     label18:
        $b25 = $l11 cmp 0L;

        $i31 = (int) $b25;

        if $i31 < 0 goto label19;

        virtualinvoke r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: void readIndirectBlock(ucar.nc2.iosp.hdf5.H5header$FractalHeap$IndirectBlock,long,long,boolean)>($r69, $l11, l3, z3);

     label19:
        i24 = i24 + 1;

        goto label16;

     label20:
        i23 = i23 + 1;

        goto label15;

     label21:
        return;
    }

    void readDirectBlock(long, long, ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock) throws java.io.IOException
    {
        byte[] r3;
        java.lang.IllegalStateException $r29, $r30;
        ucar.unidata.io.RandomAccessFile $r2, $r5, $r8;
        ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock r10;
        byte $b3, $b12, $b13, $b19;
        boolean $z0, $z1, $z2, $z3;
        ucar.nc2.iosp.hdf5.H5header $r1, $r4, $r7, $r9, $r11, $r12, $r13;
        java.lang.StringBuilder $r16, $r17, $r18, $r19, $r24, $r25, $r28, $r31;
        ucar.nc2.iosp.hdf5.H5header$FractalHeap r0;
        long l0, $l1, l2, $l9, $l14, $l15;
        short $s6, $s7;
        int $i4, $i5, $i8, $i10, $i11, $i16, $i17, $i18, i20, $i21, $i22;
        java.lang.String $r20, $r26, $r27;
        java.io.PrintStream $r14;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$FractalHeap;

        l0 := @parameter0: long;

        l2 := @parameter1: long;

        r10 := @parameter2: ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r2 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r1);

        virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: void seek(long)>(l0);

        r3 = newarray (byte)[4];

        $r4 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r5 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r4);

        virtualinvoke $r5.<ucar.unidata.io.RandomAccessFile: int read(byte[])>(r3);

        $r27 = new java.lang.String;

        specialinvoke $r27.<java.lang.String: void <init>(byte[])>(r3);

        $z0 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>("FHDB");

        if $z0 != 0 goto label1;

        $r29 = new java.lang.IllegalStateException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should equal FHDB");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r26);

        throw $r29;

     label1:
        $r7 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r8 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r7);

        virtualinvoke $r8.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        $r9 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header this$0>;

        $l1 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$4000(ucar.nc2.iosp.hdf5.H5header)>($r9);

        $b3 = l2 cmp $l1;

        if $b3 == 0 goto label2;

        $r30 = new java.lang.IllegalStateException;

        specialinvoke $r30.<java.lang.IllegalStateException: void <init>()>();

        throw $r30;

     label2:
        r10.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: int extraBytes> = 5;

        $i4 = r10.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: int extraBytes>;

        $r11 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header this$0>;

        $z1 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$5500(ucar.nc2.iosp.hdf5.H5header)>($r11);

        if $z1 == 0 goto label3;

        $b19 = 8;

        goto label4;

     label3:
        $b19 = 4;

     label4:
        $i5 = $i4 + $b19;

        r10.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: int extraBytes> = $i5;

        $s6 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short maxHeapSize>;

        $i21 = (int) $s6;

        $i18 = $i21 / 8;

        i20 = $i18;

        $s7 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: short maxHeapSize>;

        $i22 = (int) $s7;

        $i8 = $i22 % 8;

        if $i8 == 0 goto label5;

        i20 = $i18 + 1;

     label5:
        $r12 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header this$0>;

        $l9 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$5700(ucar.nc2.iosp.hdf5.H5header,int)>($r12, i20);

        r10.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: long offset> = $l9;

        r10.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: long dataPos> = l0;

        $i10 = r10.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: int extraBytes>;

        $i11 = $i10 + i20;

        r10.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: int extraBytes> = $i11;

        $b12 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: byte flags>;

        $b13 = $b12 & 2;

        if $b13 == 0 goto label6;

        $i16 = r10.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: int extraBytes>;

        $i17 = $i16 + 4;

        r10.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: int extraBytes> = $i17;

     label6:
        $z2 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1500()>();

        if $z2 != 0 goto label7;

        $z3 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$7000()>();

        if $z3 == 0 goto label8;

     label7:
        $r13 = r0.<ucar.nc2.iosp.hdf5.H5header$FractalHeap: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r14 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>($r13);

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  DirectBlock offset= ");

        $l14 = r10.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: long offset>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l14);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dataPos = ");

        $l15 = r10.<ucar.nc2.iosp.hdf5.H5header$FractalHeap$DataBlock: long dataPos>;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l15);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r20);

     label8:
        return;
    }
}
