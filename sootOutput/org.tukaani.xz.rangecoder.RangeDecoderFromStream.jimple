public final class org.tukaani.xz.rangecoder.RangeDecoderFromStream extends org.tukaani.xz.rangecoder.RangeDecoder
{
    private final java.io.DataInputStream inData;

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        java.io.DataInputStream $r3, $r4, $r6;
        org.tukaani.xz.CorruptedInputException $r7;
        org.tukaani.xz.rangecoder.RangeDecoderFromStream r0;
        int $i0, $i1, $i3;
        java.io.InputStream r2;

        r0 := @this: org.tukaani.xz.rangecoder.RangeDecoderFromStream;

        r2 := @parameter0: java.io.InputStream;

        specialinvoke r0.<org.tukaani.xz.rangecoder.RangeDecoder: void <init>()>();

        $r6 = new java.io.DataInputStream;

        specialinvoke $r6.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r2);

        r0.<org.tukaani.xz.rangecoder.RangeDecoderFromStream: java.io.DataInputStream inData> = $r6;

        $r3 = r0.<org.tukaani.xz.rangecoder.RangeDecoderFromStream: java.io.DataInputStream inData>;

        $i0 = virtualinvoke $r3.<java.io.DataInputStream: int readUnsignedByte()>();

        if $i0 == 0 goto label1;

        $r7 = new org.tukaani.xz.CorruptedInputException;

        specialinvoke $r7.<org.tukaani.xz.CorruptedInputException: void <init>()>();

        throw $r7;

     label1:
        $r4 = r0.<org.tukaani.xz.rangecoder.RangeDecoderFromStream: java.io.DataInputStream inData>;

        $i1 = virtualinvoke $r4.<java.io.DataInputStream: int readInt()>();

        r0.<org.tukaani.xz.rangecoder.RangeDecoderFromStream: int code> = $i1;

        $i3 = (int) -1;

        r0.<org.tukaani.xz.rangecoder.RangeDecoderFromStream: int range> = $i3;

        return;
    }

    public boolean isFinished()
    {
        int $i0;
        org.tukaani.xz.rangecoder.RangeDecoderFromStream r0;
        boolean $z0;

        r0 := @this: org.tukaani.xz.rangecoder.RangeDecoderFromStream;

        $i0 = r0.<org.tukaani.xz.rangecoder.RangeDecoderFromStream: int code>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void normalize() throws java.io.IOException
    {
        java.io.DataInputStream $r1;
        org.tukaani.xz.rangecoder.RangeDecoderFromStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.tukaani.xz.rangecoder.RangeDecoderFromStream;

        $i0 = r0.<org.tukaani.xz.rangecoder.RangeDecoderFromStream: int range>;

        $i1 = $i0 & -16777216;

        if $i1 != 0 goto label1;

        $i2 = r0.<org.tukaani.xz.rangecoder.RangeDecoderFromStream: int code>;

        $i3 = $i2 << 8;

        $r1 = r0.<org.tukaani.xz.rangecoder.RangeDecoderFromStream: java.io.DataInputStream inData>;

        $i4 = virtualinvoke $r1.<java.io.DataInputStream: int readUnsignedByte()>();

        $i5 = $i3 | $i4;

        r0.<org.tukaani.xz.rangecoder.RangeDecoderFromStream: int code> = $i5;

        $i6 = r0.<org.tukaani.xz.rangecoder.RangeDecoderFromStream: int range>;

        $i7 = $i6 << 8;

        r0.<org.tukaani.xz.rangecoder.RangeDecoderFromStream: int range> = $i7;

     label1:
        return;
    }
}
