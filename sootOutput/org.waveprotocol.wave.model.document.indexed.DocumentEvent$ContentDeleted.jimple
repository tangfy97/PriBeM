public final class org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted extends org.waveprotocol.wave.model.document.indexed.DocumentEvent
{
    public final int location;
    private final int size;
    private final java.util.List tokens;
    private final java.lang.Object root;
    static final boolean $assertionsDisabled;

    void <init>(int, int, java.util.List, java.lang.Object)
    {
        java.lang.AssertionError $r4;
        org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted r0;
        org.waveprotocol.wave.model.document.indexed.DocumentEvent$Type $r1;
        java.util.List r2;
        int i0, i1;
        java.lang.Object r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: java.lang.Object;

        $r1 = <org.waveprotocol.wave.model.document.indexed.DocumentEvent$Type: org.waveprotocol.wave.model.document.indexed.DocumentEvent$Type CONTENT_DELETED>;

        specialinvoke r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent: void <init>(org.waveprotocol.wave.model.document.indexed.DocumentEvent$Type,org.waveprotocol.wave.model.document.indexed.DocumentEvent$1)>($r1, null);

        r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted: int location> = i0;

        r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted: int size> = i1;

        $z0 = <org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r2 != null goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted: java.util.List tokens> = r2;

        r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted: java.lang.Object root> = r3;

        return;
    }

    public int getLocation()
    {
        int $i0;
        org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted r0;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted;

        $i0 = r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted: int location>;

        return $i0;
    }

    public java.lang.Object getRoot()
    {
        java.lang.Object $r1;
        org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted r0;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted;

        $r1 = r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted: java.lang.Object root>;

        return $r1;
    }

    public int getItemSize()
    {
        int $i0;
        org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted r0;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted;

        $i0 = r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted: int size>;

        return $i0;
    }

    public java.lang.Iterable getDeletedTokens()
    {
        java.util.List $r1;
        org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted r0;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted;

        $r1 = r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted: java.util.List tokens>;

        return $r1;
    }

    public int hashCode()
    {
        org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted r0;
        java.util.List $r1;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted;

        $i0 = r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted: int location>;

        i5 = 31 + $i0;

        $i2 = 31 * i5;

        $i1 = r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted: int size>;

        i6 = $i2 + $i1;

        $i3 = 31 * i6;

        $r1 = r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted: java.util.List tokens>;

        $i4 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        i7 = $i3 + $i4;

        return i7;
    }

    public boolean equals(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted r0, r2;
        java.util.List $r3, $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted) r1;

        $i1 = r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted: int location>;

        $i0 = r2.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted: int location>;

        if $i1 == $i0 goto label3;

        return 0;

     label3:
        $i3 = r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted: int size>;

        $i2 = r2.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted: int size>;

        if $i3 == $i2 goto label4;

        return 0;

     label4:
        $r4 = r0.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted: java.util.List tokens>;

        $r3 = r2.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted: java.util.List tokens>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted$Token r14;
        int $i0, $i1;
        java.lang.String $r12, $r17, r19;
        boolean $z0;
        java.util.Iterator $r8;
        org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted r2;
        java.util.List $r7;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r9, $r10, $r11, $r15, $r16, $r18;
        java.lang.Object $r13;

        r2 := @this: org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CD:@");

        $i0 = r2.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted: int location>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $i1 = r2.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted: int size>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        r19 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = r2.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted: java.util.List tokens>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r13 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r14 = (org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted$Token) $r13;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r17 = virtualinvoke r14.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted$Token: java.lang.String toString()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label2:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/model/document/indexed/DocumentEvent;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.model.document.indexed.DocumentEvent$ContentDeleted: boolean $assertionsDisabled> = $z1;

        return;
    }
}
