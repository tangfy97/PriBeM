public class org.codehaus.jackson.map.DeserializationConfig extends org.codehaus.jackson.map.MapperConfig$Impl
{
    protected org.codehaus.jackson.map.util.LinkedNode _problemHandlers;
    protected final org.codehaus.jackson.node.JsonNodeFactory _nodeFactory;
    protected boolean _sortPropertiesAlphabetically;

    public void <init>(org.codehaus.jackson.map.ClassIntrospector, org.codehaus.jackson.map.AnnotationIntrospector, org.codehaus.jackson.map.introspect.VisibilityChecker, org.codehaus.jackson.map.jsontype.SubtypeResolver, org.codehaus.jackson.map.PropertyNamingStrategy, org.codehaus.jackson.map.type.TypeFactory, org.codehaus.jackson.map.HandlerInstantiator)
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver r4;
        org.codehaus.jackson.map.HandlerInstantiator r7;
        org.codehaus.jackson.map.PropertyNamingStrategy r5;
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.AnnotationIntrospector r2;
        org.codehaus.jackson.map.type.TypeFactory r6;
        org.codehaus.jackson.node.JsonNodeFactory $r8;
        org.codehaus.jackson.map.introspect.VisibilityChecker r3;
        int $i0;
        org.codehaus.jackson.map.ClassIntrospector r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.ClassIntrospector;

        r2 := @parameter1: org.codehaus.jackson.map.AnnotationIntrospector;

        r3 := @parameter2: org.codehaus.jackson.map.introspect.VisibilityChecker;

        r4 := @parameter3: org.codehaus.jackson.map.jsontype.SubtypeResolver;

        r5 := @parameter4: org.codehaus.jackson.map.PropertyNamingStrategy;

        r6 := @parameter5: org.codehaus.jackson.map.type.TypeFactory;

        r7 := @parameter6: org.codehaus.jackson.map.HandlerInstantiator;

        $i0 = staticinvoke <org.codehaus.jackson.map.DeserializationConfig: int collectFeatureDefaults(java.lang.Class)>(class "Lorg/codehaus/jackson/map/DeserializationConfig$Feature;");

        specialinvoke r0.<org.codehaus.jackson.map.MapperConfig$Impl: void <init>(org.codehaus.jackson.map.ClassIntrospector,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.jsontype.SubtypeResolver,org.codehaus.jackson.map.PropertyNamingStrategy,org.codehaus.jackson.map.type.TypeFactory,org.codehaus.jackson.map.HandlerInstantiator,int)>(r1, r2, r3, r4, r5, r6, r7, $i0);

        $r8 = <org.codehaus.jackson.node.JsonNodeFactory: org.codehaus.jackson.node.JsonNodeFactory instance>;

        r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.node.JsonNodeFactory _nodeFactory> = $r8;

        return;
    }

    protected void <init>(org.codehaus.jackson.map.DeserializationConfig)
    {
        org.codehaus.jackson.map.DeserializationConfig r0, r1;
        org.codehaus.jackson.map.MapperConfig$Base $r2;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r2 = r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        specialinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r1, $r2);

        return;
    }

    private void <init>(org.codehaus.jackson.map.DeserializationConfig, java.util.HashMap, org.codehaus.jackson.map.jsontype.SubtypeResolver)
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver r4;
        java.util.HashMap r3;
        org.codehaus.jackson.map.DeserializationConfig r0, r1;
        org.codehaus.jackson.map.MapperConfig$Base $r2;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r3 := @parameter1: java.util.HashMap;

        r4 := @parameter2: org.codehaus.jackson.map.jsontype.SubtypeResolver;

        $r2 = r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        specialinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r1, $r2);

        r0.<org.codehaus.jackson.map.DeserializationConfig: java.util.HashMap _mixInAnnotations> = r3;

        r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver> = r4;

        return;
    }

    protected void <init>(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.MapperConfig$Base)
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r3;
        org.codehaus.jackson.map.util.LinkedNode $r4;
        org.codehaus.jackson.node.JsonNodeFactory $r5;
        org.codehaus.jackson.map.DeserializationConfig r0, r1;
        org.codehaus.jackson.map.MapperConfig$Base r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r2 := @parameter1: org.codehaus.jackson.map.MapperConfig$Base;

        $r3 = r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver>;

        specialinvoke r0.<org.codehaus.jackson.map.MapperConfig$Impl: void <init>(org.codehaus.jackson.map.MapperConfig$Impl,org.codehaus.jackson.map.MapperConfig$Base,org.codehaus.jackson.map.jsontype.SubtypeResolver)>(r1, r2, $r3);

        $r4 = r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.util.LinkedNode _problemHandlers>;

        r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.util.LinkedNode _problemHandlers> = $r4;

        $r5 = r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.node.JsonNodeFactory _nodeFactory>;

        r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.node.JsonNodeFactory _nodeFactory> = $r5;

        $z0 = r1.<org.codehaus.jackson.map.DeserializationConfig: boolean _sortPropertiesAlphabetically>;

        r0.<org.codehaus.jackson.map.DeserializationConfig: boolean _sortPropertiesAlphabetically> = $z0;

        return;
    }

    protected void <init>(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.node.JsonNodeFactory)
    {
        org.codehaus.jackson.map.util.LinkedNode $r2;
        org.codehaus.jackson.node.JsonNodeFactory r3;
        org.codehaus.jackson.map.DeserializationConfig r0, r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r3 := @parameter1: org.codehaus.jackson.node.JsonNodeFactory;

        specialinvoke r0.<org.codehaus.jackson.map.MapperConfig$Impl: void <init>(org.codehaus.jackson.map.MapperConfig$Impl)>(r1);

        $r2 = r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.util.LinkedNode _problemHandlers>;

        r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.util.LinkedNode _problemHandlers> = $r2;

        r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.node.JsonNodeFactory _nodeFactory> = r3;

        $z0 = r1.<org.codehaus.jackson.map.DeserializationConfig: boolean _sortPropertiesAlphabetically>;

        r0.<org.codehaus.jackson.map.DeserializationConfig: boolean _sortPropertiesAlphabetically> = $z0;

        return;
    }

    protected void <init>(org.codehaus.jackson.map.DeserializationConfig, int)
    {
        org.codehaus.jackson.map.util.LinkedNode $r2;
        org.codehaus.jackson.node.JsonNodeFactory $r3;
        int i0;
        org.codehaus.jackson.map.DeserializationConfig r0, r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        i0 := @parameter1: int;

        specialinvoke r0.<org.codehaus.jackson.map.MapperConfig$Impl: void <init>(org.codehaus.jackson.map.MapperConfig$Impl,int)>(r1, i0);

        $r2 = r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.util.LinkedNode _problemHandlers>;

        r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.util.LinkedNode _problemHandlers> = $r2;

        $r3 = r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.node.JsonNodeFactory _nodeFactory>;

        r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.node.JsonNodeFactory _nodeFactory> = $r3;

        $z0 = r1.<org.codehaus.jackson.map.DeserializationConfig: boolean _sortPropertiesAlphabetically>;

        r0.<org.codehaus.jackson.map.DeserializationConfig: boolean _sortPropertiesAlphabetically> = $z0;

        return;
    }

    protected org.codehaus.jackson.map.DeserializationConfig passSerializationFeatures(int)
    {
        int i0, $i1, $i2;
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.SerializationConfig$Feature $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        i0 := @parameter0: int;

        $r1 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature SORT_PROPERTIES_ALPHABETICALLY>;

        $i1 = virtualinvoke $r1.<org.codehaus.jackson.map.SerializationConfig$Feature: int getMask()>();

        $i2 = i0 & $i1;

        if $i2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<org.codehaus.jackson.map.DeserializationConfig: boolean _sortPropertiesAlphabetically> = $z0;

        return r0;
    }

    public org.codehaus.jackson.map.DeserializationConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector)
    {
        org.codehaus.jackson.map.ClassIntrospector r2;
        org.codehaus.jackson.map.DeserializationConfig $r0, r1;
        org.codehaus.jackson.map.MapperConfig$Base $r3, $r4;

        r1 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r2 := @parameter0: org.codehaus.jackson.map.ClassIntrospector;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig;

        $r3 = r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector)>(r2);

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r1, $r4);

        return $r0;
    }

    public org.codehaus.jackson.map.DeserializationConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    {
        org.codehaus.jackson.map.DeserializationConfig $r0, r1;
        org.codehaus.jackson.map.MapperConfig$Base $r3, $r4;
        org.codehaus.jackson.map.AnnotationIntrospector r2;

        r1 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r2 := @parameter0: org.codehaus.jackson.map.AnnotationIntrospector;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig;

        $r3 = r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>(r2);

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r1, $r4);

        return $r0;
    }

    public org.codehaus.jackson.map.DeserializationConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)
    {
        org.codehaus.jackson.map.introspect.VisibilityChecker r2;
        org.codehaus.jackson.map.DeserializationConfig $r0, r1;
        org.codehaus.jackson.map.MapperConfig$Base $r3, $r4;

        r1 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r2 := @parameter0: org.codehaus.jackson.map.introspect.VisibilityChecker;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig;

        $r3 = r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)>(r2);

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r1, $r4);

        return $r0;
    }

    public org.codehaus.jackson.map.DeserializationConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod, org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)
    {
        org.codehaus.jackson.annotate.JsonAutoDetect$Visibility r3;
        org.codehaus.jackson.map.DeserializationConfig $r0, r1;
        org.codehaus.jackson.map.MapperConfig$Base $r4, $r5;
        org.codehaus.jackson.annotate.JsonMethod r2;

        r1 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r2 := @parameter0: org.codehaus.jackson.annotate.JsonMethod;

        r3 := @parameter1: org.codehaus.jackson.annotate.JsonAutoDetect$Visibility;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig;

        $r4 = r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>(r2, r3);

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r1, $r5);

        return $r0;
    }

    public org.codehaus.jackson.map.DeserializationConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)
    {
        org.codehaus.jackson.map.jsontype.TypeResolverBuilder r2;
        org.codehaus.jackson.map.DeserializationConfig $r0, r1;
        org.codehaus.jackson.map.MapperConfig$Base $r3, $r4;

        r1 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r2 := @parameter0: org.codehaus.jackson.map.jsontype.TypeResolverBuilder;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig;

        $r3 = r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)>(r2);

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r1, $r4);

        return $r0;
    }

    public org.codehaus.jackson.map.DeserializationConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver)
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver r2;
        org.codehaus.jackson.map.DeserializationConfig $r0, r1;

        r1 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r2 := @parameter0: org.codehaus.jackson.map.jsontype.SubtypeResolver;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig;

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig)>(r1);

        $r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver> = r2;

        return $r0;
    }

    public org.codehaus.jackson.map.DeserializationConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy)
    {
        org.codehaus.jackson.map.PropertyNamingStrategy r2;
        org.codehaus.jackson.map.DeserializationConfig $r0, r1;
        org.codehaus.jackson.map.MapperConfig$Base $r3, $r4;

        r1 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r2 := @parameter0: org.codehaus.jackson.map.PropertyNamingStrategy;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig;

        $r3 = r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy)>(r2);

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r1, $r4);

        return $r0;
    }

    public org.codehaus.jackson.map.DeserializationConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory)
    {
        org.codehaus.jackson.map.type.TypeFactory r0, $r3;
        org.codehaus.jackson.map.DeserializationConfig r1, $r6;
        org.codehaus.jackson.map.MapperConfig$Base $r2, $r4, $r5;

        r1 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r0 := @parameter0: org.codehaus.jackson.map.type.TypeFactory;

        $r2 = r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.type.TypeFactory getTypeFactory()>();

        if r0 != $r3 goto label1;

        $r6 = r1;

        goto label2;

     label1:
        $r6 = new org.codehaus.jackson.map.DeserializationConfig;

        $r4 = r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withTypeFactory(org.codehaus.jackson.map.type.TypeFactory)>(r0);

        specialinvoke $r6.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r1, $r5);

     label2:
        return $r6;
    }

    public org.codehaus.jackson.map.DeserializationConfig withDateFormat(java.text.DateFormat)
    {
        org.codehaus.jackson.map.DeserializationConfig r1, $r6;
        org.codehaus.jackson.map.MapperConfig$Base $r2, $r4, $r5;
        java.text.DateFormat r0, $r3;

        r1 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r0 := @parameter0: java.text.DateFormat;

        $r2 = r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.MapperConfig$Base: java.text.DateFormat getDateFormat()>();

        if r0 != $r3 goto label1;

        $r6 = r1;

        goto label2;

     label1:
        $r6 = new org.codehaus.jackson.map.DeserializationConfig;

        $r4 = r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withDateFormat(java.text.DateFormat)>(r0);

        specialinvoke $r6.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r1, $r5);

     label2:
        return $r6;
    }

    public org.codehaus.jackson.map.DeserializationConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator)
    {
        org.codehaus.jackson.map.HandlerInstantiator r0, $r3;
        org.codehaus.jackson.map.DeserializationConfig r1, $r6;
        org.codehaus.jackson.map.MapperConfig$Base $r2, $r4, $r5;

        r1 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r0 := @parameter0: org.codehaus.jackson.map.HandlerInstantiator;

        $r2 = r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.HandlerInstantiator getHandlerInstantiator()>();

        if r0 != $r3 goto label1;

        $r6 = r1;

        goto label2;

     label1:
        $r6 = new org.codehaus.jackson.map.DeserializationConfig;

        $r4 = r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator)>(r0);

        specialinvoke $r6.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r1, $r5);

     label2:
        return $r6;
    }

    public org.codehaus.jackson.map.DeserializationConfig withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    {
        org.codehaus.jackson.map.DeserializationConfig $r0, r1;
        org.codehaus.jackson.map.MapperConfig$Base $r3, $r4;
        org.codehaus.jackson.map.AnnotationIntrospector r2;

        r1 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r2 := @parameter0: org.codehaus.jackson.map.AnnotationIntrospector;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig;

        $r3 = r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>(r2);

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r1, $r4);

        return $r0;
    }

    public org.codehaus.jackson.map.DeserializationConfig withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    {
        org.codehaus.jackson.map.DeserializationConfig $r0, r1;
        org.codehaus.jackson.map.MapperConfig$Base $r3, $r4;
        org.codehaus.jackson.map.AnnotationIntrospector r2;

        r1 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r2 := @parameter0: org.codehaus.jackson.map.AnnotationIntrospector;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig;

        $r3 = r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>(r2);

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.MapperConfig$Base)>(r1, $r4);

        return $r0;
    }

    public org.codehaus.jackson.map.DeserializationConfig withNodeFactory(org.codehaus.jackson.node.JsonNodeFactory)
    {
        org.codehaus.jackson.map.DeserializationConfig $r0, r1;
        org.codehaus.jackson.node.JsonNodeFactory r2;

        r1 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r2 := @parameter0: org.codehaus.jackson.node.JsonNodeFactory;

        $r0 = new org.codehaus.jackson.map.DeserializationConfig;

        specialinvoke $r0.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.node.JsonNodeFactory)>(r1, r2);

        return $r0;
    }

    public transient org.codehaus.jackson.map.DeserializationConfig 'with'(org.codehaus.jackson.map.DeserializationConfig$Feature[])
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature r3;
        org.codehaus.jackson.map.DeserializationConfig$Feature[] r1;
        org.codehaus.jackson.map.DeserializationConfig r0, $r2;
        int i0, $i1, i2, i3;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig$Feature[];

        i2 = r0.<org.codehaus.jackson.map.DeserializationConfig: int _featureFlags>;

        i0 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        r3 = r1[i3];

        $i1 = virtualinvoke r3.<org.codehaus.jackson.map.DeserializationConfig$Feature: int getMask()>();

        i2 = i2 | $i1;

        i3 = i3 + 1;

        goto label1;

     label2:
        $r2 = new org.codehaus.jackson.map.DeserializationConfig;

        specialinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,int)>(r0, i2);

        return $r2;
    }

    public transient org.codehaus.jackson.map.DeserializationConfig without(org.codehaus.jackson.map.DeserializationConfig$Feature[])
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature r3;
        org.codehaus.jackson.map.DeserializationConfig$Feature[] r1;
        org.codehaus.jackson.map.DeserializationConfig r0, $r4;
        int i0, $i1, $i2, i3, i4, $i6;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig$Feature[];

        i3 = r0.<org.codehaus.jackson.map.DeserializationConfig: int _featureFlags>;

        i0 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        r3 = r1[i4];

        $i1 = virtualinvoke r3.<org.codehaus.jackson.map.DeserializationConfig$Feature: int getMask()>();

        $i6 = (int) -1;

        $i2 = $i1 ^ $i6;

        i3 = i3 & $i2;

        i4 = i4 + 1;

        goto label1;

     label2:
        $r4 = new org.codehaus.jackson.map.DeserializationConfig;

        specialinvoke $r4.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,int)>(r0, i3);

        return $r4;
    }

    public void fromAnnotations(java.lang.Class)
    {
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.AnnotationIntrospector $r1;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r3;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r4, $r6;
        java.lang.Class r2;
        org.codehaus.jackson.map.MapperConfig$Base $r5, $r7;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r2 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r3 = staticinvoke <org.codehaus.jackson.map.introspect.AnnotatedClass: org.codehaus.jackson.map.introspect.AnnotatedClass construct(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>(r2, $r1, null);

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker()>();

        $r5 = r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base>;

        $r6 = virtualinvoke $r1.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.introspect.VisibilityChecker)>($r3, $r4);

        $r7 = virtualinvoke $r5.<org.codehaus.jackson.map.MapperConfig$Base: org.codehaus.jackson.map.MapperConfig$Base withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)>($r6);

        r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.MapperConfig$Base _base> = $r7;

        return;
    }

    public org.codehaus.jackson.map.DeserializationConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver)
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver r3;
        java.util.HashMap r1;
        org.codehaus.jackson.map.DeserializationConfig r0, $r2;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r3 := @parameter0: org.codehaus.jackson.map.jsontype.SubtypeResolver;

        r1 = r0.<org.codehaus.jackson.map.DeserializationConfig: java.util.HashMap _mixInAnnotations>;

        r0.<org.codehaus.jackson.map.DeserializationConfig: boolean _mixInAnnotationsShared> = 1;

        $r2 = new org.codehaus.jackson.map.DeserializationConfig;

        specialinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,java.util.HashMap,org.codehaus.jackson.map.jsontype.SubtypeResolver)>(r0, r1, r3);

        return $r2;
    }

    public org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature $r1;
        org.codehaus.jackson.map.introspect.NopAnnotationIntrospector $r2;
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.AnnotationIntrospector $r3;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature USE_ANNOTATIONS>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r1);

        if $z0 == 0 goto label1;

        $r3 = specialinvoke r0.<org.codehaus.jackson.map.MapperConfig$Impl: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        return $r3;

     label1:
        $r2 = <org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: org.codehaus.jackson.map.introspect.NopAnnotationIntrospector instance>;

        return $r2;
    }

    public org.codehaus.jackson.map.BeanDescription introspectClassAnnotations(org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.ClassIntrospector $r1;
        org.codehaus.jackson.type.JavaType r2;
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.BeanDescription $r3;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r2 := @parameter0: org.codehaus.jackson.type.JavaType;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.ClassIntrospector getClassIntrospector()>();

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.map.ClassIntrospector: org.codehaus.jackson.map.BeanDescription forClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>(r0, r2, r0);

        return $r3;
    }

    public org.codehaus.jackson.map.BeanDescription introspectDirectClassAnnotations(org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.ClassIntrospector $r1;
        org.codehaus.jackson.type.JavaType r2;
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.BeanDescription $r3;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r2 := @parameter0: org.codehaus.jackson.type.JavaType;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.ClassIntrospector getClassIntrospector()>();

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.map.ClassIntrospector: org.codehaus.jackson.map.BeanDescription forDirectClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>(r0, r2, r0);

        return $r3;
    }

    public boolean isAnnotationProcessingEnabled()
    {
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature USE_ANNOTATIONS>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r1);

        return $z0;
    }

    public boolean canOverrideAccessModifiers()
    {
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r1);

        return $z0;
    }

    public boolean shouldSortPropertiesAlphabetically()
    {
        org.codehaus.jackson.map.DeserializationConfig r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $z0 = r0.<org.codehaus.jackson.map.DeserializationConfig: boolean _sortPropertiesAlphabetically>;

        return $z0;
    }

    public org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker()
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature $r2, $r3, $r4;
        org.codehaus.jackson.annotate.JsonAutoDetect$Visibility $r5, $r6, $r7;
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r1, r8;
        boolean $z0, $z1, $z2;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 = specialinvoke r0.<org.codehaus.jackson.map.MapperConfig$Impl: org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker()>();

        r8 = $r1;

        $r2 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_SETTERS>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r2);

        if $z0 != 0 goto label1;

        $r7 = <org.codehaus.jackson.annotate.JsonAutoDetect$Visibility: org.codehaus.jackson.annotate.JsonAutoDetect$Visibility NONE>;

        r8 = interfaceinvoke $r1.<org.codehaus.jackson.map.introspect.VisibilityChecker: org.codehaus.jackson.map.introspect.VisibilityChecker withSetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>($r7);

     label1:
        $r3 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_CREATORS>;

        $z1 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r3);

        if $z1 != 0 goto label2;

        $r6 = <org.codehaus.jackson.annotate.JsonAutoDetect$Visibility: org.codehaus.jackson.annotate.JsonAutoDetect$Visibility NONE>;

        r8 = interfaceinvoke r8.<org.codehaus.jackson.map.introspect.VisibilityChecker: org.codehaus.jackson.map.introspect.VisibilityChecker withCreatorVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>($r6);

     label2:
        $r4 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_FIELDS>;

        $z2 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r4);

        if $z2 != 0 goto label3;

        $r5 = <org.codehaus.jackson.annotate.JsonAutoDetect$Visibility: org.codehaus.jackson.annotate.JsonAutoDetect$Visibility NONE>;

        r8 = interfaceinvoke r8.<org.codehaus.jackson.map.introspect.VisibilityChecker: org.codehaus.jackson.map.introspect.VisibilityChecker withFieldVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>($r5);

     label3:
        return r8;
    }

    public boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature r1;
        int $i0, $i1, $i2;
        org.codehaus.jackson.map.DeserializationConfig r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig$Feature;

        $i0 = r0.<org.codehaus.jackson.map.DeserializationConfig: int _featureFlags>;

        $i1 = virtualinvoke r1.<org.codehaus.jackson.map.DeserializationConfig$Feature: int getMask()>();

        $i2 = $i0 & $i1;

        if $i2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void enable(org.codehaus.jackson.map.DeserializationConfig$Feature)
    {
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.DeserializationConfig$Feature r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke r0.<org.codehaus.jackson.map.MapperConfig$Impl: void enable(org.codehaus.jackson.map.MapperConfig$ConfigFeature)>(r1);

        return;
    }

    public void disable(org.codehaus.jackson.map.DeserializationConfig$Feature)
    {
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.DeserializationConfig$Feature r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig$Feature;

        specialinvoke r0.<org.codehaus.jackson.map.MapperConfig$Impl: void disable(org.codehaus.jackson.map.MapperConfig$ConfigFeature)>(r1);

        return;
    }

    public void set(org.codehaus.jackson.map.DeserializationConfig$Feature, boolean)
    {
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.DeserializationConfig$Feature r1;
        boolean z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig$Feature;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.codehaus.jackson.map.MapperConfig$Impl: void set(org.codehaus.jackson.map.MapperConfig$ConfigFeature,boolean)>(r1, z0);

        return;
    }

    public org.codehaus.jackson.map.util.LinkedNode getProblemHandlers()
    {
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.util.LinkedNode $r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 = r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.util.LinkedNode _problemHandlers>;

        return $r1;
    }

    public void addHandler(org.codehaus.jackson.map.DeserializationProblemHandler)
    {
        org.codehaus.jackson.map.DeserializationProblemHandler r1;
        org.codehaus.jackson.map.util.LinkedNode $r2, $r3, $r4;
        org.codehaus.jackson.map.DeserializationConfig r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.DeserializationProblemHandler;

        $r2 = r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.util.LinkedNode _problemHandlers>;

        $z0 = staticinvoke <org.codehaus.jackson.map.util.LinkedNode: boolean contains(org.codehaus.jackson.map.util.LinkedNode,java.lang.Object)>($r2, r1);

        if $z0 != 0 goto label1;

        $r3 = new org.codehaus.jackson.map.util.LinkedNode;

        $r4 = r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.util.LinkedNode _problemHandlers>;

        specialinvoke $r3.<org.codehaus.jackson.map.util.LinkedNode: void <init>(java.lang.Object,org.codehaus.jackson.map.util.LinkedNode)>(r1, $r4);

        r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.util.LinkedNode _problemHandlers> = $r3;

     label1:
        return;
    }

    public void clearHandlers()
    {
        org.codehaus.jackson.map.DeserializationConfig r0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.util.LinkedNode _problemHandlers> = null;

        return;
    }

    public org.codehaus.jackson.Base64Variant getBase64Variant()
    {
        org.codehaus.jackson.Base64Variant $r0;
        org.codehaus.jackson.map.DeserializationConfig r1;

        r1 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r0 = staticinvoke <org.codehaus.jackson.Base64Variants: org.codehaus.jackson.Base64Variant getDefaultVariant()>();

        return $r0;
    }

    public final org.codehaus.jackson.node.JsonNodeFactory getNodeFactory()
    {
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.node.JsonNodeFactory $r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        $r1 = r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.node.JsonNodeFactory _nodeFactory>;

        return $r1;
    }

    public org.codehaus.jackson.map.BeanDescription introspect(org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.ClassIntrospector $r1;
        org.codehaus.jackson.type.JavaType r2;
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.BeanDescription $r3;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r2 := @parameter0: org.codehaus.jackson.type.JavaType;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.ClassIntrospector getClassIntrospector()>();

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.map.ClassIntrospector: org.codehaus.jackson.map.BeanDescription forDeserialization(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>(r0, r2, r0);

        return $r3;
    }

    public org.codehaus.jackson.map.BeanDescription introspectForCreation(org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.ClassIntrospector $r1;
        org.codehaus.jackson.type.JavaType r2;
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.BeanDescription $r3;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r2 := @parameter0: org.codehaus.jackson.type.JavaType;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.ClassIntrospector getClassIntrospector()>();

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.map.ClassIntrospector: org.codehaus.jackson.map.BeanDescription forCreation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>(r0, r2, r0);

        return $r3;
    }

    public org.codehaus.jackson.map.JsonDeserializer deserializerInstance(org.codehaus.jackson.map.introspect.Annotated, java.lang.Class)
    {
        org.codehaus.jackson.map.HandlerInstantiator $r1;
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.introspect.Annotated r5;
        java.lang.Class r2;
        java.lang.Object $r3;
        org.codehaus.jackson.map.JsonDeserializer $r4, $r6;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r5 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        r2 := @parameter1: java.lang.Class;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.HandlerInstantiator getHandlerInstantiator()>();

        if $r1 == null goto label1;

        $r6 = virtualinvoke $r1.<org.codehaus.jackson.map.HandlerInstantiator: org.codehaus.jackson.map.JsonDeserializer deserializerInstance(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class)>(r0, r5, r2);

        if $r6 == null goto label1;

        return $r6;

     label1:
        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: boolean canOverrideAccessModifiers()>();

        $r3 = staticinvoke <org.codehaus.jackson.map.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>(r2, $z0);

        $r4 = (org.codehaus.jackson.map.JsonDeserializer) $r3;

        return $r4;
    }

    public org.codehaus.jackson.map.KeyDeserializer keyDeserializerInstance(org.codehaus.jackson.map.introspect.Annotated, java.lang.Class)
    {
        org.codehaus.jackson.map.HandlerInstantiator $r1;
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.introspect.Annotated r5;
        org.codehaus.jackson.map.KeyDeserializer $r4, $r6;
        java.lang.Class r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r5 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        r2 := @parameter1: java.lang.Class;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.HandlerInstantiator getHandlerInstantiator()>();

        if $r1 == null goto label1;

        $r6 = virtualinvoke $r1.<org.codehaus.jackson.map.HandlerInstantiator: org.codehaus.jackson.map.KeyDeserializer keyDeserializerInstance(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class)>(r0, r5, r2);

        if $r6 == null goto label1;

        return $r6;

     label1:
        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: boolean canOverrideAccessModifiers()>();

        $r3 = staticinvoke <org.codehaus.jackson.map.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>(r2, $z0);

        $r4 = (org.codehaus.jackson.map.KeyDeserializer) $r3;

        return $r4;
    }

    public org.codehaus.jackson.map.deser.ValueInstantiator valueInstantiatorInstance(org.codehaus.jackson.map.introspect.Annotated, java.lang.Class)
    {
        org.codehaus.jackson.map.HandlerInstantiator $r1;
        org.codehaus.jackson.map.deser.ValueInstantiator $r4, $r6;
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.introspect.Annotated r5;
        java.lang.Class r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r5 := @parameter0: org.codehaus.jackson.map.introspect.Annotated;

        r2 := @parameter1: java.lang.Class;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.HandlerInstantiator getHandlerInstantiator()>();

        if $r1 == null goto label1;

        $r6 = virtualinvoke $r1.<org.codehaus.jackson.map.HandlerInstantiator: org.codehaus.jackson.map.deser.ValueInstantiator valueInstantiatorInstance(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class)>(r0, r5, r2);

        if $r6 == null goto label1;

        return $r6;

     label1:
        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: boolean canOverrideAccessModifiers()>();

        $r3 = staticinvoke <org.codehaus.jackson.map.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>(r2, $z0);

        $r4 = (org.codehaus.jackson.map.deser.ValueInstantiator) $r3;

        return $r4;
    }

    public volatile void set(org.codehaus.jackson.map.MapperConfig$ConfigFeature, boolean)
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature $r2;
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.MapperConfig$ConfigFeature r1;
        boolean z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.MapperConfig$ConfigFeature;

        z0 := @parameter1: boolean;

        $r2 = (org.codehaus.jackson.map.DeserializationConfig$Feature) r1;

        virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: void set(org.codehaus.jackson.map.DeserializationConfig$Feature,boolean)>($r2, z0);

        return;
    }

    public volatile void disable(org.codehaus.jackson.map.MapperConfig$ConfigFeature)
    {
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r2;
        org.codehaus.jackson.map.MapperConfig$ConfigFeature r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.MapperConfig$ConfigFeature;

        $r2 = (org.codehaus.jackson.map.DeserializationConfig$Feature) r1;

        virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: void disable(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r2);

        return;
    }

    public volatile void enable(org.codehaus.jackson.map.MapperConfig$ConfigFeature)
    {
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r2;
        org.codehaus.jackson.map.MapperConfig$ConfigFeature r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.MapperConfig$ConfigFeature;

        $r2 = (org.codehaus.jackson.map.DeserializationConfig$Feature) r1;

        virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: void enable(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r2);

        return;
    }

    public volatile boolean isEnabled(org.codehaus.jackson.map.MapperConfig$ConfigFeature)
    {
        org.codehaus.jackson.map.DeserializationConfig r0;
        org.codehaus.jackson.map.MapperConfig$ConfigFeature r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.MapperConfig$ConfigFeature;

        $z0 = specialinvoke r0.<org.codehaus.jackson.map.MapperConfig$Impl: boolean isEnabled(org.codehaus.jackson.map.MapperConfig$ConfigFeature)>(r1);

        return $z0;
    }

    public volatile org.codehaus.jackson.map.MapperConfig$Impl without(org.codehaus.jackson.map.MapperConfig$ConfigFeature[])
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature[] $r2;
        org.codehaus.jackson.map.MapperConfig$ConfigFeature[] r1;
        org.codehaus.jackson.map.DeserializationConfig r0, $r3;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.MapperConfig$ConfigFeature[];

        $r2 = (org.codehaus.jackson.map.DeserializationConfig$Feature[]) r1;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig without(org.codehaus.jackson.map.DeserializationConfig$Feature[])>($r2);

        return $r3;
    }

    public volatile org.codehaus.jackson.map.MapperConfig$Impl 'with'(org.codehaus.jackson.map.MapperConfig$ConfigFeature[])
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature[] $r2;
        org.codehaus.jackson.map.MapperConfig$ConfigFeature[] r1;
        org.codehaus.jackson.map.DeserializationConfig r0, $r3;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.MapperConfig$ConfigFeature[];

        $r2 = (org.codehaus.jackson.map.DeserializationConfig$Feature[]) r1;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig 'with'(org.codehaus.jackson.map.DeserializationConfig$Feature[])>($r2);

        return $r3;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    {
        org.codehaus.jackson.map.DeserializationConfig r0, $r2;
        org.codehaus.jackson.map.AnnotationIntrospector r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.AnnotationIntrospector;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    {
        org.codehaus.jackson.map.DeserializationConfig r0, $r2;
        org.codehaus.jackson.map.AnnotationIntrospector r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.AnnotationIntrospector;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator)
    {
        org.codehaus.jackson.map.DeserializationConfig r0, $r2;
        org.codehaus.jackson.map.HandlerInstantiator r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.HandlerInstantiator;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withDateFormat(java.text.DateFormat)
    {
        org.codehaus.jackson.map.DeserializationConfig r0, $r2;
        java.text.DateFormat r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: java.text.DateFormat;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withDateFormat(java.text.DateFormat)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory)
    {
        org.codehaus.jackson.map.type.TypeFactory r1;
        org.codehaus.jackson.map.DeserializationConfig r0, $r2;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.type.TypeFactory;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy)
    {
        org.codehaus.jackson.map.PropertyNamingStrategy r1;
        org.codehaus.jackson.map.DeserializationConfig r0, $r2;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.PropertyNamingStrategy;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver)
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver r1;
        org.codehaus.jackson.map.DeserializationConfig r0, $r2;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.jsontype.SubtypeResolver;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)
    {
        org.codehaus.jackson.map.DeserializationConfig r0, $r2;
        org.codehaus.jackson.map.jsontype.TypeResolverBuilder r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.jsontype.TypeResolverBuilder;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod, org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)
    {
        org.codehaus.jackson.annotate.JsonAutoDetect$Visibility r2;
        org.codehaus.jackson.map.DeserializationConfig r0, $r3;
        org.codehaus.jackson.annotate.JsonMethod r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.annotate.JsonMethod;

        r2 := @parameter1: org.codehaus.jackson.annotate.JsonAutoDetect$Visibility;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>(r1, r2);

        return $r3;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)
    {
        org.codehaus.jackson.map.DeserializationConfig r0, $r2;
        org.codehaus.jackson.map.introspect.VisibilityChecker r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.introspect.VisibilityChecker;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    {
        org.codehaus.jackson.map.DeserializationConfig r0, $r2;
        org.codehaus.jackson.map.AnnotationIntrospector r1;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.AnnotationIntrospector;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.map.MapperConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector)
    {
        org.codehaus.jackson.map.ClassIntrospector r1;
        org.codehaus.jackson.map.DeserializationConfig r0, $r2;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.ClassIntrospector;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector)>(r1);

        return $r2;
    }

    public volatile org.codehaus.jackson.map.MapperConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver)
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver r1;
        org.codehaus.jackson.map.DeserializationConfig r0, $r2;

        r0 := @this: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter0: org.codehaus.jackson.map.jsontype.SubtypeResolver;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver)>(r1);

        return $r2;
    }
}
