public final class org.sat4j.minisat.constraints.cnf.Lits extends java.lang.Object implements java.io.Serializable, org.sat4j.minisat.core.ILits
{
    private static final int DEFAULT_INIT_SIZE;
    private static final long serialVersionUID;
    private boolean[] pool;
    private int realnVars;
    private org.sat4j.specs.IVec[] watches;
    private int[] level;
    private org.sat4j.minisat.core.Constr[] reason;
    private int maxvarid;
    private org.sat4j.specs.IVec[] undos;
    private boolean[] falsified;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        int[] $r3;
        boolean[] $r1, $r6;
        org.sat4j.minisat.core.Constr[] $r4;
        org.sat4j.specs.IVec[] $r2, $r5;
        org.sat4j.minisat.constraints.cnf.Lits r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (boolean)[1];

        r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] pool> = $r1;

        r0.<org.sat4j.minisat.constraints.cnf.Lits: int realnVars> = 0;

        $r2 = newarray (org.sat4j.specs.IVec)[0];

        r0.<org.sat4j.minisat.constraints.cnf.Lits: org.sat4j.specs.IVec[] watches> = $r2;

        $r3 = newarray (int)[0];

        r0.<org.sat4j.minisat.constraints.cnf.Lits: int[] level> = $r3;

        $r4 = newarray (org.sat4j.minisat.core.Constr)[0];

        r0.<org.sat4j.minisat.constraints.cnf.Lits: org.sat4j.minisat.core.Constr[] reason> = $r4;

        r0.<org.sat4j.minisat.constraints.cnf.Lits: int maxvarid> = 0;

        $r5 = newarray (org.sat4j.specs.IVec)[0];

        r0.<org.sat4j.minisat.constraints.cnf.Lits: org.sat4j.specs.IVec[] undos> = $r5;

        $r6 = newarray (boolean)[0];

        r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] falsified> = $r6;

        virtualinvoke r0.<org.sat4j.minisat.constraints.cnf.Lits: void init(int)>(128);

        return;
    }

    public final void init(int)
    {
        int[] $r4, $r5, $r15;
        boolean $z0;
        org.sat4j.specs.IVec[] $r6, $r7, $r8, $r9, $r16, $r17;
        java.lang.AssertionError $r20;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean[] $r1, $r2, $r3, $r12, $r13, $r14, $r19;
        org.sat4j.minisat.core.Constr[] $r10, $r11, $r18;
        org.sat4j.minisat.constraints.cnf.Lits r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] pool>;

        $i1 = lengthof $r1;

        if i0 >= $i1 goto label1;

        return;

     label1:
        $z0 = <org.sat4j.minisat.constraints.cnf.Lits: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if i0 >= 0 goto label2;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label2:
        $i10 = i0 + 1;

        $r14 = newarray (boolean)[$i10];

        $r3 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] pool>;

        $r2 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] pool>;

        $i2 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r14, 0, $i2);

        r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] pool> = $r14;

        $r15 = newarray (int)[$i10];

        $r5 = r0.<org.sat4j.minisat.constraints.cnf.Lits: int[] level>;

        $r4 = r0.<org.sat4j.minisat.constraints.cnf.Lits: int[] level>;

        $i3 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r15, 0, $i3);

        r0.<org.sat4j.minisat.constraints.cnf.Lits: int[] level> = $r15;

        $i4 = 2 * $i10;

        $r16 = newarray (org.sat4j.specs.IVec)[$i4];

        $r7 = r0.<org.sat4j.minisat.constraints.cnf.Lits: org.sat4j.specs.IVec[] watches>;

        $r6 = r0.<org.sat4j.minisat.constraints.cnf.Lits: org.sat4j.specs.IVec[] watches>;

        $i5 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, $r16, 0, $i5);

        r0.<org.sat4j.minisat.constraints.cnf.Lits: org.sat4j.specs.IVec[] watches> = $r16;

        $r17 = newarray (org.sat4j.specs.IVec)[$i10];

        $r9 = r0.<org.sat4j.minisat.constraints.cnf.Lits: org.sat4j.specs.IVec[] undos>;

        $r8 = r0.<org.sat4j.minisat.constraints.cnf.Lits: org.sat4j.specs.IVec[] undos>;

        $i6 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, $r17, 0, $i6);

        r0.<org.sat4j.minisat.constraints.cnf.Lits: org.sat4j.specs.IVec[] undos> = $r17;

        $r18 = newarray (org.sat4j.minisat.core.Constr)[$i10];

        $r11 = r0.<org.sat4j.minisat.constraints.cnf.Lits: org.sat4j.minisat.core.Constr[] reason>;

        $r10 = r0.<org.sat4j.minisat.constraints.cnf.Lits: org.sat4j.minisat.core.Constr[] reason>;

        $i7 = lengthof $r10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, $r18, 0, $i7);

        r0.<org.sat4j.minisat.constraints.cnf.Lits: org.sat4j.minisat.core.Constr[] reason> = $r18;

        $i8 = 2 * $i10;

        $r19 = newarray (boolean)[$i8];

        $r13 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] falsified>;

        $r12 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] falsified>;

        $i9 = lengthof $r12;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, 0, $r19, 0, $i9);

        r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] falsified> = $r19;

        return;
    }

    public int getFromPool(int)
    {
        org.sat4j.core.Vec $r19, $r20, $r21;
        int[] $r10;
        boolean $z0, $z1, $z2;
        org.sat4j.specs.IVec[] $r5, $r7, $r9;
        java.lang.AssertionError $r17, $r18;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18;
        boolean[] $r1, $r2, $r3, $r11, $r12, $r14, $r16;
        org.sat4j.minisat.constraints.cnf.Lits r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        i0 := @parameter0: int;

        $i1 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] pool>;

        $i2 = lengthof $r1;

        if $i1 < $i2 goto label1;

        $r16 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] pool>;

        $i14 = lengthof $r16;

        $i15 = $i14 << 1;

        $i16 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i15);

        virtualinvoke r0.<org.sat4j.minisat.constraints.cnf.Lits: void init(int)>($i16);

     label1:
        $z0 = <org.sat4j.minisat.constraints.cnf.Lits: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r14 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] pool>;

        $i13 = lengthof $r14;

        if $i1 < $i13 goto label2;

        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>()>();

        throw $r17;

     label2:
        $i3 = r0.<org.sat4j.minisat.constraints.cnf.Lits: int maxvarid>;

        if $i1 <= $i3 goto label3;

        r0.<org.sat4j.minisat.constraints.cnf.Lits: int maxvarid> = $i1;

     label3:
        $i4 = staticinvoke <org.sat4j.core.LiteralsUtils: int toInternal(int)>(i0);

        $z1 = <org.sat4j.minisat.constraints.cnf.Lits: boolean $assertionsDisabled>;

        if $z1 != 0 goto label4;

        if $i4 > 1 goto label4;

        $r18 = new java.lang.AssertionError;

        specialinvoke $r18.<java.lang.AssertionError: void <init>()>();

        throw $r18;

     label4:
        $r2 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] pool>;

        $z2 = $r2[$i1];

        if $z2 != 0 goto label5;

        $i5 = r0.<org.sat4j.minisat.constraints.cnf.Lits: int realnVars>;

        $i6 = $i5 + 1;

        r0.<org.sat4j.minisat.constraints.cnf.Lits: int realnVars> = $i6;

        $r3 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] pool>;

        $r3[$i1] = 1;

        $r5 = r0.<org.sat4j.minisat.constraints.cnf.Lits: org.sat4j.specs.IVec[] watches>;

        $i7 = $i1 << 1;

        $r19 = new org.sat4j.core.Vec;

        specialinvoke $r19.<org.sat4j.core.Vec: void <init>()>();

        $r5[$i7] = $r19;

        $r7 = r0.<org.sat4j.minisat.constraints.cnf.Lits: org.sat4j.specs.IVec[] watches>;

        $i8 = $i1 << 1;

        $i9 = $i8 | 1;

        $r20 = new org.sat4j.core.Vec;

        specialinvoke $r20.<org.sat4j.core.Vec: void <init>()>();

        $r7[$i9] = $r20;

        $r9 = r0.<org.sat4j.minisat.constraints.cnf.Lits: org.sat4j.specs.IVec[] undos>;

        $r21 = new org.sat4j.core.Vec;

        specialinvoke $r21.<org.sat4j.core.Vec: void <init>()>();

        $r9[$i1] = $r21;

        $r10 = r0.<org.sat4j.minisat.constraints.cnf.Lits: int[] level>;

        $i18 = (int) -1;

        $r10[$i1] = $i18;

        $r11 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] falsified>;

        $i10 = $i1 << 1;

        $r11[$i10] = 0;

        $r12 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] falsified>;

        $i11 = $i1 << 1;

        $i12 = $i11 | 1;

        $r12[$i12] = 0;

     label5:
        return $i4;
    }

    public boolean belongsToPool(int)
    {
        boolean[] $r1, $r2;
        java.lang.AssertionError $r3;
        int i0, $i1;
        org.sat4j.minisat.constraints.cnf.Lits r0;
        boolean $z0, $z1;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        i0 := @parameter0: int;

        $z0 = <org.sat4j.minisat.constraints.cnf.Lits: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i0 > 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r1 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] pool>;

        $i1 = lengthof $r1;

        if i0 < $i1 goto label2;

        return 0;

     label2:
        $r2 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] pool>;

        $z1 = $r2[i0];

        return $z1;
    }

    public void resetPool()
    {
        boolean[] $r1, $r2;
        int $i0, $i1, i2;
        org.sat4j.minisat.constraints.cnf.Lits r0;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        i2 = 0;

     label1:
        $r1 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] pool>;

        $i0 = lengthof $r1;

        if i2 >= $i0 goto label3;

        $r2 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] pool>;

        $z0 = $r2[i2];

        if $z0 == 0 goto label2;

        $i1 = i2 << 1;

        virtualinvoke r0.<org.sat4j.minisat.constraints.cnf.Lits: void reset(int)>($i1);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        r0.<org.sat4j.minisat.constraints.cnf.Lits: int maxvarid> = 0;

        r0.<org.sat4j.minisat.constraints.cnf.Lits: int realnVars> = 0;

        return;
    }

    public void ensurePool(int)
    {
        boolean[] $r1, $r2;
        int i0, $i1, $i2, $i3, $i4;
        org.sat4j.minisat.constraints.cnf.Lits r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] pool>;

        $i1 = lengthof $r1;

        if i0 < $i1 goto label1;

        $r2 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] pool>;

        $i2 = lengthof $r2;

        $i3 = $i2 << 1;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(i0, $i3);

        virtualinvoke r0.<org.sat4j.minisat.constraints.cnf.Lits: void init(int)>($i4);

     label1:
        r0.<org.sat4j.minisat.constraints.cnf.Lits: int maxvarid> = i0;

        return;
    }

    public void unassign(int)
    {
        boolean[] $r1, $r2, $r4, $r5;
        java.lang.AssertionError $r3;
        int i0, $i1, $i2;
        org.sat4j.minisat.constraints.cnf.Lits r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        i0 := @parameter0: int;

        $z0 = <org.sat4j.minisat.constraints.cnf.Lits: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] falsified>;

        $z1 = $r1[i0];

        if $z1 != 0 goto label1;

        $r2 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] falsified>;

        $i1 = i0 ^ 1;

        $z2 = $r2[$i1];

        if $z2 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r4 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] falsified>;

        $r4[i0] = 0;

        $r5 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] falsified>;

        $i2 = i0 ^ 1;

        $r5[$i2] = 0;

        return;
    }

    public void satisfies(int)
    {
        boolean[] $r1, $r2, $r3, $r5;
        java.lang.AssertionError $r4;
        int i0, $i1, $i2;
        org.sat4j.minisat.constraints.cnf.Lits r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        i0 := @parameter0: int;

        $z0 = <org.sat4j.minisat.constraints.cnf.Lits: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r3 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] falsified>;

        $z1 = $r3[i0];

        if $z1 != 0 goto label1;

        $r5 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] falsified>;

        $i2 = i0 ^ 1;

        $z2 = $r5[$i2];

        if $z2 == 0 goto label2;

     label1:
        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label2:
        $r1 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] falsified>;

        $r1[i0] = 0;

        $r2 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] falsified>;

        $i1 = i0 ^ 1;

        $r2[$i1] = 1;

        return;
    }

    public void forgets(int)
    {
        int i0, $i1, $i2, $i3;
        boolean[] $r1, $r2;
        org.sat4j.minisat.constraints.cnf.Lits r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] falsified>;

        $i1 = i0 << 1;

        $r1[$i1] = 1;

        $r2 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] falsified>;

        $i2 = i0 << 1;

        $i3 = $i2 ^ 1;

        $r2[$i3] = 1;

        return;
    }

    public boolean isSatisfied(int)
    {
        int i0, $i1;
        boolean[] $r1;
        org.sat4j.minisat.constraints.cnf.Lits r0;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] falsified>;

        $i1 = i0 ^ 1;

        $z0 = $r1[$i1];

        return $z0;
    }

    public final boolean isFalsified(int)
    {
        int i0;
        boolean[] $r1;
        org.sat4j.minisat.constraints.cnf.Lits r0;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] falsified>;

        $z0 = $r1[i0];

        return $z0;
    }

    public boolean isUnassigned(int)
    {
        boolean[] $r1, $r2;
        int i0, $i1;
        org.sat4j.minisat.constraints.cnf.Lits r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] falsified>;

        $z0 = $r1[i0];

        if $z0 != 0 goto label1;

        $r2 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] falsified>;

        $i1 = i0 ^ 1;

        $z1 = $r2[$i1];

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public java.lang.String valueToString(int)
    {
        int i0;
        org.sat4j.minisat.constraints.cnf.Lits r0;
        boolean $z0, $z1;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean isUnassigned(int)>(i0);

        if $z0 == 0 goto label1;

        return "?";

     label1:
        $z1 = virtualinvoke r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean isSatisfied(int)>(i0);

        if $z1 == 0 goto label2;

        return "T";

     label2:
        return "F";
    }

    public int nVars()
    {
        int $i0;
        org.sat4j.minisat.constraints.cnf.Lits r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        $i0 = r0.<org.sat4j.minisat.constraints.cnf.Lits: int maxvarid>;

        return $i0;
    }

    public int not(int)
    {
        int i0, $i1;
        org.sat4j.minisat.constraints.cnf.Lits r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        i0 := @parameter0: int;

        $i1 = i0 ^ 1;

        return $i1;
    }

    public static java.lang.String toString(int)
    {
        int i0, $i1, $i2;
        java.lang.StringBuilder $r0, $r1, $r2;
        java.lang.String $r3, $r4;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $i1 = i0 & 1;

        if $i1 != 0 goto label1;

        $r4 = "";

        goto label2;

     label1:
        $r4 = "-";

     label2:
        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $i2 = i0 >> 1;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public void reset(int)
    {
        int[] $r5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8;
        org.sat4j.specs.IVec $r2, $r4, $r8;
        boolean[] $r9, $r10, $r11;
        org.sat4j.specs.IVec[] $r1, $r3, $r7;
        org.sat4j.minisat.core.Constr[] $r6;
        org.sat4j.minisat.constraints.cnf.Lits r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.Lits: org.sat4j.specs.IVec[] watches>;

        $r2 = $r1[i0];

        interfaceinvoke $r2.<org.sat4j.specs.IVec: void clear()>();

        $r3 = r0.<org.sat4j.minisat.constraints.cnf.Lits: org.sat4j.specs.IVec[] watches>;

        $i1 = i0 ^ 1;

        $r4 = $r3[$i1];

        interfaceinvoke $r4.<org.sat4j.specs.IVec: void clear()>();

        $r5 = r0.<org.sat4j.minisat.constraints.cnf.Lits: int[] level>;

        $i2 = i0 >> 1;

        $i8 = (int) -1;

        $r5[$i2] = $i8;

        $r6 = r0.<org.sat4j.minisat.constraints.cnf.Lits: org.sat4j.minisat.core.Constr[] reason>;

        $i3 = i0 >> 1;

        $r6[$i3] = null;

        $r7 = r0.<org.sat4j.minisat.constraints.cnf.Lits: org.sat4j.specs.IVec[] undos>;

        $i4 = i0 >> 1;

        $r8 = $r7[$i4];

        interfaceinvoke $r8.<org.sat4j.specs.IVec: void clear()>();

        $r9 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] falsified>;

        $r9[i0] = 0;

        $r10 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] falsified>;

        $i5 = i0 ^ 1;

        $r10[$i5] = 0;

        $r11 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] pool>;

        $i6 = i0 >> 1;

        $r11[$i6] = 0;

        return;
    }

    public int getLevel(int)
    {
        int[] $r1;
        int i0, $i1, $i2;
        org.sat4j.minisat.constraints.cnf.Lits r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.Lits: int[] level>;

        $i1 = i0 >> 1;

        $i2 = $r1[$i1];

        return $i2;
    }

    public void setLevel(int, int)
    {
        int[] $r1;
        int i0, i1, $i2;
        org.sat4j.minisat.constraints.cnf.Lits r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.Lits: int[] level>;

        $i2 = i0 >> 1;

        $r1[$i2] = i1;

        return;
    }

    public org.sat4j.minisat.core.Constr getReason(int)
    {
        int i0, $i1;
        org.sat4j.minisat.core.Constr[] $r1;
        org.sat4j.minisat.core.Constr $r2;
        org.sat4j.minisat.constraints.cnf.Lits r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.Lits: org.sat4j.minisat.core.Constr[] reason>;

        $i1 = i0 >> 1;

        $r2 = $r1[$i1];

        return $r2;
    }

    public void setReason(int, org.sat4j.minisat.core.Constr)
    {
        int i0, $i1;
        org.sat4j.minisat.core.Constr[] $r2;
        org.sat4j.minisat.core.Constr r1;
        org.sat4j.minisat.constraints.cnf.Lits r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        i0 := @parameter0: int;

        r1 := @parameter1: org.sat4j.minisat.core.Constr;

        $r2 = r0.<org.sat4j.minisat.constraints.cnf.Lits: org.sat4j.minisat.core.Constr[] reason>;

        $i1 = i0 >> 1;

        $r2[$i1] = r1;

        return;
    }

    public org.sat4j.specs.IVec undos(int)
    {
        int i0, $i1;
        org.sat4j.specs.IVec[] $r1;
        org.sat4j.specs.IVec $r2;
        org.sat4j.minisat.constraints.cnf.Lits r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.Lits: org.sat4j.specs.IVec[] undos>;

        $i1 = i0 >> 1;

        $r2 = $r1[$i1];

        return $r2;
    }

    public void watch(int, org.sat4j.minisat.core.Propagatable)
    {
        org.sat4j.minisat.core.Propagatable r2;
        int i0;
        org.sat4j.specs.IVec[] $r1;
        org.sat4j.specs.IVec $r3;
        org.sat4j.minisat.constraints.cnf.Lits r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        i0 := @parameter0: int;

        r2 := @parameter1: org.sat4j.minisat.core.Propagatable;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.Lits: org.sat4j.specs.IVec[] watches>;

        $r3 = $r1[i0];

        interfaceinvoke $r3.<org.sat4j.specs.IVec: org.sat4j.specs.IVec push(java.lang.Object)>(r2);

        return;
    }

    public org.sat4j.specs.IVec watches(int)
    {
        int i0;
        org.sat4j.specs.IVec[] $r1;
        org.sat4j.specs.IVec $r2;
        org.sat4j.minisat.constraints.cnf.Lits r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.Lits: org.sat4j.specs.IVec[] watches>;

        $r2 = $r1[i0];

        return $r2;
    }

    public boolean isImplied(int)
    {
        java.lang.AssertionError $r8;
        org.sat4j.minisat.core.Constr $r2, $r5;
        int[] $r3;
        int i0, i1, $i2, $i3;
        boolean $z0, $z1, $z2, $z3, $z4;
        boolean[] $r6, $r7, $r9;
        org.sat4j.minisat.core.Constr[] $r1, $r4;
        org.sat4j.minisat.constraints.cnf.Lits r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        i0 := @parameter0: int;

        i1 = i0 >> 1;

        $z0 = <org.sat4j.minisat.constraints.cnf.Lits: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r4 = r0.<org.sat4j.minisat.constraints.cnf.Lits: org.sat4j.minisat.core.Constr[] reason>;

        $r5 = $r4[i1];

        if $r5 == null goto label1;

        $r6 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] falsified>;

        $z1 = $r6[i0];

        if $z1 != 0 goto label1;

        $r7 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] falsified>;

        $i3 = i0 ^ 1;

        $z2 = $r7[$i3];

        if $z2 != 0 goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label1:
        $r9 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] pool>;

        $z3 = $r9[i1];

        if $z3 == 0 goto label3;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.Lits: org.sat4j.minisat.core.Constr[] reason>;

        $r2 = $r1[i1];

        if $r2 != null goto label2;

        $r3 = r0.<org.sat4j.minisat.constraints.cnf.Lits: int[] level>;

        $i2 = $r3[i1];

        if $i2 != 0 goto label3;

     label2:
        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        return $z4;
    }

    public int realnVars()
    {
        int $i0;
        org.sat4j.minisat.constraints.cnf.Lits r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        $i0 = r0.<org.sat4j.minisat.constraints.cnf.Lits: int realnVars>;

        return $i0;
    }

    protected int capacity()
    {
        boolean[] $r1;
        int $i0, $i1;
        org.sat4j.minisat.constraints.cnf.Lits r0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        $r1 = r0.<org.sat4j.minisat.constraints.cnf.Lits: boolean[] pool>;

        $i0 = lengthof $r1;

        $i1 = $i0 - 1;

        return $i1;
    }

    public int nextFreeVarId(boolean)
    {
        int $i0, $i1, $i2, $i3, $i4;
        org.sat4j.minisat.constraints.cnf.Lits r0;
        boolean z0;

        r0 := @this: org.sat4j.minisat.constraints.cnf.Lits;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i2 = r0.<org.sat4j.minisat.constraints.cnf.Lits: int maxvarid>;

        $i3 = $i2 + 1;

        virtualinvoke r0.<org.sat4j.minisat.constraints.cnf.Lits: void ensurePool(int)>($i3);

        $i4 = r0.<org.sat4j.minisat.constraints.cnf.Lits: int maxvarid>;

        return $i4;

     label1:
        $i0 = r0.<org.sat4j.minisat.constraints.cnf.Lits: int maxvarid>;

        $i1 = $i0 + 1;

        return $i1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.sat4j.minisat.constraints.cnf.Lits: long serialVersionUID> = 1L;

        <org.sat4j.minisat.constraints.cnf.Lits: int DEFAULT_INIT_SIZE> = 128;

        $r0 = class "Lorg/sat4j/minisat/constraints/cnf/Lits;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.sat4j.minisat.constraints.cnf.Lits: boolean $assertionsDisabled> = $z1;

        return;
    }
}
