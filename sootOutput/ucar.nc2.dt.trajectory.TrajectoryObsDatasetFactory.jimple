public class ucar.nc2.dt.trajectory.TrajectoryObsDatasetFactory extends java.lang.Object
{

    public void <init>()
    {
        ucar.nc2.dt.trajectory.TrajectoryObsDatasetFactory r0;

        r0 := @this: ucar.nc2.dt.trajectory.TrajectoryObsDatasetFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static ucar.nc2.dt.TrajectoryObsDataset open(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0;
        ucar.nc2.dt.TrajectoryObsDataset $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <ucar.nc2.dt.trajectory.TrajectoryObsDatasetFactory: ucar.nc2.dt.TrajectoryObsDataset open(java.lang.String,ucar.nc2.util.CancelTask)>(r0, null);

        return $r1;
    }

    public static ucar.nc2.dt.TrajectoryObsDataset open(java.lang.String, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset $r4;
        ucar.nc2.util.CancelTask r1;
        ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset $r3;
        ucar.nc2.dt.trajectory.Float10TrajectoryObsDataset $r5;
        ucar.nc2.dt.trajectory.RafTrajectoryObsDataset $r7;
        java.lang.String r0;
        ucar.nc2.dataset.NetcdfDataset $r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset $r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: ucar.nc2.util.CancelTask;

        $r2 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.NetcdfDataset acquireDataset(java.lang.String,ucar.nc2.util.CancelTask)>(r0, r1);

        $z0 = staticinvoke <ucar.nc2.dt.trajectory.RafTrajectoryObsDataset: boolean isValidFile(ucar.nc2.dataset.NetcdfDataset)>($r2);

        if $z0 == 0 goto label1;

        $r7 = new ucar.nc2.dt.trajectory.RafTrajectoryObsDataset;

        specialinvoke $r7.<ucar.nc2.dt.trajectory.RafTrajectoryObsDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>($r2);

        return $r7;

     label1:
        $z1 = staticinvoke <ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset: boolean isValidFile(ucar.nc2.dataset.NetcdfDataset)>($r2);

        if $z1 == 0 goto label2;

        $r6 = new ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset;

        specialinvoke $r6.<ucar.nc2.dt.trajectory.SimpleTrajectoryObsDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>($r2);

        return $r6;

     label2:
        $z2 = staticinvoke <ucar.nc2.dt.trajectory.Float10TrajectoryObsDataset: boolean isValidFile(ucar.nc2.dataset.NetcdfDataset)>($r2);

        if $z2 == 0 goto label3;

        $r5 = new ucar.nc2.dt.trajectory.Float10TrajectoryObsDataset;

        specialinvoke $r5.<ucar.nc2.dt.trajectory.Float10TrajectoryObsDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>($r2);

        return $r5;

     label3:
        $z3 = staticinvoke <ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset: boolean isValidFile(ucar.nc2.dataset.NetcdfDataset)>($r2);

        if $z3 == 0 goto label4;

        $r4 = new ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset;

        specialinvoke $r4.<ucar.nc2.dt.trajectory.ZebraClassTrajectoryObsDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>($r2);

        return $r4;

     label4:
        $z4 = staticinvoke <ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset: boolean isValidFile(ucar.nc2.dataset.NetcdfDataset)>($r2);

        if $z4 == 0 goto label5;

        $r3 = new ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset;

        specialinvoke $r3.<ucar.nc2.dt.trajectory.ARMTrajectoryObsDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>($r2);

        return $r3;

     label5:
        return null;
    }
}
