class org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer extends java.lang.Object
{
    private static final char NUL;
    private static final char EOT;
    private static final char TAB;
    private static final char FF;
    private static final char CR;
    private static final char LF;
    private static final char SPACE;
    private java.lang.CharSequence input;
    private int index;
    private org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler handler;
    private org.apache.pdfbox.pdmodel.common.function.type4.Parser$State state;
    private java.lang.StringBuilder buffer;
    static final boolean $assertionsDisabled;

    private void <init>(java.lang.CharSequence, org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler)
    {
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler r4;
        java.lang.CharSequence r3;
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$State $r1;
        java.lang.StringBuilder $r2;
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer;

        r3 := @parameter0: java.lang.CharSequence;

        r4 := @parameter1: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$State: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State WHITESPACE>;

        r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State state> = $r1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer> = $r2;

        r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.CharSequence input> = r3;

        r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler handler> = r4;

        return;
    }

    private boolean hasMore()
    {
        java.lang.CharSequence $r1;
        int $i0, $i1;
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer;

        $i0 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: int index>;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.CharSequence input>;

        $i1 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        if $i0 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private char currentChar()
    {
        java.lang.CharSequence $r1;
        int $i0;
        char $c1;
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.CharSequence input>;

        $i0 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: int index>;

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i0);

        return $c1;
    }

    private char nextChar()
    {
        int $i0, $i1;
        char $c2;
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer;

        $i0 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: int index>;

        $i1 = $i0 + 1;

        r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: int index> = $i1;

        $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: boolean hasMore()>();

        if $z0 != 0 goto label1;

        return 4;

     label1:
        $c2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char currentChar()>();

        return $c2;
    }

    private char peek()
    {
        java.lang.CharSequence $r1, $r2;
        char $c5;
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer;

        $i0 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: int index>;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.CharSequence input>;

        $i1 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i2 = $i1 - 1;

        if $i0 >= $i2 goto label1;

        $r2 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.CharSequence input>;

        $i3 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: int index>;

        $i4 = $i3 + 1;

        $c5 = interfaceinvoke $r2.<java.lang.CharSequence: char charAt(int)>($i4);

        return $c5;

     label1:
        return 4;
    }

    private org.apache.pdfbox.pdmodel.common.function.type4.Parser$State nextState()
    {
        char $c0;
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer r0;
        int $i1;
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$State $r1, $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer;

        $c0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char currentChar()>();

        $i1 = (int) $c0;

        lookupswitch($i1)
        {
            case 0: goto label2;
            case 9: goto label2;
            case 10: goto label1;
            case 12: goto label1;
            case 13: goto label1;
            case 32: goto label2;
            case 37: goto label3;
            default: goto label4;
        };

     label1:
        $r2 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$State: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State NEWLINE>;

        r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State state> = $r2;

        goto label5;

     label2:
        $r3 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$State: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State WHITESPACE>;

        r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State state> = $r3;

        goto label5;

     label3:
        $r1 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$State: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State COMMENT>;

        r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State state> = $r1;

        goto label5;

     label4:
        $r4 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$State: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State TOKEN>;

        r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State state> = $r4;

     label5:
        $r5 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State state>;

        return $r5;
    }

    private void tokenize()
    {
        int[] $r3;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$State $r2;
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer;

     label1:
        $z0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: boolean hasMore()>();

        if $z0 == 0 goto label6;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer>;

        virtualinvoke $r1.<java.lang.StringBuilder: void setLength(int)>(0);

        specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State nextState()>();

        $r3 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$1: int[] $SwitchMap$org$apache$pdfbox$pdmodel$common$function$type4$Parser$State>;

        $r2 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State state>;

        $i0 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$State: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label2:
        specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: void scanNewLine()>();

        goto label1;

     label3:
        specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: void scanWhitespace()>();

        goto label1;

     label4:
        specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: void scanComment()>();

        goto label1;

     label5:
        specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: void scanToken()>();

        goto label1;

     label6:
        return;
    }

    private void scanNewLine()
    {
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler $r6;
        char $c0, $c1, $c2;
        java.lang.AssertionError $r8;
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer r0;
        int $i3, $i4;
        java.lang.StringBuilder $r1, $r2, $r7;
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$State $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer;

        $z0 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r4 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State state>;

        $r3 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$State: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State NEWLINE>;

        if $r4 == $r3 goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label1:
        $c0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char currentChar()>();

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $i3 = (int) $c0;

        if $i3 != 13 goto label2;

        $c1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char peek()>();

        $i4 = (int) $c1;

        if $i4 != 10 goto label2;

        $r2 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer>;

        $c2 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char nextChar()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

     label2:
        $r6 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler handler>;

        $r7 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer>;

        interfaceinvoke $r6.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler: void newLine(java.lang.CharSequence)>($r7);

        specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char nextChar()>();

        return;
    }

    private void scanWhitespace()
    {
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler $r3;
        char $c0, $c1;
        java.lang.AssertionError $r8;
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer r0;
        int $i2;
        java.lang.StringBuilder $r1, $r2, $r4;
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$State $r5, $r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer;

        $z0 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r6 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State state>;

        $r5 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$State: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State WHITESPACE>;

        if $r6 == $r5 goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label1:
        $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer>;

        $c0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char currentChar()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

     label2:
        $z1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: boolean hasMore()>();

        if $z1 == 0 goto label6;

        $c1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char nextChar()>();

        $i2 = (int) $c1;

        lookupswitch($i2)
        {
            case 0: goto label3;
            case 9: goto label3;
            case 32: goto label3;
            default: goto label4;
        };

     label3:
        $r4 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        goto label5;

     label4:
        goto label6;

     label5:
        goto label2;

     label6:
        $r3 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler handler>;

        $r2 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer>;

        interfaceinvoke $r3.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler: void whitespace(java.lang.CharSequence)>($r2);

        return;
    }

    private void scanComment()
    {
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler $r3;
        char $c0, $c1;
        java.lang.AssertionError $r8;
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer r0;
        int $i2;
        java.lang.StringBuilder $r1, $r2, $r4;
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$State $r5, $r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer;

        $z0 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r6 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State state>;

        $r5 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$State: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State COMMENT>;

        if $r6 == $r5 goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label1:
        $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer>;

        $c0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char currentChar()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

     label2:
        $z1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: boolean hasMore()>();

        if $z1 == 0 goto label5;

        $c1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char nextChar()>();

        $i2 = (int) $c1;

        tableswitch($i2)
        {
            case 10: goto label3;
            case 11: goto label4;
            case 12: goto label3;
            case 13: goto label3;
            default: goto label4;
        };

     label3:
        goto label5;

     label4:
        $r4 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        goto label2;

     label5:
        $r3 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler handler>;

        $r2 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer>;

        interfaceinvoke $r3.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler: void comment(java.lang.CharSequence)>($r2);

        return;
    }

    private void scanToken()
    {
        java.lang.AssertionError $r10;
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer r0;
        int $i2, $i3;
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$State $r7, $r8;
        boolean $z0, $z1;
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler $r3, $r5;
        char $c0, $c1;
        java.lang.StringBuilder $r1, $r2, $r4, $r6;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer;

        $z0 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r8 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State state>;

        $r7 = <org.apache.pdfbox.pdmodel.common.function.type4.Parser$State: org.apache.pdfbox.pdmodel.common.function.type4.Parser$State TOKEN>;

        if $r8 == $r7 goto label1;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label1:
        $c0 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char currentChar()>();

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $i2 = (int) $c0;

        lookupswitch($i2)
        {
            case 123: goto label2;
            case 125: goto label2;
            default: goto label3;
        };

     label2:
        $r3 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler handler>;

        $r2 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer>;

        interfaceinvoke $r3.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler: void token(java.lang.CharSequence)>($r2);

        specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char nextChar()>();

        return;

     label3:
        $z1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: boolean hasMore()>();

        if $z1 == 0 goto label6;

        $c1 = specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char nextChar()>();

        $i3 = (int) $c1;

        lookupswitch($i3)
        {
            case 0: goto label4;
            case 4: goto label4;
            case 9: goto label4;
            case 10: goto label4;
            case 12: goto label4;
            case 13: goto label4;
            case 32: goto label4;
            case 123: goto label4;
            case 125: goto label4;
            default: goto label5;
        };

     label4:
        goto label6;

     label5:
        $r6 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        goto label3;

     label6:
        $r5 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler handler>;

        $r4 = r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: java.lang.StringBuilder buffer>;

        interfaceinvoke $r5.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler: void token(java.lang.CharSequence)>($r4);

        return;
    }

    void <init>(java.lang.CharSequence, org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler, org.apache.pdfbox.pdmodel.common.function.type4.Parser$1)
    {
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler r2;
        java.lang.CharSequence r1;
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$1 r3;
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler;

        r3 := @parameter2: org.apache.pdfbox.pdmodel.common.function.type4.Parser$1;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: void <init>(java.lang.CharSequence,org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler)>(r1, r2);

        return;
    }

    static void access$100(org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer)
    {
        org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer r0;

        r0 := @parameter0: org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: void tokenize()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char SPACE> = 32;

        <org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char LF> = 10;

        <org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char CR> = 13;

        <org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char FF> = 12;

        <org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char TAB> = 9;

        <org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char EOT> = 4;

        <org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: char NUL> = 0;

        $r0 = class "Lorg/apache/pdfbox/pdmodel/common/function/type4/Parser;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer: boolean $assertionsDisabled> = $z1;

        return;
    }
}
