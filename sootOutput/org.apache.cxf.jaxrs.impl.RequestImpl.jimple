public class org.apache.cxf.jaxrs.impl.RequestImpl extends java.lang.Object implements javax.ws.rs.core.Request
{
    private final org.apache.cxf.message.Message m;
    private final javax.ws.rs.core.HttpHeaders headers;

    public void <init>(org.apache.cxf.message.Message)
    {
        org.apache.cxf.jaxrs.impl.RequestImpl r0;
        org.apache.cxf.jaxrs.impl.HttpHeadersImpl $r2;
        org.apache.cxf.message.Message r1;

        r0 := @this: org.apache.cxf.jaxrs.impl.RequestImpl;

        r1 := @parameter0: org.apache.cxf.message.Message;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.jaxrs.impl.RequestImpl: org.apache.cxf.message.Message m> = r1;

        $r2 = new org.apache.cxf.jaxrs.impl.HttpHeadersImpl;

        specialinvoke $r2.<org.apache.cxf.jaxrs.impl.HttpHeadersImpl: void <init>(org.apache.cxf.message.Message)>(r1);

        r0.<org.apache.cxf.jaxrs.impl.RequestImpl: javax.ws.rs.core.HttpHeaders headers> = $r2;

        return;
    }

    public javax.ws.rs.core.Variant selectVariant(java.util.List) throws java.lang.IllegalArgumentException
    {
        javax.ws.rs.core.MediaType $r20;
        java.util.Locale $r21;
        boolean $z0, $z1, z2, z3, $z4, z5, $z6, $z7, $z8, $z9, $z13, $z14, $z15, $z16, $z17, $z18;
        org.apache.cxf.jaxrs.impl.RequestImpl r2;
        java.util.List r0, $r4, $r6, $r11, $r26;
        javax.ws.rs.core.HttpHeaders $r3, $r5, $r7;
        java.lang.String[] $r23, $r24, $r25;
        org.apache.cxf.jaxrs.impl.RequestImpl$VariantComparator $r15;
        int $i0, $i1;
        java.lang.String $r10, $r22;
        java.util.LinkedList $r12, $r13;
        java.util.Iterator $r14;
        java.lang.IllegalArgumentException $r1;
        javax.ws.rs.core.MultivaluedMap $r8;
        java.lang.Object $r9, $r16, $r18;
        javax.ws.rs.core.Variant $r17, r19;

        r2 := @this: org.apache.cxf.jaxrs.impl.RequestImpl;

        r0 := @parameter0: java.util.List;

        if r0 == null goto label01;

        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label02;

     label01:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("List of Variants is either null or empty");

        throw $r1;

     label02:
        $r3 = r2.<org.apache.cxf.jaxrs.impl.RequestImpl: javax.ws.rs.core.HttpHeaders headers>;

        $r4 = interfaceinvoke $r3.<javax.ws.rs.core.HttpHeaders: java.util.List getAcceptableMediaTypes()>();

        $r5 = r2.<org.apache.cxf.jaxrs.impl.RequestImpl: javax.ws.rs.core.HttpHeaders headers>;

        $r6 = interfaceinvoke $r5.<javax.ws.rs.core.HttpHeaders: java.util.List getAcceptableLanguages()>();

        $r7 = r2.<org.apache.cxf.jaxrs.impl.RequestImpl: javax.ws.rs.core.HttpHeaders headers>;

        $r8 = interfaceinvoke $r7.<javax.ws.rs.core.HttpHeaders: javax.ws.rs.core.MultivaluedMap getRequestHeaders()>();

        $r9 = interfaceinvoke $r8.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("Accept-Encoding");

        $r10 = (java.lang.String) $r9;

        $r11 = staticinvoke <org.apache.cxf.jaxrs.impl.RequestImpl: java.util.List parseAcceptEnc(java.lang.String)>($r10);

        $r12 = new java.util.LinkedList;

        specialinvoke $r12.<java.util.LinkedList: void <init>()>();

        $r13 = new java.util.LinkedList;

        specialinvoke $r13.<java.util.LinkedList: void <init>()>();

        $r14 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label17;

        $r18 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r19 = (javax.ws.rs.core.Variant) $r18;

        $r20 = virtualinvoke r19.<javax.ws.rs.core.Variant: javax.ws.rs.core.MediaType getMediaType()>();

        $r21 = virtualinvoke r19.<javax.ws.rs.core.Variant: java.util.Locale getLanguage()>();

        $r22 = virtualinvoke r19.<javax.ws.rs.core.Variant: java.lang.String getEncoding()>();

        if $r20 == null goto label04;

        $z9 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z9 != 0 goto label04;

        $r26 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List intersectMimeTypes(java.util.List,javax.ws.rs.core.MediaType)>($r4, $r20);

        $i1 = interfaceinvoke $r26.<java.util.List: int size()>();

        if $i1 == 0 goto label05;

     label04:
        $z16 = 1;

        $z15 = 1;

        goto label06;

     label05:
        $z16 = 0;

        $z15 = 0;

     label06:
        z2 = $z15;

        if $z16 == 0 goto label07;

        $r25 = newarray (java.lang.String)[1];

        $r25[0] = "Accept";

        staticinvoke <org.apache.cxf.jaxrs.impl.RequestImpl: void handleVaryValues(java.util.List,java.lang.String[])>($r12, $r25);

     label07:
        if $r21 == null goto label08;

        $z7 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z7 != 0 goto label08;

        $z8 = staticinvoke <org.apache.cxf.jaxrs.impl.RequestImpl: boolean isLanguageMatched(java.util.List,java.util.Locale)>($r6, $r21);

        if $z8 == 0 goto label09;

     label08:
        $z18 = 1;

        $z17 = 1;

        goto label10;

     label09:
        $z18 = 0;

        $z17 = 0;

     label10:
        z3 = $z18;

        if $z17 == 0 goto label11;

        $r24 = newarray (java.lang.String)[1];

        $r24[0] = "Accept-Language";

        staticinvoke <org.apache.cxf.jaxrs.impl.RequestImpl: void handleVaryValues(java.util.List,java.lang.String[])>($r12, $r24);

     label11:
        $z4 = interfaceinvoke $r11.<java.util.List: boolean isEmpty()>();

        if $z4 != 0 goto label12;

        if $r22 == null goto label12;

        $z6 = interfaceinvoke $r11.<java.util.List: boolean contains(java.lang.Object)>($r22);

        if $z6 == 0 goto label13;

     label12:
        $z14 = 1;

        $z13 = 1;

        goto label14;

     label13:
        $z14 = 0;

        $z13 = 0;

     label14:
        z5 = $z14;

        if $z13 == 0 goto label15;

        $r23 = newarray (java.lang.String)[1];

        $r23[0] = "Accept-Encoding";

        staticinvoke <org.apache.cxf.jaxrs.impl.RequestImpl: void handleVaryValues(java.util.List,java.lang.String[])>($r12, $r23);

     label15:
        if z2 == 0 goto label16;

        if z5 == 0 goto label16;

        if z3 == 0 goto label16;

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r19);

     label16:
        goto label03;

     label17:
        $i0 = interfaceinvoke $r13.<java.util.List: int size()>();

        if $i0 <= 0 goto label18;

        staticinvoke <org.apache.cxf.jaxrs.impl.RequestImpl: void addVaryHeader(java.util.List)>($r12);

        $r15 = new org.apache.cxf.jaxrs.impl.RequestImpl$VariantComparator;

        specialinvoke $r15.<org.apache.cxf.jaxrs.impl.RequestImpl$VariantComparator: void <init>(org.apache.cxf.jaxrs.impl.RequestImpl$1)>(null);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r13, $r15);

        $r16 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(0);

        $r17 = (javax.ws.rs.core.Variant) $r16;

        return $r17;

     label18:
        return null;
    }

    private static transient void handleVaryValues(java.util.List, java.lang.String[])
    {
        java.util.List r2;
        int i0, i1;
        java.lang.String[] r0;
        java.lang.String r1;
        boolean $z0;

        r2 := @parameter0: java.util.List;

        r0 := @parameter1: java.lang.String[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r1 = r0[i1];

        if r1 == null goto label2;

        $z0 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r1);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private static void addVaryHeader(java.util.List)
    {
        org.apache.cxf.message.Message $r0;
        javax.servlet.http.HttpServletResponse $r4;
        java.util.List r3;
        int $i0, i1;
        java.lang.Object $r1, $r6;
        java.lang.StringBuilder $r2;
        java.lang.String $r5, $r7;

        r3 := @parameter0: java.util.List;

        $r0 = staticinvoke <org.apache.cxf.phase.PhaseInterceptorChain: org.apache.cxf.message.Message getCurrentMessage()>();

        if $r0 == null goto label4;

        $r1 = interfaceinvoke $r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("HTTP.RESPONSE");

        if $r1 == null goto label4;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        if i1 <= 0 goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label2:
        $r6 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        i1 = i1 + 1;

        goto label1;

     label3:
        $r4 = (javax.servlet.http.HttpServletResponse) $r1;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("Vary", $r5);

     label4:
        return;
    }

    private static boolean isLanguageMatched(java.util.List, java.util.Locale)
    {
        java.util.Iterator $r1;
        java.util.List r0;
        java.util.Locale r3, r6;
        java.lang.Object $r2;
        java.lang.String $r4, $r5, $r7;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.util.List;

        r6 := @parameter1: java.util.Locale;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Locale) $r2;

        $r4 = virtualinvoke r3.<java.util.Locale: java.lang.String getLanguage()>();

        $r5 = "*";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label2;

        $r7 = virtualinvoke r6.<java.util.Locale: java.lang.String getLanguage()>();

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7);

        if $z2 == 0 goto label3;

     label2:
        return 1;

     label3:
        goto label1;

     label4:
        return 0;
    }

    private static java.util.List parseAcceptEnc(java.lang.String)
    {
        java.lang.String[] $r2, $r5;
        java.util.List $r7;
        int i0, i1;
        java.lang.String r0, r3, $r4, $r6;
        java.util.LinkedList $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r7 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r7;

     label1:
        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        $r2 = staticinvoke <org.apache.cxf.common.util.StringUtils: java.lang.String[] split(java.lang.String,java.lang.String)>(r0, ",");

        i0 = lengthof $r2;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r3 = $r2[i1];

        $r4 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>();

        $r5 = staticinvoke <org.apache.cxf.common.util.StringUtils: java.lang.String[] split(java.lang.String,java.lang.String)>($r4, ";");

        $r6 = $r5[0];

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        i1 = i1 + 1;

        goto label2;

     label3:
        return $r1;
    }

    public javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(javax.ws.rs.core.EntityTag)
    {
        javax.ws.rs.core.Response$ResponseBuilder $r2, r4;
        org.apache.cxf.jaxrs.impl.RequestImpl r1;
        javax.ws.rs.core.EntityTag r0;
        java.lang.IllegalArgumentException $r3;

        r1 := @this: org.apache.cxf.jaxrs.impl.RequestImpl;

        r0 := @parameter0: javax.ws.rs.core.EntityTag;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ETag is null");

        throw $r3;

     label1:
        $r2 = specialinvoke r1.<org.apache.cxf.jaxrs.impl.RequestImpl: javax.ws.rs.core.Response$ResponseBuilder evaluateIfMatch(javax.ws.rs.core.EntityTag)>(r0);

        r4 = $r2;

        if $r2 != null goto label2;

        r4 = specialinvoke r1.<org.apache.cxf.jaxrs.impl.RequestImpl: javax.ws.rs.core.Response$ResponseBuilder evaluateIfNonMatch(javax.ws.rs.core.EntityTag)>(r0);

     label2:
        return r4;
    }

    private javax.ws.rs.core.Response$ResponseBuilder evaluateIfMatch(javax.ws.rs.core.EntityTag)
    {
        int $i0;
        javax.ws.rs.core.Response$Status $r4;
        java.lang.String r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator $r3;
        org.apache.cxf.jaxrs.impl.RequestImpl r0;
        javax.ws.rs.core.EntityTag r6, $r11;
        java.lang.IllegalArgumentException $r12;
        java.util.List $r2;
        javax.ws.rs.core.HttpHeaders $r1;
        javax.ws.rs.core.Response$ResponseBuilder $r5, $r7;
        java.lang.Object $r8;

        r0 := @this: org.apache.cxf.jaxrs.impl.RequestImpl;

        r6 := @parameter0: javax.ws.rs.core.EntityTag;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.RequestImpl: javax.ws.rs.core.HttpHeaders headers>;

        $r2 = interfaceinvoke $r1.<javax.ws.rs.core.HttpHeaders: java.util.List getRequestHeader(java.lang.String)>("If-Match");

        if $r2 == null goto label01;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 0 goto label02;

     label01:
        return null;

     label02:
        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r8 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r8;

        $r10 = "*";

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z1 == 0 goto label05;

     label04:
        return null;

     label05:
        $r11 = staticinvoke <javax.ws.rs.core.EntityTag: javax.ws.rs.core.EntityTag valueOf(java.lang.String)>(r9);

        $z2 = virtualinvoke $r11.<javax.ws.rs.core.EntityTag: boolean isWeak()>();

        if $z2 != 0 goto label07;

        $z3 = virtualinvoke r6.<javax.ws.rs.core.EntityTag: boolean isWeak()>();

        if $z3 != 0 goto label07;

        $z4 = virtualinvoke $r11.<javax.ws.rs.core.EntityTag: boolean equals(java.lang.Object)>(r6);

        if $z4 == 0 goto label07;

     label06:
        return null;

     label07:
        goto label03;

     label08:
        goto label10;

     label09:
        $r12 := @caughtexception;

     label10:
        $r4 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status PRECONDITION_FAILED>;

        $r5 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$Status)>($r4);

        $r7 = virtualinvoke $r5.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder tag(javax.ws.rs.core.EntityTag)>(r6);

        return $r7;

        catch java.lang.IllegalArgumentException from label02 to label04 with label09;
        catch java.lang.IllegalArgumentException from label05 to label06 with label09;
        catch java.lang.IllegalArgumentException from label07 to label08 with label09;
    }

    private javax.ws.rs.core.Response$ResponseBuilder evaluateIfNonMatch(javax.ws.rs.core.EntityTag)
    {
        int $i0;
        javax.ws.rs.core.Response$Status $r15;
        java.lang.String $r3, $r4, r7, $r8, $r13;
        boolean $z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, $z10;
        java.util.Iterator $r5;
        org.apache.cxf.jaxrs.impl.RequestImpl r0;
        javax.ws.rs.core.EntityTag r10, $r12;
        java.lang.IllegalArgumentException $r14;
        java.util.List $r2;
        javax.ws.rs.core.HttpHeaders $r1;
        javax.ws.rs.core.Response$ResponseBuilder $r9, $r11;
        java.lang.Object $r6;

        r0 := @this: org.apache.cxf.jaxrs.impl.RequestImpl;

        r10 := @parameter0: javax.ws.rs.core.EntityTag;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.RequestImpl: javax.ws.rs.core.HttpHeaders headers>;

        $r2 = interfaceinvoke $r1.<javax.ws.rs.core.HttpHeaders: java.util.List getRequestHeader(java.lang.String)>("If-None-Match");

        if $r2 == null goto label01;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 0 goto label02;

     label01:
        return null;

     label02:
        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.RequestImpl: java.lang.String getMethod()>();

        $r4 = "GET";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label03;

        $r13 = "HEAD";

        $z6 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z6 == 0 goto label04;

     label03:
        $z7 = 1;

        goto label05;

     label04:
        $z7 = 0;

     label05:
        z1 = $z7;

     label06:
        $r5 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z8 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label16;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        $r8 = "*";

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        z9 = $z2;

        if $z2 != 0 goto label11;

        $r12 = staticinvoke <javax.ws.rs.core.EntityTag: javax.ws.rs.core.EntityTag valueOf(java.lang.String)>(r7);

        if z1 == 0 goto label08;

        $z10 = virtualinvoke $r12.<javax.ws.rs.core.EntityTag: boolean equals(java.lang.Object)>(r10);

        goto label10;

     label08:
        $z3 = virtualinvoke $r12.<javax.ws.rs.core.EntityTag: boolean isWeak()>();

        if $z3 != 0 goto label09;

        $z4 = virtualinvoke r10.<javax.ws.rs.core.EntityTag: boolean isWeak()>();

        if $z4 != 0 goto label09;

        $z5 = virtualinvoke $r12.<javax.ws.rs.core.EntityTag: boolean equals(java.lang.Object)>(r10);

        if $z5 == 0 goto label09;

        $z10 = 1;

        goto label10;

     label09:
        $z10 = 0;

     label10:
        z9 = $z10;

     label11:
        if z9 == 0 goto label15;

        if z1 == 0 goto label12;

        $r15 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NOT_MODIFIED>;

        goto label13;

     label12:
        $r15 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status PRECONDITION_FAILED>;

     label13:
        $r9 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$Status)>($r15);

        $r11 = virtualinvoke $r9.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder tag(javax.ws.rs.core.EntityTag)>(r10);

     label14:
        return $r11;

     label15:
        goto label07;

     label16:
        goto label18;

     label17:
        $r14 := @caughtexception;

     label18:
        return null;

        catch java.lang.IllegalArgumentException from label06 to label14 with label17;
        catch java.lang.IllegalArgumentException from label15 to label16 with label17;
    }

    public javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(java.util.Date)
    {
        java.util.Date r0, $r8;
        java.text.SimpleDateFormat $r5;
        int $i0;
        javax.ws.rs.core.Response$Status $r9, $r13;
        java.lang.String $r7;
        java.text.ParseException $r12;
        boolean $z0;
        org.apache.cxf.jaxrs.impl.RequestImpl r1;
        java.lang.IllegalArgumentException $r11;
        java.util.List $r3;
        javax.ws.rs.core.HttpHeaders $r2;
        javax.ws.rs.core.Response$ResponseBuilder $r4, $r10, $r14;
        java.lang.Object $r6;

        r1 := @this: org.apache.cxf.jaxrs.impl.RequestImpl;

        r0 := @parameter0: java.util.Date;

        if r0 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Date is null");

        throw $r11;

     label1:
        $r2 = r1.<org.apache.cxf.jaxrs.impl.RequestImpl: javax.ws.rs.core.HttpHeaders headers>;

        $r3 = interfaceinvoke $r2.<javax.ws.rs.core.HttpHeaders: java.util.List getRequestHeader(java.lang.String)>("If-Modified-Since");

        if $r3 == null goto label2;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 != 0 goto label3;

     label2:
        $r4 = virtualinvoke r1.<org.apache.cxf.jaxrs.impl.RequestImpl: javax.ws.rs.core.Response$ResponseBuilder evaluateIfNotModifiedSince(java.util.Date)>(r0);

        return $r4;

     label3:
        $r5 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.text.SimpleDateFormat getHttpDateFormat()>();

        virtualinvoke $r5.<java.text.SimpleDateFormat: void setLenient(boolean)>(0);

     label4:
        $r6 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (java.lang.String) $r6;

        $r8 = virtualinvoke $r5.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r7);

     label5:
        goto label7;

     label6:
        $r12 := @caughtexception;

        $r13 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status PRECONDITION_FAILED>;

        $r14 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$Status)>($r13);

        return $r14;

     label7:
        $z0 = virtualinvoke $r8.<java.util.Date: boolean before(java.util.Date)>(r0);

        if $z0 == 0 goto label8;

        return null;

     label8:
        $r9 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NOT_MODIFIED>;

        $r10 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$Status)>($r9);

        return $r10;

        catch java.text.ParseException from label4 to label5 with label6;
    }

    public javax.ws.rs.core.Response$ResponseBuilder evaluateIfNotModifiedSince(java.util.Date)
    {
        java.util.Date $r6, r7;
        java.text.SimpleDateFormat $r3;
        org.apache.cxf.jaxrs.impl.RequestImpl r0;
        java.util.List $r2;
        javax.ws.rs.core.HttpHeaders $r1;
        javax.ws.rs.core.Response$ResponseBuilder $r9, $r12;
        int $i0;
        javax.ws.rs.core.Response$Status $r8, $r11;
        java.lang.Object $r4;
        java.lang.String $r5;
        java.text.ParseException $r10;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.impl.RequestImpl;

        r7 := @parameter0: java.util.Date;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.RequestImpl: javax.ws.rs.core.HttpHeaders headers>;

        $r2 = interfaceinvoke $r1.<javax.ws.rs.core.HttpHeaders: java.util.List getRequestHeader(java.lang.String)>("If-Unmodified-Since");

        if $r2 == null goto label1;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.text.SimpleDateFormat getHttpDateFormat()>();

        virtualinvoke $r3.<java.text.SimpleDateFormat: void setLenient(boolean)>(0);

     label3:
        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (java.lang.String) $r4;

        $r6 = virtualinvoke $r3.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r5);

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;

        $r11 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status PRECONDITION_FAILED>;

        $r12 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$Status)>($r11);

        return $r12;

     label6:
        $z0 = virtualinvoke $r6.<java.util.Date: boolean before(java.util.Date)>(r7);

        if $z0 == 0 goto label7;

        $r8 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status PRECONDITION_FAILED>;

        $r9 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$Status)>($r8);

        return $r9;

     label7:
        return null;

        catch java.text.ParseException from label3 to label4 with label5;
    }

    public javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(java.util.Date, javax.ws.rs.core.EntityTag)
    {
        java.util.Date r3;
        javax.ws.rs.core.Response$ResponseBuilder $r2, $r4;
        org.apache.cxf.jaxrs.impl.RequestImpl r0;
        javax.ws.rs.core.EntityTag r1;

        r0 := @this: org.apache.cxf.jaxrs.impl.RequestImpl;

        r3 := @parameter0: java.util.Date;

        r1 := @parameter1: javax.ws.rs.core.EntityTag;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.RequestImpl: javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(javax.ws.rs.core.EntityTag)>(r1);

        if $r2 != null goto label1;

        $r4 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.RequestImpl: javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(java.util.Date)>(r3);

        return $r4;

     label1:
        return null;
    }

    public java.lang.String getMethod()
    {
        org.apache.cxf.message.Message $r1;
        java.lang.Object $r2;
        org.apache.cxf.jaxrs.impl.RequestImpl r0;
        java.lang.String $r3;

        r0 := @this: org.apache.cxf.jaxrs.impl.RequestImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.RequestImpl: org.apache.cxf.message.Message m>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("org.apache.cxf.request.method");

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        return $r3;
    }

    public javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions()
    {
        java.util.Iterator $r3;
        org.apache.cxf.jaxrs.impl.RequestImpl r0;
        javax.ws.rs.core.EntityTag $r9;
        java.util.List $r2;
        javax.ws.rs.core.HttpHeaders $r1;
        javax.ws.rs.core.Response$ResponseBuilder $r8, $r10;
        javax.ws.rs.core.Response$Status $r7;
        java.lang.Object $r4;
        java.lang.String r5, $r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.jaxrs.impl.RequestImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.RequestImpl: javax.ws.rs.core.HttpHeaders headers>;

        $r2 = interfaceinvoke $r1.<javax.ws.rs.core.HttpHeaders: java.util.List getRequestHeader(java.lang.String)>("If-Match");

        if $r2 == null goto label3;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $r6 = "*";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z1 != 0 goto label2;

        $r7 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status PRECONDITION_FAILED>;

        $r8 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$Status)>($r7);

        $r9 = staticinvoke <javax.ws.rs.core.EntityTag: javax.ws.rs.core.EntityTag valueOf(java.lang.String)>(r5);

        $r10 = virtualinvoke $r8.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder tag(javax.ws.rs.core.EntityTag)>($r9);

        return $r10;

     label2:
        goto label1;

     label3:
        return null;
    }
}
