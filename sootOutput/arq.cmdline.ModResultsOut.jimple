public class arq.cmdline.ModResultsOut extends java.lang.Object implements arq.cmdline.ArgModuleGeneral
{
    protected final arq.cmdline.ArgDecl resultsFmtDecl;
    private com.hp.hpl.jena.sparql.resultset.ResultsFormat resultsFormat;

    public void <init>()
    {
        arq.cmdline.ArgDecl $r1;
        com.hp.hpl.jena.sparql.resultset.ResultsFormat $r3;
        java.lang.String[] $r2;
        arq.cmdline.ModResultsOut r0;

        r0 := @this: arq.cmdline.ModResultsOut;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new arq.cmdline.ArgDecl;

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = "out";

        $r2[1] = "rfmt";

        specialinvoke $r1.<arq.cmdline.ArgDecl: void <init>(boolean,java.lang.String,java.lang.String[])>(1, "results", $r2);

        r0.<arq.cmdline.ModResultsOut: arq.cmdline.ArgDecl resultsFmtDecl> = $r1;

        $r3 = <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat FMT_UNKNOWN>;

        r0.<arq.cmdline.ModResultsOut: com.hp.hpl.jena.sparql.resultset.ResultsFormat resultsFormat> = $r3;

        return;
    }

    public void processArgs(arq.cmdline.CmdArgModule) throws java.lang.IllegalArgumentException
    {
        arq.cmdline.ArgDecl $r2, $r3;
        com.hp.hpl.jena.sparql.resultset.ResultsFormat $r5, $r6;
        arq.cmdline.ModResultsOut r1;
        arq.cmdline.CmdArgModule r0;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r4, $r10;
        boolean $z0;

        r1 := @this: arq.cmdline.ModResultsOut;

        r0 := @parameter0: arq.cmdline.CmdArgModule;

        $r2 = r1.<arq.cmdline.ModResultsOut: arq.cmdline.ArgDecl resultsFmtDecl>;

        $z0 = virtualinvoke r0.<arq.cmdline.CmdArgModule: boolean contains(arq.cmdline.ArgDecl)>($r2);

        if $z0 == 0 goto label1;

        $r3 = r1.<arq.cmdline.ModResultsOut: arq.cmdline.ArgDecl resultsFmtDecl>;

        $r4 = virtualinvoke r0.<arq.cmdline.CmdArgModule: java.lang.String getValue(arq.cmdline.ArgDecl)>($r3);

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.resultset.ResultsFormat: com.hp.hpl.jena.sparql.resultset.ResultsFormat lookup(java.lang.String)>($r4);

        r1.<arq.cmdline.ModResultsOut: com.hp.hpl.jena.sparql.resultset.ResultsFormat resultsFormat> = $r5;

        $r6 = r1.<arq.cmdline.ModResultsOut: com.hp.hpl.jena.sparql.resultset.ResultsFormat resultsFormat>;

        if $r6 != null goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized output format: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<arq.cmdline.CmdArgModule: void cmdError(java.lang.String)>($r10);

     label1:
        return;
    }

    public void registerWith(arq.cmdline.CmdGeneral)
    {
        arq.cmdline.Usage $r1;
        arq.cmdline.CmdGeneral r0;
        arq.cmdline.ArgDecl $r3;
        arq.cmdline.ModResultsOut r2;

        r2 := @this: arq.cmdline.ModResultsOut;

        r0 := @parameter0: arq.cmdline.CmdGeneral;

        $r1 = virtualinvoke r0.<arq.cmdline.CmdGeneral: arq.cmdline.Usage getUsage()>();

        virtualinvoke $r1.<arq.cmdline.Usage: void startCategory(java.lang.String)>("Results");

        $r3 = r2.<arq.cmdline.ModResultsOut: arq.cmdline.ArgDecl resultsFmtDecl>;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: void add(arq.cmdline.ArgDecl,java.lang.String,java.lang.String)>($r3, "--results", "Results format (Result set: text, XML, JSON, CSV, TSV; Graph: RDF serialization)");

        return;
    }

    public void checkCommandLine(arq.cmdline.CmdArgModule)
    {
        arq.cmdline.CmdArgModule r1;
        arq.cmdline.ModResultsOut r0;

        r0 := @this: arq.cmdline.ModResultsOut;

        r1 := @parameter0: arq.cmdline.CmdArgModule;

        return;
    }

    public void printResultSet(com.hp.hpl.jena.query.ResultSet, com.hp.hpl.jena.sparql.core.Prologue)
    {
        com.hp.hpl.jena.sparql.core.Prologue r1;
        com.hp.hpl.jena.sparql.resultset.ResultsFormat $r3;
        arq.cmdline.ModResultsOut r2;
        com.hp.hpl.jena.query.ResultSet r0;

        r2 := @this: arq.cmdline.ModResultsOut;

        r0 := @parameter0: com.hp.hpl.jena.query.ResultSet;

        r1 := @parameter1: com.hp.hpl.jena.sparql.core.Prologue;

        $r3 = r2.<arq.cmdline.ModResultsOut: com.hp.hpl.jena.sparql.resultset.ResultsFormat resultsFormat>;

        staticinvoke <com.hp.hpl.jena.sparql.util.QueryExecUtils: void outputResultSet(com.hp.hpl.jena.query.ResultSet,com.hp.hpl.jena.sparql.core.Prologue,com.hp.hpl.jena.sparql.resultset.ResultsFormat)>(r0, r1, $r3);

        return;
    }

    public com.hp.hpl.jena.sparql.resultset.ResultsFormat getResultsFormat()
    {
        com.hp.hpl.jena.sparql.resultset.ResultsFormat $r1;
        arq.cmdline.ModResultsOut r0;

        r0 := @this: arq.cmdline.ModResultsOut;

        $r1 = r0.<arq.cmdline.ModResultsOut: com.hp.hpl.jena.sparql.resultset.ResultsFormat resultsFormat>;

        return $r1;
    }
}
