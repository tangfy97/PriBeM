final class edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer extends javax.swing.JLabel implements javax.swing.tree.TreeCellRenderer
{
    private static final long serialVersionUID;
    private int height;
    private int preferredWidth;
    private int preferredHeight;
    private boolean isSelected;
    private boolean isFocused;
    final edu.mit.csail.sdg.alloy4.OurTree this$0;

    public void <init>(edu.mit.csail.sdg.alloy4.OurTree, int)
    {
        java.awt.Font $r2, $r3;
        edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer r0;
        java.awt.Dimension $r5;
        edu.mit.csail.sdg.alloy4.OurTree r1;
        int i0, $i1;
        float $f0;
        javax.swing.border.EmptyBorder $r4;

        r0 := @this: edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4.OurTree;

        i0 := @parameter1: int;

        r0.<edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer: edu.mit.csail.sdg.alloy4.OurTree this$0> = r1;

        specialinvoke r0.<javax.swing.JLabel: void <init>(java.lang.String)>("Anything");

        r0.<edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer: int preferredWidth> = 0;

        r0.<edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer: int preferredHeight> = 0;

        $r2 = staticinvoke <edu.mit.csail.sdg.alloy4.OurUtil: java.awt.Font getVizFont()>();

        $f0 = (float) i0;

        $r3 = virtualinvoke $r2.<java.awt.Font: java.awt.Font deriveFont(float)>($f0);

        virtualinvoke r0.<edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer: void setFont(java.awt.Font)>($r3);

        virtualinvoke r0.<edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer: void setVerticalAlignment(int)>(3);

        $r4 = new javax.swing.border.EmptyBorder;

        specialinvoke $r4.<javax.swing.border.EmptyBorder: void <init>(int,int,int,int)>(0, 3, 0, 3);

        virtualinvoke r0.<edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer: void setBorder(javax.swing.border.Border)>($r4);

        virtualinvoke r0.<edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer: void setText(java.lang.String)>("Anything");

        $r5 = specialinvoke r0.<javax.swing.JLabel: java.awt.Dimension getPreferredSize()>();

        $i1 = $r5.<java.awt.Dimension: int height>;

        r0.<edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer: int height> = $i1;

        return;
    }

    public java.awt.Component getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)
    {
        java.awt.Color $r4;
        edu.mit.csail.sdg.alloy4.OurTree $r5;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String $r2, $r7;
        boolean z0, z1, z2, z3, $z4;
        javax.swing.JTree r0;
        edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer r3;
        java.awt.Dimension $r6;
        java.lang.Object r1;

        r3 := @this: edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer;

        r0 := @parameter0: javax.swing.JTree;

        r1 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        i0 := @parameter5: int;

        z3 := @parameter6: boolean;

        $r2 = virtualinvoke r0.<javax.swing.JTree: java.lang.String convertValueToText(java.lang.Object,boolean,boolean,boolean,int,boolean)>(r1, z0, z1, z2, i0, z3);

        r3.<edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer: boolean isFocused> = z3;

        r3.<edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer: boolean isSelected> = z0;

        virtualinvoke r3.<edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer: void setText(java.lang.String)>($r2);

        if z0 == 0 goto label1;

        $r7 = "Tree.selectionForeground";

        goto label2;

     label1:
        $r7 = "Tree.textForeground";

     label2:
        $r4 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>($r7);

        virtualinvoke r3.<edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer: void setForeground(java.awt.Color)>($r4);

        r3.<edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer: int preferredHeight> = 0;

        $r5 = r3.<edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer: edu.mit.csail.sdg.alloy4.OurTree this$0>;

        $z4 = virtualinvoke $r5.<edu.mit.csail.sdg.alloy4.OurTree: boolean do_isDouble(java.lang.Object)>(r1);

        if $z4 == 0 goto label3;

        $r6 = specialinvoke r3.<javax.swing.JLabel: java.awt.Dimension getPreferredSize()>();

        $i1 = $r6.<java.awt.Dimension: int width>;

        $i2 = $i1 + 3;

        r3.<edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer: int preferredWidth> = $i2;

        $i3 = $r6.<java.awt.Dimension: int height>;

        $i4 = $i3 * 2;

        r3.<edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer: int preferredHeight> = $i4;

     label3:
        return r3;
    }

    public java.awt.Dimension getPreferredSize()
    {
        edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer r0;
        java.awt.Dimension $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer;

        $i0 = r0.<edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer: int preferredHeight>;

        if $i0 <= 0 goto label1;

        $r3 = new java.awt.Dimension;

        $i5 = r0.<edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer: int preferredWidth>;

        $i4 = r0.<edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer: int preferredHeight>;

        specialinvoke $r3.<java.awt.Dimension: void <init>(int,int)>($i5, $i4);

        return $r3;

     label1:
        $r1 = specialinvoke r0.<javax.swing.JLabel: java.awt.Dimension getPreferredSize()>();

        $r2 = new java.awt.Dimension;

        $i1 = $r1.<java.awt.Dimension: int width>;

        $i3 = $i1 + 3;

        $i2 = $r1.<java.awt.Dimension: int height>;

        specialinvoke $r2.<java.awt.Dimension: void <init>(int,int)>($i3, $i2);

        return $r2;
    }

    public void paint(java.awt.Graphics)
    {
        java.awt.Color r1, r2, $r4, $r5;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1, $z2;
        edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer r0;
        java.awt.Graphics r3;

        r0 := @this: edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer;

        r3 := @parameter0: java.awt.Graphics;

        $i0 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer: int getWidth()>();

        $i1 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer: int getHeight()>();

        $i2 = r0.<edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer: int height>;

        i3 = $i1 - $i2;

        $z0 = r0.<edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer: boolean isSelected>;

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("Tree.selectionBackground");

        goto label2;

     label1:
        $r4 = <java.awt.Color: java.awt.Color WHITE>;

     label2:
        r1 = $r4;

        $z1 = r0.<edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer: boolean isFocused>;

        if $z1 == 0 goto label3;

        $r5 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("Tree.selectionBorderColor");

        goto label4;

     label3:
        $r5 = null;

     label4:
        r2 = $r5;

        if r1 == null goto label5;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>(r1);

        $i7 = $i1 - i3;

        virtualinvoke r3.<java.awt.Graphics: void fillRect(int,int,int,int)>(0, i3, $i0, $i7);

     label5:
        if r2 == null goto label6;

        $z2 = r0.<edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer: boolean isSelected>;

        if $z2 == 0 goto label6;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>(r2);

        $i6 = $i0 - 1;

        $i4 = $i1 - 1;

        $i5 = $i4 - i3;

        virtualinvoke r3.<java.awt.Graphics: void drawRect(int,int,int,int)>(0, i3, $i6, $i5);

     label6:
        specialinvoke r0.<javax.swing.JLabel: void paint(java.awt.Graphics)>(r3);

        return;
    }

    public static void <clinit>()
    {
        <edu.mit.csail.sdg.alloy4.OurTree$OurTreeRenderer: long serialVersionUID> = 0L;

        return;
    }
}
