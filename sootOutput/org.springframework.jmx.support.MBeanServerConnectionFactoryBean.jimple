public class org.springframework.jmx.support.MBeanServerConnectionFactoryBean extends java.lang.Object implements org.springframework.beans.factory.FactoryBean, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean
{
    private javax.management.remote.JMXServiceURL serviceUrl;
    private java.util.Map environment;
    private boolean connectOnStartup;
    private java.lang.ClassLoader beanClassLoader;
    private javax.management.remote.JMXConnector connector;
    private javax.management.MBeanServerConnection connection;
    private org.springframework.jmx.support.MBeanServerConnectionFactoryBean$JMXConnectorLazyInitTargetSource connectorTargetSource;

    public void <init>()
    {
        org.springframework.jmx.support.MBeanServerConnectionFactoryBean r0;
        java.util.HashMap $r1;
        java.lang.ClassLoader $r2;

        r0 := @this: org.springframework.jmx.support.MBeanServerConnectionFactoryBean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: java.util.Map environment> = $r1;

        r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: boolean connectOnStartup> = 1;

        $r2 = staticinvoke <org.springframework.util.ClassUtils: java.lang.ClassLoader getDefaultClassLoader()>();

        r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: java.lang.ClassLoader beanClassLoader> = $r2;

        return;
    }

    public void setServiceUrl(java.lang.String) throws java.net.MalformedURLException
    {
        org.springframework.jmx.support.MBeanServerConnectionFactoryBean r0;
        javax.management.remote.JMXServiceURL $r1;
        java.lang.String r2;

        r0 := @this: org.springframework.jmx.support.MBeanServerConnectionFactoryBean;

        r2 := @parameter0: java.lang.String;

        $r1 = new javax.management.remote.JMXServiceURL;

        specialinvoke $r1.<javax.management.remote.JMXServiceURL: void <init>(java.lang.String)>(r2);

        r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: javax.management.remote.JMXServiceURL serviceUrl> = $r1;

        return;
    }

    public void setEnvironment(java.util.Properties)
    {
        org.springframework.jmx.support.MBeanServerConnectionFactoryBean r1;
        java.util.Properties r0;
        java.util.Map $r2;

        r1 := @this: org.springframework.jmx.support.MBeanServerConnectionFactoryBean;

        r0 := @parameter0: java.util.Properties;

        $r2 = r1.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: java.util.Map environment>;

        staticinvoke <org.springframework.util.CollectionUtils: void mergePropertiesIntoMap(java.util.Properties,java.util.Map)>(r0, $r2);

        return;
    }

    public void setEnvironmentMap(java.util.Map)
    {
        org.springframework.jmx.support.MBeanServerConnectionFactoryBean r1;
        java.util.Map r0, $r2;

        r1 := @this: org.springframework.jmx.support.MBeanServerConnectionFactoryBean;

        r0 := @parameter0: java.util.Map;

        if r0 == null goto label1;

        $r2 = r1.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: java.util.Map environment>;

        interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r0);

     label1:
        return;
    }

    public void setConnectOnStartup(boolean)
    {
        org.springframework.jmx.support.MBeanServerConnectionFactoryBean r0;
        boolean z0;

        r0 := @this: org.springframework.jmx.support.MBeanServerConnectionFactoryBean;

        z0 := @parameter0: boolean;

        r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: boolean connectOnStartup> = z0;

        return;
    }

    public void setBeanClassLoader(java.lang.ClassLoader)
    {
        org.springframework.jmx.support.MBeanServerConnectionFactoryBean r0;
        java.lang.ClassLoader r1;

        r0 := @this: org.springframework.jmx.support.MBeanServerConnectionFactoryBean;

        r1 := @parameter0: java.lang.ClassLoader;

        r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: java.lang.ClassLoader beanClassLoader> = r1;

        return;
    }

    public void afterPropertiesSet() throws java.io.IOException
    {
        org.springframework.jmx.support.MBeanServerConnectionFactoryBean r0;
        javax.management.remote.JMXServiceURL $r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;

        r0 := @this: org.springframework.jmx.support.MBeanServerConnectionFactoryBean;

        $r1 = r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: javax.management.remote.JMXServiceURL serviceUrl>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Property \'serviceUrl\' is required");

        throw $r2;

     label1:
        $z0 = r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: boolean connectOnStartup>;

        if $z0 == 0 goto label2;

        specialinvoke r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: void connect()>();

        goto label3;

     label2:
        specialinvoke r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: void createLazyConnection()>();

     label3:
        return;
    }

    private void connect() throws java.io.IOException
    {
        javax.management.MBeanServerConnection $r5;
        java.util.Map $r1;
        org.springframework.jmx.support.MBeanServerConnectionFactoryBean r0;
        javax.management.remote.JMXServiceURL $r2;
        javax.management.remote.JMXConnector $r3, $r4;

        r0 := @this: org.springframework.jmx.support.MBeanServerConnectionFactoryBean;

        $r2 = r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: javax.management.remote.JMXServiceURL serviceUrl>;

        $r1 = r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: java.util.Map environment>;

        $r3 = staticinvoke <javax.management.remote.JMXConnectorFactory: javax.management.remote.JMXConnector connect(javax.management.remote.JMXServiceURL,java.util.Map)>($r2, $r1);

        r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: javax.management.remote.JMXConnector connector> = $r3;

        $r4 = r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: javax.management.remote.JMXConnector connector>;

        $r5 = interfaceinvoke $r4.<javax.management.remote.JMXConnector: javax.management.MBeanServerConnection getMBeanServerConnection()>();

        r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: javax.management.MBeanServerConnection connection> = $r5;

        return;
    }

    private void createLazyConnection()
    {
        javax.management.MBeanServerConnection $r11;
        org.springframework.jmx.support.MBeanServerConnectionFactoryBean$MBeanServerConnectionLazyInitTargetSource $r2;
        org.springframework.jmx.support.MBeanServerConnectionFactoryBean r0;
        org.springframework.jmx.support.MBeanServerConnectionFactoryBean$JMXConnectorLazyInitTargetSource $r1, $r4;
        org.springframework.aop.framework.ProxyFactory $r3, $r8;
        java.lang.Object $r6, $r10;
        java.lang.ClassLoader $r5, $r9;
        javax.management.remote.JMXConnector $r7;

        r0 := @this: org.springframework.jmx.support.MBeanServerConnectionFactoryBean;

        $r1 = new org.springframework.jmx.support.MBeanServerConnectionFactoryBean$JMXConnectorLazyInitTargetSource;

        specialinvoke $r1.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean$JMXConnectorLazyInitTargetSource: void <init>(org.springframework.jmx.support.MBeanServerConnectionFactoryBean,org.springframework.jmx.support.MBeanServerConnectionFactoryBean$JMXConnectorLazyInitTargetSource)>(r0, null);

        r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: org.springframework.jmx.support.MBeanServerConnectionFactoryBean$JMXConnectorLazyInitTargetSource connectorTargetSource> = $r1;

        $r2 = new org.springframework.jmx.support.MBeanServerConnectionFactoryBean$MBeanServerConnectionLazyInitTargetSource;

        specialinvoke $r2.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean$MBeanServerConnectionLazyInitTargetSource: void <init>(org.springframework.jmx.support.MBeanServerConnectionFactoryBean,org.springframework.jmx.support.MBeanServerConnectionFactoryBean$MBeanServerConnectionLazyInitTargetSource)>(r0, null);

        $r3 = new org.springframework.aop.framework.ProxyFactory;

        $r4 = r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: org.springframework.jmx.support.MBeanServerConnectionFactoryBean$JMXConnectorLazyInitTargetSource connectorTargetSource>;

        specialinvoke $r3.<org.springframework.aop.framework.ProxyFactory: void <init>(java.lang.Class,org.springframework.aop.TargetSource)>(class "Ljavax/management/remote/JMXConnector;", $r4);

        $r5 = r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: java.lang.ClassLoader beanClassLoader>;

        $r6 = virtualinvoke $r3.<org.springframework.aop.framework.ProxyFactory: java.lang.Object getProxy(java.lang.ClassLoader)>($r5);

        $r7 = (javax.management.remote.JMXConnector) $r6;

        r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: javax.management.remote.JMXConnector connector> = $r7;

        $r8 = new org.springframework.aop.framework.ProxyFactory;

        specialinvoke $r8.<org.springframework.aop.framework.ProxyFactory: void <init>(java.lang.Class,org.springframework.aop.TargetSource)>(class "Ljavax/management/MBeanServerConnection;", $r2);

        $r9 = r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: java.lang.ClassLoader beanClassLoader>;

        $r10 = virtualinvoke $r8.<org.springframework.aop.framework.ProxyFactory: java.lang.Object getProxy(java.lang.ClassLoader)>($r9);

        $r11 = (javax.management.MBeanServerConnection) $r10;

        r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: javax.management.MBeanServerConnection connection> = $r11;

        return;
    }

    public javax.management.MBeanServerConnection getObject()
    {
        org.springframework.jmx.support.MBeanServerConnectionFactoryBean r0;
        javax.management.MBeanServerConnection $r1;

        r0 := @this: org.springframework.jmx.support.MBeanServerConnectionFactoryBean;

        $r1 = r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: javax.management.MBeanServerConnection connection>;

        return $r1;
    }

    public java.lang.Class getObjectType()
    {
        javax.management.MBeanServerConnection $r1, $r2;
        org.springframework.jmx.support.MBeanServerConnectionFactoryBean r0;
        java.lang.Class $r3;

        r0 := @this: org.springframework.jmx.support.MBeanServerConnectionFactoryBean;

        $r1 = r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: javax.management.MBeanServerConnection connection>;

        if $r1 == null goto label1;

        $r2 = r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: javax.management.MBeanServerConnection connection>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        goto label2;

     label1:
        $r3 = class "Ljavax/management/MBeanServerConnection;";

     label2:
        return $r3;
    }

    public boolean isSingleton()
    {
        org.springframework.jmx.support.MBeanServerConnectionFactoryBean r0;

        r0 := @this: org.springframework.jmx.support.MBeanServerConnectionFactoryBean;

        return 1;
    }

    public void destroy() throws java.io.IOException
    {
        org.springframework.jmx.support.MBeanServerConnectionFactoryBean r0;
        org.springframework.jmx.support.MBeanServerConnectionFactoryBean$JMXConnectorLazyInitTargetSource $r1, $r3;
        javax.management.remote.JMXConnector $r2;
        boolean $z0;

        r0 := @this: org.springframework.jmx.support.MBeanServerConnectionFactoryBean;

        $r1 = r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: org.springframework.jmx.support.MBeanServerConnectionFactoryBean$JMXConnectorLazyInitTargetSource connectorTargetSource>;

        if $r1 == null goto label1;

        $r3 = r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: org.springframework.jmx.support.MBeanServerConnectionFactoryBean$JMXConnectorLazyInitTargetSource connectorTargetSource>;

        $z0 = virtualinvoke $r3.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean$JMXConnectorLazyInitTargetSource: boolean isInitialized()>();

        if $z0 == 0 goto label2;

     label1:
        $r2 = r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: javax.management.remote.JMXConnector connector>;

        interfaceinvoke $r2.<javax.management.remote.JMXConnector: void close()>();

     label2:
        return;
    }

    public volatile java.lang.Object getObject() throws java.lang.Exception
    {
        org.springframework.jmx.support.MBeanServerConnectionFactoryBean r0;
        javax.management.MBeanServerConnection $r1;

        r0 := @this: org.springframework.jmx.support.MBeanServerConnectionFactoryBean;

        $r1 = virtualinvoke r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: javax.management.MBeanServerConnection getObject()>();

        return $r1;
    }

    static javax.management.remote.JMXServiceURL access$1(org.springframework.jmx.support.MBeanServerConnectionFactoryBean)
    {
        org.springframework.jmx.support.MBeanServerConnectionFactoryBean r0;
        javax.management.remote.JMXServiceURL $r1;

        r0 := @parameter0: org.springframework.jmx.support.MBeanServerConnectionFactoryBean;

        $r1 = r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: javax.management.remote.JMXServiceURL serviceUrl>;

        return $r1;
    }

    static java.util.Map access$2(org.springframework.jmx.support.MBeanServerConnectionFactoryBean)
    {
        org.springframework.jmx.support.MBeanServerConnectionFactoryBean r0;
        java.util.Map $r1;

        r0 := @parameter0: org.springframework.jmx.support.MBeanServerConnectionFactoryBean;

        $r1 = r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: java.util.Map environment>;

        return $r1;
    }

    static javax.management.remote.JMXConnector access$3(org.springframework.jmx.support.MBeanServerConnectionFactoryBean)
    {
        org.springframework.jmx.support.MBeanServerConnectionFactoryBean r0;
        javax.management.remote.JMXConnector $r1;

        r0 := @parameter0: org.springframework.jmx.support.MBeanServerConnectionFactoryBean;

        $r1 = r0.<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: javax.management.remote.JMXConnector connector>;

        return $r1;
    }
}
