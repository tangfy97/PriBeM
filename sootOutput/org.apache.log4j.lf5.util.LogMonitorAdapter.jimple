public class org.apache.log4j.lf5.util.LogMonitorAdapter extends java.lang.Object
{
    public static final int LOG4J_LOG_LEVELS;
    public static final int JDK14_LOG_LEVELS;
    private org.apache.log4j.lf5.viewer.LogBrokerMonitor _logMonitor;
    private org.apache.log4j.lf5.LogLevel _defaultLevel;

    private void <init>(java.util.List)
    {
        org.apache.log4j.lf5.viewer.LogBrokerMonitor $r4, $r5, $r6, $r7;
        org.apache.log4j.lf5.LogLevel $r3;
        java.util.List r1;
        int $i0, $i1;
        org.apache.log4j.lf5.util.LogMonitorAdapter r0;
        java.lang.Object $r2;

        r0 := @this: org.apache.log4j.lf5.util.LogMonitorAdapter;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.LogLevel _defaultLevel> = null;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (org.apache.log4j.lf5.LogLevel) $r2;

        r0.<org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.LogLevel _defaultLevel> = $r3;

        $r4 = new org.apache.log4j.lf5.viewer.LogBrokerMonitor;

        specialinvoke $r4.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void <init>(java.util.List)>(r1);

        r0.<org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.viewer.LogBrokerMonitor _logMonitor> = $r4;

        $r5 = r0.<org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.viewer.LogBrokerMonitor _logMonitor>;

        $i0 = staticinvoke <org.apache.log4j.lf5.util.LogMonitorAdapter: int getDefaultMonitorWidth()>();

        $i1 = staticinvoke <org.apache.log4j.lf5.util.LogMonitorAdapter: int getDefaultMonitorHeight()>();

        virtualinvoke $r5.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void setFrameSize(int,int)>($i0, $i1);

        $r6 = r0.<org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.viewer.LogBrokerMonitor _logMonitor>;

        virtualinvoke $r6.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void setFontSize(int)>(12);

        $r7 = r0.<org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.viewer.LogBrokerMonitor _logMonitor>;

        virtualinvoke $r7.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void show()>();

        return;
    }

    public static org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(int)
    {
        org.apache.log4j.lf5.LogLevel $r2, $r3, $r6, $r7;
        java.util.List $r0, $r4;
        int i0;
        org.apache.log4j.lf5.util.LogMonitorAdapter $r1, $r5, r8;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        $r4 = staticinvoke <org.apache.log4j.lf5.LogLevel: java.util.List getJdk14Levels()>();

        $r5 = staticinvoke <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>($r4);

        r8 = $r5;

        $r6 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel FINEST>;

        virtualinvoke $r5.<org.apache.log4j.lf5.util.LogMonitorAdapter: void setDefaultLevel(org.apache.log4j.lf5.LogLevel)>($r6);

        $r7 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel SEVERE>;

        virtualinvoke $r5.<org.apache.log4j.lf5.util.LogMonitorAdapter: void setSevereLevel(org.apache.log4j.lf5.LogLevel)>($r7);

        goto label2;

     label1:
        $r0 = staticinvoke <org.apache.log4j.lf5.LogLevel: java.util.List getLog4JLevels()>();

        $r1 = staticinvoke <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>($r0);

        r8 = $r1;

        $r2 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel DEBUG>;

        virtualinvoke $r1.<org.apache.log4j.lf5.util.LogMonitorAdapter: void setDefaultLevel(org.apache.log4j.lf5.LogLevel)>($r2);

        $r3 = <org.apache.log4j.lf5.LogLevel: org.apache.log4j.lf5.LogLevel FATAL>;

        virtualinvoke $r1.<org.apache.log4j.lf5.util.LogMonitorAdapter: void setSevereLevel(org.apache.log4j.lf5.LogLevel)>($r3);

     label2:
        return r8;
    }

    public static org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(org.apache.log4j.lf5.LogLevel[])
    {
        java.util.List $r1;
        org.apache.log4j.lf5.util.LogMonitorAdapter $r2;
        org.apache.log4j.lf5.LogLevel[] r0;

        r0 := @parameter0: org.apache.log4j.lf5.LogLevel[];

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        $r2 = staticinvoke <org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)>($r1);

        return $r2;
    }

    public static org.apache.log4j.lf5.util.LogMonitorAdapter newInstance(java.util.List)
    {
        org.apache.log4j.lf5.util.LogMonitorAdapter $r0;
        java.util.List r1;

        r1 := @parameter0: java.util.List;

        $r0 = new org.apache.log4j.lf5.util.LogMonitorAdapter;

        specialinvoke $r0.<org.apache.log4j.lf5.util.LogMonitorAdapter: void <init>(java.util.List)>(r1);

        return $r0;
    }

    public void addMessage(org.apache.log4j.lf5.LogRecord)
    {
        org.apache.log4j.lf5.LogRecord r1;
        org.apache.log4j.lf5.util.LogMonitorAdapter r0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor $r2;

        r0 := @this: org.apache.log4j.lf5.util.LogMonitorAdapter;

        r1 := @parameter0: org.apache.log4j.lf5.LogRecord;

        $r2 = r0.<org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.viewer.LogBrokerMonitor _logMonitor>;

        virtualinvoke $r2.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void addMessage(org.apache.log4j.lf5.LogRecord)>(r1);

        return;
    }

    public void setMaxNumberOfRecords(int)
    {
        int i0;
        org.apache.log4j.lf5.util.LogMonitorAdapter r0;
        org.apache.log4j.lf5.viewer.LogBrokerMonitor $r1;

        r0 := @this: org.apache.log4j.lf5.util.LogMonitorAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.viewer.LogBrokerMonitor _logMonitor>;

        virtualinvoke $r1.<org.apache.log4j.lf5.viewer.LogBrokerMonitor: void setMaxNumberOfLogRecords(int)>(i0);

        return;
    }

    public void setDefaultLevel(org.apache.log4j.lf5.LogLevel)
    {
        org.apache.log4j.lf5.util.LogMonitorAdapter r0;
        org.apache.log4j.lf5.LogLevel r1;

        r0 := @this: org.apache.log4j.lf5.util.LogMonitorAdapter;

        r1 := @parameter0: org.apache.log4j.lf5.LogLevel;

        r0.<org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.LogLevel _defaultLevel> = r1;

        return;
    }

    public org.apache.log4j.lf5.LogLevel getDefaultLevel()
    {
        org.apache.log4j.lf5.util.LogMonitorAdapter r0;
        org.apache.log4j.lf5.LogLevel $r1;

        r0 := @this: org.apache.log4j.lf5.util.LogMonitorAdapter;

        $r1 = r0.<org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.LogLevel _defaultLevel>;

        return $r1;
    }

    public void setSevereLevel(org.apache.log4j.lf5.LogLevel)
    {
        org.apache.log4j.lf5.util.LogMonitorAdapter r1;
        org.apache.log4j.lf5.LogLevel r0;

        r1 := @this: org.apache.log4j.lf5.util.LogMonitorAdapter;

        r0 := @parameter0: org.apache.log4j.lf5.LogLevel;

        staticinvoke <org.apache.log4j.lf5.util.AdapterLogRecord: void setSevereLevel(org.apache.log4j.lf5.LogLevel)>(r0);

        return;
    }

    public org.apache.log4j.lf5.LogLevel getSevereLevel()
    {
        org.apache.log4j.lf5.util.LogMonitorAdapter r1;
        org.apache.log4j.lf5.LogLevel $r0;

        r1 := @this: org.apache.log4j.lf5.util.LogMonitorAdapter;

        $r0 = staticinvoke <org.apache.log4j.lf5.util.AdapterLogRecord: org.apache.log4j.lf5.LogLevel getSevereLevel()>();

        return $r0;
    }

    public void log(java.lang.String, org.apache.log4j.lf5.LogLevel, java.lang.String, java.lang.Throwable, java.lang.String)
    {
        java.lang.Throwable r4;
        org.apache.log4j.lf5.LogLevel r5, $r7;
        org.apache.log4j.lf5.util.AdapterLogRecord $r0;
        org.apache.log4j.lf5.util.LogMonitorAdapter r6;
        java.lang.String r1, r2, r3;

        r6 := @this: org.apache.log4j.lf5.util.LogMonitorAdapter;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: org.apache.log4j.lf5.LogLevel;

        r2 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Throwable;

        r3 := @parameter4: java.lang.String;

        $r0 = new org.apache.log4j.lf5.util.AdapterLogRecord;

        specialinvoke $r0.<org.apache.log4j.lf5.util.AdapterLogRecord: void <init>()>();

        virtualinvoke $r0.<org.apache.log4j.lf5.util.AdapterLogRecord: void setCategory(java.lang.String)>(r1);

        virtualinvoke $r0.<org.apache.log4j.lf5.LogRecord: void setMessage(java.lang.String)>(r2);

        virtualinvoke $r0.<org.apache.log4j.lf5.LogRecord: void setNDC(java.lang.String)>(r3);

        virtualinvoke $r0.<org.apache.log4j.lf5.LogRecord: void setThrown(java.lang.Throwable)>(r4);

        if r5 != null goto label1;

        $r7 = virtualinvoke r6.<org.apache.log4j.lf5.util.LogMonitorAdapter: org.apache.log4j.lf5.LogLevel getDefaultLevel()>();

        virtualinvoke $r0.<org.apache.log4j.lf5.LogRecord: void setLevel(org.apache.log4j.lf5.LogLevel)>($r7);

        goto label2;

     label1:
        virtualinvoke $r0.<org.apache.log4j.lf5.LogRecord: void setLevel(org.apache.log4j.lf5.LogLevel)>(r5);

     label2:
        virtualinvoke r6.<org.apache.log4j.lf5.util.LogMonitorAdapter: void addMessage(org.apache.log4j.lf5.LogRecord)>($r0);

        return;
    }

    public void log(java.lang.String, java.lang.String)
    {
        org.apache.log4j.lf5.util.LogMonitorAdapter r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.log4j.lf5.util.LogMonitorAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.log4j.lf5.util.LogMonitorAdapter: void log(java.lang.String,org.apache.log4j.lf5.LogLevel,java.lang.String)>(r1, null, r2);

        return;
    }

    public void log(java.lang.String, org.apache.log4j.lf5.LogLevel, java.lang.String, java.lang.String)
    {
        org.apache.log4j.lf5.util.LogMonitorAdapter r0;
        java.lang.String r1, r3, r4;
        org.apache.log4j.lf5.LogLevel r2;

        r0 := @this: org.apache.log4j.lf5.util.LogMonitorAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.log4j.lf5.LogLevel;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        virtualinvoke r0.<org.apache.log4j.lf5.util.LogMonitorAdapter: void log(java.lang.String,org.apache.log4j.lf5.LogLevel,java.lang.String,java.lang.Throwable,java.lang.String)>(r1, r2, r3, null, r4);

        return;
    }

    public void log(java.lang.String, org.apache.log4j.lf5.LogLevel, java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r4;
        org.apache.log4j.lf5.util.LogMonitorAdapter r0;
        java.lang.String r1, r3;
        org.apache.log4j.lf5.LogLevel r2;

        r0 := @this: org.apache.log4j.lf5.util.LogMonitorAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.log4j.lf5.LogLevel;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Throwable;

        virtualinvoke r0.<org.apache.log4j.lf5.util.LogMonitorAdapter: void log(java.lang.String,org.apache.log4j.lf5.LogLevel,java.lang.String,java.lang.Throwable,java.lang.String)>(r1, r2, r3, r4, null);

        return;
    }

    public void log(java.lang.String, org.apache.log4j.lf5.LogLevel, java.lang.String)
    {
        org.apache.log4j.lf5.util.LogMonitorAdapter r0;
        java.lang.String r1, r3;
        org.apache.log4j.lf5.LogLevel r2;

        r0 := @this: org.apache.log4j.lf5.util.LogMonitorAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.log4j.lf5.LogLevel;

        r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<org.apache.log4j.lf5.util.LogMonitorAdapter: void log(java.lang.String,org.apache.log4j.lf5.LogLevel,java.lang.String,java.lang.Throwable,java.lang.String)>(r1, r2, r3, null, null);

        return;
    }

    protected static int getScreenWidth()
    {
        java.lang.Throwable $r2;
        java.awt.Dimension $r1;
        int $i0;
        java.awt.Toolkit $r0;

     label1:
        $r0 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r1 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Dimension getScreenSize()>();

        $i0 = $r1.<java.awt.Dimension: int width>;

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        return 800;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected static int getScreenHeight()
    {
        java.lang.Throwable $r2;
        java.awt.Dimension $r1;
        int $i0;
        java.awt.Toolkit $r0;

     label1:
        $r0 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r1 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Dimension getScreenSize()>();

        $i0 = $r1.<java.awt.Dimension: int height>;

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        return 600;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected static int getDefaultMonitorWidth()
    {
        int $i0, $i1, $i2;

        $i0 = staticinvoke <org.apache.log4j.lf5.util.LogMonitorAdapter: int getScreenWidth()>();

        $i1 = 3 * $i0;

        $i2 = $i1 / 4;

        return $i2;
    }

    protected static int getDefaultMonitorHeight()
    {
        int $i0, $i1, $i2;

        $i0 = staticinvoke <org.apache.log4j.lf5.util.LogMonitorAdapter: int getScreenHeight()>();

        $i1 = 3 * $i0;

        $i2 = $i1 / 4;

        return $i2;
    }

    public static void <clinit>()
    {
        <org.apache.log4j.lf5.util.LogMonitorAdapter: int JDK14_LOG_LEVELS> = 1;

        <org.apache.log4j.lf5.util.LogMonitorAdapter: int LOG4J_LOG_LEVELS> = 0;

        return;
    }
}
