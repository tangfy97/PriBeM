public class org.joda.time.format.PeriodFormatter extends java.lang.Object
{
    private final org.joda.time.format.PeriodPrinter iPrinter;
    private final org.joda.time.format.PeriodParser iParser;
    private final java.util.Locale iLocale;
    private final org.joda.time.PeriodType iParseType;

    public void <init>(org.joda.time.format.PeriodPrinter, org.joda.time.format.PeriodParser)
    {
        org.joda.time.format.PeriodParser r2;
        org.joda.time.format.PeriodFormatter r0;
        org.joda.time.format.PeriodPrinter r1;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        r1 := @parameter0: org.joda.time.format.PeriodPrinter;

        r2 := @parameter1: org.joda.time.format.PeriodParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter iPrinter> = r1;

        r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser iParser> = r2;

        r0.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale> = null;

        r0.<org.joda.time.format.PeriodFormatter: org.joda.time.PeriodType iParseType> = null;

        return;
    }

    private void <init>(org.joda.time.format.PeriodPrinter, org.joda.time.format.PeriodParser, java.util.Locale, org.joda.time.PeriodType)
    {
        java.util.Locale r3;
        org.joda.time.format.PeriodParser r2;
        org.joda.time.format.PeriodFormatter r0;
        org.joda.time.PeriodType r4;
        org.joda.time.format.PeriodPrinter r1;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        r1 := @parameter0: org.joda.time.format.PeriodPrinter;

        r2 := @parameter1: org.joda.time.format.PeriodParser;

        r3 := @parameter2: java.util.Locale;

        r4 := @parameter3: org.joda.time.PeriodType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter iPrinter> = r1;

        r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser iParser> = r2;

        r0.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale> = r3;

        r0.<org.joda.time.format.PeriodFormatter: org.joda.time.PeriodType iParseType> = r4;

        return;
    }

    public boolean isPrinter()
    {
        org.joda.time.format.PeriodFormatter r0;
        org.joda.time.format.PeriodPrinter $r1;
        boolean $z0;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        $r1 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter iPrinter>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.joda.time.format.PeriodPrinter getPrinter()
    {
        org.joda.time.format.PeriodFormatter r0;
        org.joda.time.format.PeriodPrinter $r1;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        $r1 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter iPrinter>;

        return $r1;
    }

    public boolean isParser()
    {
        org.joda.time.format.PeriodParser $r1;
        org.joda.time.format.PeriodFormatter r0;
        boolean $z0;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        $r1 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser iParser>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.joda.time.format.PeriodParser getParser()
    {
        org.joda.time.format.PeriodParser $r1;
        org.joda.time.format.PeriodFormatter r0;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        $r1 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser iParser>;

        return $r1;
    }

    public org.joda.time.format.PeriodFormatter withLocale(java.util.Locale)
    {
        org.joda.time.format.PeriodFormatter r1, $r3;
        org.joda.time.PeriodType $r4;
        org.joda.time.format.PeriodPrinter $r6;
        java.util.Locale r0, $r2, $r7;
        org.joda.time.format.PeriodParser $r5;
        boolean $z0;

        r1 := @this: org.joda.time.format.PeriodFormatter;

        r0 := @parameter0: java.util.Locale;

        $r2 = virtualinvoke r1.<org.joda.time.format.PeriodFormatter: java.util.Locale getLocale()>();

        if r0 == $r2 goto label1;

        if r0 == null goto label2;

        $r7 = virtualinvoke r1.<org.joda.time.format.PeriodFormatter: java.util.Locale getLocale()>();

        $z0 = virtualinvoke r0.<java.util.Locale: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

     label1:
        return r1;

     label2:
        $r3 = new org.joda.time.format.PeriodFormatter;

        $r6 = r1.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter iPrinter>;

        $r5 = r1.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser iParser>;

        $r4 = r1.<org.joda.time.format.PeriodFormatter: org.joda.time.PeriodType iParseType>;

        specialinvoke $r3.<org.joda.time.format.PeriodFormatter: void <init>(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,java.util.Locale,org.joda.time.PeriodType)>($r6, $r5, r0, $r4);

        return $r3;
    }

    public java.util.Locale getLocale()
    {
        org.joda.time.format.PeriodFormatter r0;
        java.util.Locale $r1;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        $r1 = r0.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale>;

        return $r1;
    }

    public org.joda.time.format.PeriodFormatter withParseType(org.joda.time.PeriodType)
    {
        java.util.Locale $r4;
        org.joda.time.format.PeriodParser $r5;
        org.joda.time.PeriodType r0, $r2;
        org.joda.time.format.PeriodFormatter r1, $r3;
        org.joda.time.format.PeriodPrinter $r6;

        r1 := @this: org.joda.time.format.PeriodFormatter;

        r0 := @parameter0: org.joda.time.PeriodType;

        $r2 = r1.<org.joda.time.format.PeriodFormatter: org.joda.time.PeriodType iParseType>;

        if r0 != $r2 goto label1;

        return r1;

     label1:
        $r3 = new org.joda.time.format.PeriodFormatter;

        $r6 = r1.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter iPrinter>;

        $r5 = r1.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser iParser>;

        $r4 = r1.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale>;

        specialinvoke $r3.<org.joda.time.format.PeriodFormatter: void <init>(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,java.util.Locale,org.joda.time.PeriodType)>($r6, $r5, $r4, r0);

        return $r3;
    }

    public org.joda.time.PeriodType getParseType()
    {
        org.joda.time.format.PeriodFormatter r0;
        org.joda.time.PeriodType $r1;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        $r1 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.PeriodType iParseType>;

        return $r1;
    }

    public void printTo(java.lang.StringBuffer, org.joda.time.ReadablePeriod)
    {
        org.joda.time.ReadablePeriod r1;
        java.lang.StringBuffer r3;
        java.util.Locale $r4;
        org.joda.time.format.PeriodFormatter r0;
        org.joda.time.format.PeriodPrinter $r2;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        r3 := @parameter0: java.lang.StringBuffer;

        r1 := @parameter1: org.joda.time.ReadablePeriod;

        specialinvoke r0.<org.joda.time.format.PeriodFormatter: void checkPrinter()>();

        specialinvoke r0.<org.joda.time.format.PeriodFormatter: void checkPeriod(org.joda.time.ReadablePeriod)>(r1);

        $r2 = virtualinvoke r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter getPrinter()>();

        $r4 = r0.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale>;

        interfaceinvoke $r2.<org.joda.time.format.PeriodPrinter: void printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)>(r3, r1, $r4);

        return;
    }

    public void printTo(java.io.Writer, org.joda.time.ReadablePeriod) throws java.io.IOException
    {
        org.joda.time.ReadablePeriod r1;
        java.util.Locale $r4;
        java.io.Writer r3;
        org.joda.time.format.PeriodFormatter r0;
        org.joda.time.format.PeriodPrinter $r2;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        r3 := @parameter0: java.io.Writer;

        r1 := @parameter1: org.joda.time.ReadablePeriod;

        specialinvoke r0.<org.joda.time.format.PeriodFormatter: void checkPrinter()>();

        specialinvoke r0.<org.joda.time.format.PeriodFormatter: void checkPeriod(org.joda.time.ReadablePeriod)>(r1);

        $r2 = virtualinvoke r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter getPrinter()>();

        $r4 = r0.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale>;

        interfaceinvoke $r2.<org.joda.time.format.PeriodPrinter: void printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)>(r3, r1, $r4);

        return;
    }

    public java.lang.String print(org.joda.time.ReadablePeriod)
    {
        org.joda.time.format.PeriodFormatter r0;
        org.joda.time.format.PeriodPrinter $r2;
        org.joda.time.ReadablePeriod r1;
        java.lang.StringBuffer $r3;
        java.util.Locale $r4, $r5;
        int $i0;
        java.lang.String $r6;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        r1 := @parameter0: org.joda.time.ReadablePeriod;

        specialinvoke r0.<org.joda.time.format.PeriodFormatter: void checkPrinter()>();

        specialinvoke r0.<org.joda.time.format.PeriodFormatter: void checkPeriod(org.joda.time.ReadablePeriod)>(r1);

        $r2 = virtualinvoke r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter getPrinter()>();

        $r3 = new java.lang.StringBuffer;

        $r4 = r0.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale>;

        $i0 = interfaceinvoke $r2.<org.joda.time.format.PeriodPrinter: int calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)>(r1, $r4);

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(int)>($i0);

        $r5 = r0.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale>;

        interfaceinvoke $r2.<org.joda.time.format.PeriodPrinter: void printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)>($r3, r1, $r5);

        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    private void checkPrinter()
    {
        java.lang.UnsupportedOperationException $r2;
        org.joda.time.format.PeriodFormatter r0;
        org.joda.time.format.PeriodPrinter $r1;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        $r1 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodPrinter iPrinter>;

        if $r1 != null goto label1;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Printing not supported");

        throw $r2;

     label1:
        return;
    }

    private void checkPeriod(org.joda.time.ReadablePeriod)
    {
        org.joda.time.ReadablePeriod r0;
        java.lang.IllegalArgumentException $r1;
        org.joda.time.format.PeriodFormatter r2;

        r2 := @this: org.joda.time.format.PeriodFormatter;

        r0 := @parameter0: org.joda.time.ReadablePeriod;

        if r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Period must not be null");

        throw $r1;

     label1:
        return;
    }

    public int parseInto(org.joda.time.ReadWritablePeriod, java.lang.String, int)
    {
        org.joda.time.ReadWritablePeriod r1;
        java.util.Locale $r4;
        org.joda.time.format.PeriodParser $r2;
        int i0, $i1;
        java.lang.String r3;
        org.joda.time.format.PeriodFormatter r0;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        r1 := @parameter0: org.joda.time.ReadWritablePeriod;

        r3 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<org.joda.time.format.PeriodFormatter: void checkParser()>();

        specialinvoke r0.<org.joda.time.format.PeriodFormatter: void checkPeriod(org.joda.time.ReadablePeriod)>(r1);

        $r2 = virtualinvoke r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser getParser()>();

        $r4 = r0.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale>;

        $i1 = interfaceinvoke $r2.<org.joda.time.format.PeriodParser: int parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)>(r1, r3, i0, $r4);

        return $i1;
    }

    public org.joda.time.Period parsePeriod(java.lang.String)
    {
        org.joda.time.Period $r3;
        java.lang.String r1;
        org.joda.time.MutablePeriod $r2;
        org.joda.time.format.PeriodFormatter r0;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.joda.time.format.PeriodFormatter: void checkParser()>();

        $r2 = virtualinvoke r0.<org.joda.time.format.PeriodFormatter: org.joda.time.MutablePeriod parseMutablePeriod(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<org.joda.time.MutablePeriod: org.joda.time.Period toPeriod()>();

        return $r3;
    }

    public org.joda.time.MutablePeriod parseMutablePeriod(java.lang.String)
    {
        org.joda.time.MutablePeriod $r8;
        org.joda.time.format.PeriodFormatter r0;
        org.joda.time.PeriodType $r2;
        java.lang.IllegalArgumentException $r9;
        java.util.Locale $r5;
        org.joda.time.format.PeriodParser $r3;
        int $i0, $i1, i2, $i4;
        java.lang.String r4, $r7;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        r4 := @parameter0: java.lang.String;

        specialinvoke r0.<org.joda.time.format.PeriodFormatter: void checkParser()>();

        $r8 = new org.joda.time.MutablePeriod;

        $r2 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.PeriodType iParseType>;

        specialinvoke $r8.<org.joda.time.MutablePeriod: void <init>(long,org.joda.time.PeriodType)>(0L, $r2);

        $r3 = virtualinvoke r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser getParser()>();

        $r5 = r0.<org.joda.time.format.PeriodFormatter: java.util.Locale iLocale>;

        $i0 = interfaceinvoke $r3.<org.joda.time.format.PeriodParser: int parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)>($r8, r4, 0, $r5);

        i2 = $i0;

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i0 < $i1 goto label2;

        return $r8;

     label1:
        $i4 = (int) -1;

        i2 = $i0 ^ $i4;

     label2:
        $r9 = new java.lang.IllegalArgumentException;

        $r7 = staticinvoke <org.joda.time.format.FormatUtils: java.lang.String createErrorMessage(java.lang.String,int)>(r4, i2);

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r9;
    }

    private void checkParser()
    {
        org.joda.time.format.PeriodParser $r1;
        java.lang.UnsupportedOperationException $r2;
        org.joda.time.format.PeriodFormatter r0;

        r0 := @this: org.joda.time.format.PeriodFormatter;

        $r1 = r0.<org.joda.time.format.PeriodFormatter: org.joda.time.format.PeriodParser iParser>;

        if $r1 != null goto label1;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Parsing not supported");

        throw $r2;

     label1:
        return;
    }
}
