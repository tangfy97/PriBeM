public class org.apache.batik.parser.TimingSpecifierListParser extends org.apache.batik.parser.TimingSpecifierParser
{

    public void <init>(boolean, boolean)
    {
        org.apache.batik.parser.TimingSpecifierListHandler $r1;
        org.apache.batik.parser.TimingSpecifierListParser r0;
        boolean z0, z1;

        r0 := @this: org.apache.batik.parser.TimingSpecifierListParser;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        specialinvoke r0.<org.apache.batik.parser.TimingSpecifierParser: void <init>(boolean,boolean)>(z0, z1);

        $r1 = <org.apache.batik.parser.DefaultTimingSpecifierListHandler: org.apache.batik.parser.TimingSpecifierListHandler INSTANCE>;

        r0.<org.apache.batik.parser.TimingSpecifierParser: org.apache.batik.parser.TimingSpecifierHandler timingSpecifierHandler> = $r1;

        return;
    }

    public void setTimingSpecifierListHandler(org.apache.batik.parser.TimingSpecifierListHandler)
    {
        org.apache.batik.parser.TimingSpecifierListHandler r1;
        org.apache.batik.parser.TimingSpecifierListParser r0;

        r0 := @this: org.apache.batik.parser.TimingSpecifierListParser;

        r1 := @parameter0: org.apache.batik.parser.TimingSpecifierListHandler;

        r0.<org.apache.batik.parser.TimingSpecifierParser: org.apache.batik.parser.TimingSpecifierHandler timingSpecifierHandler> = r1;

        return;
    }

    public org.apache.batik.parser.TimingSpecifierListHandler getTimingSpecifierListHandler()
    {
        org.apache.batik.parser.TimingSpecifierHandler $r1;
        org.apache.batik.parser.TimingSpecifierListHandler $r2;
        org.apache.batik.parser.TimingSpecifierListParser r0;

        r0 := @this: org.apache.batik.parser.TimingSpecifierListParser;

        $r1 = r0.<org.apache.batik.parser.TimingSpecifierParser: org.apache.batik.parser.TimingSpecifierHandler timingSpecifierHandler>;

        $r2 = (org.apache.batik.parser.TimingSpecifierListHandler) $r1;

        return $r2;
    }

    protected void doParse() throws org.apache.batik.parser.ParseException, java.io.IOException
    {
        java.lang.Object[] $r7;
        org.apache.batik.util.io.NormalizingReader $r1, $r6;
        org.apache.batik.parser.TimingSpecifierHandler $r2, $r4;
        org.apache.batik.parser.TimingSpecifierListParser r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i11, $i13;
        org.apache.batik.parser.TimingSpecifierListHandler $r3, $r5;

        r0 := @this: org.apache.batik.parser.TimingSpecifierListParser;

        $r1 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i0 = virtualinvoke $r1.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i0;

        $r2 = r0.<org.apache.batik.parser.TimingSpecifierParser: org.apache.batik.parser.TimingSpecifierHandler timingSpecifierHandler>;

        $r3 = (org.apache.batik.parser.TimingSpecifierListHandler) $r2;

        interfaceinvoke $r3.<org.apache.batik.parser.TimingSpecifierListHandler: void startTimingSpecifierList()>();

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void skipSpaces()>();

        $i1 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        $i9 = (int) -1;

        if $i1 == $i9 goto label4;

        goto label1;

     label1:
        $r7 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: java.lang.Object[] parseTimingSpecifier()>();

        virtualinvoke r0.<org.apache.batik.parser.TimingSpecifierParser: void handleTimingSpecifier(java.lang.Object[])>($r7);

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void skipSpaces()>();

        $i7 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        $i11 = (int) -1;

        if $i7 != $i11 goto label2;

        goto label4;

     label2:
        $i4 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i4 != 59 goto label3;

        $r6 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i6 = virtualinvoke $r6.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i6;

        goto label1;

     label3:
        $i5 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i5);

        goto label1;

     label4:
        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void skipSpaces()>();

        $i2 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        $i13 = (int) -1;

        if $i2 == $i13 goto label5;

        $i3 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i3);

     label5:
        $r4 = r0.<org.apache.batik.parser.TimingSpecifierParser: org.apache.batik.parser.TimingSpecifierHandler timingSpecifierHandler>;

        $r5 = (org.apache.batik.parser.TimingSpecifierListHandler) $r4;

        interfaceinvoke $r5.<org.apache.batik.parser.TimingSpecifierListHandler: void endTimingSpecifierList()>();

        return;
    }
}
