public class org.apache.poi.hwpf.converter.HtmlDocumentFacade extends java.lang.Object
{
    protected final org.w3c.dom.Element body;
    protected final org.w3c.dom.Document document;
    protected final org.w3c.dom.Element head;
    protected final org.w3c.dom.Element html;
    private java.util.Map stylesheet;
    private org.w3c.dom.Element stylesheetElement;
    protected org.w3c.dom.Element title;
    protected org.w3c.dom.Text titleText;

    public void <init>(org.w3c.dom.Document)
    {
        java.util.LinkedHashMap $r1;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        org.w3c.dom.Document r2;
        org.w3c.dom.Element $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        r2 := @parameter0: org.w3c.dom.Document;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: java.util.Map stylesheet> = $r1;

        r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document> = r2;

        $r3 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("html");

        r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element html> = $r3;

        $r4 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element html>;

        interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r4);

        $r5 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("body");

        r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element body> = $r5;

        $r6 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("head");

        r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element head> = $r6;

        $r7 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("style");

        r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element stylesheetElement> = $r7;

        $r8 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element stylesheetElement>;

        interfaceinvoke $r8.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("type", "text/css");

        $r10 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element html>;

        $r9 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element head>;

        interfaceinvoke $r10.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r9);

        $r12 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element html>;

        $r11 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element body>;

        interfaceinvoke $r12.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r11);

        $r14 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element head>;

        $r13 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element stylesheetElement>;

        interfaceinvoke $r14.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r13);

        $r15 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element body>;

        virtualinvoke r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: void addStyleClass(org.w3c.dom.Element,java.lang.String,java.lang.String)>($r15, "b", "white-space-collapsing:preserve;");

        return;
    }

    public void addAuthor(java.lang.String)
    {
        java.lang.String r1;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: void addMeta(java.lang.String,java.lang.String)>("author", r1);

        return;
    }

    public void addDescription(java.lang.String)
    {
        java.lang.String r1;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: void addMeta(java.lang.String,java.lang.String)>("description", r1);

        return;
    }

    public void addKeywords(java.lang.String)
    {
        java.lang.String r1;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: void addMeta(java.lang.String,java.lang.String)>("keywords", r1);

        return;
    }

    public void addMeta(java.lang.String, java.lang.String)
    {
        org.w3c.dom.Element $r2, $r5;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        org.w3c.dom.Document $r1;
        java.lang.String r3, r4;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("meta");

        interfaceinvoke $r2.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("name", r3);

        interfaceinvoke $r2.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("content", r4);

        $r5 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element head>;

        interfaceinvoke $r5.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r2);

        return;
    }

    public void addStyleClass(org.w3c.dom.Element, java.lang.String, java.lang.String)
    {
        org.w3c.dom.Element r0;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r2;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        java.lang.String $r1, r3, r4, $r5, $r10;
        boolean $z0;

        r2 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        r0 := @parameter0: org.w3c.dom.Element;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("class");

        $r5 = virtualinvoke r2.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: java.lang.String getOrCreateCssClass(java.lang.String,java.lang.String)>(r3, r4);

        $z0 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: boolean isEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r10 = $r5;

        goto label2;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        interfaceinvoke r0.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("class", $r10);

        return;
    }

    protected java.lang.String buildStylesheet(java.util.Map)
    {
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r15;
        java.util.Map r1, r6;
        java.lang.String $r4, r12, r14;
        boolean $z0, $z1;
        java.util.Map$Entry r10;
        java.util.Iterator $r3, $r8;
        java.util.Collection $r2;
        java.util.Set $r7;
        java.lang.StringBuilder $r0;
        java.lang.Object $r5, $r9, $r11, $r13;

        r15 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        r1 := @parameter0: java.util.Map;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.Map$Entry) $r9;

        $r11 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        r12 = (java.lang.String) $r11;

        $r13 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        r14 = (java.lang.String) $r13;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}\n");

        goto label2;

     label3:
        goto label1;

     label4:
        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public org.w3c.dom.Element createBlock()
    {
        org.w3c.dom.Element $r2;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        org.w3c.dom.Document $r1;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        $r1 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("div");

        return $r2;
    }

    public org.w3c.dom.Element createBookmark(java.lang.String)
    {
        org.w3c.dom.Element $r2;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        org.w3c.dom.Document $r1;
        java.lang.String r3;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("a");

        interfaceinvoke $r2.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("name", r3);

        return $r2;
    }

    public org.w3c.dom.Element createHeader1()
    {
        org.w3c.dom.Element $r2;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        org.w3c.dom.Document $r1;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        $r1 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("h1");

        return $r2;
    }

    public org.w3c.dom.Element createHeader2()
    {
        org.w3c.dom.Element $r2;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        org.w3c.dom.Document $r1;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        $r1 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("h2");

        return $r2;
    }

    public org.w3c.dom.Element createHyperlink(java.lang.String)
    {
        org.w3c.dom.Element $r2;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        org.w3c.dom.Document $r1;
        java.lang.String r3;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("a");

        interfaceinvoke $r2.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("href", r3);

        return $r2;
    }

    public org.w3c.dom.Element createImage(java.lang.String)
    {
        org.w3c.dom.Element $r2;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        org.w3c.dom.Document $r1;
        java.lang.String r3;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("img");

        interfaceinvoke $r2.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("src", r3);

        return $r2;
    }

    public org.w3c.dom.Element createLineBreak()
    {
        org.w3c.dom.Element $r2;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        org.w3c.dom.Document $r1;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        $r1 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("br");

        return $r2;
    }

    public org.w3c.dom.Element createListItem()
    {
        org.w3c.dom.Element $r2;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        org.w3c.dom.Document $r1;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        $r1 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("li");

        return $r2;
    }

    public org.w3c.dom.Element createOption(java.lang.String, boolean)
    {
        org.w3c.dom.Text $r4;
        org.w3c.dom.Element $r2;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        org.w3c.dom.Document $r1;
        java.lang.String r3;
        boolean z0;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        r3 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("option");

        $r4 = virtualinvoke r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Text createText(java.lang.String)>(r3);

        interfaceinvoke $r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r4);

        if z0 == 0 goto label1;

        interfaceinvoke $r2.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("selected", "selected");

     label1:
        return $r2;
    }

    public org.w3c.dom.Element createParagraph()
    {
        org.w3c.dom.Element $r2;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        org.w3c.dom.Document $r1;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        $r1 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("p");

        return $r2;
    }

    public org.w3c.dom.Element createSelect()
    {
        org.w3c.dom.Element $r2;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        org.w3c.dom.Document $r1;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        $r1 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("select");

        return $r2;
    }

    public org.w3c.dom.Element createTable()
    {
        org.w3c.dom.Element $r2;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        org.w3c.dom.Document $r1;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        $r1 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("table");

        return $r2;
    }

    public org.w3c.dom.Element createTableBody()
    {
        org.w3c.dom.Element $r2;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        org.w3c.dom.Document $r1;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        $r1 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("tbody");

        return $r2;
    }

    public org.w3c.dom.Element createTableCell()
    {
        org.w3c.dom.Element $r2;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        org.w3c.dom.Document $r1;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        $r1 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("td");

        return $r2;
    }

    public org.w3c.dom.Element createTableColumn()
    {
        org.w3c.dom.Element $r2;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        org.w3c.dom.Document $r1;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        $r1 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("col");

        return $r2;
    }

    public org.w3c.dom.Element createTableColumnGroup()
    {
        org.w3c.dom.Element $r2;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        org.w3c.dom.Document $r1;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        $r1 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("colgroup");

        return $r2;
    }

    public org.w3c.dom.Element createTableHeader()
    {
        org.w3c.dom.Element $r2;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        org.w3c.dom.Document $r1;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        $r1 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("thead");

        return $r2;
    }

    public org.w3c.dom.Element createTableHeaderCell()
    {
        org.w3c.dom.Element $r2;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        org.w3c.dom.Document $r1;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        $r1 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("th");

        return $r2;
    }

    public org.w3c.dom.Element createTableRow()
    {
        org.w3c.dom.Element $r2;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        org.w3c.dom.Document $r1;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        $r1 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("tr");

        return $r2;
    }

    public org.w3c.dom.Text createText(java.lang.String)
    {
        org.w3c.dom.Text $r3;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        org.w3c.dom.Document $r2;
        java.lang.String r1;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>(r1);

        return $r3;
    }

    public org.w3c.dom.Element createUnorderedList()
    {
        org.w3c.dom.Element $r2;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        org.w3c.dom.Document $r1;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        $r1 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("ul");

        return $r2;
    }

    public org.w3c.dom.Element getBody()
    {
        org.w3c.dom.Element $r1;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        $r1 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element body>;

        return $r1;
    }

    public org.w3c.dom.Document getDocument()
    {
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        org.w3c.dom.Document $r1;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        $r1 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        return $r1;
    }

    public org.w3c.dom.Element getHead()
    {
        org.w3c.dom.Element $r1;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        $r1 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element head>;

        return $r1;
    }

    public java.lang.String getOrCreateCssClass(java.lang.String, java.lang.String)
    {
        java.util.LinkedHashMap $r11;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        java.util.Map $r2, $r3, $r12, $r13;
        int $i0, $i1;
        java.lang.String r1, r5, $r10, $r14;
        boolean $z0;
        java.lang.Object $r4, $r6;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r2 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: java.util.Map stylesheet>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r12 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: java.util.Map stylesheet>;

        $r11 = new java.util.LinkedHashMap;

        specialinvoke $r11.<java.util.LinkedHashMap: void <init>(int)>(1);

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r11);

     label1:
        $r3 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: java.util.Map stylesheet>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r13 = (java.util.Map) $r4;

        $r6 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        $r14 = (java.lang.String) $r6;

        if $r14 == null goto label2;

        return $r14;

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $i0 = interfaceinvoke $r13.<java.util.Map: int size()>();

        $i1 = $i0 + 1;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r10);

        return $r10;
    }

    public java.lang.String getTitle()
    {
        org.w3c.dom.Text $r2;
        org.w3c.dom.Element $r1;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        java.lang.String $r3;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        $r1 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element title>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Text titleText>;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Text: java.lang.String getTextContent()>();

        return $r3;
    }

    public void setTitle(java.lang.String)
    {
        org.w3c.dom.Text $r2, $r6, $r7;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r1;
        org.w3c.dom.Document $r3, $r5;
        java.lang.String r0;
        boolean $z0;
        org.w3c.dom.Element $r4, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        r1 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r11 = r1.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element title>;

        if $r11 == null goto label1;

        $r13 = r1.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element head>;

        $r12 = r1.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element title>;

        interfaceinvoke $r13.<org.w3c.dom.Element: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>($r12);

        r1.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element title> = null;

        r1.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Text titleText> = null;

     label1:
        $r14 = r1.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element title>;

        if $r14 != null goto label2;

        $r3 = r1.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        $r4 = interfaceinvoke $r3.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("title");

        r1.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element title> = $r4;

        $r5 = r1.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Document document>;

        $r6 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>(r0);

        r1.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Text titleText> = $r6;

        $r8 = r1.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element title>;

        $r7 = r1.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Text titleText>;

        interfaceinvoke $r8.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r7);

        $r10 = r1.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element head>;

        $r9 = r1.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element title>;

        interfaceinvoke $r10.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r9);

     label2:
        $r2 = r1.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Text titleText>;

        interfaceinvoke $r2.<org.w3c.dom.Text: void setData(java.lang.String)>(r0);

        return;
    }

    public void updateStylesheet()
    {
        org.w3c.dom.Element $r2;
        org.apache.poi.hwpf.converter.HtmlDocumentFacade r0;
        java.util.Map $r1;
        java.lang.String $r3;

        r0 := @this: org.apache.poi.hwpf.converter.HtmlDocumentFacade;

        $r2 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: org.w3c.dom.Element stylesheetElement>;

        $r1 = r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: java.util.Map stylesheet>;

        $r3 = virtualinvoke r0.<org.apache.poi.hwpf.converter.HtmlDocumentFacade: java.lang.String buildStylesheet(java.util.Map)>($r1);

        interfaceinvoke $r2.<org.w3c.dom.Element: void setTextContent(java.lang.String)>($r3);

        return;
    }
}
