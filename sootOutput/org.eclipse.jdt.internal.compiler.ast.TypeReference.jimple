public abstract class org.eclipse.jdt.internal.compiler.ast.TypeReference extends org.eclipse.jdt.internal.compiler.ast.Expression
{

    public void <init>()
    {
        org.eclipse.jdt.internal.compiler.ast.TypeReference r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Expression: void <init>()>();

        return;
    }

    public static final org.eclipse.jdt.internal.compiler.ast.TypeReference baseTypeReference(int, int)
    {
        org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference $r0, $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24;
        int i0, i1;
        org.eclipse.jdt.internal.compiler.ast.SingleTypeReference $r27, $r30, $r33, $r36, $r39, $r42, $r45, $r48, $r51;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r1, $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37, $r40, $r43, $r46, $r49, $r52;
        char[] $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r47, $r50, $r53;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        if i0 != 0 goto label10;

        tableswitch(i1)
        {
            case 2: goto label03;
            case 3: goto label06;
            case 4: goto label07;
            case 5: goto label02;
            case 6: goto label01;
            case 7: goto label09;
            case 8: goto label05;
            case 9: goto label04;
            case 10: goto label08;
            default: goto label09;
        };

     label01:
        $r36 = new org.eclipse.jdt.internal.compiler.ast.SingleTypeReference;

        $r37 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding VOID>;

        $r38 = $r37.<org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding: char[] simpleName>;

        specialinvoke $r36.<org.eclipse.jdt.internal.compiler.ast.SingleTypeReference: void <init>(char[],long)>($r38, 0L);

        return $r36;

     label02:
        $r39 = new org.eclipse.jdt.internal.compiler.ast.SingleTypeReference;

        $r40 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding BOOLEAN>;

        $r41 = $r40.<org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding: char[] simpleName>;

        specialinvoke $r39.<org.eclipse.jdt.internal.compiler.ast.SingleTypeReference: void <init>(char[],long)>($r41, 0L);

        return $r39;

     label03:
        $r48 = new org.eclipse.jdt.internal.compiler.ast.SingleTypeReference;

        $r49 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding CHAR>;

        $r50 = $r49.<org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding: char[] simpleName>;

        specialinvoke $r48.<org.eclipse.jdt.internal.compiler.ast.SingleTypeReference: void <init>(char[],long)>($r50, 0L);

        return $r48;

     label04:
        $r30 = new org.eclipse.jdt.internal.compiler.ast.SingleTypeReference;

        $r31 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding FLOAT>;

        $r32 = $r31.<org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding: char[] simpleName>;

        specialinvoke $r30.<org.eclipse.jdt.internal.compiler.ast.SingleTypeReference: void <init>(char[],long)>($r32, 0L);

        return $r30;

     label05:
        $r33 = new org.eclipse.jdt.internal.compiler.ast.SingleTypeReference;

        $r34 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding DOUBLE>;

        $r35 = $r34.<org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding: char[] simpleName>;

        specialinvoke $r33.<org.eclipse.jdt.internal.compiler.ast.SingleTypeReference: void <init>(char[],long)>($r35, 0L);

        return $r33;

     label06:
        $r45 = new org.eclipse.jdt.internal.compiler.ast.SingleTypeReference;

        $r46 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding BYTE>;

        $r47 = $r46.<org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding: char[] simpleName>;

        specialinvoke $r45.<org.eclipse.jdt.internal.compiler.ast.SingleTypeReference: void <init>(char[],long)>($r47, 0L);

        return $r45;

     label07:
        $r42 = new org.eclipse.jdt.internal.compiler.ast.SingleTypeReference;

        $r43 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding SHORT>;

        $r44 = $r43.<org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding: char[] simpleName>;

        specialinvoke $r42.<org.eclipse.jdt.internal.compiler.ast.SingleTypeReference: void <init>(char[],long)>($r44, 0L);

        return $r42;

     label08:
        $r27 = new org.eclipse.jdt.internal.compiler.ast.SingleTypeReference;

        $r28 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding INT>;

        $r29 = $r28.<org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding: char[] simpleName>;

        specialinvoke $r27.<org.eclipse.jdt.internal.compiler.ast.SingleTypeReference: void <init>(char[],long)>($r29, 0L);

        return $r27;

     label09:
        $r51 = new org.eclipse.jdt.internal.compiler.ast.SingleTypeReference;

        $r52 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding LONG>;

        $r53 = $r52.<org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding: char[] simpleName>;

        specialinvoke $r51.<org.eclipse.jdt.internal.compiler.ast.SingleTypeReference: void <init>(char[],long)>($r53, 0L);

        return $r51;

     label10:
        tableswitch(i1)
        {
            case 2: goto label13;
            case 3: goto label16;
            case 4: goto label17;
            case 5: goto label12;
            case 6: goto label11;
            case 7: goto label19;
            case 8: goto label15;
            case 9: goto label14;
            case 10: goto label18;
            default: goto label19;
        };

     label11:
        $r9 = new org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference;

        $r10 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding VOID>;

        $r11 = $r10.<org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding: char[] simpleName>;

        specialinvoke $r9.<org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference: void <init>(char[],int,long)>($r11, i0, 0L);

        return $r9;

     label12:
        $r12 = new org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference;

        $r13 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding BOOLEAN>;

        $r14 = $r13.<org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding: char[] simpleName>;

        specialinvoke $r12.<org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference: void <init>(char[],int,long)>($r14, i0, 0L);

        return $r12;

     label13:
        $r21 = new org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference;

        $r22 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding CHAR>;

        $r23 = $r22.<org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding: char[] simpleName>;

        specialinvoke $r21.<org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference: void <init>(char[],int,long)>($r23, i0, 0L);

        return $r21;

     label14:
        $r3 = new org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference;

        $r4 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding FLOAT>;

        $r5 = $r4.<org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding: char[] simpleName>;

        specialinvoke $r3.<org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference: void <init>(char[],int,long)>($r5, i0, 0L);

        return $r3;

     label15:
        $r6 = new org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference;

        $r7 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding DOUBLE>;

        $r8 = $r7.<org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding: char[] simpleName>;

        specialinvoke $r6.<org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference: void <init>(char[],int,long)>($r8, i0, 0L);

        return $r6;

     label16:
        $r18 = new org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference;

        $r19 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding BYTE>;

        $r20 = $r19.<org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding: char[] simpleName>;

        specialinvoke $r18.<org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference: void <init>(char[],int,long)>($r20, i0, 0L);

        return $r18;

     label17:
        $r15 = new org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference;

        $r16 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding SHORT>;

        $r17 = $r16.<org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding: char[] simpleName>;

        specialinvoke $r15.<org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference: void <init>(char[],int,long)>($r17, i0, 0L);

        return $r15;

     label18:
        $r0 = new org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference;

        $r1 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding INT>;

        $r2 = $r1.<org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding: char[] simpleName>;

        specialinvoke $r0.<org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference: void <init>(char[],int,long)>($r2, i0, 0L);

        return $r0;

     label19:
        $r24 = new org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference;

        $r25 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding LONG>;

        $r26 = $r25.<org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding: char[] simpleName>;

        specialinvoke $r24.<org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference: void <init>(char[],int,long)>($r26, i0, 0L);

        return $r24;
    }

    public void aboutToResolve(org.eclipse.jdt.internal.compiler.lookup.Scope)
    {
        org.eclipse.jdt.internal.compiler.lookup.Scope r1;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Scope;

        return;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.flow.FlowContext r3;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r0;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowContext;

        r0 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        return r0;
    }

    public void checkBounds(org.eclipse.jdt.internal.compiler.lookup.Scope)
    {
        org.eclipse.jdt.internal.compiler.lookup.Scope r1;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Scope;

        return;
    }

    public abstract org.eclipse.jdt.internal.compiler.ast.TypeReference copyDims(int);

    public int dimensions()
    {
        org.eclipse.jdt.internal.compiler.ast.TypeReference r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        return 0;
    }

    public abstract char[] getLastToken();

    public char[][] getParameterizedTypeName()
    {
        org.eclipse.jdt.internal.compiler.ast.TypeReference r0;
        char[][] $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: char[][] getTypeName()>();

        return $r1;
    }

    protected abstract org.eclipse.jdt.internal.compiler.lookup.TypeBinding getTypeBinding(org.eclipse.jdt.internal.compiler.lookup.Scope);

    public abstract char[][] getTypeName();

    protected org.eclipse.jdt.internal.compiler.lookup.TypeBinding internalResolveType(org.eclipse.jdt.internal.compiler.lookup.Scope)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r9, $r13;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r2, $r4, $r6, $r7, $r12, $r14, $r15, $r16, $r17, $r18, $r20, $r21, r22;
        boolean $z0, $z1, $z2, $z3, $z4, z6, $z7, $z8;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r0;
        org.eclipse.jdt.internal.compiler.lookup.ArrayBinding $r10;
        org.eclipse.jdt.internal.compiler.impl.Constant $r1;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r8;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment $r5, $r19;
        org.eclipse.jdt.internal.compiler.lookup.Scope r3;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r11;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Scope;

        $r1 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r1;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        if $r2 == null goto label05;

        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $z4 = virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isValidBinding()>();

        if $z4 == 0 goto label01;

        $r21 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        return $r21;

     label01:
        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $i4 = virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int problemId()>();

        tableswitch($i4)
        {
            case 1: goto label02;
            case 2: goto label02;
            case 3: goto label04;
            case 4: goto label04;
            case 5: goto label02;
            default: goto label04;
        };

     label02:
        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r18 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding closestMatch()>();

        if $r18 != null goto label03;

        return null;

     label03:
        $r19 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment()>();

        $r20 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.TypeBinding convertToRawType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,boolean)>($r18, 0);

        return $r20;

     label04:
        return null;

     label05:
        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding getTypeBinding(org.eclipse.jdt.internal.compiler.lookup.Scope)>(r3);

        r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = $r4;

        r22 = $r4;

        if $r4 != null goto label06;

        return null;

     label06:
        $z0 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isValidBinding()>();

        if $z0 == 0 goto label07;

        $z8 = 0;

        $z7 = 0;

        goto label08;

     label07:
        $z8 = 1;

        $z7 = 1;

     label08:
        z6 = $z8;

        if $z7 == 0 goto label11;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: void reportInvalidType(org.eclipse.jdt.internal.compiler.lookup.Scope)>(r3);

        $i3 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int problemId()>();

        tableswitch($i3)
        {
            case 1: goto label09;
            case 2: goto label09;
            case 3: goto label10;
            case 4: goto label10;
            case 5: goto label09;
            default: goto label10;
        };

     label09:
        $r14 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding closestMatch()>();

        r22 = $r14;

        if $r14 != null goto label11;

        return null;

     label10:
        return null;

     label11:
        $z1 = virtualinvoke r22.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isArrayType()>();

        if $z1 == 0 goto label12;

        $r10 = (org.eclipse.jdt.internal.compiler.lookup.ArrayBinding) r22;

        $r12 = $r10.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType>;

        $r11 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding VOID>;

        if $r12 != $r11 goto label12;

        $r13 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void cannotAllocateVoidArray(org.eclipse.jdt.internal.compiler.ast.Expression)>(r0);

        return null;

     label12:
        $z2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: boolean isTypeUseDeprecated(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.Scope)>(r22, r3);

        if $z2 == 0 goto label13;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: void reportDeprecatedType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.Scope)>(r22, r3);

     label13:
        $r5 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment()>();

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.TypeBinding convertToRawType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,boolean)>(r22, 0);

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        $z3 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isRawType()>();

        if $z3 == 0 goto label14;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int bits>;

        $i1 = $i0 & 1073741824;

        if $i1 != 0 goto label14;

        $r8 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $i2 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: int getSeverity(long)>(35184372088832L);

        $i6 = (int) -1;

        if $i2 == $i6 goto label14;

        $r9 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void rawTypeReference(org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0, $r6);

     label14:
        if z6 == 0 goto label15;

        return $r6;

     label15:
        r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = $r6;

        return $r6;
    }

    public boolean isTypeReference()
    {
        org.eclipse.jdt.internal.compiler.ast.TypeReference r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        return 1;
    }

    protected void reportDeprecatedType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.Scope)
    {
        org.eclipse.jdt.internal.compiler.lookup.Scope r0;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r2;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r3;

        r3 := @this: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.Scope;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void deprecatedType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r2, r3);

        return;
    }

    protected void reportInvalidType(org.eclipse.jdt.internal.compiler.lookup.Scope)
    {
        org.eclipse.jdt.internal.compiler.lookup.Scope r0;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r3;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r2;

        r2 := @this: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Scope;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r3 = r2.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void invalidType(org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r2, $r3);

        return;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveSuperType(org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r7;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r0;
        org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding $r4;
        char[][] $r5;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r2, $r3, $r6;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $z0 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isTypeVariable()>();

        if $z0 == 0 goto label3;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $z1 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isValidBinding()>();

        if $z1 == 0 goto label2;

        $r4 = new org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding;

        $r5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: char[][] getTypeName()>();

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $r7 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r6;

        specialinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding: void <init>(char[][],org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,int)>($r5, $r7, 9);

        r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = $r4;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: void reportInvalidType(org.eclipse.jdt.internal.compiler.lookup.Scope)>(r1);

     label2:
        return null;

     label3:
        return $r2;
    }

    public final org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r2;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r1;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope,boolean)>(r1, 1);

        return $r2;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope, boolean)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r2;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r0;
        boolean z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding internalResolveType(org.eclipse.jdt.internal.compiler.lookup.Scope)>(r1);

        return $r2;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r2;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r1;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding internalResolveType(org.eclipse.jdt.internal.compiler.lookup.Scope)>(r1);

        return $r2;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveTypeArgument(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, int)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r1;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r3;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r2;
        int i0;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        i0 := @parameter2: int;

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope,boolean)>(r1, 1);

        return $r2;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveTypeArgument(org.eclipse.jdt.internal.compiler.lookup.ClassScope, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, int)
    {
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r1;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r3;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r2;
        int i0;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        i0 := @parameter2: int;

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r1);

        return $r2;
    }

    public abstract void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.BlockScope);

    public abstract void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.ClassScope);
}
