public final class com.mycila.inject.internal.guava.io.CountingOutputStream extends java.io.FilterOutputStream
{
    private long count;

    public void <init>(java.io.OutputStream)
    {
        java.io.OutputStream r1;
        com.mycila.inject.internal.guava.io.CountingOutputStream r0;

        r0 := @this: com.mycila.inject.internal.guava.io.CountingOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1);

        return;
    }

    public long getCount()
    {
        long $l0;
        com.mycila.inject.internal.guava.io.CountingOutputStream r0;

        r0 := @this: com.mycila.inject.internal.guava.io.CountingOutputStream;

        $l0 = r0.<com.mycila.inject.internal.guava.io.CountingOutputStream: long count>;

        return $l0;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        java.io.OutputStream $r2;
        byte[] r1;
        long $l2, $l3, $l4;
        com.mycila.inject.internal.guava.io.CountingOutputStream r0;
        int i0, i1;

        r0 := @this: com.mycila.inject.internal.guava.io.CountingOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.mycila.inject.internal.guava.io.CountingOutputStream: java.io.OutputStream out>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>(r1, i0, i1);

        $l3 = r0.<com.mycila.inject.internal.guava.io.CountingOutputStream: long count>;

        $l2 = (long) i1;

        $l4 = $l3 + $l2;

        r0.<com.mycila.inject.internal.guava.io.CountingOutputStream: long count> = $l4;

        return;
    }

    public void write(int) throws java.io.IOException
    {
        java.io.OutputStream $r1;
        int i0;
        long $l1, $l2;
        com.mycila.inject.internal.guava.io.CountingOutputStream r0;

        r0 := @this: com.mycila.inject.internal.guava.io.CountingOutputStream;

        i0 := @parameter0: int;

        $r1 = r0.<com.mycila.inject.internal.guava.io.CountingOutputStream: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(i0);

        $l1 = r0.<com.mycila.inject.internal.guava.io.CountingOutputStream: long count>;

        $l2 = $l1 + 1L;

        r0.<com.mycila.inject.internal.guava.io.CountingOutputStream: long count> = $l2;

        return;
    }
}
