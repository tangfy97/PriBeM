public final class edu.mit.csail.sdg.alloy4compiler.sim.SimTuple extends java.lang.Object implements java.lang.Iterable
{
    private edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array;
    private int hashCode;

    private void <init>(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[])
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] r1;
        int $i0;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple r0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: int hashCode> = 0;

        $i0 = lengthof r1;

        if $i0 != 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array> = r1;

        return;
    }

    public static edu.mit.csail.sdg.alloy4compiler.sim.SimTuple make(java.util.List)
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom $r4;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple $r2;
        java.lang.IllegalArgumentException $r5;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] r1;
        java.util.List r0;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r3;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label1:
        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        r1 = newarray (edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)[$i1];

        i3 = 0;

        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

     label2:
        if i3 >= $i2 goto label3;

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i3);

        $r4 = (edu.mit.csail.sdg.alloy4compiler.sim.SimAtom) $r3;

        r1[i3] = $r4;

        i3 = i3 + 1;

        goto label2;

     label3:
        $r2 = new edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        specialinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: void <init>(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[])>(r1);

        return $r2;
    }

    public static edu.mit.csail.sdg.alloy4compiler.sim.SimTuple make(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom, edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] $r1;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom r2, r3;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple $r0;

        r2 := @parameter0: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom;

        r3 := @parameter1: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom;

        $r0 = new edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        $r1 = newarray (edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)[2];

        $r1[0] = r2;

        $r1[1] = r3;

        specialinvoke $r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: void <init>(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[])>($r1);

        return $r0;
    }

    public static edu.mit.csail.sdg.alloy4compiler.sim.SimTuple make(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] $r1;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple $r0;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom r2;

        r2 := @parameter0: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom;

        $r0 = new edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        $r1 = newarray (edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)[1];

        $r1[0] = r2;

        specialinvoke $r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: void <init>(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[])>($r1);

        return $r0;
    }

    public static edu.mit.csail.sdg.alloy4compiler.sim.SimTuple make(java.lang.String)
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] $r1;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom $r3;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple $r0;
        java.lang.String r2;

        r2 := @parameter0: java.lang.String;

        $r0 = new edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        $r1 = newarray (edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)[1];

        $r3 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimAtom: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom make(java.lang.String)>(r2);

        $r1[0] = $r3;

        specialinvoke $r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: void <init>(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[])>($r1);

        return $r0;
    }

    public static edu.mit.csail.sdg.alloy4compiler.sim.SimTuple make(java.lang.String[])
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom $r4;
        java.lang.String[] r0;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple $r2;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] r1;
        int $i0, $i1, i2;
        java.lang.String $r3;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        r1 = newarray (edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label2;

        $r3 = r0[i2];

        $r4 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimAtom: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom make(java.lang.String)>($r3);

        r1[i2] = $r4;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r2 = new edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        specialinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: void <init>(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[])>(r1);

        return $r2;
    }

    void write(java.io.BufferedOutputStream) throws java.io.IOException
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] $r2, $r3;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom $r4;
        int i0, i1;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple r1;
        java.io.BufferedOutputStream r0;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        r0 := @parameter0: java.io.BufferedOutputStream;

        virtualinvoke r0.<java.io.BufferedOutputStream: void write(int)>(40);

        $r2 = r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        i0 = lengthof $r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        if i1 <= 0 goto label2;

        virtualinvoke r0.<java.io.BufferedOutputStream: void write(int)>(32);

     label2:
        $r3 = r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $r4 = $r3[i1];

        virtualinvoke $r4.<edu.mit.csail.sdg.alloy4compiler.sim.SimAtom: void write(java.io.BufferedOutputStream)>(r0);

        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke r0.<java.io.BufferedOutputStream: void write(int)>(41);

        return;
    }

    static edu.mit.csail.sdg.alloy4compiler.sim.SimTuple read(java.io.BufferedInputStream) throws java.io.IOException
    {
        java.io.BufferedInputStream r1;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom $r2;
        java.io.IOException $r3, $r5, $r6, $r7, $r8;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple $r4;
        java.util.ArrayList $r0;
        int $i0, $i1, $i2;

        r1 := @parameter0: java.io.BufferedInputStream;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

     label01:
        $i2 = virtualinvoke r1.<java.io.BufferedInputStream: int read()>();

        if $i2 >= 0 goto label02;

        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("Unexpected EOF");

        throw $r8;

     label02:
        if $i2 <= 0 goto label03;

        if $i2 > 32 goto label03;

        goto label01;

     label03:
        if $i2 != 41 goto label04;

        goto label09;

     label04:
        if $i2 == 34 goto label05;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("Expecting start of atom");

        throw $r7;

     label05:
        $r2 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimAtom: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom read(java.io.BufferedInputStream)>(r1);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);

        $i0 = virtualinvoke r1.<java.io.BufferedInputStream: int read()>();

        if $i0 >= 0 goto label06;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Unexpected EOF");

        throw $r6;

     label06:
        if $i0 != 41 goto label07;

        goto label09;

     label07:
        if $i0 <= 32 goto label08;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Expecting \')\' or white space after an atom.");

        throw $r3;

     label08:
        goto label01;

     label09:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i1 != 0 goto label10;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Tuple arity cannot be 0.");

        throw $r5;

     label10:
        $r4 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple make(java.util.List)>($r0);

        return $r4;
    }

    public int arity()
    {
        int $i0;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] $r1;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple r0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public edu.mit.csail.sdg.alloy4compiler.sim.SimAtom get(int)
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] $r1;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom $r2;
        int i0;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple r0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        i0 := @parameter0: int;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $r2 = $r1[i0];

        return $r2;
    }

    public boolean has(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom r3, $r4;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple r0;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] $r1, $r2;
        int $i0, i1, $i3;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i0 = lengthof $r1;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $r4 = $r2[i1];

        if $r4 != r3 goto label2;

        return 1;

     label2:
        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label1;

     label3:
        return 0;
    }

    public edu.mit.csail.sdg.alloy4compiler.sim.SimTuple replace(int, edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom r2, $r3, $r8;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple r0, $r6;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] $r1, $r4, r5, $r7;
        int i0, $i1, $i2, $i3, i4;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        i0 := @parameter0: int;

        r2 := @parameter1: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $r3 = $r1[i0];

        if $r3 != r2 goto label1;

        return r0;

     label1:
        $r4 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i1 = lengthof $r4;

        r5 = newarray (edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)[$i1];

        i4 = 0;

     label2:
        $i2 = lengthof r5;

        if i4 >= $i2 goto label5;

        $i3 = i4;

        if i4 != i0 goto label3;

        $r8 = r2;

        goto label4;

     label3:
        $r7 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $r8 = $r7[i4];

     label4:
        r5[$i3] = $r8;

        i4 = i4 + 1;

        goto label2;

     label5:
        $r6 = new edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        specialinvoke $r6.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: void <init>(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[])>(r5);

        return $r6;
    }

    public edu.mit.csail.sdg.alloy4compiler.sim.SimTuple replace(java.util.Map)
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom r6, r9, $r10;
        java.util.Map r7;
        int $i0, $i1, $i2, i3, $i5;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple r0, $r11;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] $r1, r2, $r3, $r5;
        java.lang.Object $r8;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        r7 := @parameter0: java.util.Map;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i0 = lengthof $r1;

        r2 = newarray (edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)[$i0];

        $r3 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i1 = lengthof $r3;

        i3 = $i1 - 1;

     label1:
        if i3 < 0 goto label4;

        $r5 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        r6 = $r5[i3];

        $r8 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r9 = (edu.mit.csail.sdg.alloy4compiler.sim.SimAtom) $r8;

        $i2 = i3;

        if r9 != null goto label2;

        $r10 = r6;

        goto label3;

     label2:
        $r10 = r9;

     label3:
        r2[$i2] = $r10;

        $i5 = (int) -1;

        i3 = i3 + $i5;

        goto label1;

     label4:
        $r11 = new edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        specialinvoke $r11.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: void <init>(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[])>(r2);

        return $r11;
    }

    public edu.mit.csail.sdg.alloy4compiler.sim.SimTuple prepend(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom r3, $r7;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple r0, $r5;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] $r1, r2, $r4, $r6;
        int $i0, $i1, $i2, $i3, i4;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i0 = lengthof $r1;

        $i1 = $i0 + 1;

        r2 = newarray (edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)[$i1];

        r2[0] = r3;

        i4 = 0;

     label1:
        $r4 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i2 = lengthof $r4;

        if i4 >= $i2 goto label2;

        $i3 = i4 + 1;

        $r6 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $r7 = $r6[i4];

        r2[$i3] = $r7;

        i4 = i4 + 1;

        goto label1;

     label2:
        $r5 = new edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        specialinvoke $r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: void <init>(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[])>(r2);

        return $r5;
    }

    public edu.mit.csail.sdg.alloy4compiler.sim.SimTuple append(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom r5, $r8;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple r0, $r6;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] $r1, r2, $r3, $r4, $r7;
        int $i0, $i1, $i2, $i3, i4;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        r5 := @parameter0: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i0 = lengthof $r1;

        $i1 = $i0 + 1;

        r2 = newarray (edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)[$i1];

        i4 = 0;

     label1:
        $r3 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i2 = lengthof $r3;

        if i4 >= $i2 goto label2;

        $r7 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $r8 = $r7[i4];

        r2[i4] = $r8;

        i4 = i4 + 1;

        goto label1;

     label2:
        $r4 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i3 = lengthof $r4;

        r2[$i3] = r5;

        $r6 = new edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        specialinvoke $r6.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: void <init>(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[])>(r2);

        return $r6;
    }

    public edu.mit.csail.sdg.alloy4compiler.sim.SimTuple product(edu.mit.csail.sdg.alloy4compiler.sim.SimTuple)
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom $r10, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple r0, r2, $r7;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] $r1, $r3, r4, $r5, $r6, $r8, $r9, $r11;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        r2 := @parameter0: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i1 = lengthof $r1;

        $r3 = r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i0 = lengthof $r3;

        $i2 = $i1 + $i0;

        r4 = newarray (edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)[$i2];

        i7 = 0;

     label1:
        $r5 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i3 = lengthof $r5;

        if i7 >= $i3 goto label2;

        $r11 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $r12 = $r11[i7];

        r4[i7] = $r12;

        i7 = i7 + 1;

        goto label1;

     label2:
        i8 = 0;

     label3:
        $r6 = r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i4 = lengthof $r6;

        if i8 >= $i4 goto label4;

        $r8 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i5 = lengthof $r8;

        $i6 = i8 + $i5;

        $r9 = r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $r10 = $r9[i8];

        r4[$i6] = $r10;

        i8 = i8 + 1;

        goto label3;

     label4:
        $r7 = new edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        specialinvoke $r7.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: void <init>(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[])>(r4);

        return $r7;
    }

    public edu.mit.csail.sdg.alloy4compiler.sim.SimTuple join(edu.mit.csail.sdg.alloy4compiler.sim.SimTuple)
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom $r8, $r9, $r18, $r20;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] $r1, $r3, $r5, $r6, $r7, $r10, $r11, r12, $r13, $r14, $r16, $r17, $r19;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple r0, r2, $r15;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        r2 := @parameter0: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i1 = lengthof $r1;

        $r3 = r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i0 = lengthof $r3;

        $i2 = $i1 + $i0;

        if $i2 == 2 goto label1;

        $r6 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $r5 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i3 = lengthof $r5;

        $i4 = $i3 - 1;

        $r9 = $r6[$i4];

        $r7 = r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $r8 = $r7[0];

        if $r9 == $r8 goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label2:
        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i6 = lengthof $r10;

        $r11 = r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i5 = lengthof $r11;

        $i7 = $i6 + $i5;

        $i8 = $i7 - 2;

        r12 = newarray (edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)[$i8];

        i17 = 0;

     label3:
        $r13 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i9 = lengthof $r13;

        $i10 = $i9 - 1;

        if i17 >= $i10 goto label4;

        $r19 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $r20 = $r19[i17];

        r12[i17] = $r20;

        i17 = i17 + 1;

        goto label3;

     label4:
        i18 = 0;

     label5:
        $r14 = r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i11 = lengthof $r14;

        $i12 = $i11 - 1;

        if i18 >= $i12 goto label6;

        $r16 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i13 = lengthof $r16;

        $i14 = i18 + $i13;

        $i16 = $i14 - 1;

        $r17 = r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i15 = i18 + 1;

        $r18 = $r17[$i15];

        r12[$i16] = $r18;

        i18 = i18 + 1;

        goto label5;

     label6:
        $r15 = new edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        specialinvoke $r15.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: void <init>(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[])>(r12);

        return $r15;
    }

    public int hashCode()
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom $r3;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple r0;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] $r1, $r2;
        int $i0, $i1, $i2, i3, i4, $i6;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        i3 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: int hashCode>;

        if i3 != 0 goto label4;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i0 = lengthof $r1;

        i4 = $i0 - 1;

     label1:
        if i4 < 0 goto label2;

        $i1 = i3 * 31;

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $r3 = $r2[i4];

        $i2 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r3);

        i3 = $i1 + $i2;

        $i6 = (int) -1;

        i4 = i4 + $i6;

        goto label1;

     label2:
        if i3 != 0 goto label3;

        i3 = i3 + 1;

     label3:
        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: int hashCode> = i3;

     label4:
        return i3;
    }

    public boolean equals(java.lang.Object)
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom $r8, $r9;
        int $i0, $i1, $i2, $i3, $i4, i5, $i7;
        boolean $z0;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple r0, $r2;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] r3, $r4, $r5, $r6, $r7;
        java.lang.Object r1;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = (edu.mit.csail.sdg.alloy4compiler.sim.SimTuple) r1;

        r3 = $r2.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $r4 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        if $r4 != r3 goto label3;

        return 1;

     label3:
        $r5 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i1 = lengthof $r5;

        $i0 = lengthof r3;

        if $i1 == $i0 goto label4;

        return 0;

     label4:
        $i2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: int hashCode()>();

        $i3 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        if $i2 == $i3 goto label5;

        return 0;

     label5:
        $r6 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i4 = lengthof $r6;

        i5 = $i4 - 1;

     label6:
        if i5 < 0 goto label8;

        $r7 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $r9 = $r7[i5];

        $r8 = r3[i5];

        if $r9 == $r8 goto label7;

        return 0;

     label7:
        $i7 = (int) -1;

        i5 = i5 + $i7;

        goto label6;

     label8:
        r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array> = r3;

        return 1;
    }

    public edu.mit.csail.sdg.alloy4compiler.sim.SimAtom head()
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] $r1;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple r0;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom $r2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $r2 = $r1[0];

        return $r2;
    }

    public edu.mit.csail.sdg.alloy4compiler.sim.SimAtom tail()
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] $r1, $r2;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom $r3;
        int $i0, $i1;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple r0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i0 = lengthof $r1;

        $i1 = $i0 - 1;

        $r3 = $r2[$i1];

        return $r3;
    }

    public edu.mit.csail.sdg.alloy4compiler.sim.SimTuple head(int)
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom $r7;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple r1, $r5;
        java.lang.IllegalArgumentException $r0;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] $r2, $r3, r4, $r6;
        int i0, $i1, $i2, $i3, i4;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        $r2 = r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i1 = lengthof $r2;

        if i0 <= $i1 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r0;

     label2:
        $r3 = r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i2 = lengthof $r3;

        if i0 != $i2 goto label3;

        return r1;

     label3:
        r4 = newarray (edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)[i0];

        i4 = 0;

     label4:
        $i3 = lengthof r4;

        if i4 >= $i3 goto label5;

        $r6 = r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $r7 = $r6[i4];

        r4[i4] = $r7;

        i4 = i4 + 1;

        goto label4;

     label5:
        $r5 = new edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        specialinvoke $r5.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: void <init>(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[])>(r4);

        return $r5;
    }

    public edu.mit.csail.sdg.alloy4compiler.sim.SimTuple tail(int)
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom $r8;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, i7;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple r1, $r6;
        java.lang.IllegalArgumentException $r0;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] $r2, $r3, r4, $r5, $r7;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        $r2 = r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i1 = lengthof $r2;

        if i0 <= $i1 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r0;

     label2:
        $r3 = r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i2 = lengthof $r3;

        if i0 != $i2 goto label3;

        return r1;

     label3:
        r4 = newarray (edu.mit.csail.sdg.alloy4compiler.sim.SimAtom)[i0];

        $r5 = r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i3 = lengthof $r5;

        i4 = $i3 - i0;

        i7 = 0;

     label4:
        $i5 = lengthof r4;

        if i7 >= $i5 goto label5;

        $r7 = r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i6 = i7 + i4;

        $r8 = $r7[$i6];

        r4[i7] = $r8;

        i7 = i7 + 1;

        goto label4;

     label5:
        $r6 = new edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        specialinvoke $r6.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: void <init>(edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[])>(r4);

        return $r6;
    }

    public void toString(java.lang.StringBuilder)
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] $r1, $r3;
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom $r4;
        int $i0, i1;
        java.lang.StringBuilder r2;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple r0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        r2 := @parameter0: java.lang.StringBuilder;

        i1 = 0;

     label1:
        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label3;

        if i1 <= 0 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

     label2:
        $r3 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        $r4 = $r3[i1];

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple r1;
        java.lang.String $r2;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: void toString(java.lang.StringBuilder)>($r0);

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public java.util.Iterator iterator()
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple r1;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple$1 $r0;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        $r0 = new edu.mit.csail.sdg.alloy4compiler.sim.SimTuple$1;

        specialinvoke $r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple$1: void <init>(edu.mit.csail.sdg.alloy4compiler.sim.SimTuple)>(r1);

        return $r0;
    }

    static edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] access$000(edu.mit.csail.sdg.alloy4compiler.sim.SimTuple)
    {
        edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] $r1;
        edu.mit.csail.sdg.alloy4compiler.sim.SimTuple r0;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.sim.SimTuple;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.sim.SimTuple: edu.mit.csail.sdg.alloy4compiler.sim.SimAtom[] array>;

        return $r1;
    }
}
