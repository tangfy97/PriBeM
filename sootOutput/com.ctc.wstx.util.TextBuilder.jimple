public final class com.ctc.wstx.util.TextBuilder extends java.lang.Object
{
    private static final int MIN_LEN;
    private static final int MAX_LEN;
    private char[] mBuffer;
    private int[] mBufferOffsets;
    private int mBufferLen;
    private java.lang.String mResultString;
    private int mEntryCount;

    public void <init>(int)
    {
        int[] $r1;
        int i0, i1;
        char[] $r2;
        com.ctc.wstx.util.TextBuilder r0;

        r0 := @this: com.ctc.wstx.util.TextBuilder;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (int)[i0];

        r0.<com.ctc.wstx.util.TextBuilder: int[] mBufferOffsets> = $r1;

        i1 = i0 << 4;

        if i1 >= 64 goto label1;

        i1 = 64;

        goto label2;

     label1:
        if i1 <= 120 goto label2;

        i1 = 120;

     label2:
        $r2 = newarray (char)[i1];

        r0.<com.ctc.wstx.util.TextBuilder: char[] mBuffer> = $r2;

        return;
    }

    public void reset()
    {
        com.ctc.wstx.util.TextBuilder r0;

        r0 := @this: com.ctc.wstx.util.TextBuilder;

        r0.<com.ctc.wstx.util.TextBuilder: int mBufferLen> = 0;

        r0.<com.ctc.wstx.util.TextBuilder: int mEntryCount> = 0;

        r0.<com.ctc.wstx.util.TextBuilder: java.lang.String mResultString> = null;

        return;
    }

    public boolean isEmpty()
    {
        int $i0;
        com.ctc.wstx.util.TextBuilder r0;
        boolean $z0;

        r0 := @this: com.ctc.wstx.util.TextBuilder;

        $i0 = r0.<com.ctc.wstx.util.TextBuilder: int mEntryCount>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int size()
    {
        int $i0;
        com.ctc.wstx.util.TextBuilder r0;

        r0 := @this: com.ctc.wstx.util.TextBuilder;

        $i0 = r0.<com.ctc.wstx.util.TextBuilder: int mEntryCount>;

        return $i0;
    }

    public java.lang.String getEntry(int)
    {
        int[] $r2, $r3, $r6;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r1, $r4, $r5, $r7, $r8, $r9, $r10;
        com.ctc.wstx.util.TextBuilder r0;
        char[] $r11;

        r0 := @this: com.ctc.wstx.util.TextBuilder;

        i1 := @parameter0: int;

        i0 = r0.<com.ctc.wstx.util.TextBuilder: int mEntryCount>;

        $r1 = r0.<com.ctc.wstx.util.TextBuilder: java.lang.String mResultString>;

        if $r1 != null goto label1;

        $r10 = new java.lang.String;

        $r11 = r0.<com.ctc.wstx.util.TextBuilder: char[] mBuffer>;

        $i7 = r0.<com.ctc.wstx.util.TextBuilder: int mBufferLen>;

        specialinvoke $r10.<java.lang.String: void <init>(char[],int,int)>($r11, 0, $i7);

        r0.<com.ctc.wstx.util.TextBuilder: java.lang.String mResultString> = $r10;

     label1:
        if i1 != 0 goto label2;

        if i0 != 1 goto label2;

        $r9 = r0.<com.ctc.wstx.util.TextBuilder: java.lang.String mResultString>;

        return $r9;

     label2:
        $i2 = i0 - 1;

        if i1 != $i2 goto label3;

        $r7 = r0.<com.ctc.wstx.util.TextBuilder: java.lang.String mResultString>;

        $r6 = r0.<com.ctc.wstx.util.TextBuilder: int[] mBufferOffsets>;

        $i6 = $r6[i1];

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>($i6);

        return $r8;

     label3:
        $r4 = r0.<com.ctc.wstx.util.TextBuilder: java.lang.String mResultString>;

        $r2 = r0.<com.ctc.wstx.util.TextBuilder: int[] mBufferOffsets>;

        $i5 = $r2[i1];

        $r3 = r0.<com.ctc.wstx.util.TextBuilder: int[] mBufferOffsets>;

        $i3 = i1 + 1;

        $i4 = $r3[$i3];

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>($i5, $i4);

        return $r5;
    }

    public int getOffset(int)
    {
        int[] $r1;
        int i0, $i1, $i2, $i3;
        com.ctc.wstx.util.TextBuilder r0;

        r0 := @this: com.ctc.wstx.util.TextBuilder;

        i0 := @parameter0: int;

        $i1 = r0.<com.ctc.wstx.util.TextBuilder: int mEntryCount>;

        if i0 < $i1 goto label1;

        $i3 = r0.<com.ctc.wstx.util.TextBuilder: int mBufferLen>;

        return $i3;

     label1:
        $r1 = r0.<com.ctc.wstx.util.TextBuilder: int[] mBufferOffsets>;

        $i2 = $r1[i0];

        return $i2;
    }

    public char[] getCharBuffer()
    {
        char[] $r1;
        com.ctc.wstx.util.TextBuilder r0;

        r0 := @this: com.ctc.wstx.util.TextBuilder;

        $r1 = r0.<com.ctc.wstx.util.TextBuilder: char[] mBuffer>;

        return $r1;
    }

    public int getCharSize()
    {
        int $i0;
        com.ctc.wstx.util.TextBuilder r0;

        r0 := @this: com.ctc.wstx.util.TextBuilder;

        $i0 = r0.<com.ctc.wstx.util.TextBuilder: int mBufferLen>;

        return $i0;
    }

    public void startNewEntry()
    {
        int[] $r1, $r2, r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        com.ctc.wstx.util.TextBuilder r0;

        r0 := @this: com.ctc.wstx.util.TextBuilder;

        $i1 = r0.<com.ctc.wstx.util.TextBuilder: int mEntryCount>;

        $r1 = r0.<com.ctc.wstx.util.TextBuilder: int[] mBufferOffsets>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        r3 = r0.<com.ctc.wstx.util.TextBuilder: int[] mBufferOffsets>;

        $i6 = lengthof r3;

        $i7 = $i6 << 1;

        $r4 = newarray (int)[$i7];

        r0.<com.ctc.wstx.util.TextBuilder: int[] mBufferOffsets> = $r4;

        $r5 = r0.<com.ctc.wstx.util.TextBuilder: int[] mBufferOffsets>;

        $i8 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, $r5, 0, $i8);

     label1:
        $r2 = r0.<com.ctc.wstx.util.TextBuilder: int[] mBufferOffsets>;

        $i3 = r0.<com.ctc.wstx.util.TextBuilder: int mEntryCount>;

        $i2 = r0.<com.ctc.wstx.util.TextBuilder: int mBufferLen>;

        $r2[$i3] = $i2;

        $i4 = r0.<com.ctc.wstx.util.TextBuilder: int mEntryCount>;

        $i5 = $i4 + 1;

        r0.<com.ctc.wstx.util.TextBuilder: int mEntryCount> = $i5;

        return;
    }

    public void append(char)
    {
        char c4;
        int $i0, $i1, $i2, $i3;
        char[] $r1, $r2;
        com.ctc.wstx.util.TextBuilder r0;

        r0 := @this: com.ctc.wstx.util.TextBuilder;

        c4 := @parameter0: char;

        $r1 = r0.<com.ctc.wstx.util.TextBuilder: char[] mBuffer>;

        $i1 = lengthof $r1;

        $i0 = r0.<com.ctc.wstx.util.TextBuilder: int mBufferLen>;

        if $i1 != $i0 goto label1;

        specialinvoke r0.<com.ctc.wstx.util.TextBuilder: void resize(int)>(1);

     label1:
        $r2 = r0.<com.ctc.wstx.util.TextBuilder: char[] mBuffer>;

        $i2 = r0.<com.ctc.wstx.util.TextBuilder: int mBufferLen>;

        $i3 = $i2 + 1;

        r0.<com.ctc.wstx.util.TextBuilder: int mBufferLen> = $i3;

        $r2[$i2] = c4;

        return;
    }

    public void append(char[], int, int)
    {
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7;
        char[] $r1, r2, $r3;
        com.ctc.wstx.util.TextBuilder r0;

        r0 := @this: com.ctc.wstx.util.TextBuilder;

        r2 := @parameter0: char[];

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        $r1 = r0.<com.ctc.wstx.util.TextBuilder: char[] mBuffer>;

        $i2 = lengthof $r1;

        $i1 = r0.<com.ctc.wstx.util.TextBuilder: int mBufferLen>;

        $i3 = $i2 - $i1;

        if i0 <= $i3 goto label1;

        specialinvoke r0.<com.ctc.wstx.util.TextBuilder: void resize(int)>(i0);

     label1:
        $r3 = r0.<com.ctc.wstx.util.TextBuilder: char[] mBuffer>;

        $i5 = r0.<com.ctc.wstx.util.TextBuilder: int mBufferLen>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i4, $r3, $i5, i0);

        $i6 = r0.<com.ctc.wstx.util.TextBuilder: int mBufferLen>;

        $i7 = $i6 + i0;

        r0.<com.ctc.wstx.util.TextBuilder: int mBufferLen> = $i7;

        return;
    }

    public void setBufferSize(int)
    {
        int i0;
        com.ctc.wstx.util.TextBuilder r0;

        r0 := @this: com.ctc.wstx.util.TextBuilder;

        i0 := @parameter0: int;

        r0.<com.ctc.wstx.util.TextBuilder: int mBufferLen> = i0;

        return;
    }

    public char[] bufferFull(int)
    {
        int $i0, i1;
        char[] $r1, $r2;
        com.ctc.wstx.util.TextBuilder r0;

        r0 := @this: com.ctc.wstx.util.TextBuilder;

        i1 := @parameter0: int;

        $r1 = r0.<com.ctc.wstx.util.TextBuilder: char[] mBuffer>;

        $i0 = lengthof $r1;

        r0.<com.ctc.wstx.util.TextBuilder: int mBufferLen> = $i0;

        specialinvoke r0.<com.ctc.wstx.util.TextBuilder: void resize(int)>(1);

        $r2 = r0.<com.ctc.wstx.util.TextBuilder: char[] mBuffer>;

        return $r2;
    }

    public java.lang.String toString()
    {
        int $i0;
        char[] $r2;
        java.lang.String $r0;
        com.ctc.wstx.util.TextBuilder r1;

        r1 := @this: com.ctc.wstx.util.TextBuilder;

        $r0 = new java.lang.String;

        $r2 = r1.<com.ctc.wstx.util.TextBuilder: char[] mBuffer>;

        $i0 = r1.<com.ctc.wstx.util.TextBuilder: int mBufferLen>;

        specialinvoke $r0.<java.lang.String: void <init>(char[],int,int)>($r2, 0, $i0);

        return $r0;
    }

    private void resize(int)
    {
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        char[] r1, $r2, $r3;
        com.ctc.wstx.util.TextBuilder r0;

        r0 := @this: com.ctc.wstx.util.TextBuilder;

        i5 := @parameter0: int;

        r1 = r0.<com.ctc.wstx.util.TextBuilder: char[] mBuffer>;

        i0 = lengthof r1;

        i6 = i0 >> 1;

        $i1 = r0.<com.ctc.wstx.util.TextBuilder: int mBufferLen>;

        $i2 = i0 - $i1;

        i7 = i5 - $i2;

        if i6 >= i7 goto label1;

        i6 = i7;

     label1:
        $i3 = i0 + i6;

        $r2 = newarray (char)[$i3];

        r0.<com.ctc.wstx.util.TextBuilder: char[] mBuffer> = $r2;

        $r3 = r0.<com.ctc.wstx.util.TextBuilder: char[] mBuffer>;

        $i4 = r0.<com.ctc.wstx.util.TextBuilder: int mBufferLen>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r3, 0, $i4);

        return;
    }

    public static void <clinit>()
    {
        <com.ctc.wstx.util.TextBuilder: int MAX_LEN> = 120;

        <com.ctc.wstx.util.TextBuilder: int MIN_LEN> = 64;

        return;
    }
}
