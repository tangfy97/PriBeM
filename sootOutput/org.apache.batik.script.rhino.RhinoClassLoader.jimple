public class org.apache.batik.script.rhino.RhinoClassLoader extends java.net.URLClassLoader implements org.mozilla.javascript.GeneratedClassLoader
{
    protected java.net.URL documentURL;
    protected java.security.CodeSource codeSource;
    protected java.security.AccessControlContext rhinoAccessControlContext;

    public void <init>(java.net.URL, java.lang.ClassLoader)
    {
        java.security.AccessControlContext $r7;
        java.net.URL r1;
        java.security.PermissionCollection $r6;
        java.net.URL[] $r11;
        org.apache.batik.script.rhino.RhinoClassLoader r0;
        java.security.ProtectionDomain[] $r8;
        java.security.ProtectionDomain $r3;
        java.security.cert.Certificate[] $r10;
        java.lang.ClassLoader r2;
        java.security.CodeSource $r4, $r5, $r9;

        r0 := @this: org.apache.batik.script.rhino.RhinoClassLoader;

        r1 := @parameter0: java.net.URL;

        r2 := @parameter1: java.lang.ClassLoader;

        if r1 == null goto label1;

        $r11 = newarray (java.net.URL)[1];

        $r11[0] = r1;

        goto label2;

     label1:
        $r11 = newarray (java.net.URL)[0];

     label2:
        specialinvoke r0.<java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader)>($r11, r2);

        r0.<org.apache.batik.script.rhino.RhinoClassLoader: java.net.URL documentURL> = r1;

        if r1 == null goto label3;

        $r9 = new java.security.CodeSource;

        $r10 = (java.security.cert.Certificate[]) null;

        specialinvoke $r9.<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>(r1, $r10);

        r0.<org.apache.batik.script.rhino.RhinoClassLoader: java.security.CodeSource codeSource> = $r9;

     label3:
        $r3 = new java.security.ProtectionDomain;

        $r5 = r0.<org.apache.batik.script.rhino.RhinoClassLoader: java.security.CodeSource codeSource>;

        $r4 = r0.<org.apache.batik.script.rhino.RhinoClassLoader: java.security.CodeSource codeSource>;

        $r6 = virtualinvoke r0.<org.apache.batik.script.rhino.RhinoClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>($r4);

        specialinvoke $r3.<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection)>($r5, $r6);

        $r7 = new java.security.AccessControlContext;

        $r8 = newarray (java.security.ProtectionDomain)[1];

        $r8[0] = $r3;

        specialinvoke $r7.<java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>($r8);

        r0.<org.apache.batik.script.rhino.RhinoClassLoader: java.security.AccessControlContext rhinoAccessControlContext> = $r7;

        return;
    }

    static java.net.URL[] getURL(java.lang.ClassLoader)
    {
        java.net.URL[] $r1, $r4, $r5;
        org.apache.batik.script.rhino.RhinoClassLoader $r2;
        java.net.URL r3;
        java.lang.ClassLoader r0;
        boolean $z0;

        r0 := @parameter0: java.lang.ClassLoader;

        $z0 = r0 instanceof org.apache.batik.script.rhino.RhinoClassLoader;

        if $z0 == 0 goto label2;

        $r2 = (org.apache.batik.script.rhino.RhinoClassLoader) r0;

        r3 = $r2.<org.apache.batik.script.rhino.RhinoClassLoader: java.net.URL documentURL>;

        if r3 == null goto label1;

        $r5 = newarray (java.net.URL)[1];

        $r5[0] = r3;

        return $r5;

     label1:
        $r4 = newarray (java.net.URL)[0];

        return $r4;

     label2:
        $r1 = newarray (java.net.URL)[0];

        return $r1;
    }

    public java.lang.Class defineClass(java.lang.String, byte[])
    {
        byte[] r2;
        org.apache.batik.script.rhino.RhinoClassLoader r0;
        int $i0;
        java.lang.Class $r4;
        java.lang.String r1;
        java.security.CodeSource $r3;

        r0 := @this: org.apache.batik.script.rhino.RhinoClassLoader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        $i0 = lengthof r2;

        $r3 = r0.<org.apache.batik.script.rhino.RhinoClassLoader: java.security.CodeSource codeSource>;

        $r4 = specialinvoke r0.<java.security.SecureClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.CodeSource)>(r1, r2, 0, $i0, $r3);

        return $r4;
    }

    public void linkClass(java.lang.Class)
    {
        java.lang.Class r1;
        org.apache.batik.script.rhino.RhinoClassLoader r0;

        r0 := @this: org.apache.batik.script.rhino.RhinoClassLoader;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.ClassLoader: void resolveClass(java.lang.Class)>(r1);

        return;
    }

    public java.security.AccessControlContext getAccessControlContext()
    {
        java.security.AccessControlContext $r1;
        org.apache.batik.script.rhino.RhinoClassLoader r0;

        r0 := @this: org.apache.batik.script.rhino.RhinoClassLoader;

        $r1 = r0.<org.apache.batik.script.rhino.RhinoClassLoader: java.security.AccessControlContext rhinoAccessControlContext>;

        return $r1;
    }

    protected java.security.PermissionCollection getPermissions(java.security.CodeSource)
    {
        java.net.URL $r2, $r3;
        org.apache.batik.script.rhino.RhinoClassLoader r1;
        java.net.URLConnection $r4;
        java.lang.StringBuffer $r10, $r11, $r17;
        java.io.FilePermission $r18;
        int $i0, $i1, $i3;
        java.lang.String $r5, $r6, $r7, $r8, $r12;
        boolean $z0, $z1;
        java.io.IOException $r14;
        java.security.PermissionCollection r15;
        java.security.Permission r16;
        java.security.CodeSource r0;

        r1 := @this: org.apache.batik.script.rhino.RhinoClassLoader;

        r0 := @parameter0: java.security.CodeSource;

        r15 = null;

        if r0 == null goto label1;

        r15 = specialinvoke r1.<java.net.URLClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>(r0);

     label1:
        $r2 = r1.<org.apache.batik.script.rhino.RhinoClassLoader: java.net.URL documentURL>;

        if $r2 == null goto label6;

        if r15 == null goto label6;

     label2:
        $r3 = r1.<org.apache.batik.script.rhino.RhinoClassLoader: java.net.URL documentURL>;

        $r4 = virtualinvoke $r3.<java.net.URL: java.net.URLConnection openConnection()>();

        r16 = virtualinvoke $r4.<java.net.URLConnection: java.security.Permission getPermission()>();

     label3:
        goto label5;

     label4:
        $r14 := @caughtexception;

        r16 = null;

     label5:
        $z0 = r16 instanceof java.io.FilePermission;

        if $z0 == 0 goto label6;

        $r5 = virtualinvoke r16.<java.security.Permission: java.lang.String getName()>();

        $r6 = <java.io.File: java.lang.String separator>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean endsWith(java.lang.String)>($r6);

        if $z1 != 0 goto label6;

        $r7 = <java.io.File: java.lang.String separator>;

        $i0 = virtualinvoke $r5.<java.lang.String: int lastIndexOf(java.lang.String)>($r7);

        $i3 = (int) -1;

        if $i0 == $i3 goto label6;

        $i1 = $i0 + 1;

        $r8 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r18 = new java.io.FilePermission;

        specialinvoke $r18.<java.io.FilePermission: void <init>(java.lang.String,java.lang.String)>($r12, "read");

        virtualinvoke r15.<java.security.PermissionCollection: void add(java.security.Permission)>($r18);

     label6:
        return r15;

        catch java.io.IOException from label2 to label3 with label4;
    }
}
