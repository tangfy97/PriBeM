public class org.mortbay.jetty.Server extends org.mortbay.jetty.handler.HandlerWrapper implements org.mortbay.util.Attributes
{
    public static final java.lang.String UNKNOWN_VERSION;
    public static final java.lang.String SNAPSHOT_VERSION;
    private static org.mortbay.jetty.Server$ShutdownHookThread hookThread;
    private static java.lang.String _version;
    private org.mortbay.thread.ThreadPool _threadPool;
    private org.mortbay.jetty.Connector[] _connectors;
    private org.mortbay.jetty.security.UserRealm[] _realms;
    private org.mortbay.component.Container _container;
    private org.mortbay.jetty.SessionIdManager _sessionIdManager;
    private boolean _sendServerVersion;
    private boolean _sendDateHeader;
    private org.mortbay.util.AttributesMap _attributes;
    private java.util.List _dependentLifeCycles;
    private int _graceful;
    static java.lang.Class class$org$mortbay$jetty$Server;
    static java.lang.Class class$org$mortbay$jetty$Connector;
    static java.lang.Class class$org$mortbay$jetty$Server$Graceful;
    static java.lang.Class class$org$mortbay$jetty$security$UserRealm;
    static java.lang.Class class$java$lang$Thread;
    static java.lang.Class class$java$lang$Runtime;

    public void <init>()
    {
        org.mortbay.jetty.Server r0;
        org.mortbay.component.Container $r1;
        org.mortbay.util.AttributesMap $r2;
        java.util.ArrayList $r3;

        r0 := @this: org.mortbay.jetty.Server;

        specialinvoke r0.<org.mortbay.jetty.handler.HandlerWrapper: void <init>()>();

        $r1 = new org.mortbay.component.Container;

        specialinvoke $r1.<org.mortbay.component.Container: void <init>()>();

        r0.<org.mortbay.jetty.Server: org.mortbay.component.Container _container> = $r1;

        r0.<org.mortbay.jetty.Server: boolean _sendServerVersion> = 1;

        r0.<org.mortbay.jetty.Server: boolean _sendDateHeader> = 0;

        $r2 = new org.mortbay.util.AttributesMap;

        specialinvoke $r2.<org.mortbay.util.AttributesMap: void <init>()>();

        r0.<org.mortbay.jetty.Server: org.mortbay.util.AttributesMap _attributes> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.mortbay.jetty.Server: java.util.List _dependentLifeCycles> = $r3;

        r0.<org.mortbay.jetty.Server: int _graceful> = 0;

        virtualinvoke r0.<org.mortbay.jetty.Server: void setServer(org.mortbay.jetty.Server)>(r0);

        return;
    }

    public void <init>(int)
    {
        org.mortbay.jetty.Server r0;
        org.mortbay.jetty.Connector[] $r5;
        org.mortbay.component.Container $r1;
        int i0;
        org.mortbay.jetty.bio.SocketConnector $r4;
        org.mortbay.util.AttributesMap $r2;
        java.util.ArrayList $r3;

        r0 := @this: org.mortbay.jetty.Server;

        i0 := @parameter0: int;

        specialinvoke r0.<org.mortbay.jetty.handler.HandlerWrapper: void <init>()>();

        $r1 = new org.mortbay.component.Container;

        specialinvoke $r1.<org.mortbay.component.Container: void <init>()>();

        r0.<org.mortbay.jetty.Server: org.mortbay.component.Container _container> = $r1;

        r0.<org.mortbay.jetty.Server: boolean _sendServerVersion> = 1;

        r0.<org.mortbay.jetty.Server: boolean _sendDateHeader> = 0;

        $r2 = new org.mortbay.util.AttributesMap;

        specialinvoke $r2.<org.mortbay.util.AttributesMap: void <init>()>();

        r0.<org.mortbay.jetty.Server: org.mortbay.util.AttributesMap _attributes> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.mortbay.jetty.Server: java.util.List _dependentLifeCycles> = $r3;

        r0.<org.mortbay.jetty.Server: int _graceful> = 0;

        virtualinvoke r0.<org.mortbay.jetty.Server: void setServer(org.mortbay.jetty.Server)>(r0);

        $r4 = new org.mortbay.jetty.bio.SocketConnector;

        specialinvoke $r4.<org.mortbay.jetty.bio.SocketConnector: void <init>()>();

        interfaceinvoke $r4.<org.mortbay.jetty.Connector: void setPort(int)>(i0);

        $r5 = newarray (org.mortbay.jetty.Connector)[1];

        $r5[0] = $r4;

        virtualinvoke r0.<org.mortbay.jetty.Server: void setConnectors(org.mortbay.jetty.Connector[])>($r5);

        return;
    }

    public static java.lang.String getVersion()
    {
        java.lang.String $r0;

        $r0 = <org.mortbay.jetty.Server: java.lang.String _version>;

        return $r0;
    }

    public org.mortbay.component.Container getContainer()
    {
        org.mortbay.jetty.Server r0;
        org.mortbay.component.Container $r1;

        r0 := @this: org.mortbay.jetty.Server;

        $r1 = r0.<org.mortbay.jetty.Server: org.mortbay.component.Container _container>;

        return $r1;
    }

    public boolean getStopAtShutdown()
    {
        org.mortbay.jetty.Server r0;
        org.mortbay.jetty.Server$ShutdownHookThread $r1;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.Server;

        $r1 = <org.mortbay.jetty.Server: org.mortbay.jetty.Server$ShutdownHookThread hookThread>;

        $z0 = virtualinvoke $r1.<org.mortbay.jetty.Server$ShutdownHookThread: boolean contains(org.mortbay.jetty.Server)>(r0);

        return $z0;
    }

    public void setStopAtShutdown(boolean)
    {
        org.mortbay.jetty.Server r0;
        org.mortbay.jetty.Server$ShutdownHookThread $r1, $r2;
        boolean z0;

        r0 := @this: org.mortbay.jetty.Server;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r2 = <org.mortbay.jetty.Server: org.mortbay.jetty.Server$ShutdownHookThread hookThread>;

        virtualinvoke $r2.<org.mortbay.jetty.Server$ShutdownHookThread: boolean add(org.mortbay.jetty.Server)>(r0);

        goto label2;

     label1:
        $r1 = <org.mortbay.jetty.Server: org.mortbay.jetty.Server$ShutdownHookThread hookThread>;

        virtualinvoke $r1.<org.mortbay.jetty.Server$ShutdownHookThread: boolean remove(org.mortbay.jetty.Server)>(r0);

     label2:
        return;
    }

    public org.mortbay.jetty.Connector[] getConnectors()
    {
        org.mortbay.jetty.Server r0;
        org.mortbay.jetty.Connector[] $r1;

        r0 := @this: org.mortbay.jetty.Server;

        $r1 = r0.<org.mortbay.jetty.Server: org.mortbay.jetty.Connector[] _connectors>;

        return $r1;
    }

    public void addConnector(org.mortbay.jetty.Connector)
    {
        java.lang.Object[] $r4;
        org.mortbay.jetty.Connector r2;
        org.mortbay.jetty.Server r0;
        org.mortbay.jetty.Connector[] $r1, $r5, $r6;
        java.lang.Class $r3, $r7;

        r0 := @this: org.mortbay.jetty.Server;

        r2 := @parameter0: org.mortbay.jetty.Connector;

        $r1 = virtualinvoke r0.<org.mortbay.jetty.Server: org.mortbay.jetty.Connector[] getConnectors()>();

        $r3 = <org.mortbay.jetty.Server: java.lang.Class class$org$mortbay$jetty$Connector>;

        if $r3 != null goto label1;

        $r7 = staticinvoke <org.mortbay.jetty.Server: java.lang.Class class$(java.lang.String)>("org.mortbay.jetty.Connector");

        <org.mortbay.jetty.Server: java.lang.Class class$org$mortbay$jetty$Connector> = $r7;

        goto label2;

     label1:
        $r7 = <org.mortbay.jetty.Server: java.lang.Class class$org$mortbay$jetty$Connector>;

     label2:
        $r4 = staticinvoke <org.mortbay.util.LazyList: java.lang.Object[] addToArray(java.lang.Object[],java.lang.Object,java.lang.Class)>($r1, r2, $r7);

        $r5 = (org.mortbay.jetty.Connector[]) $r4;

        $r6 = (org.mortbay.jetty.Connector[]) $r5;

        virtualinvoke r0.<org.mortbay.jetty.Server: void setConnectors(org.mortbay.jetty.Connector[])>($r6);

        return;
    }

    public void removeConnector(org.mortbay.jetty.Connector)
    {
        org.mortbay.jetty.Server r0;
        org.mortbay.jetty.Connector[] $r1, $r4, $r5;
        java.lang.Object[] $r3;
        org.mortbay.jetty.Connector r2;

        r0 := @this: org.mortbay.jetty.Server;

        r2 := @parameter0: org.mortbay.jetty.Connector;

        $r1 = virtualinvoke r0.<org.mortbay.jetty.Server: org.mortbay.jetty.Connector[] getConnectors()>();

        $r3 = staticinvoke <org.mortbay.util.LazyList: java.lang.Object[] removeFromArray(java.lang.Object[],java.lang.Object)>($r1, r2);

        $r4 = (org.mortbay.jetty.Connector[]) $r3;

        $r5 = (org.mortbay.jetty.Connector[]) $r4;

        virtualinvoke r0.<org.mortbay.jetty.Server: void setConnectors(org.mortbay.jetty.Connector[])>($r5);

        return;
    }

    public void setConnectors(org.mortbay.jetty.Connector[])
    {
        org.mortbay.jetty.Server r1;
        org.mortbay.jetty.Connector[] r0, $r2;
        org.mortbay.component.Container $r3;
        org.mortbay.jetty.Connector $r4;
        int $i0, i1;

        r1 := @this: org.mortbay.jetty.Server;

        r0 := @parameter0: org.mortbay.jetty.Connector[];

        if r0 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label2;

        $r4 = r0[i1];

        interfaceinvoke $r4.<org.mortbay.jetty.Connector: void setServer(org.mortbay.jetty.Server)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = r1.<org.mortbay.jetty.Server: org.mortbay.component.Container _container>;

        $r2 = r1.<org.mortbay.jetty.Server: org.mortbay.jetty.Connector[] _connectors>;

        virtualinvoke $r3.<org.mortbay.component.Container: void update(java.lang.Object,java.lang.Object[],java.lang.Object[],java.lang.String)>(r1, $r2, r0, "connector");

        r1.<org.mortbay.jetty.Server: org.mortbay.jetty.Connector[] _connectors> = r0;

        return;
    }

    public org.mortbay.thread.ThreadPool getThreadPool()
    {
        org.mortbay.jetty.Server r0;
        org.mortbay.thread.ThreadPool $r1;

        r0 := @this: org.mortbay.jetty.Server;

        $r1 = r0.<org.mortbay.jetty.Server: org.mortbay.thread.ThreadPool _threadPool>;

        return $r1;
    }

    public void setThreadPool(org.mortbay.thread.ThreadPool)
    {
        org.mortbay.jetty.Server r0;
        org.mortbay.component.Container $r3;
        org.mortbay.thread.ThreadPool r1, $r2;

        r0 := @this: org.mortbay.jetty.Server;

        r1 := @parameter0: org.mortbay.thread.ThreadPool;

        $r3 = r0.<org.mortbay.jetty.Server: org.mortbay.component.Container _container>;

        $r2 = r0.<org.mortbay.jetty.Server: org.mortbay.thread.ThreadPool _threadPool>;

        virtualinvoke $r3.<org.mortbay.component.Container: void update(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.String,boolean)>(r0, $r2, r1, "threadpool", 1);

        r0.<org.mortbay.jetty.Server: org.mortbay.thread.ThreadPool _threadPool> = r1;

        return;
    }

    protected void doStart() throws java.lang.Exception
    {
        org.mortbay.jetty.Server r7;
        org.mortbay.jetty.SessionIdManager $r12, $r20;
        org.mortbay.jetty.security.UserRealm[] $r8, $r24, $r25, $r27;
        boolean $z0, $z1, $z2;
        org.mortbay.jetty.security.UserRealm $r26, $r28;
        java.util.List $r9;
        org.mortbay.thread.ThreadPool $r11, $r13, $r18;
        java.lang.Throwable $r30, $r31, $r32, $r33;
        org.mortbay.jetty.Connector $r17;
        org.mortbay.thread.QueuedThreadPool $r21;
        org.mortbay.util.MultiException $r6;
        org.mortbay.jetty.Connector[] $r14, $r15, $r16;
        java.lang.StringBuffer $r0, $r1, $r3;
        int $i0, $i1, i2, i3;
        java.lang.String $r2, $r4, $r5;
        java.util.Iterator $r10;
        org.mortbay.component.LifeCycle $r19, $r23, $r29;
        java.lang.Object $r22;

        r7 := @this: org.mortbay.jetty.Server;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("jetty-");

        $r2 = <org.mortbay.jetty.Server: java.lang.String _version>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.mortbay.log.Log: void info(java.lang.String)>($r4);

        $r5 = <org.mortbay.jetty.Server: java.lang.String _version>;

        staticinvoke <org.mortbay.jetty.HttpGenerator: void setServerVersion(java.lang.String)>($r5);

        $r6 = new org.mortbay.util.MultiException;

        specialinvoke $r6.<org.mortbay.util.MultiException: void <init>()>();

        i2 = 0;

     label01:
        $r8 = r7.<org.mortbay.jetty.Server: org.mortbay.jetty.security.UserRealm[] _realms>;

        if $r8 == null goto label03;

        $r24 = r7.<org.mortbay.jetty.Server: org.mortbay.jetty.security.UserRealm[] _realms>;

        $i1 = lengthof $r24;

        if i2 >= $i1 goto label03;

        $r25 = r7.<org.mortbay.jetty.Server: org.mortbay.jetty.security.UserRealm[] _realms>;

        $r26 = $r25[i2];

        $z1 = $r26 instanceof org.mortbay.component.LifeCycle;

        if $z1 == 0 goto label02;

        $r27 = r7.<org.mortbay.jetty.Server: org.mortbay.jetty.security.UserRealm[] _realms>;

        $r28 = $r27[i2];

        $r29 = (org.mortbay.component.LifeCycle) $r28;

        interfaceinvoke $r29.<org.mortbay.component.LifeCycle: void start()>();

     label02:
        i2 = i2 + 1;

        goto label01;

     label03:
        $r9 = r7.<org.mortbay.jetty.Server: java.util.List _dependentLifeCycles>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

     label05:
        $r22 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r23 = (org.mortbay.component.LifeCycle) $r22;

        interfaceinvoke $r23.<org.mortbay.component.LifeCycle: void start()>();

     label06:
        goto label04;

     label07:
        $r33 := @caughtexception;

        virtualinvoke $r6.<org.mortbay.util.MultiException: void add(java.lang.Throwable)>($r33);

        goto label04;

     label08:
        $r11 = r7.<org.mortbay.jetty.Server: org.mortbay.thread.ThreadPool _threadPool>;

        if $r11 != null goto label09;

        $r21 = new org.mortbay.thread.QueuedThreadPool;

        specialinvoke $r21.<org.mortbay.thread.QueuedThreadPool: void <init>()>();

        virtualinvoke r7.<org.mortbay.jetty.Server: void setThreadPool(org.mortbay.thread.ThreadPool)>($r21);

     label09:
        $r12 = r7.<org.mortbay.jetty.Server: org.mortbay.jetty.SessionIdManager _sessionIdManager>;

        if $r12 == null goto label10;

        $r20 = r7.<org.mortbay.jetty.Server: org.mortbay.jetty.SessionIdManager _sessionIdManager>;

        interfaceinvoke $r20.<org.mortbay.jetty.SessionIdManager: void start()>();

     label10:
        $r13 = r7.<org.mortbay.jetty.Server: org.mortbay.thread.ThreadPool _threadPool>;

        $z0 = $r13 instanceof org.mortbay.component.LifeCycle;

        if $z0 == 0 goto label11;

        $r18 = r7.<org.mortbay.jetty.Server: org.mortbay.thread.ThreadPool _threadPool>;

        $r19 = (org.mortbay.component.LifeCycle) $r18;

        interfaceinvoke $r19.<org.mortbay.component.LifeCycle: void start()>();

     label11:
        goto label13;

     label12:
        $r32 := @caughtexception;

        virtualinvoke $r6.<org.mortbay.util.MultiException: void add(java.lang.Throwable)>($r32);

     label13:
        specialinvoke r7.<org.mortbay.jetty.handler.HandlerWrapper: void doStart()>();

     label14:
        goto label16;

     label15:
        $r31 := @caughtexception;

        staticinvoke <org.mortbay.log.Log: void warn(java.lang.String,java.lang.Throwable)>("Error starting handlers", $r31);

     label16:
        $r14 = r7.<org.mortbay.jetty.Server: org.mortbay.jetty.Connector[] _connectors>;

        if $r14 == null goto label22;

        i3 = 0;

     label17:
        $r15 = r7.<org.mortbay.jetty.Server: org.mortbay.jetty.Connector[] _connectors>;

        $i0 = lengthof $r15;

        if i3 >= $i0 goto label22;

     label18:
        $r16 = r7.<org.mortbay.jetty.Server: org.mortbay.jetty.Connector[] _connectors>;

        $r17 = $r16[i3];

        interfaceinvoke $r17.<org.mortbay.jetty.Connector: void start()>();

     label19:
        goto label21;

     label20:
        $r30 := @caughtexception;

        virtualinvoke $r6.<org.mortbay.util.MultiException: void add(java.lang.Throwable)>($r30);

     label21:
        i3 = i3 + 1;

        goto label17;

     label22:
        virtualinvoke $r6.<org.mortbay.util.MultiException: void ifExceptionThrow()>();

        return;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label18 to label19 with label20;
    }

    protected void doStop() throws java.lang.Exception
    {
        java.util.ListIterator $r9;
        org.mortbay.jetty.Handler $r21;
        org.mortbay.jetty.Server r1;
        org.mortbay.jetty.SessionIdManager $r4, $r14;
        org.mortbay.jetty.security.UserRealm[] $r2, $r28, $r29, $r31;
        org.mortbay.jetty.Handler[] $r20;
        boolean $z0, $z1, $z2, $z3;
        org.mortbay.jetty.security.UserRealm $r30, $r32;
        java.util.List $r6, $r7, $r8;
        org.mortbay.thread.ThreadPool $r5, $r12;
        org.mortbay.jetty.Server$Graceful r22;
        java.lang.Throwable $r34, $r35, $r36, $r37, $r38;
        org.mortbay.jetty.Connector $r17, $r25, $r27;
        long $l3;
        org.mortbay.util.MultiException $r40;
        org.mortbay.jetty.Connector[] $r3, $r15, $r16, $r18, $r23, $r24, $r26;
        int $i0, $i1, $i2, $i4, i5, i6, $i7, i8, $i9, i10, $i11, $i13, $i15;
        org.mortbay.component.LifeCycle $r11, $r13, $r33;
        java.lang.Object $r10;
        java.lang.Class $r19, $r39;

        r1 := @this: org.mortbay.jetty.Server;

        $r40 = new org.mortbay.util.MultiException;

        specialinvoke $r40.<org.mortbay.util.MultiException: void <init>()>();

        i5 = 0;

     label01:
        $r2 = r1.<org.mortbay.jetty.Server: org.mortbay.jetty.security.UserRealm[] _realms>;

        if $r2 == null goto label03;

        $r28 = r1.<org.mortbay.jetty.Server: org.mortbay.jetty.security.UserRealm[] _realms>;

        $i4 = lengthof $r28;

        if i5 >= $i4 goto label03;

        $r29 = r1.<org.mortbay.jetty.Server: org.mortbay.jetty.security.UserRealm[] _realms>;

        $r30 = $r29[i5];

        $z2 = $r30 instanceof org.mortbay.component.LifeCycle;

        if $z2 == 0 goto label02;

        $r31 = r1.<org.mortbay.jetty.Server: org.mortbay.jetty.security.UserRealm[] _realms>;

        $r32 = $r31[i5];

        $r33 = (org.mortbay.component.LifeCycle) $r32;

        interfaceinvoke $r33.<org.mortbay.component.LifeCycle: void stop()>();

     label02:
        i5 = i5 + 1;

        goto label01;

     label03:
        $i0 = r1.<org.mortbay.jetty.Server: int _graceful>;

        if $i0 <= 0 goto label13;

        $r18 = r1.<org.mortbay.jetty.Server: org.mortbay.jetty.Connector[] _connectors>;

        if $r18 == null goto label08;

        $r23 = r1.<org.mortbay.jetty.Server: org.mortbay.jetty.Connector[] _connectors>;

        i6 = lengthof $r23;

     label04:
        $i7 = i6;

        $i13 = (int) -1;

        i6 = i6 + $i13;

        if $i7 <= 0 goto label08;

        $r24 = r1.<org.mortbay.jetty.Server: org.mortbay.jetty.Connector[] _connectors>;

        $r25 = $r24[i6];

        staticinvoke <org.mortbay.log.Log: void info(java.lang.String,java.lang.Object)>("Graceful shutdown {}", $r25);

     label05:
        $r26 = r1.<org.mortbay.jetty.Server: org.mortbay.jetty.Connector[] _connectors>;

        $r27 = $r26[i6];

        interfaceinvoke $r27.<org.mortbay.jetty.Connector: void close()>();

     label06:
        goto label04;

     label07:
        $r38 := @caughtexception;

        virtualinvoke $r40.<org.mortbay.util.MultiException: void add(java.lang.Throwable)>($r38);

        goto label04;

     label08:
        $r19 = <org.mortbay.jetty.Server: java.lang.Class class$org$mortbay$jetty$Server$Graceful>;

        if $r19 != null goto label09;

        $r39 = staticinvoke <org.mortbay.jetty.Server: java.lang.Class class$(java.lang.String)>("org.mortbay.jetty.Server$Graceful");

        <org.mortbay.jetty.Server: java.lang.Class class$org$mortbay$jetty$Server$Graceful> = $r39;

        goto label10;

     label09:
        $r39 = <org.mortbay.jetty.Server: java.lang.Class class$org$mortbay$jetty$Server$Graceful>;

     label10:
        $r20 = virtualinvoke r1.<org.mortbay.jetty.Server: org.mortbay.jetty.Handler[] getChildHandlersByClass(java.lang.Class)>($r39);

        i8 = 0;

     label11:
        $i9 = lengthof $r20;

        if i8 >= $i9 goto label12;

        $r21 = $r20[i8];

        r22 = (org.mortbay.jetty.Server$Graceful) $r21;

        staticinvoke <org.mortbay.log.Log: void info(java.lang.String,java.lang.Object)>("Graceful shutdown {}", r22);

        interfaceinvoke r22.<org.mortbay.jetty.Server$Graceful: void setShutdown(boolean)>(1);

        i8 = i8 + 1;

        goto label11;

     label12:
        $i2 = r1.<org.mortbay.jetty.Server: int _graceful>;

        $l3 = (long) $i2;

        staticinvoke <java.lang.Thread: void sleep(long)>($l3);

     label13:
        $r3 = r1.<org.mortbay.jetty.Server: org.mortbay.jetty.Connector[] _connectors>;

        if $r3 == null goto label18;

        $r15 = r1.<org.mortbay.jetty.Server: org.mortbay.jetty.Connector[] _connectors>;

        i10 = lengthof $r15;

     label14:
        $i11 = i10;

        $i15 = (int) -1;

        i10 = i10 + $i15;

        if $i11 <= 0 goto label18;

     label15:
        $r16 = r1.<org.mortbay.jetty.Server: org.mortbay.jetty.Connector[] _connectors>;

        $r17 = $r16[i10];

        interfaceinvoke $r17.<org.mortbay.jetty.Connector: void stop()>();

     label16:
        goto label14;

     label17:
        $r37 := @caughtexception;

        virtualinvoke $r40.<org.mortbay.util.MultiException: void add(java.lang.Throwable)>($r37);

        goto label14;

     label18:
        specialinvoke r1.<org.mortbay.jetty.handler.HandlerWrapper: void doStop()>();

     label19:
        goto label21;

     label20:
        $r36 := @caughtexception;

        virtualinvoke $r40.<org.mortbay.util.MultiException: void add(java.lang.Throwable)>($r36);

     label21:
        $r4 = r1.<org.mortbay.jetty.Server: org.mortbay.jetty.SessionIdManager _sessionIdManager>;

        if $r4 == null goto label22;

        $r14 = r1.<org.mortbay.jetty.Server: org.mortbay.jetty.SessionIdManager _sessionIdManager>;

        interfaceinvoke $r14.<org.mortbay.jetty.SessionIdManager: void stop()>();

     label22:
        $r5 = r1.<org.mortbay.jetty.Server: org.mortbay.thread.ThreadPool _threadPool>;

        $z0 = $r5 instanceof org.mortbay.component.LifeCycle;

        if $z0 == 0 goto label23;

        $r12 = r1.<org.mortbay.jetty.Server: org.mortbay.thread.ThreadPool _threadPool>;

        $r13 = (org.mortbay.component.LifeCycle) $r12;

        interfaceinvoke $r13.<org.mortbay.component.LifeCycle: void stop()>();

     label23:
        goto label25;

     label24:
        $r35 := @caughtexception;

        virtualinvoke $r40.<org.mortbay.util.MultiException: void add(java.lang.Throwable)>($r35);

     label25:
        $r6 = r1.<org.mortbay.jetty.Server: java.util.List _dependentLifeCycles>;

        $z1 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label30;

        $r8 = r1.<org.mortbay.jetty.Server: java.util.List _dependentLifeCycles>;

        $r7 = r1.<org.mortbay.jetty.Server: java.util.List _dependentLifeCycles>;

        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.ListIterator listIterator(int)>($i1);

     label26:
        $z3 = interfaceinvoke $r9.<java.util.ListIterator: boolean hasPrevious()>();

        if $z3 == 0 goto label30;

     label27:
        $r10 = interfaceinvoke $r9.<java.util.ListIterator: java.lang.Object previous()>();

        $r11 = (org.mortbay.component.LifeCycle) $r10;

        interfaceinvoke $r11.<org.mortbay.component.LifeCycle: void stop()>();

     label28:
        goto label26;

     label29:
        $r34 := @caughtexception;

        virtualinvoke $r40.<org.mortbay.util.MultiException: void add(java.lang.Throwable)>($r34);

        goto label26;

     label30:
        virtualinvoke $r40.<org.mortbay.util.MultiException: void ifExceptionThrow()>();

        return;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label27 to label28 with label29;
    }

    public void handle(org.mortbay.jetty.HttpConnection) throws java.io.IOException, javax.servlet.ServletException
    {
        org.mortbay.jetty.Request $r1, $r4, $r12;
        org.mortbay.jetty.Server r3;
        java.lang.StringBuffer $r6, $r7, $r8, $r9, $r10, $r14, $r15, $r16, $r17, $r19;
        int $i0;
        java.lang.String $r2, $r11, $r20;
        boolean $z0;
        org.mortbay.jetty.HttpConnection r0;
        org.mortbay.jetty.Response $r5, $r13, $r18;

        r3 := @this: org.mortbay.jetty.Server;

        r0 := @parameter0: org.mortbay.jetty.HttpConnection;

        $r1 = virtualinvoke r0.<org.mortbay.jetty.HttpConnection: org.mortbay.jetty.Request getRequest()>();

        $r2 = virtualinvoke $r1.<org.mortbay.jetty.Request: java.lang.String getPathInfo()>();

        $z0 = staticinvoke <org.mortbay.log.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("REQUEST ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" on ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.mortbay.log.Log: void debug(java.lang.String)>($r11);

        $r12 = virtualinvoke r0.<org.mortbay.jetty.HttpConnection: org.mortbay.jetty.Request getRequest()>();

        $r13 = virtualinvoke r0.<org.mortbay.jetty.HttpConnection: org.mortbay.jetty.Response getResponse()>();

        virtualinvoke r3.<org.mortbay.jetty.Server: void handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)>($r2, $r12, $r13, 1);

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RESPONSE ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  ");

        $r18 = virtualinvoke r0.<org.mortbay.jetty.HttpConnection: org.mortbay.jetty.Response getResponse()>();

        $i0 = virtualinvoke $r18.<org.mortbay.jetty.Response: int getStatus()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.mortbay.log.Log: void debug(java.lang.String)>($r20);

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<org.mortbay.jetty.HttpConnection: org.mortbay.jetty.Request getRequest()>();

        $r5 = virtualinvoke r0.<org.mortbay.jetty.HttpConnection: org.mortbay.jetty.Response getResponse()>();

        virtualinvoke r3.<org.mortbay.jetty.Server: void handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)>($r2, $r4, $r5, 1);

     label2:
        return;
    }

    public void join() throws java.lang.InterruptedException
    {
        org.mortbay.jetty.Server r0;
        org.mortbay.thread.ThreadPool $r1;

        r0 := @this: org.mortbay.jetty.Server;

        $r1 = virtualinvoke r0.<org.mortbay.jetty.Server: org.mortbay.thread.ThreadPool getThreadPool()>();

        interfaceinvoke $r1.<org.mortbay.thread.ThreadPool: void join()>();

        return;
    }

    public org.mortbay.jetty.security.UserRealm[] getUserRealms()
    {
        org.mortbay.jetty.Server r0;
        org.mortbay.jetty.security.UserRealm[] $r1;

        r0 := @this: org.mortbay.jetty.Server;

        $r1 = r0.<org.mortbay.jetty.Server: org.mortbay.jetty.security.UserRealm[] _realms>;

        return $r1;
    }

    public void setUserRealms(org.mortbay.jetty.security.UserRealm[])
    {
        org.mortbay.jetty.Server r0;
        org.mortbay.component.Container $r3;
        org.mortbay.jetty.security.UserRealm[] r1, $r2;

        r0 := @this: org.mortbay.jetty.Server;

        r1 := @parameter0: org.mortbay.jetty.security.UserRealm[];

        $r3 = r0.<org.mortbay.jetty.Server: org.mortbay.component.Container _container>;

        $r2 = r0.<org.mortbay.jetty.Server: org.mortbay.jetty.security.UserRealm[] _realms>;

        virtualinvoke $r3.<org.mortbay.component.Container: void update(java.lang.Object,java.lang.Object[],java.lang.Object[],java.lang.String,boolean)>(r0, $r2, r1, "realm", 1);

        r0.<org.mortbay.jetty.Server: org.mortbay.jetty.security.UserRealm[] _realms> = r1;

        return;
    }

    public void addUserRealm(org.mortbay.jetty.security.UserRealm)
    {
        java.lang.Object[] $r4;
        org.mortbay.jetty.security.UserRealm r2;
        org.mortbay.jetty.Server r0;
        org.mortbay.jetty.security.UserRealm[] $r1, $r5, $r6;
        java.lang.Class $r3, $r7;

        r0 := @this: org.mortbay.jetty.Server;

        r2 := @parameter0: org.mortbay.jetty.security.UserRealm;

        $r1 = virtualinvoke r0.<org.mortbay.jetty.Server: org.mortbay.jetty.security.UserRealm[] getUserRealms()>();

        $r3 = <org.mortbay.jetty.Server: java.lang.Class class$org$mortbay$jetty$security$UserRealm>;

        if $r3 != null goto label1;

        $r7 = staticinvoke <org.mortbay.jetty.Server: java.lang.Class class$(java.lang.String)>("org.mortbay.jetty.security.UserRealm");

        <org.mortbay.jetty.Server: java.lang.Class class$org$mortbay$jetty$security$UserRealm> = $r7;

        goto label2;

     label1:
        $r7 = <org.mortbay.jetty.Server: java.lang.Class class$org$mortbay$jetty$security$UserRealm>;

     label2:
        $r4 = staticinvoke <org.mortbay.util.LazyList: java.lang.Object[] addToArray(java.lang.Object[],java.lang.Object,java.lang.Class)>($r1, r2, $r7);

        $r5 = (org.mortbay.jetty.security.UserRealm[]) $r4;

        $r6 = (org.mortbay.jetty.security.UserRealm[]) $r5;

        virtualinvoke r0.<org.mortbay.jetty.Server: void setUserRealms(org.mortbay.jetty.security.UserRealm[])>($r6);

        return;
    }

    public void removeUserRealm(org.mortbay.jetty.security.UserRealm)
    {
        org.mortbay.jetty.Server r0;
        java.lang.Object[] $r3;
        org.mortbay.jetty.security.UserRealm[] $r1, $r4, $r5;
        org.mortbay.jetty.security.UserRealm r2;

        r0 := @this: org.mortbay.jetty.Server;

        r2 := @parameter0: org.mortbay.jetty.security.UserRealm;

        $r1 = virtualinvoke r0.<org.mortbay.jetty.Server: org.mortbay.jetty.security.UserRealm[] getUserRealms()>();

        $r3 = staticinvoke <org.mortbay.util.LazyList: java.lang.Object[] removeFromArray(java.lang.Object[],java.lang.Object)>($r1, r2);

        $r4 = (org.mortbay.jetty.security.UserRealm[]) $r3;

        $r5 = (org.mortbay.jetty.security.UserRealm[]) $r4;

        virtualinvoke r0.<org.mortbay.jetty.Server: void setUserRealms(org.mortbay.jetty.security.UserRealm[])>($r5);

        return;
    }

    public org.mortbay.jetty.SessionIdManager getSessionIdManager()
    {
        org.mortbay.jetty.Server r0;
        org.mortbay.jetty.SessionIdManager $r1;

        r0 := @this: org.mortbay.jetty.Server;

        $r1 = r0.<org.mortbay.jetty.Server: org.mortbay.jetty.SessionIdManager _sessionIdManager>;

        return $r1;
    }

    public void setSessionIdManager(org.mortbay.jetty.SessionIdManager)
    {
        org.mortbay.jetty.Server r0;
        org.mortbay.component.Container $r3;
        org.mortbay.jetty.SessionIdManager r1, $r2;

        r0 := @this: org.mortbay.jetty.Server;

        r1 := @parameter0: org.mortbay.jetty.SessionIdManager;

        $r3 = r0.<org.mortbay.jetty.Server: org.mortbay.component.Container _container>;

        $r2 = r0.<org.mortbay.jetty.Server: org.mortbay.jetty.SessionIdManager _sessionIdManager>;

        virtualinvoke $r3.<org.mortbay.component.Container: void update(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.String,boolean)>(r0, $r2, r1, "sessionIdManager", 1);

        r0.<org.mortbay.jetty.Server: org.mortbay.jetty.SessionIdManager _sessionIdManager> = r1;

        return;
    }

    public void setSendServerVersion(boolean)
    {
        org.mortbay.jetty.Server r0;
        boolean z0;

        r0 := @this: org.mortbay.jetty.Server;

        z0 := @parameter0: boolean;

        r0.<org.mortbay.jetty.Server: boolean _sendServerVersion> = z0;

        return;
    }

    public boolean getSendServerVersion()
    {
        org.mortbay.jetty.Server r0;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.Server;

        $z0 = r0.<org.mortbay.jetty.Server: boolean _sendServerVersion>;

        return $z0;
    }

    public void setSendDateHeader(boolean)
    {
        org.mortbay.jetty.Server r0;
        boolean z0;

        r0 := @this: org.mortbay.jetty.Server;

        z0 := @parameter0: boolean;

        r0.<org.mortbay.jetty.Server: boolean _sendDateHeader> = z0;

        return;
    }

    public boolean getSendDateHeader()
    {
        org.mortbay.jetty.Server r0;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.Server;

        $z0 = r0.<org.mortbay.jetty.Server: boolean _sendDateHeader>;

        return $z0;
    }

    public void addLifeCycle(org.mortbay.component.LifeCycle)
    {
        org.mortbay.component.Container $r4;
        java.lang.RuntimeException $r6;
        java.lang.Exception $r5;
        org.mortbay.jetty.Server r1;
        java.util.List $r2, $r3;
        org.mortbay.component.LifeCycle r0;
        boolean $z0, $z1;

        r1 := @this: org.mortbay.jetty.Server;

        r0 := @parameter0: org.mortbay.component.LifeCycle;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = r1.<org.mortbay.jetty.Server: java.util.List _dependentLifeCycles>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r0);

        if $z0 != 0 goto label2;

        $r3 = r1.<org.mortbay.jetty.Server: java.util.List _dependentLifeCycles>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r0);

        $r4 = r1.<org.mortbay.jetty.Server: org.mortbay.component.Container _container>;

        virtualinvoke $r4.<org.mortbay.component.Container: void addBean(java.lang.Object)>(r0);

     label2:
        $z1 = virtualinvoke r1.<org.mortbay.jetty.Server: boolean isStarted()>();

        if $z1 == 0 goto label3;

        interfaceinvoke r0.<org.mortbay.component.LifeCycle: void start()>();

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void removeLifeCycle(org.mortbay.component.LifeCycle)
    {
        org.mortbay.jetty.Server r1;
        java.util.List $r2;
        org.mortbay.component.Container $r3;
        org.mortbay.component.LifeCycle r0;

        r1 := @this: org.mortbay.jetty.Server;

        r0 := @parameter0: org.mortbay.component.LifeCycle;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = r1.<org.mortbay.jetty.Server: java.util.List _dependentLifeCycles>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r0);

        $r3 = r1.<org.mortbay.jetty.Server: org.mortbay.component.Container _container>;

        virtualinvoke $r3.<org.mortbay.component.Container: void removeBean(java.lang.Object)>(r0);

        return;
    }

    public void addHandler(org.mortbay.jetty.Handler)
    {
        org.mortbay.jetty.Handler $r1, $r2, $r5, r6, $r7;
        org.mortbay.jetty.handler.HandlerCollection $r3, $r8;
        org.mortbay.jetty.Server r0;
        org.mortbay.jetty.Handler[] $r4;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.Server;

        r6 := @parameter0: org.mortbay.jetty.Handler;

        $r1 = virtualinvoke r0.<org.mortbay.jetty.Server: org.mortbay.jetty.Handler getHandler()>();

        if $r1 != null goto label1;

        virtualinvoke r0.<org.mortbay.jetty.Server: void setHandler(org.mortbay.jetty.Handler)>(r6);

        goto label3;

     label1:
        $r2 = virtualinvoke r0.<org.mortbay.jetty.Server: org.mortbay.jetty.Handler getHandler()>();

        $z0 = $r2 instanceof org.mortbay.jetty.handler.HandlerCollection;

        if $z0 == 0 goto label2;

        $r7 = virtualinvoke r0.<org.mortbay.jetty.Server: org.mortbay.jetty.Handler getHandler()>();

        $r8 = (org.mortbay.jetty.handler.HandlerCollection) $r7;

        virtualinvoke $r8.<org.mortbay.jetty.handler.HandlerCollection: void addHandler(org.mortbay.jetty.Handler)>(r6);

        goto label3;

     label2:
        $r3 = new org.mortbay.jetty.handler.HandlerCollection;

        specialinvoke $r3.<org.mortbay.jetty.handler.HandlerCollection: void <init>()>();

        $r4 = newarray (org.mortbay.jetty.Handler)[2];

        $r5 = virtualinvoke r0.<org.mortbay.jetty.Server: org.mortbay.jetty.Handler getHandler()>();

        $r4[0] = $r5;

        $r4[1] = r6;

        virtualinvoke $r3.<org.mortbay.jetty.handler.HandlerCollection: void setHandlers(org.mortbay.jetty.Handler[])>($r4);

        virtualinvoke r0.<org.mortbay.jetty.Server: void setHandler(org.mortbay.jetty.Handler)>($r3);

     label3:
        return;
    }

    public void removeHandler(org.mortbay.jetty.Handler)
    {
        org.mortbay.jetty.Server r0;
        org.mortbay.jetty.Handler $r1, $r2, r3;
        org.mortbay.jetty.handler.HandlerCollection $r4;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.Server;

        r3 := @parameter0: org.mortbay.jetty.Handler;

        $r1 = virtualinvoke r0.<org.mortbay.jetty.Server: org.mortbay.jetty.Handler getHandler()>();

        $z0 = $r1 instanceof org.mortbay.jetty.handler.HandlerCollection;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<org.mortbay.jetty.Server: org.mortbay.jetty.Handler getHandler()>();

        $r4 = (org.mortbay.jetty.handler.HandlerCollection) $r2;

        virtualinvoke $r4.<org.mortbay.jetty.handler.HandlerCollection: void removeHandler(org.mortbay.jetty.Handler)>(r3);

     label1:
        return;
    }

    public org.mortbay.jetty.Handler[] getHandlers()
    {
        org.mortbay.jetty.Server r0;
        org.mortbay.jetty.Handler[] $r4;
        org.mortbay.jetty.Handler $r1, $r2;
        org.mortbay.jetty.handler.HandlerCollection $r3;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.Server;

        $r1 = virtualinvoke r0.<org.mortbay.jetty.Server: org.mortbay.jetty.Handler getHandler()>();

        $z0 = $r1 instanceof org.mortbay.jetty.handler.HandlerCollection;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<org.mortbay.jetty.Server: org.mortbay.jetty.Handler getHandler()>();

        $r3 = (org.mortbay.jetty.handler.HandlerCollection) $r2;

        $r4 = virtualinvoke $r3.<org.mortbay.jetty.handler.HandlerCollection: org.mortbay.jetty.Handler[] getHandlers()>();

        return $r4;

     label1:
        return null;
    }

    public void setHandlers(org.mortbay.jetty.Handler[])
    {
        org.mortbay.jetty.Server r0;
        org.mortbay.jetty.Handler[] r3;
        org.mortbay.jetty.Handler $r1, $r4;
        org.mortbay.jetty.handler.HandlerCollection $r2, r5;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.Server;

        r3 := @parameter0: org.mortbay.jetty.Handler[];

        $r1 = virtualinvoke r0.<org.mortbay.jetty.Server: org.mortbay.jetty.Handler getHandler()>();

        $z0 = $r1 instanceof org.mortbay.jetty.handler.HandlerCollection;

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<org.mortbay.jetty.Server: org.mortbay.jetty.Handler getHandler()>();

        r5 = (org.mortbay.jetty.handler.HandlerCollection) $r4;

        goto label2;

     label1:
        $r2 = new org.mortbay.jetty.handler.HandlerCollection;

        specialinvoke $r2.<org.mortbay.jetty.handler.HandlerCollection: void <init>()>();

        r5 = $r2;

        virtualinvoke r0.<org.mortbay.jetty.Server: void setHandler(org.mortbay.jetty.Handler)>($r2);

     label2:
        virtualinvoke r5.<org.mortbay.jetty.handler.HandlerCollection: void setHandlers(org.mortbay.jetty.Handler[])>(r3);

        return;
    }

    public void clearAttributes()
    {
        org.mortbay.jetty.Server r0;
        org.mortbay.util.AttributesMap $r1;

        r0 := @this: org.mortbay.jetty.Server;

        $r1 = r0.<org.mortbay.jetty.Server: org.mortbay.util.AttributesMap _attributes>;

        virtualinvoke $r1.<org.mortbay.util.AttributesMap: void clearAttributes()>();

        return;
    }

    public java.lang.Object getAttribute(java.lang.String)
    {
        org.mortbay.jetty.Server r0;
        java.lang.Object $r3;
        java.lang.String r1;
        org.mortbay.util.AttributesMap $r2;

        r0 := @this: org.mortbay.jetty.Server;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.mortbay.jetty.Server: org.mortbay.util.AttributesMap _attributes>;

        $r3 = virtualinvoke $r2.<org.mortbay.util.AttributesMap: java.lang.Object getAttribute(java.lang.String)>(r1);

        return $r3;
    }

    public java.util.Enumeration getAttributeNames()
    {
        org.mortbay.jetty.Server r0;
        java.util.Enumeration $r2;
        org.mortbay.util.AttributesMap $r1;

        r0 := @this: org.mortbay.jetty.Server;

        $r1 = r0.<org.mortbay.jetty.Server: org.mortbay.util.AttributesMap _attributes>;

        $r2 = staticinvoke <org.mortbay.util.AttributesMap: java.util.Enumeration getAttributeNamesCopy(org.mortbay.util.Attributes)>($r1);

        return $r2;
    }

    public void removeAttribute(java.lang.String)
    {
        org.mortbay.jetty.Server r0;
        java.lang.String r1;
        org.mortbay.util.AttributesMap $r2;

        r0 := @this: org.mortbay.jetty.Server;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.mortbay.jetty.Server: org.mortbay.util.AttributesMap _attributes>;

        virtualinvoke $r2.<org.mortbay.util.AttributesMap: void removeAttribute(java.lang.String)>(r1);

        return;
    }

    public void setAttribute(java.lang.String, java.lang.Object)
    {
        org.mortbay.jetty.Server r0;
        java.lang.Object r2;
        java.lang.String r1;
        org.mortbay.util.AttributesMap $r3;

        r0 := @this: org.mortbay.jetty.Server;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.mortbay.jetty.Server: org.mortbay.util.AttributesMap _attributes>;

        virtualinvoke $r3.<org.mortbay.util.AttributesMap: void setAttribute(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public int getGracefulShutdown()
    {
        org.mortbay.jetty.Server r0;
        int $i0;

        r0 := @this: org.mortbay.jetty.Server;

        $i0 = r0.<org.mortbay.jetty.Server: int _graceful>;

        return $i0;
    }

    public void setGracefulShutdown(int)
    {
        org.mortbay.jetty.Server r0;
        int i0;

        r0 := @this: org.mortbay.jetty.Server;

        i0 := @parameter0: int;

        r0.<org.mortbay.jetty.Server: int _graceful> = i0;

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Package $r2, $r4, $r7;
        org.mortbay.jetty.Server$ShutdownHookThread $r0;
        java.lang.Class $r1, $r3, $r6, $r8, $r9, $r10;
        java.lang.String $r5, $r11;

        <org.mortbay.jetty.Server: java.lang.String SNAPSHOT_VERSION> = "6.1-SNAPSHOT";

        <org.mortbay.jetty.Server: java.lang.String UNKNOWN_VERSION> = "6.1.x";

        $r0 = new org.mortbay.jetty.Server$ShutdownHookThread;

        specialinvoke $r0.<org.mortbay.jetty.Server$ShutdownHookThread: void <init>(org.mortbay.jetty.Server$1)>(null);

        <org.mortbay.jetty.Server: org.mortbay.jetty.Server$ShutdownHookThread hookThread> = $r0;

        $r1 = <org.mortbay.jetty.Server: java.lang.Class class$org$mortbay$jetty$Server>;

        if $r1 != null goto label1;

        $r8 = staticinvoke <org.mortbay.jetty.Server: java.lang.Class class$(java.lang.String)>("org.mortbay.jetty.Server");

        <org.mortbay.jetty.Server: java.lang.Class class$org$mortbay$jetty$Server> = $r8;

        goto label2;

     label1:
        $r8 = <org.mortbay.jetty.Server: java.lang.Class class$org$mortbay$jetty$Server>;

     label2:
        $r2 = virtualinvoke $r8.<java.lang.Class: java.lang.Package getPackage()>();

        if $r2 == null goto label7;

        $r3 = <org.mortbay.jetty.Server: java.lang.Class class$org$mortbay$jetty$Server>;

        if $r3 != null goto label3;

        $r9 = staticinvoke <org.mortbay.jetty.Server: java.lang.Class class$(java.lang.String)>("org.mortbay.jetty.Server");

        <org.mortbay.jetty.Server: java.lang.Class class$org$mortbay$jetty$Server> = $r9;

        goto label4;

     label3:
        $r9 = <org.mortbay.jetty.Server: java.lang.Class class$org$mortbay$jetty$Server>;

     label4:
        $r4 = virtualinvoke $r9.<java.lang.Class: java.lang.Package getPackage()>();

        $r5 = virtualinvoke $r4.<java.lang.Package: java.lang.String getImplementationVersion()>();

        if $r5 == null goto label7;

        $r6 = <org.mortbay.jetty.Server: java.lang.Class class$org$mortbay$jetty$Server>;

        if $r6 != null goto label5;

        $r10 = staticinvoke <org.mortbay.jetty.Server: java.lang.Class class$(java.lang.String)>("org.mortbay.jetty.Server");

        <org.mortbay.jetty.Server: java.lang.Class class$org$mortbay$jetty$Server> = $r10;

        goto label6;

     label5:
        $r10 = <org.mortbay.jetty.Server: java.lang.Class class$org$mortbay$jetty$Server>;

     label6:
        $r7 = virtualinvoke $r10.<java.lang.Class: java.lang.Package getPackage()>();

        $r11 = virtualinvoke $r7.<java.lang.Package: java.lang.String getImplementationVersion()>();

        goto label8;

     label7:
        $r11 = "6.1.x";

     label8:
        <org.mortbay.jetty.Server: java.lang.String _version> = $r11;

        return;
    }
}
