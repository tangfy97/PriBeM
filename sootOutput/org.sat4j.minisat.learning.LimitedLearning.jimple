public abstract class org.sat4j.minisat.learning.LimitedLearning extends java.lang.Object implements org.sat4j.minisat.core.LearningStrategy
{
    private static final long serialVersionUID;
    private final org.sat4j.minisat.learning.NoLearningButHeuristics none;
    private final org.sat4j.minisat.learning.MiniSATLearning all;
    protected org.sat4j.minisat.core.ILits lits;
    private org.sat4j.minisat.core.SolverStats stats;

    public void <init>()
    {
        org.sat4j.minisat.learning.NoLearningButHeuristics $r1;
        org.sat4j.minisat.learning.MiniSATLearning $r2;
        org.sat4j.minisat.learning.LimitedLearning r0;

        r0 := @this: org.sat4j.minisat.learning.LimitedLearning;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.sat4j.minisat.learning.NoLearningButHeuristics;

        specialinvoke $r1.<org.sat4j.minisat.learning.NoLearningButHeuristics: void <init>()>();

        r0.<org.sat4j.minisat.learning.LimitedLearning: org.sat4j.minisat.learning.NoLearningButHeuristics none> = $r1;

        $r2 = new org.sat4j.minisat.learning.MiniSATLearning;

        specialinvoke $r2.<org.sat4j.minisat.learning.MiniSATLearning: void <init>()>();

        r0.<org.sat4j.minisat.learning.LimitedLearning: org.sat4j.minisat.learning.MiniSATLearning all> = $r2;

        return;
    }

    public void setSolver(org.sat4j.minisat.core.Solver)
    {
        org.sat4j.minisat.core.DataStructureFactory $r4;
        org.sat4j.minisat.core.Solver r1;
        org.sat4j.minisat.core.ILits $r2;
        org.sat4j.minisat.learning.MiniSATLearning $r3;
        org.sat4j.minisat.core.SolverStats $r5;
        org.sat4j.minisat.learning.LimitedLearning r0;

        r0 := @this: org.sat4j.minisat.learning.LimitedLearning;

        r1 := @parameter0: org.sat4j.minisat.core.Solver;

        $r2 = virtualinvoke r1.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.ILits getVocabulary()>();

        r0.<org.sat4j.minisat.learning.LimitedLearning: org.sat4j.minisat.core.ILits lits> = $r2;

        virtualinvoke r0.<org.sat4j.minisat.learning.LimitedLearning: void setVarActivityListener(org.sat4j.minisat.core.VarActivityListener)>(r1);

        $r3 = r0.<org.sat4j.minisat.learning.LimitedLearning: org.sat4j.minisat.learning.MiniSATLearning all>;

        $r4 = virtualinvoke r1.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.DataStructureFactory getDSFactory()>();

        virtualinvoke $r3.<org.sat4j.minisat.learning.MiniSATLearning: void setDataStructureFactory(org.sat4j.minisat.core.DataStructureFactory)>($r4);

        $r5 = virtualinvoke r1.<org.sat4j.minisat.core.Solver: org.sat4j.minisat.core.SolverStats getStats()>();

        r0.<org.sat4j.minisat.learning.LimitedLearning: org.sat4j.minisat.core.SolverStats stats> = $r5;

        return;
    }

    public void learns(org.sat4j.minisat.core.Constr)
    {
        long $l0, $l1;
        org.sat4j.minisat.core.Constr r1;
        org.sat4j.minisat.learning.MiniSATLearning $r4;
        org.sat4j.minisat.core.SolverStats $r3;
        org.sat4j.minisat.learning.LimitedLearning r0;
        org.sat4j.minisat.learning.NoLearningButHeuristics $r2;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.learning.LimitedLearning;

        r1 := @parameter0: org.sat4j.minisat.core.Constr;

        $z0 = virtualinvoke r0.<org.sat4j.minisat.learning.LimitedLearning: boolean learningCondition(org.sat4j.minisat.core.Constr)>(r1);

        if $z0 == 0 goto label1;

        $r4 = r0.<org.sat4j.minisat.learning.LimitedLearning: org.sat4j.minisat.learning.MiniSATLearning all>;

        virtualinvoke $r4.<org.sat4j.minisat.learning.MiniSATLearning: void learns(org.sat4j.minisat.core.Constr)>(r1);

        goto label2;

     label1:
        $r2 = r0.<org.sat4j.minisat.learning.LimitedLearning: org.sat4j.minisat.learning.NoLearningButHeuristics none>;

        virtualinvoke $r2.<org.sat4j.minisat.learning.NoLearningButHeuristics: void learns(org.sat4j.minisat.core.Constr)>(r1);

        $r3 = r0.<org.sat4j.minisat.learning.LimitedLearning: org.sat4j.minisat.core.SolverStats stats>;

        $l0 = $r3.<org.sat4j.minisat.core.SolverStats: long ignoredclauses>;

        $l1 = $l0 + 1L;

        $r3.<org.sat4j.minisat.core.SolverStats: long ignoredclauses> = $l1;

     label2:
        return;
    }

    protected abstract boolean learningCondition(org.sat4j.minisat.core.Constr);

    public void init()
    {
        org.sat4j.minisat.learning.NoLearningButHeuristics $r2;
        org.sat4j.minisat.learning.MiniSATLearning $r1;
        org.sat4j.minisat.learning.LimitedLearning r0;

        r0 := @this: org.sat4j.minisat.learning.LimitedLearning;

        $r1 = r0.<org.sat4j.minisat.learning.LimitedLearning: org.sat4j.minisat.learning.MiniSATLearning all>;

        virtualinvoke $r1.<org.sat4j.minisat.learning.MiniSATLearning: void init()>();

        $r2 = r0.<org.sat4j.minisat.learning.LimitedLearning: org.sat4j.minisat.learning.NoLearningButHeuristics none>;

        virtualinvoke $r2.<org.sat4j.minisat.learning.NoLearningButHeuristics: void init()>();

        return;
    }

    public void setVarActivityListener(org.sat4j.minisat.core.VarActivityListener)
    {
        org.sat4j.minisat.core.VarActivityListener r1;
        org.sat4j.minisat.learning.NoLearningButHeuristics $r2;
        org.sat4j.minisat.learning.MiniSATLearning $r3;
        org.sat4j.minisat.learning.LimitedLearning r0;

        r0 := @this: org.sat4j.minisat.learning.LimitedLearning;

        r1 := @parameter0: org.sat4j.minisat.core.VarActivityListener;

        $r2 = r0.<org.sat4j.minisat.learning.LimitedLearning: org.sat4j.minisat.learning.NoLearningButHeuristics none>;

        virtualinvoke $r2.<org.sat4j.minisat.learning.NoLearningButHeuristics: void setVarActivityListener(org.sat4j.minisat.core.VarActivityListener)>(r1);

        $r3 = r0.<org.sat4j.minisat.learning.LimitedLearning: org.sat4j.minisat.learning.MiniSATLearning all>;

        virtualinvoke $r3.<org.sat4j.minisat.learning.MiniSATLearning: void setVarActivityListener(org.sat4j.minisat.core.VarActivityListener)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <org.sat4j.minisat.learning.LimitedLearning: long serialVersionUID> = 1L;

        return;
    }
}
