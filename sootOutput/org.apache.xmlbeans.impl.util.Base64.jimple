public final class org.apache.xmlbeans.impl.util.Base64 extends java.lang.Object
{
    private static final int BASELENGTH;
    private static final int LOOKUPLENGTH;
    private static final int TWENTYFOURBITGROUP;
    private static final int EIGHTBIT;
    private static final int SIXTEENBIT;
    private static final int FOURBYTE;
    private static final int SIGN;
    private static final byte PAD;
    private static final boolean fDebug;
    private static byte[] base64Alphabet;
    private static byte[] lookUpBase64Alphabet;

    public void <init>()
    {
        org.apache.xmlbeans.impl.util.Base64 r0;

        r0 := @this: org.apache.xmlbeans.impl.util.Base64;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected static boolean isWhiteSpace(byte)
    {
        byte b0;
        int $i1, $i2, $i3, $i4;
        boolean $z0;

        b0 := @parameter0: byte;

        $i1 = (int) b0;

        if $i1 == 32 goto label1;

        $i2 = (int) b0;

        if $i2 == 13 goto label1;

        $i3 = (int) b0;

        if $i3 == 10 goto label1;

        $i4 = (int) b0;

        if $i4 != 9 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    protected static boolean isPad(byte)
    {
        int $i1;
        byte b0;
        boolean $z0;

        b0 := @parameter0: byte;

        $i1 = (int) b0;

        if $i1 != 61 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected static boolean isData(byte)
    {
        byte[] $r0;
        byte b0, $b1;
        int $i2, $i3, $i5;
        boolean $z0;

        b0 := @parameter0: byte;

        $r0 = <org.apache.xmlbeans.impl.util.Base64: byte[] base64Alphabet>;

        $i2 = (int) b0;

        $b1 = $r0[$i2];

        $i3 = (int) $b1;

        $i5 = (int) -1;

        if $i3 == $i5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected static boolean isBase64(byte)
    {
        byte b0;
        boolean $z0, $z1, $z2, $z3;

        b0 := @parameter0: byte;

        $z0 = staticinvoke <org.apache.xmlbeans.impl.util.Base64: boolean isWhiteSpace(byte)>(b0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.xmlbeans.impl.util.Base64: boolean isPad(byte)>(b0);

        if $z1 != 0 goto label1;

        $z2 = staticinvoke <org.apache.xmlbeans.impl.util.Base64: boolean isData(byte)>(b0);

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public static byte[] encode(byte[])
    {
        byte[] r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, r10;
        byte $b6, $b7, $b8, $b11, $b14, $b17, $b20, $b25, $b26, $b29, $b31, $b38, $b39, $b40, $b43, $b46, $b49, $b52, $b56, $b58, $b59, b68, b69, b70, b71, b72, $b74, b75, $b76, b77, $b78, b81, b82, $b83, b84, b85, b86, b87, $b88, b89, $b90;
        int $i0, i1, i2, i3, $i4, $i5, $i9, $i10, $i12, $i13, $i15, $i16, $i18, $i19, $i21, $i22, $i23, $i24, $i27, $i28, $i30, $i32, $i33, $i34, $i35, $i36, $i37, $i41, $i42, $i44, $i45, $i47, $i48, $i50, $i51, $i53, $i54, $i55, $i57, $i60, $i61, $i62, $i63, $i64, $i65, i66, i67, i73, i79, i80, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114;

        r0 := @parameter0: byte[];

        if r0 != null goto label01;

        return null;

     label01:
        $i0 = lengthof r0;

        i1 = $i0 * 8;

        i2 = i1 % 24;

        i3 = i1 / 24;

        if i2 == 0 goto label02;

        $i64 = i3 + 1;

        $i65 = $i64 * 4;

        r10 = newarray (byte)[$i65];

        goto label03;

     label02:
        $i4 = i3 * 4;

        r10 = newarray (byte)[$i4];

     label03:
        i66 = 0;

     label04:
        if i66 >= i3 goto label11;

        i67 = i66 * 3;

        b68 = r0[i67];

        $i36 = i67 + 1;

        b69 = r0[$i36];

        $i37 = i67 + 2;

        b70 = r0[$i37];

        $b38 = b69 & 15;

        b71 = (byte) $b38;

        $b39 = b68 & 3;

        b72 = (byte) $b39;

        i73 = i66 * 4;

        $b40 = b68 & -128;

        if $b40 != 0 goto label05;

        $i91 = (int) b68;

        $i63 = $i91 >> 2;

        $b74 = (byte) $i63;

        goto label06;

     label05:
        $i92 = (int) b68;

        $i41 = $i92 >> 2;

        $i42 = $i41 ^ 192;

        $b74 = (byte) $i42;

     label06:
        b75 = $b74;

        $b43 = b69 & -128;

        if $b43 != 0 goto label07;

        $i93 = (int) b69;

        $i62 = $i93 >> 4;

        $b76 = (byte) $i62;

        goto label08;

     label07:
        $i94 = (int) b69;

        $i44 = $i94 >> 4;

        $i45 = $i44 ^ 240;

        $b76 = (byte) $i45;

     label08:
        b77 = $b76;

        $b46 = b70 & -128;

        if $b46 != 0 goto label09;

        $i95 = (int) b70;

        $i61 = $i95 >> 6;

        $b78 = (byte) $i61;

        goto label10;

     label09:
        $i96 = (int) b70;

        $i47 = $i96 >> 6;

        $i48 = $i47 ^ 252;

        $b78 = (byte) $i48;

     label10:
        $r6 = <org.apache.xmlbeans.impl.util.Base64: byte[] lookUpBase64Alphabet>;

        $i97 = (int) b75;

        $b49 = $r6[$i97];

        r10[i73] = $b49;

        $i53 = i73 + 1;

        $r7 = <org.apache.xmlbeans.impl.util.Base64: byte[] lookUpBase64Alphabet>;

        $i98 = (int) b72;

        $i50 = $i98 << 4;

        $i99 = (int) b77;

        $i51 = $i99 | $i50;

        $b52 = $r7[$i51];

        r10[$i53] = $b52;

        $i57 = i73 + 2;

        $r8 = <org.apache.xmlbeans.impl.util.Base64: byte[] lookUpBase64Alphabet>;

        $i100 = (int) b71;

        $i54 = $i100 << 2;

        $i101 = (int) $b78;

        $i55 = $i54 | $i101;

        $b56 = $r8[$i55];

        r10[$i57] = $b56;

        $i60 = i73 + 3;

        $r9 = <org.apache.xmlbeans.impl.util.Base64: byte[] lookUpBase64Alphabet>;

        $b58 = b70 & 63;

        $i102 = (int) $b58;

        $b59 = $r9[$i102];

        r10[$i60] = $b59;

        i66 = i66 + 1;

        goto label04;

     label11:
        i79 = i66 * 3;

        i80 = i66 * 4;

        if i2 != 8 goto label14;

        b81 = r0[i79];

        $b25 = b81 & 3;

        b82 = (byte) $b25;

        $b26 = b81 & -128;

        if $b26 != 0 goto label12;

        $i103 = (int) b81;

        $i35 = $i103 >> 2;

        $b83 = (byte) $i35;

        goto label13;

     label12:
        $i104 = (int) b81;

        $i27 = $i104 >> 2;

        $i28 = $i27 ^ 192;

        $b83 = (byte) $i28;

     label13:
        $r4 = <org.apache.xmlbeans.impl.util.Base64: byte[] lookUpBase64Alphabet>;

        $i105 = (int) $b83;

        $b29 = $r4[$i105];

        r10[i80] = $b29;

        $i32 = i80 + 1;

        $r5 = <org.apache.xmlbeans.impl.util.Base64: byte[] lookUpBase64Alphabet>;

        $i106 = (int) b82;

        $i30 = $i106 << 4;

        $b31 = $r5[$i30];

        r10[$i32] = $b31;

        $i33 = i80 + 2;

        r10[$i33] = 61;

        $i34 = i80 + 3;

        r10[$i34] = 61;

        goto label19;

     label14:
        if i2 != 16 goto label19;

        b84 = r0[i79];

        $i5 = i79 + 1;

        b85 = r0[$i5];

        $b6 = b85 & 15;

        b86 = (byte) $b6;

        $b7 = b84 & 3;

        b87 = (byte) $b7;

        $b8 = b84 & -128;

        if $b8 != 0 goto label15;

        $i107 = (int) b84;

        $i24 = $i107 >> 2;

        $b88 = (byte) $i24;

        goto label16;

     label15:
        $i108 = (int) b84;

        $i9 = $i108 >> 2;

        $i10 = $i9 ^ 192;

        $b88 = (byte) $i10;

     label16:
        b89 = $b88;

        $b11 = b85 & -128;

        if $b11 != 0 goto label17;

        $i109 = (int) b85;

        $i23 = $i109 >> 4;

        $b90 = (byte) $i23;

        goto label18;

     label17:
        $i110 = (int) b85;

        $i12 = $i110 >> 4;

        $i13 = $i12 ^ 240;

        $b90 = (byte) $i13;

     label18:
        $r1 = <org.apache.xmlbeans.impl.util.Base64: byte[] lookUpBase64Alphabet>;

        $i111 = (int) b89;

        $b14 = $r1[$i111];

        r10[i80] = $b14;

        $i18 = i80 + 1;

        $r2 = <org.apache.xmlbeans.impl.util.Base64: byte[] lookUpBase64Alphabet>;

        $i112 = (int) b87;

        $i15 = $i112 << 4;

        $i113 = (int) $b90;

        $i16 = $i113 | $i15;

        $b17 = $r2[$i16];

        r10[$i18] = $b17;

        $i21 = i80 + 2;

        $r3 = <org.apache.xmlbeans.impl.util.Base64: byte[] lookUpBase64Alphabet>;

        $i114 = (int) b86;

        $i19 = $i114 << 2;

        $b20 = $r3[$i19];

        r10[$i21] = $b20;

        $i22 = i80 + 3;

        r10[$i22] = 61;

     label19:
        return r10;
    }

    public static byte[] decode(byte[])
    {
        byte[] $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, r11, r12, r13, r14;
        byte $b6, $b7, $b8, $b15, $b16, $b21, $b22, $b29, $b33, $b34, $b39, $b42, $b43, $b44, $b45, $b46, $b50, $b51, $b56, $b59, b66, b67, b68, b69, b74, b75, b77, b78, b79, b81, b82;
        int $i0, $i1, $i2, i3, $i4, $i5, $i9, $i10, $i11, $i12, $i13, $i14, $i17, $i18, $i19, $i20, $i23, $i24, $i25, $i26, $i27, $i28, $i30, $i31, $i32, $i35, $i36, $i37, $i38, $i40, $i41, $i47, $i48, $i49, $i52, $i53, $i54, $i55, $i57, $i58, i60, i61, i62, i63, i64, i65, i70, i71, i72, i73, i76, i80, i83, i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;

        r11 := @parameter0: byte[];

        if r11 != null goto label01;

        return null;

     label01:
        $r0 = staticinvoke <org.apache.xmlbeans.impl.util.Base64: byte[] removeWhiteSpace(byte[])>(r11);

        $i0 = lengthof $r0;

        $i1 = $i0 % 4;

        if $i1 == 0 goto label02;

        return null;

     label02:
        $i2 = lengthof $r0;

        i3 = $i2 / 4;

        if i3 != 0 goto label03;

        $r10 = newarray (byte)[0];

        return $r10;

     label03:
        i60 = 0;

        i61 = 0;

        i62 = 0;

        $i4 = i3 * 3;

        r12 = newarray (byte)[$i4];

     label04:
        $i5 = i3 - 1;

        if i60 >= $i5 goto label07;

        i63 = i62 + 1;

        $b43 = $r0[i62];

        $z8 = staticinvoke <org.apache.xmlbeans.impl.util.Base64: boolean isData(byte)>($b43);

        if $z8 == 0 goto label05;

        i64 = i63 + 1;

        $b44 = $r0[i63];

        $z9 = staticinvoke <org.apache.xmlbeans.impl.util.Base64: boolean isData(byte)>($b44);

        if $z9 == 0 goto label05;

        i65 = i64 + 1;

        $b45 = $r0[i64];

        $z10 = staticinvoke <org.apache.xmlbeans.impl.util.Base64: boolean isData(byte)>($b45);

        if $z10 == 0 goto label05;

        i62 = i65 + 1;

        $b46 = $r0[i65];

        $z11 = staticinvoke <org.apache.xmlbeans.impl.util.Base64: boolean isData(byte)>($b46);

        if $z11 != 0 goto label06;

     label05:
        return null;

     label06:
        $r6 = <org.apache.xmlbeans.impl.util.Base64: byte[] base64Alphabet>;

        $i85 = (int) $b43;

        b66 = $r6[$i85];

        $r7 = <org.apache.xmlbeans.impl.util.Base64: byte[] base64Alphabet>;

        $i86 = (int) $b44;

        b67 = $r7[$i86];

        $r8 = <org.apache.xmlbeans.impl.util.Base64: byte[] base64Alphabet>;

        $i87 = (int) $b45;

        b68 = $r8[$i87];

        $r9 = <org.apache.xmlbeans.impl.util.Base64: byte[] base64Alphabet>;

        $i88 = (int) $b46;

        b69 = $r9[$i88];

        i70 = i61 + 1;

        $i89 = (int) b66;

        $i48 = $i89 << 2;

        $i90 = (int) b67;

        $i47 = $i90 >> 4;

        $i49 = $i48 | $i47;

        $b50 = (byte) $i49;

        r12[i61] = $b50;

        i71 = i70 + 1;

        $b51 = b67 & 15;

        $i91 = (int) $b51;

        $i54 = $i91 << 4;

        $i92 = (int) b68;

        $i52 = $i92 >> 2;

        $i53 = $i52 & 15;

        $i55 = $i54 | $i53;

        $b56 = (byte) $i55;

        r12[i70] = $b56;

        i61 = i71 + 1;

        $i93 = (int) b68;

        $i57 = $i93 << 6;

        $i94 = (int) b69;

        $i58 = $i57 | $i94;

        $b59 = (byte) $i58;

        r12[i71] = $b59;

        i60 = i60 + 1;

        goto label04;

     label07:
        i72 = i62 + 1;

        $b6 = $r0[i62];

        $z0 = staticinvoke <org.apache.xmlbeans.impl.util.Base64: boolean isData(byte)>($b6);

        if $z0 == 0 goto label08;

        i73 = i72 + 1;

        $b7 = $r0[i72];

        $z1 = staticinvoke <org.apache.xmlbeans.impl.util.Base64: boolean isData(byte)>($b7);

        if $z1 != 0 goto label09;

     label08:
        return null;

     label09:
        $r1 = <org.apache.xmlbeans.impl.util.Base64: byte[] base64Alphabet>;

        $i95 = (int) $b6;

        b74 = $r1[$i95];

        $r2 = <org.apache.xmlbeans.impl.util.Base64: byte[] base64Alphabet>;

        $i96 = (int) $b7;

        b75 = $r2[$i96];

        i76 = i73 + 1;

        b77 = $r0[i73];

        b78 = $r0[i76];

        $z2 = staticinvoke <org.apache.xmlbeans.impl.util.Base64: boolean isData(byte)>(b77);

        if $z2 == 0 goto label10;

        $z7 = staticinvoke <org.apache.xmlbeans.impl.util.Base64: boolean isData(byte)>(b78);

        if $z7 != 0 goto label15;

     label10:
        $z3 = staticinvoke <org.apache.xmlbeans.impl.util.Base64: boolean isPad(byte)>(b77);

        if $z3 == 0 goto label12;

        $z6 = staticinvoke <org.apache.xmlbeans.impl.util.Base64: boolean isPad(byte)>(b78);

        if $z6 == 0 goto label12;

        $b22 = b75 & 15;

        if $b22 == 0 goto label11;

        return null;

     label11:
        $i23 = i60 * 3;

        $i24 = $i23 + 1;

        r13 = newarray (byte)[$i24];

        $i25 = i60 * 3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r12, 0, r13, 0, $i25);

        $i97 = (int) b74;

        $i27 = $i97 << 2;

        $i98 = (int) b75;

        $i26 = $i98 >> 4;

        $i28 = $i27 | $i26;

        $b29 = (byte) $i28;

        r13[i61] = $b29;

        return r13;

     label12:
        $z4 = staticinvoke <org.apache.xmlbeans.impl.util.Base64: boolean isPad(byte)>(b77);

        if $z4 != 0 goto label14;

        $z5 = staticinvoke <org.apache.xmlbeans.impl.util.Base64: boolean isPad(byte)>(b78);

        if $z5 == 0 goto label14;

        $r3 = <org.apache.xmlbeans.impl.util.Base64: byte[] base64Alphabet>;

        $i99 = (int) b77;

        b79 = $r3[$i99];

        $b8 = b79 & 3;

        if $b8 == 0 goto label13;

        return null;

     label13:
        $i9 = i60 * 3;

        $i10 = $i9 + 2;

        r14 = newarray (byte)[$i10];

        $i11 = i60 * 3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r12, 0, r14, 0, $i11);

        i80 = i61 + 1;

        $i100 = (int) b74;

        $i13 = $i100 << 2;

        $i101 = (int) b75;

        $i12 = $i101 >> 4;

        $i14 = $i13 | $i12;

        $b15 = (byte) $i14;

        r14[i61] = $b15;

        $b16 = b75 & 15;

        $i102 = (int) $b16;

        $i19 = $i102 << 4;

        $i103 = (int) b79;

        $i17 = $i103 >> 2;

        $i18 = $i17 & 15;

        $i20 = $i19 | $i18;

        $b21 = (byte) $i20;

        r14[i80] = $b21;

        return r14;

     label14:
        return null;

     label15:
        $r4 = <org.apache.xmlbeans.impl.util.Base64: byte[] base64Alphabet>;

        $i104 = (int) b77;

        b81 = $r4[$i104];

        $r5 = <org.apache.xmlbeans.impl.util.Base64: byte[] base64Alphabet>;

        $i105 = (int) b78;

        b82 = $r5[$i105];

        i83 = i61 + 1;

        $i106 = (int) b74;

        $i31 = $i106 << 2;

        $i107 = (int) b75;

        $i30 = $i107 >> 4;

        $i32 = $i31 | $i30;

        $b33 = (byte) $i32;

        r12[i61] = $b33;

        i84 = i83 + 1;

        $b34 = b75 & 15;

        $i108 = (int) $b34;

        $i37 = $i108 << 4;

        $i109 = (int) b81;

        $i35 = $i109 >> 2;

        $i36 = $i35 & 15;

        $i38 = $i37 | $i36;

        $b39 = (byte) $i38;

        r12[i83] = $b39;

        $i110 = (int) b81;

        $i40 = $i110 << 6;

        $i111 = (int) b82;

        $i41 = $i40 | $i111;

        $b42 = (byte) $i41;

        r12[i84] = $b42;

        return r12;
    }

    protected static byte[] removeWhiteSpace(byte[])
    {
        byte[] r0, r1;
        byte $b1, $b3, $b4;
        int i0, $i2, i5, i6, i7, i8;
        boolean $z0, $z1;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        return null;

     label1:
        i5 = 0;

        i0 = lengthof r0;

        i6 = 0;

     label2:
        if i6 >= i0 goto label4;

        $b4 = r0[i6];

        $z1 = staticinvoke <org.apache.xmlbeans.impl.util.Base64: boolean isWhiteSpace(byte)>($b4);

        if $z1 != 0 goto label3;

        i5 = i5 + 1;

     label3:
        i6 = i6 + 1;

        goto label2;

     label4:
        if i5 != i0 goto label5;

        return r0;

     label5:
        r1 = newarray (byte)[i5];

        i7 = 0;

        i8 = 0;

     label6:
        if i8 >= i0 goto label8;

        $b1 = r0[i8];

        $z0 = staticinvoke <org.apache.xmlbeans.impl.util.Base64: boolean isWhiteSpace(byte)>($b1);

        if $z0 != 0 goto label7;

        $i2 = i7;

        i7 = i7 + 1;

        $b3 = r0[i8];

        r1[$i2] = $b3;

     label7:
        i8 = i8 + 1;

        goto label6;

     label8:
        return r1;
    }

    static void <clinit>()
    {
        byte[] $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        byte $b1, $b3, $b5, $b8, $b11, $b13;
        int $i0, $i2, $i4, $i6, $i7, $i9, $i10, $i12, i14, i15, i16, i17, i18, i19, i20, i21, i22, $i24, $i26, $i28;

        <org.apache.xmlbeans.impl.util.Base64: boolean fDebug> = 0;

        <org.apache.xmlbeans.impl.util.Base64: byte PAD> = 61;

        <org.apache.xmlbeans.impl.util.Base64: int SIGN> = -128;

        <org.apache.xmlbeans.impl.util.Base64: int FOURBYTE> = 4;

        <org.apache.xmlbeans.impl.util.Base64: int SIXTEENBIT> = 16;

        <org.apache.xmlbeans.impl.util.Base64: int EIGHTBIT> = 8;

        <org.apache.xmlbeans.impl.util.Base64: int TWENTYFOURBITGROUP> = 24;

        <org.apache.xmlbeans.impl.util.Base64: int LOOKUPLENGTH> = 64;

        <org.apache.xmlbeans.impl.util.Base64: int BASELENGTH> = 255;

        $r0 = newarray (byte)[255];

        <org.apache.xmlbeans.impl.util.Base64: byte[] base64Alphabet> = $r0;

        $r1 = newarray (byte)[64];

        <org.apache.xmlbeans.impl.util.Base64: byte[] lookUpBase64Alphabet> = $r1;

        i14 = 0;

     label01:
        if i14 >= 255 goto label02;

        $r12 = <org.apache.xmlbeans.impl.util.Base64: byte[] base64Alphabet>;

        $r12[i14] = -1;

        i14 = i14 + 1;

        goto label01;

     label02:
        i15 = 90;

     label03:
        if i15 < 65 goto label04;

        $r11 = <org.apache.xmlbeans.impl.util.Base64: byte[] base64Alphabet>;

        $i12 = i15 - 65;

        $b13 = (byte) $i12;

        $r11[i15] = $b13;

        $i24 = (int) -1;

        i15 = i15 + $i24;

        goto label03;

     label04:
        i16 = 122;

     label05:
        if i16 < 97 goto label06;

        $r10 = <org.apache.xmlbeans.impl.util.Base64: byte[] base64Alphabet>;

        $i9 = i16 - 97;

        $i10 = $i9 + 26;

        $b11 = (byte) $i10;

        $r10[i16] = $b11;

        $i26 = (int) -1;

        i16 = i16 + $i26;

        goto label05;

     label06:
        i17 = 57;

     label07:
        if i17 < 48 goto label08;

        $r9 = <org.apache.xmlbeans.impl.util.Base64: byte[] base64Alphabet>;

        $i6 = i17 - 48;

        $i7 = $i6 + 52;

        $b8 = (byte) $i7;

        $r9[i17] = $b8;

        $i28 = (int) -1;

        i17 = i17 + $i28;

        goto label07;

     label08:
        $r2 = <org.apache.xmlbeans.impl.util.Base64: byte[] base64Alphabet>;

        $r2[43] = 62;

        $r3 = <org.apache.xmlbeans.impl.util.Base64: byte[] base64Alphabet>;

        $r3[47] = 63;

        i18 = 0;

     label09:
        if i18 > 25 goto label10;

        $r8 = <org.apache.xmlbeans.impl.util.Base64: byte[] lookUpBase64Alphabet>;

        $i4 = 65 + i18;

        $b5 = (byte) $i4;

        $r8[i18] = $b5;

        i18 = i18 + 1;

        goto label09;

     label10:
        i19 = 26;

        i20 = 0;

     label11:
        if i19 > 51 goto label12;

        $r7 = <org.apache.xmlbeans.impl.util.Base64: byte[] lookUpBase64Alphabet>;

        $i2 = 97 + i20;

        $b3 = (byte) $i2;

        $r7[i19] = $b3;

        i19 = i19 + 1;

        i20 = i20 + 1;

        goto label11;

     label12:
        i21 = 52;

        i22 = 0;

     label13:
        if i21 > 61 goto label14;

        $r6 = <org.apache.xmlbeans.impl.util.Base64: byte[] lookUpBase64Alphabet>;

        $i0 = 48 + i22;

        $b1 = (byte) $i0;

        $r6[i21] = $b1;

        i21 = i21 + 1;

        i22 = i22 + 1;

        goto label13;

     label14:
        $r4 = <org.apache.xmlbeans.impl.util.Base64: byte[] lookUpBase64Alphabet>;

        $r4[62] = 43;

        $r5 = <org.apache.xmlbeans.impl.util.Base64: byte[] lookUpBase64Alphabet>;

        $r5[63] = 47;

        return;
    }
}
