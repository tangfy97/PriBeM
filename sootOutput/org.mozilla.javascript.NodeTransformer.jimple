public class org.mozilla.javascript.NodeTransformer extends java.lang.Object
{
    private org.mozilla.javascript.ObjArray loops;
    private org.mozilla.javascript.ObjArray loopEnds;
    private boolean hasFinally;

    public void <init>()
    {
        org.mozilla.javascript.NodeTransformer r0;

        r0 := @this: org.mozilla.javascript.NodeTransformer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void transform(org.mozilla.javascript.ScriptOrFnNode)
    {
        org.mozilla.javascript.NodeTransformer r0;
        int $i0, i1;
        org.mozilla.javascript.FunctionNode $r2;
        org.mozilla.javascript.ScriptOrFnNode r1;

        r0 := @this: org.mozilla.javascript.NodeTransformer;

        r1 := @parameter0: org.mozilla.javascript.ScriptOrFnNode;

        specialinvoke r0.<org.mozilla.javascript.NodeTransformer: void transformCompilationUnit(org.mozilla.javascript.ScriptOrFnNode)>(r1);

        i1 = 0;

     label1:
        $i0 = virtualinvoke r1.<org.mozilla.javascript.ScriptOrFnNode: int getFunctionCount()>();

        if i1 == $i0 goto label2;

        $r2 = virtualinvoke r1.<org.mozilla.javascript.ScriptOrFnNode: org.mozilla.javascript.FunctionNode getFunctionNode(int)>(i1);

        virtualinvoke r0.<org.mozilla.javascript.NodeTransformer: void transform(org.mozilla.javascript.ScriptOrFnNode)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void transformCompilationUnit(org.mozilla.javascript.ScriptOrFnNode)
    {
        org.mozilla.javascript.NodeTransformer r0;
        org.mozilla.javascript.ObjArray $r1, $r2;
        org.mozilla.javascript.ScriptOrFnNode r3;

        r0 := @this: org.mozilla.javascript.NodeTransformer;

        r3 := @parameter0: org.mozilla.javascript.ScriptOrFnNode;

        $r1 = new org.mozilla.javascript.ObjArray;

        specialinvoke $r1.<org.mozilla.javascript.ObjArray: void <init>()>();

        r0.<org.mozilla.javascript.NodeTransformer: org.mozilla.javascript.ObjArray loops> = $r1;

        $r2 = new org.mozilla.javascript.ObjArray;

        specialinvoke $r2.<org.mozilla.javascript.ObjArray: void <init>()>();

        r0.<org.mozilla.javascript.NodeTransformer: org.mozilla.javascript.ObjArray loopEnds> = $r2;

        r0.<org.mozilla.javascript.NodeTransformer: boolean hasFinally> = 0;

        specialinvoke r0.<org.mozilla.javascript.NodeTransformer: void transformCompilationUnit_r(org.mozilla.javascript.ScriptOrFnNode,org.mozilla.javascript.Node)>(r3, r3);

        return;
    }

    private void transformCompilationUnit_r(org.mozilla.javascript.ScriptOrFnNode, org.mozilla.javascript.Node)
    {
        org.mozilla.javascript.Node $r2, r6, $r7, $r15, $r17, $r18, $r22, $r24, $r28, $r34, $r43, r49, r50, r52, r53, r54, r55, r57, r59, r60, r61, $r63, $r64, $r65, $r66, $r67, $r69, $r70, $r71, $r72;
        org.mozilla.javascript.ScriptOrFnNode r4;
        org.mozilla.javascript.ObjArray $r1, $r3, $r11, $r12, $r20, $r23, $r25, $r26, $r33, $r37, $r44, $r45, $r47, $r48;
        org.mozilla.javascript.NodeTransformer r0;
        java.lang.String $r29;
        java.lang.RuntimeException $r19, $r30, $r32;
        org.mozilla.javascript.FunctionNode $r27;
        org.mozilla.javascript.Node$Jump $r10, $r21, $r42, r51, r56, r58, $r62, $r68;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, $i13, $i15;
        java.lang.Object $r13, $r38, $r46;

        r0 := @this: org.mozilla.javascript.NodeTransformer;

        r4 := @parameter0: org.mozilla.javascript.ScriptOrFnNode;

        r6 := @parameter1: org.mozilla.javascript.Node;

        r49 = null;

     label01:
        r50 = null;

        if r49 != null goto label02;

        r49 = virtualinvoke r6.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getFirstChild()>();

        goto label03;

     label02:
        r50 = r49;

        r49 = virtualinvoke r49.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

     label03:
        if r49 != null goto label04;

        goto label45;

     label04:
        $i0 = virtualinvoke r49.<org.mozilla.javascript.Node: int getType()>();

        lookupswitch($i0)
        {
            case 3: goto label09;
            case 4: goto label10;
            case 8: goto label36;
            case 30: goto label30;
            case 31: goto label36;
            case 37: goto label29;
            case 38: goto label36;
            case 77: goto label08;
            case 110: goto label05;
            case 116: goto label20;
            case 117: goto label20;
            case 118: goto label31;
            case 119: goto label06;
            case 126: goto label05;
            case 127: goto label09;
            case 128: goto label05;
            default: goto label44;
        };

     label05:
        $r20 = r0.<org.mozilla.javascript.NodeTransformer: org.mozilla.javascript.ObjArray loops>;

        virtualinvoke $r20.<org.mozilla.javascript.ObjArray: void push(java.lang.Object)>(r49);

        $r23 = r0.<org.mozilla.javascript.NodeTransformer: org.mozilla.javascript.ObjArray loopEnds>;

        $r21 = (org.mozilla.javascript.Node$Jump) r49;

        $r22 = $r21.<org.mozilla.javascript.Node$Jump: org.mozilla.javascript.Node target>;

        virtualinvoke $r23.<org.mozilla.javascript.ObjArray: void push(java.lang.Object)>($r22);

        goto label44;

     label06:
        $r1 = r0.<org.mozilla.javascript.NodeTransformer: org.mozilla.javascript.ObjArray loops>;

        virtualinvoke $r1.<org.mozilla.javascript.ObjArray: void push(java.lang.Object)>(r49);

        $r2 = virtualinvoke r49.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        $i1 = virtualinvoke $r2.<org.mozilla.javascript.Node: int getType()>();

        if $i1 == 3 goto label07;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label07:
        $r3 = r0.<org.mozilla.javascript.NodeTransformer: org.mozilla.javascript.ObjArray loopEnds>;

        virtualinvoke $r3.<org.mozilla.javascript.ObjArray: void push(java.lang.Object)>($r2);

        goto label44;

     label08:
        r51 = (org.mozilla.javascript.Node$Jump) r49;

        $r24 = virtualinvoke r51.<org.mozilla.javascript.Node$Jump: org.mozilla.javascript.Node getFinally()>();

        if $r24 == null goto label44;

        r0.<org.mozilla.javascript.NodeTransformer: boolean hasFinally> = 1;

        $r25 = r0.<org.mozilla.javascript.NodeTransformer: org.mozilla.javascript.ObjArray loops>;

        virtualinvoke $r25.<org.mozilla.javascript.ObjArray: void push(java.lang.Object)>(r49);

        $r26 = r0.<org.mozilla.javascript.NodeTransformer: org.mozilla.javascript.ObjArray loopEnds>;

        virtualinvoke $r26.<org.mozilla.javascript.ObjArray: void push(java.lang.Object)>($r24);

        goto label44;

     label09:
        $r44 = r0.<org.mozilla.javascript.NodeTransformer: org.mozilla.javascript.ObjArray loopEnds>;

        $z4 = virtualinvoke $r44.<org.mozilla.javascript.ObjArray: boolean isEmpty()>();

        if $z4 != 0 goto label44;

        $r45 = r0.<org.mozilla.javascript.NodeTransformer: org.mozilla.javascript.ObjArray loopEnds>;

        $r46 = virtualinvoke $r45.<org.mozilla.javascript.ObjArray: java.lang.Object peek()>();

        if $r46 != r49 goto label44;

        $r47 = r0.<org.mozilla.javascript.NodeTransformer: org.mozilla.javascript.ObjArray loopEnds>;

        virtualinvoke $r47.<org.mozilla.javascript.ObjArray: java.lang.Object pop()>();

        $r48 = r0.<org.mozilla.javascript.NodeTransformer: org.mozilla.javascript.ObjArray loops>;

        virtualinvoke $r48.<org.mozilla.javascript.ObjArray: java.lang.Object pop()>();

        goto label44;

     label10:
        $z3 = r0.<org.mozilla.javascript.NodeTransformer: boolean hasFinally>;

        if $z3 != 0 goto label11;

        goto label44;

     label11:
        r52 = null;

        $r33 = r0.<org.mozilla.javascript.NodeTransformer: org.mozilla.javascript.ObjArray loops>;

        $i7 = virtualinvoke $r33.<org.mozilla.javascript.ObjArray: int size()>();

        i10 = $i7 - 1;

     label12:
        if i10 < 0 goto label18;

        $r37 = r0.<org.mozilla.javascript.NodeTransformer: org.mozilla.javascript.ObjArray loops>;

        $r38 = virtualinvoke $r37.<org.mozilla.javascript.ObjArray: java.lang.Object get(int)>(i10);

        r53 = (org.mozilla.javascript.Node) $r38;

        $i8 = virtualinvoke r53.<org.mozilla.javascript.Node: int getType()>();

        if $i8 == 77 goto label13;

        if $i8 != 119 goto label17;

     label13:
        if $i8 != 77 goto label14;

        $r62 = new org.mozilla.javascript.Node$Jump;

        specialinvoke $r62.<org.mozilla.javascript.Node$Jump: void <init>(int)>(131);

        $r42 = (org.mozilla.javascript.Node$Jump) r53;

        $r43 = virtualinvoke $r42.<org.mozilla.javascript.Node$Jump: org.mozilla.javascript.Node getFinally()>();

        $r62.<org.mozilla.javascript.Node$Jump: org.mozilla.javascript.Node target> = $r43;

        r54 = $r62;

        goto label15;

     label14:
        $r63 = new org.mozilla.javascript.Node;

        specialinvoke $r63.<org.mozilla.javascript.Node: void <init>(int)>(3);

        r54 = $r63;

     label15:
        if r52 != null goto label16;

        $r64 = new org.mozilla.javascript.Node;

        $i9 = virtualinvoke r49.<org.mozilla.javascript.Node: int getLineno()>();

        specialinvoke $r64.<org.mozilla.javascript.Node: void <init>(int,int)>(125, $i9);

        r52 = $r64;

     label16:
        virtualinvoke r52.<org.mozilla.javascript.Node: void addChildToBack(org.mozilla.javascript.Node)>(r54);

     label17:
        $i13 = (int) -1;

        i10 = i10 + $i13;

        goto label12;

     label18:
        if r52 == null goto label44;

        r55 = r49;

        $r34 = virtualinvoke r49.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getFirstChild()>();

        r49 = staticinvoke <org.mozilla.javascript.NodeTransformer: org.mozilla.javascript.Node replaceCurrent(org.mozilla.javascript.Node,org.mozilla.javascript.Node,org.mozilla.javascript.Node,org.mozilla.javascript.Node)>(r6, r50, r49, r52);

        if $r34 != null goto label19;

        virtualinvoke r52.<org.mozilla.javascript.Node: void addChildToBack(org.mozilla.javascript.Node)>(r55);

        goto label01;

     label19:
        $r65 = new org.mozilla.javascript.Node;

        specialinvoke $r65.<org.mozilla.javascript.Node: void <init>(int,org.mozilla.javascript.Node)>(130, $r34);

        virtualinvoke r52.<org.mozilla.javascript.Node: void addChildToFront(org.mozilla.javascript.Node)>($r65);

        $r66 = new org.mozilla.javascript.Node;

        specialinvoke $r66.<org.mozilla.javascript.Node: void <init>(int)>(62);

        virtualinvoke r52.<org.mozilla.javascript.Node: void addChildToBack(org.mozilla.javascript.Node)>($r66);

        specialinvoke r0.<org.mozilla.javascript.NodeTransformer: void transformCompilationUnit_r(org.mozilla.javascript.ScriptOrFnNode,org.mozilla.javascript.Node)>(r4, $r65);

        goto label01;

     label20:
        r56 = (org.mozilla.javascript.Node$Jump) r49;

        $r10 = virtualinvoke r56.<org.mozilla.javascript.Node$Jump: org.mozilla.javascript.Node$Jump getJumpStatement()>();

        if $r10 != null goto label21;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label21:
        $r11 = r0.<org.mozilla.javascript.NodeTransformer: org.mozilla.javascript.ObjArray loops>;

        i11 = virtualinvoke $r11.<org.mozilla.javascript.ObjArray: int size()>();

     label22:
        if i11 != 0 goto label23;

        $r19 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r19;

     label23:
        $i15 = (int) -1;

        i11 = i11 + $i15;

        $r12 = r0.<org.mozilla.javascript.NodeTransformer: org.mozilla.javascript.ObjArray loops>;

        $r13 = virtualinvoke $r12.<org.mozilla.javascript.ObjArray: java.lang.Object get(int)>(i11);

        r57 = (org.mozilla.javascript.Node) $r13;

        if r57 != $r10 goto label24;

        goto label26;

     label24:
        $i4 = virtualinvoke r57.<org.mozilla.javascript.Node: int getType()>();

        if $i4 != 119 goto label25;

        $r67 = new org.mozilla.javascript.Node;

        specialinvoke $r67.<org.mozilla.javascript.Node: void <init>(int)>(3);

        r50 = staticinvoke <org.mozilla.javascript.NodeTransformer: org.mozilla.javascript.Node addBeforeCurrent(org.mozilla.javascript.Node,org.mozilla.javascript.Node,org.mozilla.javascript.Node,org.mozilla.javascript.Node)>(r6, r50, r49, $r67);

        goto label22;

     label25:
        if $i4 != 77 goto label22;

        r58 = (org.mozilla.javascript.Node$Jump) r57;

        $r68 = new org.mozilla.javascript.Node$Jump;

        specialinvoke $r68.<org.mozilla.javascript.Node$Jump: void <init>(int)>(131);

        $r15 = virtualinvoke r58.<org.mozilla.javascript.Node$Jump: org.mozilla.javascript.Node getFinally()>();

        $r68.<org.mozilla.javascript.Node$Jump: org.mozilla.javascript.Node target> = $r15;

        r50 = staticinvoke <org.mozilla.javascript.NodeTransformer: org.mozilla.javascript.Node addBeforeCurrent(org.mozilla.javascript.Node,org.mozilla.javascript.Node,org.mozilla.javascript.Node,org.mozilla.javascript.Node)>(r6, r50, r49, $r68);

        goto label22;

     label26:
        if $i0 != 116 goto label27;

        $r18 = $r10.<org.mozilla.javascript.Node$Jump: org.mozilla.javascript.Node target>;

        r56.<org.mozilla.javascript.Node$Jump: org.mozilla.javascript.Node target> = $r18;

        goto label28;

     label27:
        $r17 = virtualinvoke $r10.<org.mozilla.javascript.Node$Jump: org.mozilla.javascript.Node getContinue()>();

        r56.<org.mozilla.javascript.Node$Jump: org.mozilla.javascript.Node target> = $r17;

     label28:
        virtualinvoke r56.<org.mozilla.javascript.Node$Jump: void setType(int)>(5);

        goto label44;

     label29:
        virtualinvoke r0.<org.mozilla.javascript.NodeTransformer: void visitCall(org.mozilla.javascript.Node,org.mozilla.javascript.ScriptOrFnNode)>(r49, r4);

        goto label44;

     label30:
        virtualinvoke r0.<org.mozilla.javascript.NodeTransformer: void visitNew(org.mozilla.javascript.Node,org.mozilla.javascript.ScriptOrFnNode)>(r49, r4);

        goto label44;

     label31:
        $r69 = new org.mozilla.javascript.Node;

        specialinvoke $r69.<org.mozilla.javascript.Node: void <init>(int)>(125);

        r59 = virtualinvoke r49.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getFirstChild()>();

     label32:
        if r59 == null goto label35;

        r60 = r59;

        $i2 = virtualinvoke r59.<org.mozilla.javascript.Node: int getType()>();

        if $i2 == 38 goto label33;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label33:
        r59 = virtualinvoke r59.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        $z0 = virtualinvoke r60.<org.mozilla.javascript.Node: boolean hasChildren()>();

        if $z0 != 0 goto label34;

        goto label32;

     label34:
        $r7 = virtualinvoke r60.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getFirstChild()>();

        virtualinvoke r60.<org.mozilla.javascript.Node: void removeChild(org.mozilla.javascript.Node)>($r7);

        virtualinvoke r60.<org.mozilla.javascript.Node: void setType(int)>(48);

        $r70 = new org.mozilla.javascript.Node;

        specialinvoke $r70.<org.mozilla.javascript.Node: void <init>(int,org.mozilla.javascript.Node,org.mozilla.javascript.Node)>(8, r60, $r7);

        $r71 = new org.mozilla.javascript.Node;

        $i3 = virtualinvoke r49.<org.mozilla.javascript.Node: int getLineno()>();

        specialinvoke $r71.<org.mozilla.javascript.Node: void <init>(int,org.mozilla.javascript.Node,int)>(129, $r70, $i3);

        virtualinvoke $r69.<org.mozilla.javascript.Node: void addChildToBack(org.mozilla.javascript.Node)>($r71);

        goto label32;

     label35:
        r49 = staticinvoke <org.mozilla.javascript.NodeTransformer: org.mozilla.javascript.Node replaceCurrent(org.mozilla.javascript.Node,org.mozilla.javascript.Node,org.mozilla.javascript.Node,org.mozilla.javascript.Node)>(r6, r50, r49, $r69);

        goto label44;

     label36:
        $i5 = virtualinvoke r4.<org.mozilla.javascript.ScriptOrFnNode: int getType()>();

        if $i5 != 105 goto label44;

        $r27 = (org.mozilla.javascript.FunctionNode) r4;

        $z1 = virtualinvoke $r27.<org.mozilla.javascript.FunctionNode: boolean requiresActivation()>();

        if $z1 == 0 goto label37;

        goto label44;

     label37:
        if $i0 != 38 goto label38;

        r61 = r49;

        goto label40;

     label38:
        $r28 = virtualinvoke r49.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getFirstChild()>();

        r61 = $r28;

        $i6 = virtualinvoke $r28.<org.mozilla.javascript.Node: int getType()>();

        if $i6 == 48 goto label40;

        if $i0 != 31 goto label39;

        goto label44;

     label39:
        $r32 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r32;

     label40:
        $r29 = virtualinvoke r61.<org.mozilla.javascript.Node: java.lang.String getString()>();

        $z2 = virtualinvoke r4.<org.mozilla.javascript.ScriptOrFnNode: boolean hasParamOrVar(java.lang.String)>($r29);

        if $z2 == 0 goto label44;

        if $i0 != 38 goto label41;

        virtualinvoke r49.<org.mozilla.javascript.Node: void setType(int)>(54);

        goto label44;

     label41:
        if $i0 != 8 goto label42;

        virtualinvoke r49.<org.mozilla.javascript.Node: void setType(int)>(55);

        virtualinvoke r61.<org.mozilla.javascript.Node: void setType(int)>(40);

        goto label44;

     label42:
        if $i0 != 31 goto label43;

        $r72 = new org.mozilla.javascript.Node;

        specialinvoke $r72.<org.mozilla.javascript.Node: void <init>(int)>(43);

        r49 = staticinvoke <org.mozilla.javascript.NodeTransformer: org.mozilla.javascript.Node replaceCurrent(org.mozilla.javascript.Node,org.mozilla.javascript.Node,org.mozilla.javascript.Node,org.mozilla.javascript.Node)>(r6, r50, r49, $r72);

        goto label44;

     label43:
        $r30 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r30;

     label44:
        specialinvoke r0.<org.mozilla.javascript.NodeTransformer: void transformCompilationUnit_r(org.mozilla.javascript.ScriptOrFnNode,org.mozilla.javascript.Node)>(r4, r49);

        goto label01;

     label45:
        return;
    }

    protected void visitNew(org.mozilla.javascript.Node, org.mozilla.javascript.ScriptOrFnNode)
    {
        org.mozilla.javascript.ScriptOrFnNode r2;
        org.mozilla.javascript.NodeTransformer r0;
        org.mozilla.javascript.Node r1;

        r0 := @this: org.mozilla.javascript.NodeTransformer;

        r1 := @parameter0: org.mozilla.javascript.Node;

        r2 := @parameter1: org.mozilla.javascript.ScriptOrFnNode;

        return;
    }

    protected void visitCall(org.mozilla.javascript.Node, org.mozilla.javascript.ScriptOrFnNode)
    {
        org.mozilla.javascript.ScriptOrFnNode r2;
        org.mozilla.javascript.NodeTransformer r0;
        org.mozilla.javascript.Node r1;

        r0 := @this: org.mozilla.javascript.NodeTransformer;

        r1 := @parameter0: org.mozilla.javascript.Node;

        r2 := @parameter1: org.mozilla.javascript.ScriptOrFnNode;

        return;
    }

    private static org.mozilla.javascript.Node addBeforeCurrent(org.mozilla.javascript.Node, org.mozilla.javascript.Node, org.mozilla.javascript.Node, org.mozilla.javascript.Node)
    {
        org.mozilla.javascript.Node r0, r1, $r2, r3, r4, $r5;

        r3 := @parameter0: org.mozilla.javascript.Node;

        r0 := @parameter1: org.mozilla.javascript.Node;

        r1 := @parameter2: org.mozilla.javascript.Node;

        r4 := @parameter3: org.mozilla.javascript.Node;

        if r0 != null goto label2;

        $r5 = virtualinvoke r3.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getFirstChild()>();

        if r1 == $r5 goto label1;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label1:
        virtualinvoke r3.<org.mozilla.javascript.Node: void addChildToFront(org.mozilla.javascript.Node)>(r4);

        goto label4;

     label2:
        $r2 = virtualinvoke r0.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getNext()>();

        if r1 == $r2 goto label3;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label3:
        virtualinvoke r3.<org.mozilla.javascript.Node: void addChildAfter(org.mozilla.javascript.Node,org.mozilla.javascript.Node)>(r4, r0);

     label4:
        return r4;
    }

    private static org.mozilla.javascript.Node replaceCurrent(org.mozilla.javascript.Node, org.mozilla.javascript.Node, org.mozilla.javascript.Node, org.mozilla.javascript.Node)
    {
        org.mozilla.javascript.Node r0, r1, $r2, r3, r4, $r5;

        r3 := @parameter0: org.mozilla.javascript.Node;

        r0 := @parameter1: org.mozilla.javascript.Node;

        r1 := @parameter2: org.mozilla.javascript.Node;

        r4 := @parameter3: org.mozilla.javascript.Node;

        if r0 != null goto label2;

        $r5 = virtualinvoke r3.<org.mozilla.javascript.Node: org.mozilla.javascript.Node getFirstChild()>();

        if r1 == $r5 goto label1;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label1:
        virtualinvoke r3.<org.mozilla.javascript.Node: void replaceChild(org.mozilla.javascript.Node,org.mozilla.javascript.Node)>(r1, r4);

        goto label4;

     label2:
        $r2 = r0.<org.mozilla.javascript.Node: org.mozilla.javascript.Node next>;

        if $r2 != r1 goto label3;

        virtualinvoke r3.<org.mozilla.javascript.Node: void replaceChildAfter(org.mozilla.javascript.Node,org.mozilla.javascript.Node)>(r0, r4);

        goto label4;

     label3:
        virtualinvoke r3.<org.mozilla.javascript.Node: void replaceChild(org.mozilla.javascript.Node,org.mozilla.javascript.Node)>(r1, r4);

     label4:
        return r4;
    }
}
