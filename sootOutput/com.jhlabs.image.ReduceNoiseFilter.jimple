public class com.jhlabs.image.ReduceNoiseFilter extends com.jhlabs.image.WholeImageFilter
{

    public void <init>()
    {
        com.jhlabs.image.ReduceNoiseFilter r0;

        r0 := @this: com.jhlabs.image.ReduceNoiseFilter;

        specialinvoke r0.<com.jhlabs.image.WholeImageFilter: void <init>()>();

        return;
    }

    private int smooth(int[])
    {
        com.jhlabs.image.ReduceNoiseFilter r1;
        int[] r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11;

        r1 := @this: com.jhlabs.image.ReduceNoiseFilter;

        r0 := @parameter0: int[];

        i7 = 0;

        i8 = 0;

        i9 = 2147483647;

        i10 = -2147483648;

        i11 = 0;

     label1:
        if i11 >= 9 goto label4;

        if i11 == 4 goto label3;

        $i5 = r0[i11];

        if $i5 >= i9 goto label2;

        i9 = r0[i11];

        i7 = i11;

     label2:
        $i6 = r0[i11];

        if $i6 <= i10 goto label3;

        i10 = r0[i11];

        i8 = i11;

     label3:
        i11 = i11 + 1;

        goto label1;

     label4:
        $i0 = r0[4];

        if $i0 >= i9 goto label5;

        $i4 = r0[i7];

        return $i4;

     label5:
        $i1 = r0[4];

        if $i1 <= i10 goto label6;

        $i3 = r0[i8];

        return $i3;

     label6:
        $i2 = r0[4];

        return $i2;
    }

    protected int[] filterPixels(int, int, int[], java.awt.Rectangle)
    {
        com.jhlabs.image.ReduceNoiseFilter r5;
        int[] r0, r1, r2, r3, r4;
        java.awt.Rectangle r6;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, $i16, i17, $i18, $i19, $i20, $i21, $i22, i23, i24, i25, i26, i27, i28, $i30, $i32;

        r5 := @this: com.jhlabs.image.ReduceNoiseFilter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r4 := @parameter2: int[];

        r6 := @parameter3: java.awt.Rectangle;

        i23 = 0;

        r0 = newarray (int)[9];

        r1 = newarray (int)[9];

        r2 = newarray (int)[9];

        $i2 = i0 * i1;

        r3 = newarray (int)[$i2];

        i24 = 0;

     label01:
        if i24 >= i1 goto label10;

        i25 = 0;

     label02:
        if i25 >= i0 goto label09;

        i26 = 0;

        $i30 = (int) -1;

        i27 = $i30;

     label03:
        if i27 > 1 goto label07;

        i13 = i24 + i27;

        if 0 > i13 goto label06;

        if i13 >= i1 goto label06;

        i14 = i13 * i0;

        $i32 = (int) -1;

        i28 = $i32;

     label04:
        if i28 > 1 goto label06;

        i15 = i25 + i28;

        if 0 > i15 goto label05;

        if i15 >= i0 goto label05;

        $i16 = i14 + i15;

        i17 = r4[$i16];

        $i18 = i17 >> 16;

        $i19 = $i18 & 255;

        r0[i26] = $i19;

        $i20 = i17 >> 8;

        $i21 = $i20 & 255;

        r1[i26] = $i21;

        $i22 = i17 & 255;

        r2[i26] = $i22;

        i26 = i26 + 1;

     label05:
        i28 = i28 + 1;

        goto label04;

     label06:
        i27 = i27 + 1;

        goto label03;

     label07:
        if i26 >= 9 goto label08;

        r2[i26] = 0;

        r1[i26] = 0;

        r0[i26] = 0;

        i26 = i26 + 1;

        goto label07;

     label08:
        $i3 = r4[i23];

        $i4 = $i3 & -16777216;

        $i5 = specialinvoke r5.<com.jhlabs.image.ReduceNoiseFilter: int smooth(int[])>(r0);

        $i6 = $i5 << 16;

        $i7 = $i4 | $i6;

        $i8 = specialinvoke r5.<com.jhlabs.image.ReduceNoiseFilter: int smooth(int[])>(r1);

        $i9 = $i8 << 8;

        $i10 = $i7 | $i9;

        $i11 = specialinvoke r5.<com.jhlabs.image.ReduceNoiseFilter: int smooth(int[])>(r2);

        $i12 = $i10 | $i11;

        r3[i23] = $i12;

        i23 = i23 + 1;

        i25 = i25 + 1;

        goto label02;

     label09:
        i24 = i24 + 1;

        goto label01;

     label10:
        return r3;
    }

    public java.lang.String toString()
    {
        com.jhlabs.image.ReduceNoiseFilter r0;

        r0 := @this: com.jhlabs.image.ReduceNoiseFilter;

        return "Blur/Smooth";
    }
}
