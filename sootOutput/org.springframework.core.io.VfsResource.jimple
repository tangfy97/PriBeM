public class org.springframework.core.io.VfsResource extends org.springframework.core.io.AbstractResource
{
    private final java.lang.Object resource;

    public void <init>(java.lang.Object)
    {
        org.springframework.core.io.VfsResource r0;
        java.lang.Object r1;

        r0 := @this: org.springframework.core.io.VfsResource;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.springframework.core.io.AbstractResource: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "VirtualFile must not be null");

        r0.<org.springframework.core.io.VfsResource: java.lang.Object resource> = r1;

        return;
    }

    public boolean exists()
    {
        org.springframework.core.io.VfsResource r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: org.springframework.core.io.VfsResource;

        $r1 = r0.<org.springframework.core.io.VfsResource: java.lang.Object resource>;

        $z0 = staticinvoke <org.springframework.core.io.VfsUtils: boolean exists(java.lang.Object)>($r1);

        return $z0;
    }

    public boolean isReadable()
    {
        org.springframework.core.io.VfsResource r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: org.springframework.core.io.VfsResource;

        $r1 = r0.<org.springframework.core.io.VfsResource: java.lang.Object resource>;

        $z0 = staticinvoke <org.springframework.core.io.VfsUtils: boolean isReadable(java.lang.Object)>($r1);

        return $z0;
    }

    public long lastModified() throws java.io.IOException
    {
        org.springframework.core.io.VfsResource r0;
        java.lang.Object $r1;
        long $l0;

        r0 := @this: org.springframework.core.io.VfsResource;

        $r1 = r0.<org.springframework.core.io.VfsResource: java.lang.Object resource>;

        $l0 = staticinvoke <org.springframework.core.io.VfsUtils: long getLastModified(java.lang.Object)>($r1);

        return $l0;
    }

    public java.io.InputStream getInputStream() throws java.io.IOException
    {
        org.springframework.core.io.VfsResource r0;
        java.lang.Object $r1;
        java.io.InputStream $r2;

        r0 := @this: org.springframework.core.io.VfsResource;

        $r1 = r0.<org.springframework.core.io.VfsResource: java.lang.Object resource>;

        $r2 = staticinvoke <org.springframework.core.io.VfsUtils: java.io.InputStream getInputStream(java.lang.Object)>($r1);

        return $r2;
    }

    public java.net.URL getURL() throws java.io.IOException
    {
        java.net.URL $r2;
        org.springframework.core.NestedIOException $r4;
        java.lang.Exception $r3;
        org.springframework.core.io.VfsResource r0;
        java.lang.Object $r1, $r6;
        java.lang.StringBuilder $r5, $r7;
        java.lang.String $r8;

        r0 := @this: org.springframework.core.io.VfsResource;

     label1:
        $r1 = r0.<org.springframework.core.io.VfsResource: java.lang.Object resource>;

        $r2 = staticinvoke <org.springframework.core.io.VfsUtils: java.net.URL getURL(java.lang.Object)>($r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.springframework.core.NestedIOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to obtain URL for file ");

        $r6 = r0.<org.springframework.core.io.VfsResource: java.lang.Object resource>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.springframework.core.NestedIOException: void <init>(java.lang.String,java.lang.Throwable)>($r8, $r3);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.net.URI getURI() throws java.io.IOException
    {
        org.springframework.core.NestedIOException $r4;
        java.lang.Exception $r3;
        org.springframework.core.io.VfsResource r0;
        java.lang.Object $r1, $r6;
        java.lang.StringBuilder $r5, $r7;
        java.net.URI $r2;
        java.lang.String $r8;

        r0 := @this: org.springframework.core.io.VfsResource;

     label1:
        $r1 = r0.<org.springframework.core.io.VfsResource: java.lang.Object resource>;

        $r2 = staticinvoke <org.springframework.core.io.VfsUtils: java.net.URI getURI(java.lang.Object)>($r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.springframework.core.NestedIOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to obtain URI for ");

        $r6 = r0.<org.springframework.core.io.VfsResource: java.lang.Object resource>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.springframework.core.NestedIOException: void <init>(java.lang.String,java.lang.Throwable)>($r8, $r3);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.io.File getFile() throws java.io.IOException
    {
        org.springframework.core.io.VfsResource r0;
        java.lang.Object $r1;
        java.io.File $r2;

        r0 := @this: org.springframework.core.io.VfsResource;

        $r1 = r0.<org.springframework.core.io.VfsResource: java.lang.Object resource>;

        $r2 = staticinvoke <org.springframework.core.io.VfsUtils: java.io.File getFile(java.lang.Object)>($r1);

        return $r2;
    }

    public org.springframework.core.io.Resource createRelative(java.lang.String) throws java.io.IOException
    {
        java.net.URL $r7, $r8;
        java.io.IOException $r5;
        org.springframework.core.io.VfsResource r1, $r2, $r6;
        java.lang.Object $r3, $r4, $r9;
        java.lang.String r0;
        boolean $z0, $z1;

        r1 := @this: org.springframework.core.io.VfsResource;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 != 0 goto label4;

        $z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("/");

        if $z1 == 0 goto label4;

     label1:
        $r2 = new org.springframework.core.io.VfsResource;

        $r3 = r1.<org.springframework.core.io.VfsResource: java.lang.Object resource>;

        $r4 = staticinvoke <org.springframework.core.io.VfsUtils: java.lang.Object getChild(java.lang.Object,java.lang.String)>($r3, r0);

        specialinvoke $r2.<org.springframework.core.io.VfsResource: void <init>(java.lang.Object)>($r4);

     label2:
        return $r2;

     label3:
        $r5 := @caughtexception;

     label4:
        $r6 = new org.springframework.core.io.VfsResource;

        $r7 = new java.net.URL;

        $r8 = virtualinvoke r1.<org.springframework.core.io.VfsResource: java.net.URL getURL()>();

        specialinvoke $r7.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r8, r0);

        $r9 = staticinvoke <org.springframework.core.io.VfsUtils: java.lang.Object getRelative(java.net.URL)>($r7);

        specialinvoke $r6.<org.springframework.core.io.VfsResource: void <init>(java.lang.Object)>($r9);

        return $r6;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String getFilename()
    {
        org.springframework.core.io.VfsResource r0;
        java.lang.Object $r1;
        java.lang.String $r2;

        r0 := @this: org.springframework.core.io.VfsResource;

        $r1 = r0.<org.springframework.core.io.VfsResource: java.lang.Object resource>;

        $r2 = staticinvoke <org.springframework.core.io.VfsUtils: java.lang.String getName(java.lang.Object)>($r1);

        return $r2;
    }

    public java.lang.String getDescription()
    {
        org.springframework.core.io.VfsResource r0;
        java.lang.Object $r1;
        java.lang.String $r2;

        r0 := @this: org.springframework.core.io.VfsResource;

        $r1 = r0.<org.springframework.core.io.VfsResource: java.lang.Object resource>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0, $r3, $r4;
        org.springframework.core.io.VfsResource r1, $r2;
        boolean $z0, $z1;

        r1 := @this: org.springframework.core.io.VfsResource;

        r0 := @parameter0: java.lang.Object;

        if r0 == r1 goto label2;

        $z0 = r0 instanceof org.springframework.core.io.VfsResource;

        if $z0 == 0 goto label1;

        $r4 = r1.<org.springframework.core.io.VfsResource: java.lang.Object resource>;

        $r2 = (org.springframework.core.io.VfsResource) r0;

        $r3 = $r2.<org.springframework.core.io.VfsResource: java.lang.Object resource>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public int hashCode()
    {
        int $i0;
        org.springframework.core.io.VfsResource r0;
        java.lang.Object $r1;

        r0 := @this: org.springframework.core.io.VfsResource;

        $r1 = r0.<org.springframework.core.io.VfsResource: java.lang.Object resource>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }
}
