public class org.apache.batik.svggen.SVGLinearGradient extends org.apache.batik.svggen.AbstractSVGConverter
{

    public void <init>(org.apache.batik.svggen.SVGGeneratorContext)
    {
        org.apache.batik.svggen.SVGLinearGradient r0;
        org.apache.batik.svggen.SVGGeneratorContext r1;

        r0 := @this: org.apache.batik.svggen.SVGLinearGradient;

        r1 := @parameter0: org.apache.batik.svggen.SVGGeneratorContext;

        specialinvoke r0.<org.apache.batik.svggen.AbstractSVGConverter: void <init>(org.apache.batik.svggen.SVGGeneratorContext)>(r1);

        return;
    }

    public org.apache.batik.svggen.SVGDescriptor toSVG(org.apache.batik.ext.awt.g2d.GraphicContext)
    {
        org.apache.batik.svggen.SVGPaintDescriptor $r4;
        java.awt.Paint $r1;
        java.awt.GradientPaint $r3;
        org.apache.batik.ext.awt.g2d.GraphicContext r0;
        org.apache.batik.svggen.SVGLinearGradient r2;

        r2 := @this: org.apache.batik.svggen.SVGLinearGradient;

        r0 := @parameter0: org.apache.batik.ext.awt.g2d.GraphicContext;

        $r1 = virtualinvoke r0.<org.apache.batik.ext.awt.g2d.GraphicContext: java.awt.Paint getPaint()>();

        $r3 = (java.awt.GradientPaint) $r1;

        $r4 = virtualinvoke r2.<org.apache.batik.svggen.SVGLinearGradient: org.apache.batik.svggen.SVGPaintDescriptor toSVG(java.awt.GradientPaint)>($r3);

        return $r4;
    }

    public org.apache.batik.svggen.SVGPaintDescriptor toSVG(java.awt.GradientPaint)
    {
        java.awt.Color $r14, $r20;
        java.awt.geom.Point2D $r7, $r8;
        org.w3c.dom.Document r5;
        java.util.Map $r2, $r32;
        boolean $z0;
        java.util.List $r33;
        org.apache.batik.svggen.SVGPaintDescriptor $r16, $r22, $r30, r34;
        org.apache.batik.svggen.SVGGeneratorContext $r4, $r15, $r21, $r25;
        org.apache.batik.svggen.SVGLinearGradient r0;
        java.lang.StringBuffer $r28;
        java.lang.String $r9, $r10, $r11, $r12, $r17, $r18, $r23, $r24, $r27, $r29, $r31, r35;
        org.apache.batik.svggen.SVGIDGenerator $r26;
        double $d0, $d1, $d2, $d3;
        org.w3c.dom.Element $r6, $r13, $r19;
        java.awt.GradientPaint r1;
        java.lang.Object $r3;

        r0 := @this: org.apache.batik.svggen.SVGLinearGradient;

        r1 := @parameter0: java.awt.GradientPaint;

        $r2 = r0.<org.apache.batik.svggen.AbstractSVGConverter: java.util.Map descMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r34 = (org.apache.batik.svggen.SVGPaintDescriptor) $r3;

        $r4 = r0.<org.apache.batik.svggen.AbstractSVGConverter: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        r5 = $r4.<org.apache.batik.svggen.SVGGeneratorContext: org.w3c.dom.Document domFactory>;

        if r34 != null goto label2;

        $r6 = interfaceinvoke r5.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "linearGradient");

        interfaceinvoke $r6.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "gradientUnits", "userSpaceOnUse");

        $r7 = virtualinvoke r1.<java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>();

        $r8 = virtualinvoke r1.<java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>();

        $d0 = virtualinvoke $r7.<java.awt.geom.Point2D: double getX()>();

        $r9 = virtualinvoke r0.<org.apache.batik.svggen.AbstractSVGConverter: java.lang.String doubleString(double)>($d0);

        interfaceinvoke $r6.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "x1", $r9);

        $d1 = virtualinvoke $r7.<java.awt.geom.Point2D: double getY()>();

        $r10 = virtualinvoke r0.<org.apache.batik.svggen.AbstractSVGConverter: java.lang.String doubleString(double)>($d1);

        interfaceinvoke $r6.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "y1", $r10);

        $d2 = virtualinvoke $r8.<java.awt.geom.Point2D: double getX()>();

        $r11 = virtualinvoke r0.<org.apache.batik.svggen.AbstractSVGConverter: java.lang.String doubleString(double)>($d2);

        interfaceinvoke $r6.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "x2", $r11);

        $d3 = virtualinvoke $r8.<java.awt.geom.Point2D: double getY()>();

        $r12 = virtualinvoke r0.<org.apache.batik.svggen.AbstractSVGConverter: java.lang.String doubleString(double)>($d3);

        interfaceinvoke $r6.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "y2", $r12);

        r35 = "pad";

        $z0 = virtualinvoke r1.<java.awt.GradientPaint: boolean isCyclic()>();

        if $z0 == 0 goto label1;

        r35 = "reflect";

     label1:
        interfaceinvoke $r6.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "spreadMethod", r35);

        $r13 = interfaceinvoke r5.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "stop");

        interfaceinvoke $r13.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "offset", "0%");

        $r14 = virtualinvoke r1.<java.awt.GradientPaint: java.awt.Color getColor1()>();

        $r15 = r0.<org.apache.batik.svggen.AbstractSVGConverter: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        $r16 = staticinvoke <org.apache.batik.svggen.SVGColor: org.apache.batik.svggen.SVGPaintDescriptor toSVG(java.awt.Color,org.apache.batik.svggen.SVGGeneratorContext)>($r14, $r15);

        $r17 = virtualinvoke $r16.<org.apache.batik.svggen.SVGPaintDescriptor: java.lang.String getPaintValue()>();

        interfaceinvoke $r13.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "stop-color", $r17);

        $r18 = virtualinvoke $r16.<org.apache.batik.svggen.SVGPaintDescriptor: java.lang.String getOpacityValue()>();

        interfaceinvoke $r13.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "stop-opacity", $r18);

        interfaceinvoke $r6.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r13);

        $r19 = interfaceinvoke r5.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "stop");

        interfaceinvoke $r19.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "offset", "100%");

        $r20 = virtualinvoke r1.<java.awt.GradientPaint: java.awt.Color getColor2()>();

        $r21 = r0.<org.apache.batik.svggen.AbstractSVGConverter: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        $r22 = staticinvoke <org.apache.batik.svggen.SVGColor: org.apache.batik.svggen.SVGPaintDescriptor toSVG(java.awt.Color,org.apache.batik.svggen.SVGGeneratorContext)>($r20, $r21);

        $r23 = virtualinvoke $r22.<org.apache.batik.svggen.SVGPaintDescriptor: java.lang.String getPaintValue()>();

        interfaceinvoke $r19.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "stop-color", $r23);

        $r24 = virtualinvoke $r22.<org.apache.batik.svggen.SVGPaintDescriptor: java.lang.String getOpacityValue()>();

        interfaceinvoke $r19.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "stop-opacity", $r24);

        interfaceinvoke $r6.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r19);

        $r25 = r0.<org.apache.batik.svggen.AbstractSVGConverter: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        $r26 = $r25.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.SVGIDGenerator idGenerator>;

        $r27 = virtualinvoke $r26.<org.apache.batik.svggen.SVGIDGenerator: java.lang.String generateID(java.lang.String)>("linearGradient");

        interfaceinvoke $r6.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "id", $r27);

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>(java.lang.String)>("url(");

        virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#");

        $r29 = interfaceinvoke $r6.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "id");

        virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r30 = new org.apache.batik.svggen.SVGPaintDescriptor;

        $r31 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r30.<org.apache.batik.svggen.SVGPaintDescriptor: void <init>(java.lang.String,java.lang.String,org.w3c.dom.Element)>($r31, "1", $r6);

        r34 = $r30;

        $r32 = r0.<org.apache.batik.svggen.AbstractSVGConverter: java.util.Map descMap>;

        interfaceinvoke $r32.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r30);

        $r33 = r0.<org.apache.batik.svggen.AbstractSVGConverter: java.util.List defSet>;

        interfaceinvoke $r33.<java.util.List: boolean add(java.lang.Object)>($r6);

     label2:
        return r34;
    }
}
