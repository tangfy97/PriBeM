public class org.apache.cxf.jaxrs.provider.DataSourceProvider extends java.lang.Object implements javax.ws.rs.ext.MessageBodyReader, javax.ws.rs.ext.MessageBodyWriter
{
    private boolean useDataSourceContentType;

    public void <init>()
    {
        org.apache.cxf.jaxrs.provider.DataSourceProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.DataSourceProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean isReadable(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r2;
        java.lang.reflect.Type r3;
        org.apache.cxf.jaxrs.provider.DataSourceProvider r0;
        java.lang.Class r1;
        java.lang.'annotation'.Annotation[] r4;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.DataSourceProvider;

        r1 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.reflect.Type;

        r4 := @parameter2: java.lang.'annotation'.Annotation[];

        r2 := @parameter3: javax.ws.rs.core.MediaType;

        $z0 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.DataSourceProvider: boolean isSupported(java.lang.Class,javax.ws.rs.core.MediaType)>(r1, r2);

        return $z0;
    }

    public java.lang.Object readFrom(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.InputStream) throws java.io.IOException
    {
        org.apache.cxf.jaxrs.ext.multipart.InputStreamDataSource $r12;
        java.lang.'annotation'.Annotation[] r9;
        javax.activation.DataHandler $r13;
        javax.ws.rs.core.MultivaluedMap r10;
        javax.ws.rs.core.MediaType r2;
        java.lang.reflect.Type r8;
        java.lang.Class r4, $r5;
        java.lang.Object $r6, $r11;
        org.apache.cxf.jaxrs.provider.DataSourceProvider r7;
        java.lang.String $r3;
        java.io.InputStream r1;
        boolean $z0;

        r7 := @this: org.apache.cxf.jaxrs.provider.DataSourceProvider;

        r4 := @parameter0: java.lang.Class;

        r8 := @parameter1: java.lang.reflect.Type;

        r9 := @parameter2: java.lang.'annotation'.Annotation[];

        r2 := @parameter3: javax.ws.rs.core.MediaType;

        r10 := @parameter4: javax.ws.rs.core.MultivaluedMap;

        r1 := @parameter5: java.io.InputStream;

        $r12 = new org.apache.cxf.jaxrs.ext.multipart.InputStreamDataSource;

        $r3 = virtualinvoke r2.<javax.ws.rs.core.MediaType: java.lang.String toString()>();

        specialinvoke $r12.<org.apache.cxf.jaxrs.ext.multipart.InputStreamDataSource: void <init>(java.io.InputStream,java.lang.String)>(r1, $r3);

        $r5 = class "Ljavax/activation/DataSource;";

        $z0 = virtualinvoke $r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z0 == 0 goto label1;

        $r11 = $r12;

        goto label2;

     label1:
        $r13 = new javax.activation.DataHandler;

        $r11 = $r13;

        specialinvoke $r13.<javax.activation.DataHandler: void <init>(javax.activation.DataSource)>($r12);

     label2:
        $r6 = virtualinvoke r4.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r11);

        return $r6;
    }

    public long getSize(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r5;
        java.lang.reflect.Type r3;
        org.apache.cxf.jaxrs.provider.DataSourceProvider r0;
        java.lang.Object r1;
        java.lang.Class r2;
        java.lang.'annotation'.Annotation[] r4;

        r0 := @this: org.apache.cxf.jaxrs.provider.DataSourceProvider;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.reflect.Type;

        r4 := @parameter3: java.lang.'annotation'.Annotation[];

        r5 := @parameter4: javax.ws.rs.core.MediaType;

        return -1L;
    }

    public boolean isWriteable(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r2;
        java.lang.reflect.Type r3;
        org.apache.cxf.jaxrs.provider.DataSourceProvider r0;
        java.lang.Class r1;
        java.lang.'annotation'.Annotation[] r4;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.DataSourceProvider;

        r1 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.reflect.Type;

        r4 := @parameter2: java.lang.'annotation'.Annotation[];

        r2 := @parameter3: javax.ws.rs.core.MediaType;

        $z0 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.DataSourceProvider: boolean isSupported(java.lang.Class,javax.ws.rs.core.MediaType)>(r1, r2);

        return $z0;
    }

    private boolean isSupported(java.lang.Class, javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r0;
        java.lang.Class r2, $r3, $r4;
        org.apache.cxf.jaxrs.provider.DataSourceProvider r5;
        java.lang.String $r1;
        boolean $z0, $z1, $z2, $z3;

        r5 := @this: org.apache.cxf.jaxrs.provider.DataSourceProvider;

        r2 := @parameter0: java.lang.Class;

        r0 := @parameter1: javax.ws.rs.core.MediaType;

        $r1 = virtualinvoke r0.<javax.ws.rs.core.MediaType: java.lang.String getType()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("multipart");

        if $z0 != 0 goto label2;

        $r3 = class "Ljavax/activation/DataSource;";

        $z1 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z1 != 0 goto label1;

        $r4 = class "Ljavax/activation/DataHandler;";

        $z2 = virtualinvoke $r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public void writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream) throws java.io.IOException
    {
        java.lang.'annotation'.Annotation[] r12;
        javax.activation.DataHandler $r3;
        javax.ws.rs.core.MediaType r8;
        java.lang.String $r10;
        boolean $z0, $z1;
        java.io.OutputStream r7;
        javax.ws.rs.core.MultivaluedMap r9;
        java.lang.reflect.Type r11;
        javax.activation.DataSource r4, $r13;
        java.lang.Class r0, $r1;
        java.lang.Object r2;
        org.apache.cxf.jaxrs.provider.DataSourceProvider r5;
        java.io.InputStream $r6;

        r5 := @this: org.apache.cxf.jaxrs.provider.DataSourceProvider;

        r2 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Class;

        r11 := @parameter2: java.lang.reflect.Type;

        r12 := @parameter3: java.lang.'annotation'.Annotation[];

        r8 := @parameter4: javax.ws.rs.core.MediaType;

        r9 := @parameter5: javax.ws.rs.core.MultivaluedMap;

        r7 := @parameter6: java.io.OutputStream;

        $r1 = class "Ljavax/activation/DataSource;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 == 0 goto label1;

        $r13 = (javax.activation.DataSource) r2;

        goto label2;

     label1:
        $r3 = (javax.activation.DataHandler) r2;

        $r13 = virtualinvoke $r3.<javax.activation.DataHandler: javax.activation.DataSource getDataSource()>();

     label2:
        r4 = $r13;

        $z1 = r5.<org.apache.cxf.jaxrs.provider.DataSourceProvider: boolean useDataSourceContentType>;

        if $z1 == 0 goto label3;

        $r10 = interfaceinvoke $r13.<javax.activation.DataSource: java.lang.String getContentType()>();

        specialinvoke r5.<org.apache.cxf.jaxrs.provider.DataSourceProvider: void setContentTypeIfNeeded(javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.lang.String)>(r8, r9, $r10);

     label3:
        $r6 = interfaceinvoke r4.<javax.activation.DataSource: java.io.InputStream getInputStream()>();

        staticinvoke <org.apache.cxf.helpers.IOUtils: int copyAndCloseInput(java.io.InputStream,java.io.OutputStream)>($r6, r7);

        return;
    }

    private void setContentTypeIfNeeded(javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.lang.String)
    {
        javax.ws.rs.core.MultivaluedMap r3;
        javax.ws.rs.core.MediaType r1, $r2;
        org.apache.cxf.jaxrs.provider.DataSourceProvider r4;
        java.lang.String r0;
        boolean $z0, $z1;

        r4 := @this: org.apache.cxf.jaxrs.provider.DataSourceProvider;

        r1 := @parameter0: javax.ws.rs.core.MediaType;

        r3 := @parameter1: javax.ws.rs.core.MultivaluedMap;

        r0 := @parameter2: java.lang.String;

        $z0 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MediaType toMediaType(java.lang.String)>(r0);

        $z1 = virtualinvoke r1.<javax.ws.rs.core.MediaType: boolean equals(java.lang.Object)>($r2);

        if $z1 != 0 goto label1;

        interfaceinvoke r3.<javax.ws.rs.core.MultivaluedMap: void putSingle(java.lang.Object,java.lang.Object)>("Content-Type", r0);

     label1:
        return;
    }

    public void setUseDataSourceContentType(boolean)
    {
        org.apache.cxf.jaxrs.provider.DataSourceProvider r0;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.DataSourceProvider;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.jaxrs.provider.DataSourceProvider: boolean useDataSourceContentType> = z0;

        return;
    }
}
