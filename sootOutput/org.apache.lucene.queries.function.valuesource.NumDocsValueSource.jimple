public class org.apache.lucene.queries.function.valuesource.NumDocsValueSource extends org.apache.lucene.queries.function.ValueSource
{

    public void <init>()
    {
        org.apache.lucene.queries.function.valuesource.NumDocsValueSource r0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.NumDocsValueSource;

        specialinvoke r0.<org.apache.lucene.queries.function.ValueSource: void <init>()>();

        return;
    }

    public java.lang.String name()
    {
        org.apache.lucene.queries.function.valuesource.NumDocsValueSource r0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.NumDocsValueSource;

        return "numdocs";
    }

    public java.lang.String description()
    {
        java.lang.StringBuilder $r0, $r3, $r4;
        java.lang.String $r2, $r5;
        org.apache.lucene.queries.function.valuesource.NumDocsValueSource r1;

        r1 := @this: org.apache.lucene.queries.function.valuesource.NumDocsValueSource;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.lucene.queries.function.valuesource.NumDocsValueSource: java.lang.String name()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("()");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public org.apache.lucene.queries.function.FunctionValues getValues(java.util.Map, org.apache.lucene.index.AtomicReaderContext) throws java.io.IOException
    {
        org.apache.lucene.queries.function.valuesource.ConstIntDocValues $r0;
        java.util.Map r5;
        int $i0;
        org.apache.lucene.index.AtomicReaderContext r1;
        org.apache.lucene.index.IndexReader $r3;
        org.apache.lucene.queries.function.valuesource.NumDocsValueSource r4;
        org.apache.lucene.index.IndexReaderContext $r2;

        r4 := @this: org.apache.lucene.queries.function.valuesource.NumDocsValueSource;

        r5 := @parameter0: java.util.Map;

        r1 := @parameter1: org.apache.lucene.index.AtomicReaderContext;

        $r0 = new org.apache.lucene.queries.function.valuesource.ConstIntDocValues;

        $r2 = staticinvoke <org.apache.lucene.index.ReaderUtil: org.apache.lucene.index.IndexReaderContext getTopLevelContext(org.apache.lucene.index.IndexReaderContext)>(r1);

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.IndexReaderContext: org.apache.lucene.index.IndexReader reader()>();

        $i0 = virtualinvoke $r3.<org.apache.lucene.index.IndexReader: int numDocs()>();

        specialinvoke $r0.<org.apache.lucene.queries.function.valuesource.ConstIntDocValues: void <init>(int,org.apache.lucene.queries.function.ValueSource)>($i0, r4);

        return $r0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Class $r1, $r3;
        java.lang.Object r2;
        org.apache.lucene.queries.function.valuesource.NumDocsValueSource r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.NumDocsValueSource;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 != $r3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int hashCode()
    {
        int $i0;
        java.lang.Class $r1;
        org.apache.lucene.queries.function.valuesource.NumDocsValueSource r0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.NumDocsValueSource;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }
}
