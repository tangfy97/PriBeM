public class org.apache.pdfbox.encoding.PDFBoxCharsetProvider extends java.nio.charset.spi.CharsetProvider
{
    private final java.util.Set available;
    private final java.util.Map map;

    public void <init>()
    {
        org.apache.pdfbox.encoding.PDFBoxCharsetProvider r0;
        java.util.HashMap $r2;
        org.apache.pdfbox.encoding.PDFDocEncodingCharset $r3;
        java.util.HashSet $r1;
        java.nio.charset.Charset r8;
        java.util.Map $r9, $r15;
        java.lang.String $r10, r14;
        boolean $z0, $z1;
        java.util.Iterator $r6, $r12;
        java.util.Set $r4, $r5, $r11;
        java.lang.Object $r7, $r13;

        r0 := @this: org.apache.pdfbox.encoding.PDFBoxCharsetProvider;

        specialinvoke r0.<java.nio.charset.spi.CharsetProvider: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.apache.pdfbox.encoding.PDFBoxCharsetProvider: java.util.Set available> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.pdfbox.encoding.PDFBoxCharsetProvider: java.util.Map map> = $r2;

        $r4 = r0.<org.apache.pdfbox.encoding.PDFBoxCharsetProvider: java.util.Set available>;

        $r3 = <org.apache.pdfbox.encoding.PDFDocEncodingCharset: org.apache.pdfbox.encoding.PDFDocEncodingCharset INSTANCE>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r5 = r0.<org.apache.pdfbox.encoding.PDFBoxCharsetProvider: java.util.Set available>;

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.nio.charset.Charset) $r7;

        $r9 = r0.<org.apache.pdfbox.encoding.PDFBoxCharsetProvider: java.util.Map map>;

        $r10 = virtualinvoke r8.<java.nio.charset.Charset: java.lang.String name()>();

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r8);

        $r11 = virtualinvoke r8.<java.nio.charset.Charset: java.util.Set aliases()>();

        $r12 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (java.lang.String) $r13;

        $r15 = r0.<org.apache.pdfbox.encoding.PDFBoxCharsetProvider: java.util.Map map>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r14, r8);

        goto label2;

     label3:
        goto label1;

     label4:
        return;
    }

    public java.util.Iterator charsets()
    {
        java.util.Iterator $r3;
        org.apache.pdfbox.encoding.PDFBoxCharsetProvider r0;
        java.util.Set $r1, $r2;

        r0 := @this: org.apache.pdfbox.encoding.PDFBoxCharsetProvider;

        $r1 = r0.<org.apache.pdfbox.encoding.PDFBoxCharsetProvider: java.util.Set available>;

        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        return $r3;
    }

    public java.nio.charset.Charset charsetForName(java.lang.String)
    {
        java.nio.charset.Charset $r4;
        org.apache.pdfbox.encoding.PDFBoxCharsetProvider r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: org.apache.pdfbox.encoding.PDFBoxCharsetProvider;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.pdfbox.encoding.PDFBoxCharsetProvider: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.nio.charset.Charset) $r3;

        return $r4;
    }
}
