public class com.jidesoft.range.CombinedNumericRange extends com.jidesoft.range.AbstractNumericRange
{
    private final java.lang.Object monitor;
    private java.util.List _ranges;
    private java.lang.Double _max;
    private java.lang.Double _min;

    public void <init>()
    {
        java.lang.Object $r1;
        com.jidesoft.range.CombinedNumericRange r0;
        java.util.ArrayList $r2;

        r0 := @this: com.jidesoft.range.CombinedNumericRange;

        specialinvoke r0.<com.jidesoft.range.AbstractNumericRange: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<com.jidesoft.range.CombinedNumericRange: java.lang.Object monitor> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.jidesoft.range.CombinedNumericRange: java.util.List _ranges> = $r2;

        r0.<com.jidesoft.range.CombinedNumericRange: java.lang.Double _max> = null;

        r0.<com.jidesoft.range.CombinedNumericRange: java.lang.Double _min> = null;

        return;
    }

    public com.jidesoft.range.CombinedNumericRange add(com.jidesoft.range.Range)
    {
        java.lang.Throwable $r4;
        java.util.List $r3;
        com.jidesoft.range.Range r0;
        java.lang.Object $r2;
        com.jidesoft.range.CombinedNumericRange r1;

        r1 := @this: com.jidesoft.range.CombinedNumericRange;

        r0 := @parameter0: com.jidesoft.range.Range;

        if r0 != null goto label1;

        return r1;

     label1:
        $r2 = r1.<com.jidesoft.range.CombinedNumericRange: java.lang.Object monitor>;

        entermonitor $r2;

     label2:
        $r3 = r1.<com.jidesoft.range.CombinedNumericRange: java.util.List _ranges>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r0);

        r1.<com.jidesoft.range.CombinedNumericRange: java.lang.Double _min> = null;

        r1.<com.jidesoft.range.CombinedNumericRange: java.lang.Double _max> = null;

        exitmonitor $r2;

     label3:
        goto label6;

     label4:
        $r4 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r4;

     label6:
        return r1;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.lang.Double lower()
    {
        java.lang.Double $r1;
        com.jidesoft.range.CombinedNumericRange r0;
        double $d0;

        r0 := @this: com.jidesoft.range.CombinedNumericRange;

        $d0 = virtualinvoke r0.<com.jidesoft.range.CombinedNumericRange: double minimum()>();

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r1;
    }

    public java.lang.Double upper()
    {
        java.lang.Double $r1;
        com.jidesoft.range.CombinedNumericRange r0;
        double $d0;

        r0 := @this: com.jidesoft.range.CombinedNumericRange;

        $d0 = virtualinvoke r0.<com.jidesoft.range.CombinedNumericRange: double maximum()>();

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r1;
    }

    public int rangeCount()
    {
        java.util.List $r1, $r2;
        int $i0;
        com.jidesoft.range.CombinedNumericRange r0;

        r0 := @this: com.jidesoft.range.CombinedNumericRange;

        $r1 = r0.<com.jidesoft.range.CombinedNumericRange: java.util.List _ranges>;

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r2 = r0.<com.jidesoft.range.CombinedNumericRange: java.util.List _ranges>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

     label2:
        return $i0;
    }

    public void adjust(java.lang.Double, java.lang.Double)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Double r2, r3;
        com.jidesoft.range.CombinedNumericRange r1;

        r1 := @this: com.jidesoft.range.CombinedNumericRange;

        r2 := @parameter0: java.lang.Double;

        r3 := @parameter1: java.lang.Double;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public double maximum()
    {
        java.lang.Throwable $r14;
        java.lang.Double $r2, $r5, $r8, $r11, $r12, $r13;
        com.jidesoft.range.Range r10;
        byte $b1;
        int $i0, $i2;
        com.jidesoft.range.CombinedNumericRange r0;
        boolean $z0;
        double $d0, $d1, $d2, $d3, $d4;
        java.util.Iterator $r7;
        java.util.List $r3, $r4, $r6;
        java.lang.Object $r1, $r9;

        r0 := @this: com.jidesoft.range.CombinedNumericRange;

        $r1 = r0.<com.jidesoft.range.CombinedNumericRange: java.lang.Object monitor>;

        entermonitor $r1;

     label01:
        $r2 = r0.<com.jidesoft.range.CombinedNumericRange: java.lang.Double _max>;

        if $r2 == null goto label03;

        $r13 = r0.<com.jidesoft.range.CombinedNumericRange: java.lang.Double _max>;

        $d4 = virtualinvoke $r13.<java.lang.Double: double doubleValue()>();

        exitmonitor $r1;

     label02:
        return $d4;

     label03:
        $r3 = r0.<com.jidesoft.range.CombinedNumericRange: java.util.List _ranges>;

        if $r3 == null goto label04;

        $r4 = r0.<com.jidesoft.range.CombinedNumericRange: java.util.List _ranges>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 != 0 goto label06;

     label04:
        exitmonitor $r1;

     label05:
        return 1.7976931348623157E308;

     label06:
        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(-1.7976931348623157E308);

        r0.<com.jidesoft.range.CombinedNumericRange: java.lang.Double _max> = $r5;

        $r6 = r0.<com.jidesoft.range.CombinedNumericRange: java.util.List _ranges>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r9 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.jidesoft.range.Range) $r9;

        if r10 == null goto label08;

        $d1 = interfaceinvoke r10.<com.jidesoft.range.Range: double maximum()>();

        $r11 = r0.<com.jidesoft.range.CombinedNumericRange: java.lang.Double _max>;

        $d2 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        $b1 = $d1 cmpl $d2;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label08;

        $d3 = interfaceinvoke r10.<com.jidesoft.range.Range: double maximum()>();

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        r0.<com.jidesoft.range.CombinedNumericRange: java.lang.Double _max> = $r12;

     label08:
        goto label07;

     label09:
        $r8 = r0.<com.jidesoft.range.CombinedNumericRange: java.lang.Double _max>;

        $d0 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        exitmonitor $r1;

     label10:
        return $d0;

     label11:
        $r14 := @caughtexception;

        exitmonitor $r1;

     label12:
        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label05 with label11;
        catch java.lang.Throwable from label06 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public double minimum()
    {
        java.lang.Throwable $r14;
        java.lang.Double $r2, $r5, $r8, $r11, $r12, $r13;
        com.jidesoft.range.Range r10;
        byte $b1;
        int $i0, $i2;
        com.jidesoft.range.CombinedNumericRange r0;
        boolean $z0;
        double $d0, $d1, $d2, $d3, $d4;
        java.util.Iterator $r7;
        java.util.List $r3, $r4, $r6;
        java.lang.Object $r1, $r9;

        r0 := @this: com.jidesoft.range.CombinedNumericRange;

        $r1 = r0.<com.jidesoft.range.CombinedNumericRange: java.lang.Object monitor>;

        entermonitor $r1;

     label01:
        $r2 = r0.<com.jidesoft.range.CombinedNumericRange: java.lang.Double _min>;

        if $r2 == null goto label03;

        $r13 = r0.<com.jidesoft.range.CombinedNumericRange: java.lang.Double _min>;

        $d4 = virtualinvoke $r13.<java.lang.Double: double doubleValue()>();

        exitmonitor $r1;

     label02:
        return $d4;

     label03:
        $r3 = r0.<com.jidesoft.range.CombinedNumericRange: java.util.List _ranges>;

        if $r3 == null goto label04;

        $r4 = r0.<com.jidesoft.range.CombinedNumericRange: java.util.List _ranges>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 != 0 goto label06;

     label04:
        exitmonitor $r1;

     label05:
        return -1.7976931348623157E308;

     label06:
        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.7976931348623157E308);

        r0.<com.jidesoft.range.CombinedNumericRange: java.lang.Double _min> = $r5;

        $r6 = r0.<com.jidesoft.range.CombinedNumericRange: java.util.List _ranges>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r9 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.jidesoft.range.Range) $r9;

        if r10 == null goto label08;

        $d1 = interfaceinvoke r10.<com.jidesoft.range.Range: double minimum()>();

        $r11 = r0.<com.jidesoft.range.CombinedNumericRange: java.lang.Double _min>;

        $d2 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        $b1 = $d1 cmpg $d2;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label08;

        $d3 = interfaceinvoke r10.<com.jidesoft.range.Range: double minimum()>();

        $r12 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        r0.<com.jidesoft.range.CombinedNumericRange: java.lang.Double _min> = $r12;

     label08:
        goto label07;

     label09:
        $r8 = r0.<com.jidesoft.range.CombinedNumericRange: java.lang.Double _min>;

        $d0 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        exitmonitor $r1;

     label10:
        return $d0;

     label11:
        $r14 := @caughtexception;

        exitmonitor $r1;

     label12:
        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label05 with label11;
        catch java.lang.Throwable from label06 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public boolean contains(java.lang.Double)
    {
        java.lang.Throwable $r8;
        java.util.Iterator $r5;
        java.lang.Double r2;
        com.jidesoft.range.Range r7;
        java.util.List $r3, $r4;
        int $i0;
        java.lang.Object $r1, $r6;
        com.jidesoft.range.CombinedNumericRange r0;
        boolean $z0, $z1;

        r0 := @this: com.jidesoft.range.CombinedNumericRange;

        r2 := @parameter0: java.lang.Double;

        $r1 = r0.<com.jidesoft.range.CombinedNumericRange: java.lang.Object monitor>;

        entermonitor $r1;

     label01:
        if r2 == null goto label02;

        $r3 = r0.<com.jidesoft.range.CombinedNumericRange: java.util.List _ranges>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 != 0 goto label04;

     label02:
        exitmonitor $r1;

     label03:
        return 0;

     label04:
        $r4 = r0.<com.jidesoft.range.CombinedNumericRange: java.util.List _ranges>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.jidesoft.range.Range) $r6;

        $z1 = interfaceinvoke r7.<com.jidesoft.range.Range: boolean contains(java.lang.Object)>(r2);

        if $z1 == 0 goto label07;

        exitmonitor $r1;

     label06:
        return 1;

     label07:
        goto label05;

     label08:
        exitmonitor $r1;

     label09:
        return 0;

     label10:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label11:
        throw $r8;

        catch java.lang.Throwable from label01 to label03 with label10;
        catch java.lang.Throwable from label04 to label06 with label10;
        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public double size()
    {
        java.lang.Throwable $r2;
        java.lang.Object $r1;
        com.jidesoft.range.CombinedNumericRange r0;
        double $d0, $d1, $d2;

        r0 := @this: com.jidesoft.range.CombinedNumericRange;

        $r1 = r0.<com.jidesoft.range.CombinedNumericRange: java.lang.Object monitor>;

        entermonitor $r1;

     label1:
        $d0 = virtualinvoke r0.<com.jidesoft.range.CombinedNumericRange: double maximum()>();

        $d1 = virtualinvoke r0.<com.jidesoft.range.CombinedNumericRange: double minimum()>();

        $d2 = $d0 - $d1;

        exitmonitor $r1;

     label2:
        return $d2;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public com.jidesoft.range.NumericRange getRange(double, double)
    {
        com.jidesoft.range.NumericRange $r1;
        com.jidesoft.range.CombinedNumericRange r0;
        double $d0, $d1, $d2, $d3, d4, d5, d6, d7, $d8, $d9;

        r0 := @this: com.jidesoft.range.CombinedNumericRange;

        d4 := @parameter0: double;

        d6 := @parameter1: double;

        $d0 = virtualinvoke r0.<com.jidesoft.range.CombinedNumericRange: double maximum()>();

        $d1 = virtualinvoke r0.<com.jidesoft.range.CombinedNumericRange: double minimum()>();

        $d2 = $d0 - $d1;

        $d3 = staticinvoke <java.lang.Math: double abs(double)>($d2);

        d5 = d4 * $d3;

        d7 = d6 * $d3;

        $r1 = new com.jidesoft.range.NumericRange;

        $d9 = $d1 - d5;

        $d8 = $d0 + d7;

        specialinvoke $r1.<com.jidesoft.range.NumericRange: void <init>(double,double)>($d9, $d8);

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r0;
        java.lang.Double $r2, $r3;
        java.lang.String $r4;
        com.jidesoft.range.CombinedNumericRange r1;
        double $d0, $d1;

        r1 := @this: com.jidesoft.range.CombinedNumericRange;

        $r0 = newarray (java.lang.Object)[2];

        $d0 = virtualinvoke r1.<com.jidesoft.range.CombinedNumericRange: double minimum()>();

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r0[0] = $r2;

        $d1 = virtualinvoke r1.<com.jidesoft.range.CombinedNumericRange: double maximum()>();

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r0[1] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("#<CombinedNumericRange min=%s max=%s>", $r0);

        return $r4;
    }

    public volatile boolean contains(java.lang.Object)
    {
        java.lang.Double $r2;
        java.lang.Object r1;
        com.jidesoft.range.CombinedNumericRange r0;
        boolean $z0;

        r0 := @this: com.jidesoft.range.CombinedNumericRange;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Double) r1;

        $z0 = virtualinvoke r0.<com.jidesoft.range.CombinedNumericRange: boolean contains(java.lang.Double)>($r2);

        return $z0;
    }

    public volatile void adjust(java.lang.Object, java.lang.Object)
    {
        java.lang.Double $r3, $r4;
        java.lang.Object r1, r2;
        com.jidesoft.range.CombinedNumericRange r0;

        r0 := @this: com.jidesoft.range.CombinedNumericRange;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.Double) r1;

        $r3 = (java.lang.Double) r2;

        virtualinvoke r0.<com.jidesoft.range.CombinedNumericRange: void adjust(java.lang.Double,java.lang.Double)>($r4, $r3);

        return;
    }

    public volatile java.lang.Object upper()
    {
        java.lang.Double $r1;
        com.jidesoft.range.CombinedNumericRange r0;

        r0 := @this: com.jidesoft.range.CombinedNumericRange;

        $r1 = virtualinvoke r0.<com.jidesoft.range.CombinedNumericRange: java.lang.Double upper()>();

        return $r1;
    }

    public volatile java.lang.Object lower()
    {
        java.lang.Double $r1;
        com.jidesoft.range.CombinedNumericRange r0;

        r0 := @this: com.jidesoft.range.CombinedNumericRange;

        $r1 = virtualinvoke r0.<com.jidesoft.range.CombinedNumericRange: java.lang.Double lower()>();

        return $r1;
    }
}
