class ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype extends java.lang.Object implements ucar.nc2.dt.PointObsDatatype
{
    private int point;
    private ucar.ma2.StructureData sdata;
    private double time;
    private ucar.unidata.geoloc.EarthLocation earthLoc;
    final ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory this$1;

    private void <init>(ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory, int) throws java.io.IOException
    {
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype r0;
        ucar.unidata.geoloc.EarthLocation $r2;
        int i0;
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory r1;
        double $d0;

        r0 := @this: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype;

        r1 := @parameter0: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory;

        i0 := @parameter1: int;

        r0.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype: int point> = i0;

        $d0 = virtualinvoke r1.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory: double getTimeValue(int)>(i0);

        r0.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype: double time> = $d0;

        $r2 = virtualinvoke r1.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory: ucar.unidata.geoloc.EarthLocation getLocation(int)>(i0);

        r0.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype: ucar.unidata.geoloc.EarthLocation earthLoc> = $r2;

        return;
    }

    private void <init>(ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory, int, ucar.ma2.StructureData)
    {
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory r1;
        ucar.ma2.StructureData r2;
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype r0;
        int i0;
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyEarthLocation $r5;
        ucar.nc2.Variable $r3;
        java.lang.String $r4;
        double $d0;

        r0 := @this: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype;

        r1 := @parameter0: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory;

        i0 := @parameter1: int;

        r2 := @parameter2: ucar.ma2.StructureData;

        r0.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype: int point> = i0;

        r0.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype: ucar.ma2.StructureData sdata> = r2;

        $r3 = staticinvoke <ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory: ucar.nc2.Variable access$600(ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory)>(r1);

        $r4 = virtualinvoke $r3.<ucar.nc2.Variable: java.lang.String getName()>();

        $d0 = virtualinvoke r2.<ucar.ma2.StructureData: double convertScalarDouble(java.lang.String)>($r4);

        r0.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype: double time> = $d0;

        $r5 = new ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyEarthLocation;

        specialinvoke $r5.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyEarthLocation: void <init>(ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory,ucar.ma2.StructureData,ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$1)>(r1, r2, null);

        r0.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype: ucar.unidata.geoloc.EarthLocation earthLoc> = $r5;

        return;
    }

    public double getNominalTime()
    {
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype r0;
        double $d0;

        r0 := @this: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype;

        $d0 = r0.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype: double time>;

        return $d0;
    }

    public double getObservationTime()
    {
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype r0;
        double $d0;

        r0 := @this: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype;

        $d0 = r0.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype: double time>;

        return $d0;
    }

    public java.util.Date getNominalTimeAsDate()
    {
        java.util.Date $r8;
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory $r4;
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype r1;
        java.lang.StringBuilder $r0, $r2, $r3, $r6;
        java.lang.String $r5, $r7;
        double $d0;

        r1 := @this: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $d0 = virtualinvoke r1.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype: double getNominalTime()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r4 = r1.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory this$1>;

        $r5 = staticinvoke <ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory: java.lang.String access$800(ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory)>($r4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <ucar.nc2.units.DateUnit: java.util.Date getStandardDate(java.lang.String)>($r7);

        return $r8;
    }

    public java.util.Date getObservationTimeAsDate()
    {
        java.util.Date $r8;
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory $r4;
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype r1;
        java.lang.StringBuilder $r0, $r2, $r3, $r6;
        java.lang.String $r5, $r7;
        double $d0;

        r1 := @this: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $d0 = virtualinvoke r1.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype: double getObservationTime()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r4 = r1.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory this$1>;

        $r5 = staticinvoke <ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory: java.lang.String access$800(ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory)>($r4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <ucar.nc2.units.DateUnit: java.util.Date getStandardDate(java.lang.String)>($r7);

        return $r8;
    }

    public ucar.unidata.geoloc.EarthLocation getLocation()
    {
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype r0;
        ucar.unidata.geoloc.EarthLocation $r1;

        r0 := @this: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype;

        $r1 = r0.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype: ucar.unidata.geoloc.EarthLocation earthLoc>;

        return $r1;
    }

    public ucar.ma2.StructureData getData() throws java.io.IOException
    {
        java.lang.IllegalStateException $r6;
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory $r2;
        ucar.ma2.StructureData $r1, $r3, $r4;
        ucar.ma2.InvalidRangeException $r5;
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype r0;
        int $i0;
        java.lang.String $r7;

        r0 := @this: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype;

        $r1 = r0.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype: ucar.ma2.StructureData sdata>;

        if $r1 == null goto label1;

        $r4 = r0.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype: ucar.ma2.StructureData sdata>;

        return $r4;

     label1:
        $r2 = r0.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory this$1>;

        $i0 = r0.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype: int point>;

        $r3 = virtualinvoke $r2.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory: ucar.ma2.StructureData getData(int)>($i0);

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalStateException;

        $r7 = virtualinvoke $r5.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch ucar.ma2.InvalidRangeException from label1 to label2 with label3;
    }

    void <init>(ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory, int, ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$1) throws java.io.IOException
    {
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype r0;
        int i0;
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory r1;
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$1 r2;

        r0 := @this: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype;

        r1 := @parameter0: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory;

        i0 := @parameter1: int;

        r2 := @parameter2: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$1;

        specialinvoke r0.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype: void <init>(ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory,int)>(r1, i0);

        return;
    }

    void <init>(ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory, int, ucar.ma2.StructureData, ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$1)
    {
        ucar.ma2.StructureData r2;
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype r0;
        int i0;
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory r1;
        ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$1 r3;

        r0 := @this: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype;

        r1 := @parameter0: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory;

        i0 := @parameter1: int;

        r2 := @parameter2: ucar.ma2.StructureData;

        r3 := @parameter3: ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$1;

        specialinvoke r0.<ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory$MyPointObsDatatype: void <init>(ucar.nc2.dt.trajectory.SingleTrajectoryObsDataset$SingleTrajectory,int,ucar.ma2.StructureData)>(r1, i0, r2);

        return;
    }
}
