class com.google.inject.spi.Elements$RecordingBinder extends java.lang.Object implements com.google.inject.Binder, com.google.inject.PrivateBinder
{
    private final com.google.inject.Stage stage;
    private final java.util.Set modules;
    private final java.util.List elements;
    private final java.lang.Object source;
    private final com.google.inject.internal.util.$SourceProvider sourceProvider;
    private final com.google.inject.spi.Elements$RecordingBinder parent;
    private final com.google.inject.internal.PrivateElementsImpl privateElements;

    private void <init>(com.google.inject.Stage)
    {
        com.google.inject.Stage r1;
        java.util.HashSet $r2;
        com.google.inject.spi.Elements$RecordingBinder r0;
        java.lang.Class[] $r4;
        com.google.inject.internal.util.$SourceProvider $r5, $r6;
        java.util.ArrayList $r3;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r1 := @parameter0: com.google.inject.Stage;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.Stage stage> = r1;

        $r2 = staticinvoke <com.google.inject.internal.util.$Sets: java.util.HashSet newHashSet()>();

        r0.<com.google.inject.spi.Elements$RecordingBinder: java.util.Set modules> = $r2;

        $r3 = staticinvoke <com.google.inject.internal.util.$Lists: java.util.ArrayList newArrayList()>();

        r0.<com.google.inject.spi.Elements$RecordingBinder: java.util.List elements> = $r3;

        r0.<com.google.inject.spi.Elements$RecordingBinder: java.lang.Object source> = null;

        $r5 = <com.google.inject.internal.util.$SourceProvider: com.google.inject.internal.util.$SourceProvider DEFAULT_INSTANCE>;

        $r4 = newarray (java.lang.Class)[6];

        $r4[0] = class "Lcom/google/inject/spi/Elements;";

        $r4[1] = class "Lcom/google/inject/spi/Elements$RecordingBinder;";

        $r4[2] = class "Lcom/google/inject/AbstractModule;";

        $r4[3] = class "Lcom/google/inject/internal/ConstantBindingBuilderImpl;";

        $r4[4] = class "Lcom/google/inject/internal/AbstractBindingBuilder;";

        $r4[5] = class "Lcom/google/inject/internal/BindingBuilder;";

        $r6 = virtualinvoke $r5.<com.google.inject.internal.util.$SourceProvider: com.google.inject.internal.util.$SourceProvider plusSkippedClasses(java.lang.Class[])>($r4);

        r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.internal.util.$SourceProvider sourceProvider> = $r6;

        r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.spi.Elements$RecordingBinder parent> = null;

        r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.internal.PrivateElementsImpl privateElements> = null;

        return;
    }

    private void <init>(com.google.inject.spi.Elements$RecordingBinder, java.lang.Object, com.google.inject.internal.util.$SourceProvider)
    {
        java.util.Set $r5;
        com.google.inject.internal.PrivateElementsImpl $r8;
        com.google.inject.internal.util.$SourceProvider r2;
        com.google.inject.Stage $r4;
        java.util.List $r6;
        com.google.inject.spi.Elements$RecordingBinder r0, r3, $r7;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r3 := @parameter0: com.google.inject.spi.Elements$RecordingBinder;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: com.google.inject.internal.util.$SourceProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if r2 != null goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $z2 = $z0 ^ $z1;

        staticinvoke <com.google.inject.internal.util.$Preconditions: void checkArgument(boolean)>($z2);

        $r4 = r3.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.Stage stage>;

        r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.Stage stage> = $r4;

        $r5 = r3.<com.google.inject.spi.Elements$RecordingBinder: java.util.Set modules>;

        r0.<com.google.inject.spi.Elements$RecordingBinder: java.util.Set modules> = $r5;

        $r6 = r3.<com.google.inject.spi.Elements$RecordingBinder: java.util.List elements>;

        r0.<com.google.inject.spi.Elements$RecordingBinder: java.util.List elements> = $r6;

        r0.<com.google.inject.spi.Elements$RecordingBinder: java.lang.Object source> = r1;

        r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.internal.util.$SourceProvider sourceProvider> = r2;

        $r7 = r3.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.spi.Elements$RecordingBinder parent>;

        r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.spi.Elements$RecordingBinder parent> = $r7;

        $r8 = r3.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.internal.PrivateElementsImpl privateElements>;

        r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.internal.PrivateElementsImpl privateElements> = $r8;

        return;
    }

    private void <init>(com.google.inject.spi.Elements$RecordingBinder, com.google.inject.internal.PrivateElementsImpl)
    {
        com.google.inject.internal.PrivateElementsImpl r4;
        com.google.inject.internal.util.$SourceProvider $r7;
        com.google.inject.Stage $r2;
        java.util.HashSet $r3;
        java.util.List $r5;
        com.google.inject.spi.Elements$RecordingBinder r0, r1;
        java.lang.Object $r6;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r1 := @parameter0: com.google.inject.spi.Elements$RecordingBinder;

        r4 := @parameter1: com.google.inject.internal.PrivateElementsImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.Stage stage>;

        r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.Stage stage> = $r2;

        $r3 = staticinvoke <com.google.inject.internal.util.$Sets: java.util.HashSet newHashSet()>();

        r0.<com.google.inject.spi.Elements$RecordingBinder: java.util.Set modules> = $r3;

        $r5 = virtualinvoke r4.<com.google.inject.internal.PrivateElementsImpl: java.util.List getElementsMutable()>();

        r0.<com.google.inject.spi.Elements$RecordingBinder: java.util.List elements> = $r5;

        $r6 = r1.<com.google.inject.spi.Elements$RecordingBinder: java.lang.Object source>;

        r0.<com.google.inject.spi.Elements$RecordingBinder: java.lang.Object source> = $r6;

        $r7 = r1.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.internal.util.$SourceProvider sourceProvider>;

        r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.internal.util.$SourceProvider sourceProvider> = $r7;

        r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.spi.Elements$RecordingBinder parent> = r1;

        r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.internal.PrivateElementsImpl privateElements> = r4;

        return;
    }

    public transient void bindInterceptor(com.google.inject.matcher.Matcher, com.google.inject.matcher.Matcher, org.aopalliance.intercept.MethodInterceptor[])
    {
        java.util.List $r2;
        com.google.inject.spi.Elements$RecordingBinder r0;
        java.lang.Object $r3;
        com.google.inject.matcher.Matcher r4, r5;
        org.aopalliance.intercept.MethodInterceptor[] r6;
        com.google.inject.spi.InterceptorBinding $r1;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r4 := @parameter0: com.google.inject.matcher.Matcher;

        r5 := @parameter1: com.google.inject.matcher.Matcher;

        r6 := @parameter2: org.aopalliance.intercept.MethodInterceptor[];

        $r2 = r0.<com.google.inject.spi.Elements$RecordingBinder: java.util.List elements>;

        $r1 = new com.google.inject.spi.InterceptorBinding;

        $r3 = virtualinvoke r0.<com.google.inject.spi.Elements$RecordingBinder: java.lang.Object getSource()>();

        specialinvoke $r1.<com.google.inject.spi.InterceptorBinding: void <init>(java.lang.Object,com.google.inject.matcher.Matcher,com.google.inject.matcher.Matcher,org.aopalliance.intercept.MethodInterceptor[])>($r3, r4, r5, r6);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void bindScope(java.lang.Class, com.google.inject.Scope)
    {
        java.util.List $r2;
        com.google.inject.spi.Elements$RecordingBinder r0;
        com.google.inject.spi.ScopeBinding $r1;
        java.lang.Object $r3;
        java.lang.Class r4;
        com.google.inject.Scope r5;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r4 := @parameter0: java.lang.Class;

        r5 := @parameter1: com.google.inject.Scope;

        $r2 = r0.<com.google.inject.spi.Elements$RecordingBinder: java.util.List elements>;

        $r1 = new com.google.inject.spi.ScopeBinding;

        $r3 = virtualinvoke r0.<com.google.inject.spi.Elements$RecordingBinder: java.lang.Object getSource()>();

        specialinvoke $r1.<com.google.inject.spi.ScopeBinding: void <init>(java.lang.Object,java.lang.Class,com.google.inject.Scope)>($r3, r4, r5);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void requestInjection(java.lang.Object)
    {
        com.google.inject.spi.Elements$RecordingBinder r0;
        java.lang.Object r1;
        java.lang.Class $r2;
        com.google.inject.TypeLiteral $r3;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = staticinvoke <com.google.inject.TypeLiteral: com.google.inject.TypeLiteral get(java.lang.Class)>($r2);

        virtualinvoke r0.<com.google.inject.spi.Elements$RecordingBinder: void requestInjection(com.google.inject.TypeLiteral,java.lang.Object)>($r3, r1);

        return;
    }

    public void requestInjection(com.google.inject.TypeLiteral, java.lang.Object)
    {
        java.util.List $r2;
        com.google.inject.spi.Elements$RecordingBinder r0;
        java.lang.Object $r3, r5;
        com.google.inject.spi.InjectionRequest $r1;
        com.google.inject.TypeLiteral r4;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r4 := @parameter0: com.google.inject.TypeLiteral;

        r5 := @parameter1: java.lang.Object;

        $r2 = r0.<com.google.inject.spi.Elements$RecordingBinder: java.util.List elements>;

        $r1 = new com.google.inject.spi.InjectionRequest;

        $r3 = virtualinvoke r0.<com.google.inject.spi.Elements$RecordingBinder: java.lang.Object getSource()>();

        specialinvoke $r1.<com.google.inject.spi.InjectionRequest: void <init>(java.lang.Object,com.google.inject.TypeLiteral,java.lang.Object)>($r3, r4, r5);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral)
    {
        java.util.List $r4;
        com.google.inject.spi.Elements$RecordingBinder r1;
        java.lang.Object $r2;
        com.google.inject.MembersInjector $r5;
        com.google.inject.TypeLiteral r3;
        com.google.inject.spi.MembersInjectorLookup $r0;

        r1 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r3 := @parameter0: com.google.inject.TypeLiteral;

        $r0 = new com.google.inject.spi.MembersInjectorLookup;

        $r2 = virtualinvoke r1.<com.google.inject.spi.Elements$RecordingBinder: java.lang.Object getSource()>();

        specialinvoke $r0.<com.google.inject.spi.MembersInjectorLookup: void <init>(java.lang.Object,com.google.inject.TypeLiteral)>($r2, r3);

        $r4 = r1.<com.google.inject.spi.Elements$RecordingBinder: java.util.List elements>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r0);

        $r5 = virtualinvoke $r0.<com.google.inject.spi.MembersInjectorLookup: com.google.inject.MembersInjector getMembersInjector()>();

        return $r5;
    }

    public com.google.inject.MembersInjector getMembersInjector(java.lang.Class)
    {
        com.google.inject.spi.Elements$RecordingBinder r0;
        java.lang.Class r1;
        com.google.inject.MembersInjector $r3;
        com.google.inject.TypeLiteral $r2;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <com.google.inject.TypeLiteral: com.google.inject.TypeLiteral get(java.lang.Class)>(r1);

        $r3 = virtualinvoke r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral)>($r2);

        return $r3;
    }

    public void bindListener(com.google.inject.matcher.Matcher, com.google.inject.spi.TypeListener)
    {
        java.util.List $r2;
        com.google.inject.spi.Elements$RecordingBinder r0;
        com.google.inject.spi.TypeListenerBinding $r1;
        java.lang.Object $r3;
        com.google.inject.matcher.Matcher r5;
        com.google.inject.spi.TypeListener r4;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r5 := @parameter0: com.google.inject.matcher.Matcher;

        r4 := @parameter1: com.google.inject.spi.TypeListener;

        $r2 = r0.<com.google.inject.spi.Elements$RecordingBinder: java.util.List elements>;

        $r1 = new com.google.inject.spi.TypeListenerBinding;

        $r3 = virtualinvoke r0.<com.google.inject.spi.Elements$RecordingBinder: java.lang.Object getSource()>();

        specialinvoke $r1.<com.google.inject.spi.TypeListenerBinding: void <init>(java.lang.Object,com.google.inject.spi.TypeListener,com.google.inject.matcher.Matcher)>($r3, r4, r5);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public transient void requestStaticInjection(java.lang.Class[])
    {
        com.google.inject.spi.StaticInjectionRequest $r3;
        java.lang.Class[] r0;
        java.util.List $r4;
        com.google.inject.spi.Elements$RecordingBinder r2;
        int i0, i1;
        java.lang.Class r1;
        java.lang.Object $r5;

        r2 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r0 := @parameter0: java.lang.Class[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r1 = r0[i1];

        $r4 = r2.<com.google.inject.spi.Elements$RecordingBinder: java.util.List elements>;

        $r3 = new com.google.inject.spi.StaticInjectionRequest;

        $r5 = virtualinvoke r2.<com.google.inject.spi.Elements$RecordingBinder: java.lang.Object getSource()>();

        specialinvoke $r3.<com.google.inject.spi.StaticInjectionRequest: void <init>(java.lang.Object,java.lang.Class)>($r5, r1);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void install(com.google.inject.Module)
    {
        com.google.inject.Module r1, $r7;
        com.google.inject.PrivateBinder r6;
        java.util.Collection $r4;
        java.util.Set $r2;
        java.lang.RuntimeException $r3;
        java.util.List $r5;
        com.google.inject.spi.Elements$RecordingBinder r0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r1 := @parameter0: com.google.inject.Module;

        $r2 = r0.<com.google.inject.spi.Elements$RecordingBinder: java.util.Set modules>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        if $z0 == 0 goto label6;

        r6 = r0;

        $z1 = r1 instanceof com.google.inject.PrivateModule;

        if $z1 == 0 goto label1;

        r6 = interfaceinvoke r0.<com.google.inject.Binder: com.google.inject.PrivateBinder newPrivateBinder()>();

     label1:
        interfaceinvoke r1.<com.google.inject.Module: void configure(com.google.inject.Binder)>(r6);

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        $r4 = staticinvoke <com.google.inject.internal.Errors: java.util.Collection getMessagesFromThrowable(java.lang.Throwable)>($r3);

        $z2 = interfaceinvoke $r4.<java.util.Collection: boolean isEmpty()>();

        if $z2 != 0 goto label4;

        $r5 = r0.<com.google.inject.spi.Elements$RecordingBinder: java.util.List elements>;

        interfaceinvoke $r5.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        goto label5;

     label4:
        virtualinvoke r0.<com.google.inject.spi.Elements$RecordingBinder: void addError(java.lang.Throwable)>($r3);

     label5:
        $r7 = staticinvoke <com.google.inject.internal.ProviderMethodsModule: com.google.inject.Module forModule(com.google.inject.Module)>(r1);

        interfaceinvoke r6.<com.google.inject.Binder: void install(com.google.inject.Module)>($r7);

     label6:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public com.google.inject.Stage currentStage()
    {
        com.google.inject.Stage $r1;
        com.google.inject.spi.Elements$RecordingBinder r0;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        $r1 = r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.Stage stage>;

        return $r1;
    }

    public transient void addError(java.lang.String, java.lang.Object[])
    {
        java.util.List $r2;
        java.lang.Object[] r5;
        com.google.inject.spi.Elements$RecordingBinder r0;
        com.google.inject.spi.Message $r1;
        java.lang.Object $r3;
        java.lang.String r4, $r6;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object[];

        $r2 = r0.<com.google.inject.spi.Elements$RecordingBinder: java.util.List elements>;

        $r1 = new com.google.inject.spi.Message;

        $r3 = virtualinvoke r0.<com.google.inject.spi.Elements$RecordingBinder: java.lang.Object getSource()>();

        $r6 = staticinvoke <com.google.inject.internal.Errors: java.lang.String format(java.lang.String,java.lang.Object[])>(r4, r5);

        specialinvoke $r1.<com.google.inject.spi.Message: void <init>(java.lang.Object,java.lang.String)>($r3, $r6);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void addError(java.lang.Throwable)
    {
        java.lang.Throwable r2;
        com.google.inject.internal.util.$ImmutableList $r10;
        java.util.List $r8;
        com.google.inject.spi.Elements$RecordingBinder r6;
        com.google.inject.spi.Message $r7;
        java.lang.StringBuilder $r0, $r1, $r4;
        java.lang.Object $r9;
        java.lang.String $r3, $r5;

        r6 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r2 := @parameter0: java.lang.Throwable;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An exception was caught and reported. Message: ");

        $r3 = virtualinvoke r2.<java.lang.Throwable: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = r6.<com.google.inject.spi.Elements$RecordingBinder: java.util.List elements>;

        $r7 = new com.google.inject.spi.Message;

        $r9 = virtualinvoke r6.<com.google.inject.spi.Elements$RecordingBinder: java.lang.Object getSource()>();

        $r10 = staticinvoke <com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList of(java.lang.Object)>($r9);

        specialinvoke $r7.<com.google.inject.spi.Message: void <init>(java.util.List,java.lang.String,java.lang.Throwable)>($r10, $r5, r2);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r7);

        return;
    }

    public void addError(com.google.inject.spi.Message)
    {
        java.util.List $r2;
        com.google.inject.spi.Elements$RecordingBinder r0;
        com.google.inject.spi.Message r1;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r1 := @parameter0: com.google.inject.spi.Message;

        $r2 = r0.<com.google.inject.spi.Elements$RecordingBinder: java.util.List elements>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public com.google.inject.binder.AnnotatedBindingBuilder bind(com.google.inject.Key)
    {
        com.google.inject.internal.BindingBuilder $r0;
        java.util.List $r2;
        com.google.inject.spi.Elements$RecordingBinder r1;
        com.google.inject.Key r4;
        java.lang.Object $r3;

        r1 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r4 := @parameter0: com.google.inject.Key;

        $r0 = new com.google.inject.internal.BindingBuilder;

        $r2 = r1.<com.google.inject.spi.Elements$RecordingBinder: java.util.List elements>;

        $r3 = virtualinvoke r1.<com.google.inject.spi.Elements$RecordingBinder: java.lang.Object getSource()>();

        specialinvoke $r0.<com.google.inject.internal.BindingBuilder: void <init>(com.google.inject.Binder,java.util.List,java.lang.Object,com.google.inject.Key)>(r1, $r2, $r3, r4);

        return $r0;
    }

    public com.google.inject.binder.AnnotatedBindingBuilder bind(com.google.inject.TypeLiteral)
    {
        com.google.inject.binder.AnnotatedBindingBuilder $r3;
        com.google.inject.spi.Elements$RecordingBinder r0;
        com.google.inject.Key $r2;
        com.google.inject.TypeLiteral r1;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r1 := @parameter0: com.google.inject.TypeLiteral;

        $r2 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(com.google.inject.TypeLiteral)>(r1);

        $r3 = virtualinvoke r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.binder.AnnotatedBindingBuilder bind(com.google.inject.Key)>($r2);

        return $r3;
    }

    public com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)
    {
        com.google.inject.binder.AnnotatedBindingBuilder $r3;
        com.google.inject.spi.Elements$RecordingBinder r0;
        com.google.inject.Key $r2;
        java.lang.Class r1;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(java.lang.Class)>(r1);

        $r3 = virtualinvoke r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.binder.AnnotatedBindingBuilder bind(com.google.inject.Key)>($r2);

        return $r3;
    }

    public com.google.inject.binder.AnnotatedConstantBindingBuilder bindConstant()
    {
        java.util.List $r2;
        com.google.inject.spi.Elements$RecordingBinder r1;
        java.lang.Object $r3;
        com.google.inject.internal.ConstantBindingBuilderImpl $r0;

        r1 := @this: com.google.inject.spi.Elements$RecordingBinder;

        $r0 = new com.google.inject.internal.ConstantBindingBuilderImpl;

        $r2 = r1.<com.google.inject.spi.Elements$RecordingBinder: java.util.List elements>;

        $r3 = virtualinvoke r1.<com.google.inject.spi.Elements$RecordingBinder: java.lang.Object getSource()>();

        specialinvoke $r0.<com.google.inject.internal.ConstantBindingBuilderImpl: void <init>(com.google.inject.Binder,java.util.List,java.lang.Object)>(r1, $r2, $r3);

        return $r0;
    }

    public com.google.inject.Provider getProvider(com.google.inject.Key)
    {
        java.util.List $r4;
        com.google.inject.Provider $r5;
        com.google.inject.spi.Elements$RecordingBinder r1;
        com.google.inject.Key r3;
        com.google.inject.spi.ProviderLookup $r0;
        java.lang.Object $r2;

        r1 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r3 := @parameter0: com.google.inject.Key;

        $r0 = new com.google.inject.spi.ProviderLookup;

        $r2 = virtualinvoke r1.<com.google.inject.spi.Elements$RecordingBinder: java.lang.Object getSource()>();

        specialinvoke $r0.<com.google.inject.spi.ProviderLookup: void <init>(java.lang.Object,com.google.inject.Key)>($r2, r3);

        $r4 = r1.<com.google.inject.spi.Elements$RecordingBinder: java.util.List elements>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r0);

        $r5 = virtualinvoke $r0.<com.google.inject.spi.ProviderLookup: com.google.inject.Provider getProvider()>();

        return $r5;
    }

    public com.google.inject.Provider getProvider(java.lang.Class)
    {
        com.google.inject.Provider $r3;
        com.google.inject.spi.Elements$RecordingBinder r0;
        com.google.inject.Key $r2;
        java.lang.Class r1;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(java.lang.Class)>(r1);

        $r3 = virtualinvoke r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.Provider getProvider(com.google.inject.Key)>($r2);

        return $r3;
    }

    public void convertToTypes(com.google.inject.matcher.Matcher, com.google.inject.spi.TypeConverter)
    {
        com.google.inject.spi.TypeConverter r5;
        java.util.List $r2;
        com.google.inject.spi.Elements$RecordingBinder r0;
        com.google.inject.spi.TypeConverterBinding $r1;
        java.lang.Object $r3;
        com.google.inject.matcher.Matcher r4;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r4 := @parameter0: com.google.inject.matcher.Matcher;

        r5 := @parameter1: com.google.inject.spi.TypeConverter;

        $r2 = r0.<com.google.inject.spi.Elements$RecordingBinder: java.util.List elements>;

        $r1 = new com.google.inject.spi.TypeConverterBinding;

        $r3 = virtualinvoke r0.<com.google.inject.spi.Elements$RecordingBinder: java.lang.Object getSource()>();

        specialinvoke $r1.<com.google.inject.spi.TypeConverterBinding: void <init>(java.lang.Object,com.google.inject.matcher.Matcher,com.google.inject.spi.TypeConverter)>($r3, r4, r5);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public com.google.inject.spi.Elements$RecordingBinder withSource(java.lang.Object)
    {
        java.lang.Object r2;
        com.google.inject.spi.Elements$RecordingBinder $r0, r1;

        r1 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r2 := @parameter0: java.lang.Object;

        $r0 = new com.google.inject.spi.Elements$RecordingBinder;

        specialinvoke $r0.<com.google.inject.spi.Elements$RecordingBinder: void <init>(com.google.inject.spi.Elements$RecordingBinder,java.lang.Object,com.google.inject.internal.util.$SourceProvider)>(r1, r2, null);

        return $r0;
    }

    public transient com.google.inject.spi.Elements$RecordingBinder skipSources(java.lang.Class[])
    {
        com.google.inject.spi.Elements$RecordingBinder r0, $r5;
        java.lang.Class[] r2;
        java.lang.Object $r1;
        com.google.inject.internal.util.$SourceProvider $r3, $r4;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r2 := @parameter0: java.lang.Class[];

        $r1 = r0.<com.google.inject.spi.Elements$RecordingBinder: java.lang.Object source>;

        if $r1 == null goto label1;

        return r0;

     label1:
        $r3 = r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.internal.util.$SourceProvider sourceProvider>;

        $r4 = virtualinvoke $r3.<com.google.inject.internal.util.$SourceProvider: com.google.inject.internal.util.$SourceProvider plusSkippedClasses(java.lang.Class[])>(r2);

        $r5 = new com.google.inject.spi.Elements$RecordingBinder;

        specialinvoke $r5.<com.google.inject.spi.Elements$RecordingBinder: void <init>(com.google.inject.spi.Elements$RecordingBinder,java.lang.Object,com.google.inject.internal.util.$SourceProvider)>(r0, null, $r4);

        return $r5;
    }

    public com.google.inject.PrivateBinder newPrivateBinder()
    {
        java.util.List $r3;
        com.google.inject.spi.Elements$RecordingBinder r1, $r4;
        java.lang.Object $r2;
        com.google.inject.internal.PrivateElementsImpl $r0;

        r1 := @this: com.google.inject.spi.Elements$RecordingBinder;

        $r0 = new com.google.inject.internal.PrivateElementsImpl;

        $r2 = virtualinvoke r1.<com.google.inject.spi.Elements$RecordingBinder: java.lang.Object getSource()>();

        specialinvoke $r0.<com.google.inject.internal.PrivateElementsImpl: void <init>(java.lang.Object)>($r2);

        $r3 = r1.<com.google.inject.spi.Elements$RecordingBinder: java.util.List elements>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r0);

        $r4 = new com.google.inject.spi.Elements$RecordingBinder;

        specialinvoke $r4.<com.google.inject.spi.Elements$RecordingBinder: void <init>(com.google.inject.spi.Elements$RecordingBinder,com.google.inject.internal.PrivateElementsImpl)>(r1, $r0);

        return $r4;
    }

    public void disableCircularProxies()
    {
        com.google.inject.spi.DisableCircularProxiesOption $r1;
        java.util.List $r2;
        com.google.inject.spi.Elements$RecordingBinder r0;
        java.lang.Object $r3;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        $r2 = r0.<com.google.inject.spi.Elements$RecordingBinder: java.util.List elements>;

        $r1 = new com.google.inject.spi.DisableCircularProxiesOption;

        $r3 = virtualinvoke r0.<com.google.inject.spi.Elements$RecordingBinder: java.lang.Object getSource()>();

        specialinvoke $r1.<com.google.inject.spi.DisableCircularProxiesOption: void <init>(java.lang.Object)>($r3);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void requireExplicitBindings()
    {
        java.util.List $r2;
        com.google.inject.spi.Elements$RecordingBinder r0;
        com.google.inject.spi.RequireExplicitBindingsOption $r1;
        java.lang.Object $r3;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        $r2 = r0.<com.google.inject.spi.Elements$RecordingBinder: java.util.List elements>;

        $r1 = new com.google.inject.spi.RequireExplicitBindingsOption;

        $r3 = virtualinvoke r0.<com.google.inject.spi.Elements$RecordingBinder: java.lang.Object getSource()>();

        specialinvoke $r1.<com.google.inject.spi.RequireExplicitBindingsOption: void <init>(java.lang.Object)>($r3);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void expose(com.google.inject.Key)
    {
        com.google.inject.Key r1;
        com.google.inject.spi.Elements$RecordingBinder r0;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r1 := @parameter0: com.google.inject.Key;

        specialinvoke r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.binder.AnnotatedElementBuilder exposeInternal(com.google.inject.Key)>(r1);

        return;
    }

    public com.google.inject.binder.AnnotatedElementBuilder expose(java.lang.Class)
    {
        com.google.inject.spi.Elements$RecordingBinder r0;
        com.google.inject.Key $r2;
        java.lang.Class r1;
        com.google.inject.binder.AnnotatedElementBuilder $r3;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(java.lang.Class)>(r1);

        $r3 = specialinvoke r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.binder.AnnotatedElementBuilder exposeInternal(com.google.inject.Key)>($r2);

        return $r3;
    }

    public com.google.inject.binder.AnnotatedElementBuilder expose(com.google.inject.TypeLiteral)
    {
        com.google.inject.spi.Elements$RecordingBinder r0;
        com.google.inject.Key $r2;
        com.google.inject.TypeLiteral r1;
        com.google.inject.binder.AnnotatedElementBuilder $r3;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r1 := @parameter0: com.google.inject.TypeLiteral;

        $r2 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(com.google.inject.TypeLiteral)>(r1);

        $r3 = specialinvoke r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.binder.AnnotatedElementBuilder exposeInternal(com.google.inject.Key)>($r2);

        return $r3;
    }

    private com.google.inject.binder.AnnotatedElementBuilder exposeInternal(com.google.inject.Key)
    {
        java.lang.Object[] $r6;
        com.google.inject.Key r4;
        com.google.inject.internal.PrivateElementsImpl $r1, $r5;
        com.google.inject.internal.ExposureBuilder $r2;
        com.google.inject.spi.Elements$RecordingBinder r0;
        java.lang.Object $r3;
        com.google.inject.spi.Elements$RecordingBinder$1 $r7;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r4 := @parameter0: com.google.inject.Key;

        $r1 = r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.internal.PrivateElementsImpl privateElements>;

        if $r1 != null goto label1;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r4;

        virtualinvoke r0.<com.google.inject.spi.Elements$RecordingBinder: void addError(java.lang.String,java.lang.Object[])>("Cannot expose %s on a standard binder. Exposed bindings are only applicable to private binders.", $r6);

        $r7 = new com.google.inject.spi.Elements$RecordingBinder$1;

        specialinvoke $r7.<com.google.inject.spi.Elements$RecordingBinder$1: void <init>(com.google.inject.spi.Elements$RecordingBinder)>(r0);

        return $r7;

     label1:
        $r2 = new com.google.inject.internal.ExposureBuilder;

        $r3 = virtualinvoke r0.<com.google.inject.spi.Elements$RecordingBinder: java.lang.Object getSource()>();

        specialinvoke $r2.<com.google.inject.internal.ExposureBuilder: void <init>(com.google.inject.Binder,java.lang.Object,com.google.inject.Key)>(r0, $r3, r4);

        $r5 = r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.internal.PrivateElementsImpl privateElements>;

        virtualinvoke $r5.<com.google.inject.internal.PrivateElementsImpl: void addExposureBuilder(com.google.inject.internal.ExposureBuilder)>($r2);

        return $r2;
    }

    protected java.lang.Object getSource()
    {
        com.google.inject.spi.Elements$RecordingBinder r0;
        java.lang.Object $r3;
        com.google.inject.internal.util.$SourceProvider $r1, $r2;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        $r1 = r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.internal.util.$SourceProvider sourceProvider>;

        if $r1 == null goto label1;

        $r2 = r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.internal.util.$SourceProvider sourceProvider>;

        $r3 = virtualinvoke $r2.<com.google.inject.internal.util.$SourceProvider: java.lang.StackTraceElement get()>();

        goto label2;

     label1:
        $r3 = r0.<com.google.inject.spi.Elements$RecordingBinder: java.lang.Object source>;

     label2:
        return $r3;
    }

    public java.lang.String toString()
    {
        com.google.inject.spi.Elements$RecordingBinder r0;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        return "Binder";
    }

    public volatile com.google.inject.Binder skipSources(java.lang.Class[])
    {
        java.lang.Class[] r1;
        com.google.inject.spi.Elements$RecordingBinder r0, $r2;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r1 := @parameter0: java.lang.Class[];

        $r2 = virtualinvoke r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.spi.Elements$RecordingBinder skipSources(java.lang.Class[])>(r1);

        return $r2;
    }

    public volatile com.google.inject.Binder withSource(java.lang.Object)
    {
        java.lang.Object r1;
        com.google.inject.spi.Elements$RecordingBinder r0, $r2;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.spi.Elements$RecordingBinder withSource(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile com.google.inject.binder.LinkedBindingBuilder bind(com.google.inject.Key)
    {
        com.google.inject.Key r1;
        com.google.inject.binder.AnnotatedBindingBuilder $r2;
        com.google.inject.spi.Elements$RecordingBinder r0;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r1 := @parameter0: com.google.inject.Key;

        $r2 = virtualinvoke r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.binder.AnnotatedBindingBuilder bind(com.google.inject.Key)>(r1);

        return $r2;
    }

    public volatile com.google.inject.PrivateBinder skipSources(java.lang.Class[])
    {
        java.lang.Class[] r1;
        com.google.inject.spi.Elements$RecordingBinder r0, $r2;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r1 := @parameter0: java.lang.Class[];

        $r2 = virtualinvoke r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.spi.Elements$RecordingBinder skipSources(java.lang.Class[])>(r1);

        return $r2;
    }

    public volatile com.google.inject.PrivateBinder withSource(java.lang.Object)
    {
        java.lang.Object r1;
        com.google.inject.spi.Elements$RecordingBinder r0, $r2;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.spi.Elements$RecordingBinder withSource(java.lang.Object)>(r1);

        return $r2;
    }

    void <init>(com.google.inject.Stage, com.google.inject.spi.Elements$1)
    {
        com.google.inject.Stage r1;
        com.google.inject.spi.Elements$1 r2;
        com.google.inject.spi.Elements$RecordingBinder r0;

        r0 := @this: com.google.inject.spi.Elements$RecordingBinder;

        r1 := @parameter0: com.google.inject.Stage;

        r2 := @parameter1: com.google.inject.spi.Elements$1;

        specialinvoke r0.<com.google.inject.spi.Elements$RecordingBinder: void <init>(com.google.inject.Stage)>(r1);

        return;
    }

    static java.util.List access$100(com.google.inject.spi.Elements$RecordingBinder)
    {
        java.util.List $r1;
        com.google.inject.spi.Elements$RecordingBinder r0;

        r0 := @parameter0: com.google.inject.spi.Elements$RecordingBinder;

        $r1 = r0.<com.google.inject.spi.Elements$RecordingBinder: java.util.List elements>;

        return $r1;
    }
}
