public class org.apache.poi.xssf.util.NumericRanges extends java.lang.Object
{
    public static int NO_OVERLAPS;
    public static int OVERLAPS_1_MINOR;
    public static int OVERLAPS_2_MINOR;
    public static int OVERLAPS_1_WRAPS;
    public static int OVERLAPS_2_WRAPS;

    public void <init>()
    {
        org.apache.poi.xssf.util.NumericRanges r0;

        r0 := @this: org.apache.poi.xssf.util.NumericRanges;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static long[] getOverlappingRange(long[], long[])
    {
        long $l5, $l6, $l7, $l8;
        long[] r0, r1, $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @parameter0: long[];

        r1 := @parameter1: long[];

        $i0 = staticinvoke <org.apache.poi.xssf.util.NumericRanges: int getOverlappingType(long[],long[])>(r0, r1);

        $i1 = <org.apache.poi.xssf.util.NumericRanges: int OVERLAPS_1_MINOR>;

        if $i0 != $i1 goto label1;

        $r4 = newarray (long)[2];

        $l7 = r1[0];

        $r4[0] = $l7;

        $l8 = r0[1];

        $r4[1] = $l8;

        return $r4;

     label1:
        $i2 = <org.apache.poi.xssf.util.NumericRanges: int OVERLAPS_2_MINOR>;

        if $i0 != $i2 goto label2;

        $r3 = newarray (long)[2];

        $l5 = r0[0];

        $r3[0] = $l5;

        $l6 = r1[1];

        $r3[1] = $l6;

        return $r3;

     label2:
        $i3 = <org.apache.poi.xssf.util.NumericRanges: int OVERLAPS_2_WRAPS>;

        if $i0 != $i3 goto label3;

        return r0;

     label3:
        $i4 = <org.apache.poi.xssf.util.NumericRanges: int OVERLAPS_1_WRAPS>;

        if $i0 != $i4 goto label4;

        return r1;

     label4:
        $r2 = newarray (long)[2];

        $r2[0] = -1L;

        $r2[1] = -1L;

        return $r2;
    }

    public static int getOverlappingType(long[], long[])
    {
        long l0, l1, l2, l3;
        long[] r0, r1;
        byte $b4, $b5, $b6, $b7, $b8, $b10, $b11, $b13, $b15, $b17;
        int $i9, $i12, $i14, $i16, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28;

        r0 := @parameter0: long[];

        r1 := @parameter1: long[];

        l0 = r0[0];

        l1 = r0[1];

        l2 = r1[0];

        l3 = r1[1];

        $b4 = l0 cmp l2;

        $i19 = (int) $b4;

        if $i19 < 0 goto label1;

        $b15 = l1 cmp l3;

        $i20 = (int) $b15;

        if $i20 > 0 goto label1;

        $i16 = <org.apache.poi.xssf.util.NumericRanges: int OVERLAPS_2_WRAPS>;

        return $i16;

     label1:
        $b5 = l2 cmp l0;

        $i21 = (int) $b5;

        if $i21 < 0 goto label2;

        $b13 = l3 cmp l1;

        $i22 = (int) $b13;

        if $i22 > 0 goto label2;

        $i14 = <org.apache.poi.xssf.util.NumericRanges: int OVERLAPS_1_WRAPS>;

        return $i14;

     label2:
        $b6 = l2 cmp l0;

        $i23 = (int) $b6;

        if $i23 < 0 goto label3;

        $b10 = l2 cmp l1;

        $i24 = (int) $b10;

        if $i24 > 0 goto label3;

        $b11 = l3 cmp l1;

        $i25 = (int) $b11;

        if $i25 < 0 goto label3;

        $i12 = <org.apache.poi.xssf.util.NumericRanges: int OVERLAPS_1_MINOR>;

        return $i12;

     label3:
        $b17 = l0 cmp l2;

        $i26 = (int) $b17;

        if $i26 < 0 goto label4;

        $b7 = l0 cmp l3;

        $i27 = (int) $b7;

        if $i27 > 0 goto label4;

        $b8 = l1 cmp l3;

        $i28 = (int) $b8;

        if $i28 < 0 goto label4;

        $i9 = <org.apache.poi.xssf.util.NumericRanges: int OVERLAPS_2_MINOR>;

        return $i9;

     label4:
        $i18 = <org.apache.poi.xssf.util.NumericRanges: int NO_OVERLAPS>;

        return $i18;
    }

    static void <clinit>()
    {
        <org.apache.poi.xssf.util.NumericRanges: int NO_OVERLAPS> = -1;

        <org.apache.poi.xssf.util.NumericRanges: int OVERLAPS_1_MINOR> = 0;

        <org.apache.poi.xssf.util.NumericRanges: int OVERLAPS_2_MINOR> = 1;

        <org.apache.poi.xssf.util.NumericRanges: int OVERLAPS_1_WRAPS> = 2;

        <org.apache.poi.xssf.util.NumericRanges: int OVERLAPS_2_WRAPS> = 3;

        return;
    }
}
