abstract class com.sun.xml.bind.v2.model.impl.LeafInfoImpl extends java.lang.Object implements com.sun.xml.bind.v2.model.core.LeafInfo, com.sun.xml.bind.v2.runtime.Location
{
    private final java.lang.Object type;
    private final javax.xml.namespace.QName typeName;
    static final boolean $assertionsDisabled;

    protected void <init>(java.lang.Object, javax.xml.namespace.QName)
    {
        com.sun.xml.bind.v2.model.impl.LeafInfoImpl r0;
        java.lang.Object r1;
        javax.xml.namespace.QName r2;
        java.lang.AssertionError $r3;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.LeafInfoImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: javax.xml.namespace.QName;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = <com.sun.xml.bind.v2.model.impl.LeafInfoImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != null goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        r0.<com.sun.xml.bind.v2.model.impl.LeafInfoImpl: java.lang.Object type> = r1;

        r0.<com.sun.xml.bind.v2.model.impl.LeafInfoImpl: javax.xml.namespace.QName typeName> = r2;

        return;
    }

    public java.lang.Object getType()
    {
        java.lang.Object $r1;
        com.sun.xml.bind.v2.model.impl.LeafInfoImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.LeafInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.LeafInfoImpl: java.lang.Object type>;

        return $r1;
    }

    public final boolean canBeReferencedByIDREF()
    {
        com.sun.xml.bind.v2.model.impl.LeafInfoImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.LeafInfoImpl;

        return 0;
    }

    public javax.xml.namespace.QName getTypeName()
    {
        javax.xml.namespace.QName $r1;
        com.sun.xml.bind.v2.model.impl.LeafInfoImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.LeafInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.LeafInfoImpl: javax.xml.namespace.QName typeName>;

        return $r1;
    }

    public com.sun.xml.bind.v2.model.'annotation'.Locatable getUpstream()
    {
        com.sun.xml.bind.v2.model.impl.LeafInfoImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.LeafInfoImpl;

        return null;
    }

    public com.sun.xml.bind.v2.runtime.Location getLocation()
    {
        com.sun.xml.bind.v2.model.impl.LeafInfoImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.LeafInfoImpl;

        return r0;
    }

    public boolean isSimpleType()
    {
        com.sun.xml.bind.v2.model.impl.LeafInfoImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.LeafInfoImpl;

        return 1;
    }

    public java.lang.String toString()
    {
        java.lang.Object $r1;
        java.lang.String $r2;
        com.sun.xml.bind.v2.model.impl.LeafInfoImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.LeafInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.LeafInfoImpl: java.lang.Object type>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/sun/xml/bind/v2/model/impl/LeafInfoImpl;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sun.xml.bind.v2.model.impl.LeafInfoImpl: boolean $assertionsDisabled> = $z1;

        return;
    }
}
