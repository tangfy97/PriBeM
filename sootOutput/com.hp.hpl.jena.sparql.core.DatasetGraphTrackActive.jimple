public abstract class com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive extends java.lang.Object implements com.hp.hpl.jena.sparql.core.DatasetGraph, com.hp.hpl.jena.sparql.core.Transactional
{

    protected abstract com.hp.hpl.jena.sparql.core.DatasetGraph get();

    protected void <init>()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected abstract void checkActive();

    protected abstract void checkNotActive();

    public final void begin(com.hp.hpl.jena.query.ReadWrite)
    {
        com.hp.hpl.jena.query.ReadWrite r1;
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        r1 := @parameter0: com.hp.hpl.jena.query.ReadWrite;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: void checkNotActive()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: void _begin(com.hp.hpl.jena.query.ReadWrite)>(r1);

        return;
    }

    public void commit()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: void checkActive()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: void _commit()>();

        return;
    }

    public void abort()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: void checkActive()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: void _abort()>();

        return;
    }

    public void end()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: void _end()>();

        return;
    }

    public abstract boolean isInTransaction();

    protected abstract void _begin(com.hp.hpl.jena.query.ReadWrite);

    protected abstract void _commit();

    protected abstract void _abort();

    protected abstract void _end();

    public void close()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: boolean isInTransaction()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: void abort()>();

     label1:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: void _close()>();

        return;
    }

    protected abstract void _close();

    public boolean containsGraph(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;
        com.hp.hpl.jena.graph.Node r2;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: com.hp.hpl.jena.sparql.core.DatasetGraph get()>();

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: boolean containsGraph(com.hp.hpl.jena.graph.Node)>(r2);

        return $z0;
    }

    public com.hp.hpl.jena.graph.Graph getDefaultGraph()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;
        com.hp.hpl.jena.graph.Graph $r2;
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: com.hp.hpl.jena.sparql.core.DatasetGraph get()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: com.hp.hpl.jena.graph.Graph getDefaultGraph()>();

        return $r2;
    }

    public com.hp.hpl.jena.graph.Graph getGraph(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;
        com.hp.hpl.jena.graph.Node r2;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;
        com.hp.hpl.jena.graph.Graph $r3;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: com.hp.hpl.jena.sparql.core.DatasetGraph get()>();

        $r3 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: com.hp.hpl.jena.graph.Graph getGraph(com.hp.hpl.jena.graph.Node)>(r2);

        return $r3;
    }

    public void addGraph(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Graph)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;
        com.hp.hpl.jena.graph.Node r2;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;
        com.hp.hpl.jena.graph.Graph r3;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.graph.Graph;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: com.hp.hpl.jena.sparql.core.DatasetGraph get()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: void addGraph(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Graph)>(r2, r3);

        return;
    }

    public void removeGraph(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r2;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: com.hp.hpl.jena.sparql.core.DatasetGraph get()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: void removeGraph(com.hp.hpl.jena.graph.Node)>(r2);

        return;
    }

    public void setDefaultGraph(com.hp.hpl.jena.graph.Graph)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;
        com.hp.hpl.jena.graph.Graph r2;
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        r2 := @parameter0: com.hp.hpl.jena.graph.Graph;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: com.hp.hpl.jena.sparql.core.DatasetGraph get()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: void setDefaultGraph(com.hp.hpl.jena.graph.Graph)>(r2);

        return;
    }

    public com.hp.hpl.jena.shared.Lock getLock()
    {
        com.hp.hpl.jena.shared.Lock $r2;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: com.hp.hpl.jena.sparql.core.DatasetGraph get()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: com.hp.hpl.jena.shared.Lock getLock()>();

        return $r2;
    }

    public java.util.Iterator listGraphNodes()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;
        java.util.Iterator $r2;
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: com.hp.hpl.jena.sparql.core.DatasetGraph get()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: java.util.Iterator listGraphNodes()>();

        return $r2;
    }

    public void add(com.hp.hpl.jena.sparql.core.Quad)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;
        com.hp.hpl.jena.sparql.core.Quad r2;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        r2 := @parameter0: com.hp.hpl.jena.sparql.core.Quad;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: com.hp.hpl.jena.sparql.core.DatasetGraph get()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: void add(com.hp.hpl.jena.sparql.core.Quad)>(r2);

        return;
    }

    public void delete(com.hp.hpl.jena.sparql.core.Quad)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;
        com.hp.hpl.jena.sparql.core.Quad r2;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        r2 := @parameter0: com.hp.hpl.jena.sparql.core.Quad;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: com.hp.hpl.jena.sparql.core.DatasetGraph get()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: void delete(com.hp.hpl.jena.sparql.core.Quad)>(r2);

        return;
    }

    public void add(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;
        com.hp.hpl.jena.graph.Node r2, r3, r4, r5;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.graph.Node;

        r4 := @parameter2: com.hp.hpl.jena.graph.Node;

        r5 := @parameter3: com.hp.hpl.jena.graph.Node;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: com.hp.hpl.jena.sparql.core.DatasetGraph get()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: void add(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r2, r3, r4, r5);

        return;
    }

    public void delete(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;
        com.hp.hpl.jena.graph.Node r2, r3, r4, r5;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.graph.Node;

        r4 := @parameter2: com.hp.hpl.jena.graph.Node;

        r5 := @parameter3: com.hp.hpl.jena.graph.Node;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: com.hp.hpl.jena.sparql.core.DatasetGraph get()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: void delete(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r2, r3, r4, r5);

        return;
    }

    public void deleteAny(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;
        com.hp.hpl.jena.graph.Node r2, r3, r4, r5;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.graph.Node;

        r4 := @parameter2: com.hp.hpl.jena.graph.Node;

        r5 := @parameter3: com.hp.hpl.jena.graph.Node;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: com.hp.hpl.jena.sparql.core.DatasetGraph get()>();

        interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: void deleteAny(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r2, r3, r4, r5);

        return;
    }

    public boolean isEmpty()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: com.hp.hpl.jena.sparql.core.DatasetGraph get()>();

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Iterator find()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;
        java.util.Iterator $r2;
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: com.hp.hpl.jena.sparql.core.DatasetGraph get()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: java.util.Iterator find()>();

        return $r2;
    }

    public java.util.Iterator find(com.hp.hpl.jena.sparql.core.Quad)
    {
        java.util.Iterator $r3;
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;
        com.hp.hpl.jena.sparql.core.Quad r2;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        r2 := @parameter0: com.hp.hpl.jena.sparql.core.Quad;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: com.hp.hpl.jena.sparql.core.DatasetGraph get()>();

        $r3 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: java.util.Iterator find(com.hp.hpl.jena.sparql.core.Quad)>(r2);

        return $r3;
    }

    public java.util.Iterator find(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        java.util.Iterator $r6;
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;
        com.hp.hpl.jena.graph.Node r2, r3, r4, r5;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.graph.Node;

        r4 := @parameter2: com.hp.hpl.jena.graph.Node;

        r5 := @parameter3: com.hp.hpl.jena.graph.Node;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: com.hp.hpl.jena.sparql.core.DatasetGraph get()>();

        $r6 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: java.util.Iterator find(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r2, r3, r4, r5);

        return $r6;
    }

    public java.util.Iterator findNG(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        java.util.Iterator $r6;
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;
        com.hp.hpl.jena.graph.Node r2, r3, r4, r5;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.graph.Node;

        r4 := @parameter2: com.hp.hpl.jena.graph.Node;

        r5 := @parameter3: com.hp.hpl.jena.graph.Node;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: com.hp.hpl.jena.sparql.core.DatasetGraph get()>();

        $r6 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: java.util.Iterator findNG(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r2, r3, r4, r5);

        return $r6;
    }

    public boolean contains(com.hp.hpl.jena.sparql.core.Quad)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;
        com.hp.hpl.jena.sparql.core.Quad r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        r2 := @parameter0: com.hp.hpl.jena.sparql.core.Quad;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: com.hp.hpl.jena.sparql.core.DatasetGraph get()>();

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: boolean contains(com.hp.hpl.jena.sparql.core.Quad)>(r2);

        return $z0;
    }

    public boolean contains(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;
        com.hp.hpl.jena.graph.Node r2, r3, r4, r5;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.graph.Node;

        r4 := @parameter2: com.hp.hpl.jena.graph.Node;

        r5 := @parameter3: com.hp.hpl.jena.graph.Node;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: com.hp.hpl.jena.sparql.core.DatasetGraph get()>();

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: boolean contains(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r2, r3, r4, r5);

        return $z0;
    }

    public long size()
    {
        long $l0;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;
        com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive r0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.core.DatasetGraphTrackActive: com.hp.hpl.jena.sparql.core.DatasetGraph get()>();

        $l0 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: long size()>();

        return $l0;
    }
}
