class org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge$1 extends java.io.FileInputStream
{
    final org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge this$0;

    void <init>(org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge, java.io.File)
    {
        org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge$1 r0;
        org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge r1;
        java.io.File r2;

        r0 := @this: org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge$1;

        r1 := @parameter0: org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge;

        r2 := @parameter1: java.io.File;

        r0.<org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge$1: org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge this$0> = r1;

        specialinvoke r0.<java.io.FileInputStream: void <init>(java.io.File)>(r2);

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge$1 r0;
        org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge $r1;
        java.io.File $r2;

        r0 := @this: org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge$1;

        specialinvoke r0.<java.io.FileInputStream: void close()>();

        $r1 = r0.<org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge$1: org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge this$0>;

        $r2 = staticinvoke <org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge: java.io.File access$000(org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge)>($r1);

        virtualinvoke $r2.<java.io.File: boolean delete()>();

        return;
    }
}
