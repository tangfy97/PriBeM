public abstract class com.jidesoft.plaf.basic.LazyMutableTreeNode extends javax.swing.tree.DefaultMutableTreeNode
{
    protected boolean _loaded;

    public void <init>()
    {
        com.jidesoft.plaf.basic.LazyMutableTreeNode r0;

        r0 := @this: com.jidesoft.plaf.basic.LazyMutableTreeNode;

        specialinvoke r0.<javax.swing.tree.DefaultMutableTreeNode: void <init>()>();

        r0.<com.jidesoft.plaf.basic.LazyMutableTreeNode: boolean _loaded> = 0;

        return;
    }

    public void <init>(java.lang.Object)
    {
        java.lang.Object r1;
        com.jidesoft.plaf.basic.LazyMutableTreeNode r0;

        r0 := @this: com.jidesoft.plaf.basic.LazyMutableTreeNode;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<javax.swing.tree.DefaultMutableTreeNode: void <init>(java.lang.Object)>(r1);

        r0.<com.jidesoft.plaf.basic.LazyMutableTreeNode: boolean _loaded> = 0;

        return;
    }

    public void <init>(java.lang.Object, boolean)
    {
        java.lang.Object r1;
        com.jidesoft.plaf.basic.LazyMutableTreeNode r0;
        boolean z0;

        r0 := @this: com.jidesoft.plaf.basic.LazyMutableTreeNode;

        r1 := @parameter0: java.lang.Object;

        z0 := @parameter1: boolean;

        specialinvoke r0.<javax.swing.tree.DefaultMutableTreeNode: void <init>(java.lang.Object,boolean)>(r1, z0);

        r0.<com.jidesoft.plaf.basic.LazyMutableTreeNode: boolean _loaded> = 0;

        return;
    }

    public int getChildCount()
    {
        java.lang.Throwable $r1;
        com.jidesoft.plaf.basic.LazyMutableTreeNode r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.LazyMutableTreeNode;

        entermonitor r0;

     label1:
        $z0 = r0.<com.jidesoft.plaf.basic.LazyMutableTreeNode: boolean _loaded>;

        if $z0 != 0 goto label2;

        r0.<com.jidesoft.plaf.basic.LazyMutableTreeNode: boolean _loaded> = 1;

        virtualinvoke r0.<com.jidesoft.plaf.basic.LazyMutableTreeNode: void initChildren()>();

     label2:
        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r1 := @caughtexception;

        exitmonitor r0;

     label5:
        throw $r1;

     label6:
        $i0 = specialinvoke r0.<javax.swing.tree.DefaultMutableTreeNode: int getChildCount()>();

        return $i0;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void clear()
    {
        com.jidesoft.plaf.basic.LazyMutableTreeNode r0;

        r0 := @this: com.jidesoft.plaf.basic.LazyMutableTreeNode;

        virtualinvoke r0.<com.jidesoft.plaf.basic.LazyMutableTreeNode: void removeAllChildren()>();

        r0.<com.jidesoft.plaf.basic.LazyMutableTreeNode: boolean _loaded> = 0;

        return;
    }

    public boolean isLoaded()
    {
        com.jidesoft.plaf.basic.LazyMutableTreeNode r0;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.LazyMutableTreeNode;

        $z0 = r0.<com.jidesoft.plaf.basic.LazyMutableTreeNode: boolean _loaded>;

        return $z0;
    }

    protected abstract void initChildren();
}
