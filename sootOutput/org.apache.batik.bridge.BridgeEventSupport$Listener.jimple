public class org.apache.batik.bridge.BridgeEventSupport$Listener extends java.lang.Object implements org.apache.batik.gvt.event.GraphicsNodeMouseListener, org.apache.batik.gvt.event.GraphicsNodeKeyListener
{
    protected org.apache.batik.bridge.BridgeContext context;
    protected org.apache.batik.bridge.UserAgent ua;
    protected org.w3c.dom.Element lastTargetElement;
    protected boolean isDown;

    public void <init>(org.apache.batik.bridge.BridgeContext, org.apache.batik.bridge.UserAgent)
    {
        org.apache.batik.bridge.BridgeContext r1;
        org.apache.batik.bridge.UserAgent r2;
        org.apache.batik.bridge.BridgeEventSupport$Listener r0;

        r0 := @this: org.apache.batik.bridge.BridgeEventSupport$Listener;

        r1 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r2 := @parameter1: org.apache.batik.bridge.UserAgent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.bridge.BridgeEventSupport$Listener: org.apache.batik.bridge.BridgeContext context> = r1;

        r0.<org.apache.batik.bridge.BridgeEventSupport$Listener: org.apache.batik.bridge.UserAgent ua> = r2;

        return;
    }

    public void keyPressed(org.apache.batik.gvt.event.GraphicsNodeKeyEvent)
    {
        org.apache.batik.bridge.BridgeEventSupport$Listener r0;
        org.apache.batik.gvt.event.GraphicsNodeKeyEvent r1;
        int $i1, $i3;
        char $c0;
        boolean $z0;

        r0 := @this: org.apache.batik.bridge.BridgeEventSupport$Listener;

        r1 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeKeyEvent;

        $z0 = r0.<org.apache.batik.bridge.BridgeEventSupport$Listener: boolean isDown>;

        if $z0 != 0 goto label1;

        r0.<org.apache.batik.bridge.BridgeEventSupport$Listener: boolean isDown> = 1;

        virtualinvoke r0.<org.apache.batik.bridge.BridgeEventSupport$Listener: void dispatchKeyEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)>("keydown", r1);

     label1:
        $c0 = virtualinvoke r1.<org.apache.batik.gvt.event.GraphicsNodeKeyEvent: char getKeyChar()>();

        $i1 = (int) $c0;

        $i3 = (int) 65535;

        if $i1 != $i3 goto label2;

        virtualinvoke r0.<org.apache.batik.bridge.BridgeEventSupport$Listener: void dispatchKeyEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)>("keypress", r1);

     label2:
        return;
    }

    public void keyReleased(org.apache.batik.gvt.event.GraphicsNodeKeyEvent)
    {
        org.apache.batik.bridge.BridgeEventSupport$Listener r0;
        org.apache.batik.gvt.event.GraphicsNodeKeyEvent r1;

        r0 := @this: org.apache.batik.bridge.BridgeEventSupport$Listener;

        r1 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeKeyEvent;

        virtualinvoke r0.<org.apache.batik.bridge.BridgeEventSupport$Listener: void dispatchKeyEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)>("keyup", r1);

        r0.<org.apache.batik.bridge.BridgeEventSupport$Listener: boolean isDown> = 0;

        return;
    }

    public void keyTyped(org.apache.batik.gvt.event.GraphicsNodeKeyEvent)
    {
        org.apache.batik.bridge.BridgeEventSupport$Listener r0;
        org.apache.batik.gvt.event.GraphicsNodeKeyEvent r1;

        r0 := @this: org.apache.batik.bridge.BridgeEventSupport$Listener;

        r1 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeKeyEvent;

        virtualinvoke r0.<org.apache.batik.bridge.BridgeEventSupport$Listener: void dispatchKeyEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeKeyEvent)>("keypress", r1);

        return;
    }

    protected void dispatchKeyEvent(java.lang.String, org.apache.batik.gvt.event.GraphicsNodeKeyEvent)
    {
        org.apache.batik.bridge.BridgeEventSupport$Listener r0;
        org.apache.batik.bridge.FocusManager $r2;
        org.w3c.dom.events.EventTarget $r3, $r8;
        org.w3c.dom.Document $r4, $r10;
        int $i0, $i1, $i3;
        java.lang.String r6;
        boolean $z0, $z1, $z2, $z3;
        org.w3c.dom.events.DocumentEvent $r11;
        org.apache.batik.bridge.BridgeContext $r1, $r9;
        char $c2;
        java.lang.RuntimeException $r13;
        org.apache.batik.bridge.UserAgent $r14;
        org.w3c.dom.Element r15;
        org.apache.batik.gvt.event.GraphicsNodeKeyEvent r7;
        org.w3c.dom.events.Event $r5;
        org.apache.batik.dom.events.DOMKeyEvent $r12;

        r0 := @this: org.apache.batik.bridge.BridgeEventSupport$Listener;

        r6 := @parameter0: java.lang.String;

        r7 := @parameter1: org.apache.batik.gvt.event.GraphicsNodeKeyEvent;

        $r1 = r0.<org.apache.batik.bridge.BridgeEventSupport$Listener: org.apache.batik.bridge.BridgeContext context>;

        $r2 = virtualinvoke $r1.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.FocusManager getFocusManager()>();

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke $r2.<org.apache.batik.bridge.FocusManager: org.w3c.dom.events.EventTarget getCurrentEventTarget()>();

        r15 = (org.w3c.dom.Element) $r3;

        if r15 != null goto label2;

        $r9 = r0.<org.apache.batik.bridge.BridgeEventSupport$Listener: org.apache.batik.bridge.BridgeContext context>;

        $r10 = virtualinvoke $r9.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.Document getDocument()>();

        r15 = interfaceinvoke $r10.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

     label2:
        $r4 = interfaceinvoke r15.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        $r11 = (org.w3c.dom.events.DocumentEvent) $r4;

        $r5 = interfaceinvoke $r11.<org.w3c.dom.events.DocumentEvent: org.w3c.dom.events.Event createEvent(java.lang.String)>("KeyEvents");

        $r12 = (org.apache.batik.dom.events.DOMKeyEvent) $r5;

        $z0 = virtualinvoke r7.<org.apache.batik.gvt.event.GraphicsNodeInputEvent: boolean isControlDown()>();

        $z1 = virtualinvoke r7.<org.apache.batik.gvt.event.GraphicsNodeInputEvent: boolean isAltDown()>();

        $z2 = virtualinvoke r7.<org.apache.batik.gvt.event.GraphicsNodeInputEvent: boolean isShiftDown()>();

        $z3 = virtualinvoke r7.<org.apache.batik.gvt.event.GraphicsNodeInputEvent: boolean isMetaDown()>();

        $i0 = virtualinvoke r7.<org.apache.batik.gvt.event.GraphicsNodeKeyEvent: int getKeyCode()>();

        $i1 = virtualinvoke r0.<org.apache.batik.bridge.BridgeEventSupport$Listener: int mapKeyCode(int)>($i0);

        $c2 = virtualinvoke r7.<org.apache.batik.gvt.event.GraphicsNodeKeyEvent: char getKeyChar()>();

        $i3 = (int) $c2;

        virtualinvoke $r12.<org.apache.batik.dom.events.DOMKeyEvent: void initKeyEvent(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,int,int,org.w3c.dom.views.AbstractView)>(r6, 1, 1, $z0, $z1, $z2, $z3, $i1, $i3, null);

     label3:
        $r8 = (org.w3c.dom.events.EventTarget) r15;

        interfaceinvoke $r8.<org.w3c.dom.events.EventTarget: boolean dispatchEvent(org.w3c.dom.events.Event)>($r12);

     label4:
        goto label6;

     label5:
        $r13 := @caughtexception;

        $r14 = r0.<org.apache.batik.bridge.BridgeEventSupport$Listener: org.apache.batik.bridge.UserAgent ua>;

        interfaceinvoke $r14.<org.apache.batik.bridge.UserAgent: void displayError(java.lang.Exception)>($r13);

     label6:
        return;

        catch java.lang.RuntimeException from label3 to label4 with label5;
    }

    protected final int mapKeyCode(int)
    {
        int i0;
        org.apache.batik.bridge.BridgeEventSupport$Listener r0;

        r0 := @this: org.apache.batik.bridge.BridgeEventSupport$Listener;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 10: goto label1;
            case 262: goto label2;
            case 263: goto label3;
            default: goto label4;
        };

     label1:
        return 13;

     label2:
        return 0;

     label3:
        return 0;

     label4:
        return i0;
    }

    public void mouseClicked(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)
    {
        org.apache.batik.gvt.event.GraphicsNodeMouseEvent r1;
        org.apache.batik.bridge.BridgeEventSupport$Listener r0;

        r0 := @this: org.apache.batik.bridge.BridgeEventSupport$Listener;

        r1 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeMouseEvent;

        virtualinvoke r0.<org.apache.batik.bridge.BridgeEventSupport$Listener: void dispatchMouseEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean)>("click", r1, 1);

        return;
    }

    public void mousePressed(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)
    {
        org.apache.batik.gvt.event.GraphicsNodeMouseEvent r1;
        org.apache.batik.bridge.BridgeEventSupport$Listener r0;

        r0 := @this: org.apache.batik.bridge.BridgeEventSupport$Listener;

        r1 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeMouseEvent;

        virtualinvoke r0.<org.apache.batik.bridge.BridgeEventSupport$Listener: void dispatchMouseEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean)>("mousedown", r1, 1);

        return;
    }

    public void mouseReleased(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)
    {
        org.apache.batik.gvt.event.GraphicsNodeMouseEvent r1;
        org.apache.batik.bridge.BridgeEventSupport$Listener r0;

        r0 := @this: org.apache.batik.bridge.BridgeEventSupport$Listener;

        r1 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeMouseEvent;

        virtualinvoke r0.<org.apache.batik.bridge.BridgeEventSupport$Listener: void dispatchMouseEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean)>("mouseup", r1, 1);

        return;
    }

    public void mouseEntered(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)
    {
        org.apache.batik.bridge.BridgeEventSupport$Listener r3;
        org.apache.batik.gvt.GraphicsNode $r2;
        java.awt.Point $r1;
        org.apache.batik.gvt.event.GraphicsNodeMouseEvent r0;
        java.awt.geom.Point2D$Float $r4;
        org.w3c.dom.Element $r5, $r6;
        float $f0, $f1;

        r3 := @this: org.apache.batik.bridge.BridgeEventSupport$Listener;

        r0 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeMouseEvent;

        $r1 = virtualinvoke r0.<org.apache.batik.gvt.event.GraphicsNodeMouseEvent: java.awt.Point getClientPoint()>();

        $r2 = virtualinvoke r0.<org.apache.batik.gvt.event.GraphicsNodeEvent: org.apache.batik.gvt.GraphicsNode getGraphicsNode()>();

        $r4 = new java.awt.geom.Point2D$Float;

        $f0 = virtualinvoke r0.<org.apache.batik.gvt.event.GraphicsNodeMouseEvent: float getX()>();

        $f1 = virtualinvoke r0.<org.apache.batik.gvt.event.GraphicsNodeMouseEvent: float getY()>();

        specialinvoke $r4.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f0, $f1);

        $r5 = virtualinvoke r3.<org.apache.batik.bridge.BridgeEventSupport$Listener: org.w3c.dom.Element getEventTarget(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Point2D)>($r2, $r4);

        $r6 = virtualinvoke r3.<org.apache.batik.bridge.BridgeEventSupport$Listener: org.w3c.dom.Element getRelatedElement(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)>(r0);

        virtualinvoke r3.<org.apache.batik.bridge.BridgeEventSupport$Listener: void dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean)>("mouseover", $r5, $r6, $r1, r0, 1);

        return;
    }

    public void mouseExited(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)
    {
        org.apache.batik.gvt.event.GraphicsNodeMouseEvent r0;
        org.apache.batik.bridge.BridgeEventSupport$Listener r3;
        org.w3c.dom.Element $r4, $r5, $r6;
        org.apache.batik.gvt.GraphicsNode $r2;
        java.awt.Point $r1;

        r3 := @this: org.apache.batik.bridge.BridgeEventSupport$Listener;

        r0 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeMouseEvent;

        $r1 = virtualinvoke r0.<org.apache.batik.gvt.event.GraphicsNodeMouseEvent: java.awt.Point getClientPoint()>();

        $r2 = virtualinvoke r0.<org.apache.batik.gvt.event.GraphicsNodeMouseEvent: org.apache.batik.gvt.GraphicsNode getRelatedNode()>();

        $r4 = virtualinvoke r3.<org.apache.batik.bridge.BridgeEventSupport$Listener: org.w3c.dom.Element getEventTarget(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Point2D)>($r2, $r1);

        $r5 = r3.<org.apache.batik.bridge.BridgeEventSupport$Listener: org.w3c.dom.Element lastTargetElement>;

        if $r5 == null goto label1;

        $r6 = r3.<org.apache.batik.bridge.BridgeEventSupport$Listener: org.w3c.dom.Element lastTargetElement>;

        virtualinvoke r3.<org.apache.batik.bridge.BridgeEventSupport$Listener: void dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean)>("mouseout", $r6, $r4, $r1, r0, 1);

        r3.<org.apache.batik.bridge.BridgeEventSupport$Listener: org.w3c.dom.Element lastTargetElement> = null;

     label1:
        return;
    }

    public void mouseDragged(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)
    {
        org.apache.batik.gvt.event.GraphicsNodeMouseEvent r1;
        org.apache.batik.bridge.BridgeEventSupport$Listener r0;

        r0 := @this: org.apache.batik.bridge.BridgeEventSupport$Listener;

        r1 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeMouseEvent;

        virtualinvoke r0.<org.apache.batik.bridge.BridgeEventSupport$Listener: void dispatchMouseEvent(java.lang.String,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean)>("mousemove", r1, 0);

        return;
    }

    public void mouseMoved(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)
    {
        org.apache.batik.gvt.event.GraphicsNodeMouseEvent r0;
        org.apache.batik.bridge.BridgeEventSupport$Listener r3;
        org.w3c.dom.Element $r4, r5;
        org.apache.batik.gvt.GraphicsNode $r2;
        java.awt.Point $r1;

        r3 := @this: org.apache.batik.bridge.BridgeEventSupport$Listener;

        r0 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeMouseEvent;

        $r1 = virtualinvoke r0.<org.apache.batik.gvt.event.GraphicsNodeMouseEvent: java.awt.Point getClientPoint()>();

        $r2 = virtualinvoke r0.<org.apache.batik.gvt.event.GraphicsNodeEvent: org.apache.batik.gvt.GraphicsNode getGraphicsNode()>();

        $r4 = virtualinvoke r3.<org.apache.batik.bridge.BridgeEventSupport$Listener: org.w3c.dom.Element getEventTarget(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Point2D)>($r2, $r1);

        r5 = r3.<org.apache.batik.bridge.BridgeEventSupport$Listener: org.w3c.dom.Element lastTargetElement>;

        if r5 == $r4 goto label2;

        if r5 == null goto label1;

        virtualinvoke r3.<org.apache.batik.bridge.BridgeEventSupport$Listener: void dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean)>("mouseout", r5, $r4, $r1, r0, 1);

     label1:
        if $r4 == null goto label2;

        virtualinvoke r3.<org.apache.batik.bridge.BridgeEventSupport$Listener: void dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean)>("mouseover", $r4, r5, $r1, r0, 1);

     label2:
        virtualinvoke r3.<org.apache.batik.bridge.BridgeEventSupport$Listener: void dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean)>("mousemove", $r4, null, $r1, r0, 0);

        return;
    }

    protected void dispatchMouseEvent(java.lang.String, org.apache.batik.gvt.event.GraphicsNodeMouseEvent, boolean)
    {
        org.apache.batik.bridge.BridgeEventSupport$Listener r3;
        org.apache.batik.gvt.GraphicsNode $r2;
        java.awt.Point $r1;
        org.apache.batik.gvt.event.GraphicsNodeMouseEvent r0;
        java.awt.geom.Point2D$Float $r4;
        org.w3c.dom.Element $r5, $r6;
        float $f0, $f1;
        java.lang.String r7;
        boolean z0;

        r3 := @this: org.apache.batik.bridge.BridgeEventSupport$Listener;

        r7 := @parameter0: java.lang.String;

        r0 := @parameter1: org.apache.batik.gvt.event.GraphicsNodeMouseEvent;

        z0 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<org.apache.batik.gvt.event.GraphicsNodeMouseEvent: java.awt.Point getClientPoint()>();

        $r2 = virtualinvoke r0.<org.apache.batik.gvt.event.GraphicsNodeEvent: org.apache.batik.gvt.GraphicsNode getGraphicsNode()>();

        $r4 = new java.awt.geom.Point2D$Float;

        $f0 = virtualinvoke r0.<org.apache.batik.gvt.event.GraphicsNodeMouseEvent: float getX()>();

        $f1 = virtualinvoke r0.<org.apache.batik.gvt.event.GraphicsNodeMouseEvent: float getY()>();

        specialinvoke $r4.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f0, $f1);

        $r5 = virtualinvoke r3.<org.apache.batik.bridge.BridgeEventSupport$Listener: org.w3c.dom.Element getEventTarget(org.apache.batik.gvt.GraphicsNode,java.awt.geom.Point2D)>($r2, $r4);

        $r6 = virtualinvoke r3.<org.apache.batik.bridge.BridgeEventSupport$Listener: org.w3c.dom.Element getRelatedElement(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)>(r0);

        virtualinvoke r3.<org.apache.batik.bridge.BridgeEventSupport$Listener: void dispatchMouseEvent(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.awt.Point,org.apache.batik.gvt.event.GraphicsNodeMouseEvent,boolean)>(r7, $r5, $r6, $r1, r0, z0);

        return;
    }

    protected void dispatchMouseEvent(java.lang.String, org.w3c.dom.Element, org.w3c.dom.Element, java.awt.Point, org.apache.batik.gvt.event.GraphicsNodeMouseEvent, boolean)
    {
        java.lang.Throwable $r14;
        org.apache.batik.bridge.BridgeEventSupport$Listener r13;
        java.awt.Point $r2, r9;
        org.apache.batik.gvt.event.GraphicsNodeMouseEvent r1;
        short $s9;
        org.w3c.dom.events.EventTarget $r11, $r12;
        org.w3c.dom.Document $r3;
        org.apache.batik.dom.events.DOMMouseEvent r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String $r7, r8;
        boolean z0;
        org.w3c.dom.events.DocumentEvent r4;
        java.lang.RuntimeException $r15;
        org.apache.batik.bridge.UserAgent $r16;
        org.w3c.dom.Element r0, r10;
        org.w3c.dom.events.Event $r5;

        r13 := @this: org.apache.batik.bridge.BridgeEventSupport$Listener;

        r8 := @parameter0: java.lang.String;

        r0 := @parameter1: org.w3c.dom.Element;

        r10 := @parameter2: org.w3c.dom.Element;

        r9 := @parameter3: java.awt.Point;

        r1 := @parameter4: org.apache.batik.gvt.event.GraphicsNodeMouseEvent;

        z0 := @parameter5: boolean;

        if r0 != null goto label01;

        return;

     label01:
        $r2 = virtualinvoke r1.<org.apache.batik.gvt.event.GraphicsNodeMouseEvent: java.awt.Point getScreenPoint()>();

        $r3 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        r4 = (org.w3c.dom.events.DocumentEvent) $r3;

        $r5 = interfaceinvoke r4.<org.w3c.dom.events.DocumentEvent: org.w3c.dom.events.Event createEvent(java.lang.String)>("MouseEvents");

        r6 = (org.apache.batik.dom.events.DOMMouseEvent) $r5;

        $i0 = virtualinvoke r1.<org.apache.batik.gvt.event.GraphicsNodeInputEvent: int getLockState()>();

        $i1 = virtualinvoke r1.<org.apache.batik.gvt.event.GraphicsNodeInputEvent: int getModifiers()>();

        $r7 = staticinvoke <org.apache.batik.dom.util.DOMUtilities: java.lang.String getModifiersList(int,int)>($i0, $i1);

        $i2 = virtualinvoke r1.<org.apache.batik.gvt.event.GraphicsNodeMouseEvent: int getClickCount()>();

        $i3 = $r2.<java.awt.Point: int x>;

        $i4 = $r2.<java.awt.Point: int y>;

        $i5 = r9.<java.awt.Point: int x>;

        $i6 = r9.<java.awt.Point: int y>;

        $i7 = virtualinvoke r1.<org.apache.batik.gvt.event.GraphicsNodeMouseEvent: int getButton()>();

        $i8 = $i7 - 1;

        $s9 = (short) $i8;

        $r11 = (org.w3c.dom.events.EventTarget) r10;

        virtualinvoke r6.<org.apache.batik.dom.events.DOMMouseEvent: void initMouseEventNS(java.lang.String,java.lang.String,boolean,boolean,org.w3c.dom.views.AbstractView,int,int,int,int,int,short,org.w3c.dom.events.EventTarget,java.lang.String)>("http://www.w3.org/2001/xml-events", r8, 1, z0, null, $i2, $i3, $i4, $i5, $i6, $s9, $r11, $r7);

     label02:
        $r12 = (org.w3c.dom.events.EventTarget) r0;

        interfaceinvoke $r12.<org.w3c.dom.events.EventTarget: boolean dispatchEvent(org.w3c.dom.events.Event)>(r6);

     label03:
        goto label10;

     label04:
        goto label09;

     label05:
        $r15 := @caughtexception;

        $r16 = r13.<org.apache.batik.bridge.BridgeEventSupport$Listener: org.apache.batik.bridge.UserAgent ua>;

        interfaceinvoke $r16.<org.apache.batik.bridge.UserAgent: void displayError(java.lang.Exception)>($r15);

        goto label11;

     label06:
        goto label09;

     label07:
        $r14 := @caughtexception;

        goto label12;

     label08:
        throw $r14;

     label09:
        return;

     label10:
        r13.<org.apache.batik.bridge.BridgeEventSupport$Listener: org.w3c.dom.Element lastTargetElement> = r0;

        goto label04;

     label11:
        r13.<org.apache.batik.bridge.BridgeEventSupport$Listener: org.w3c.dom.Element lastTargetElement> = r0;

        goto label06;

     label12:
        r13.<org.apache.batik.bridge.BridgeEventSupport$Listener: org.w3c.dom.Element lastTargetElement> = r0;

        goto label08;

        catch java.lang.RuntimeException from label02 to label03 with label05;
        catch java.lang.Throwable from label02 to label07 with label07;
    }

    protected org.w3c.dom.Element getRelatedElement(org.apache.batik.gvt.event.GraphicsNodeMouseEvent)
    {
        org.apache.batik.gvt.event.GraphicsNodeMouseEvent r0;
        org.apache.batik.bridge.BridgeEventSupport$Listener r2;
        org.w3c.dom.Element r4;
        org.apache.batik.gvt.GraphicsNode $r1;
        org.apache.batik.bridge.BridgeContext $r3;

        r2 := @this: org.apache.batik.bridge.BridgeEventSupport$Listener;

        r0 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeMouseEvent;

        $r1 = virtualinvoke r0.<org.apache.batik.gvt.event.GraphicsNodeMouseEvent: org.apache.batik.gvt.GraphicsNode getRelatedNode()>();

        r4 = null;

        if $r1 == null goto label1;

        $r3 = r2.<org.apache.batik.bridge.BridgeEventSupport$Listener: org.apache.batik.bridge.BridgeContext context>;

        r4 = virtualinvoke $r3.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.Element getElement(org.apache.batik.gvt.GraphicsNode)>($r1);

     label1:
        return r4;
    }

    protected org.w3c.dom.Element getEventTarget(org.apache.batik.gvt.GraphicsNode, java.awt.geom.Point2D)
    {
        org.apache.batik.gvt.TextNode r4;
        org.apache.batik.bridge.BridgeEventSupport$Listener r0;
        java.awt.geom.Point2D r6, r8;
        java.awt.geom.Rectangle2D $r16;
        java.awt.geom.NoninvertibleTransformException $r22;
        boolean $z0, $z1, $z2;
        org.apache.batik.gvt.GraphicsNode r1;
        org.apache.batik.bridge.BridgeContext $r2;
        java.awt.geom.AffineTransform $r9, $r10;
        java.util.List $r5;
        java.text.AttributedCharacterIterator $r13;
        float f0, f1;
        org.apache.batik.gvt.text.TextHit $r15;
        java.text.AttributedCharacterIterator$Attribute $r17;
        int i0, $i1;
        java.lang.ref.SoftReference r19;
        double $d0, $d1, $d2, $d3;
        org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun r12;
        org.apache.batik.gvt.text.TextSpanLayout $r14;
        org.w3c.dom.Element $r3, $r21;
        java.lang.Object $r7, $r11, $r18, $r20;

        r0 := @this: org.apache.batik.bridge.BridgeEventSupport$Listener;

        r1 := @parameter0: org.apache.batik.gvt.GraphicsNode;

        r6 := @parameter1: java.awt.geom.Point2D;

        $r2 = r0.<org.apache.batik.bridge.BridgeEventSupport$Listener: org.apache.batik.bridge.BridgeContext context>;

        $r3 = virtualinvoke $r2.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.Element getElement(org.apache.batik.gvt.GraphicsNode)>(r1);

        if $r3 == null goto label8;

        $z0 = r1 instanceof org.apache.batik.gvt.TextNode;

        if $z0 == 0 goto label8;

        r4 = (org.apache.batik.gvt.TextNode) r1;

        $r5 = virtualinvoke r4.<org.apache.batik.gvt.TextNode: java.util.List getTextRuns()>();

        $r7 = virtualinvoke r6.<java.awt.geom.Point2D: java.lang.Object clone()>();

        r8 = (java.awt.geom.Point2D) $r7;

     label1:
        $r9 = interfaceinvoke r1.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.AffineTransform getGlobalTransform()>();

        $r10 = virtualinvoke $r9.<java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>();

        virtualinvoke $r10.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r8, r8);

     label2:
        goto label4;

     label3:
        $r22 := @caughtexception;

     label4:
        if $r5 == null goto label8;

        i0 = 0;

        goto label7;

     label5:
        $r11 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i0);

        r12 = (org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun) $r11;

        $r13 = virtualinvoke r12.<org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun: java.text.AttributedCharacterIterator getACI()>();

        $r14 = virtualinvoke r12.<org.apache.batik.gvt.renderer.StrokingTextPainter$TextRun: org.apache.batik.gvt.text.TextSpanLayout getLayout()>();

        $d0 = virtualinvoke r8.<java.awt.geom.Point2D: double getX()>();

        f0 = (float) $d0;

        $d1 = virtualinvoke r8.<java.awt.geom.Point2D: double getY()>();

        f1 = (float) $d1;

        $r15 = interfaceinvoke $r14.<org.apache.batik.gvt.text.TextSpanLayout: org.apache.batik.gvt.text.TextHit hitTestChar(float,float)>(f0, f1);

        $r16 = interfaceinvoke $r14.<org.apache.batik.gvt.text.TextSpanLayout: java.awt.geom.Rectangle2D getBounds2D()>();

        if $r15 == null goto label6;

        if $r16 == null goto label6;

        $d3 = (double) f0;

        $d2 = (double) f1;

        $z1 = virtualinvoke $r16.<java.awt.geom.Rectangle2D: boolean contains(double,double)>($d3, $d2);

        if $z1 == 0 goto label6;

        $r17 = <org.apache.batik.bridge.BridgeEventSupport: java.text.AttributedCharacterIterator$Attribute TEXT_COMPOUND_ID>;

        $r18 = interfaceinvoke $r13.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r17);

        r19 = (java.lang.ref.SoftReference) $r18;

        $r20 = virtualinvoke r19.<java.lang.ref.SoftReference: java.lang.Object get()>();

        $z2 = $r20 instanceof org.w3c.dom.Element;

        if $z2 == 0 goto label6;

        $r21 = (org.w3c.dom.Element) $r20;

        return $r21;

     label6:
        i0 = i0 + 1;

     label7:
        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i0 < $i1 goto label5;

     label8:
        return $r3;

        catch java.awt.geom.NoninvertibleTransformException from label1 to label2 with label3;
    }
}
