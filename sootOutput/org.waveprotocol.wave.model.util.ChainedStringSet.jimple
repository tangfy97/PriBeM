public class org.waveprotocol.wave.model.util.ChainedStringSet extends org.waveprotocol.wave.model.util.ChainedData
{

    public void <init>()
    {
        org.waveprotocol.wave.model.util.DataDomain $r1;
        org.waveprotocol.wave.model.util.ChainedStringSet r0;

        r0 := @this: org.waveprotocol.wave.model.util.ChainedStringSet;

        $r1 = <org.waveprotocol.wave.model.util.CollectionUtils: org.waveprotocol.wave.model.util.DataDomain STRING_SET_DOMAIN>;

        specialinvoke r0.<org.waveprotocol.wave.model.util.ChainedData: void <init>(org.waveprotocol.wave.model.util.DataDomain)>($r1);

        return;
    }

    public void <init>(org.waveprotocol.wave.model.util.ChainedData)
    {
        org.waveprotocol.wave.model.util.ChainedStringSet r0;
        org.waveprotocol.wave.model.util.ChainedData r1;

        r0 := @this: org.waveprotocol.wave.model.util.ChainedStringSet;

        r1 := @parameter0: org.waveprotocol.wave.model.util.ChainedData;

        specialinvoke r0.<org.waveprotocol.wave.model.util.ChainedData: void <init>(org.waveprotocol.wave.model.util.ChainedData)>(r1);

        return;
    }

    public org.waveprotocol.wave.model.util.ChainedStringSet createExtension()
    {
        org.waveprotocol.wave.model.util.ChainedStringSet $r0, r1;

        r1 := @this: org.waveprotocol.wave.model.util.ChainedStringSet;

        $r0 = new org.waveprotocol.wave.model.util.ChainedStringSet;

        specialinvoke $r0.<org.waveprotocol.wave.model.util.ChainedStringSet: void <init>(org.waveprotocol.wave.model.util.ChainedData)>(r1);

        return $r0;
    }
}
