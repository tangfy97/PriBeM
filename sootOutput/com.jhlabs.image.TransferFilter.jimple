public abstract class com.jhlabs.image.TransferFilter extends com.jhlabs.image.PointFilter
{
    protected int[] rTable;
    protected int[] gTable;
    protected int[] bTable;
    protected boolean initialized;

    public void <init>()
    {
        com.jhlabs.image.TransferFilter r0;

        r0 := @this: com.jhlabs.image.TransferFilter;

        specialinvoke r0.<com.jhlabs.image.PointFilter: void <init>()>();

        r0.<com.jhlabs.image.TransferFilter: boolean initialized> = 0;

        r0.<com.jhlabs.image.PointFilter: boolean canFilterIndexColorModel> = 1;

        return;
    }

    public int filterRGB(int, int, int)
    {
        com.jhlabs.image.TransferFilter r0;
        int[] $r1, $r2, $r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12, i13, i14, i15, i16;

        r0 := @this: com.jhlabs.image.TransferFilter;

        i9 := @parameter0: int;

        i10 := @parameter1: int;

        i0 := @parameter2: int;

        i1 = i0 & -16777216;

        $i2 = i0 >> 16;

        i11 = $i2 & 255;

        $i3 = i0 >> 8;

        i12 = $i3 & 255;

        i13 = i0 & 255;

        $r1 = r0.<com.jhlabs.image.TransferFilter: int[] rTable>;

        i14 = $r1[i11];

        $r2 = r0.<com.jhlabs.image.TransferFilter: int[] gTable>;

        i15 = $r2[i12];

        $r3 = r0.<com.jhlabs.image.TransferFilter: int[] bTable>;

        i16 = $r3[i13];

        $i4 = i14 << 16;

        $i6 = i1 | $i4;

        $i5 = i15 << 8;

        $i7 = $i6 | $i5;

        $i8 = $i7 | i16;

        return $i8;
    }

    public java.awt.image.BufferedImage filter(java.awt.image.BufferedImage, java.awt.image.BufferedImage)
    {
        java.awt.image.BufferedImage r1, r2, $r3;
        com.jhlabs.image.TransferFilter r0;
        boolean $z0;

        r0 := @this: com.jhlabs.image.TransferFilter;

        r1 := @parameter0: java.awt.image.BufferedImage;

        r2 := @parameter1: java.awt.image.BufferedImage;

        $z0 = r0.<com.jhlabs.image.TransferFilter: boolean initialized>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.jhlabs.image.TransferFilter: void initialize()>();

     label1:
        $r3 = specialinvoke r0.<com.jhlabs.image.PointFilter: java.awt.image.BufferedImage filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)>(r1, r2);

        return $r3;
    }

    protected void initialize()
    {
        com.jhlabs.image.TransferFilter r0;
        int[] $r1;

        r0 := @this: com.jhlabs.image.TransferFilter;

        r0.<com.jhlabs.image.TransferFilter: boolean initialized> = 1;

        $r1 = virtualinvoke r0.<com.jhlabs.image.TransferFilter: int[] makeTable()>();

        r0.<com.jhlabs.image.TransferFilter: int[] bTable> = $r1;

        r0.<com.jhlabs.image.TransferFilter: int[] gTable> = $r1;

        r0.<com.jhlabs.image.TransferFilter: int[] rTable> = $r1;

        return;
    }

    protected int[] makeTable()
    {
        com.jhlabs.image.TransferFilter r1;
        int[] r0;
        int $i0, $i1, i2;
        float $f0, $f1, $f2, $f3;

        r1 := @this: com.jhlabs.image.TransferFilter;

        r0 = newarray (int)[256];

        i2 = 0;

     label1:
        if i2 >= 256 goto label2;

        $f0 = (float) i2;

        $f1 = $f0 / 255.0F;

        $f2 = virtualinvoke r1.<com.jhlabs.image.TransferFilter: float transferFunction(float)>($f1);

        $f3 = 255.0F * $f2;

        $i0 = (int) $f3;

        $i1 = staticinvoke <com.jhlabs.image.PixelUtils: int clamp(int)>($i0);

        r0[i2] = $i1;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r0;
    }

    protected float transferFunction(float)
    {
        com.jhlabs.image.TransferFilter r0;
        float f0;

        r0 := @this: com.jhlabs.image.TransferFilter;

        f0 := @parameter0: float;

        return 0.0F;
    }

    public int[] getLUT()
    {
        com.jhlabs.image.TransferFilter r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        boolean $z0;

        r0 := @this: com.jhlabs.image.TransferFilter;

        $z0 = r0.<com.jhlabs.image.TransferFilter: boolean initialized>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.jhlabs.image.TransferFilter: void initialize()>();

     label1:
        $r1 = newarray (int)[256];

        i7 = 0;

     label2:
        if i7 >= 256 goto label3;

        $i1 = i7 << 24;

        $i0 = i7 << 16;

        $i3 = $i1 | $i0;

        $i2 = i7 << 8;

        $i4 = $i3 | $i2;

        $i5 = $i4 | i7;

        $i6 = virtualinvoke r0.<com.jhlabs.image.TransferFilter: int filterRGB(int,int,int)>(0, 0, $i5);

        $r1[i7] = $i6;

        i7 = i7 + 1;

        goto label2;

     label3:
        return $r1;
    }
}
