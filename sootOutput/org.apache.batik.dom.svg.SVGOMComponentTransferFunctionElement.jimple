public abstract class org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement extends org.apache.batik.dom.svg.SVGOMElement implements org.w3c.dom.svg.SVGComponentTransferFunctionElement
{
    protected static org.apache.batik.util.DoublyIndexedTable xmlTraitInformation;
    protected static final java.lang.String[] TYPE_VALUES;
    protected org.apache.batik.dom.svg.SVGOMAnimatedEnumeration type;
    protected org.apache.batik.dom.svg.SVGOMAnimatedNumberList tableValues;
    protected org.apache.batik.dom.svg.SVGOMAnimatedNumber slope;
    protected org.apache.batik.dom.svg.SVGOMAnimatedNumber intercept;
    protected org.apache.batik.dom.svg.SVGOMAnimatedNumber amplitude;
    protected org.apache.batik.dom.svg.SVGOMAnimatedNumber exponent;
    protected org.apache.batik.dom.svg.SVGOMAnimatedNumber offset;

    protected void <init>()
    {
        org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement;

        specialinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: void <init>()>();

        return;
    }

    protected void <init>(java.lang.String, org.apache.batik.dom.AbstractDocument)
    {
        org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement r0;
        org.apache.batik.dom.AbstractDocument r2;
        java.lang.String r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.batik.dom.AbstractDocument;

        specialinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: void <init>(java.lang.String,org.apache.batik.dom.AbstractDocument)>(r1, r2);

        specialinvoke r0.<org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement: void initializeLiveAttributes()>();

        return;
    }

    protected void initializeAllLiveAttributes()
    {
        org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement;

        specialinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: void initializeAllLiveAttributes()>();

        specialinvoke r0.<org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement: void initializeLiveAttributes()>();

        return;
    }

    private void initializeLiveAttributes()
    {
        org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement r0;
        org.apache.batik.dom.svg.SVGOMAnimatedEnumeration $r2;
        java.lang.String[] $r1;
        org.apache.batik.dom.svg.SVGOMAnimatedNumber $r4, $r5, $r6, $r7, $r8;
        org.apache.batik.dom.svg.SVGOMAnimatedNumberList $r3;

        r0 := @this: org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement;

        $r1 = <org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement: java.lang.String[] TYPE_VALUES>;

        $r2 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: org.apache.batik.dom.svg.SVGOMAnimatedEnumeration createLiveAnimatedEnumeration(java.lang.String,java.lang.String,java.lang.String[],short)>(null, "type", $r1, 1);

        r0.<org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement: org.apache.batik.dom.svg.SVGOMAnimatedEnumeration type> = $r2;

        $r3 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: org.apache.batik.dom.svg.SVGOMAnimatedNumberList createLiveAnimatedNumberList(java.lang.String,java.lang.String,java.lang.String,boolean)>(null, "tableValues", "", 0);

        r0.<org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement: org.apache.batik.dom.svg.SVGOMAnimatedNumberList tableValues> = $r3;

        $r4 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: org.apache.batik.dom.svg.SVGOMAnimatedNumber createLiveAnimatedNumber(java.lang.String,java.lang.String,float)>(null, "slope", 1.0F);

        r0.<org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement: org.apache.batik.dom.svg.SVGOMAnimatedNumber slope> = $r4;

        $r5 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: org.apache.batik.dom.svg.SVGOMAnimatedNumber createLiveAnimatedNumber(java.lang.String,java.lang.String,float)>(null, "intercept", 0.0F);

        r0.<org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement: org.apache.batik.dom.svg.SVGOMAnimatedNumber intercept> = $r5;

        $r6 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: org.apache.batik.dom.svg.SVGOMAnimatedNumber createLiveAnimatedNumber(java.lang.String,java.lang.String,float)>(null, "amplitude", 1.0F);

        r0.<org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement: org.apache.batik.dom.svg.SVGOMAnimatedNumber amplitude> = $r6;

        $r7 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: org.apache.batik.dom.svg.SVGOMAnimatedNumber createLiveAnimatedNumber(java.lang.String,java.lang.String,float)>(null, "exponent", 1.0F);

        r0.<org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement: org.apache.batik.dom.svg.SVGOMAnimatedNumber exponent> = $r7;

        $r8 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: org.apache.batik.dom.svg.SVGOMAnimatedNumber createLiveAnimatedNumber(java.lang.String,java.lang.String,float)>(null, "exponent", 0.0F);

        r0.<org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement: org.apache.batik.dom.svg.SVGOMAnimatedNumber offset> = $r8;

        return;
    }

    public org.w3c.dom.svg.SVGAnimatedEnumeration getType()
    {
        org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement r0;
        org.apache.batik.dom.svg.SVGOMAnimatedEnumeration $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement: org.apache.batik.dom.svg.SVGOMAnimatedEnumeration type>;

        return $r1;
    }

    public org.w3c.dom.svg.SVGAnimatedNumberList getTableValues()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement r1;

        r1 := @this: org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("SVGComponentTransferFunctionElement.getTableValues is not implemented");

        throw $r0;
    }

    public org.w3c.dom.svg.SVGAnimatedNumber getSlope()
    {
        org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement r0;
        org.apache.batik.dom.svg.SVGOMAnimatedNumber $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement: org.apache.batik.dom.svg.SVGOMAnimatedNumber slope>;

        return $r1;
    }

    public org.w3c.dom.svg.SVGAnimatedNumber getIntercept()
    {
        org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement r0;
        org.apache.batik.dom.svg.SVGOMAnimatedNumber $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement: org.apache.batik.dom.svg.SVGOMAnimatedNumber intercept>;

        return $r1;
    }

    public org.w3c.dom.svg.SVGAnimatedNumber getAmplitude()
    {
        org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement r0;
        org.apache.batik.dom.svg.SVGOMAnimatedNumber $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement: org.apache.batik.dom.svg.SVGOMAnimatedNumber amplitude>;

        return $r1;
    }

    public org.w3c.dom.svg.SVGAnimatedNumber getExponent()
    {
        org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement r0;
        org.apache.batik.dom.svg.SVGOMAnimatedNumber $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement: org.apache.batik.dom.svg.SVGOMAnimatedNumber exponent>;

        return $r1;
    }

    public org.w3c.dom.svg.SVGAnimatedNumber getOffset()
    {
        org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement r0;
        org.apache.batik.dom.svg.SVGOMAnimatedNumber $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement: org.apache.batik.dom.svg.SVGOMAnimatedNumber offset>;

        return $r1;
    }

    protected org.apache.batik.util.DoublyIndexedTable getTraitInformationTable()
    {
        org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement r1;
        org.apache.batik.util.DoublyIndexedTable $r0;

        r1 := @this: org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement;

        $r0 = <org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement: org.apache.batik.util.DoublyIndexedTable xmlTraitInformation>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.String[] $r9;
        org.apache.batik.util.DoublyIndexedTable $r0, $r1;
        org.apache.batik.dom.svg.TraitInformation $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        $r0 = new org.apache.batik.util.DoublyIndexedTable;

        $r1 = <org.apache.batik.dom.svg.SVGOMElement: org.apache.batik.util.DoublyIndexedTable xmlTraitInformation>;

        specialinvoke $r0.<org.apache.batik.util.DoublyIndexedTable: void <init>(org.apache.batik.util.DoublyIndexedTable)>($r1);

        $r2 = new org.apache.batik.dom.svg.TraitInformation;

        specialinvoke $r2.<org.apache.batik.dom.svg.TraitInformation: void <init>(boolean,int)>(1, 15);

        virtualinvoke $r0.<org.apache.batik.util.DoublyIndexedTable: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>(null, "type", $r2);

        $r3 = new org.apache.batik.dom.svg.TraitInformation;

        specialinvoke $r3.<org.apache.batik.dom.svg.TraitInformation: void <init>(boolean,int)>(1, 13);

        virtualinvoke $r0.<org.apache.batik.util.DoublyIndexedTable: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>(null, "tableValues", $r3);

        $r4 = new org.apache.batik.dom.svg.TraitInformation;

        specialinvoke $r4.<org.apache.batik.dom.svg.TraitInformation: void <init>(boolean,int)>(1, 2);

        virtualinvoke $r0.<org.apache.batik.util.DoublyIndexedTable: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>(null, "slope", $r4);

        $r5 = new org.apache.batik.dom.svg.TraitInformation;

        specialinvoke $r5.<org.apache.batik.dom.svg.TraitInformation: void <init>(boolean,int)>(1, 2);

        virtualinvoke $r0.<org.apache.batik.util.DoublyIndexedTable: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>(null, "intercept", $r5);

        $r6 = new org.apache.batik.dom.svg.TraitInformation;

        specialinvoke $r6.<org.apache.batik.dom.svg.TraitInformation: void <init>(boolean,int)>(1, 2);

        virtualinvoke $r0.<org.apache.batik.util.DoublyIndexedTable: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>(null, "amplitude", $r6);

        $r7 = new org.apache.batik.dom.svg.TraitInformation;

        specialinvoke $r7.<org.apache.batik.dom.svg.TraitInformation: void <init>(boolean,int)>(1, 2);

        virtualinvoke $r0.<org.apache.batik.util.DoublyIndexedTable: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>(null, "exponent", $r7);

        $r8 = new org.apache.batik.dom.svg.TraitInformation;

        specialinvoke $r8.<org.apache.batik.dom.svg.TraitInformation: void <init>(boolean,int)>(1, 2);

        virtualinvoke $r0.<org.apache.batik.util.DoublyIndexedTable: java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object)>(null, "offset", $r8);

        <org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement: org.apache.batik.util.DoublyIndexedTable xmlTraitInformation> = $r0;

        $r9 = newarray (java.lang.String)[6];

        $r9[0] = "";

        $r9[1] = "identity";

        $r9[2] = "table";

        $r9[3] = "discrete";

        $r9[4] = "linear";

        $r9[5] = "gamma";

        <org.apache.batik.dom.svg.SVGOMComponentTransferFunctionElement: java.lang.String[] TYPE_VALUES> = $r9;

        return;
    }
}
