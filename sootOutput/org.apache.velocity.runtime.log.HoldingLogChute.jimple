class org.apache.velocity.runtime.log.HoldingLogChute extends java.lang.Object implements org.apache.velocity.runtime.log.LogChute
{
    private java.util.Vector pendingMessages;
    private volatile boolean transferring;

    void <init>()
    {
        org.apache.velocity.runtime.log.HoldingLogChute r0;
        java.util.Vector $r1;

        r0 := @this: org.apache.velocity.runtime.log.HoldingLogChute;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        r0.<org.apache.velocity.runtime.log.HoldingLogChute: java.util.Vector pendingMessages> = $r1;

        r0.<org.apache.velocity.runtime.log.HoldingLogChute: boolean transferring> = 0;

        return;
    }

    public void init(org.apache.velocity.runtime.RuntimeServices) throws java.lang.Exception
    {
        org.apache.velocity.runtime.log.HoldingLogChute r0;
        org.apache.velocity.runtime.RuntimeServices r1;

        r0 := @this: org.apache.velocity.runtime.log.HoldingLogChute;

        r1 := @parameter0: org.apache.velocity.runtime.RuntimeServices;

        return;
    }

    public synchronized void log(int, java.lang.String)
    {
        java.lang.Object[] r1;
        java.util.Vector $r4;
        org.apache.velocity.runtime.log.HoldingLogChute r0;
        int i0;
        java.lang.String r3;
        java.lang.Integer $r2;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.log.HoldingLogChute;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        $z0 = r0.<org.apache.velocity.runtime.log.HoldingLogChute: boolean transferring>;

        if $z0 != 0 goto label1;

        r1 = newarray (java.lang.Object)[2];

        $r2 = new java.lang.Integer;

        specialinvoke $r2.<java.lang.Integer: void <init>(int)>(i0);

        r1[0] = $r2;

        r1[1] = r3;

        $r4 = r0.<org.apache.velocity.runtime.log.HoldingLogChute: java.util.Vector pendingMessages>;

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>(r1);

     label1:
        return;
    }

    public synchronized void log(int, java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r4;
        java.lang.Object[] r1;
        org.apache.velocity.runtime.log.HoldingLogChute r0;
        java.lang.Integer $r2;
        java.util.Vector $r5;
        int i0;
        java.lang.String r3;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.log.HoldingLogChute;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Throwable;

        $z0 = r0.<org.apache.velocity.runtime.log.HoldingLogChute: boolean transferring>;

        if $z0 != 0 goto label1;

        r1 = newarray (java.lang.Object)[3];

        $r2 = new java.lang.Integer;

        specialinvoke $r2.<java.lang.Integer: void <init>(int)>(i0);

        r1[0] = $r2;

        r1[1] = r3;

        r1[2] = r4;

        $r5 = r0.<org.apache.velocity.runtime.log.HoldingLogChute: java.util.Vector pendingMessages>;

        virtualinvoke $r5.<java.util.Vector: void addElement(java.lang.Object)>(r1);

     label1:
        return;
    }

    public boolean isLevelEnabled(int)
    {
        org.apache.velocity.runtime.log.HoldingLogChute r0;
        int i0;

        r0 := @this: org.apache.velocity.runtime.log.HoldingLogChute;

        i0 := @parameter0: int;

        return 1;
    }

    public synchronized void transferTo(org.apache.velocity.runtime.log.LogChute)
    {
        java.lang.Throwable $r12;
        java.lang.Object[] r5;
        java.lang.Integer $r7;
        java.util.Vector $r1, $r2;
        int $i0, $i1;
        java.lang.String r9;
        org.apache.velocity.runtime.log.LogChute r10;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r3;
        org.apache.velocity.runtime.log.HoldingLogChute r0;
        java.lang.Object $r4, $r6, $r8, $r11;

        r0 := @this: org.apache.velocity.runtime.log.HoldingLogChute;

        r10 := @parameter0: org.apache.velocity.runtime.log.LogChute;

        $z0 = r0.<org.apache.velocity.runtime.log.HoldingLogChute: boolean transferring>;

        if $z0 != 0 goto label4;

        $r1 = r0.<org.apache.velocity.runtime.log.HoldingLogChute: java.util.Vector pendingMessages>;

        $z1 = virtualinvoke $r1.<java.util.Vector: boolean isEmpty()>();

        if $z1 != 0 goto label4;

        r0.<org.apache.velocity.runtime.log.HoldingLogChute: boolean transferring> = 1;

        $r2 = r0.<org.apache.velocity.runtime.log.HoldingLogChute: java.util.Vector pendingMessages>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.Object[]) $r4;

        $r6 = r5[0];

        $r7 = (java.lang.Integer) $r6;

        $i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $r8 = r5[1];

        r9 = (java.lang.String) $r8;

        $i1 = lengthof r5;

        if $i1 != 2 goto label2;

        interfaceinvoke r10.<org.apache.velocity.runtime.log.LogChute: void log(int,java.lang.String)>($i0, r9);

        goto label3;

     label2:
        $r11 = r5[2];

        $r12 = (java.lang.Throwable) $r11;

        interfaceinvoke r10.<org.apache.velocity.runtime.log.LogChute: void log(int,java.lang.String,java.lang.Throwable)>($i0, r9, $r12);

     label3:
        goto label1;

     label4:
        return;
    }
}
