public class com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack extends java.lang.Object implements com.googlecode.mp4parser.authoring.Track
{
    com.googlecode.mp4parser.authoring.Track source;
    private int timeScaleFactor;

    public void <init>(com.googlecode.mp4parser.authoring.Track, int)
    {
        com.googlecode.mp4parser.authoring.Track r1;
        int i0;
        com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source> = r1;

        r0.<com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack: int timeScaleFactor> = i0;

        return;
    }

    public com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()
    {
        com.googlecode.mp4parser.authoring.Track $r1;
        com.coremedia.iso.boxes.SampleDescriptionBox $r2;
        com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()>();

        return $r2;
    }

    public java.util.List getCompositionTimeEntries()
    {
        com.googlecode.mp4parser.authoring.Track $r1;
        java.util.List $r2, $r3;
        int $i0;
        com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getCompositionTimeEntries()>();

        $i0 = r0.<com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack: int timeScaleFactor>;

        $r3 = staticinvoke <com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack: java.util.List adjustCtts(java.util.List,int)>($r2, $i0);

        return $r3;
    }

    public long[] getSyncSamples()
    {
        com.googlecode.mp4parser.authoring.Track $r1;
        long[] $r2;
        com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        return $r2;
    }

    public java.util.List getSampleDependencies()
    {
        com.googlecode.mp4parser.authoring.Track $r1;
        java.util.List $r2;
        com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSampleDependencies()>();

        return $r2;
    }

    public com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()
    {
        com.googlecode.mp4parser.authoring.Track $r1, $r5;
        long $l0, $l2, $l3;
        com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack r0;
        int $i1;
        java.lang.Object $r3;
        com.googlecode.mp4parser.authoring.TrackMetaData $r2, r4, $r6;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $r3 = virtualinvoke $r2.<com.googlecode.mp4parser.authoring.TrackMetaData: java.lang.Object clone()>();

        r4 = (com.googlecode.mp4parser.authoring.TrackMetaData) $r3;

        $r5 = r0.<com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r6 = interfaceinvoke $r5.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l0 = virtualinvoke $r6.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        $i1 = r0.<com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack: int timeScaleFactor>;

        $l2 = (long) $i1;

        $l3 = $l0 * $l2;

        virtualinvoke r4.<com.googlecode.mp4parser.authoring.TrackMetaData: void setTimescale(long)>($l3);

        return r4;
    }

    public java.lang.String getHandler()
    {
        com.googlecode.mp4parser.authoring.Track $r1;
        java.lang.String $r2;
        com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        return $r2;
    }

    public java.util.List getSamples()
    {
        com.googlecode.mp4parser.authoring.Track $r1;
        java.util.List $r2;
        com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        return $r2;
    }

    static java.util.List adjustCtts(java.util.List, int)
    {
        com.coremedia.iso.boxes.CompositionTimeToSample$Entry r4, $r5;
        java.util.Iterator $r2;
        java.util.ArrayList $r1;
        java.util.List r0;
        int $i0, $i1, i2, $i3, $i4;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        i2 := @parameter1: int;

        if r0 == null goto label3;

        $r1 = new java.util.ArrayList;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        $r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.coremedia.iso.boxes.CompositionTimeToSample$Entry) $r3;

        $r5 = new com.coremedia.iso.boxes.CompositionTimeToSample$Entry;

        $i1 = virtualinvoke r4.<com.coremedia.iso.boxes.CompositionTimeToSample$Entry: int getCount()>();

        $i3 = virtualinvoke r4.<com.coremedia.iso.boxes.CompositionTimeToSample$Entry: int getOffset()>();

        $i4 = i2 * $i3;

        specialinvoke $r5.<com.coremedia.iso.boxes.CompositionTimeToSample$Entry: void <init>(int,int)>($i1, $i4);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r5);

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return $r1;

     label3:
        return null;
    }

    public long[] getSampleDurations()
    {
        com.googlecode.mp4parser.authoring.Track $r1, $r4, $r6;
        long $l3, $l4, $l5;
        com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack r0;
        long[] $r2, r3, $r5, $r7;
        int $i0, $i1, $i2, i6;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: long[] getSampleDurations()>();

        $i0 = lengthof $r2;

        r3 = newarray (long)[$i0];

        i6 = 0;

        goto label2;

     label1:
        $r6 = r0.<com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r7 = interfaceinvoke $r6.<com.googlecode.mp4parser.authoring.Track: long[] getSampleDurations()>();

        $l4 = $r7[i6];

        $i2 = r0.<com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack: int timeScaleFactor>;

        $l3 = (long) $i2;

        $l5 = $l4 * $l3;

        r3[i6] = $l5;

        i6 = i6 + 1;

     label2:
        $r4 = r0.<com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r5 = interfaceinvoke $r4.<com.googlecode.mp4parser.authoring.Track: long[] getSampleDurations()>();

        $i1 = lengthof $r5;

        if i6 < $i1 goto label1;

        return r3;
    }

    public com.coremedia.iso.boxes.Box getMediaHeaderBox()
    {
        com.googlecode.mp4parser.authoring.Track $r1;
        com.coremedia.iso.boxes.Box $r2;
        com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.Box getMediaHeaderBox()>();

        return $r2;
    }

    public com.coremedia.iso.boxes.SubSampleInformationBox getSubsampleInformationBox()
    {
        com.googlecode.mp4parser.authoring.Track $r1;
        com.coremedia.iso.boxes.SubSampleInformationBox $r2;
        com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SubSampleInformationBox getSubsampleInformationBox()>();

        return $r2;
    }

    public long getDuration()
    {
        com.googlecode.mp4parser.authoring.Track $r1;
        int $i1;
        long $l0, $l2, $l3;
        com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack;

        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $l0 = interfaceinvoke $r1.<com.googlecode.mp4parser.authoring.Track: long getDuration()>();

        $i1 = r0.<com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack: int timeScaleFactor>;

        $l2 = (long) $i1;

        $l3 = $l0 * $l2;

        return $l3;
    }

    public java.lang.String toString()
    {
        com.googlecode.mp4parser.authoring.Track $r2;
        java.lang.StringBuilder $r0, $r3, $r4;
        java.lang.String $r5;
        com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack r1;

        r1 := @this: com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("MultiplyTimeScaleTrack{source=");

        $r2 = r1.<com.googlecode.mp4parser.authoring.tracks.MultiplyTimeScaleTrack: com.googlecode.mp4parser.authoring.Track source>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
