public class ucar.nc2.ncml.AggregationExisting extends ucar.nc2.ncml.AggregationOuterDimension
{
    static final boolean $assertionsDisabled;

    public void <init>(ucar.nc2.dataset.NetcdfDataset, java.lang.String, java.lang.String)
    {
        ucar.nc2.ncml.Aggregation$Type $r4;
        ucar.nc2.ncml.AggregationExisting r0;
        java.lang.String r2, r3;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.ncml.AggregationExisting;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = <ucar.nc2.ncml.Aggregation$Type: ucar.nc2.ncml.Aggregation$Type joinExisting>;

        specialinvoke r0.<ucar.nc2.ncml.AggregationOuterDimension: void <init>(ucar.nc2.dataset.NetcdfDataset,java.lang.String,ucar.nc2.ncml.Aggregation$Type,java.lang.String)>(r1, r2, $r4, r3);

        return;
    }

    protected void buildNetcdfDataset(ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.ncml.Aggregation$Dataset $r1;
        ucar.nc2.util.CancelTask r10;
        ucar.nc2.Group $r18, $r35, $r41, $r56, $r57;
        ucar.nc2.Attribute $r37, $r38, $r39;
        java.lang.StringBuilder $r23, $r27, $r28, $r29, $r46, $r47, $r49, $r70, $r71, $r72;
        ucar.nc2.ncml.AggregationOuterDimension$CoordValueVar $r7, $r66, r74;
        java.lang.String $r4, $r26, $r30, $r42, $r48, $r50, $r54, $r60, $r62, $r63, $r68, $r73;
        ucar.nc2.ncml.AggregationExisting r0;
        ucar.nc2.Dimension $r11, $r53;
        ucar.nc2.dataset.NetcdfDataset $r3, $r12, $r13, $r17, $r22, $r25, $r33, $r34, $r40, $r55, $r59;
        ucar.nc2.ncml.Aggregation$Type $r5, $r6, $r20, $r21, $r43, $r44;
        boolean $z0, $z1, $z2, $z3, $z4;
        ucar.nc2.dataset.VariableDS $r31, $r58, r75;
        ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension $r14;
        ucar.ma2.DataType $r8, $r32, $r61, $r67;
        java.util.List $r9, $r15, $r36, $r64;
        ucar.nc2.NetcdfFile $r2;
        int $i0, $i1, $i2;
        ucar.nc2.Variable $r19, r52, $r65;
        java.io.PrintStream $r24;
        java.util.Iterator $r16;
        java.lang.IllegalArgumentException $r45, $r69;
        java.lang.Object $r51;

        r0 := @this: ucar.nc2.ncml.AggregationExisting;

        r10 := @parameter0: ucar.nc2.util.CancelTask;

        $r1 = virtualinvoke r0.<ucar.nc2.ncml.AggregationExisting: ucar.nc2.ncml.Aggregation$Dataset getTypicalDataset()>();

        $r2 = virtualinvoke $r1.<ucar.nc2.ncml.Aggregation$Dataset: ucar.nc2.NetcdfFile acquireFile(ucar.nc2.util.CancelTask)>(null);

        $r3 = r0.<ucar.nc2.ncml.AggregationExisting: ucar.nc2.dataset.NetcdfDataset ncDataset>;

        staticinvoke <ucar.nc2.dataset.DatasetConstructor: void transferDataset(ucar.nc2.NetcdfFile,ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.ReplaceVariableCheck)>($r2, $r3, null);

        $r4 = virtualinvoke r0.<ucar.nc2.ncml.AggregationExisting: java.lang.String getDimensionName()>();

        $r6 = r0.<ucar.nc2.ncml.AggregationExisting: ucar.nc2.ncml.Aggregation$Type type>;

        $r5 = <ucar.nc2.ncml.Aggregation$Type: ucar.nc2.ncml.Aggregation$Type joinExistingOne>;

        if $r6 == $r5 goto label02;

        $r65 = virtualinvoke $r2.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>($r4);

        if $r65 != null goto label01;

        $r69 = new java.lang.IllegalArgumentException;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AggregationExisting: no coordinate variable for agg dimension= ");

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r69.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r73);

        throw $r69;

     label01:
        $r66 = new ucar.nc2.ncml.AggregationOuterDimension$CoordValueVar;

        $r67 = virtualinvoke $r65.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r68 = virtualinvoke $r65.<ucar.nc2.Variable: java.lang.String getUnitsString()>();

        specialinvoke $r66.<ucar.nc2.ncml.AggregationOuterDimension$CoordValueVar: void <init>(ucar.nc2.ncml.AggregationOuterDimension,java.lang.String,ucar.ma2.DataType,java.lang.String)>(r0, $r4, $r67, $r68);

        r74 = $r66;

        goto label03;

     label02:
        $r7 = new ucar.nc2.ncml.AggregationOuterDimension$CoordValueVar;

        $r8 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        specialinvoke $r7.<ucar.nc2.ncml.AggregationOuterDimension$CoordValueVar: void <init>(ucar.nc2.ncml.AggregationOuterDimension,java.lang.String,ucar.ma2.DataType,java.lang.String)>(r0, $r4, $r8, "");

        r74 = $r7;

     label03:
        $r9 = r0.<ucar.nc2.ncml.AggregationExisting: java.util.List cacheList>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r74);

        virtualinvoke r0.<ucar.nc2.ncml.AggregationExisting: void persistRead()>();

        virtualinvoke r0.<ucar.nc2.ncml.AggregationExisting: void buildCoords(ucar.nc2.util.CancelTask)>(r10);

        $r11 = new ucar.nc2.Dimension;

        $i0 = virtualinvoke r0.<ucar.nc2.ncml.AggregationExisting: int getTotalCoords()>();

        specialinvoke $r11.<ucar.nc2.Dimension: void <init>(java.lang.String,int)>($r4, $i0);

        $r12 = r0.<ucar.nc2.ncml.AggregationExisting: ucar.nc2.dataset.NetcdfDataset ncDataset>;

        virtualinvoke $r12.<ucar.nc2.dataset.NetcdfDataset: boolean removeDimension(ucar.nc2.Group,java.lang.String)>(null, $r4);

        $r13 = r0.<ucar.nc2.ncml.AggregationExisting: ucar.nc2.dataset.NetcdfDataset ncDataset>;

        virtualinvoke $r13.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r11);

        $r14 = (ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension) $r1;

        virtualinvoke r0.<ucar.nc2.ncml.AggregationExisting: void promoteGlobalAttributes(ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension)>($r14);

        $r15 = virtualinvoke $r2.<ucar.nc2.NetcdfFile: java.util.List getVariables()>();

        $r16 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z3 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label08;

        $r51 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r52 = (ucar.nc2.Variable) $r51;

        $i2 = virtualinvoke r52.<ucar.nc2.Variable: int getRank()>();

        if $i2 >= 1 goto label05;

        goto label04;

     label05:
        $r53 = virtualinvoke r52.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $r54 = virtualinvoke $r53.<ucar.nc2.Dimension: java.lang.String getName()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r54);

        if $z1 != 0 goto label06;

        goto label04;

     label06:
        $r55 = r0.<ucar.nc2.ncml.AggregationExisting: ucar.nc2.dataset.NetcdfDataset ncDataset>;

        $r56 = virtualinvoke r52.<ucar.nc2.Variable: ucar.nc2.Group getParentGroup()>();

        $r57 = staticinvoke <ucar.nc2.dataset.DatasetConstructor: ucar.nc2.Group findGroup(ucar.nc2.NetcdfFile,ucar.nc2.Group)>($r55, $r56);

        $r58 = new ucar.nc2.dataset.VariableDS;

        $r59 = r0.<ucar.nc2.ncml.AggregationExisting: ucar.nc2.dataset.NetcdfDataset ncDataset>;

        $r60 = virtualinvoke r52.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r61 = virtualinvoke r52.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r62 = virtualinvoke r52.<ucar.nc2.Variable: java.lang.String getDimensionsString()>();

        specialinvoke $r58.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>($r59, $r57, null, $r60, $r61, $r62, null, null);

        virtualinvoke $r58.<ucar.nc2.dataset.VariableDS: void setProxyReader(ucar.nc2.ProxyReader)>(r0);

        staticinvoke <ucar.nc2.dataset.DatasetConstructor: void transferVariableAttributes(ucar.nc2.Variable,ucar.nc2.Variable)>(r52, $r58);

        $r63 = virtualinvoke r52.<ucar.nc2.Variable: java.lang.String getShortName()>();

        virtualinvoke $r57.<ucar.nc2.Group: boolean removeVariable(java.lang.String)>($r63);

        virtualinvoke $r57.<ucar.nc2.Group: void addVariable(ucar.nc2.Variable)>($r58);

        $r64 = r0.<ucar.nc2.ncml.AggregationExisting: java.util.List aggVars>;

        interfaceinvoke $r64.<java.util.List: boolean add(java.lang.Object)>($r58);

        if r10 == null goto label07;

        $z2 = interfaceinvoke r10.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z2 == 0 goto label07;

        return;

     label07:
        goto label04;

     label08:
        $r17 = r0.<ucar.nc2.ncml.AggregationExisting: ucar.nc2.dataset.NetcdfDataset ncDataset>;

        $r18 = virtualinvoke $r17.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r19 = virtualinvoke $r18.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r4);

        r75 = (ucar.nc2.dataset.VariableDS) $r19;

        if r75 != null goto label09;

        $r44 = r0.<ucar.nc2.ncml.AggregationExisting: ucar.nc2.ncml.Aggregation$Type type>;

        $r43 = <ucar.nc2.ncml.Aggregation$Type: ucar.nc2.ncml.Aggregation$Type joinExisting>;

        if $r44 != $r43 goto label09;

        virtualinvoke $r1.<ucar.nc2.ncml.Aggregation$Dataset: void close(ucar.nc2.NetcdfFile)>($r2);

        $r45 = new java.lang.IllegalArgumentException;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No existing coordinate variable for joinExisting on ");

        $r48 = virtualinvoke r0.<ucar.nc2.ncml.AggregationExisting: java.lang.String getLocation()>();

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r45.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r50);

        throw $r45;

     label09:
        $r21 = r0.<ucar.nc2.ncml.AggregationExisting: ucar.nc2.ncml.Aggregation$Type type>;

        $r20 = <ucar.nc2.ncml.Aggregation$Type: ucar.nc2.ncml.Aggregation$Type joinExistingOne>;

        if $r21 != $r20 goto label11;

        if r75 == null goto label10;

        $r40 = r0.<ucar.nc2.ncml.AggregationExisting: ucar.nc2.dataset.NetcdfDataset ncDataset>;

        $r41 = virtualinvoke $r40.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r42 = virtualinvoke r75.<ucar.nc2.dataset.VariableDS: java.lang.String getShortName()>();

        virtualinvoke $r41.<ucar.nc2.Group: boolean removeVariable(java.lang.String)>($r42);

     label10:
        $r31 = new ucar.nc2.dataset.VariableDS;

        $r33 = r0.<ucar.nc2.ncml.AggregationExisting: ucar.nc2.dataset.NetcdfDataset ncDataset>;

        $r32 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        specialinvoke $r31.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>($r33, null, null, $r4, $r32, $r4, null, null);

        r75 = $r31;

        virtualinvoke $r31.<ucar.nc2.dataset.VariableDS: void setProxyReader(ucar.nc2.ProxyReader)>(r0);

        $r34 = r0.<ucar.nc2.ncml.AggregationExisting: ucar.nc2.dataset.NetcdfDataset ncDataset>;

        $r35 = virtualinvoke $r34.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        virtualinvoke $r35.<ucar.nc2.Group: void addVariable(ucar.nc2.Variable)>($r31);

        $r36 = r0.<ucar.nc2.ncml.AggregationExisting: java.util.List aggVars>;

        interfaceinvoke $r36.<java.util.List: boolean add(java.lang.Object)>($r31);

        $r37 = new ucar.nc2.Attribute;

        specialinvoke $r37.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", "Time");

        virtualinvoke $r31.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r37);

        $r38 = new ucar.nc2.Attribute;

        specialinvoke $r38.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "time coordinate");

        virtualinvoke $r31.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r38);

        $r39 = new ucar.nc2.Attribute;

        specialinvoke $r39.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "time");

        virtualinvoke $r31.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r39);

     label11:
        $z4 = r0.<ucar.nc2.ncml.AggregationExisting: boolean timeUnitsChange>;

        if $z4 == 0 goto label12;

        virtualinvoke r0.<ucar.nc2.ncml.AggregationExisting: void readTimeCoordinates(ucar.nc2.dataset.VariableDS,ucar.nc2.util.CancelTask)>(r75, r10);

     label12:
        virtualinvoke r75.<ucar.nc2.dataset.VariableDS: void setSPobject(java.lang.Object)>(r74);

        virtualinvoke r0.<ucar.nc2.ncml.AggregationExisting: void persistRead()>();

        $r22 = r0.<ucar.nc2.ncml.AggregationExisting: ucar.nc2.dataset.NetcdfDataset ncDataset>;

        virtualinvoke r0.<ucar.nc2.ncml.AggregationExisting: void setDatasetAcquireProxy(ucar.nc2.ncml.Aggregation$Dataset,ucar.nc2.dataset.NetcdfDataset)>($r1, $r22);

        virtualinvoke $r1.<ucar.nc2.ncml.Aggregation$Dataset: void close(ucar.nc2.NetcdfFile)>($r2);

        $z0 = <ucar.nc2.ncml.AggregationExisting: boolean debugInvocation>;

        if $z0 == 0 goto label13;

        $r24 = <java.lang.System: java.io.PrintStream out>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = r0.<ucar.nc2.ncml.AggregationExisting: ucar.nc2.dataset.NetcdfDataset ncDataset>;

        $r26 = virtualinvoke $r25.<ucar.nc2.dataset.NetcdfDataset: java.lang.String getLocation()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" invocation count = ");

        $i1 = <ucar.nc2.ncml.AggregationOuterDimension: int invocation>;

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r30);

     label13:
        return;
    }

    protected void rebuildDataset() throws java.io.IOException
    {
        ucar.nc2.dataset.VariableDS r5;
        ucar.nc2.ncml.AggregationExisting r0;
        ucar.nc2.Variable $r4;
        java.lang.String $r3;
        ucar.nc2.dataset.NetcdfDataset $r1;
        ucar.nc2.Group $r2;
        boolean $z0;

        r0 := @this: ucar.nc2.ncml.AggregationExisting;

        specialinvoke r0.<ucar.nc2.ncml.AggregationOuterDimension: void rebuildDataset()>();

        $z0 = r0.<ucar.nc2.ncml.AggregationExisting: boolean timeUnitsChange>;

        if $z0 == 0 goto label1;

        $r1 = r0.<ucar.nc2.ncml.AggregationExisting: ucar.nc2.dataset.NetcdfDataset ncDataset>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r3 = r0.<ucar.nc2.ncml.AggregationExisting: java.lang.String dimName>;

        $r4 = virtualinvoke $r2.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r3);

        r5 = (ucar.nc2.dataset.VariableDS) $r4;

        virtualinvoke r0.<ucar.nc2.ncml.AggregationExisting: void readTimeCoordinates(ucar.nc2.dataset.VariableDS,ucar.nc2.util.CancelTask)>(r5, null);

     label1:
        return;
    }

    protected void readTimeCoordinates(ucar.nc2.dataset.VariableDS, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.util.Date r49, r50;
        ucar.nc2.ncml.Aggregation$Dataset r45;
        ucar.nc2.util.CancelTask r23;
        int[] $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        ucar.nc2.dataset.CoordinateAxis1DTime $r28;
        ucar.nc2.dataset.VariableDS r4, $r47;
        ucar.ma2.DataType $r6, $r7, $r10, $r11, $r12, $r48;
        java.lang.Exception $r40;
        java.util.List $r2, $r30;
        ucar.nc2.Attribute $r14;
        java.util.Date[] $r29;
        java.lang.StringBuilder $r31, $r33, $r35, $r36, $r38;
        ucar.nc2.NetcdfFile $r24, r46;
        ucar.nc2.units.DateFormatter $r19;
        java.lang.Throwable $r43;
        java.lang.AssertionError $r21;
        java.util.ArrayList $r0;
        int $i0, i1;
        ucar.nc2.Variable $r26;
        java.lang.String $r20, $r25, $r34, $r37, $r39, $r42, r44;
        double $d0;
        org.slf4j.Logger $r32;
        java.util.Iterator $r3, $r15, $r17;
        ucar.ma2.IndexIterator $r9;
        ucar.nc2.ncml.AggregationExisting r1;
        ucar.nc2.units.DateUnit $r13;
        java.io.IOException $r41;
        ucar.ma2.Array $r8;
        java.lang.Object $r16, $r18, $r22;
        ucar.nc2.dataset.NetcdfDataset $r27;

        r1 := @this: ucar.nc2.ncml.AggregationExisting;

        r4 := @parameter0: ucar.nc2.dataset.VariableDS;

        r23 := @parameter1: ucar.nc2.util.CancelTask;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        r44 = null;

        $r2 = virtualinvoke r1.<ucar.nc2.ncml.AggregationExisting: java.util.List getDatasets()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r22 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r45 = (ucar.nc2.ncml.Aggregation$Dataset) $r22;

        r46 = null;

     label02:
        $r24 = virtualinvoke r45.<ucar.nc2.ncml.Aggregation$Dataset: ucar.nc2.NetcdfFile acquireFile(ucar.nc2.util.CancelTask)>(r23);

        r46 = $r24;

        $r25 = virtualinvoke r4.<ucar.nc2.dataset.VariableDS: java.lang.String getName()>();

        $r26 = virtualinvoke $r24.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>($r25);

        if $r26 != null goto label04;

        $r32 = <ucar.nc2.ncml.AggregationExisting: org.slf4j.Logger logger>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readTimeCoordinates: variable = ");

        $r34 = virtualinvoke r4.<ucar.nc2.dataset.VariableDS: java.lang.String getName()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found in file ");

        $r37 = virtualinvoke r45.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String getLocation()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r32.<org.slf4j.Logger: void warn(java.lang.String)>($r39);

     label03:
        virtualinvoke r45.<ucar.nc2.ncml.Aggregation$Dataset: void close(ucar.nc2.NetcdfFile)>($r24);

        return;

     label04:
        $z4 = $r26 instanceof ucar.nc2.dataset.VariableDS;

        if $z4 == 0 goto label05;

        $r47 = (ucar.nc2.dataset.VariableDS) $r26;

        goto label06;

     label05:
        $r47 = new ucar.nc2.dataset.VariableDS;

        specialinvoke $r47.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.Group,ucar.nc2.Variable,boolean)>(null, $r26, 1);

     label06:
        $r27 = r1.<ucar.nc2.ncml.AggregationExisting: ucar.nc2.dataset.NetcdfDataset ncDataset>;

        $r28 = staticinvoke <ucar.nc2.dataset.CoordinateAxis1DTime: ucar.nc2.dataset.CoordinateAxis1DTime factory(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.VariableDS,java.util.Formatter)>($r27, $r47, null);

        $r29 = virtualinvoke $r28.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] getTimeDates()>();

        $r30 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r29);

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r30);

        if r44 != null goto label07;

        r44 = virtualinvoke $r26.<ucar.nc2.Variable: java.lang.String getUnitsString()>();

     label07:
        virtualinvoke r45.<ucar.nc2.ncml.Aggregation$Dataset: void close(ucar.nc2.NetcdfFile)>($r24);

        goto label10;

     label08:
        $r43 := @caughtexception;

     label09:
        virtualinvoke r45.<ucar.nc2.ncml.Aggregation$Dataset: void close(ucar.nc2.NetcdfFile)>(r46);

        throw $r43;

     label10:
        if r23 == null goto label11;

        $z5 = interfaceinvoke r23.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z5 == 0 goto label11;

        return;

     label11:
        goto label01;

     label12:
        $r5 = virtualinvoke r4.<ucar.nc2.dataset.VariableDS: int[] getShape()>();

        i1 = $r5[0];

        $z1 = <ucar.nc2.ncml.AggregationExisting: boolean $assertionsDisabled>;

        if $z1 != 0 goto label13;

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        if i1 == $i0 goto label13;

        $r21 = new java.lang.AssertionError;

        specialinvoke $r21.<java.lang.AssertionError: void <init>()>();

        throw $r21;

     label13:
        $r6 = virtualinvoke r4.<ucar.nc2.dataset.VariableDS: ucar.ma2.DataType getDataType()>();

        $r7 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if $r6 != $r7 goto label14;

        $r48 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        goto label15;

     label14:
        $r48 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

     label15:
        $r8 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r48, $r5);

        $r9 = virtualinvoke $r8.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        $r10 = virtualinvoke r4.<ucar.nc2.dataset.VariableDS: ucar.ma2.DataType getDataType()>();

        $r11 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if $r10 != $r11 goto label18;

        $r17 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label16:
        $z3 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label17;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r49 = (java.util.Date) $r18;

        $r19 = r1.<ucar.nc2.ncml.AggregationExisting: ucar.nc2.units.DateFormatter dateFormatter>;

        $r20 = virtualinvoke $r19.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>(r49);

        interfaceinvoke $r9.<ucar.ma2.IndexIterator: void setObjectNext(java.lang.Object)>($r20);

        goto label16;

     label17:
        goto label24;

     label18:
        $r12 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        virtualinvoke r4.<ucar.nc2.dataset.VariableDS: void setDataType(ucar.ma2.DataType)>($r12);

     label19:
        $r13 = new ucar.nc2.units.DateUnit;

        specialinvoke $r13.<ucar.nc2.units.DateUnit: void <init>(java.lang.String)>(r44);

     label20:
        goto label22;

     label21:
        $r40 := @caughtexception;

        $r41 = new java.io.IOException;

        $r42 = virtualinvoke $r40.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r41.<java.io.IOException: void <init>(java.lang.String)>($r42);

        throw $r41;

     label22:
        $r14 = new ucar.nc2.Attribute;

        specialinvoke $r14.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", r44);

        virtualinvoke r4.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r14);

        $r15 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label23:
        $z2 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label24;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r50 = (java.util.Date) $r16;

        $d0 = virtualinvoke $r13.<ucar.nc2.units.DateUnit: double makeValue(java.util.Date)>(r50);

        interfaceinvoke $r9.<ucar.ma2.IndexIterator: void setDoubleNext(double)>($d0);

        goto label23;

     label24:
        virtualinvoke r4.<ucar.nc2.dataset.VariableDS: void setCachedData(ucar.ma2.Array,boolean)>($r8, 0);

        return;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Exception from label19 to label20 with label21;
    }

    public void persistWrite() throws java.io.IOException
    {
        java.nio.channels.OverlappingFileLockException $r89;
        thredds.inventory.DatasetCollectionManager $r13, $r17, $r26, $r71;
        ucar.nc2.ncml.Aggregation$Dataset r30;
        java.io.PrintWriter $r5;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r19, $r21, $r23, $r24, $r27, $r33, $r34, $r36, $r37, $r39, $r40, $r41, $r42, $r50, $r51, $r53, $r54, $r57, $r59, $r61, $r62, $r63, $r64, $r66, $r69, $r70, $r73, $r74, $r76, $r77, $r79, $r80, $r83, $r85, $r86;
        java.lang.Throwable $r88;
        long $l0, $l1, $l3;
        ucar.nc2.util.DiskCache2 $r0, $r3;
        java.lang.String $r2, $r11, $r12, $r22, $r28, $r32, $r35, $r38, $r43, $r48, $r52, $r55, $r60, $r65, $r67, $r75, $r78, $r81, $r87;
        ucar.nc2.ncml.AggregationExisting r1;
        java.io.FileOutputStream $r91;
        ucar.ma2.Array $r49;
        java.io.File $r4, $r82;
        ucar.nc2.units.TimeUnit $r14, $r72;
        java.util.Date $r25;
        java.nio.channels.FileLock $r93;
        ucar.nc2.ncml.Aggregation$Type $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension r31;
        java.util.List $r15, $r44;
        ucar.nc2.ncml.AggregationOuterDimension$CacheVar r47;
        int $i2;
        org.slf4j.Logger $r18, $r20, $r56, $r58, $r68, $r84;
        java.util.Iterator $r16, $r45;
        java.lang.Object $r29, $r46;
        java.nio.channels.FileChannel r90, $r92;

        r1 := @this: ucar.nc2.ncml.AggregationExisting;

        $r0 = <ucar.nc2.ncml.AggregationExisting: ucar.nc2.util.DiskCache2 diskCache2>;

        if $r0 != null goto label01;

        return;

     label01:
        $r2 = specialinvoke r1.<ucar.nc2.ncml.AggregationExisting: java.lang.String getCacheName()>();

        if $r2 != null goto label02;

        return;

     label02:
        $r3 = <ucar.nc2.ncml.AggregationExisting: ucar.nc2.util.DiskCache2 diskCache2>;

        $r4 = virtualinvoke $r3.<ucar.nc2.util.DiskCache2: java.io.File getCacheFile(java.lang.String)>($r2);

        $z0 = r1.<ucar.nc2.ncml.AggregationExisting: boolean cacheDirty>;

        if $z0 != 0 goto label03;

        $z5 = virtualinvoke $r4.<java.io.File: boolean exists()>();

        if $z5 == 0 goto label03;

        return;

     label03:
        r90 = null;

     label04:
        $z1 = virtualinvoke $r4.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label05;

        $r82 = virtualinvoke $r4.<java.io.File: java.io.File getParentFile()>();

        $z4 = virtualinvoke $r82.<java.io.File: boolean mkdirs()>();

        if $z4 != 0 goto label05;

        $r84 = <ucar.nc2.ncml.AggregationExisting: org.slf4j.Logger logger>;

        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        $r85 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cant make cache directory= ");

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r84.<org.slf4j.Logger: void error(java.lang.String)>($r87);

     label05:
        $r91 = new java.io.FileOutputStream;

        specialinvoke $r91.<java.io.FileOutputStream: void <init>(java.io.File)>($r4);

        $r92 = virtualinvoke $r91.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>();

        r90 = $r92;

     label06:
        $r93 = virtualinvoke $r92.<java.nio.channels.FileChannel: java.nio.channels.FileLock tryLock()>();

     label07:
        goto label11;

     label08:
        $r89 := @caughtexception;

     label09:
        if $r92 == null goto label10;

        virtualinvoke $r92.<java.nio.channels.FileChannel: void close()>();

     label10:
        return;

     label11:
        if $r93 != null goto label14;

     label12:
        if $r92 == null goto label13;

        virtualinvoke $r92.<java.nio.channels.FileChannel: void close()>();

     label13:
        return;

     label14:
        $r5 = new java.io.PrintWriter;

        specialinvoke $r5.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r91);

        virtualinvoke $r5.<java.io.PrintWriter: void print(java.lang.String)>("<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n");

        virtualinvoke $r5.<java.io.PrintWriter: void print(java.lang.String)>("<aggregation xmlns=\'http://www.unidata.ucar.edu/namespaces/netcdf/ncml-2.2\' version=\'3\' ");

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("type=\'");

        $r8 = r1.<ucar.nc2.ncml.AggregationExisting: ucar.nc2.ncml.Aggregation$Type type>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintWriter: void print(java.lang.String)>($r11);

        $r12 = r1.<ucar.nc2.ncml.AggregationExisting: java.lang.String dimName>;

        if $r12 == null goto label15;

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dimName=\'");

        $r78 = r1.<ucar.nc2.ncml.AggregationExisting: java.lang.String dimName>;

        $r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ");

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintWriter: void print(java.lang.String)>($r81);

     label15:
        $r13 = r1.<ucar.nc2.ncml.AggregationExisting: thredds.inventory.DatasetCollectionManager datasetManager>;

        $r14 = virtualinvoke $r13.<thredds.inventory.DatasetCollectionManager: ucar.nc2.units.TimeUnit getRecheck()>();

        if $r14 == null goto label16;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("recheckEvery=\'");

        $r71 = r1.<ucar.nc2.ncml.AggregationExisting: thredds.inventory.DatasetCollectionManager datasetManager>;

        $r72 = virtualinvoke $r71.<thredds.inventory.DatasetCollectionManager: ucar.nc2.units.TimeUnit getRecheck()>();

        $r73 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r72);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ");

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintWriter: void print(java.lang.String)>($r75);

     label16:
        virtualinvoke $r5.<java.io.PrintWriter: void print(java.lang.String)>(">\n");

        $r15 = virtualinvoke r1.<ucar.nc2.ncml.AggregationExisting: java.util.List getDatasets()>();

        $r16 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label17:
        $z6 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label22;

        $r29 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r30 = (ucar.nc2.ncml.Aggregation$Dataset) $r29;

        r31 = (ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension) r30;

        $r32 = virtualinvoke r31.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.lang.String getId()>();

        if $r32 != null goto label18;

        $r68 = <ucar.nc2.ncml.AggregationExisting: org.slf4j.Logger logger>;

        interfaceinvoke $r68.<org.slf4j.Logger: void warn(java.lang.String)>("id is null");

     label18:
        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <netcdf id=\'");

        $r35 = virtualinvoke r31.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.lang.String getId()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintWriter: void print(java.lang.String)>($r38);

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ncoords=\'");

        $i2 = virtualinvoke r31.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int getNcoords(ucar.nc2.util.CancelTask)>(null);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' >\n");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintWriter: void print(java.lang.String)>($r43);

        $r44 = r1.<ucar.nc2.ncml.AggregationExisting: java.util.List cacheList>;

        $r45 = interfaceinvoke $r44.<java.util.List: java.util.Iterator iterator()>();

     label19:
        $z7 = interfaceinvoke $r45.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label21;

        $r46 = interfaceinvoke $r45.<java.util.Iterator: java.lang.Object next()>();

        r47 = (ucar.nc2.ncml.AggregationOuterDimension$CacheVar) $r46;

        $r48 = virtualinvoke r31.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: java.lang.String getId()>();

        $r49 = virtualinvoke r47.<ucar.nc2.ncml.AggregationOuterDimension$CacheVar: ucar.ma2.Array getData(java.lang.String)>($r48);

        if $r49 == null goto label20;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    <cache varName=\'");

        $r52 = r47.<ucar.nc2.ncml.AggregationOuterDimension$CacheVar: java.lang.String varName>;

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' >");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintWriter: void print(java.lang.String)>($r55);

        staticinvoke <ucar.nc2.NCdumpW: void printArray(ucar.ma2.Array,java.io.PrintWriter)>($r49, $r5);

        virtualinvoke $r5.<java.io.PrintWriter: void print(java.lang.String)>("</cache>\n");

        $r56 = <ucar.nc2.ncml.AggregationExisting: org.slf4j.Logger logger>;

        $z3 = interfaceinvoke $r56.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z3 == 0 goto label20;

        $r58 = <ucar.nc2.ncml.AggregationExisting: org.slf4j.Logger logger>;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" wrote array = ");

        $r60 = r47.<ucar.nc2.ncml.AggregationOuterDimension$CacheVar: java.lang.String varName>;

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nelems= ");

        $l3 = virtualinvoke $r49.<ucar.ma2.Array: long getSize()>();

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r65 = virtualinvoke r30.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String getLocation()>();

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r58.<org.slf4j.Logger: void debug(java.lang.String)>($r67);

     label20:
        goto label19;

     label21:
        virtualinvoke $r5.<java.io.PrintWriter: void print(java.lang.String)>("  </netcdf>\n");

        goto label17;

     label22:
        virtualinvoke $r5.<java.io.PrintWriter: void print(java.lang.String)>("</aggregation>\n");

        virtualinvoke $r5.<java.io.PrintWriter: void close()>();

        $r17 = r1.<ucar.nc2.ncml.AggregationExisting: thredds.inventory.DatasetCollectionManager datasetManager>;

        $l0 = virtualinvoke $r17.<thredds.inventory.DatasetCollectionManager: long getLastScanned()>();

        virtualinvoke $r4.<java.io.File: boolean setLastModified(long)>($l0);

        r1.<ucar.nc2.ncml.AggregationExisting: boolean cacheDirty> = 0;

        $r18 = <ucar.nc2.ncml.AggregationExisting: org.slf4j.Logger logger>;

        $z2 = interfaceinvoke $r18.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z2 == 0 goto label23;

        $r20 = <ucar.nc2.ncml.AggregationExisting: org.slf4j.Logger logger>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Aggregation persisted = ");

        $r22 = virtualinvoke $r4.<java.io.File: java.lang.String getPath()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lastModified= ");

        $r25 = new java.util.Date;

        $r26 = r1.<ucar.nc2.ncml.AggregationExisting: thredds.inventory.DatasetCollectionManager datasetManager>;

        $l1 = virtualinvoke $r26.<thredds.inventory.DatasetCollectionManager: long getLastScanned()>();

        specialinvoke $r25.<java.util.Date: void <init>(long)>($l1);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<org.slf4j.Logger: void debug(java.lang.String)>($r28);

     label23:
        if $r92 == null goto label27;

        virtualinvoke $r92.<java.nio.channels.FileChannel: void close()>();

        goto label27;

     label24:
        $r88 := @caughtexception;

     label25:
        if r90 == null goto label26;

        virtualinvoke r90.<java.nio.channels.FileChannel: void close()>();

     label26:
        throw $r88;

     label27:
        return;

        catch java.nio.channels.OverlappingFileLockException from label06 to label07 with label08;
        catch java.lang.Throwable from label04 to label09 with label24;
        catch java.lang.Throwable from label11 to label12 with label24;
        catch java.lang.Throwable from label14 to label23 with label24;
        catch java.lang.Throwable from label24 to label25 with label24;
    }

    protected void persistRead()
    {
        ucar.nc2.ncml.Aggregation$Dataset r89;
        org.jdom.Namespace $r16, $r90;
        java.lang.Exception $r72;
        java.lang.StringBuilder $r6, $r7, $r9, $r29, $r31, $r32, $r39, $r41, $r42, $r43, $r44, $r48, $r50, $r51, $r53, $r55, $r56, $r59, $r61, $r62, $r66, $r68, $r70, $r75, $r77, $r78, $r81, $r83, $r84, $r85, $r87;
        ucar.nc2.util.DiskCache2 $r0, $r3;
        java.lang.String $r2, $r8, $r10, $r12, $r21, $r27, $r33, $r34, $r45, $r46, $r52, $r57, $r63, $r65, $r69, $r71, $r79, $r86, $r88;
        ucar.nc2.ncml.AggregationExisting r1;
        java.lang.NumberFormatException $r74;
        java.io.IOException $r80;
        ucar.ma2.Array $r38;
        java.io.File $r4;
        org.jdom.Element $r11, r20, r26;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension r23;
        ucar.ma2.DataType $r37;
        java.util.List $r14, $r17, $r91;
        java.util.HashMap $r13;
        java.lang.String[] $r36;
        ucar.nc2.ncml.AggregationOuterDimension$CacheVar $r28;
        int $i0, $i1, $i2, $i3, $i4;
        java.io.PrintStream $r82;
        org.slf4j.Logger $r5, $r24, $r30, $r35, $r40, $r47, $r49, $r54, $r58, $r60, $r67, $r73, $r76;
        java.util.Iterator $r15, $r18, $r92;
        java.lang.Object $r19, $r22, $r25, $r64;

        r1 := @this: ucar.nc2.ncml.AggregationExisting;

        $r0 = <ucar.nc2.ncml.AggregationExisting: ucar.nc2.util.DiskCache2 diskCache2>;

        if $r0 != null goto label01;

        return;

     label01:
        $r2 = specialinvoke r1.<ucar.nc2.ncml.AggregationExisting: java.lang.String getCacheName()>();

        if $r2 != null goto label02;

        return;

     label02:
        $r3 = <ucar.nc2.ncml.AggregationExisting: ucar.nc2.util.DiskCache2 diskCache2>;

        $r4 = virtualinvoke $r3.<ucar.nc2.util.DiskCache2: java.io.File getCacheFile(java.lang.String)>($r2);

        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label03;

        return;

     label03:
        $r5 = <ucar.nc2.ncml.AggregationExisting: org.slf4j.Logger logger>;

        $z1 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label04;

        $r67 = <ucar.nc2.ncml.AggregationExisting: org.slf4j.Logger logger>;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Try to Read cache ");

        $r69 = virtualinvoke $r4.<java.io.File: java.lang.String getPath()>();

        $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r67.<org.slf4j.Logger: void debug(java.lang.String)>($r71);

     label04:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file:");

        $r8 = virtualinvoke $r4.<java.io.File: java.lang.String getPath()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = staticinvoke <ucar.nc2.util.xml.Parse: org.jdom.Element readRootElement(java.lang.String)>($r10);

     label05:
        goto label08;

     label06:
        $r80 := @caughtexception;

        $z9 = <ucar.nc2.ncml.AggregationExisting: boolean debugCache>;

        if $z9 == 0 goto label07;

        $r82 = <java.lang.System: java.io.PrintStream out>;

        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" No cache for ");

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r86 = virtualinvoke $r80.<java.io.IOException: java.lang.String getMessage()>();

        $r87 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86);

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r82.<java.io.PrintStream: void println(java.lang.String)>($r88);

     label07:
        return;

     label08:
        $r12 = virtualinvoke $r11.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("version");

        if $r12 == null goto label09;

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("3");

        if $z2 != 0 goto label10;

     label09:
        return;

     label10:
        $r13 = new java.util.HashMap;

        specialinvoke $r13.<java.util.HashMap: void <init>()>();

        $r14 = virtualinvoke r1.<ucar.nc2.ncml.AggregationExisting: java.util.List getDatasets()>();

        $r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z3 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label12;

        $r64 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r89 = (ucar.nc2.ncml.Aggregation$Dataset) $r64;

        $r65 = virtualinvoke r89.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String getId()>();

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r65, r89);

        goto label11;

     label12:
        $r16 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r17 = virtualinvoke $r11.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("netcdf", $r16);

        $r18 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z4 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label30;

        $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r20 = (org.jdom.Element) $r19;

        $r21 = virtualinvoke r20.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("id");

        $r22 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r21);

        r23 = (ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension) $r22;

        if null != r23 goto label14;

        $r58 = <ucar.nc2.ncml.AggregationExisting: org.slf4j.Logger logger>;

        $z8 = interfaceinvoke $r58.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z8 == 0 goto label29;

        $r60 = <ucar.nc2.ncml.AggregationExisting: org.slf4j.Logger logger>;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" have cache but no dataset= ");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r60.<org.slf4j.Logger: void debug(java.lang.String)>($r63);

        goto label29;

     label14:
        $r24 = <ucar.nc2.ncml.AggregationExisting: org.slf4j.Logger logger>;

        $z5 = interfaceinvoke $r24.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z5 == 0 goto label15;

        $r54 = <ucar.nc2.ncml.AggregationExisting: org.slf4j.Logger logger>;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" use cache for dataset= ");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r54.<org.slf4j.Logger: void debug(java.lang.String)>($r57);

     label15:
        $i0 = r23.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int ncoord>;

        if $i0 != 0 goto label19;

        $r46 = virtualinvoke r20.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("ncoords");

     label16:
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r46);

        r23.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int ncoord> = $i3;

        $r47 = <ucar.nc2.ncml.AggregationExisting: org.slf4j.Logger logger>;

        $z7 = interfaceinvoke $r47.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z7 == 0 goto label17;

        $r49 = <ucar.nc2.ncml.AggregationExisting: org.slf4j.Logger logger>;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Read the cache; ncoords = ");

        $i4 = r23.<ucar.nc2.ncml.AggregationOuterDimension$DatasetOuterDimension: int ncoord>;

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r49.<org.slf4j.Logger: void debug(java.lang.String)>($r52);

     label17:
        goto label19;

     label18:
        $r74 := @caughtexception;

        $r76 = <ucar.nc2.ncml.AggregationExisting: org.slf4j.Logger logger>;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad ncoord attribute on dataset=");

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r76.<org.slf4j.Logger: void error(java.lang.String)>($r79);

     label19:
        $r90 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r91 = virtualinvoke r20.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("cache", $r90);

        $r92 = interfaceinvoke $r91.<java.util.List: java.util.Iterator iterator()>();

     label20:
        $z10 = interfaceinvoke $r92.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label29;

        $r25 = interfaceinvoke $r92.<java.util.Iterator: java.lang.Object next()>();

        r26 = (org.jdom.Element) $r25;

        $r27 = virtualinvoke r26.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("varName");

        $r28 = virtualinvoke r1.<ucar.nc2.ncml.AggregationExisting: ucar.nc2.ncml.AggregationOuterDimension$CacheVar findCacheVariable(java.lang.String)>($r27);

        if $r28 == null goto label27;

        $r34 = virtualinvoke r26.<org.jdom.Element: java.lang.String getText()>();

        $i1 = virtualinvoke $r34.<java.lang.String: int length()>();

        if $i1 != 0 goto label21;

        goto label20;

     label21:
        $r35 = <ucar.nc2.ncml.AggregationExisting: org.slf4j.Logger logger>;

        $z6 = interfaceinvoke $r35.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z6 == 0 goto label22;

        $r40 = <ucar.nc2.ncml.AggregationExisting: org.slf4j.Logger logger>;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" read data for var = ");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" size= ");

        $i2 = virtualinvoke $r34.<java.lang.String: int length()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r40.<org.slf4j.Logger: void debug(java.lang.String)>($r45);

     label22:
        $r36 = virtualinvoke $r34.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

     label23:
        $r37 = $r28.<ucar.nc2.ncml.AggregationOuterDimension$CacheVar: ucar.ma2.DataType dtype>;

        $r38 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array makeArray(ucar.ma2.DataType,java.lang.String[])>($r37, $r36);

        virtualinvoke $r28.<ucar.nc2.ncml.AggregationOuterDimension$CacheVar: void putData(java.lang.String,ucar.ma2.Array)>($r21, $r38);

     label24:
        goto label26;

     label25:
        $r72 := @caughtexception;

        $r73 = <ucar.nc2.ncml.AggregationExisting: org.slf4j.Logger logger>;

        interfaceinvoke $r73.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Error reading cached data ", $r72);

     label26:
        goto label28;

     label27:
        $r30 = <ucar.nc2.ncml.AggregationExisting: org.slf4j.Logger logger>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not a cache var=");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r30.<org.slf4j.Logger: void warn(java.lang.String)>($r33);

     label28:
        goto label20;

     label29:
        goto label13;

     label30:
        return;

        catch java.io.IOException from label04 to label05 with label06;
        catch java.lang.NumberFormatException from label16 to label17 with label18;
        catch java.lang.Exception from label23 to label24 with label25;
    }

    private java.lang.String getCacheName()
    {
        ucar.nc2.ncml.AggregationExisting r0;
        java.lang.String $r2, r4;
        ucar.nc2.dataset.NetcdfDataset $r1, $r3;

        r0 := @this: ucar.nc2.ncml.AggregationExisting;

        $r1 = r0.<ucar.nc2.ncml.AggregationExisting: ucar.nc2.dataset.NetcdfDataset ncDataset>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.NetcdfDataset: java.lang.String getLocation()>();

        r4 = $r2;

        if $r2 != null goto label1;

        $r3 = r0.<ucar.nc2.ncml.AggregationExisting: ucar.nc2.dataset.NetcdfDataset ncDataset>;

        r4 = virtualinvoke $r3.<ucar.nc2.dataset.NetcdfDataset: java.lang.String getCacheName()>();

     label1:
        return r4;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lucar/nc2/ncml/AggregationExisting;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <ucar.nc2.ncml.AggregationExisting: boolean $assertionsDisabled> = $z1;

        return;
    }
}
