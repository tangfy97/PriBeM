public final class org.apache.commons.collections.bag.UnmodifiableBag extends org.apache.commons.collections.bag.AbstractBagDecorator implements org.apache.commons.collections.Unmodifiable, java.io.Serializable
{
    private static final long serialVersionUID;

    public static org.apache.commons.collections.Bag decorate(org.apache.commons.collections.Bag)
    {
        org.apache.commons.collections.Bag r0;
        org.apache.commons.collections.bag.UnmodifiableBag $r1;
        boolean $z0;

        r0 := @parameter0: org.apache.commons.collections.Bag;

        $z0 = r0 instanceof org.apache.commons.collections.Unmodifiable;

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r1 = new org.apache.commons.collections.bag.UnmodifiableBag;

        specialinvoke $r1.<org.apache.commons.collections.bag.UnmodifiableBag: void <init>(org.apache.commons.collections.Bag)>(r0);

        return $r1;
    }

    private void <init>(org.apache.commons.collections.Bag)
    {
        org.apache.commons.collections.Bag r1;
        org.apache.commons.collections.bag.UnmodifiableBag r0;

        r0 := @this: org.apache.commons.collections.bag.UnmodifiableBag;

        r1 := @parameter0: org.apache.commons.collections.Bag;

        specialinvoke r0.<org.apache.commons.collections.bag.AbstractBagDecorator: void <init>(org.apache.commons.collections.Bag)>(r1);

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream r0;
        org.apache.commons.collections.bag.UnmodifiableBag r1;
        java.util.Collection $r2;

        r1 := @this: org.apache.commons.collections.bag.UnmodifiableBag;

        r0 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r0.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r2 = r1.<org.apache.commons.collections.bag.UnmodifiableBag: java.util.Collection collection>;

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.commons.collections.bag.UnmodifiableBag r1;
        java.util.Collection $r3;
        java.io.ObjectInputStream r0;
        java.lang.Object $r2;

        r1 := @this: org.apache.commons.collections.bag.UnmodifiableBag;

        r0 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r0.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = virtualinvoke r0.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r3 = (java.util.Collection) $r2;

        r1.<org.apache.commons.collections.bag.UnmodifiableBag: java.util.Collection collection> = $r3;

        return;
    }

    public java.util.Iterator iterator()
    {
        org.apache.commons.collections.bag.UnmodifiableBag r0;
        java.util.Iterator $r2, $r3;
        java.util.Collection $r1;

        r0 := @this: org.apache.commons.collections.bag.UnmodifiableBag;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.bag.UnmodifiableBag: java.util.Collection getCollection()>();

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

        $r3 = staticinvoke <org.apache.commons.collections.iterators.UnmodifiableIterator: java.util.Iterator decorate(java.util.Iterator)>($r2);

        return $r3;
    }

    public boolean add(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object r2;
        org.apache.commons.collections.bag.UnmodifiableBag r1;

        r1 := @this: org.apache.commons.collections.bag.UnmodifiableBag;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean addAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.collections.bag.UnmodifiableBag r1;
        java.util.Collection r2;

        r1 := @this: org.apache.commons.collections.bag.UnmodifiableBag;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void clear()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.collections.bag.UnmodifiableBag r1;

        r1 := @this: org.apache.commons.collections.bag.UnmodifiableBag;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean remove(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object r2;
        org.apache.commons.collections.bag.UnmodifiableBag r1;

        r1 := @this: org.apache.commons.collections.bag.UnmodifiableBag;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.collections.bag.UnmodifiableBag r1;
        java.util.Collection r2;

        r1 := @this: org.apache.commons.collections.bag.UnmodifiableBag;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.collections.bag.UnmodifiableBag r1;
        java.util.Collection r2;

        r1 := @this: org.apache.commons.collections.bag.UnmodifiableBag;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean add(java.lang.Object, int)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.collections.bag.UnmodifiableBag r1;
        int i0;
        java.lang.Object r2;

        r1 := @this: org.apache.commons.collections.bag.UnmodifiableBag;

        r2 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean remove(java.lang.Object, int)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.collections.bag.UnmodifiableBag r1;
        int i0;
        java.lang.Object r2;

        r1 := @this: org.apache.commons.collections.bag.UnmodifiableBag;

        r2 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.util.Set uniqueSet()
    {
        org.apache.commons.collections.bag.UnmodifiableBag r0;
        java.util.Set $r2, $r3;
        org.apache.commons.collections.Bag $r1;

        r0 := @this: org.apache.commons.collections.bag.UnmodifiableBag;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.bag.UnmodifiableBag: org.apache.commons.collections.Bag getBag()>();

        $r2 = interfaceinvoke $r1.<org.apache.commons.collections.Bag: java.util.Set uniqueSet()>();

        $r3 = staticinvoke <org.apache.commons.collections.set.UnmodifiableSet: java.util.Set decorate(java.util.Set)>($r2);

        return $r3;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections.bag.UnmodifiableBag: long serialVersionUID> = -1873799975157099624L;

        return;
    }
}
