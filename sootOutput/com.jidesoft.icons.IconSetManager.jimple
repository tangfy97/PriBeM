public class com.jidesoft.icons.IconSetManager extends java.lang.Object
{
    private java.util.Map _availableStyles;
    private java.lang.String _activeIconSetName;
    private com.jidesoft.icons.IconSet _activeIconSet;

    public void <init>()
    {
        com.jidesoft.icons.IconSetManager r0;

        r0 := @this: com.jidesoft.icons.IconSetManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jidesoft.icons.IconSetManager: java.lang.String _activeIconSetName> = null;

        r0.<com.jidesoft.icons.IconSetManager: com.jidesoft.icons.IconSet _activeIconSet> = null;

        return;
    }

    public com.jidesoft.icons.IconSet findIconSet(java.lang.String)
    {
        java.util.Map $r1, $r3;
        java.lang.Object $r4;
        java.lang.String r2;
        com.jidesoft.icons.IconSetManager r0;
        com.jidesoft.icons.IconSet $r5;

        r0 := @this: com.jidesoft.icons.IconSetManager;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.jidesoft.icons.IconSetManager: java.util.Map _availableStyles>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<com.jidesoft.icons.IconSetManager: java.util.Map _availableStyles>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r5 = (com.jidesoft.icons.IconSet) $r4;

        return $r5;
    }

    public java.lang.String getActiveIconSetName()
    {
        java.lang.String $r1;
        com.jidesoft.icons.IconSetManager r0;

        r0 := @this: com.jidesoft.icons.IconSetManager;

        $r1 = r0.<com.jidesoft.icons.IconSetManager: java.lang.String _activeIconSetName>;

        return $r1;
    }

    public com.jidesoft.icons.IconSet getActiveIconSet()
    {
        com.jidesoft.icons.IconSetManager r0;
        com.jidesoft.icons.IconSet $r1;

        r0 := @this: com.jidesoft.icons.IconSetManager;

        $r1 = r0.<com.jidesoft.icons.IconSetManager: com.jidesoft.icons.IconSet _activeIconSet>;

        return $r1;
    }

    public void add(java.lang.String, int[], java.lang.String)
    {
        java.util.HashMap $r8;
        com.jidesoft.icons.IconSet $r3;
        int[] r4;
        java.util.Map $r1, $r6, $r7;
        int $i0;
        java.lang.String r2, r5;
        com.jidesoft.icons.IconSetManager r0;

        r0 := @this: com.jidesoft.icons.IconSetManager;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: int[];

        r5 := @parameter2: java.lang.String;

        $r1 = r0.<com.jidesoft.icons.IconSetManager: java.util.Map _availableStyles>;

        if $r1 != null goto label1;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<com.jidesoft.icons.IconSetManager: java.util.Map _availableStyles> = $r8;

     label1:
        $r6 = r0.<com.jidesoft.icons.IconSetManager: java.util.Map _availableStyles>;

        $r3 = new com.jidesoft.icons.IconSet;

        specialinvoke $r3.<com.jidesoft.icons.IconSet: void <init>(java.lang.String,int[],java.lang.String)>(r2, r4, r5);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r3);

        $r7 = r0.<com.jidesoft.icons.IconSetManager: java.util.Map _availableStyles>;

        $i0 = interfaceinvoke $r7.<java.util.Map: int size()>();

        if $i0 != 1 goto label2;

        virtualinvoke r0.<com.jidesoft.icons.IconSetManager: void setActiveIconSetName(java.lang.String)>(r2);

     label2:
        return;
    }

    public void remove(java.lang.String)
    {
        java.util.Map $r1, $r3;
        java.lang.String r2;
        com.jidesoft.icons.IconSetManager r0;

        r0 := @this: com.jidesoft.icons.IconSetManager;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.jidesoft.icons.IconSetManager: java.util.Map _availableStyles>;

        if $r1 == null goto label1;

        $r3 = r0.<com.jidesoft.icons.IconSetManager: java.util.Map _availableStyles>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

     label1:
        return;
    }

    public void setActiveIconSetName(java.lang.String)
    {
        java.lang.IllegalArgumentException $r3;
        com.jidesoft.icons.IconSet $r2;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String r1, $r8;
        com.jidesoft.icons.IconSetManager r0;

        r0 := @this: com.jidesoft.icons.IconSetManager;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.jidesoft.icons.IconSetManager: com.jidesoft.icons.IconSet findIconSet(java.lang.String)>(r1);

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Icon set \"");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" not found");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label1:
        r0.<com.jidesoft.icons.IconSetManager: com.jidesoft.icons.IconSet _activeIconSet> = $r2;

        r0.<com.jidesoft.icons.IconSetManager: java.lang.String _activeIconSetName> = r1;

        return;
    }

    public javax.swing.ImageIcon getImageIcon(java.lang.String)
    {
        javax.swing.ImageIcon $r2;
        java.lang.String r1;
        com.jidesoft.icons.IconSetManager r0;

        r0 := @this: com.jidesoft.icons.IconSetManager;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.jidesoft.icons.IconSetManager: javax.swing.ImageIcon getImageIcon(java.lang.String,int)>(r1, 16);

        return $r2;
    }

    public javax.swing.ImageIcon getImageIcon(java.lang.String, int)
    {
        com.jidesoft.icons.IconSet $r1, $r3;
        int i0, $i1;
        javax.swing.ImageIcon $r14, $r15;
        java.lang.String $r2, r11, $r13;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12;
        com.jidesoft.icons.IconSetManager r0;

        r0 := @this: com.jidesoft.icons.IconSetManager;

        r11 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = r0.<com.jidesoft.icons.IconSetManager: com.jidesoft.icons.IconSet _activeIconSet>;

        $r2 = virtualinvoke $r1.<com.jidesoft.icons.IconSet: java.lang.String getPackageName()>();

        $r3 = r0.<com.jidesoft.icons.IconSetManager: com.jidesoft.icons.IconSet _activeIconSet>;

        $i1 = virtualinvoke $r3.<com.jidesoft.icons.IconSet: int getNextAvailableSize(int)>(i0);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/png/");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getImageIcon(java.lang.Class,java.lang.String)>(class "Lcom/jidesoft/icons/IconSetManager;", $r13);

        if $i1 != i0 goto label1;

        return $r14;

     label1:
        $r15 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getScaledImage(java.awt.Component,javax.swing.ImageIcon,int,int)>(null, $r14, i0, i0);

        return $r15;
    }

    public javax.swing.ImageIcon getOverlayImageIcon(java.lang.String, int, java.lang.String, int)
    {
        java.awt.Insets $r3;
        int i0, i1;
        javax.swing.ImageIcon $r4;
        java.lang.String r1, r2;
        com.jidesoft.icons.IconSetManager r0;

        r0 := @this: com.jidesoft.icons.IconSetManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        $r3 = new java.awt.Insets;

        specialinvoke $r3.<java.awt.Insets: void <init>(int,int,int,int)>(0, 0, 0, 0);

        $r4 = virtualinvoke r0.<com.jidesoft.icons.IconSetManager: javax.swing.ImageIcon getOverlayImageIcon(java.lang.String,int,java.lang.String,int,java.awt.Insets)>(r1, i0, r2, i1, $r3);

        return $r4;
    }

    public javax.swing.ImageIcon getOverlayImageIcon(java.lang.String, int, java.lang.String, int, java.awt.Insets)
    {
        java.awt.Insets r6;
        int i0, $i1, $i2, $i3, $i4, i5;
        javax.swing.ImageIcon $r2, $r4, $r5, $r7;
        java.lang.String r1, r3;
        com.jidesoft.icons.IconSetManager r0;

        r0 := @this: com.jidesoft.icons.IconSetManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r3 := @parameter2: java.lang.String;

        i5 := @parameter3: int;

        r6 := @parameter4: java.awt.Insets;

        $r2 = virtualinvoke r0.<com.jidesoft.icons.IconSetManager: javax.swing.ImageIcon getImageIcon(java.lang.String,int)>(r1, i0);

        if $r2 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke r0.<com.jidesoft.icons.IconSetManager: javax.swing.ImageIcon getImageIcon(java.lang.String,int)>(r3, i0);

        if $r4 != null goto label2;

        return $r2;

     label2:
        $i4 = i0 / 4;

        $i3 = i0 / 4;

        $i2 = i0 / 2;

        $i1 = i0 / 2;

        $r5 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getIcon(java.awt.Component,javax.swing.ImageIcon,int,int,int,int)>(null, $r4, $i4, $i3, $i2, $i1);

        $r7 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getOverlayIcon(java.awt.Component,javax.swing.ImageIcon,javax.swing.ImageIcon,int,java.awt.Insets)>(null, $r2, $r5, i5, r6);

        return $r7;
    }

    public javax.swing.ImageIcon getOverlayImageIcon(java.lang.String, int, java.lang.String, int, int, java.awt.Insets)
    {
        java.awt.Insets r5;
        int i0, i1, i2;
        javax.swing.ImageIcon $r2, $r4, $r6;
        java.lang.String r1, r3;
        com.jidesoft.icons.IconSetManager r0;

        r0 := @this: com.jidesoft.icons.IconSetManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r3 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r5 := @parameter5: java.awt.Insets;

        $r2 = virtualinvoke r0.<com.jidesoft.icons.IconSetManager: javax.swing.ImageIcon getImageIcon(java.lang.String,int)>(r1, i0);

        if $r2 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke r0.<com.jidesoft.icons.IconSetManager: javax.swing.ImageIcon getImageIcon(java.lang.String,int)>(r3, i1);

        if $r4 != null goto label2;

        return $r2;

     label2:
        $r6 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon getOverlayIcon(java.awt.Component,javax.swing.ImageIcon,javax.swing.ImageIcon,int,java.awt.Insets)>(null, $r2, $r4, i2, r5);

        return $r6;
    }
}
