public class org.bouncycastle.crypto.io.MacOutputStream extends java.io.FilterOutputStream
{
    protected org.bouncycastle.crypto.Mac mac;

    public void <init>(java.io.OutputStream, org.bouncycastle.crypto.Mac)
    {
        java.io.OutputStream r1;
        org.bouncycastle.crypto.Mac r2;
        org.bouncycastle.crypto.io.MacOutputStream r0;

        r0 := @this: org.bouncycastle.crypto.io.MacOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: org.bouncycastle.crypto.Mac;

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1);

        r0.<org.bouncycastle.crypto.io.MacOutputStream: org.bouncycastle.crypto.Mac mac> = r2;

        return;
    }

    public void write(int) throws java.io.IOException
    {
        java.io.OutputStream $r2;
        byte $b1;
        int i0;
        org.bouncycastle.crypto.Mac $r1;
        org.bouncycastle.crypto.io.MacOutputStream r0;

        r0 := @this: org.bouncycastle.crypto.io.MacOutputStream;

        i0 := @parameter0: int;

        $r1 = r0.<org.bouncycastle.crypto.io.MacOutputStream: org.bouncycastle.crypto.Mac mac>;

        $b1 = (byte) i0;

        interfaceinvoke $r1.<org.bouncycastle.crypto.Mac: void update(byte)>($b1);

        $r2 = r0.<org.bouncycastle.crypto.io.MacOutputStream: java.io.OutputStream out>;

        virtualinvoke $r2.<java.io.OutputStream: void write(int)>(i0);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        java.io.OutputStream $r3;
        byte[] r1;
        int i0, i1;
        org.bouncycastle.crypto.Mac $r2;
        org.bouncycastle.crypto.io.MacOutputStream r0;

        r0 := @this: org.bouncycastle.crypto.io.MacOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.bouncycastle.crypto.io.MacOutputStream: org.bouncycastle.crypto.Mac mac>;

        interfaceinvoke $r2.<org.bouncycastle.crypto.Mac: void update(byte[],int,int)>(r1, i0, i1);

        $r3 = r0.<org.bouncycastle.crypto.io.MacOutputStream: java.io.OutputStream out>;

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public org.bouncycastle.crypto.Mac getMac()
    {
        org.bouncycastle.crypto.Mac $r1;
        org.bouncycastle.crypto.io.MacOutputStream r0;

        r0 := @this: org.bouncycastle.crypto.io.MacOutputStream;

        $r1 = r0.<org.bouncycastle.crypto.io.MacOutputStream: org.bouncycastle.crypto.Mac mac>;

        return $r1;
    }
}
