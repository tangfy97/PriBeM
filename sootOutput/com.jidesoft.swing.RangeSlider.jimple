public class com.jidesoft.swing.RangeSlider extends javax.swing.JSlider
{
    private static final java.lang.String uiClassID;
    private boolean _rangeDraggable;
    public static final java.lang.String CLIENT_PROPERTY_MOUSE_POSITION;
    public static final java.lang.String CLIENT_PROPERTY_ADJUST_ACTION;
    public static final java.lang.String PROPERTY_LOW_VALUE;
    public static final java.lang.String PROPERTY_HIGH_VALUE;

    public void <init>()
    {
        com.jidesoft.swing.RangeSlider r0;

        r0 := @this: com.jidesoft.swing.RangeSlider;

        specialinvoke r0.<javax.swing.JSlider: void <init>()>();

        r0.<com.jidesoft.swing.RangeSlider: boolean _rangeDraggable> = 1;

        return;
    }

    public void <init>(int)
    {
        int i0;
        com.jidesoft.swing.RangeSlider r0;

        r0 := @this: com.jidesoft.swing.RangeSlider;

        i0 := @parameter0: int;

        specialinvoke r0.<javax.swing.JSlider: void <init>(int)>(i0);

        r0.<com.jidesoft.swing.RangeSlider: boolean _rangeDraggable> = 1;

        return;
    }

    public void <init>(int, int)
    {
        int i0, i1;
        com.jidesoft.swing.RangeSlider r0;

        r0 := @this: com.jidesoft.swing.RangeSlider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<javax.swing.JSlider: void <init>(int,int)>(i0, i1);

        r0.<com.jidesoft.swing.RangeSlider: boolean _rangeDraggable> = 1;

        return;
    }

    public void <init>(int, int, int, int)
    {
        javax.swing.BoundedRangeModel $r2, $r4, $r6;
        com.jidesoft.swing.RangeSlider r0;
        int i0, i1, i2, i3, $i4;
        javax.swing.event.ChangeListener $r3, $r5, $r7;
        javax.swing.DefaultBoundedRangeModel $r1;

        r0 := @this: com.jidesoft.swing.RangeSlider;

        i2 := @parameter0: int;

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r1 = new javax.swing.DefaultBoundedRangeModel;

        $i4 = i1 - i0;

        specialinvoke $r1.<javax.swing.DefaultBoundedRangeModel: void <init>(int,int,int,int)>(i0, $i4, i2, i3);

        specialinvoke r0.<javax.swing.JSlider: void <init>(javax.swing.BoundedRangeModel)>($r1);

        r0.<com.jidesoft.swing.RangeSlider: boolean _rangeDraggable> = 1;

        $r2 = virtualinvoke r0.<com.jidesoft.swing.RangeSlider: javax.swing.BoundedRangeModel getModel()>();

        $r3 = r0.<com.jidesoft.swing.RangeSlider: javax.swing.event.ChangeListener changeListener>;

        interfaceinvoke $r2.<javax.swing.BoundedRangeModel: void removeChangeListener(javax.swing.event.ChangeListener)>($r3);

        $r4 = virtualinvoke r0.<com.jidesoft.swing.RangeSlider: javax.swing.BoundedRangeModel getModel()>();

        $r5 = r0.<com.jidesoft.swing.RangeSlider: javax.swing.event.ChangeListener changeListener>;

        interfaceinvoke $r4.<javax.swing.BoundedRangeModel: void removeChangeListener(javax.swing.event.ChangeListener)>($r5);

        $r6 = virtualinvoke r0.<com.jidesoft.swing.RangeSlider: javax.swing.BoundedRangeModel getModel()>();

        $r7 = r0.<com.jidesoft.swing.RangeSlider: javax.swing.event.ChangeListener changeListener>;

        interfaceinvoke $r6.<javax.swing.BoundedRangeModel: void addChangeListener(javax.swing.event.ChangeListener)>($r7);

        return;
    }

    public java.lang.String getActualUIClassID()
    {
        com.jidesoft.swing.RangeSlider r0;

        r0 := @this: com.jidesoft.swing.RangeSlider;

        return "RangeSliderUI";
    }

    public void updateUI()
    {
        java.lang.Object[] $r8;
        javax.swing.plaf.ComponentUI $r10;
        java.lang.Class[] $r6;
        com.jidesoft.swing.RangeSlider r0;
        java.lang.Exception $r11;
        java.lang.Object $r2, $r9;
        java.lang.Class $r5;
        java.lang.String $r1, $r3, $r4;
        java.lang.reflect.Method $r7;

        r0 := @this: com.jidesoft.swing.RangeSlider;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.RangeSlider: java.lang.String getActualUIClassID()>();

        $r2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>($r1);

        if $r2 != null goto label1;

        staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: void installJideExtension()>();

     label1:
        $r3 = virtualinvoke r0.<com.jidesoft.swing.RangeSlider: java.lang.String getActualUIClassID()>();

        $r4 = staticinvoke <javax.swing.UIManager: java.lang.String getString(java.lang.Object)>($r3);

        $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r4);

        $r6 = newarray (java.lang.Class)[1];

        $r6[0] = class "Ljavax/swing/JComponent;";

        $r7 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("createUI", $r6);

        if $r7 == null goto label2;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r0;

        $r9 = virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r8);

        $r10 = (javax.swing.plaf.ComponentUI) $r9;

        virtualinvoke r0.<com.jidesoft.swing.RangeSlider: void setUI(javax.swing.plaf.ComponentUI)>($r10);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        virtualinvoke $r11.<java.lang.Exception: void printStackTrace()>();

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public int getLowValue()
    {
        javax.swing.BoundedRangeModel $r1;
        int $i0;
        com.jidesoft.swing.RangeSlider r0;

        r0 := @this: com.jidesoft.swing.RangeSlider;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.RangeSlider: javax.swing.BoundedRangeModel getModel()>();

        $i0 = interfaceinvoke $r1.<javax.swing.BoundedRangeModel: int getValue()>();

        return $i0;
    }

    public int getHighValue()
    {
        javax.swing.BoundedRangeModel $r1, $r2;
        int $i0, $i1, $i2;
        com.jidesoft.swing.RangeSlider r0;

        r0 := @this: com.jidesoft.swing.RangeSlider;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.RangeSlider: javax.swing.BoundedRangeModel getModel()>();

        $i0 = interfaceinvoke $r1.<javax.swing.BoundedRangeModel: int getValue()>();

        $r2 = virtualinvoke r0.<com.jidesoft.swing.RangeSlider: javax.swing.BoundedRangeModel getModel()>();

        $i1 = interfaceinvoke $r2.<javax.swing.BoundedRangeModel: int getExtent()>();

        $i2 = $i0 + $i1;

        return $i2;
    }

    public boolean contains(int)
    {
        int i0, $i1, $i2;
        com.jidesoft.swing.RangeSlider r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.RangeSlider;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.jidesoft.swing.RangeSlider: int getLowValue()>();

        if i0 < $i1 goto label1;

        $i2 = virtualinvoke r0.<com.jidesoft.swing.RangeSlider: int getHighValue()>();

        if i0 > $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setValue(int)
    {
        int i0;
        java.lang.Boolean $r2;
        java.lang.Object $r1;
        com.jidesoft.swing.RangeSlider r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.RangeSlider;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.jidesoft.swing.RangeSlider: java.lang.Object getClientProperty(java.lang.Object)>("RangeSlider.mousePosition");

        if $r1 == null goto label2;

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.jidesoft.swing.RangeSlider: void setLowValue(int)>(i0);

        goto label3;

     label1:
        virtualinvoke r0.<com.jidesoft.swing.RangeSlider: void setHighValue(int)>(i0);

        goto label3;

     label2:
        virtualinvoke r0.<com.jidesoft.swing.RangeSlider: void setLowValue(int)>(i0);

     label3:
        return;
    }

    public void setLowValue(int)
    {
        javax.swing.BoundedRangeModel $r1, $r3;
        com.jidesoft.swing.RangeSlider r0;
        int $i0, i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9;
        boolean $z0, $z1, $z2;
        java.lang.Object $r2;

        r0 := @this: com.jidesoft.swing.RangeSlider;

        i1 := @parameter0: int;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.RangeSlider: int getLowValue()>();

        $r1 = virtualinvoke r0.<com.jidesoft.swing.RangeSlider: javax.swing.BoundedRangeModel getModel()>();

        $i2 = interfaceinvoke $r1.<javax.swing.BoundedRangeModel: int getExtent()>();

        $i3 = i1 + $i2;

        $i4 = virtualinvoke r0.<com.jidesoft.swing.RangeSlider: int getMaximum()>();

        if $i3 <= $i4 goto label1;

        i6 = virtualinvoke r0.<com.jidesoft.swing.RangeSlider: int getMaximum()>();

        goto label2;

     label1:
        i6 = virtualinvoke r0.<com.jidesoft.swing.RangeSlider: int getHighValue()>();

     label2:
        $i5 = i6 - i1;

        $r2 = virtualinvoke r0.<com.jidesoft.swing.RangeSlider: java.lang.Object getClientProperty(java.lang.Object)>("RangeSlider.adjustAction");

        $r3 = virtualinvoke r0.<com.jidesoft.swing.RangeSlider: javax.swing.BoundedRangeModel getModel()>();

        $i7 = virtualinvoke r0.<com.jidesoft.swing.RangeSlider: int getMinimum()>();

        $i8 = virtualinvoke r0.<com.jidesoft.swing.RangeSlider: int getMaximum()>();

        if $r2 == null goto label3;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>("scrollByBlock");

        if $z0 != 0 goto label4;

        $z1 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>("scrollByUnit");

        if $z1 != 0 goto label4;

     label3:
        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        interfaceinvoke $r3.<javax.swing.BoundedRangeModel: void setRangeProperties(int,int,int,int,boolean)>(i1, $i5, $i7, $i8, $z2);

        $i9 = virtualinvoke r0.<com.jidesoft.swing.RangeSlider: int getLowValue()>();

        virtualinvoke r0.<com.jidesoft.swing.RangeSlider: void firePropertyChange(java.lang.String,int,int)>("lowValue", $i0, $i9);

        return;
    }

    public void setHighValue(int)
    {
        javax.swing.BoundedRangeModel $r1;
        int $i0, i1, $i2, $i3, $i4;
        com.jidesoft.swing.RangeSlider r0;

        r0 := @this: com.jidesoft.swing.RangeSlider;

        i1 := @parameter0: int;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.RangeSlider: int getHighValue()>();

        $r1 = virtualinvoke r0.<com.jidesoft.swing.RangeSlider: javax.swing.BoundedRangeModel getModel()>();

        $i2 = virtualinvoke r0.<com.jidesoft.swing.RangeSlider: int getLowValue()>();

        $i3 = i1 - $i2;

        interfaceinvoke $r1.<javax.swing.BoundedRangeModel: void setExtent(int)>($i3);

        $i4 = virtualinvoke r0.<com.jidesoft.swing.RangeSlider: int getHighValue()>();

        virtualinvoke r0.<com.jidesoft.swing.RangeSlider: void firePropertyChange(java.lang.String,int,int)>("highValue", $i0, $i4);

        return;
    }

    public boolean isRangeDraggable()
    {
        com.jidesoft.swing.RangeSlider r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.RangeSlider;

        $z0 = r0.<com.jidesoft.swing.RangeSlider: boolean _rangeDraggable>;

        return $z0;
    }

    public void setRangeDraggable(boolean)
    {
        com.jidesoft.swing.RangeSlider r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.RangeSlider;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.swing.RangeSlider: boolean _rangeDraggable> = z0;

        return;
    }

    public static void <clinit>()
    {
        <com.jidesoft.swing.RangeSlider: java.lang.String PROPERTY_HIGH_VALUE> = "highValue";

        <com.jidesoft.swing.RangeSlider: java.lang.String PROPERTY_LOW_VALUE> = "lowValue";

        <com.jidesoft.swing.RangeSlider: java.lang.String CLIENT_PROPERTY_ADJUST_ACTION> = "RangeSlider.adjustAction";

        <com.jidesoft.swing.RangeSlider: java.lang.String CLIENT_PROPERTY_MOUSE_POSITION> = "RangeSlider.mousePosition";

        <com.jidesoft.swing.RangeSlider: java.lang.String uiClassID> = "RangeSliderUI";

        return;
    }
}
