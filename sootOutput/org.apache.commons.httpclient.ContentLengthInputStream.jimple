public class org.apache.commons.httpclient.ContentLengthInputStream extends java.io.InputStream
{
    private long contentLength;
    private long pos;
    private boolean closed;
    private java.io.InputStream wrappedStream;

    public void <init>(java.io.InputStream, int)
    {
        org.apache.commons.httpclient.ContentLengthInputStream r0;
        int i0;
        long $l1;
        java.io.InputStream r1;

        r0 := @this: org.apache.commons.httpclient.ContentLengthInputStream;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        $l1 = (long) i0;

        specialinvoke r0.<org.apache.commons.httpclient.ContentLengthInputStream: void <init>(java.io.InputStream,long)>(r1, $l1);

        return;
    }

    public void <init>(java.io.InputStream, long)
    {
        long l0;
        org.apache.commons.httpclient.ContentLengthInputStream r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.commons.httpclient.ContentLengthInputStream;

        r1 := @parameter0: java.io.InputStream;

        l0 := @parameter1: long;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<org.apache.commons.httpclient.ContentLengthInputStream: long pos> = 0L;

        r0.<org.apache.commons.httpclient.ContentLengthInputStream: boolean closed> = 0;

        r0.<org.apache.commons.httpclient.ContentLengthInputStream: java.io.InputStream wrappedStream> = null;

        r0.<org.apache.commons.httpclient.ContentLengthInputStream: java.io.InputStream wrappedStream> = r1;

        r0.<org.apache.commons.httpclient.ContentLengthInputStream: long contentLength> = l0;

        return;
    }

    public void close() throws java.io.IOException
    {
        java.lang.Throwable $r1;
        org.apache.commons.httpclient.ContentLengthInputStream r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.ContentLengthInputStream;

        $z0 = r0.<org.apache.commons.httpclient.ContentLengthInputStream: boolean closed>;

        if $z0 != 0 goto label5;

     label1:
        staticinvoke <org.apache.commons.httpclient.ChunkedInputStream: void exhaustInputStream(java.io.InputStream)>(r0);

     label2:
        r0.<org.apache.commons.httpclient.ContentLengthInputStream: boolean closed> = 1;

        goto label5;

     label3:
        $r1 := @caughtexception;

     label4:
        r0.<org.apache.commons.httpclient.ContentLengthInputStream: boolean closed> = 1;

        throw $r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int read() throws java.io.IOException
    {
        org.apache.commons.httpclient.ContentLengthInputStream r0;
        long $l0, $l1, $l3, $l4;
        java.io.IOException $r3;
        byte $b2;
        int $i5, $i6, $i8;
        boolean $z0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.commons.httpclient.ContentLengthInputStream;

        $z0 = r0.<org.apache.commons.httpclient.ContentLengthInputStream: boolean closed>;

        if $z0 == 0 goto label1;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Attempted read from closed stream.");

        throw $r3;

     label1:
        $l1 = r0.<org.apache.commons.httpclient.ContentLengthInputStream: long pos>;

        $l0 = r0.<org.apache.commons.httpclient.ContentLengthInputStream: long contentLength>;

        $b2 = $l1 cmp $l0;

        $i6 = (int) $b2;

        if $i6 < 0 goto label2;

        $i8 = (int) -1;

        return $i8;

     label2:
        $l3 = r0.<org.apache.commons.httpclient.ContentLengthInputStream: long pos>;

        $l4 = $l3 + 1L;

        r0.<org.apache.commons.httpclient.ContentLengthInputStream: long pos> = $l4;

        $r1 = r0.<org.apache.commons.httpclient.ContentLengthInputStream: java.io.InputStream wrappedStream>;

        $i5 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        return $i5;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        org.apache.commons.httpclient.ContentLengthInputStream r0;
        long $l0, $l1, $l3, $l4, $l5, $l6, $l10, $l11, $l12, $l13, $l14, $l15;
        byte $b2, $b7;
        int i8, $i9, i16, $i17, $i19, $i20;
        boolean $z0;
        java.io.IOException $r4;
        java.io.InputStream $r2;

        r0 := @this: org.apache.commons.httpclient.ContentLengthInputStream;

        r1 := @parameter0: byte[];

        i8 := @parameter1: int;

        i16 := @parameter2: int;

        $z0 = r0.<org.apache.commons.httpclient.ContentLengthInputStream: boolean closed>;

        if $z0 == 0 goto label1;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("Attempted read from closed stream.");

        throw $r4;

     label1:
        $l1 = r0.<org.apache.commons.httpclient.ContentLengthInputStream: long pos>;

        $l0 = r0.<org.apache.commons.httpclient.ContentLengthInputStream: long contentLength>;

        $b2 = $l1 cmp $l0;

        $i17 = (int) $b2;

        if $i17 < 0 goto label2;

        $i19 = (int) -1;

        return $i19;

     label2:
        $l4 = r0.<org.apache.commons.httpclient.ContentLengthInputStream: long pos>;

        $l3 = (long) i16;

        $l6 = $l4 + $l3;

        $l5 = r0.<org.apache.commons.httpclient.ContentLengthInputStream: long contentLength>;

        $b7 = $l6 cmp $l5;

        $i20 = (int) $b7;

        if $i20 <= 0 goto label3;

        $l14 = r0.<org.apache.commons.httpclient.ContentLengthInputStream: long contentLength>;

        $l13 = r0.<org.apache.commons.httpclient.ContentLengthInputStream: long pos>;

        $l15 = $l14 - $l13;

        i16 = (int) $l15;

     label3:
        $r2 = r0.<org.apache.commons.httpclient.ContentLengthInputStream: java.io.InputStream wrappedStream>;

        $i9 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, i8, i16);

        $l11 = r0.<org.apache.commons.httpclient.ContentLengthInputStream: long pos>;

        $l10 = (long) $i9;

        $l12 = $l11 + $l10;

        r0.<org.apache.commons.httpclient.ContentLengthInputStream: long pos> = $l12;

        return $i9;
    }

    public int read(byte[]) throws java.io.IOException
    {
        byte[] r1;
        org.apache.commons.httpclient.ContentLengthInputStream r0;
        int $i0, $i1;

        r0 := @this: org.apache.commons.httpclient.ContentLengthInputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        $i1 = virtualinvoke r0.<org.apache.commons.httpclient.ContentLengthInputStream: int read(byte[],int,int)>(r1, 0, $i0);

        return $i1;
    }

    public long skip(long) throws java.io.IOException
    {
        org.apache.commons.httpclient.ContentLengthInputStream r0;
        long l0, $l1, $l2, $l3, $l4, $l5, $l7, $l8;
        byte $b6;
        int $i9;
        java.io.InputStream $r1;

        r0 := @this: org.apache.commons.httpclient.ContentLengthInputStream;

        l0 := @parameter0: long;

        $l2 = r0.<org.apache.commons.httpclient.ContentLengthInputStream: long contentLength>;

        $l1 = r0.<org.apache.commons.httpclient.ContentLengthInputStream: long pos>;

        $l3 = $l2 - $l1;

        $l4 = staticinvoke <java.lang.Math: long min(long,long)>(l0, $l3);

        $r1 = r0.<org.apache.commons.httpclient.ContentLengthInputStream: java.io.InputStream wrappedStream>;

        $l5 = virtualinvoke $r1.<java.io.InputStream: long skip(long)>($l4);

        $b6 = $l5 cmp 0L;

        $i9 = (int) $b6;

        if $i9 <= 0 goto label1;

        $l7 = r0.<org.apache.commons.httpclient.ContentLengthInputStream: long pos>;

        $l8 = $l7 + $l5;

        r0.<org.apache.commons.httpclient.ContentLengthInputStream: long pos> = $l8;

     label1:
        return $l5;
    }

    public int available() throws java.io.IOException
    {
        org.apache.commons.httpclient.ContentLengthInputStream r0;
        long $l1, $l2, $l3, $l4, $l6, $l7, $l8;
        byte $b5;
        int $i0, i9, $i10;
        boolean $z0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.commons.httpclient.ContentLengthInputStream;

        $z0 = r0.<org.apache.commons.httpclient.ContentLengthInputStream: boolean closed>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<org.apache.commons.httpclient.ContentLengthInputStream: java.io.InputStream wrappedStream>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int available()>();

        i9 = $i0;

        $l2 = r0.<org.apache.commons.httpclient.ContentLengthInputStream: long pos>;

        $l1 = (long) $i0;

        $l4 = $l2 + $l1;

        $l3 = r0.<org.apache.commons.httpclient.ContentLengthInputStream: long contentLength>;

        $b5 = $l4 cmp $l3;

        $i10 = (int) $b5;

        if $i10 <= 0 goto label2;

        $l7 = r0.<org.apache.commons.httpclient.ContentLengthInputStream: long contentLength>;

        $l6 = r0.<org.apache.commons.httpclient.ContentLengthInputStream: long pos>;

        $l8 = $l7 - $l6;

        i9 = (int) $l8;

     label2:
        return i9;
    }
}
