public class org.jdom.adapters.JAXPDOMAdapter extends org.jdom.adapters.AbstractDOMAdapter
{
    private static final java.lang.String CVS_ID;
    static java.lang.Class class$org$xml$sax$ErrorHandler;
    static java.lang.Class class$java$io$InputStream;

    public void <init>()
    {
        org.jdom.adapters.JAXPDOMAdapter r0;

        r0 := @this: org.jdom.adapters.JAXPDOMAdapter;

        specialinvoke r0.<org.jdom.adapters.AbstractDOMAdapter: void <init>()>();

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    public org.w3c.dom.Document createDocument() throws org.jdom.JDOMException
    {
        java.lang.Exception $r9;
        org.jdom.JDOMException $r10;
        org.w3c.dom.Document r8;
        org.jdom.adapters.JAXPDOMAdapter r11;
        java.lang.Class $r0, $r5;
        java.lang.Object $r2, $r4, $r7;
        java.lang.reflect.Method $r1, $r3, $r6;

        r11 := @this: org.jdom.adapters.JAXPDOMAdapter;

     label1:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("javax.xml.transform.Transformer");

        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("javax.xml.parsers.DocumentBuilderFactory");

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("newInstance", null);

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, null);

        $r3 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("newDocumentBuilder", null);

        $r4 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, null);

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("newDocument", null);

        $r7 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, null);

        r8 = (org.w3c.dom.Document) $r7;

        return r8;

     label2:
        $r9 := @caughtexception;

        $r10 = new org.jdom.JDOMException;

        specialinvoke $r10.<org.jdom.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>("Reflection failed while creating new JAXP document", $r9);

        throw $r10;

        catch java.lang.Exception from label1 to label2 with label2;
    }

    public org.w3c.dom.Document getDocument(java.io.InputStream, boolean) throws java.io.IOException, org.jdom.JDOMException
    {
        org.jdom.JDOMException $r29, $r32;
        org.w3c.dom.Document $r27;
        java.lang.reflect.Method $r1, $r5, $r10, $r13, $r18, $r23;
        boolean z0, $z1;
        java.lang.Exception $r28;
        java.lang.reflect.InvocationTargetException $r30;
        java.lang.Throwable $r31;
        java.lang.Object[] $r6, $r11, $r19, $r24;
        java.lang.Boolean $r7, $r12;
        org.jdom.adapters.JAXPDOMAdapter r35;
        java.lang.String $r33;
        org.jdom.input.BuilderErrorHandler $r20;
        java.lang.Class[] $r3, $r8, $r16, $r21;
        java.io.IOException $r34;
        java.lang.Class $r0, $r4, $r9, $r15, $r17, $r22, $r36, $r37;
        java.lang.Object $r2, $r14, $r26;
        java.io.InputStream r25;

        r35 := @this: org.jdom.adapters.JAXPDOMAdapter;

        r25 := @parameter0: java.io.InputStream;

        z0 := @parameter1: boolean;

     label1:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("javax.xml.transform.Transformer");

        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("javax.xml.parsers.DocumentBuilderFactory");

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("newInstance", null);

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, null);

        $r3 = newarray (java.lang.Class)[1];

        $r4 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r3[0] = $r4;

        $r5 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setValidating", $r3);

        $r6 = newarray (java.lang.Object)[1];

        $r7 = new java.lang.Boolean;

        specialinvoke $r7.<java.lang.Boolean: void <init>(boolean)>(z0);

        $r6[0] = $r7;

        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r6);

        $r8 = newarray (java.lang.Class)[1];

        $r9 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r8[0] = $r9;

        $r10 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setNamespaceAware", $r8);

        $r11 = newarray (java.lang.Object)[1];

        $r12 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r11[0] = $r12;

        virtualinvoke $r10.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r11);

        $r13 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("newDocumentBuilder", null);

        $r14 = virtualinvoke $r13.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, null);

        $r15 = virtualinvoke $r14.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = newarray (java.lang.Class)[1];

        $r17 = <org.jdom.adapters.JAXPDOMAdapter: java.lang.Class class$org$xml$sax$ErrorHandler>;

        if $r17 == null goto label2;

        $r36 = <org.jdom.adapters.JAXPDOMAdapter: java.lang.Class class$org$xml$sax$ErrorHandler>;

        goto label3;

     label2:
        $r36 = staticinvoke <org.jdom.adapters.JAXPDOMAdapter: java.lang.Class class$(java.lang.String)>("org.xml.sax.ErrorHandler");

        <org.jdom.adapters.JAXPDOMAdapter: java.lang.Class class$org$xml$sax$ErrorHandler> = $r36;

     label3:
        $r16[0] = $r36;

        $r18 = virtualinvoke $r15.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setErrorHandler", $r16);

        $r19 = newarray (java.lang.Object)[1];

        $r20 = new org.jdom.input.BuilderErrorHandler;

        specialinvoke $r20.<org.jdom.input.BuilderErrorHandler: void <init>()>();

        $r19[0] = $r20;

        virtualinvoke $r18.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r14, $r19);

        $r21 = newarray (java.lang.Class)[1];

        $r22 = <org.jdom.adapters.JAXPDOMAdapter: java.lang.Class class$java$io$InputStream>;

        if $r22 == null goto label4;

        $r37 = <org.jdom.adapters.JAXPDOMAdapter: java.lang.Class class$java$io$InputStream>;

        goto label5;

     label4:
        $r37 = staticinvoke <org.jdom.adapters.JAXPDOMAdapter: java.lang.Class class$(java.lang.String)>("java.io.InputStream");

        <org.jdom.adapters.JAXPDOMAdapter: java.lang.Class class$java$io$InputStream> = $r37;

     label5:
        $r21[0] = $r37;

        $r23 = virtualinvoke $r15.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("parse", $r21);

        $r24 = newarray (java.lang.Object)[1];

        $r24[0] = r25;

        $r26 = virtualinvoke $r23.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r14, $r24);

        $r27 = (org.w3c.dom.Document) $r26;

        return $r27;

     label6:
        $r30 := @caughtexception;

        $r31 = virtualinvoke $r30.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $z1 = $r31 instanceof java.io.IOException;

        if $z1 == 0 goto label7;

        $r34 = (java.io.IOException) $r31;

        throw $r34;

     label7:
        $r32 = new org.jdom.JDOMException;

        $r33 = virtualinvoke $r31.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r32.<org.jdom.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>($r33, $r31);

        throw $r32;

     label8:
        $r28 := @caughtexception;

        $r29 = new org.jdom.JDOMException;

        specialinvoke $r29.<org.jdom.JDOMException: void <init>(java.lang.String,java.lang.Throwable)>("Reflection failed while parsing a document with JAXP", $r28);

        throw $r29;

        catch java.lang.reflect.InvocationTargetException from label1 to label6 with label6;
        catch java.lang.Exception from label1 to label6 with label8;
    }

    public static void <clinit>()
    {
        <org.jdom.adapters.JAXPDOMAdapter: java.lang.String CVS_ID> = "@(#) $RCSfile: JAXPDOMAdapter.java,v $ $Revision: 1.12 $ $Date: 2004/02/06 09:28:31 $ $Name: jdom_1_0 $";

        return;
    }
}
