public abstract class com.mycila.inject.internal.cglib.proxy.Mixin extends java.lang.Object
{
    private static final com.mycila.inject.internal.cglib.proxy.Mixin$MixinKey KEY_FACTORY;
    private static final java.util.Map ROUTE_CACHE;
    public static final int STYLE_INTERFACES;
    public static final int STYLE_BEANS;
    public static final int STYLE_EVERYTHING;
    static java.lang.Class class$net$sf$cglib$proxy$Mixin$MixinKey;
    static java.lang.Class class$net$sf$cglib$proxy$Mixin;

    public void <init>()
    {
        com.mycila.inject.internal.cglib.proxy.Mixin r0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.Mixin;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract com.mycila.inject.internal.cglib.proxy.Mixin newInstance(java.lang.Object[]);

    public static com.mycila.inject.internal.cglib.proxy.Mixin create(java.lang.Object[])
    {
        com.mycila.inject.internal.cglib.proxy.Mixin$Generator $r0;
        java.lang.Object[] r1;
        com.mycila.inject.internal.cglib.proxy.Mixin $r2;

        r1 := @parameter0: java.lang.Object[];

        $r0 = new com.mycila.inject.internal.cglib.proxy.Mixin$Generator;

        specialinvoke $r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: void <init>()>();

        virtualinvoke $r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: void setDelegates(java.lang.Object[])>(r1);

        $r2 = virtualinvoke $r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: com.mycila.inject.internal.cglib.proxy.Mixin create()>();

        return $r2;
    }

    public static com.mycila.inject.internal.cglib.proxy.Mixin create(java.lang.Class[], java.lang.Object[])
    {
        com.mycila.inject.internal.cglib.proxy.Mixin$Generator $r0;
        java.lang.Object[] r2;
        com.mycila.inject.internal.cglib.proxy.Mixin $r3;
        java.lang.Class[] r1;

        r1 := @parameter0: java.lang.Class[];

        r2 := @parameter1: java.lang.Object[];

        $r0 = new com.mycila.inject.internal.cglib.proxy.Mixin$Generator;

        specialinvoke $r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: void <init>()>();

        virtualinvoke $r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: void setClasses(java.lang.Class[])>(r1);

        virtualinvoke $r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: void setDelegates(java.lang.Object[])>(r2);

        $r3 = virtualinvoke $r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: com.mycila.inject.internal.cglib.proxy.Mixin create()>();

        return $r3;
    }

    public static com.mycila.inject.internal.cglib.proxy.Mixin createBean(java.lang.Object[])
    {
        java.lang.Object[] r0;
        com.mycila.inject.internal.cglib.proxy.Mixin $r1;

        r0 := @parameter0: java.lang.Object[];

        $r1 = staticinvoke <com.mycila.inject.internal.cglib.proxy.Mixin: com.mycila.inject.internal.cglib.proxy.Mixin createBean(java.lang.ClassLoader,java.lang.Object[])>(null, r0);

        return $r1;
    }

    public static com.mycila.inject.internal.cglib.proxy.Mixin createBean(java.lang.ClassLoader, java.lang.Object[])
    {
        com.mycila.inject.internal.cglib.proxy.Mixin$Generator $r0;
        java.lang.Object[] r1;
        com.mycila.inject.internal.cglib.proxy.Mixin $r3;
        java.lang.ClassLoader r2;

        r2 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.lang.Object[];

        $r0 = new com.mycila.inject.internal.cglib.proxy.Mixin$Generator;

        specialinvoke $r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: void <init>()>();

        virtualinvoke $r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: void setStyle(int)>(1);

        virtualinvoke $r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: void setDelegates(java.lang.Object[])>(r1);

        virtualinvoke $r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: void setClassLoader(java.lang.ClassLoader)>(r2);

        $r3 = virtualinvoke $r0.<com.mycila.inject.internal.cglib.proxy.Mixin$Generator: com.mycila.inject.internal.cglib.proxy.Mixin create()>();

        return $r3;
    }

    public static java.lang.Class[] getClasses(java.lang.Object[])
    {
        java.lang.Object[] r0;
        java.lang.Class[] $r2, $r4, $r5;
        java.lang.Object $r3;
        com.mycila.inject.internal.cglib.proxy.Mixin$Route $r1;

        r0 := @parameter0: java.lang.Object[];

        $r1 = staticinvoke <com.mycila.inject.internal.cglib.proxy.Mixin: com.mycila.inject.internal.cglib.proxy.Mixin$Route route(java.lang.Object[])>(r0);

        $r2 = staticinvoke <com.mycila.inject.internal.cglib.proxy.Mixin$Route: java.lang.Class[] access$100(com.mycila.inject.internal.cglib.proxy.Mixin$Route)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (java.lang.Class[]) $r3;

        $r5 = (java.lang.Class[]) $r4;

        return $r5;
    }

    private static com.mycila.inject.internal.cglib.proxy.Mixin$Route route(java.lang.Object[])
    {
        java.lang.Object[] r0;
        java.util.Map $r2, $r5;
        java.lang.Object $r1, $r3;
        com.mycila.inject.internal.cglib.proxy.Mixin$Route $r4, r6;

        r0 := @parameter0: java.lang.Object[];

        $r1 = staticinvoke <com.mycila.inject.internal.cglib.core.ClassesKey: java.lang.Object create(java.lang.Object[])>(r0);

        $r2 = <com.mycila.inject.internal.cglib.proxy.Mixin: java.util.Map ROUTE_CACHE>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r6 = (com.mycila.inject.internal.cglib.proxy.Mixin$Route) $r3;

        if r6 != null goto label1;

        $r5 = <com.mycila.inject.internal.cglib.proxy.Mixin: java.util.Map ROUTE_CACHE>;

        $r4 = new com.mycila.inject.internal.cglib.proxy.Mixin$Route;

        specialinvoke $r4.<com.mycila.inject.internal.cglib.proxy.Mixin$Route: void <init>(java.lang.Object[])>(r0);

        r6 = $r4;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

     label1:
        return r6;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static com.mycila.inject.internal.cglib.proxy.Mixin$Route access$000(java.lang.Object[])
    {
        java.lang.Object[] r0;
        com.mycila.inject.internal.cglib.proxy.Mixin$Route $r1;

        r0 := @parameter0: java.lang.Object[];

        $r1 = staticinvoke <com.mycila.inject.internal.cglib.proxy.Mixin: com.mycila.inject.internal.cglib.proxy.Mixin$Route route(java.lang.Object[])>(r0);

        return $r1;
    }

    static com.mycila.inject.internal.cglib.proxy.Mixin$MixinKey access$300()
    {
        com.mycila.inject.internal.cglib.proxy.Mixin$MixinKey $r0;

        $r0 = <com.mycila.inject.internal.cglib.proxy.Mixin: com.mycila.inject.internal.cglib.proxy.Mixin$MixinKey KEY_FACTORY>;

        return $r0;
    }

    static void <clinit>()
    {
        com.mycila.inject.internal.cglib.core.KeyFactory $r2;
        java.util.Map $r5;
        java.lang.Class $r0, $r6;
        java.util.HashMap $r4;
        com.mycila.inject.internal.cglib.proxy.Mixin$MixinKey $r3;
        com.mycila.inject.internal.cglib.core.Customizer $r1;

        <com.mycila.inject.internal.cglib.proxy.Mixin: int STYLE_EVERYTHING> = 2;

        <com.mycila.inject.internal.cglib.proxy.Mixin: int STYLE_BEANS> = 1;

        <com.mycila.inject.internal.cglib.proxy.Mixin: int STYLE_INTERFACES> = 0;

        $r0 = <com.mycila.inject.internal.cglib.proxy.Mixin: java.lang.Class class$net$sf$cglib$proxy$Mixin$MixinKey>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <com.mycila.inject.internal.cglib.proxy.Mixin: java.lang.Class class$(java.lang.String)>("com.mycila.inject.internal.cglib.proxy.Mixin$MixinKey");

        <com.mycila.inject.internal.cglib.proxy.Mixin: java.lang.Class class$net$sf$cglib$proxy$Mixin$MixinKey> = $r6;

        goto label2;

     label1:
        $r6 = <com.mycila.inject.internal.cglib.proxy.Mixin: java.lang.Class class$net$sf$cglib$proxy$Mixin$MixinKey>;

     label2:
        $r1 = <com.mycila.inject.internal.cglib.core.KeyFactory: com.mycila.inject.internal.cglib.core.Customizer CLASS_BY_NAME>;

        $r2 = staticinvoke <com.mycila.inject.internal.cglib.core.KeyFactory: com.mycila.inject.internal.cglib.core.KeyFactory create(java.lang.Class,com.mycila.inject.internal.cglib.core.Customizer)>($r6, $r1);

        $r3 = (com.mycila.inject.internal.cglib.proxy.Mixin$MixinKey) $r2;

        <com.mycila.inject.internal.cglib.proxy.Mixin: com.mycila.inject.internal.cglib.proxy.Mixin$MixinKey KEY_FACTORY> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r5 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r4);

        <com.mycila.inject.internal.cglib.proxy.Mixin: java.util.Map ROUTE_CACHE> = $r5;

        return;
    }
}
