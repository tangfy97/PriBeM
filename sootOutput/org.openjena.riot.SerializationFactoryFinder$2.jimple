final class org.openjena.riot.SerializationFactoryFinder$2 extends java.lang.Object implements org.apache.jena.atlas.data.SerializationFactory
{

    void <init>()
    {
        org.openjena.riot.SerializationFactoryFinder$2 r0;

        r0 := @this: org.openjena.riot.SerializationFactoryFinder$2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.jena.atlas.lib.Sink createSerializer(java.io.OutputStream)
    {
        java.io.OutputStream r1;
        org.openjena.riot.SerializationFactoryFinder$2 r3;
        org.apache.jena.riot.out.NodeToLabel $r2;
        org.apache.jena.riot.out.SinkTripleOutput $r0;

        r3 := @this: org.openjena.riot.SerializationFactoryFinder$2;

        r1 := @parameter0: java.io.OutputStream;

        $r0 = new org.apache.jena.riot.out.SinkTripleOutput;

        $r2 = staticinvoke <org.apache.jena.riot.out.NodeToLabel: org.apache.jena.riot.out.NodeToLabel createBNodeByLabelEncoded()>();

        specialinvoke $r0.<org.apache.jena.riot.out.SinkTripleOutput: void <init>(java.io.OutputStream,org.apache.jena.riot.system.Prologue,org.apache.jena.riot.out.NodeToLabel)>(r1, null, $r2);

        return $r0;
    }

    public java.util.Iterator createDeserializer(java.io.InputStream)
    {
        org.apache.jena.riot.system.Prologue $r3;
        org.apache.jena.riot.system.IRIResolver $r4;
        org.apache.jena.riot.lang.LabelToNode $r5;
        org.openjena.riot.SerializationFactoryFinder$2 r7;
        org.apache.jena.riot.tokens.Tokenizer $r1;
        org.apache.jena.riot.lang.LangNTriples $r6;
        java.io.InputStream r0;
        org.apache.jena.riot.system.ParserProfileBase $r2;

        r7 := @this: org.openjena.riot.SerializationFactoryFinder$2;

        r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <org.apache.jena.riot.tokens.TokenizerFactory: org.apache.jena.riot.tokens.Tokenizer makeTokenizerASCII(java.io.InputStream)>(r0);

        $r2 = new org.apache.jena.riot.system.ParserProfileBase;

        $r3 = new org.apache.jena.riot.system.Prologue;

        $r4 = staticinvoke <org.apache.jena.riot.system.IRIResolver: org.apache.jena.riot.system.IRIResolver createNoResolve()>();

        specialinvoke $r3.<org.apache.jena.riot.system.Prologue: void <init>(org.apache.jena.riot.system.PrefixMap,org.apache.jena.riot.system.IRIResolver)>(null, $r4);

        $r5 = staticinvoke <org.apache.jena.riot.lang.LabelToNode: org.apache.jena.riot.lang.LabelToNode createUseLabelEncoded()>();

        specialinvoke $r2.<org.apache.jena.riot.system.ParserProfileBase: void <init>(org.apache.jena.riot.system.Prologue,org.apache.jena.riot.system.ErrorHandler,org.apache.jena.riot.lang.LabelToNode)>($r3, null, $r5);

        $r6 = new org.apache.jena.riot.lang.LangNTriples;

        specialinvoke $r6.<org.apache.jena.riot.lang.LangNTriples: void <init>(org.apache.jena.riot.tokens.Tokenizer,org.apache.jena.riot.system.ParserProfile,org.apache.jena.riot.system.StreamRDF)>($r1, $r2, null);

        return $r6;
    }

    public long getEstimatedMemorySize(com.hp.hpl.jena.graph.Triple)
    {
        org.openjena.riot.SerializationFactoryFinder$2 r0;
        com.hp.hpl.jena.graph.Triple r1;

        r0 := @this: org.openjena.riot.SerializationFactoryFinder$2;

        r1 := @parameter0: com.hp.hpl.jena.graph.Triple;

        return 0L;
    }

    public volatile long getEstimatedMemorySize(java.lang.Object)
    {
        org.openjena.riot.SerializationFactoryFinder$2 r0;
        java.lang.Object r1;
        long $l0;
        com.hp.hpl.jena.graph.Triple $r2;

        r0 := @this: org.openjena.riot.SerializationFactoryFinder$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.hp.hpl.jena.graph.Triple) r1;

        $l0 = virtualinvoke r0.<org.openjena.riot.SerializationFactoryFinder$2: long getEstimatedMemorySize(com.hp.hpl.jena.graph.Triple)>($r2);

        return $l0;
    }
}
