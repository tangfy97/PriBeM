public class org.apache.batik.bridge.SVGMaskElementBridge extends org.apache.batik.bridge.AnimatableGenericSVGBridge implements org.apache.batik.bridge.MaskBridge
{

    public void <init>()
    {
        org.apache.batik.bridge.SVGMaskElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGMaskElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.AnimatableGenericSVGBridge: void <init>()>();

        return;
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.bridge.SVGMaskElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGMaskElementBridge;

        return "mask";
    }

    public org.apache.batik.gvt.filter.Mask createMask(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.w3c.dom.Element, org.apache.batik.gvt.GraphicsNode)
    {
        java.awt.geom.Rectangle2D $r4;
        org.apache.batik.gvt.CompositeGraphicsNode $r6, $r7;
        short $s0, s3;
        org.w3c.dom.Node r17;
        int $i1, $i2;
        java.lang.String $r11, $r13;
        boolean z0;
        org.apache.batik.gvt.filter.MaskRable8Bit $r15;
        org.apache.batik.bridge.SVGMaskElementBridge r16;
        org.apache.batik.gvt.GraphicsNode r2, $r9;
        org.apache.batik.bridge.GVTBuilder $r5;
        org.apache.batik.bridge.BridgeContext r3;
        java.awt.geom.AffineTransform $r12, r19;
        org.apache.batik.ext.awt.image.renderable.Filter $r14, r20;
        java.util.List $r8, $r10;
        org.w3c.dom.Element r0, r1, r18;

        r16 := @this: org.apache.batik.bridge.SVGMaskElementBridge;

        r3 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r0 := @parameter1: org.w3c.dom.Element;

        r1 := @parameter2: org.w3c.dom.Element;

        r2 := @parameter3: org.apache.batik.gvt.GraphicsNode;

        $r4 = staticinvoke <org.apache.batik.bridge.SVGUtilities: java.awt.geom.Rectangle2D convertMaskRegion(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.bridge.BridgeContext)>(r0, r1, r2, r3);

        $r5 = virtualinvoke r3.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.GVTBuilder getGVTBuilder()>();

        $r6 = new org.apache.batik.gvt.CompositeGraphicsNode;

        specialinvoke $r6.<org.apache.batik.gvt.CompositeGraphicsNode: void <init>()>();

        $r7 = new org.apache.batik.gvt.CompositeGraphicsNode;

        specialinvoke $r7.<org.apache.batik.gvt.CompositeGraphicsNode: void <init>()>();

        $r8 = virtualinvoke $r6.<org.apache.batik.gvt.CompositeGraphicsNode: java.util.List getChildren()>();

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r7);

        z0 = 0;

        r17 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label05;

     label01:
        $s0 = interfaceinvoke r17.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 == 1 goto label02;

        goto label04;

     label02:
        r18 = (org.w3c.dom.Element) r17;

        $r9 = virtualinvoke $r5.<org.apache.batik.bridge.GVTBuilder: org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)>(r3, r18);

        if $r9 != null goto label03;

        goto label04;

     label03:
        z0 = 1;

        $r10 = virtualinvoke $r7.<org.apache.batik.gvt.CompositeGraphicsNode: java.util.List getChildren()>();

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r9);

     label04:
        r17 = interfaceinvoke r17.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label05:
        if r17 != null goto label01;

        if z0 != 0 goto label06;

        return null;

     label06:
        $r11 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "transform");

        $i1 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i1 == 0 goto label07;

        r19 = staticinvoke <org.apache.batik.bridge.SVGUtilities: java.awt.geom.AffineTransform convertTransform(org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.batik.bridge.BridgeContext)>(r0, "transform", $r11, r3);

        goto label08;

     label07:
        $r12 = new java.awt.geom.AffineTransform;

        specialinvoke $r12.<java.awt.geom.AffineTransform: void <init>()>();

        r19 = $r12;

     label08:
        $r13 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "maskContentUnits");

        $i2 = virtualinvoke $r13.<java.lang.String: int length()>();

        if $i2 != 0 goto label09;

        s3 = 1;

        goto label10;

     label09:
        s3 = staticinvoke <org.apache.batik.bridge.SVGUtilities: short parseCoordinateSystem(org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.batik.bridge.BridgeContext)>(r0, "maskContentUnits", $r13, r3);

     label10:
        if s3 != 2 goto label11;

        r19 = staticinvoke <org.apache.batik.bridge.SVGUtilities: java.awt.geom.AffineTransform toObjectBBox(java.awt.geom.AffineTransform,org.apache.batik.gvt.GraphicsNode)>(r19, r2);

     label11:
        virtualinvoke $r7.<org.apache.batik.gvt.AbstractGraphicsNode: void setTransform(java.awt.geom.AffineTransform)>(r19);

        $r14 = interfaceinvoke r2.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.ext.awt.image.renderable.Filter getFilter()>();

        r20 = $r14;

        if $r14 != null goto label12;

        r20 = interfaceinvoke r2.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.ext.awt.image.renderable.Filter getGraphicsNodeRable(boolean)>(1);

     label12:
        $r15 = new org.apache.batik.gvt.filter.MaskRable8Bit;

        specialinvoke $r15.<org.apache.batik.gvt.filter.MaskRable8Bit: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D)>(r20, $r6, $r4);

        return $r15;
    }
}
