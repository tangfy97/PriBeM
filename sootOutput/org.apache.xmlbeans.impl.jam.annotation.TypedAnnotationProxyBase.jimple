public abstract class org.apache.xmlbeans.impl.jam.'annotation'.TypedAnnotationProxyBase extends org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy
{
    private java.util.List mValues;

    protected void <init>()
    {
        org.apache.xmlbeans.impl.jam.'annotation'.TypedAnnotationProxyBase r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.'annotation'.TypedAnnotationProxyBase;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.'annotation'.TypedAnnotationProxyBase: java.util.List mValues> = null;

        return;
    }

    public void setValue(java.lang.String, java.lang.Object, org.apache.xmlbeans.impl.jam.JClass)
    {
        java.lang.Object[] $r11;
        org.apache.xmlbeans.impl.jam.'annotation'.TypedAnnotationProxyBase r2;
        java.util.ArrayList $r12;
        org.apache.xmlbeans.impl.jam.internal.elements.AnnotationValueImpl $r4;
        java.lang.String r0;
        java.lang.reflect.Method $r10;
        org.apache.xmlbeans.impl.jam.internal.elements.ElementContext $r7;
        java.lang.IllegalAccessException $r17;
        org.apache.xmlbeans.impl.jam.JClass r6;
        java.lang.IllegalArgumentException $r13, $r14;
        java.lang.reflect.InvocationTargetException $r15;
        java.util.List $r3, $r8;
        org.apache.xmlbeans.impl.jam.provider.JamServiceContext $r5;
        org.apache.xmlbeans.impl.jam.provider.JamLogger $r16, $r18;
        java.lang.Object r1;
        java.lang.Class $r9;

        r2 := @this: org.apache.xmlbeans.impl.jam.'annotation'.TypedAnnotationProxyBase;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object;

        r6 := @parameter2: org.apache.xmlbeans.impl.jam.JClass;

        if r0 != null goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null name");

        throw $r14;

     label1:
        if r1 != null goto label2;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null value");

        throw $r13;

     label2:
        $r3 = r2.<org.apache.xmlbeans.impl.jam.'annotation'.TypedAnnotationProxyBase: java.util.List mValues>;

        if $r3 != null goto label3;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r2.<org.apache.xmlbeans.impl.jam.'annotation'.TypedAnnotationProxyBase: java.util.List mValues> = $r12;

     label3:
        $r8 = r2.<org.apache.xmlbeans.impl.jam.'annotation'.TypedAnnotationProxyBase: java.util.List mValues>;

        $r4 = new org.apache.xmlbeans.impl.jam.internal.elements.AnnotationValueImpl;

        $r5 = r2.<org.apache.xmlbeans.impl.jam.'annotation'.TypedAnnotationProxyBase: org.apache.xmlbeans.impl.jam.provider.JamServiceContext mContext>;

        $r7 = (org.apache.xmlbeans.impl.jam.internal.elements.ElementContext) $r5;

        specialinvoke $r4.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotationValueImpl: void <init>(org.apache.xmlbeans.impl.jam.internal.elements.ElementContext,java.lang.String,java.lang.Object,org.apache.xmlbeans.impl.jam.JClass)>($r7, r0, r1, r6);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke r2.<org.apache.xmlbeans.impl.jam.'annotation'.TypedAnnotationProxyBase: java.lang.reflect.Method getSetterFor(java.lang.String,java.lang.Class)>(r0, $r9);

        if $r10 != null goto label4;

        return;

     label4:
        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r1;

        virtualinvoke $r10.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r11);

     label5:
        goto label8;

     label6:
        $r17 := @caughtexception;

        $r18 = virtualinvoke r2.<org.apache.xmlbeans.impl.jam.'annotation'.TypedAnnotationProxyBase: org.apache.xmlbeans.impl.jam.provider.JamLogger getLogger()>();

        interfaceinvoke $r18.<org.apache.xmlbeans.impl.jam.provider.JamLogger: void warning(java.lang.Throwable)>($r17);

        goto label8;

     label7:
        $r15 := @caughtexception;

        $r16 = virtualinvoke r2.<org.apache.xmlbeans.impl.jam.'annotation'.TypedAnnotationProxyBase: org.apache.xmlbeans.impl.jam.provider.JamLogger getLogger()>();

        interfaceinvoke $r16.<org.apache.xmlbeans.impl.jam.provider.JamLogger: void warning(java.lang.Throwable)>($r15);

     label8:
        return;

        catch java.lang.IllegalAccessException from label4 to label5 with label6;
        catch java.lang.reflect.InvocationTargetException from label4 to label5 with label7;
    }

    public org.apache.xmlbeans.impl.jam.JAnnotationValue[] getValues()
    {
        java.util.List $r1, $r2, $r4;
        int $i0;
        org.apache.xmlbeans.impl.jam.JAnnotationValue[] r3, $r5;
        org.apache.xmlbeans.impl.jam.'annotation'.TypedAnnotationProxyBase r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.'annotation'.TypedAnnotationProxyBase;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.'annotation'.TypedAnnotationProxyBase: java.util.List mValues>;

        if $r1 != null goto label1;

        $r5 = newarray (org.apache.xmlbeans.impl.jam.JAnnotationValue)[0];

        return $r5;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.jam.'annotation'.TypedAnnotationProxyBase: java.util.List mValues>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r3 = newarray (org.apache.xmlbeans.impl.jam.JAnnotationValue)[$i0];

        $r4 = r0.<org.apache.xmlbeans.impl.jam.'annotation'.TypedAnnotationProxyBase: java.util.List mValues>;

        interfaceinvoke $r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r3);

        return r3;
    }

    protected java.lang.reflect.Method getSetterFor(java.lang.String, java.lang.Class)
    {
        java.lang.NoSuchMethodException $r10;
        java.lang.Class[] $r7;
        org.apache.xmlbeans.impl.jam.'annotation'.TypedAnnotationProxyBase r0;
        org.apache.xmlbeans.impl.jam.provider.JamLogger $r11;
        java.lang.StringBuffer $r2, $r3, $r5;
        java.lang.Class $r1, r8;
        java.lang.String r4, $r6;
        java.lang.reflect.Method $r9;

        r0 := @this: org.apache.xmlbeans.impl.jam.'annotation'.TypedAnnotationProxyBase;

        r4 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.Class;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("set");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = newarray (java.lang.Class)[1];

        $r7[0] = r8;

        $r9 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r6, $r7);

     label2:
        return $r9;

     label3:
        $r10 := @caughtexception;

        $r11 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.'annotation'.TypedAnnotationProxyBase: org.apache.xmlbeans.impl.jam.provider.JamLogger getLogger()>();

        interfaceinvoke $r11.<org.apache.xmlbeans.impl.jam.provider.JamLogger: void warning(java.lang.Throwable)>($r10);

        return null;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }
}
