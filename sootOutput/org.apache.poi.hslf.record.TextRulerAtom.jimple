public final class org.apache.poi.hslf.record.TextRulerAtom extends org.apache.poi.hslf.record.RecordAtom
{
    private byte[] _header;
    private byte[] _data;
    private int defaultTabSize;
    private int numLevels;
    private int[] tabStops;
    private int[] bulletOffsets;
    private int[] textOffsets;

    public void <init>()
    {
        byte[] $r3, $r4, $r5, $r6, $r7;
        long $l0;
        short $s2;
        int[] $r1, $r2;
        int $i1, $i3;
        org.apache.poi.hslf.record.TextRulerAtom r0;

        r0 := @this: org.apache.poi.hslf.record.TextRulerAtom;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordAtom: void <init>()>();

        $r1 = newarray (int)[5];

        r0.<org.apache.poi.hslf.record.TextRulerAtom: int[] bulletOffsets> = $r1;

        $r2 = newarray (int)[5];

        r0.<org.apache.poi.hslf.record.TextRulerAtom: int[] textOffsets> = $r2;

        $r3 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.TextRulerAtom: byte[] _header> = $r3;

        $r4 = newarray (byte)[0];

        r0.<org.apache.poi.hslf.record.TextRulerAtom: byte[] _data> = $r4;

        $r5 = r0.<org.apache.poi.hslf.record.TextRulerAtom: byte[] _header>;

        $l0 = virtualinvoke r0.<org.apache.poi.hslf.record.TextRulerAtom: long getRecordType()>();

        $i1 = (int) $l0;

        $s2 = (short) $i1;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>($r5, 2, $s2);

        $r7 = r0.<org.apache.poi.hslf.record.TextRulerAtom: byte[] _header>;

        $r6 = r0.<org.apache.poi.hslf.record.TextRulerAtom: byte[] _data>;

        $i3 = lengthof $r6;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r7, 4, $i3);

        return;
    }

    protected void <init>(byte[], int, int)
    {
        byte[] $r3, r4, $r5, $r6, $r7;
        int[] $r1, $r2;
        int i0, i1, $i2, $i3, $i4;
        java.lang.String $r12, $r14;
        org.apache.poi.hslf.record.TextRulerAtom r0;
        org.apache.poi.util.POILogger $r10;
        java.lang.Exception $r8;
        java.lang.StringBuilder $r9, $r11, $r13;

        r0 := @this: org.apache.poi.hslf.record.TextRulerAtom;

        r4 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordAtom: void <init>()>();

        $r1 = newarray (int)[5];

        r0.<org.apache.poi.hslf.record.TextRulerAtom: int[] bulletOffsets> = $r1;

        $r2 = newarray (int)[5];

        r0.<org.apache.poi.hslf.record.TextRulerAtom: int[] textOffsets> = $r2;

        $r3 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.TextRulerAtom: byte[] _header> = $r3;

        $r5 = r0.<org.apache.poi.hslf.record.TextRulerAtom: byte[] _header>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, i0, $r5, 0, 8);

        $i2 = i1 - 8;

        $r6 = newarray (byte)[$i2];

        r0.<org.apache.poi.hslf.record.TextRulerAtom: byte[] _data> = $r6;

        $i4 = i0 + 8;

        $r7 = r0.<org.apache.poi.hslf.record.TextRulerAtom: byte[] _data>;

        $i3 = i1 - 8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, $i4, $r7, 0, $i3);

     label1:
        specialinvoke r0.<org.apache.poi.hslf.record.TextRulerAtom: void read()>();

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r10 = <org.apache.poi.hslf.record.TextRulerAtom: org.apache.poi.util.POILogger logger>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse TextRulerAtom: ");

        $r12 = virtualinvoke $r8.<java.lang.Exception: java.lang.String getMessage()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(7, $r14);

        virtualinvoke $r8.<java.lang.Exception: void printStackTrace()>();

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public long getRecordType()
    {
        org.apache.poi.hslf.record.RecordTypes$Type $r0;
        int $i0;
        long $l1;
        org.apache.poi.hslf.record.TextRulerAtom r1;

        r1 := @this: org.apache.poi.hslf.record.TextRulerAtom;

        $r0 = <org.apache.poi.hslf.record.RecordTypes: org.apache.poi.hslf.record.RecordTypes$Type TextRulerAtom>;

        $i0 = $r0.<org.apache.poi.hslf.record.RecordTypes$Type: int typeID>;

        $l1 = (long) $i0;

        return $l1;
    }

    public void writeOut(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r0;
        byte[] $r2, $r3;
        org.apache.poi.hslf.record.TextRulerAtom r1;

        r1 := @this: org.apache.poi.hslf.record.TextRulerAtom;

        r0 := @parameter0: java.io.OutputStream;

        $r2 = r1.<org.apache.poi.hslf.record.TextRulerAtom: byte[] _header>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r2);

        $r3 = r1.<org.apache.poi.hslf.record.TextRulerAtom: byte[] _data>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r3);

        return;
    }

    private void read()
    {
        byte[] $r1, $r3, $r5, $r7, $r10, $r12, $r13;
        int[] $r2, $r4, $r6, $r8, $r9, $r11;
        short $s0, $s6, $s9, $s12, $s16, $s17;
        int $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i10, $i11, $i13, $i14, $i15, i18, i19, i20, $i21, $i22, $i23, $i24, $i25, $i26;
        org.apache.poi.hslf.record.TextRulerAtom r0;

        r0 := @this: org.apache.poi.hslf.record.TextRulerAtom;

        $r1 = r0.<org.apache.poi.hslf.record.TextRulerAtom: byte[] _data>;

        $s0 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[])>($r1);

        i18 = 4;

        $r2 = newarray (int)[13];

        $r2[0] = 1;

        $r2[1] = 0;

        $r2[2] = 2;

        $r2[3] = 3;

        $r2[4] = 8;

        $r2[5] = 4;

        $r2[6] = 9;

        $r2[7] = 5;

        $r2[8] = 10;

        $r2[9] = 6;

        $r2[10] = 11;

        $r2[11] = 7;

        $r2[12] = 12;

        i19 = 0;

     label01:
        $i1 = lengthof $r2;

        if i19 >= $i1 goto label10;

        $i2 = $r2[i19];

        $i3 = 1 << $i2;

        $i21 = (int) $s0;

        $i4 = $i21 & $i3;

        if $i4 == 0 goto label09;

        $i5 = $r2[i19];

        tableswitch($i5)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label07;
            case 4: goto label07;
            case 5: goto label07;
            case 6: goto label07;
            case 7: goto label07;
            case 8: goto label08;
            case 9: goto label08;
            case 10: goto label08;
            case 11: goto label08;
            case 12: goto label08;
            default: goto label09;
        };

     label02:
        $r13 = r0.<org.apache.poi.hslf.record.TextRulerAtom: byte[] _data>;

        $s17 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r13, i18);

        $i22 = (int) $s17;

        r0.<org.apache.poi.hslf.record.TextRulerAtom: int defaultTabSize> = $i22;

        i18 = i18 + 2;

        goto label09;

     label03:
        $r12 = r0.<org.apache.poi.hslf.record.TextRulerAtom: byte[] _data>;

        $s16 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r12, i18);

        $i23 = (int) $s16;

        r0.<org.apache.poi.hslf.record.TextRulerAtom: int numLevels> = $i23;

        i18 = i18 + 2;

        goto label09;

     label04:
        $r7 = r0.<org.apache.poi.hslf.record.TextRulerAtom: byte[] _data>;

        $s12 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r7, i18);

        i18 = i18 + 2;

        $i24 = (int) $s12;

        $i13 = $i24 * 2;

        $r8 = newarray (int)[$i13];

        r0.<org.apache.poi.hslf.record.TextRulerAtom: int[] tabStops> = $r8;

        i20 = 0;

     label05:
        $r9 = r0.<org.apache.poi.hslf.record.TextRulerAtom: int[] tabStops>;

        $i14 = lengthof $r9;

        if i20 >= $i14 goto label06;

        $r11 = r0.<org.apache.poi.hslf.record.TextRulerAtom: int[] tabStops>;

        $r10 = r0.<org.apache.poi.hslf.record.TextRulerAtom: byte[] _data>;

        $i15 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>($r10, i18);

        $r11[i20] = $i15;

        i18 = i18 + 2;

        i20 = i20 + 1;

        goto label05;

     label06:
        goto label09;

     label07:
        $r5 = r0.<org.apache.poi.hslf.record.TextRulerAtom: byte[] _data>;

        $s9 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r5, i18);

        i18 = i18 + 2;

        $r6 = r0.<org.apache.poi.hslf.record.TextRulerAtom: int[] bulletOffsets>;

        $i10 = $r2[i19];

        $i11 = $i10 - 3;

        $i25 = (int) $s9;

        $r6[$i11] = $i25;

        goto label09;

     label08:
        $r3 = r0.<org.apache.poi.hslf.record.TextRulerAtom: byte[] _data>;

        $s6 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r3, i18);

        i18 = i18 + 2;

        $r4 = r0.<org.apache.poi.hslf.record.TextRulerAtom: int[] textOffsets>;

        $i7 = $r2[i19];

        $i8 = $i7 - 8;

        $i26 = (int) $s6;

        $r4[$i8] = $i26;

     label09:
        i19 = i19 + 1;

        goto label01;

     label10:
        return;
    }

    public int getDefaultTabSize()
    {
        int $i0;
        org.apache.poi.hslf.record.TextRulerAtom r0;

        r0 := @this: org.apache.poi.hslf.record.TextRulerAtom;

        $i0 = r0.<org.apache.poi.hslf.record.TextRulerAtom: int defaultTabSize>;

        return $i0;
    }

    public int getNumberOfLevels()
    {
        int $i0;
        org.apache.poi.hslf.record.TextRulerAtom r0;

        r0 := @this: org.apache.poi.hslf.record.TextRulerAtom;

        $i0 = r0.<org.apache.poi.hslf.record.TextRulerAtom: int numLevels>;

        return $i0;
    }

    public int[] getTabStops()
    {
        org.apache.poi.hslf.record.TextRulerAtom r0;
        int[] $r1;

        r0 := @this: org.apache.poi.hslf.record.TextRulerAtom;

        $r1 = r0.<org.apache.poi.hslf.record.TextRulerAtom: int[] tabStops>;

        return $r1;
    }

    public int[] getTextOffsets()
    {
        org.apache.poi.hslf.record.TextRulerAtom r0;
        int[] $r1;

        r0 := @this: org.apache.poi.hslf.record.TextRulerAtom;

        $r1 = r0.<org.apache.poi.hslf.record.TextRulerAtom: int[] textOffsets>;

        return $r1;
    }

    public int[] getBulletOffsets()
    {
        org.apache.poi.hslf.record.TextRulerAtom r0;
        int[] $r1;

        r0 := @this: org.apache.poi.hslf.record.TextRulerAtom;

        $r1 = r0.<org.apache.poi.hslf.record.TextRulerAtom: int[] bulletOffsets>;

        return $r1;
    }

    public static org.apache.poi.hslf.record.TextRulerAtom getParagraphInstance()
    {
        int $i0;
        byte[] $r0;
        org.apache.poi.hslf.record.TextRulerAtom $r1;

        $r0 = newarray (byte)[18];

        $r0[0] = 0;

        $r0[1] = 0;

        $r0[2] = -90;

        $r0[3] = 15;

        $r0[4] = 10;

        $r0[5] = 0;

        $r0[6] = 0;

        $r0[7] = 0;

        $r0[8] = 16;

        $r0[9] = 3;

        $r0[10] = 0;

        $r0[11] = 0;

        $r0[12] = -7;

        $r0[13] = 0;

        $r0[14] = 65;

        $r0[15] = 1;

        $r0[16] = 65;

        $r0[17] = 1;

        $r1 = new org.apache.poi.hslf.record.TextRulerAtom;

        $i0 = lengthof $r0;

        specialinvoke $r1.<org.apache.poi.hslf.record.TextRulerAtom: void <init>(byte[],int,int)>($r0, 0, $i0);

        return $r1;
    }

    public void setParagraphIndent(short, short)
    {
        byte[] $r1, $r2, $r3;
        short s0, s1;
        org.apache.poi.hslf.record.TextRulerAtom r0;

        r0 := @this: org.apache.poi.hslf.record.TextRulerAtom;

        s0 := @parameter0: short;

        s1 := @parameter1: short;

        $r1 = r0.<org.apache.poi.hslf.record.TextRulerAtom: byte[] _data>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>($r1, 4, s0);

        $r2 = r0.<org.apache.poi.hslf.record.TextRulerAtom: byte[] _data>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>($r2, 6, s1);

        $r3 = r0.<org.apache.poi.hslf.record.TextRulerAtom: byte[] _data>;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>($r3, 8, s1);

        return;
    }
}
