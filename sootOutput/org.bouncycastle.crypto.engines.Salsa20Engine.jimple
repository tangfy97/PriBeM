public class org.bouncycastle.crypto.engines.Salsa20Engine extends java.lang.Object implements org.bouncycastle.crypto.StreamCipher
{
    private static final int stateSize;
    private static final byte[] sigma;
    private static final byte[] tau;
    private int index;
    private int[] engineState;
    private int[] x;
    private byte[] keyStream;
    private byte[] workingKey;
    private byte[] workingIV;
    private boolean initialised;
    private int cW0;
    private int cW1;
    private int cW2;

    public void <init>()
    {
        byte[] $r3;
        int[] $r1, $r2;
        org.bouncycastle.crypto.engines.Salsa20Engine r0;

        r0 := @this: org.bouncycastle.crypto.engines.Salsa20Engine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int index> = 0;

        $r1 = newarray (int)[16];

        r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] engineState> = $r1;

        $r2 = newarray (int)[16];

        r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x> = $r2;

        $r3 = newarray (byte)[64];

        r0.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] keyStream> = $r3;

        r0.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] workingKey> = null;

        r0.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] workingIV> = null;

        r0.<org.bouncycastle.crypto.engines.Salsa20Engine: boolean initialised> = 0;

        return;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters)
    {
        byte[] $r2, $r8, $r9, $r10;
        org.bouncycastle.crypto.params.ParametersWithIV r1;
        int $i0;
        org.bouncycastle.crypto.params.KeyParameter r6;
        org.bouncycastle.crypto.CipherParameters r0, $r4, $r5;
        boolean $z0, $z1, z2;
        java.lang.IllegalArgumentException $r3, $r11, $r12;
        org.bouncycastle.crypto.engines.Salsa20Engine r7;

        r7 := @this: org.bouncycastle.crypto.engines.Salsa20Engine;

        z2 := @parameter0: boolean;

        r0 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        $z0 = r0 instanceof org.bouncycastle.crypto.params.ParametersWithIV;

        if $z0 != 0 goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Salsa20 Init parameters must include an IV");

        throw $r12;

     label1:
        r1 = (org.bouncycastle.crypto.params.ParametersWithIV) r0;

        $r2 = virtualinvoke r1.<org.bouncycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        if $r2 == null goto label2;

        $i0 = lengthof $r2;

        if $i0 == 8 goto label3;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Salsa20 requires exactly 8 bytes of IV");

        throw $r3;

     label3:
        $r4 = virtualinvoke r1.<org.bouncycastle.crypto.params.ParametersWithIV: org.bouncycastle.crypto.CipherParameters getParameters()>();

        $z1 = $r4 instanceof org.bouncycastle.crypto.params.KeyParameter;

        if $z1 != 0 goto label4;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Salsa20 Init parameters must include a key");

        throw $r11;

     label4:
        $r5 = virtualinvoke r1.<org.bouncycastle.crypto.params.ParametersWithIV: org.bouncycastle.crypto.CipherParameters getParameters()>();

        r6 = (org.bouncycastle.crypto.params.KeyParameter) $r5;

        $r8 = virtualinvoke r6.<org.bouncycastle.crypto.params.KeyParameter: byte[] getKey()>();

        r7.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] workingKey> = $r8;

        r7.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] workingIV> = $r2;

        $r10 = r7.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] workingKey>;

        $r9 = r7.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] workingIV>;

        specialinvoke r7.<org.bouncycastle.crypto.engines.Salsa20Engine: void setKey(byte[],byte[])>($r10, $r9);

        return;
    }

    public java.lang.String getAlgorithmName()
    {
        org.bouncycastle.crypto.engines.Salsa20Engine r0;

        r0 := @this: org.bouncycastle.crypto.engines.Salsa20Engine;

        return "Salsa20";
    }

    public byte returnByte(byte)
    {
        byte[] $r1, $r7;
        org.bouncycastle.crypto.MaxBytesExceededException $r6;
        byte b1, $b8, $b9, $b10;
        int[] $r2, $r3, $r4, $r5;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i11, $i12, $i13;
        boolean $z0;
        org.bouncycastle.crypto.engines.Salsa20Engine r0;

        r0 := @this: org.bouncycastle.crypto.engines.Salsa20Engine;

        b1 := @parameter0: byte;

        $z0 = specialinvoke r0.<org.bouncycastle.crypto.engines.Salsa20Engine: boolean limitExceeded()>();

        if $z0 == 0 goto label1;

        $r6 = new org.bouncycastle.crypto.MaxBytesExceededException;

        specialinvoke $r6.<org.bouncycastle.crypto.MaxBytesExceededException: void <init>(java.lang.String)>("2^70 byte limit per IV; Change IV");

        throw $r6;

     label1:
        $i0 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int index>;

        if $i0 != 0 goto label2;

        $r2 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] engineState>;

        $r1 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] keyStream>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.Salsa20Engine: void salsa20WordToByte(int[],byte[])>($r2, $r1);

        $r3 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] engineState>;

        $i2 = $r3[8];

        $i3 = $i2 + 1;

        $r3[8] = $i3;

        $r4 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] engineState>;

        $i4 = $r4[8];

        if $i4 != 0 goto label2;

        $r5 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] engineState>;

        $i5 = $r5[9];

        $i6 = $i5 + 1;

        $r5[9] = $i6;

     label2:
        $r7 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] keyStream>;

        $i7 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int index>;

        $b8 = $r7[$i7];

        $b9 = $b8 ^ b1;

        $b10 = (byte) $b9;

        $i11 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int index>;

        $i12 = $i11 + 1;

        $i13 = $i12 & 63;

        r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int index> = $i13;

        return $b10;
    }

    public void processBytes(byte[], int, int, byte[], int)
    {
        byte[] r1, r2, $r3, $r17;
        java.lang.IllegalStateException $r11;
        org.bouncycastle.crypto.DataLengthException $r9, $r10;
        byte $b16, $b18, $b19, $b20;
        int[] $r4, $r5, $r6, $r7;
        boolean $z0, $z1;
        java.lang.StringBuilder $r12, $r14, $r15;
        org.bouncycastle.crypto.MaxBytesExceededException $r8;
        int i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i14, $i15, $i17, $i21, $i22, $i23;
        java.lang.String $r13, $r16;
        org.bouncycastle.crypto.engines.Salsa20Engine r0;

        r0 := @this: org.bouncycastle.crypto.engines.Salsa20Engine;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        i4 := @parameter4: int;

        $z0 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: boolean initialised>;

        if $z0 != 0 goto label1;

        $r11 = new java.lang.IllegalStateException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r0.<org.bouncycastle.crypto.engines.Salsa20Engine: java.lang.String getAlgorithmName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not initialised");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r11;

     label1:
        $i3 = i0 + i1;

        $i2 = lengthof r1;

        if $i3 <= $i2 goto label2;

        $r10 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r10.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input buffer too short");

        throw $r10;

     label2:
        $i6 = i4 + i1;

        $i5 = lengthof r2;

        if $i6 <= $i5 goto label3;

        $r9 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r9.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r9;

     label3:
        $z1 = specialinvoke r0.<org.bouncycastle.crypto.engines.Salsa20Engine: boolean limitExceeded(int)>(i1);

        if $z1 == 0 goto label4;

        $r8 = new org.bouncycastle.crypto.MaxBytesExceededException;

        specialinvoke $r8.<org.bouncycastle.crypto.MaxBytesExceededException: void <init>(java.lang.String)>("2^70 byte limit per IV would be exceeded; Change IV");

        throw $r8;

     label4:
        i13 = 0;

     label5:
        if i13 >= i1 goto label7;

        $i7 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int index>;

        if $i7 != 0 goto label6;

        $r4 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] engineState>;

        $r3 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] keyStream>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.Salsa20Engine: void salsa20WordToByte(int[],byte[])>($r4, $r3);

        $r5 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] engineState>;

        $i8 = $r5[8];

        $i9 = $i8 + 1;

        $r5[8] = $i9;

        $r6 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] engineState>;

        $i10 = $r6[8];

        if $i10 != 0 goto label6;

        $r7 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] engineState>;

        $i11 = $r7[9];

        $i12 = $i11 + 1;

        $r7[9] = $i12;

     label6:
        $i14 = i13 + i4;

        $r17 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] keyStream>;

        $i15 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int index>;

        $b16 = $r17[$i15];

        $i17 = i13 + i0;

        $b18 = r1[$i17];

        $b19 = $b16 ^ $b18;

        $b20 = (byte) $b19;

        r2[$i14] = $b20;

        $i21 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int index>;

        $i22 = $i21 + 1;

        $i23 = $i22 & 63;

        r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int index> = $i23;

        i13 = i13 + 1;

        goto label5;

     label7:
        return;
    }

    public void reset()
    {
        org.bouncycastle.crypto.engines.Salsa20Engine r0;
        byte[] $r1, $r2;

        r0 := @this: org.bouncycastle.crypto.engines.Salsa20Engine;

        $r2 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] workingKey>;

        $r1 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] workingIV>;

        specialinvoke r0.<org.bouncycastle.crypto.engines.Salsa20Engine: void setKey(byte[],byte[])>($r2, $r1);

        return;
    }

    private void setKey(byte[], byte[])
    {
        byte[] r1, r2, $r3, $r5, $r7, $r9, $r11, $r12, $r14, $r16, $r18, $r24, $r26, r30;
        byte b18, b19, b20, b21, b22;
        int[] $r4, $r6, $r8, $r10, $r13, $r15, $r17, $r19, $r20, $r21, $r22, $r23, $r25, $r27, $r28, $r29;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        org.bouncycastle.crypto.engines.Salsa20Engine r0;

        r0 := @this: org.bouncycastle.crypto.engines.Salsa20Engine;

        r1 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        r0.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] workingKey> = r1;

        r0.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] workingIV> = r2;

        r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int index> = 0;

        specialinvoke r0.<org.bouncycastle.crypto.engines.Salsa20Engine: void resetCounter()>();

        b18 = 0;

        b22 = 0;

        b21 = 0;

        b20 = 0;

        b19 = 0;

        $r4 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] engineState>;

        $r3 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] workingKey>;

        $i0 = specialinvoke r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int byteToIntLittle(byte[],int)>($r3, 0);

        $r4[1] = $i0;

        $r6 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] engineState>;

        $r5 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] workingKey>;

        $i1 = specialinvoke r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int byteToIntLittle(byte[],int)>($r5, 4);

        $r6[2] = $i1;

        $r8 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] engineState>;

        $r7 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] workingKey>;

        $i2 = specialinvoke r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int byteToIntLittle(byte[],int)>($r7, 8);

        $r8[3] = $i2;

        $r10 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] engineState>;

        $r9 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] workingKey>;

        $i3 = specialinvoke r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int byteToIntLittle(byte[],int)>($r9, 12);

        $r10[4] = $i3;

        $r11 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] workingKey>;

        $i4 = lengthof $r11;

        if $i4 != 32 goto label1;

        r30 = <org.bouncycastle.crypto.engines.Salsa20Engine: byte[] sigma>;

        b18 = 16;

        b22 = 16;

        b21 = 16;

        b20 = 16;

        b19 = 16;

        goto label2;

     label1:
        r30 = <org.bouncycastle.crypto.engines.Salsa20Engine: byte[] tau>;

     label2:
        $r13 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] engineState>;

        $r12 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] workingKey>;

        $i5 = specialinvoke r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int byteToIntLittle(byte[],int)>($r12, b21);

        $r13[11] = $i5;

        $r15 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] engineState>;

        $r14 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] workingKey>;

        $i6 = b22 + 4;

        $i7 = specialinvoke r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int byteToIntLittle(byte[],int)>($r14, $i6);

        $r15[12] = $i7;

        $r17 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] engineState>;

        $r16 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] workingKey>;

        $i8 = b19 + 8;

        $i9 = specialinvoke r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int byteToIntLittle(byte[],int)>($r16, $i8);

        $r17[13] = $i9;

        $r19 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] engineState>;

        $r18 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] workingKey>;

        $i10 = b20 + 12;

        $i11 = specialinvoke r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int byteToIntLittle(byte[],int)>($r18, $i10);

        $r19[14] = $i11;

        $r20 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] engineState>;

        $i12 = specialinvoke r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int byteToIntLittle(byte[],int)>(r30, 0);

        $r20[0] = $i12;

        $r21 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] engineState>;

        $i13 = specialinvoke r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int byteToIntLittle(byte[],int)>(r30, 4);

        $r21[5] = $i13;

        $r22 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] engineState>;

        $i14 = specialinvoke r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int byteToIntLittle(byte[],int)>(r30, 8);

        $r22[10] = $i14;

        $r23 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] engineState>;

        $i15 = specialinvoke r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int byteToIntLittle(byte[],int)>(r30, 12);

        $r23[15] = $i15;

        $r25 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] engineState>;

        $r24 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] workingIV>;

        $i16 = specialinvoke r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int byteToIntLittle(byte[],int)>($r24, 0);

        $r25[6] = $i16;

        $r27 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] engineState>;

        $r26 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] workingIV>;

        $i17 = specialinvoke r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int byteToIntLittle(byte[],int)>($r26, 4);

        $r27[7] = $i17;

        $r29 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] engineState>;

        $r28 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] engineState>;

        $r28[9] = 0;

        $r29[8] = 0;

        r0.<org.bouncycastle.crypto.engines.Salsa20Engine: boolean initialised> = 1;

        return;
    }

    private void salsa20WordToByte(int[], byte[])
    {
        org.bouncycastle.crypto.engines.Salsa20Engine r1;
        int[] r0, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, i198, i199, i200, i201;
        byte[] r5;

        r1 := @this: org.bouncycastle.crypto.engines.Salsa20Engine;

        r0 := @parameter0: int[];

        r5 := @parameter1: byte[];

        $r2 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i0 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, $r2, 0, $i0);

        i198 = 0;

     label1:
        if i198 >= 10 goto label2;

        $r7 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i9 = $r7[4];

        $r8 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i7 = $r8[0];

        $r9 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i6 = $r9[12];

        $i8 = $i7 + $i6;

        $i10 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i8, 7);

        $i11 = $i9 ^ $i10;

        $r7[4] = $i11;

        $r10 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i15 = $r10[8];

        $r11 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i13 = $r11[4];

        $r12 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i12 = $r12[0];

        $i14 = $i13 + $i12;

        $i16 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i14, 9);

        $i17 = $i15 ^ $i16;

        $r10[8] = $i17;

        $r13 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i21 = $r13[12];

        $r14 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i19 = $r14[8];

        $r15 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i18 = $r15[4];

        $i20 = $i19 + $i18;

        $i22 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i20, 13);

        $i23 = $i21 ^ $i22;

        $r13[12] = $i23;

        $r16 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i27 = $r16[0];

        $r17 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i25 = $r17[12];

        $r18 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i24 = $r18[8];

        $i26 = $i25 + $i24;

        $i28 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i26, 18);

        $i29 = $i27 ^ $i28;

        $r16[0] = $i29;

        $r19 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i33 = $r19[9];

        $r20 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i31 = $r20[5];

        $r21 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i30 = $r21[1];

        $i32 = $i31 + $i30;

        $i34 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i32, 7);

        $i35 = $i33 ^ $i34;

        $r19[9] = $i35;

        $r22 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i39 = $r22[13];

        $r23 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i37 = $r23[9];

        $r24 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i36 = $r24[5];

        $i38 = $i37 + $i36;

        $i40 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i38, 9);

        $i41 = $i39 ^ $i40;

        $r22[13] = $i41;

        $r25 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i45 = $r25[1];

        $r26 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i43 = $r26[13];

        $r27 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i42 = $r27[9];

        $i44 = $i43 + $i42;

        $i46 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i44, 13);

        $i47 = $i45 ^ $i46;

        $r25[1] = $i47;

        $r28 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i51 = $r28[5];

        $r29 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i49 = $r29[1];

        $r30 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i48 = $r30[13];

        $i50 = $i49 + $i48;

        $i52 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i50, 18);

        $i53 = $i51 ^ $i52;

        $r28[5] = $i53;

        $r31 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i57 = $r31[14];

        $r32 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i55 = $r32[10];

        $r33 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i54 = $r33[6];

        $i56 = $i55 + $i54;

        $i58 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i56, 7);

        $i59 = $i57 ^ $i58;

        $r31[14] = $i59;

        $r34 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i63 = $r34[2];

        $r35 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i61 = $r35[14];

        $r36 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i60 = $r36[10];

        $i62 = $i61 + $i60;

        $i64 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i62, 9);

        $i65 = $i63 ^ $i64;

        $r34[2] = $i65;

        $r37 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i69 = $r37[6];

        $r38 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i67 = $r38[2];

        $r39 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i66 = $r39[14];

        $i68 = $i67 + $i66;

        $i70 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i68, 13);

        $i71 = $i69 ^ $i70;

        $r37[6] = $i71;

        $r40 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i75 = $r40[10];

        $r41 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i73 = $r41[6];

        $r42 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i72 = $r42[2];

        $i74 = $i73 + $i72;

        $i76 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i74, 18);

        $i77 = $i75 ^ $i76;

        $r40[10] = $i77;

        $r43 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i81 = $r43[3];

        $r44 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i79 = $r44[15];

        $r45 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i78 = $r45[11];

        $i80 = $i79 + $i78;

        $i82 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i80, 7);

        $i83 = $i81 ^ $i82;

        $r43[3] = $i83;

        $r46 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i87 = $r46[7];

        $r47 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i85 = $r47[3];

        $r48 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i84 = $r48[15];

        $i86 = $i85 + $i84;

        $i88 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i86, 9);

        $i89 = $i87 ^ $i88;

        $r46[7] = $i89;

        $r49 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i93 = $r49[11];

        $r50 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i91 = $r50[7];

        $r51 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i90 = $r51[3];

        $i92 = $i91 + $i90;

        $i94 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i92, 13);

        $i95 = $i93 ^ $i94;

        $r49[11] = $i95;

        $r52 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i99 = $r52[15];

        $r53 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i97 = $r53[11];

        $r54 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i96 = $r54[7];

        $i98 = $i97 + $i96;

        $i100 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i98, 18);

        $i101 = $i99 ^ $i100;

        $r52[15] = $i101;

        $r55 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i105 = $r55[1];

        $r56 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i103 = $r56[0];

        $r57 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i102 = $r57[3];

        $i104 = $i103 + $i102;

        $i106 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i104, 7);

        $i107 = $i105 ^ $i106;

        $r55[1] = $i107;

        $r58 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i111 = $r58[2];

        $r59 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i109 = $r59[1];

        $r60 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i108 = $r60[0];

        $i110 = $i109 + $i108;

        $i112 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i110, 9);

        $i113 = $i111 ^ $i112;

        $r58[2] = $i113;

        $r61 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i117 = $r61[3];

        $r62 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i115 = $r62[2];

        $r63 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i114 = $r63[1];

        $i116 = $i115 + $i114;

        $i118 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i116, 13);

        $i119 = $i117 ^ $i118;

        $r61[3] = $i119;

        $r64 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i123 = $r64[0];

        $r65 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i121 = $r65[3];

        $r66 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i120 = $r66[2];

        $i122 = $i121 + $i120;

        $i124 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i122, 18);

        $i125 = $i123 ^ $i124;

        $r64[0] = $i125;

        $r67 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i129 = $r67[6];

        $r68 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i127 = $r68[5];

        $r69 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i126 = $r69[4];

        $i128 = $i127 + $i126;

        $i130 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i128, 7);

        $i131 = $i129 ^ $i130;

        $r67[6] = $i131;

        $r70 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i135 = $r70[7];

        $r71 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i133 = $r71[6];

        $r72 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i132 = $r72[5];

        $i134 = $i133 + $i132;

        $i136 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i134, 9);

        $i137 = $i135 ^ $i136;

        $r70[7] = $i137;

        $r73 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i141 = $r73[4];

        $r74 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i139 = $r74[7];

        $r75 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i138 = $r75[6];

        $i140 = $i139 + $i138;

        $i142 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i140, 13);

        $i143 = $i141 ^ $i142;

        $r73[4] = $i143;

        $r76 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i147 = $r76[5];

        $r77 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i145 = $r77[4];

        $r78 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i144 = $r78[7];

        $i146 = $i145 + $i144;

        $i148 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i146, 18);

        $i149 = $i147 ^ $i148;

        $r76[5] = $i149;

        $r79 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i153 = $r79[11];

        $r80 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i151 = $r80[10];

        $r81 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i150 = $r81[9];

        $i152 = $i151 + $i150;

        $i154 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i152, 7);

        $i155 = $i153 ^ $i154;

        $r79[11] = $i155;

        $r82 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i159 = $r82[8];

        $r83 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i157 = $r83[11];

        $r84 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i156 = $r84[10];

        $i158 = $i157 + $i156;

        $i160 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i158, 9);

        $i161 = $i159 ^ $i160;

        $r82[8] = $i161;

        $r85 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i165 = $r85[9];

        $r86 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i163 = $r86[8];

        $r87 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i162 = $r87[11];

        $i164 = $i163 + $i162;

        $i166 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i164, 13);

        $i167 = $i165 ^ $i166;

        $r85[9] = $i167;

        $r88 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i171 = $r88[10];

        $r89 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i169 = $r89[9];

        $r90 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i168 = $r90[8];

        $i170 = $i169 + $i168;

        $i172 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i170, 18);

        $i173 = $i171 ^ $i172;

        $r88[10] = $i173;

        $r91 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i177 = $r91[12];

        $r92 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i175 = $r92[15];

        $r93 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i174 = $r93[14];

        $i176 = $i175 + $i174;

        $i178 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i176, 7);

        $i179 = $i177 ^ $i178;

        $r91[12] = $i179;

        $r94 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i183 = $r94[13];

        $r95 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i181 = $r95[12];

        $r96 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i180 = $r96[15];

        $i182 = $i181 + $i180;

        $i184 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i182, 9);

        $i185 = $i183 ^ $i184;

        $r94[13] = $i185;

        $r97 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i189 = $r97[14];

        $r98 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i187 = $r98[13];

        $r99 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i186 = $r99[12];

        $i188 = $i187 + $i186;

        $i190 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i188, 13);

        $i191 = $i189 ^ $i190;

        $r97[14] = $i191;

        $r100 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i195 = $r100[15];

        $r101 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i193 = $r101[14];

        $r102 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i192 = $r102[13];

        $i194 = $i193 + $i192;

        $i196 = specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int rotl(int,int)>($i194, 18);

        $i197 = $i195 ^ $i196;

        $r100[15] = $i197;

        i198 = i198 + 1;

        goto label1;

     label2:
        i199 = 0;

        i200 = 0;

     label3:
        if i200 >= 16 goto label4;

        $r6 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i4 = $r6[i200];

        $i3 = r0[i200];

        $i5 = $i4 + $i3;

        specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] intToByteLittle(int,byte[],int)>($i5, r5, i199);

        i199 = i199 + 4;

        i200 = i200 + 1;

        goto label3;

     label4:
        i201 = 16;

     label5:
        $r3 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i1 = lengthof $r3;

        if i201 >= $i1 goto label6;

        $r4 = r1.<org.bouncycastle.crypto.engines.Salsa20Engine: int[] x>;

        $i2 = $r4[i201];

        specialinvoke r1.<org.bouncycastle.crypto.engines.Salsa20Engine: byte[] intToByteLittle(int,byte[],int)>($i2, r5, i199);

        i199 = i199 + 4;

        i201 = i201 + 1;

        goto label5;

     label6:
        return;
    }

    private byte[] intToByteLittle(int, byte[], int)
    {
        byte[] r0;
        byte $b2, $b4, $b7, $b10;
        int i0, i1, $i3, $i5, $i6, $i8, $i9, $i11;
        org.bouncycastle.crypto.engines.Salsa20Engine r1;

        r1 := @this: org.bouncycastle.crypto.engines.Salsa20Engine;

        i1 := @parameter0: int;

        r0 := @parameter1: byte[];

        i0 := @parameter2: int;

        $b2 = (byte) i1;

        r0[i0] = $b2;

        $i5 = i0 + 1;

        $i3 = i1 >>> 8;

        $b4 = (byte) $i3;

        r0[$i5] = $b4;

        $i8 = i0 + 2;

        $i6 = i1 >>> 16;

        $b7 = (byte) $i6;

        r0[$i8] = $b7;

        $i11 = i0 + 3;

        $i9 = i1 >>> 24;

        $b10 = (byte) $i9;

        r0[$i11] = $b10;

        return r0;
    }

    private int rotl(int, int)
    {
        int i0, i1, $i2, $i3, $i4, $i5;
        org.bouncycastle.crypto.engines.Salsa20Engine r0;

        r0 := @this: org.bouncycastle.crypto.engines.Salsa20Engine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i4 = i0 << i1;

        $i2 = neg i1;

        $i3 = i0 >>> $i2;

        $i5 = $i4 | $i3;

        return $i5;
    }

    private int byteToIntLittle(byte[], int)
    {
        byte[] r0;
        short $s4, $s6, $s9, $s17, $s18, $s21;
        byte $b1, $b3, $b8, $b13;
        int i0, $i2, $i5, $i7, $i10, $i11, $i12, $i14, $i15, $i16, $i19, $i20, $i22, $i23;
        org.bouncycastle.crypto.engines.Salsa20Engine r1;

        r1 := @this: org.bouncycastle.crypto.engines.Salsa20Engine;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $b1 = r0[i0];

        $s17 = (short) $b1;

        $s6 = $s17 & 255;

        $i2 = i0 + 1;

        $b3 = r0[$i2];

        $s18 = (short) $b3;

        $s4 = $s18 & 255;

        $i19 = (int) $s4;

        $i5 = $i19 << 8;

        $i20 = (int) $s6;

        $i11 = $i20 | $i5;

        $i7 = i0 + 2;

        $b8 = r0[$i7];

        $s21 = (short) $b8;

        $s9 = $s21 & 255;

        $i22 = (int) $s9;

        $i10 = $i22 << 16;

        $i15 = $i11 | $i10;

        $i12 = i0 + 3;

        $b13 = r0[$i12];

        $i23 = (int) $b13;

        $i14 = $i23 << 24;

        $i16 = $i15 | $i14;

        return $i16;
    }

    private void resetCounter()
    {
        org.bouncycastle.crypto.engines.Salsa20Engine r0;

        r0 := @this: org.bouncycastle.crypto.engines.Salsa20Engine;

        r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int cW0> = 0;

        r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int cW1> = 0;

        r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int cW2> = 0;

        return;
    }

    private boolean limitExceeded()
    {
        org.bouncycastle.crypto.engines.Salsa20Engine r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.engines.Salsa20Engine;

        $i0 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int cW0>;

        $i1 = $i0 + 1;

        r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int cW0> = $i1;

        $i2 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int cW0>;

        if $i2 != 0 goto label3;

        $i3 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int cW1>;

        $i4 = $i3 + 1;

        r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int cW1> = $i4;

        $i5 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int cW1>;

        if $i5 != 0 goto label3;

        $i6 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int cW2>;

        $i7 = $i6 + 1;

        r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int cW2> = $i7;

        $i8 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int cW2>;

        $i9 = $i8 & 32;

        if $i9 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        return 0;
    }

    private boolean limitExceeded(int)
    {
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean $z0;
        org.bouncycastle.crypto.engines.Salsa20Engine r0;

        r0 := @this: org.bouncycastle.crypto.engines.Salsa20Engine;

        i1 := @parameter0: int;

        $i0 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int cW0>;

        if $i0 < 0 goto label1;

        $i12 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int cW0>;

        $i13 = $i12 + i1;

        r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int cW0> = $i13;

        goto label4;

     label1:
        $i2 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int cW0>;

        $i3 = $i2 + i1;

        r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int cW0> = $i3;

        $i4 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int cW0>;

        if $i4 < 0 goto label4;

        $i5 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int cW1>;

        $i6 = $i5 + 1;

        r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int cW1> = $i6;

        $i7 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int cW1>;

        if $i7 != 0 goto label4;

        $i8 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int cW2>;

        $i9 = $i8 + 1;

        r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int cW2> = $i9;

        $i10 = r0.<org.bouncycastle.crypto.engines.Salsa20Engine: int cW2>;

        $i11 = $i10 & 32;

        if $i11 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        return 0;
    }

    static void <clinit>()
    {
        byte[] $r0, $r1;

        <org.bouncycastle.crypto.engines.Salsa20Engine: int stateSize> = 16;

        $r0 = staticinvoke <org.bouncycastle.util.Strings: byte[] toByteArray(java.lang.String)>("expand 32-byte k");

        <org.bouncycastle.crypto.engines.Salsa20Engine: byte[] sigma> = $r0;

        $r1 = staticinvoke <org.bouncycastle.util.Strings: byte[] toByteArray(java.lang.String)>("expand 16-byte k");

        <org.bouncycastle.crypto.engines.Salsa20Engine: byte[] tau> = $r1;

        return;
    }
}
