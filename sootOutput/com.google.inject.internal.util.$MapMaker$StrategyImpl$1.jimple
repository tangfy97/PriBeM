class com.google.inject.internal.util.$MapMaker$StrategyImpl$1 extends java.util.TimerTask
{
    final java.lang.ref.WeakReference val$keyReference;
    final java.lang.ref.WeakReference val$valueReference;
    final com.google.inject.internal.util.$MapMaker$StrategyImpl this$0;

    void <init>(com.google.inject.internal.util.$MapMaker$StrategyImpl, java.lang.ref.WeakReference, java.lang.ref.WeakReference)
    {
        com.google.inject.internal.util.$MapMaker$StrategyImpl r1;
        com.google.inject.internal.util.$MapMaker$StrategyImpl$1 r0;
        java.lang.ref.WeakReference r2, r3;

        r0 := @this: com.google.inject.internal.util.$MapMaker$StrategyImpl$1;

        r1 := @parameter0: com.google.inject.internal.util.$MapMaker$StrategyImpl;

        r2 := @parameter1: java.lang.ref.WeakReference;

        r3 := @parameter2: java.lang.ref.WeakReference;

        r0.<com.google.inject.internal.util.$MapMaker$StrategyImpl$1: com.google.inject.internal.util.$MapMaker$StrategyImpl this$0> = r1;

        r0.<com.google.inject.internal.util.$MapMaker$StrategyImpl$1: java.lang.ref.WeakReference val$keyReference> = r2;

        r0.<com.google.inject.internal.util.$MapMaker$StrategyImpl$1: java.lang.ref.WeakReference val$valueReference> = r3;

        specialinvoke r0.<java.util.TimerTask: void <init>()>();

        return;
    }

    public void run()
    {
        com.google.inject.internal.util.$MapMaker$StrategyImpl $r3;
        com.google.inject.internal.util.$MapMaker$StrategyImpl$1 r0;
        java.lang.Object $r2, $r6;
        java.lang.ref.WeakReference $r1, $r4;
        java.util.concurrent.ConcurrentMap $r5;

        r0 := @this: com.google.inject.internal.util.$MapMaker$StrategyImpl$1;

        $r1 = r0.<com.google.inject.internal.util.$MapMaker$StrategyImpl$1: java.lang.ref.WeakReference val$keyReference>;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r2 == null goto label1;

        $r3 = r0.<com.google.inject.internal.util.$MapMaker$StrategyImpl$1: com.google.inject.internal.util.$MapMaker$StrategyImpl this$0>;

        $r5 = $r3.<com.google.inject.internal.util.$MapMaker$StrategyImpl: java.util.concurrent.ConcurrentMap map>;

        $r4 = r0.<com.google.inject.internal.util.$MapMaker$StrategyImpl$1: java.lang.ref.WeakReference val$valueReference>;

        $r6 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        interfaceinvoke $r5.<java.util.concurrent.ConcurrentMap: boolean remove(java.lang.Object,java.lang.Object)>($r2, $r6);

     label1:
        return;
    }
}
