class groovyjarjarantlr.build.StreamScarfer extends java.lang.Thread
{
    java.io.InputStream is;
    java.lang.String type;
    groovyjarjarantlr.build.Tool tool;

    void <init>(java.io.InputStream, java.lang.String, groovyjarjarantlr.build.Tool)
    {
        groovyjarjarantlr.build.StreamScarfer r0;
        groovyjarjarantlr.build.Tool r3;
        java.lang.String r2;
        java.io.InputStream r1;

        r0 := @this: groovyjarjarantlr.build.StreamScarfer;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: groovyjarjarantlr.build.Tool;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        r0.<groovyjarjarantlr.build.StreamScarfer: java.io.InputStream is> = r1;

        r0.<groovyjarjarantlr.build.StreamScarfer: java.lang.String type> = r2;

        r0.<groovyjarjarantlr.build.StreamScarfer: groovyjarjarantlr.build.Tool tool> = r3;

        return;
    }

    public void run()
    {
        groovyjarjarantlr.build.Tool $r5, $r7;
        java.io.IOException $r8;
        java.io.InputStreamReader $r0;
        groovyjarjarantlr.build.StreamScarfer r1;
        java.io.BufferedReader $r3;
        java.lang.String $r4, $r6, $r9;
        java.io.InputStream $r2;
        boolean $z0;

        r1 := @this: groovyjarjarantlr.build.StreamScarfer;

     label1:
        $r0 = new java.io.InputStreamReader;

        $r2 = r1.<groovyjarjarantlr.build.StreamScarfer: java.io.InputStream is>;

        specialinvoke $r0.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r2);

        $r3 = new java.io.BufferedReader;

        specialinvoke $r3.<java.io.BufferedReader: void <init>(java.io.Reader)>($r0);

     label2:
        $r9 = virtualinvoke $r3.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r9 == null goto label5;

        $r4 = r1.<groovyjarjarantlr.build.StreamScarfer: java.lang.String type>;

        if $r4 == null goto label3;

        $r6 = r1.<groovyjarjarantlr.build.StreamScarfer: java.lang.String type>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("stdout");

        if $z0 == 0 goto label4;

     label3:
        $r5 = r1.<groovyjarjarantlr.build.StreamScarfer: groovyjarjarantlr.build.Tool tool>;

        virtualinvoke $r5.<groovyjarjarantlr.build.Tool: void stdout(java.lang.String)>($r9);

        goto label2;

     label4:
        $r7 = r1.<groovyjarjarantlr.build.StreamScarfer: groovyjarjarantlr.build.Tool tool>;

        virtualinvoke $r7.<groovyjarjarantlr.build.Tool: void stderr(java.lang.String)>($r9);

        goto label2;

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;

        virtualinvoke $r8.<java.io.IOException: void printStackTrace()>();

     label7:
        return;

        catch java.io.IOException from label1 to label5 with label6;
    }
}
