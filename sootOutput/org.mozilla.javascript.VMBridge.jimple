public abstract class org.mozilla.javascript.VMBridge extends java.lang.Object
{
    static final org.mozilla.javascript.VMBridge instance;

    public void <init>()
    {
        org.mozilla.javascript.VMBridge r0;

        r0 := @this: org.mozilla.javascript.VMBridge;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static org.mozilla.javascript.VMBridge makeInstance()
    {
        java.lang.IllegalStateException $r0;
        org.mozilla.javascript.VMBridge r2;
        int i0;
        java.lang.Object $r1;
        java.lang.Class $r4;
        java.lang.String r3;

        i0 = 0;

     label1:
        if i0 == 3 goto label6;

        if i0 != 0 goto label2;

        r3 = "org.mozilla.javascript.VMBridge_custom";

        goto label4;

     label2:
        if i0 != 1 goto label3;

        r3 = "org.mozilla.javascript.jdk13.VMBridge_jdk13";

        goto label4;

     label3:
        r3 = "org.mozilla.javascript.jdk11.VMBridge_jdk11";

     label4:
        $r4 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.String)>(r3);

        if $r4 == null goto label5;

        $r1 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Object newInstanceOrNull(java.lang.Class)>($r4);

        r2 = (org.mozilla.javascript.VMBridge) $r1;

        if r2 == null goto label5;

        return r2;

     label5:
        i0 = i0 + 1;

        goto label1;

     label6:
        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Failed to create VMBridge instance");

        throw $r0;
    }

    protected abstract java.lang.Object getThreadContextHelper();

    protected abstract org.mozilla.javascript.Context getContext(java.lang.Object);

    protected abstract void setContext(java.lang.Object, org.mozilla.javascript.Context);

    protected abstract java.lang.ClassLoader getCurrentThreadClassLoader();

    protected abstract boolean tryToMakeAccessible(java.lang.Object);

    protected java.lang.Object getInterfaceProxyHelper(org.mozilla.javascript.ContextFactory, java.lang.Class[])
    {
        org.mozilla.javascript.VMBridge r1;
        org.mozilla.javascript.EvaluatorException $r0;
        java.lang.Class[] r3;
        org.mozilla.javascript.ContextFactory r2;

        r1 := @this: org.mozilla.javascript.VMBridge;

        r2 := @parameter0: org.mozilla.javascript.ContextFactory;

        r3 := @parameter1: java.lang.Class[];

        $r0 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError(java.lang.String)>("VMBridge.getInterfaceProxyHelper is not supported");

        throw $r0;
    }

    protected java.lang.Object newInterfaceProxy(java.lang.Object, org.mozilla.javascript.ContextFactory, org.mozilla.javascript.InterfaceAdapter, java.lang.Object, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Scriptable r6;
        org.mozilla.javascript.VMBridge r1;
        org.mozilla.javascript.EvaluatorException $r0;
        java.lang.Object r2, r5;
        org.mozilla.javascript.ContextFactory r3;
        org.mozilla.javascript.InterfaceAdapter r4;

        r1 := @this: org.mozilla.javascript.VMBridge;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: org.mozilla.javascript.ContextFactory;

        r4 := @parameter2: org.mozilla.javascript.InterfaceAdapter;

        r5 := @parameter3: java.lang.Object;

        r6 := @parameter4: org.mozilla.javascript.Scriptable;

        $r0 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError(java.lang.String)>("VMBridge.newInterfaceProxy is not supported");

        throw $r0;
    }

    static void <clinit>()
    {
        org.mozilla.javascript.VMBridge $r0;

        $r0 = staticinvoke <org.mozilla.javascript.VMBridge: org.mozilla.javascript.VMBridge makeInstance()>();

        <org.mozilla.javascript.VMBridge: org.mozilla.javascript.VMBridge instance> = $r0;

        return;
    }
}
