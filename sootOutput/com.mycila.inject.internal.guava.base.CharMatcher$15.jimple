class com.mycila.inject.internal.guava.base.CharMatcher$15 extends com.mycila.inject.internal.guava.base.CharMatcher
{
    final com.mycila.inject.internal.guava.base.CharMatcher$LookupTable val$table;
    final com.mycila.inject.internal.guava.base.CharMatcher this$0;

    void <init>(com.mycila.inject.internal.guava.base.CharMatcher, com.mycila.inject.internal.guava.base.CharMatcher$LookupTable)
    {
        com.mycila.inject.internal.guava.base.CharMatcher$LookupTable r2;
        com.mycila.inject.internal.guava.base.CharMatcher$15 r0;
        com.mycila.inject.internal.guava.base.CharMatcher r1;

        r0 := @this: com.mycila.inject.internal.guava.base.CharMatcher$15;

        r1 := @parameter0: com.mycila.inject.internal.guava.base.CharMatcher;

        r2 := @parameter1: com.mycila.inject.internal.guava.base.CharMatcher$LookupTable;

        r0.<com.mycila.inject.internal.guava.base.CharMatcher$15: com.mycila.inject.internal.guava.base.CharMatcher this$0> = r1;

        r0.<com.mycila.inject.internal.guava.base.CharMatcher$15: com.mycila.inject.internal.guava.base.CharMatcher$LookupTable val$table> = r2;

        specialinvoke r0.<com.mycila.inject.internal.guava.base.CharMatcher: void <init>()>();

        return;
    }

    public boolean matches(char)
    {
        com.mycila.inject.internal.guava.base.CharMatcher$LookupTable $r1;
        com.mycila.inject.internal.guava.base.CharMatcher$15 r0;
        char c0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.base.CharMatcher$15;

        c0 := @parameter0: char;

        $r1 = r0.<com.mycila.inject.internal.guava.base.CharMatcher$15: com.mycila.inject.internal.guava.base.CharMatcher$LookupTable val$table>;

        $z0 = virtualinvoke $r1.<com.mycila.inject.internal.guava.base.CharMatcher$LookupTable: boolean get(char)>(c0);

        return $z0;
    }

    public com.mycila.inject.internal.guava.base.CharMatcher precomputed()
    {
        com.mycila.inject.internal.guava.base.CharMatcher$15 r0;

        r0 := @this: com.mycila.inject.internal.guava.base.CharMatcher$15;

        return r0;
    }

    public volatile boolean apply(java.lang.Object)
    {
        java.lang.Character $r2;
        com.mycila.inject.internal.guava.base.CharMatcher$15 r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.base.CharMatcher$15;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Character) r1;

        $z0 = specialinvoke r0.<com.mycila.inject.internal.guava.base.CharMatcher: boolean apply(java.lang.Character)>($r2);

        return $z0;
    }
}
