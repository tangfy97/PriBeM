public class org.apache.lucene.sandbox.queries.regex.RegexQuery extends org.apache.lucene.search.MultiTermQuery implements org.apache.lucene.sandbox.queries.regex.RegexQueryCapable
{
    private org.apache.lucene.sandbox.queries.regex.RegexCapabilities regexImpl;
    private org.apache.lucene.index.Term term;

    public void <init>(org.apache.lucene.index.Term)
    {
        org.apache.lucene.sandbox.queries.regex.RegexQuery r0;
        org.apache.lucene.sandbox.queries.regex.JavaUtilRegexCapabilities $r3;
        org.apache.lucene.index.Term r1;
        java.lang.String $r2;

        r0 := @this: org.apache.lucene.sandbox.queries.regex.RegexQuery;

        r1 := @parameter0: org.apache.lucene.index.Term;

        $r2 = virtualinvoke r1.<org.apache.lucene.index.Term: java.lang.String field()>();

        specialinvoke r0.<org.apache.lucene.search.MultiTermQuery: void <init>(java.lang.String)>($r2);

        $r3 = new org.apache.lucene.sandbox.queries.regex.JavaUtilRegexCapabilities;

        specialinvoke $r3.<org.apache.lucene.sandbox.queries.regex.JavaUtilRegexCapabilities: void <init>()>();

        r0.<org.apache.lucene.sandbox.queries.regex.RegexQuery: org.apache.lucene.sandbox.queries.regex.RegexCapabilities regexImpl> = $r3;

        r0.<org.apache.lucene.sandbox.queries.regex.RegexQuery: org.apache.lucene.index.Term term> = r1;

        return;
    }

    public org.apache.lucene.index.Term getTerm()
    {
        org.apache.lucene.sandbox.queries.regex.RegexQuery r0;
        org.apache.lucene.index.Term $r1;

        r0 := @this: org.apache.lucene.sandbox.queries.regex.RegexQuery;

        $r1 = r0.<org.apache.lucene.sandbox.queries.regex.RegexQuery: org.apache.lucene.index.Term term>;

        return $r1;
    }

    public void setRegexImplementation(org.apache.lucene.sandbox.queries.regex.RegexCapabilities)
    {
        org.apache.lucene.sandbox.queries.regex.RegexQuery r0;
        org.apache.lucene.sandbox.queries.regex.RegexCapabilities r1;

        r0 := @this: org.apache.lucene.sandbox.queries.regex.RegexQuery;

        r1 := @parameter0: org.apache.lucene.sandbox.queries.regex.RegexCapabilities;

        r0.<org.apache.lucene.sandbox.queries.regex.RegexQuery: org.apache.lucene.sandbox.queries.regex.RegexCapabilities regexImpl> = r1;

        return;
    }

    public org.apache.lucene.sandbox.queries.regex.RegexCapabilities getRegexImplementation()
    {
        org.apache.lucene.sandbox.queries.regex.RegexQuery r0;
        org.apache.lucene.sandbox.queries.regex.RegexCapabilities $r1;

        r0 := @this: org.apache.lucene.sandbox.queries.regex.RegexQuery;

        $r1 = r0.<org.apache.lucene.sandbox.queries.regex.RegexQuery: org.apache.lucene.sandbox.queries.regex.RegexCapabilities regexImpl>;

        return $r1;
    }

    protected org.apache.lucene.index.FilteredTermsEnum getTermsEnum(org.apache.lucene.index.Terms, org.apache.lucene.util.AttributeSource) throws java.io.IOException
    {
        org.apache.lucene.sandbox.queries.regex.RegexQuery r3;
        org.apache.lucene.sandbox.queries.regex.RegexCapabilities $r4;
        org.apache.lucene.index.Terms r1;
        org.apache.lucene.index.TermsEnum $r2;
        org.apache.lucene.index.Term $r5;
        org.apache.lucene.util.AttributeSource r6;
        org.apache.lucene.sandbox.queries.regex.RegexTermsEnum $r0;

        r3 := @this: org.apache.lucene.sandbox.queries.regex.RegexQuery;

        r1 := @parameter0: org.apache.lucene.index.Terms;

        r6 := @parameter1: org.apache.lucene.util.AttributeSource;

        $r0 = new org.apache.lucene.sandbox.queries.regex.RegexTermsEnum;

        $r2 = virtualinvoke r1.<org.apache.lucene.index.Terms: org.apache.lucene.index.TermsEnum iterator(org.apache.lucene.index.TermsEnum)>(null);

        $r5 = r3.<org.apache.lucene.sandbox.queries.regex.RegexQuery: org.apache.lucene.index.Term term>;

        $r4 = r3.<org.apache.lucene.sandbox.queries.regex.RegexQuery: org.apache.lucene.sandbox.queries.regex.RegexCapabilities regexImpl>;

        specialinvoke $r0.<org.apache.lucene.sandbox.queries.regex.RegexTermsEnum: void <init>(org.apache.lucene.index.TermsEnum,org.apache.lucene.index.Term,org.apache.lucene.sandbox.queries.regex.RegexCapabilities)>($r2, $r5, $r4);

        return $r0;
    }

    public java.lang.String toString(java.lang.String)
    {
        org.apache.lucene.sandbox.queries.regex.RegexQuery r1;
        org.apache.lucene.index.Term $r2, $r5, $r9;
        float $f0;
        java.lang.StringBuilder $r0;
        java.lang.String $r3, r4, $r6, $r7, $r8, $r10;
        boolean $z0;

        r1 := @this: org.apache.lucene.sandbox.queries.regex.RegexQuery;

        r4 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.lucene.sandbox.queries.regex.RegexQuery: org.apache.lucene.index.Term term>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.Term: java.lang.String field()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 != 0 goto label1;

        $r9 = r1.<org.apache.lucene.sandbox.queries.regex.RegexQuery: org.apache.lucene.index.Term term>;

        $r10 = virtualinvoke $r9.<org.apache.lucene.index.Term: java.lang.String field()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

     label1:
        $r5 = r1.<org.apache.lucene.sandbox.queries.regex.RegexQuery: org.apache.lucene.index.Term term>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.index.Term: java.lang.String text()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $f0 = virtualinvoke r1.<org.apache.lucene.sandbox.queries.regex.RegexQuery: float getBoost()>();

        $r7 = staticinvoke <org.apache.lucene.util.ToStringUtils: java.lang.String boost(float)>($f0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r8 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public int hashCode()
    {
        org.apache.lucene.sandbox.queries.regex.RegexQuery r0;
        org.apache.lucene.index.Term $r3, $r4;
        org.apache.lucene.sandbox.queries.regex.RegexCapabilities $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: org.apache.lucene.sandbox.queries.regex.RegexQuery;

        $i0 = specialinvoke r0.<org.apache.lucene.search.MultiTermQuery: int hashCode()>();

        $i1 = 31 * $i0;

        $r1 = r0.<org.apache.lucene.sandbox.queries.regex.RegexQuery: org.apache.lucene.sandbox.queries.regex.RegexCapabilities regexImpl>;

        if $r1 != null goto label1;

        $i5 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.lucene.sandbox.queries.regex.RegexQuery: org.apache.lucene.sandbox.queries.regex.RegexCapabilities regexImpl>;

        $i5 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

     label2:
        $i4 = $i1 + $i5;

        $i2 = 31 * $i4;

        $r3 = r0.<org.apache.lucene.sandbox.queries.regex.RegexQuery: org.apache.lucene.index.Term term>;

        if $r3 != null goto label3;

        $i6 = 0;

        goto label4;

     label3:
        $r4 = r0.<org.apache.lucene.sandbox.queries.regex.RegexQuery: org.apache.lucene.index.Term term>;

        $i6 = virtualinvoke $r4.<org.apache.lucene.index.Term: int hashCode()>();

     label4:
        $i3 = $i2 + $i6;

        return $i3;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.lucene.index.Term $r8, $r9, $r10, $r11;
        boolean $z0, $z1, $z2;
        org.apache.lucene.sandbox.queries.regex.RegexQuery r0, r4;
        org.apache.lucene.sandbox.queries.regex.RegexCapabilities $r5, $r6, $r7, $r12;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;

        r0 := @this: org.apache.lucene.sandbox.queries.regex.RegexQuery;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<org.apache.lucene.search.MultiTermQuery: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        r4 = (org.apache.lucene.sandbox.queries.regex.RegexQuery) r1;

        $r5 = r0.<org.apache.lucene.sandbox.queries.regex.RegexQuery: org.apache.lucene.sandbox.queries.regex.RegexCapabilities regexImpl>;

        if $r5 != null goto label4;

        $r12 = r4.<org.apache.lucene.sandbox.queries.regex.RegexQuery: org.apache.lucene.sandbox.queries.regex.RegexCapabilities regexImpl>;

        if $r12 == null goto label5;

        return 0;

     label4:
        $r7 = r0.<org.apache.lucene.sandbox.queries.regex.RegexQuery: org.apache.lucene.sandbox.queries.regex.RegexCapabilities regexImpl>;

        $r6 = r4.<org.apache.lucene.sandbox.queries.regex.RegexQuery: org.apache.lucene.sandbox.queries.regex.RegexCapabilities regexImpl>;

        $z1 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        $r8 = r0.<org.apache.lucene.sandbox.queries.regex.RegexQuery: org.apache.lucene.index.Term term>;

        if $r8 != null goto label6;

        $r11 = r4.<org.apache.lucene.sandbox.queries.regex.RegexQuery: org.apache.lucene.index.Term term>;

        if $r11 == null goto label7;

        return 0;

     label6:
        $r10 = r0.<org.apache.lucene.sandbox.queries.regex.RegexQuery: org.apache.lucene.index.Term term>;

        $r9 = r4.<org.apache.lucene.sandbox.queries.regex.RegexQuery: org.apache.lucene.index.Term term>;

        $z2 = virtualinvoke $r10.<org.apache.lucene.index.Term: boolean equals(java.lang.Object)>($r9);

        if $z2 != 0 goto label7;

        return 0;

     label7:
        return 1;
    }

    protected volatile org.apache.lucene.index.TermsEnum getTermsEnum(org.apache.lucene.index.Terms, org.apache.lucene.util.AttributeSource) throws java.io.IOException
    {
        org.apache.lucene.sandbox.queries.regex.RegexQuery r0;
        org.apache.lucene.index.Terms r1;
        org.apache.lucene.util.AttributeSource r2;
        org.apache.lucene.index.FilteredTermsEnum $r3;

        r0 := @this: org.apache.lucene.sandbox.queries.regex.RegexQuery;

        r1 := @parameter0: org.apache.lucene.index.Terms;

        r2 := @parameter1: org.apache.lucene.util.AttributeSource;

        $r3 = virtualinvoke r0.<org.apache.lucene.sandbox.queries.regex.RegexQuery: org.apache.lucene.index.FilteredTermsEnum getTermsEnum(org.apache.lucene.index.Terms,org.apache.lucene.util.AttributeSource)>(r1, r2);

        return $r3;
    }
}
