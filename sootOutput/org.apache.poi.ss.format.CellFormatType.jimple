public abstract enum class org.apache.poi.ss.format.CellFormatType extends java.lang.Enum
{
    public static final enum org.apache.poi.ss.format.CellFormatType GENERAL;
    public static final enum org.apache.poi.ss.format.CellFormatType NUMBER;
    public static final enum org.apache.poi.ss.format.CellFormatType DATE;
    public static final enum org.apache.poi.ss.format.CellFormatType ELAPSED;
    public static final enum org.apache.poi.ss.format.CellFormatType TEXT;
    private static final org.apache.poi.ss.format.CellFormatType[] $VALUES;

    public static org.apache.poi.ss.format.CellFormatType[] values()
    {
        java.lang.Object $r1;
        org.apache.poi.ss.format.CellFormatType[] $r0, $r2;

        $r0 = <org.apache.poi.ss.format.CellFormatType: org.apache.poi.ss.format.CellFormatType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.poi.ss.format.CellFormatType[]) $r1;

        return $r2;
    }

    public static org.apache.poi.ss.format.CellFormatType valueOf(java.lang.String)
    {
        org.apache.poi.ss.format.CellFormatType $r2;
        java.lang.String r0;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/poi/ss/format/CellFormatType;", r0);

        $r2 = (org.apache.poi.ss.format.CellFormatType) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        org.apache.poi.ss.format.CellFormatType r0;
        java.lang.String r1;

        r0 := @this: org.apache.poi.ss.format.CellFormatType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    abstract boolean isSpecial(char);

    abstract org.apache.poi.ss.format.CellFormatter formatter(java.lang.String);

    void <init>(java.lang.String, int, org.apache.poi.ss.format.CellFormatType$1)
    {
        org.apache.poi.ss.format.CellFormatType r0;
        int i0;
        java.lang.String r1;
        org.apache.poi.ss.format.CellFormatType$1 r2;

        r0 := @this: org.apache.poi.ss.format.CellFormatType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.poi.ss.format.CellFormatType$1;

        specialinvoke r0.<org.apache.poi.ss.format.CellFormatType: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        org.apache.poi.ss.format.CellFormatType[] $r5;
        org.apache.poi.ss.format.CellFormatType $r6, $r7, $r8, $r9, $r10;
        org.apache.poi.ss.format.CellFormatType$2 $r1;
        org.apache.poi.ss.format.CellFormatType$3 $r2;
        org.apache.poi.ss.format.CellFormatType$4 $r3;
        org.apache.poi.ss.format.CellFormatType$5 $r4;
        org.apache.poi.ss.format.CellFormatType$1 $r0;

        $r0 = new org.apache.poi.ss.format.CellFormatType$1;

        specialinvoke $r0.<org.apache.poi.ss.format.CellFormatType$1: void <init>(java.lang.String,int)>("GENERAL", 0);

        <org.apache.poi.ss.format.CellFormatType: org.apache.poi.ss.format.CellFormatType GENERAL> = $r0;

        $r1 = new org.apache.poi.ss.format.CellFormatType$2;

        specialinvoke $r1.<org.apache.poi.ss.format.CellFormatType$2: void <init>(java.lang.String,int)>("NUMBER", 1);

        <org.apache.poi.ss.format.CellFormatType: org.apache.poi.ss.format.CellFormatType NUMBER> = $r1;

        $r2 = new org.apache.poi.ss.format.CellFormatType$3;

        specialinvoke $r2.<org.apache.poi.ss.format.CellFormatType$3: void <init>(java.lang.String,int)>("DATE", 2);

        <org.apache.poi.ss.format.CellFormatType: org.apache.poi.ss.format.CellFormatType DATE> = $r2;

        $r3 = new org.apache.poi.ss.format.CellFormatType$4;

        specialinvoke $r3.<org.apache.poi.ss.format.CellFormatType$4: void <init>(java.lang.String,int)>("ELAPSED", 3);

        <org.apache.poi.ss.format.CellFormatType: org.apache.poi.ss.format.CellFormatType ELAPSED> = $r3;

        $r4 = new org.apache.poi.ss.format.CellFormatType$5;

        specialinvoke $r4.<org.apache.poi.ss.format.CellFormatType$5: void <init>(java.lang.String,int)>("TEXT", 4);

        <org.apache.poi.ss.format.CellFormatType: org.apache.poi.ss.format.CellFormatType TEXT> = $r4;

        $r5 = newarray (org.apache.poi.ss.format.CellFormatType)[5];

        $r6 = <org.apache.poi.ss.format.CellFormatType: org.apache.poi.ss.format.CellFormatType GENERAL>;

        $r5[0] = $r6;

        $r7 = <org.apache.poi.ss.format.CellFormatType: org.apache.poi.ss.format.CellFormatType NUMBER>;

        $r5[1] = $r7;

        $r8 = <org.apache.poi.ss.format.CellFormatType: org.apache.poi.ss.format.CellFormatType DATE>;

        $r5[2] = $r8;

        $r9 = <org.apache.poi.ss.format.CellFormatType: org.apache.poi.ss.format.CellFormatType ELAPSED>;

        $r5[3] = $r9;

        $r10 = <org.apache.poi.ss.format.CellFormatType: org.apache.poi.ss.format.CellFormatType TEXT>;

        $r5[4] = $r10;

        <org.apache.poi.ss.format.CellFormatType: org.apache.poi.ss.format.CellFormatType[] $VALUES> = $r5;

        return;
    }
}
