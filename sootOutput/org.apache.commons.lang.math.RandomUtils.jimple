public class org.apache.commons.lang.math.RandomUtils extends java.lang.Object
{
    public static final java.util.Random JVM_RANDOM;

    public void <init>()
    {
        org.apache.commons.lang.math.RandomUtils r0;

        r0 := @this: org.apache.commons.lang.math.RandomUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int nextInt()
    {
        int $i0;
        java.util.Random $r0;

        $r0 = <org.apache.commons.lang.math.RandomUtils: java.util.Random JVM_RANDOM>;

        $i0 = staticinvoke <org.apache.commons.lang.math.RandomUtils: int nextInt(java.util.Random)>($r0);

        return $i0;
    }

    public static int nextInt(java.util.Random)
    {
        int $i0;
        java.util.Random r0;

        r0 := @parameter0: java.util.Random;

        $i0 = virtualinvoke r0.<java.util.Random: int nextInt()>();

        return $i0;
    }

    public static int nextInt(int)
    {
        int i0, $i1;
        java.util.Random $r0;

        i0 := @parameter0: int;

        $r0 = <org.apache.commons.lang.math.RandomUtils: java.util.Random JVM_RANDOM>;

        $i1 = staticinvoke <org.apache.commons.lang.math.RandomUtils: int nextInt(java.util.Random,int)>($r0, i0);

        return $i1;
    }

    public static int nextInt(java.util.Random, int)
    {
        int i0, $i1;
        java.util.Random r0;

        r0 := @parameter0: java.util.Random;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<java.util.Random: int nextInt(int)>(i0);

        return $i1;
    }

    public static long nextLong()
    {
        java.util.Random $r0;
        long $l0;

        $r0 = <org.apache.commons.lang.math.RandomUtils: java.util.Random JVM_RANDOM>;

        $l0 = staticinvoke <org.apache.commons.lang.math.RandomUtils: long nextLong(java.util.Random)>($r0);

        return $l0;
    }

    public static long nextLong(java.util.Random)
    {
        java.util.Random r0;
        long $l0;

        r0 := @parameter0: java.util.Random;

        $l0 = virtualinvoke r0.<java.util.Random: long nextLong()>();

        return $l0;
    }

    public static boolean nextBoolean()
    {
        java.util.Random $r0;
        boolean $z0;

        $r0 = <org.apache.commons.lang.math.RandomUtils: java.util.Random JVM_RANDOM>;

        $z0 = staticinvoke <org.apache.commons.lang.math.RandomUtils: boolean nextBoolean(java.util.Random)>($r0);

        return $z0;
    }

    public static boolean nextBoolean(java.util.Random)
    {
        java.util.Random r0;
        boolean $z0;

        r0 := @parameter0: java.util.Random;

        $z0 = virtualinvoke r0.<java.util.Random: boolean nextBoolean()>();

        return $z0;
    }

    public static float nextFloat()
    {
        float $f0;
        java.util.Random $r0;

        $r0 = <org.apache.commons.lang.math.RandomUtils: java.util.Random JVM_RANDOM>;

        $f0 = staticinvoke <org.apache.commons.lang.math.RandomUtils: float nextFloat(java.util.Random)>($r0);

        return $f0;
    }

    public static float nextFloat(java.util.Random)
    {
        float $f0;
        java.util.Random r0;

        r0 := @parameter0: java.util.Random;

        $f0 = virtualinvoke r0.<java.util.Random: float nextFloat()>();

        return $f0;
    }

    public static double nextDouble()
    {
        java.util.Random $r0;
        double $d0;

        $r0 = <org.apache.commons.lang.math.RandomUtils: java.util.Random JVM_RANDOM>;

        $d0 = staticinvoke <org.apache.commons.lang.math.RandomUtils: double nextDouble(java.util.Random)>($r0);

        return $d0;
    }

    public static double nextDouble(java.util.Random)
    {
        java.util.Random r0;
        double $d0;

        r0 := @parameter0: java.util.Random;

        $d0 = virtualinvoke r0.<java.util.Random: double nextDouble()>();

        return $d0;
    }

    static void <clinit>()
    {
        org.apache.commons.lang.math.JVMRandom $r0;

        $r0 = new org.apache.commons.lang.math.JVMRandom;

        specialinvoke $r0.<org.apache.commons.lang.math.JVMRandom: void <init>()>();

        <org.apache.commons.lang.math.RandomUtils: java.util.Random JVM_RANDOM> = $r0;

        return;
    }
}
