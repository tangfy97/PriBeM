public class org.apache.batik.dom.events.DocumentEventSupport extends java.lang.Object
{
    public static final java.lang.String EVENT_TYPE;
    public static final java.lang.String MUTATION_EVENT_TYPE;
    public static final java.lang.String MUTATION_NAME_EVENT_TYPE;
    public static final java.lang.String MOUSE_EVENT_TYPE;
    public static final java.lang.String UI_EVENT_TYPE;
    public static final java.lang.String KEYBOARD_EVENT_TYPE;
    public static final java.lang.String TEXT_EVENT_TYPE;
    public static final java.lang.String CUSTOM_EVENT_TYPE;
    public static final java.lang.String EVENT_DOM2_TYPE;
    public static final java.lang.String MUTATION_EVENT_DOM2_TYPE;
    public static final java.lang.String MOUSE_EVENT_DOM2_TYPE;
    public static final java.lang.String UI_EVENT_DOM2_TYPE;
    public static final java.lang.String KEY_EVENT_DOM2_TYPE;
    protected org.apache.batik.dom.util.HashTable eventFactories;

    public void <init>()
    {
        org.apache.batik.dom.events.DocumentEventSupport$MutationNameEventFactory $r13;
        org.apache.batik.dom.events.DocumentEventSupport$SimpleEventFactory $r5, $r37;
        org.apache.batik.dom.util.HashTable $r1, $r3, $r7, $r11, $r15, $r19, $r23, $r27, $r31, $r35, $r39, $r43, $r47, $r51;
        org.apache.batik.dom.events.DocumentEventSupport$KeyboardEventFactory $r21;
        org.apache.batik.dom.events.DocumentEventSupport$TextEventFactory $r29;
        org.apache.batik.dom.events.DocumentEventSupport$KeyEventFactory $r49;
        org.apache.batik.dom.events.DocumentEventSupport r0;
        org.apache.batik.dom.events.DocumentEventSupport$MutationEventFactory $r9, $r41;
        java.lang.String $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r46, $r48, $r50, $r52;
        org.apache.batik.dom.events.DocumentEventSupport$UIEventFactory $r25, $r53;
        org.apache.batik.dom.events.DocumentEventSupport$CustomEventFactory $r33;
        org.apache.batik.dom.events.DocumentEventSupport$MouseEventFactory $r17, $r45;

        r0 := @this: org.apache.batik.dom.events.DocumentEventSupport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.batik.dom.util.HashTable;

        specialinvoke $r1.<org.apache.batik.dom.util.HashTable: void <init>()>();

        r0.<org.apache.batik.dom.events.DocumentEventSupport: org.apache.batik.dom.util.HashTable eventFactories> = $r1;

        $r3 = r0.<org.apache.batik.dom.events.DocumentEventSupport: org.apache.batik.dom.util.HashTable eventFactories>;

        $r2 = "Event";

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        $r5 = new org.apache.batik.dom.events.DocumentEventSupport$SimpleEventFactory;

        specialinvoke $r5.<org.apache.batik.dom.events.DocumentEventSupport$SimpleEventFactory: void <init>()>();

        virtualinvoke $r3.<org.apache.batik.dom.util.HashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

        $r7 = r0.<org.apache.batik.dom.events.DocumentEventSupport: org.apache.batik.dom.util.HashTable eventFactories>;

        $r6 = "MutationEvent";

        $r8 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>();

        $r9 = new org.apache.batik.dom.events.DocumentEventSupport$MutationEventFactory;

        specialinvoke $r9.<org.apache.batik.dom.events.DocumentEventSupport$MutationEventFactory: void <init>()>();

        virtualinvoke $r7.<org.apache.batik.dom.util.HashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

        $r11 = r0.<org.apache.batik.dom.events.DocumentEventSupport: org.apache.batik.dom.util.HashTable eventFactories>;

        $r10 = "MutationNameEvent";

        $r12 = virtualinvoke $r10.<java.lang.String: java.lang.String toLowerCase()>();

        $r13 = new org.apache.batik.dom.events.DocumentEventSupport$MutationNameEventFactory;

        specialinvoke $r13.<org.apache.batik.dom.events.DocumentEventSupport$MutationNameEventFactory: void <init>()>();

        virtualinvoke $r11.<org.apache.batik.dom.util.HashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r13);

        $r15 = r0.<org.apache.batik.dom.events.DocumentEventSupport: org.apache.batik.dom.util.HashTable eventFactories>;

        $r14 = "MouseEvent";

        $r16 = virtualinvoke $r14.<java.lang.String: java.lang.String toLowerCase()>();

        $r17 = new org.apache.batik.dom.events.DocumentEventSupport$MouseEventFactory;

        specialinvoke $r17.<org.apache.batik.dom.events.DocumentEventSupport$MouseEventFactory: void <init>()>();

        virtualinvoke $r15.<org.apache.batik.dom.util.HashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r17);

        $r19 = r0.<org.apache.batik.dom.events.DocumentEventSupport: org.apache.batik.dom.util.HashTable eventFactories>;

        $r18 = "KeyboardEvent";

        $r20 = virtualinvoke $r18.<java.lang.String: java.lang.String toLowerCase()>();

        $r21 = new org.apache.batik.dom.events.DocumentEventSupport$KeyboardEventFactory;

        specialinvoke $r21.<org.apache.batik.dom.events.DocumentEventSupport$KeyboardEventFactory: void <init>()>();

        virtualinvoke $r19.<org.apache.batik.dom.util.HashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r21);

        $r23 = r0.<org.apache.batik.dom.events.DocumentEventSupport: org.apache.batik.dom.util.HashTable eventFactories>;

        $r22 = "UIEvent";

        $r24 = virtualinvoke $r22.<java.lang.String: java.lang.String toLowerCase()>();

        $r25 = new org.apache.batik.dom.events.DocumentEventSupport$UIEventFactory;

        specialinvoke $r25.<org.apache.batik.dom.events.DocumentEventSupport$UIEventFactory: void <init>()>();

        virtualinvoke $r23.<org.apache.batik.dom.util.HashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r25);

        $r27 = r0.<org.apache.batik.dom.events.DocumentEventSupport: org.apache.batik.dom.util.HashTable eventFactories>;

        $r26 = "TextEvent";

        $r28 = virtualinvoke $r26.<java.lang.String: java.lang.String toLowerCase()>();

        $r29 = new org.apache.batik.dom.events.DocumentEventSupport$TextEventFactory;

        specialinvoke $r29.<org.apache.batik.dom.events.DocumentEventSupport$TextEventFactory: void <init>()>();

        virtualinvoke $r27.<org.apache.batik.dom.util.HashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, $r29);

        $r31 = r0.<org.apache.batik.dom.events.DocumentEventSupport: org.apache.batik.dom.util.HashTable eventFactories>;

        $r30 = "CustomEvent";

        $r32 = virtualinvoke $r30.<java.lang.String: java.lang.String toLowerCase()>();

        $r33 = new org.apache.batik.dom.events.DocumentEventSupport$CustomEventFactory;

        specialinvoke $r33.<org.apache.batik.dom.events.DocumentEventSupport$CustomEventFactory: void <init>()>();

        virtualinvoke $r31.<org.apache.batik.dom.util.HashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r32, $r33);

        $r35 = r0.<org.apache.batik.dom.events.DocumentEventSupport: org.apache.batik.dom.util.HashTable eventFactories>;

        $r34 = "Events";

        $r36 = virtualinvoke $r34.<java.lang.String: java.lang.String toLowerCase()>();

        $r37 = new org.apache.batik.dom.events.DocumentEventSupport$SimpleEventFactory;

        specialinvoke $r37.<org.apache.batik.dom.events.DocumentEventSupport$SimpleEventFactory: void <init>()>();

        virtualinvoke $r35.<org.apache.batik.dom.util.HashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r36, $r37);

        $r39 = r0.<org.apache.batik.dom.events.DocumentEventSupport: org.apache.batik.dom.util.HashTable eventFactories>;

        $r38 = "MutationEvents";

        $r40 = virtualinvoke $r38.<java.lang.String: java.lang.String toLowerCase()>();

        $r41 = new org.apache.batik.dom.events.DocumentEventSupport$MutationEventFactory;

        specialinvoke $r41.<org.apache.batik.dom.events.DocumentEventSupport$MutationEventFactory: void <init>()>();

        virtualinvoke $r39.<org.apache.batik.dom.util.HashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r40, $r41);

        $r43 = r0.<org.apache.batik.dom.events.DocumentEventSupport: org.apache.batik.dom.util.HashTable eventFactories>;

        $r42 = "MouseEvents";

        $r44 = virtualinvoke $r42.<java.lang.String: java.lang.String toLowerCase()>();

        $r45 = new org.apache.batik.dom.events.DocumentEventSupport$MouseEventFactory;

        specialinvoke $r45.<org.apache.batik.dom.events.DocumentEventSupport$MouseEventFactory: void <init>()>();

        virtualinvoke $r43.<org.apache.batik.dom.util.HashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r44, $r45);

        $r47 = r0.<org.apache.batik.dom.events.DocumentEventSupport: org.apache.batik.dom.util.HashTable eventFactories>;

        $r46 = "KeyEvents";

        $r48 = virtualinvoke $r46.<java.lang.String: java.lang.String toLowerCase()>();

        $r49 = new org.apache.batik.dom.events.DocumentEventSupport$KeyEventFactory;

        specialinvoke $r49.<org.apache.batik.dom.events.DocumentEventSupport$KeyEventFactory: void <init>()>();

        virtualinvoke $r47.<org.apache.batik.dom.util.HashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r48, $r49);

        $r51 = r0.<org.apache.batik.dom.events.DocumentEventSupport: org.apache.batik.dom.util.HashTable eventFactories>;

        $r50 = "UIEvents";

        $r52 = virtualinvoke $r50.<java.lang.String: java.lang.String toLowerCase()>();

        $r53 = new org.apache.batik.dom.events.DocumentEventSupport$UIEventFactory;

        specialinvoke $r53.<org.apache.batik.dom.events.DocumentEventSupport$UIEventFactory: void <init>()>();

        virtualinvoke $r51.<org.apache.batik.dom.util.HashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r52, $r53);

        return;
    }

    public org.w3c.dom.events.Event createEvent(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.events.DocumentEventSupport$EventFactory r5;
        org.apache.batik.dom.util.HashTable $r2;
        java.lang.StringBuffer $r8, $r9, $r10;
        org.w3c.dom.DOMException $r7;
        org.w3c.dom.events.Event $r6;
        org.apache.batik.dom.events.DocumentEventSupport r0;
        java.lang.Object $r4;
        java.lang.String r1, $r3, $r11;

        r0 := @this: org.apache.batik.dom.events.DocumentEventSupport;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.batik.dom.events.DocumentEventSupport: org.apache.batik.dom.util.HashTable eventFactories>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r4 = virtualinvoke $r2.<org.apache.batik.dom.util.HashTable: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (org.apache.batik.dom.events.DocumentEventSupport$EventFactory) $r4;

        if r5 != null goto label1;

        $r7 = new org.w3c.dom.DOMException;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Bad event type: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(9, $r11);

        throw $r7;

     label1:
        $r6 = interfaceinvoke r5.<org.apache.batik.dom.events.DocumentEventSupport$EventFactory: org.w3c.dom.events.Event createEvent()>();

        return $r6;
    }

    public void registerEventFactory(java.lang.String, org.apache.batik.dom.events.DocumentEventSupport$EventFactory)
    {
        org.apache.batik.dom.util.HashTable $r2;
        org.apache.batik.dom.events.DocumentEventSupport$EventFactory r4;
        org.apache.batik.dom.events.DocumentEventSupport r0;
        java.lang.String r1, $r3;

        r0 := @this: org.apache.batik.dom.events.DocumentEventSupport;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: org.apache.batik.dom.events.DocumentEventSupport$EventFactory;

        $r2 = r0.<org.apache.batik.dom.events.DocumentEventSupport: org.apache.batik.dom.util.HashTable eventFactories>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        virtualinvoke $r2.<org.apache.batik.dom.util.HashTable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r4);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.batik.dom.events.DocumentEventSupport: java.lang.String KEY_EVENT_DOM2_TYPE> = "KeyEvents";

        <org.apache.batik.dom.events.DocumentEventSupport: java.lang.String UI_EVENT_DOM2_TYPE> = "UIEvents";

        <org.apache.batik.dom.events.DocumentEventSupport: java.lang.String MOUSE_EVENT_DOM2_TYPE> = "MouseEvents";

        <org.apache.batik.dom.events.DocumentEventSupport: java.lang.String MUTATION_EVENT_DOM2_TYPE> = "MutationEvents";

        <org.apache.batik.dom.events.DocumentEventSupport: java.lang.String EVENT_DOM2_TYPE> = "Events";

        <org.apache.batik.dom.events.DocumentEventSupport: java.lang.String CUSTOM_EVENT_TYPE> = "CustomEvent";

        <org.apache.batik.dom.events.DocumentEventSupport: java.lang.String TEXT_EVENT_TYPE> = "TextEvent";

        <org.apache.batik.dom.events.DocumentEventSupport: java.lang.String KEYBOARD_EVENT_TYPE> = "KeyboardEvent";

        <org.apache.batik.dom.events.DocumentEventSupport: java.lang.String UI_EVENT_TYPE> = "UIEvent";

        <org.apache.batik.dom.events.DocumentEventSupport: java.lang.String MOUSE_EVENT_TYPE> = "MouseEvent";

        <org.apache.batik.dom.events.DocumentEventSupport: java.lang.String MUTATION_NAME_EVENT_TYPE> = "MutationNameEvent";

        <org.apache.batik.dom.events.DocumentEventSupport: java.lang.String MUTATION_EVENT_TYPE> = "MutationEvent";

        <org.apache.batik.dom.events.DocumentEventSupport: java.lang.String EVENT_TYPE> = "Event";

        return;
    }
}
