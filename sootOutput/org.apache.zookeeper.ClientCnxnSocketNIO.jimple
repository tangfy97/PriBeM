public class org.apache.zookeeper.ClientCnxnSocketNIO extends org.apache.zookeeper.ClientCnxnSocket
{
    private static final org.slf4j.Logger LOG;
    private final java.nio.channels.Selector selector;
    private java.nio.channels.SelectionKey sockKey;

    void <init>() throws java.io.IOException
    {
        org.apache.zookeeper.ClientCnxnSocketNIO r0;
        java.nio.channels.Selector $r1;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocketNIO;

        specialinvoke r0.<org.apache.zookeeper.ClientCnxnSocket: void <init>()>();

        $r1 = staticinvoke <java.nio.channels.Selector: java.nio.channels.Selector open()>();

        r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.Selector selector> = $r1;

        return;
    }

    boolean isConnected()
    {
        org.apache.zookeeper.ClientCnxnSocketNIO r0;
        java.nio.channels.SelectionKey $r1;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocketNIO;

        $r1 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.SelectionKey sockKey>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void doIO(java.util.List, java.util.LinkedList, org.apache.zookeeper.ClientCnxn) throws java.lang.InterruptedException, java.io.IOException
    {
        java.nio.ByteBuffer $r9, $r18, $r19, $r20, $r21, $r22, $r23, $r25, $r26, $r29, $r30, $r42, $r43;
        org.apache.zookeeper.ClientCnxn$SendThread $r7, $r24, $r27;
        java.nio.channels.SocketChannel r3;
        org.apache.zookeeper.ClientCnxnSocketNIO r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.zookeeper.proto.RequestHeader $r10, $r11, $r12, $r14, $r15, $r16, $r17;
        java.util.List r13;
        java.lang.StringBuilder $r32, $r33, $r35, $r36;
        java.lang.Throwable $r39, $r40;
        org.apache.zookeeper.ClientCnxn r6;
        long $l0, $l1, $l8, $l9, $l10;
        org.apache.zookeeper.ClientCnxn$Packet $r8, $r28;
        org.apache.zookeeper.ClientCnxn$EndOfStreamException $r31;
        int $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r34, $r37;
        java.util.LinkedList r5;
        java.nio.channels.SelectionKey $r1, $r4, $r41;
        java.io.IOException $r38;
        java.nio.channels.SelectableChannel $r2;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocketNIO;

        r13 := @parameter0: java.util.List;

        r5 := @parameter1: java.util.LinkedList;

        r6 := @parameter2: org.apache.zookeeper.ClientCnxn;

        $r1 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.SelectionKey sockKey>;

        $r2 = virtualinvoke $r1.<java.nio.channels.SelectionKey: java.nio.channels.SelectableChannel channel()>();

        r3 = (java.nio.channels.SocketChannel) $r2;

        if r3 != null goto label01;

        $r38 = new java.io.IOException;

        specialinvoke $r38.<java.io.IOException: void <init>(java.lang.String)>("Socket is null!");

        throw $r38;

     label01:
        $r4 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.SelectionKey sockKey>;

        $z0 = virtualinvoke $r4.<java.nio.channels.SelectionKey: boolean isReadable()>();

        if $z0 == 0 goto label06;

        $r18 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.ByteBuffer incomingBuffer>;

        $i7 = virtualinvoke r3.<java.nio.channels.SocketChannel: int read(java.nio.ByteBuffer)>($r18);

        if $i7 >= 0 goto label02;

        $r31 = new org.apache.zookeeper.ClientCnxn$EndOfStreamException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to read additional data from server sessionid 0x");

        $l10 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: long sessionId>;

        $r34 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l10);

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", likely server has closed socket");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<org.apache.zookeeper.ClientCnxn$EndOfStreamException: void <init>(java.lang.String)>($r37);

        throw $r31;

     label02:
        $r19 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.ByteBuffer incomingBuffer>;

        $z2 = virtualinvoke $r19.<java.nio.ByteBuffer: boolean hasRemaining()>();

        if $z2 != 0 goto label06;

        $r20 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.ByteBuffer incomingBuffer>;

        virtualinvoke $r20.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $r22 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.ByteBuffer incomingBuffer>;

        $r21 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.ByteBuffer lenBuffer>;

        if $r22 != $r21 goto label03;

        $l8 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: long recvCount>;

        $l9 = $l8 + 1L;

        r0.<org.apache.zookeeper.ClientCnxnSocketNIO: long recvCount> = $l9;

        virtualinvoke r0.<org.apache.zookeeper.ClientCnxnSocketNIO: void readLength()>();

        goto label06;

     label03:
        $z3 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: boolean initialized>;

        if $z3 != 0 goto label05;

        virtualinvoke r0.<org.apache.zookeeper.ClientCnxnSocketNIO: void readConnectResult()>();

        specialinvoke r0.<org.apache.zookeeper.ClientCnxnSocketNIO: void enableRead()>();

        $r27 = r6.<org.apache.zookeeper.ClientCnxn: org.apache.zookeeper.ClientCnxn$SendThread sendThread>;

        $z4 = virtualinvoke $r27.<org.apache.zookeeper.ClientCnxn$SendThread: boolean clientTunneledAuthenticationInProgress()>();

        $r28 = specialinvoke r0.<org.apache.zookeeper.ClientCnxnSocketNIO: org.apache.zookeeper.ClientCnxn$Packet findSendablePacket(java.util.LinkedList,boolean)>(r5, $z4);

        if $r28 == null goto label04;

        virtualinvoke r0.<org.apache.zookeeper.ClientCnxnSocketNIO: void enableWrite()>();

     label04:
        $r29 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.ByteBuffer lenBuffer>;

        virtualinvoke $r29.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $r30 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.ByteBuffer lenBuffer>;

        r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.ByteBuffer incomingBuffer> = $r30;

        virtualinvoke r0.<org.apache.zookeeper.ClientCnxnSocketNIO: void updateLastHeard()>();

        r0.<org.apache.zookeeper.ClientCnxnSocketNIO: boolean initialized> = 1;

        goto label06;

     label05:
        $r24 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: org.apache.zookeeper.ClientCnxn$SendThread sendThread>;

        $r23 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.ByteBuffer incomingBuffer>;

        virtualinvoke $r24.<org.apache.zookeeper.ClientCnxn$SendThread: void readResponse(java.nio.ByteBuffer)>($r23);

        $r25 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.ByteBuffer lenBuffer>;

        virtualinvoke $r25.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $r26 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.ByteBuffer lenBuffer>;

        r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.ByteBuffer incomingBuffer> = $r26;

        virtualinvoke r0.<org.apache.zookeeper.ClientCnxnSocketNIO: void updateLastHeard()>();

     label06:
        $r41 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.SelectionKey sockKey>;

        $z5 = virtualinvoke $r41.<java.nio.channels.SelectionKey: boolean isWritable()>();

        if $z5 == 0 goto label20;

        entermonitor r5;

     label07:
        $r7 = r6.<org.apache.zookeeper.ClientCnxn: org.apache.zookeeper.ClientCnxn$SendThread sendThread>;

        $z1 = virtualinvoke $r7.<org.apache.zookeeper.ClientCnxn$SendThread: boolean clientTunneledAuthenticationInProgress()>();

        $r8 = specialinvoke r0.<org.apache.zookeeper.ClientCnxnSocketNIO: org.apache.zookeeper.ClientCnxn$Packet findSendablePacket(java.util.LinkedList,boolean)>(r5, $z1);

        if $r8 == null goto label14;

        virtualinvoke r0.<org.apache.zookeeper.ClientCnxnSocketNIO: void updateLastSend()>();

        $r9 = $r8.<org.apache.zookeeper.ClientCnxn$Packet: java.nio.ByteBuffer bb>;

        if $r9 != null goto label09;

        $r14 = $r8.<org.apache.zookeeper.ClientCnxn$Packet: org.apache.zookeeper.proto.RequestHeader requestHeader>;

        if $r14 == null goto label08;

        $r15 = $r8.<org.apache.zookeeper.ClientCnxn$Packet: org.apache.zookeeper.proto.RequestHeader requestHeader>;

        $i4 = virtualinvoke $r15.<org.apache.zookeeper.proto.RequestHeader: int getType()>();

        if $i4 == 11 goto label08;

        $r16 = $r8.<org.apache.zookeeper.ClientCnxn$Packet: org.apache.zookeeper.proto.RequestHeader requestHeader>;

        $i5 = virtualinvoke $r16.<org.apache.zookeeper.proto.RequestHeader: int getType()>();

        if $i5 == 100 goto label08;

        $r17 = $r8.<org.apache.zookeeper.ClientCnxn$Packet: org.apache.zookeeper.proto.RequestHeader requestHeader>;

        $i6 = virtualinvoke r6.<org.apache.zookeeper.ClientCnxn: int getXid()>();

        virtualinvoke $r17.<org.apache.zookeeper.proto.RequestHeader: void setXid(int)>($i6);

     label08:
        virtualinvoke $r8.<org.apache.zookeeper.ClientCnxn$Packet: void createBB()>();

     label09:
        $r42 = $r8.<org.apache.zookeeper.ClientCnxn$Packet: java.nio.ByteBuffer bb>;

        virtualinvoke r3.<java.nio.channels.SocketChannel: int write(java.nio.ByteBuffer)>($r42);

        $r43 = $r8.<org.apache.zookeeper.ClientCnxn$Packet: java.nio.ByteBuffer bb>;

        $z6 = virtualinvoke $r43.<java.nio.ByteBuffer: boolean hasRemaining()>();

        if $z6 != 0 goto label14;

        $l0 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: long sentCount>;

        $l1 = $l0 + 1L;

        r0.<org.apache.zookeeper.ClientCnxnSocketNIO: long sentCount> = $l1;

        virtualinvoke r5.<java.util.LinkedList: boolean removeFirstOccurrence(java.lang.Object)>($r8);

        $r10 = $r8.<org.apache.zookeeper.ClientCnxn$Packet: org.apache.zookeeper.proto.RequestHeader requestHeader>;

        if $r10 == null goto label14;

        $r11 = $r8.<org.apache.zookeeper.ClientCnxn$Packet: org.apache.zookeeper.proto.RequestHeader requestHeader>;

        $i2 = virtualinvoke $r11.<org.apache.zookeeper.proto.RequestHeader: int getType()>();

        if $i2 == 11 goto label14;

        $r12 = $r8.<org.apache.zookeeper.ClientCnxn$Packet: org.apache.zookeeper.proto.RequestHeader requestHeader>;

        $i3 = virtualinvoke $r12.<org.apache.zookeeper.proto.RequestHeader: int getType()>();

        if $i3 == 100 goto label14;

        entermonitor r13;

     label10:
        interfaceinvoke r13.<java.util.List: boolean add(java.lang.Object)>($r8);

        exitmonitor r13;

     label11:
        goto label14;

     label12:
        $r40 := @caughtexception;

        exitmonitor r13;

     label13:
        throw $r40;

     label14:
        $z7 = virtualinvoke r5.<java.util.LinkedList: boolean isEmpty()>();

        if $z7 == 0 goto label15;

        virtualinvoke r0.<org.apache.zookeeper.ClientCnxnSocketNIO: void disableWrite()>();

        goto label16;

     label15:
        virtualinvoke r0.<org.apache.zookeeper.ClientCnxnSocketNIO: void enableWrite()>();

     label16:
        exitmonitor r5;

     label17:
        goto label20;

     label18:
        $r39 := @caughtexception;

        exitmonitor r5;

     label19:
        throw $r39;

     label20:
        return;

        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label07 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    private org.apache.zookeeper.ClientCnxn$Packet findSendablePacket(java.util.LinkedList, boolean)
    {
        java.lang.Throwable $r17;
        java.util.ListIterator $r6;
        java.nio.ByteBuffer $r3;
        org.apache.zookeeper.ClientCnxn$Packet $r2, $r5, r8;
        org.apache.zookeeper.ClientCnxnSocketNIO r18;
        java.lang.String $r16;
        java.util.LinkedList r0;
        boolean $z0, z1, $z2, $z3;
        org.slf4j.Logger $r10, $r12;
        org.apache.zookeeper.proto.RequestHeader $r9;
        java.lang.Object $r1, $r4, $r7;
        java.lang.StringBuilder $r11, $r13, $r14, $r15;

        r18 := @this: org.apache.zookeeper.ClientCnxnSocketNIO;

        r0 := @parameter0: java.util.LinkedList;

        z1 := @parameter1: boolean;

        entermonitor r0;

     label01:
        $z0 = virtualinvoke r0.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 == 0 goto label03;

        exitmonitor r0;

     label02:
        return null;

     label03:
        $r1 = virtualinvoke r0.<java.util.LinkedList: java.lang.Object getFirst()>();

        $r2 = (org.apache.zookeeper.ClientCnxn$Packet) $r1;

        $r3 = $r2.<org.apache.zookeeper.ClientCnxn$Packet: java.nio.ByteBuffer bb>;

        if $r3 != null goto label04;

        if z1 != 0 goto label06;

     label04:
        $r4 = virtualinvoke r0.<java.util.LinkedList: java.lang.Object getFirst()>();

        $r5 = (org.apache.zookeeper.ClientCnxn$Packet) $r4;

        exitmonitor r0;

     label05:
        return $r5;

     label06:
        $r6 = virtualinvoke r0.<java.util.LinkedList: java.util.ListIterator listIterator()>();

     label07:
        $z2 = interfaceinvoke $r6.<java.util.ListIterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r7 = interfaceinvoke $r6.<java.util.ListIterator: java.lang.Object next()>();

        r8 = (org.apache.zookeeper.ClientCnxn$Packet) $r7;

        $r9 = r8.<org.apache.zookeeper.ClientCnxn$Packet: org.apache.zookeeper.proto.RequestHeader requestHeader>;

        if $r9 != null goto label09;

        interfaceinvoke $r6.<java.util.ListIterator: void remove()>();

        virtualinvoke r0.<java.util.LinkedList: void add(int,java.lang.Object)>(0, r8);

        exitmonitor r0;

     label08:
        return r8;

     label09:
        $r10 = <org.apache.zookeeper.ClientCnxnSocketNIO: org.slf4j.Logger LOG>;

        $z3 = interfaceinvoke $r10.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z3 == 0 goto label10;

        $r12 = <org.apache.zookeeper.ClientCnxnSocketNIO: org.slf4j.Logger LOG>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deferring non-priming packet: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("until SASL authentication completes.");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String)>($r16);

     label10:
        goto label07;

     label11:
        exitmonitor r0;

     label12:
        return null;

     label13:
        $r17 := @caughtexception;

        exitmonitor r0;

     label14:
        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label05 with label13;
        catch java.lang.Throwable from label06 to label08 with label13;
        catch java.lang.Throwable from label09 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    void cleanup()
    {
        java.net.Socket $r5, $r22, $r23;
        java.nio.channels.SocketChannel r21;
        org.apache.zookeeper.ClientCnxnSocketNIO r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.slf4j.Logger $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17, $r19, $r20;
        java.nio.channels.SelectionKey $r1, $r2, $r4;
        java.io.IOException $r9, $r12, $r15, $r18;
        java.nio.channels.SelectableChannel $r3;
        java.lang.InterruptedException $r6;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocketNIO;

        $r1 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.SelectionKey sockKey>;

        if $r1 == null goto label13;

        $r2 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.SelectionKey sockKey>;

        $r3 = virtualinvoke $r2.<java.nio.channels.SelectionKey: java.nio.channels.SelectableChannel channel()>();

        r21 = (java.nio.channels.SocketChannel) $r3;

        $r4 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.SelectionKey sockKey>;

        virtualinvoke $r4.<java.nio.channels.SelectionKey: void cancel()>();

     label01:
        $r5 = virtualinvoke r21.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        virtualinvoke $r5.<java.net.Socket: void shutdownInput()>();

     label02:
        goto label04;

     label03:
        $r18 := @caughtexception;

        $r19 = <org.apache.zookeeper.ClientCnxnSocketNIO: org.slf4j.Logger LOG>;

        $z4 = interfaceinvoke $r19.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z4 == 0 goto label04;

        $r20 = <org.apache.zookeeper.ClientCnxnSocketNIO: org.slf4j.Logger LOG>;

        interfaceinvoke $r20.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>("Ignoring exception during shutdown input", $r18);

     label04:
        $r22 = virtualinvoke r21.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        virtualinvoke $r22.<java.net.Socket: void shutdownOutput()>();

     label05:
        goto label07;

     label06:
        $r15 := @caughtexception;

        $r16 = <org.apache.zookeeper.ClientCnxnSocketNIO: org.slf4j.Logger LOG>;

        $z3 = interfaceinvoke $r16.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z3 == 0 goto label07;

        $r17 = <org.apache.zookeeper.ClientCnxnSocketNIO: org.slf4j.Logger LOG>;

        interfaceinvoke $r17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>("Ignoring exception during shutdown output", $r15);

     label07:
        $r23 = virtualinvoke r21.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        virtualinvoke $r23.<java.net.Socket: void close()>();

     label08:
        goto label10;

     label09:
        $r12 := @caughtexception;

        $r13 = <org.apache.zookeeper.ClientCnxnSocketNIO: org.slf4j.Logger LOG>;

        $z2 = interfaceinvoke $r13.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z2 == 0 goto label10;

        $r14 = <org.apache.zookeeper.ClientCnxnSocketNIO: org.slf4j.Logger LOG>;

        interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>("Ignoring exception during socket close", $r12);

     label10:
        virtualinvoke r21.<java.nio.channels.SocketChannel: void close()>();

     label11:
        goto label13;

     label12:
        $r9 := @caughtexception;

        $r10 = <org.apache.zookeeper.ClientCnxnSocketNIO: org.slf4j.Logger LOG>;

        $z1 = interfaceinvoke $r10.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label13;

        $r11 = <org.apache.zookeeper.ClientCnxnSocketNIO: org.slf4j.Logger LOG>;

        interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>("Ignoring exception during channel close", $r9);

     label13:
        staticinvoke <java.lang.Thread: void sleep(long)>(100L);

     label14:
        goto label16;

     label15:
        $r6 := @caughtexception;

        $r7 = <org.apache.zookeeper.ClientCnxnSocketNIO: org.slf4j.Logger LOG>;

        $z0 = interfaceinvoke $r7.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label16;

        $r8 = <org.apache.zookeeper.ClientCnxnSocketNIO: org.slf4j.Logger LOG>;

        interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String)>("SendThread interrupted during sleep, ignoring");

     label16:
        r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.SelectionKey sockKey> = null;

        return;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.io.IOException from label04 to label05 with label06;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.lang.InterruptedException from label13 to label14 with label15;
    }

    void close()
    {
        org.slf4j.Logger $r0, $r3, $r4, $r5, $r7;
        java.nio.channels.Selector $r2;
        java.io.IOException $r6;
        org.apache.zookeeper.ClientCnxnSocketNIO r1;
        boolean $z0, $z1;

        r1 := @this: org.apache.zookeeper.ClientCnxnSocketNIO;

     label1:
        $r0 = <org.apache.zookeeper.ClientCnxnSocketNIO: org.slf4j.Logger LOG>;

        $z0 = interfaceinvoke $r0.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label2;

        $r5 = <org.apache.zookeeper.ClientCnxnSocketNIO: org.slf4j.Logger LOG>;

        interfaceinvoke $r5.<org.slf4j.Logger: void trace(java.lang.String)>("Doing client selector close");

     label2:
        $r2 = r1.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.Selector selector>;

        virtualinvoke $r2.<java.nio.channels.Selector: void close()>();

        $r3 = <org.apache.zookeeper.ClientCnxnSocketNIO: org.slf4j.Logger LOG>;

        $z1 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z1 == 0 goto label3;

        $r4 = <org.apache.zookeeper.ClientCnxnSocketNIO: org.slf4j.Logger LOG>;

        interfaceinvoke $r4.<org.slf4j.Logger: void trace(java.lang.String)>("Closed client selector");

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        $r7 = <org.apache.zookeeper.ClientCnxnSocketNIO: org.slf4j.Logger LOG>;

        interfaceinvoke $r7.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Ignoring exception during selector close", $r6);

     label5:
        return;

        catch java.io.IOException from label1 to label3 with label4;
    }

    java.nio.channels.SocketChannel createSock() throws java.io.IOException
    {
        java.net.Socket $r1, $r2;
        java.nio.channels.SocketChannel $r0;
        org.apache.zookeeper.ClientCnxnSocketNIO r3;
        int $i1;

        r3 := @this: org.apache.zookeeper.ClientCnxnSocketNIO;

        $r0 = staticinvoke <java.nio.channels.SocketChannel: java.nio.channels.SocketChannel open()>();

        virtualinvoke $r0.<java.nio.channels.SocketChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)>(0);

        $r1 = virtualinvoke $r0.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        $i1 = (int) -1;

        virtualinvoke $r1.<java.net.Socket: void setSoLinger(boolean,int)>(0, $i1);

        $r2 = virtualinvoke $r0.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        virtualinvoke $r2.<java.net.Socket: void setTcpNoDelay(boolean)>(1);

        return $r0;
    }

    void registerAndConnect(java.nio.channels.SocketChannel, java.net.InetSocketAddress) throws java.io.IOException
    {
        org.apache.zookeeper.ClientCnxn$SendThread $r5;
        java.nio.channels.SocketChannel r1;
        java.nio.channels.SelectionKey $r3;
        java.nio.channels.Selector $r2;
        org.apache.zookeeper.ClientCnxnSocketNIO r0;
        java.net.InetSocketAddress r4;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocketNIO;

        r1 := @parameter0: java.nio.channels.SocketChannel;

        r4 := @parameter1: java.net.InetSocketAddress;

        $r2 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.Selector selector>;

        $r3 = virtualinvoke r1.<java.nio.channels.SocketChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int)>($r2, 8);

        r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.SelectionKey sockKey> = $r3;

        $z0 = virtualinvoke r1.<java.nio.channels.SocketChannel: boolean connect(java.net.SocketAddress)>(r4);

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: org.apache.zookeeper.ClientCnxn$SendThread sendThread>;

        virtualinvoke $r5.<org.apache.zookeeper.ClientCnxn$SendThread: void primeConnection()>();

     label1:
        return;
    }

    void connect(java.net.InetSocketAddress) throws java.io.IOException
    {
        org.slf4j.Logger $r7;
        java.io.IOException $r5;
        java.net.InetSocketAddress r2;
        java.nio.ByteBuffer $r3, $r4;
        java.nio.channels.SocketChannel $r1;
        org.apache.zookeeper.ClientCnxnSocketNIO r0;
        java.lang.StringBuilder $r6, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocketNIO;

        r2 := @parameter0: java.net.InetSocketAddress;

        $r1 = virtualinvoke r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.SocketChannel createSock()>();

     label1:
        virtualinvoke r0.<org.apache.zookeeper.ClientCnxnSocketNIO: void registerAndConnect(java.nio.channels.SocketChannel,java.net.InetSocketAddress)>($r1, r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r7 = <org.apache.zookeeper.ClientCnxnSocketNIO: org.slf4j.Logger LOG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to open socket to ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String)>($r10);

        virtualinvoke $r1.<java.nio.channels.SocketChannel: void close()>();

        throw $r5;

     label4:
        r0.<org.apache.zookeeper.ClientCnxnSocketNIO: boolean initialized> = 0;

        $r3 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.ByteBuffer lenBuffer>;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $r4 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.ByteBuffer lenBuffer>;

        r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.ByteBuffer incomingBuffer> = $r4;

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    java.net.SocketAddress getRemoteSocketAddress()
    {
        java.net.Socket $r4;
        java.nio.channels.SocketChannel $r3;
        java.net.SocketAddress $r5;
        java.nio.channels.SelectableChannel $r2;
        java.nio.channels.SelectionKey $r1;
        org.apache.zookeeper.ClientCnxnSocketNIO r0;
        java.lang.NullPointerException $r6;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocketNIO;

     label1:
        $r1 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.SelectionKey sockKey>;

        $r2 = virtualinvoke $r1.<java.nio.channels.SelectionKey: java.nio.channels.SelectableChannel channel()>();

        $r3 = (java.nio.channels.SocketChannel) $r2;

        $r4 = virtualinvoke $r3.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        $r5 = virtualinvoke $r4.<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()>();

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        return null;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    java.net.SocketAddress getLocalSocketAddress()
    {
        java.net.Socket $r4;
        java.nio.channels.SocketChannel $r3;
        java.net.SocketAddress $r5;
        java.nio.channels.SelectableChannel $r2;
        java.nio.channels.SelectionKey $r1;
        org.apache.zookeeper.ClientCnxnSocketNIO r0;
        java.lang.NullPointerException $r6;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocketNIO;

     label1:
        $r1 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.SelectionKey sockKey>;

        $r2 = virtualinvoke $r1.<java.nio.channels.SelectionKey: java.nio.channels.SelectableChannel channel()>();

        $r3 = (java.nio.channels.SocketChannel) $r2;

        $r4 = virtualinvoke $r3.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        $r5 = virtualinvoke $r4.<java.net.Socket: java.net.SocketAddress getLocalSocketAddress()>();

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        return null;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    synchronized void wakeupCnxn()
    {
        org.apache.zookeeper.ClientCnxnSocketNIO r0;
        java.nio.channels.Selector $r1;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocketNIO;

        $r1 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.Selector selector>;

        virtualinvoke $r1.<java.nio.channels.Selector: java.nio.channels.Selector wakeup()>();

        return;
    }

    void doTransport(int, java.util.List, java.util.LinkedList, org.apache.zookeeper.ClientCnxn) throws java.io.IOException, java.lang.InterruptedException
    {
        java.lang.Throwable $r16, $r17;
        java.nio.channels.Selector $r1, $r2;
        org.apache.zookeeper.ZooKeeper$States $r6;
        org.apache.zookeeper.ClientCnxn r8;
        long $l1;
        org.apache.zookeeper.ClientCnxn$Packet $r10;
        org.apache.zookeeper.ClientCnxn$SendThread $r5, $r9, $r15;
        java.nio.channels.SocketChannel r13;
        org.apache.zookeeper.ClientCnxnSocketNIO r0;
        int i0, $i2, $i3, $i4, $i5;
        java.util.LinkedList r7;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r4;
        java.nio.channels.SelectionKey r18;
        java.util.Set $r3;
        java.util.List r14;
        java.nio.channels.SelectableChannel $r12;
        java.lang.Object $r11;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocketNIO;

        i0 := @parameter0: int;

        r14 := @parameter1: java.util.List;

        r7 := @parameter2: java.util.LinkedList;

        r8 := @parameter3: org.apache.zookeeper.ClientCnxn;

        $r1 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.Selector selector>;

        $l1 = (long) i0;

        virtualinvoke $r1.<java.nio.channels.Selector: int select(long)>($l1);

        entermonitor r0;

     label01:
        $r2 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.Selector selector>;

        $r3 = virtualinvoke $r2.<java.nio.channels.Selector: java.util.Set selectedKeys()>();

        exitmonitor r0;

     label02:
        goto label05;

     label03:
        $r17 := @caughtexception;

        exitmonitor r0;

     label04:
        throw $r17;

     label05:
        virtualinvoke r0.<org.apache.zookeeper.ClientCnxnSocketNIO: void updateNow()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r11 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.nio.channels.SelectionKey) $r11;

        $r12 = virtualinvoke r18.<java.nio.channels.SelectionKey: java.nio.channels.SelectableChannel channel()>();

        r13 = (java.nio.channels.SocketChannel) $r12;

        $i2 = virtualinvoke r18.<java.nio.channels.SelectionKey: int readyOps()>();

        $i3 = $i2 & 8;

        if $i3 == 0 goto label07;

        $z3 = virtualinvoke r13.<java.nio.channels.SocketChannel: boolean finishConnect()>();

        if $z3 == 0 goto label08;

        virtualinvoke r0.<org.apache.zookeeper.ClientCnxnSocketNIO: void updateLastSendAndHeard()>();

        $r15 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: org.apache.zookeeper.ClientCnxn$SendThread sendThread>;

        virtualinvoke $r15.<org.apache.zookeeper.ClientCnxn$SendThread: void primeConnection()>();

        goto label08;

     label07:
        $i4 = virtualinvoke r18.<java.nio.channels.SelectionKey: int readyOps()>();

        $i5 = $i4 & 5;

        if $i5 == 0 goto label08;

        virtualinvoke r0.<org.apache.zookeeper.ClientCnxnSocketNIO: void doIO(java.util.List,java.util.LinkedList,org.apache.zookeeper.ClientCnxn)>(r14, r7, r8);

     label08:
        goto label06;

     label09:
        $r5 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: org.apache.zookeeper.ClientCnxn$SendThread sendThread>;

        $r6 = virtualinvoke $r5.<org.apache.zookeeper.ClientCnxn$SendThread: org.apache.zookeeper.ZooKeeper$States getZkState()>();

        $z1 = virtualinvoke $r6.<org.apache.zookeeper.ZooKeeper$States: boolean isConnected()>();

        if $z1 == 0 goto label15;

        entermonitor r7;

     label10:
        $r9 = r8.<org.apache.zookeeper.ClientCnxn: org.apache.zookeeper.ClientCnxn$SendThread sendThread>;

        $z2 = virtualinvoke $r9.<org.apache.zookeeper.ClientCnxn$SendThread: boolean clientTunneledAuthenticationInProgress()>();

        $r10 = specialinvoke r0.<org.apache.zookeeper.ClientCnxnSocketNIO: org.apache.zookeeper.ClientCnxn$Packet findSendablePacket(java.util.LinkedList,boolean)>(r7, $z2);

        if $r10 == null goto label11;

        virtualinvoke r0.<org.apache.zookeeper.ClientCnxnSocketNIO: void enableWrite()>();

     label11:
        exitmonitor r7;

     label12:
        goto label15;

     label13:
        $r16 := @caughtexception;

        exitmonitor r7;

     label14:
        throw $r16;

     label15:
        interfaceinvoke $r3.<java.util.Set: void clear()>();

        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label10 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    void testableCloseSocket() throws java.io.IOException
    {
        java.net.Socket $r5;
        org.slf4j.Logger $r0;
        java.nio.channels.SocketChannel $r4;
        java.nio.channels.SelectableChannel $r3;
        java.nio.channels.SelectionKey $r2;
        org.apache.zookeeper.ClientCnxnSocketNIO r1;

        r1 := @this: org.apache.zookeeper.ClientCnxnSocketNIO;

        $r0 = <org.apache.zookeeper.ClientCnxnSocketNIO: org.slf4j.Logger LOG>;

        interfaceinvoke $r0.<org.slf4j.Logger: void info(java.lang.String)>("testableCloseSocket() called");

        $r2 = r1.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.SelectionKey sockKey>;

        $r3 = virtualinvoke $r2.<java.nio.channels.SelectionKey: java.nio.channels.SelectableChannel channel()>();

        $r4 = (java.nio.channels.SocketChannel) $r3;

        $r5 = virtualinvoke $r4.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        virtualinvoke $r5.<java.net.Socket: void close()>();

        return;
    }

    synchronized void enableWrite()
    {
        java.nio.channels.SelectionKey $r1, $r2;
        org.apache.zookeeper.ClientCnxnSocketNIO r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocketNIO;

        $r1 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.SelectionKey sockKey>;

        $i0 = virtualinvoke $r1.<java.nio.channels.SelectionKey: int interestOps()>();

        $i1 = $i0 & 4;

        if $i1 != 0 goto label1;

        $r2 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.SelectionKey sockKey>;

        $i2 = $i0 | 4;

        virtualinvoke $r2.<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>($i2);

     label1:
        return;
    }

    public synchronized void disableWrite()
    {
        java.nio.channels.SelectionKey $r1, $r2;
        org.apache.zookeeper.ClientCnxnSocketNIO r0;
        int $i0, $i1, $i2, $i4;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocketNIO;

        $r1 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.SelectionKey sockKey>;

        $i0 = virtualinvoke $r1.<java.nio.channels.SelectionKey: int interestOps()>();

        $i1 = $i0 & 4;

        if $i1 == 0 goto label1;

        $r2 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.SelectionKey sockKey>;

        $i4 = (int) -5;

        $i2 = $i0 & $i4;

        virtualinvoke $r2.<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>($i2);

     label1:
        return;
    }

    private synchronized void enableRead()
    {
        java.nio.channels.SelectionKey $r1, $r2;
        org.apache.zookeeper.ClientCnxnSocketNIO r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocketNIO;

        $r1 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.SelectionKey sockKey>;

        $i0 = virtualinvoke $r1.<java.nio.channels.SelectionKey: int interestOps()>();

        $i1 = $i0 & 1;

        if $i1 != 0 goto label1;

        $r2 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.SelectionKey sockKey>;

        $i2 = $i0 | 1;

        virtualinvoke $r2.<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>($i2);

     label1:
        return;
    }

    synchronized void enableReadWriteOnly()
    {
        org.apache.zookeeper.ClientCnxnSocketNIO r0;
        java.nio.channels.SelectionKey $r1;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocketNIO;

        $r1 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.SelectionKey sockKey>;

        virtualinvoke $r1.<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>(5);

        return;
    }

    java.nio.channels.Selector getSelector()
    {
        org.apache.zookeeper.ClientCnxnSocketNIO r0;
        java.nio.channels.Selector $r1;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocketNIO;

        $r1 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.Selector selector>;

        return $r1;
    }

    void sendPacket(org.apache.zookeeper.ClientCnxn$Packet) throws java.io.IOException
    {
        org.apache.zookeeper.ClientCnxn$Packet r4;
        java.nio.channels.SocketChannel r3;
        java.nio.channels.SelectableChannel $r2;
        java.nio.channels.SelectionKey $r1;
        org.apache.zookeeper.ClientCnxnSocketNIO r0;
        java.io.IOException $r6;
        java.nio.ByteBuffer r5;

        r0 := @this: org.apache.zookeeper.ClientCnxnSocketNIO;

        r4 := @parameter0: org.apache.zookeeper.ClientCnxn$Packet;

        $r1 = r0.<org.apache.zookeeper.ClientCnxnSocketNIO: java.nio.channels.SelectionKey sockKey>;

        $r2 = virtualinvoke $r1.<java.nio.channels.SelectionKey: java.nio.channels.SelectableChannel channel()>();

        r3 = (java.nio.channels.SocketChannel) $r2;

        if r3 != null goto label1;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Socket is null!");

        throw $r6;

     label1:
        virtualinvoke r4.<org.apache.zookeeper.ClientCnxn$Packet: void createBB()>();

        r5 = r4.<org.apache.zookeeper.ClientCnxn$Packet: java.nio.ByteBuffer bb>;

        virtualinvoke r3.<java.nio.channels.SocketChannel: int write(java.nio.ByteBuffer)>(r5);

        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/zookeeper/ClientCnxnSocketNIO;");

        <org.apache.zookeeper.ClientCnxnSocketNIO: org.slf4j.Logger LOG> = $r0;

        return;
    }
}
