class com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries extends com.mycila.inject.internal.guava.collect.ForwardingCollection
{
    private final java.util.Collection entries;

    void <init>(java.util.Collection)
    {
        com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries r0;
        java.util.Collection r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingCollection: void <init>()>();

        r0.<com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries: java.util.Collection entries> = r1;

        return;
    }

    protected java.util.Collection delegate()
    {
        com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries r0;
        java.util.Collection $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries: java.util.Collection entries>;

        return $r1;
    }

    public java.util.Iterator iterator()
    {
        com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries$1 $r2;
        java.util.Iterator $r1;
        com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries;

        $r1 = specialinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingCollection: java.util.Iterator iterator()>();

        $r2 = new com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries$1;

        specialinvoke $r2.<com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries$1: void <init>(com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries,java.util.Iterator)>(r0, $r1);

        return $r2;
    }

    public boolean add(java.util.Map$Entry)
    {
        java.lang.UnsupportedOperationException $r0;
        java.util.Map$Entry r2;
        com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries r1;

        r1 := @this: com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries;

        r2 := @parameter0: java.util.Map$Entry;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean addAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries r1;
        java.util.Collection r2;

        r1 := @this: com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void clear()
    {
        java.lang.UnsupportedOperationException $r0;
        com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries r1;

        r1 := @this: com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean remove(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object r2;
        com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries r1;

        r1 := @this: com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries r1;
        java.util.Collection r2;

        r1 := @this: com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries r1;
        java.util.Collection r2;

        r1 := @this: com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.lang.Object[] toArray()
    {
        java.lang.Object[] $r1;
        com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries: java.lang.Object[] standardToArray()>();

        return $r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.lang.Object[] r1, $r2;
        com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries;

        r1 := @parameter0: java.lang.Object[];

        $r2 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries: java.lang.Object[] standardToArray(java.lang.Object[])>(r1);

        return $r2;
    }

    public volatile boolean add(java.lang.Object)
    {
        java.util.Map$Entry $r2;
        com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Map$Entry) r1;

        $z0 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries: boolean add(java.util.Map$Entry)>($r2);

        return $z0;
    }

    protected volatile java.lang.Object delegate()
    {
        com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries r0;
        java.util.Collection $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.Maps$UnmodifiableEntries: java.util.Collection delegate()>();

        return $r1;
    }
}
