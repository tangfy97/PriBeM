public class org.apache.xml.serialize.EncodingInfo extends java.lang.Object
{
    private java.lang.Object[] fArgsForMethod;
    java.lang.String ianaName;
    java.lang.String javaName;
    int lastPrintable;
    java.lang.Object fCharsetEncoder;
    java.lang.Object fCharToByteConverter;
    boolean fHaveTriedCToB;
    boolean fHaveTriedCharsetEncoder;

    public void <init>(java.lang.String, java.lang.String, int)
    {
        org.apache.xml.serialize.EncodingInfo r0;
        int i0;
        java.lang.String r1, $r2, r3;

        r0 := @this: org.apache.xml.serialize.EncodingInfo;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xml.serialize.EncodingInfo: java.lang.Object[] fArgsForMethod> = null;

        r0.<org.apache.xml.serialize.EncodingInfo: java.lang.Object fCharsetEncoder> = null;

        r0.<org.apache.xml.serialize.EncodingInfo: java.lang.Object fCharToByteConverter> = null;

        r0.<org.apache.xml.serialize.EncodingInfo: boolean fHaveTriedCToB> = 0;

        r0.<org.apache.xml.serialize.EncodingInfo: boolean fHaveTriedCharsetEncoder> = 0;

        r0.<org.apache.xml.serialize.EncodingInfo: java.lang.String ianaName> = r1;

        $r2 = staticinvoke <org.apache.xerces.util.EncodingMap: java.lang.String getIANA2JavaMapping(java.lang.String)>(r1);

        r0.<org.apache.xml.serialize.EncodingInfo: java.lang.String javaName> = $r2;

        r0.<org.apache.xml.serialize.EncodingInfo: int lastPrintable> = i0;

        return;
    }

    public java.lang.String getIANAName()
    {
        java.lang.String $r1;
        org.apache.xml.serialize.EncodingInfo r0;

        r0 := @this: org.apache.xml.serialize.EncodingInfo;

        $r1 = r0.<org.apache.xml.serialize.EncodingInfo: java.lang.String ianaName>;

        return $r1;
    }

    public java.io.Writer getWriter(java.io.OutputStream) throws java.io.UnsupportedEncodingException
    {
        java.io.OutputStream r6;
        org.apache.xml.serialize.EncodingInfo r0;
        java.io.OutputStreamWriter $r5, $r8, $r9;
        java.lang.String $r1, $r2, $r3, $r4, $r7, $r10;

        r0 := @this: org.apache.xml.serialize.EncodingInfo;

        r6 := @parameter0: java.io.OutputStream;

        $r1 = r0.<org.apache.xml.serialize.EncodingInfo: java.lang.String javaName>;

        if $r1 == null goto label1;

        $r9 = new java.io.OutputStreamWriter;

        $r10 = r0.<org.apache.xml.serialize.EncodingInfo: java.lang.String javaName>;

        specialinvoke $r9.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r6, $r10);

        return $r9;

     label1:
        $r2 = r0.<org.apache.xml.serialize.EncodingInfo: java.lang.String ianaName>;

        $r3 = staticinvoke <org.apache.xerces.util.EncodingMap: java.lang.String getIANA2JavaMapping(java.lang.String)>($r2);

        r0.<org.apache.xml.serialize.EncodingInfo: java.lang.String javaName> = $r3;

        $r4 = r0.<org.apache.xml.serialize.EncodingInfo: java.lang.String javaName>;

        if $r4 != null goto label2;

        $r8 = new java.io.OutputStreamWriter;

        specialinvoke $r8.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r6, "UTF8");

        return $r8;

     label2:
        $r5 = new java.io.OutputStreamWriter;

        $r7 = r0.<org.apache.xml.serialize.EncodingInfo: java.lang.String javaName>;

        specialinvoke $r5.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r6, $r7);

        return $r5;
    }

    public boolean isPrintable(char)
    {
        org.apache.xml.serialize.EncodingInfo r0;
        int $i1, $i2;
        char c0;
        boolean $z0;

        r0 := @this: org.apache.xml.serialize.EncodingInfo;

        c0 := @parameter0: char;

        $i1 = r0.<org.apache.xml.serialize.EncodingInfo: int lastPrintable>;

        $i2 = (int) c0;

        if $i2 > $i1 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<org.apache.xml.serialize.EncodingInfo: boolean isPrintable0(char)>(c0);

        return $z0;
    }

    private boolean isPrintable0(char)
    {
        java.lang.Character $r3, $r17;
        java.lang.reflect.Method $r5, $r13, $r19, $r27, $r30, $r34;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Exception $r38, $r39, $r40, $r41;
        java.lang.Object[] $r4, $r6, $r10, $r12, $r14, $r16, $r18, $r20, $r24, $r26, $r28, $r31, $r35, $r37;
        org.apache.xml.serialize.EncodingInfo r0;
        java.lang.Boolean $r9, $r23, $r33;
        java.lang.String $r11, $r25;
        char c0;
        java.lang.Object $r1, $r2, $r7, $r8, $r15, $r21, $r22, $r29, $r32, $r36, $r42;

        r0 := @this: org.apache.xml.serialize.EncodingInfo;

        c0 := @parameter0: char;

        $r1 = r0.<org.apache.xml.serialize.EncodingInfo: java.lang.Object fCharsetEncoder>;

        if $r1 != null goto label05;

        $z4 = staticinvoke <org.apache.xml.serialize.EncodingInfo$CharsetMethods: boolean access$000()>();

        if $z4 == 0 goto label05;

        $z5 = r0.<org.apache.xml.serialize.EncodingInfo: boolean fHaveTriedCharsetEncoder>;

        if $z5 != 0 goto label05;

        $r24 = r0.<org.apache.xml.serialize.EncodingInfo: java.lang.Object[] fArgsForMethod>;

        if $r24 != null goto label01;

        $r37 = newarray (java.lang.Object)[1];

        r0.<org.apache.xml.serialize.EncodingInfo: java.lang.Object[] fArgsForMethod> = $r37;

     label01:
        $r26 = r0.<org.apache.xml.serialize.EncodingInfo: java.lang.Object[] fArgsForMethod>;

        $r25 = r0.<org.apache.xml.serialize.EncodingInfo: java.lang.String javaName>;

        $r26[0] = $r25;

        $r27 = staticinvoke <org.apache.xml.serialize.EncodingInfo$CharsetMethods: java.lang.reflect.Method access$100()>();

        $r28 = r0.<org.apache.xml.serialize.EncodingInfo: java.lang.Object[] fArgsForMethod>;

        $r29 = virtualinvoke $r27.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r28);

        $r30 = staticinvoke <org.apache.xml.serialize.EncodingInfo$CharsetMethods: java.lang.reflect.Method access$200()>();

        $r31 = (java.lang.Object[]) null;

        $r32 = virtualinvoke $r30.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r29, $r31);

        $r33 = (java.lang.Boolean) $r32;

        $z6 = virtualinvoke $r33.<java.lang.Boolean: boolean booleanValue()>();

        if $z6 == 0 goto label02;

        $r34 = staticinvoke <org.apache.xml.serialize.EncodingInfo$CharsetMethods: java.lang.reflect.Method access$300()>();

        $r35 = (java.lang.Object[]) null;

        $r36 = virtualinvoke $r34.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r29, $r35);

        r0.<org.apache.xml.serialize.EncodingInfo: java.lang.Object fCharsetEncoder> = $r36;

        goto label03;

     label02:
        r0.<org.apache.xml.serialize.EncodingInfo: boolean fHaveTriedCharsetEncoder> = 1;

     label03:
        goto label05;

     label04:
        $r41 := @caughtexception;

        r0.<org.apache.xml.serialize.EncodingInfo: boolean fHaveTriedCharsetEncoder> = 1;

     label05:
        $r42 = r0.<org.apache.xml.serialize.EncodingInfo: java.lang.Object fCharsetEncoder>;

        if $r42 == null goto label08;

     label06:
        $r18 = r0.<org.apache.xml.serialize.EncodingInfo: java.lang.Object[] fArgsForMethod>;

        $r17 = new java.lang.Character;

        specialinvoke $r17.<java.lang.Character: void <init>(char)>(c0);

        $r18[0] = $r17;

        $r19 = staticinvoke <org.apache.xml.serialize.EncodingInfo$CharsetMethods: java.lang.reflect.Method access$400()>();

        $r21 = r0.<org.apache.xml.serialize.EncodingInfo: java.lang.Object fCharsetEncoder>;

        $r20 = r0.<org.apache.xml.serialize.EncodingInfo: java.lang.Object[] fArgsForMethod>;

        $r22 = virtualinvoke $r19.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r21, $r20);

        $r23 = (java.lang.Boolean) $r22;

        $z3 = virtualinvoke $r23.<java.lang.Boolean: boolean booleanValue()>();

        return $z3;

     label07:
        $r40 := @caughtexception;

        r0.<org.apache.xml.serialize.EncodingInfo: java.lang.Object fCharsetEncoder> = null;

        r0.<org.apache.xml.serialize.EncodingInfo: boolean fHaveTriedCharsetEncoder> = 0;

     label08:
        $r2 = r0.<org.apache.xml.serialize.EncodingInfo: java.lang.Object fCharToByteConverter>;

        if $r2 != null goto label14;

        $z1 = r0.<org.apache.xml.serialize.EncodingInfo: boolean fHaveTriedCToB>;

        if $z1 != 0 goto label09;

        $z2 = staticinvoke <org.apache.xml.serialize.EncodingInfo$CharToByteConverterMethods: boolean access$500()>();

        if $z2 != 0 goto label10;

     label09:
        return 0;

     label10:
        $r10 = r0.<org.apache.xml.serialize.EncodingInfo: java.lang.Object[] fArgsForMethod>;

        if $r10 != null goto label11;

        $r16 = newarray (java.lang.Object)[1];

        r0.<org.apache.xml.serialize.EncodingInfo: java.lang.Object[] fArgsForMethod> = $r16;

     label11:
        $r12 = r0.<org.apache.xml.serialize.EncodingInfo: java.lang.Object[] fArgsForMethod>;

        $r11 = r0.<org.apache.xml.serialize.EncodingInfo: java.lang.String javaName>;

        $r12[0] = $r11;

        $r13 = staticinvoke <org.apache.xml.serialize.EncodingInfo$CharToByteConverterMethods: java.lang.reflect.Method access$600()>();

        $r14 = r0.<org.apache.xml.serialize.EncodingInfo: java.lang.Object[] fArgsForMethod>;

        $r15 = virtualinvoke $r13.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r14);

        r0.<org.apache.xml.serialize.EncodingInfo: java.lang.Object fCharToByteConverter> = $r15;

     label12:
        goto label14;

     label13:
        $r39 := @caughtexception;

        r0.<org.apache.xml.serialize.EncodingInfo: boolean fHaveTriedCToB> = 1;

        return 0;

     label14:
        $r4 = r0.<org.apache.xml.serialize.EncodingInfo: java.lang.Object[] fArgsForMethod>;

        $r3 = new java.lang.Character;

        specialinvoke $r3.<java.lang.Character: void <init>(char)>(c0);

        $r4[0] = $r3;

        $r5 = staticinvoke <org.apache.xml.serialize.EncodingInfo$CharToByteConverterMethods: java.lang.reflect.Method access$700()>();

        $r7 = r0.<org.apache.xml.serialize.EncodingInfo: java.lang.Object fCharToByteConverter>;

        $r6 = r0.<org.apache.xml.serialize.EncodingInfo: java.lang.Object[] fArgsForMethod>;

        $r8 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r7, $r6);

        $r9 = (java.lang.Boolean) $r8;

        $z0 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label15:
        $r38 := @caughtexception;

        r0.<org.apache.xml.serialize.EncodingInfo: java.lang.Object fCharToByteConverter> = null;

        r0.<org.apache.xml.serialize.EncodingInfo: boolean fHaveTriedCToB> = 0;

        return 0;

        catch java.lang.Exception from label01 to label03 with label04;
        catch java.lang.Exception from label06 to label07 with label07;
        catch java.lang.Exception from label11 to label12 with label13;
        catch java.lang.Exception from label14 to label15 with label15;
    }

    public static void testJavaEncodingName(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        byte[] $r0;
        java.lang.String $r1, r2;

        r2 := @parameter0: java.lang.String;

        $r0 = newarray (byte)[5];

        $r0[0] = 118;

        $r0[1] = 97;

        $r0[2] = 108;

        $r0[3] = 105;

        $r0[4] = 100;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>($r0, r2);

        return;
    }
}
