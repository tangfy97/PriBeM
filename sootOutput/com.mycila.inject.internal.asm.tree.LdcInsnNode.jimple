public class com.mycila.inject.internal.asm.tree.LdcInsnNode extends com.mycila.inject.internal.asm.tree.AbstractInsnNode
{
    public java.lang.Object cst;

    public void <init>(java.lang.Object)
    {
        java.lang.Object r1;
        com.mycila.inject.internal.asm.tree.LdcInsnNode r0;

        r0 := @this: com.mycila.inject.internal.asm.tree.LdcInsnNode;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<com.mycila.inject.internal.asm.tree.AbstractInsnNode: void <init>(int)>(18);

        r0.<com.mycila.inject.internal.asm.tree.LdcInsnNode: java.lang.Object cst> = r1;

        return;
    }

    public int getType()
    {
        com.mycila.inject.internal.asm.tree.LdcInsnNode r0;

        r0 := @this: com.mycila.inject.internal.asm.tree.LdcInsnNode;

        return 8;
    }

    public void accept(com.mycila.inject.internal.asm.MethodVisitor)
    {
        java.lang.Object $r2;
        com.mycila.inject.internal.asm.tree.LdcInsnNode r1;
        com.mycila.inject.internal.asm.MethodVisitor r0;

        r1 := @this: com.mycila.inject.internal.asm.tree.LdcInsnNode;

        r0 := @parameter0: com.mycila.inject.internal.asm.MethodVisitor;

        $r2 = r1.<com.mycila.inject.internal.asm.tree.LdcInsnNode: java.lang.Object cst>;

        interfaceinvoke r0.<com.mycila.inject.internal.asm.MethodVisitor: void visitLdcInsn(java.lang.Object)>($r2);

        return;
    }

    public com.mycila.inject.internal.asm.tree.AbstractInsnNode clone(java.util.Map)
    {
        java.util.Map r3;
        java.lang.Object $r2;
        com.mycila.inject.internal.asm.tree.LdcInsnNode $r0, r1;

        r1 := @this: com.mycila.inject.internal.asm.tree.LdcInsnNode;

        r3 := @parameter0: java.util.Map;

        $r0 = new com.mycila.inject.internal.asm.tree.LdcInsnNode;

        $r2 = r1.<com.mycila.inject.internal.asm.tree.LdcInsnNode: java.lang.Object cst>;

        specialinvoke $r0.<com.mycila.inject.internal.asm.tree.LdcInsnNode: void <init>(java.lang.Object)>($r2);

        return $r0;
    }
}
