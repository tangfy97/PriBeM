class org.springframework.instrument.classloading.glassfish.ClassTransformerAdapter extends java.lang.Object implements javax.persistence.spi.ClassTransformer
{
    private final java.lang.instrument.ClassFileTransformer classFileTransformer;

    public void <init>(java.lang.instrument.ClassFileTransformer)
    {
        org.springframework.instrument.classloading.glassfish.ClassTransformerAdapter r0;
        java.lang.instrument.ClassFileTransformer r1;

        r0 := @this: org.springframework.instrument.classloading.glassfish.ClassTransformerAdapter;

        r1 := @parameter0: java.lang.instrument.ClassFileTransformer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.instrument.classloading.glassfish.ClassTransformerAdapter: java.lang.instrument.ClassFileTransformer classFileTransformer> = r1;

        return;
    }

    public byte[] transform(java.lang.ClassLoader, java.lang.String, java.lang.Class, java.security.ProtectionDomain, byte[]) throws java.lang.instrument.IllegalClassFormatException
    {
        byte[] r5, $r7, $r8;
        java.lang.instrument.ClassFileTransformer $r6;
        java.security.ProtectionDomain r4;
        org.springframework.instrument.classloading.glassfish.ClassTransformerAdapter r0;
        java.lang.Class r3;
        java.lang.ClassLoader r1;
        java.lang.String r2;

        r0 := @this: org.springframework.instrument.classloading.glassfish.ClassTransformerAdapter;

        r1 := @parameter0: java.lang.ClassLoader;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Class;

        r4 := @parameter3: java.security.ProtectionDomain;

        r5 := @parameter4: byte[];

        $r6 = r0.<org.springframework.instrument.classloading.glassfish.ClassTransformerAdapter: java.lang.instrument.ClassFileTransformer classFileTransformer>;

        $r7 = interfaceinvoke $r6.<java.lang.instrument.ClassFileTransformer: byte[] transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])>(r1, r2, r3, r4, r5);

        if $r7 != r5 goto label1;

        $r8 = null;

        goto label2;

     label1:
        $r8 = $r7;

     label2:
        return $r8;
    }
}
