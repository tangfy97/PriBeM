public class com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox extends com.googlecode.mp4parser.AbstractFullBox
{
    public static final java.lang.String TYPE;
    private int defaultSampleInfoSize;
    private java.util.List sampleInfoSizes;
    private int sampleCount;
    private java.lang.String auxInfoType;
    private java.lang.String auxInfoTypeParameter;
    static final boolean $assertionsDisabled;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_3;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_5;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_6;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_7;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_8;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_9;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_10;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.lang.String TYPE> = "saiz";

        staticinvoke <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: void ajc$preClinit()>();

        $r0 = class "Lcom/coremedia/iso/boxes/SampleAuxiliaryInformationSizesBox;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: boolean $assertionsDisabled> = $z1;

        return;
    }

    public void <init>()
    {
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;
        java.util.LinkedList $r1;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        specialinvoke r0.<com.googlecode.mp4parser.AbstractFullBox: void <init>(java.lang.String)>("saiz");

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.util.List sampleInfoSizes> = $r1;

        return;
    }

    protected long getContentSize()
    {
        long $l3;
        java.util.List $r1;
        byte b5;
        int $i0, $i1, $i2, $i4, i6, $i7;
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        b5 = 4;

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int getFlags()>();

        $i1 = $i0 & 1;

        if $i1 != 1 goto label1;

        b5 = 12;

     label1:
        i6 = b5 + 5;

        $i2 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int defaultSampleInfoSize>;

        if $i2 != 0 goto label2;

        $r1 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.util.List sampleInfoSizes>;

        $i7 = interfaceinvoke $r1.<java.util.List: int size()>();

        goto label3;

     label2:
        $i7 = 0;

     label3:
        $i4 = i6 + $i7;

        $l3 = (long) $i4;

        return $l3;
    }

    protected void getContent(java.nio.ByteBuffer)
    {
        byte[] $r8, $r10;
        long $l5, $l7;
        java.nio.ByteBuffer r1;
        short $s8;
        java.lang.Short $r6;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i9;
        java.lang.String $r7, $r9;
        boolean $z0;
        java.util.Iterator $r4;
        java.util.List $r2, $r3;
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;
        java.lang.Object $r5;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: void writeVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int getFlags()>();

        $i1 = $i0 & 1;

        if $i1 != 1 goto label1;

        $r7 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.lang.String auxInfoType>;

        $r8 = staticinvoke <com.coremedia.iso.IsoFile: byte[] fourCCtoBytes(java.lang.String)>($r7);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r8);

        $r9 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.lang.String auxInfoTypeParameter>;

        $r10 = staticinvoke <com.coremedia.iso.IsoFile: byte[] fourCCtoBytes(java.lang.String)>($r9);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r10);

     label1:
        $i2 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int defaultSampleInfoSize>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt8(java.nio.ByteBuffer,int)>(r1, $i2);

        $i3 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int defaultSampleInfoSize>;

        if $i3 != 0 goto label4;

        $r2 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.util.List sampleInfoSizes>;

        $i6 = interfaceinvoke $r2.<java.util.List: int size()>();

        $l7 = (long) $i6;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l7);

        $r3 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.util.List sampleInfoSizes>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        goto label3;

     label2:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.Short) $r5;

        $s8 = virtualinvoke $r6.<java.lang.Short: short shortValue()>();

        $i9 = (int) $s8;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt8(java.nio.ByteBuffer,int)>(r1, $i9);

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        goto label5;

     label4:
        $i4 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int sampleCount>;

        $l5 = (long) $i4;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l5);

     label5:
        return;
    }

    public void _parseDetails(java.nio.ByteBuffer)
    {
        long $l4;
        java.nio.ByteBuffer r1;
        short $s3, $s9;
        java.lang.Short $r4;
        int $i0, $i1, $i2, $i5, $i6, $i7, $i8, i10, $i11;
        java.lang.String $r5, $r6;
        java.util.List $r2, $r3;
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: long parseVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int getFlags()>();

        $i1 = $i0 & 1;

        if $i1 != 1 goto label1;

        $r5 = staticinvoke <com.coremedia.iso.IsoTypeReader: java.lang.String read4cc(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.lang.String auxInfoType> = $r5;

        $r6 = staticinvoke <com.coremedia.iso.IsoTypeReader: java.lang.String read4cc(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.lang.String auxInfoTypeParameter> = $r6;

     label1:
        $i2 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt8(java.nio.ByteBuffer)>(r1);

        $s3 = (short) $i2;

        $i11 = (int) $s3;

        r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int defaultSampleInfoSize> = $i11;

        $l4 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        $i5 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l4);

        r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int sampleCount> = $i5;

        $r2 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.util.List sampleInfoSizes>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        $i6 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int defaultSampleInfoSize>;

        if $i6 != 0 goto label4;

        i10 = 0;

        goto label3;

     label2:
        $r3 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.util.List sampleInfoSizes>;

        $i8 = staticinvoke <com.coremedia.iso.IsoTypeReader: int readUInt8(java.nio.ByteBuffer)>(r1);

        $s9 = (short) $i8;

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s9);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        i10 = i10 + 1;

     label3:
        $i7 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int sampleCount>;

        if i10 < $i7 goto label2;

     label4:
        return;
    }

    public java.lang.String getAuxInfoType()
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;
        java.lang.String $r4;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        $r1 = <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $r4 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.lang.String auxInfoType>;

        return $r4;
    }

    public void setAuxInfoType(java.lang.String)
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        org.aspectj.lang.JoinPoint$StaticPart $r2;
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r1;
        java.lang.String r0;
        org.aspectj.lang.JoinPoint $r3;

        r1 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        r0 := @parameter0: java.lang.String;

        $r2 = <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1>;

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, r1, r1, r0);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        r1.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.lang.String auxInfoType> = r0;

        return;
    }

    public java.lang.String getAuxInfoTypeParameter()
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;
        java.lang.String $r4;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        $r1 = <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $r4 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.lang.String auxInfoTypeParameter>;

        return $r4;
    }

    public void setAuxInfoTypeParameter(java.lang.String)
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        org.aspectj.lang.JoinPoint$StaticPart $r2;
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r1;
        java.lang.String r0;
        org.aspectj.lang.JoinPoint $r3;

        r1 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        r0 := @parameter0: java.lang.String;

        $r2 = <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_3>;

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, r1, r1, r0);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        r1.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.lang.String auxInfoTypeParameter> = r0;

        return;
    }

    public int getDefaultSampleInfoSize()
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0;
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        $r1 = <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $i0 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int defaultSampleInfoSize>;

        return $i0;
    }

    public void setDefaultSampleInfoSize(int)
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        java.lang.AssertionError $r5;
        int i0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;
        java.lang.Object $r2;
        org.aspectj.lang.JoinPoint $r3;
        boolean $z0;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        i0 := @parameter0: int;

        $r1 = <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_5>;

        $r2 = staticinvoke <org.aspectj.runtime.internal.Conversions: java.lang.Object intObject(int)>(i0);

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r1, r0, r0, $r2);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        $z0 = <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i0 <= 255 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int defaultSampleInfoSize> = i0;

        return;
    }

    public java.util.List getSampleInfoSizes()
    {
        java.util.List $r4;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        $r1 = <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_6>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $r4 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.util.List sampleInfoSizes>;

        return $r4;
    }

    public void setSampleInfoSizes(java.util.List)
    {
        java.util.List r0;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        org.aspectj.lang.JoinPoint$StaticPart $r2;
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r1;
        org.aspectj.lang.JoinPoint $r3;

        r1 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        r0 := @parameter0: java.util.List;

        $r2 = <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_7>;

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, r1, r1, r0);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        r1.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.util.List sampleInfoSizes> = r0;

        return;
    }

    public int getSampleCount()
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0;
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        $r1 = <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_8>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $i0 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int sampleCount>;

        return $i0;
    }

    public void setSampleCount(int)
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        int i0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;
        java.lang.Object $r2;
        org.aspectj.lang.JoinPoint $r3;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        i0 := @parameter0: int;

        $r1 = <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_9>;

        $r2 = staticinvoke <org.aspectj.runtime.internal.Conversions: java.lang.Object intObject(int)>(i0);

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r1, r0, r0, $r2);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int sampleCount> = i0;

        return;
    }

    public java.lang.String toString()
    {
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0, $i1;
        java.lang.String $r9, $r13, $r17;
        org.aspectj.lang.JoinPoint $r2;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox r0;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r14, $r15, $r16;

        r0 := @this: com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox;

        $r1 = <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_10>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("SampleAuxiliaryInformationSizesBox{defaultSampleInfoSize=");

        $i0 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int defaultSampleInfoSize>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sampleCount=");

        $i1 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: int sampleCount>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", auxInfoType=\'");

        $r9 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.lang.String auxInfoType>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", auxInfoTypeParameter=\'");

        $r13 = r0.<com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: java.lang.String auxInfoTypeParameter>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;
    }

    private static void ajc$preClinit()
    {
        org.aspectj.runtime.reflect.Factory $r0;
        org.aspectj.lang.JoinPoint$StaticPart $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22;
        org.aspectj.lang.reflect.MethodSignature $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21;

        $r0 = new org.aspectj.runtime.reflect.Factory;

        specialinvoke $r0.<org.aspectj.runtime.reflect.Factory: void <init>(java.lang.String,java.lang.Class)>("SampleAuxiliaryInformationSizesBox.java", class "Lcom/coremedia/iso/boxes/SampleAuxiliaryInformationSizesBox;");

        $r1 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getAuxInfoType", "com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox", "", "", "", "java.lang.String");

        $r2 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r1, 98);

        <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0> = $r2;

        $r3 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setAuxInfoType", "com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox", "java.lang.String", "auxInfoType", "", "void");

        $r4 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r3, 102);

        <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1> = $r4;

        $r5 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "toString", "com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox", "", "", "", "java.lang.String");

        $r6 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r5, 140);

        <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_10> = $r6;

        $r7 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getAuxInfoTypeParameter", "com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox", "", "", "", "java.lang.String");

        $r8 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r7, 106);

        <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2> = $r8;

        $r9 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setAuxInfoTypeParameter", "com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox", "java.lang.String", "auxInfoTypeParameter", "", "void");

        $r10 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r9, 110);

        <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_3> = $r10;

        $r11 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getDefaultSampleInfoSize", "com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox", "", "", "", "int");

        $r12 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r11, 114);

        <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4> = $r12;

        $r13 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setDefaultSampleInfoSize", "com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox", "int", "defaultSampleInfoSize", "", "void");

        $r14 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r13, 118);

        <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_5> = $r14;

        $r15 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getSampleInfoSizes", "com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox", "", "", "", "java.util.List");

        $r16 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r15, 123);

        <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_6> = $r16;

        $r17 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setSampleInfoSizes", "com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox", "java.util.List", "sampleInfoSizes", "", "void");

        $r18 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r17, 127);

        <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_7> = $r18;

        $r19 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getSampleCount", "com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox", "", "", "", "int");

        $r20 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r19, 131);

        <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_8> = $r20;

        $r21 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setSampleCount", "com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox", "int", "sampleCount", "", "void");

        $r22 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r21, 135);

        <com.coremedia.iso.boxes.SampleAuxiliaryInformationSizesBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_9> = $r22;

        return;
    }
}
