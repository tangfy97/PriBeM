public class org.jdesktop.swingx.JXTreeTable$TreeTableHacker extends java.lang.Object
{
    protected boolean expansionChangedFlag;
    final org.jdesktop.swingx.JXTreeTable this$0;

    public void <init>(org.jdesktop.swingx.JXTreeTable)
    {
        org.jdesktop.swingx.JXTreeTable$TreeTableHacker r0;
        org.jdesktop.swingx.JXTreeTable r1;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableHacker;

        r1 := @parameter0: org.jdesktop.swingx.JXTreeTable;

        r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHacker: org.jdesktop.swingx.JXTreeTable this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected boolean isHitDetectionFromProcessMouse()
    {
        org.jdesktop.swingx.JXTreeTable$TreeTableHacker r0;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableHacker;

        return 0;
    }

    public void hitHandleDetectionFromEditCell(int, java.util.EventObject)
    {
        int i0;
        org.jdesktop.swingx.JXTreeTable$TreeTableHacker r0;
        boolean $z0;
        java.util.EventObject r1;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableHacker;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.EventObject;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHacker: boolean isHitDetectionFromProcessMouse()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHacker: boolean expandOrCollapseNode(int,java.util.EventObject)>(i0, r1);

     label1:
        return;
    }

    public boolean hitHandleDetectionFromProcessMouse(java.awt.event.MouseEvent)
    {
        java.awt.Point $r3, $r5;
        org.jdesktop.swingx.JXTreeTable$TreeTableHacker r0;
        java.awt.event.MouseEvent r1;
        org.jdesktop.swingx.JXTreeTable $r2, $r4;
        int $i0, $i1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableHacker;

        r1 := @parameter0: java.awt.event.MouseEvent;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHacker: boolean isHitDetectionFromProcessMouse()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHacker: org.jdesktop.swingx.JXTreeTable this$0>;

        $r3 = virtualinvoke r1.<java.awt.event.MouseEvent: java.awt.Point getPoint()>();

        $i0 = virtualinvoke $r2.<org.jdesktop.swingx.JXTreeTable: int columnAtPoint(java.awt.Point)>($r3);

        if $i0 < 0 goto label2;

        $r4 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHacker: org.jdesktop.swingx.JXTreeTable this$0>;

        $r5 = virtualinvoke r1.<java.awt.event.MouseEvent: java.awt.Point getPoint()>();

        $i1 = virtualinvoke $r4.<org.jdesktop.swingx.JXTreeTable: int columnAtPoint(java.awt.Point)>($r5);

        $z1 = virtualinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHacker: boolean expandOrCollapseNode(int,java.util.EventObject)>($i1, r1);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    protected void completeEditing()
    {
        org.jdesktop.swingx.JXTreeTable$TreeTableHacker r0;
        org.jdesktop.swingx.JXTreeTable $r1, $r2, $r4;
        javax.swing.table.TableCellEditor $r3, $r5;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableHacker;

        $r1 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHacker: org.jdesktop.swingx.JXTreeTable this$0>;

        $z0 = virtualinvoke $r1.<org.jdesktop.swingx.JXTreeTable: boolean isEditing()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHacker: org.jdesktop.swingx.JXTreeTable this$0>;

        $r3 = virtualinvoke $r2.<org.jdesktop.swingx.JXTreeTable: javax.swing.table.TableCellEditor getCellEditor()>();

        $z1 = interfaceinvoke $r3.<javax.swing.table.TableCellEditor: boolean stopCellEditing()>();

        if $z1 != 0 goto label1;

        $r4 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHacker: org.jdesktop.swingx.JXTreeTable this$0>;

        $r5 = virtualinvoke $r4.<org.jdesktop.swingx.JXTreeTable: javax.swing.table.TableCellEditor getCellEditor()>();

        interfaceinvoke $r5.<javax.swing.table.TableCellEditor: void cancelCellEditing()>();

     label1:
        return;
    }

    protected boolean expandOrCollapseNode(int, java.util.EventObject)
    {
        java.util.EventObject r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7;
        java.awt.Component $r18;
        java.awt.Rectangle $r8;
        long $l3, $l10, $l16;
        org.jdesktop.swingx.JXTreeTable$TreeTableHacker r0;
        int i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20;
        org.jdesktop.swingx.JXTreeTable $r1, $r3, $r5, $r7, $r9, $r12, $r14;
        java.awt.event.MouseEvent $r4, $r11, $r16, r19;
        java.lang.Object $r17;
        org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer $r6, $r10, $r13, $r15;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableHacker;

        i0 := @parameter0: int;

        r2 := @parameter1: java.util.EventObject;

        $r1 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHacker: org.jdesktop.swingx.JXTreeTable this$0>;

        $z0 = virtualinvoke $r1.<org.jdesktop.swingx.JXTreeTable: boolean isHierarchical(int)>(i0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = virtualinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHacker: boolean mightBeExpansionTrigger(java.util.EventObject)>(r2);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        z7 = 0;

        r19 = (java.awt.event.MouseEvent) r2;

        $r3 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHacker: org.jdesktop.swingx.JXTreeTable this$0>;

        $z2 = virtualinvoke $r3.<org.jdesktop.swingx.JXTreeTable: boolean hackAroundDragEnabled(java.awt.event.MouseEvent)>(r19);

        if $z2 == 0 goto label3;

        $r16 = new java.awt.event.MouseEvent;

        $r17 = virtualinvoke r19.<java.awt.event.MouseEvent: java.lang.Object getSource()>();

        $r18 = (java.awt.Component) $r17;

        $l16 = virtualinvoke r19.<java.awt.event.MouseEvent: long getWhen()>();

        $i17 = virtualinvoke r19.<java.awt.event.MouseEvent: int getModifiers()>();

        $i18 = virtualinvoke r19.<java.awt.event.MouseEvent: int getX()>();

        $i19 = virtualinvoke r19.<java.awt.event.MouseEvent: int getY()>();

        $i20 = virtualinvoke r19.<java.awt.event.MouseEvent: int getClickCount()>();

        $z6 = virtualinvoke r19.<java.awt.event.MouseEvent: boolean isPopupTrigger()>();

        specialinvoke $r16.<java.awt.event.MouseEvent: void <init>(java.awt.Component,int,long,int,int,int,int,boolean)>($r18, 501, $l16, $i17, $i18, $i19, $i20, $z6);

        r19 = $r16;

     label3:
        $i1 = virtualinvoke r19.<java.awt.event.MouseEvent: int getModifiers()>();

        if $i1 == 0 goto label4;

        $i15 = virtualinvoke r19.<java.awt.event.MouseEvent: int getModifiers()>();

        if $i15 != 16 goto label5;

     label4:
        $r4 = new java.awt.event.MouseEvent;

        $r5 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHacker: org.jdesktop.swingx.JXTreeTable this$0>;

        $r6 = staticinvoke <org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer access$100(org.jdesktop.swingx.JXTreeTable)>($r5);

        $i2 = virtualinvoke r19.<java.awt.event.MouseEvent: int getID()>();

        $l3 = virtualinvoke r19.<java.awt.event.MouseEvent: long getWhen()>();

        $i4 = virtualinvoke r19.<java.awt.event.MouseEvent: int getModifiers()>();

        $i5 = virtualinvoke r19.<java.awt.event.MouseEvent: int getX()>();

        $r7 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHacker: org.jdesktop.swingx.JXTreeTable this$0>;

        $r8 = virtualinvoke $r7.<org.jdesktop.swingx.JXTreeTable: java.awt.Rectangle getCellRect(int,int,boolean)>(0, i0, 0);

        $i6 = $r8.<java.awt.Rectangle: int x>;

        $i7 = $i5 - $i6;

        $i8 = virtualinvoke r19.<java.awt.event.MouseEvent: int getY()>();

        $i9 = virtualinvoke r19.<java.awt.event.MouseEvent: int getClickCount()>();

        $z3 = virtualinvoke r19.<java.awt.event.MouseEvent: boolean isPopupTrigger()>();

        specialinvoke $r4.<java.awt.event.MouseEvent: void <init>(java.awt.Component,int,long,int,int,int,int,boolean)>($r6, $i2, $l3, $i4, $i7, $i8, $i9, $z3);

        $r9 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHacker: org.jdesktop.swingx.JXTreeTable this$0>;

        $r10 = staticinvoke <org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer access$100(org.jdesktop.swingx.JXTreeTable)>($r9);

        virtualinvoke $r10.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer: void dispatchEvent(java.awt.AWTEvent)>($r4);

        $r11 = new java.awt.event.MouseEvent;

        $r12 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHacker: org.jdesktop.swingx.JXTreeTable this$0>;

        $r13 = staticinvoke <org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer access$100(org.jdesktop.swingx.JXTreeTable)>($r12);

        $l10 = virtualinvoke $r4.<java.awt.event.MouseEvent: long getWhen()>();

        $i11 = virtualinvoke $r4.<java.awt.event.MouseEvent: int getModifiers()>();

        $i12 = virtualinvoke $r4.<java.awt.event.MouseEvent: int getX()>();

        $i13 = virtualinvoke $r4.<java.awt.event.MouseEvent: int getY()>();

        $i14 = virtualinvoke $r4.<java.awt.event.MouseEvent: int getClickCount()>();

        $z4 = virtualinvoke $r4.<java.awt.event.MouseEvent: boolean isPopupTrigger()>();

        specialinvoke $r11.<java.awt.event.MouseEvent: void <init>(java.awt.Component,int,long,int,int,int,int,boolean)>($r13, 502, $l10, $i11, $i12, $i13, $i14, $z4);

        $r14 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHacker: org.jdesktop.swingx.JXTreeTable this$0>;

        $r15 = staticinvoke <org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer access$100(org.jdesktop.swingx.JXTreeTable)>($r14);

        virtualinvoke $r15.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer: void dispatchEvent(java.awt.AWTEvent)>($r11);

        $z5 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHacker: boolean expansionChangedFlag>;

        if $z5 == 0 goto label5;

        z7 = 1;

     label5:
        r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHacker: boolean expansionChangedFlag> = 0;

        return z7;
    }

    protected boolean mightBeExpansionTrigger(java.util.EventObject)
    {
        int $i0;
        java.awt.event.MouseEvent r1;
        org.jdesktop.swingx.JXTreeTable$TreeTableHacker r2;
        java.util.EventObject r0;
        boolean $z0, $z1, $z2;

        r2 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableHacker;

        r0 := @parameter0: java.util.EventObject;

        $z0 = r0 instanceof java.awt.event.MouseEvent;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (java.awt.event.MouseEvent) r0;

        $z1 = staticinvoke <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>(r1);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke r1.<java.awt.event.MouseEvent: int getID()>();

        if $i0 != 501 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    protected void expansionChanged()
    {
        org.jdesktop.swingx.JXTreeTable$TreeTableHacker r0;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableHacker;

        r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHacker: boolean expansionChangedFlag> = 1;

        return;
    }
}
