public class org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread extends java.lang.Thread
{
    org.apache.lucene.index.IndexWriter tWriter;
    org.apache.lucene.index.MergePolicy$OneMerge startMerge;
    org.apache.lucene.index.MergePolicy$OneMerge runningMerge;
    private volatile boolean done;
    final org.apache.lucene.index.ConcurrentMergeScheduler this$0;

    public void <init>(org.apache.lucene.index.ConcurrentMergeScheduler, org.apache.lucene.index.IndexWriter, org.apache.lucene.index.MergePolicy$OneMerge)
    {
        org.apache.lucene.index.IndexWriter r2;
        org.apache.lucene.index.MergePolicy$OneMerge r3;
        org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread r0;
        org.apache.lucene.index.ConcurrentMergeScheduler r1;

        r0 := @this: org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread;

        r1 := @parameter0: org.apache.lucene.index.ConcurrentMergeScheduler;

        r2 := @parameter1: org.apache.lucene.index.IndexWriter;

        r3 := @parameter2: org.apache.lucene.index.MergePolicy$OneMerge;

        r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.ConcurrentMergeScheduler this$0> = r1;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.IndexWriter tWriter> = r2;

        r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.MergePolicy$OneMerge startMerge> = r3;

        return;
    }

    public synchronized void setRunningMerge(org.apache.lucene.index.MergePolicy$OneMerge)
    {
        org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread r0;
        org.apache.lucene.index.MergePolicy$OneMerge r1;

        r0 := @this: org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread;

        r1 := @parameter0: org.apache.lucene.index.MergePolicy$OneMerge;

        r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.MergePolicy$OneMerge runningMerge> = r1;

        return;
    }

    public synchronized org.apache.lucene.index.MergePolicy$OneMerge getRunningMerge()
    {
        org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread r0;
        org.apache.lucene.index.MergePolicy$OneMerge $r1;

        r0 := @this: org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread;

        $r1 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.MergePolicy$OneMerge runningMerge>;

        return $r1;
    }

    public synchronized org.apache.lucene.index.MergePolicy$OneMerge getCurrentMerge()
    {
        org.apache.lucene.index.MergePolicy$OneMerge $r1, $r2, $r3;
        org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread;

        $z0 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: boolean done>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.MergePolicy$OneMerge runningMerge>;

        if $r1 == null goto label2;

        $r3 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.MergePolicy$OneMerge runningMerge>;

        return $r3;

     label2:
        $r2 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.MergePolicy$OneMerge startMerge>;

        return $r2;
    }

    public void setThreadPriority(int)
    {
        int i0;
        org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread r0;
        java.lang.SecurityException $r1;
        java.lang.NullPointerException $r2;

        r0 := @this: org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread;

        i0 := @parameter0: int;

     label1:
        virtualinvoke r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: void setPriority(int)>(i0);

     label2:
        goto label5;

     label3:
        $r2 := @caughtexception;

        goto label5;

     label4:
        $r1 := @caughtexception;

     label5:
        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
        catch java.lang.SecurityException from label1 to label2 with label4;
    }

    public void run()
    {
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.List $r12;
        org.apache.lucene.index.IndexWriter $r13, $r31;
        org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread r0;
        java.lang.StringBuilder $r9, $r11, $r15;
        java.lang.Throwable $r18, $r19, $r23, $r24, $r27, $r28;
        org.apache.lucene.index.ConcurrentMergeScheduler $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r17, $r20, $r21, $r22, $r25, $r26, $r30, $r33, $r34, $r35, $r36, $r37;
        java.lang.String $r14, $r16;
        org.apache.lucene.index.MergePolicy$OneMerge r29, $r32;

        r0 := @this: org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread;

        r29 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.MergePolicy$OneMerge startMerge>;

     label01:
        $r1 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.ConcurrentMergeScheduler this$0>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.index.ConcurrentMergeScheduler: boolean verbose()>();

        if $z0 == 0 goto label02;

        $r17 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.ConcurrentMergeScheduler this$0>;

        virtualinvoke $r17.<org.apache.lucene.index.ConcurrentMergeScheduler: void message(java.lang.String)>("  merge thread: start");

     label02:
        virtualinvoke r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: void setRunningMerge(org.apache.lucene.index.MergePolicy$OneMerge)>(r29);

        $r30 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.ConcurrentMergeScheduler this$0>;

        virtualinvoke $r30.<org.apache.lucene.index.ConcurrentMergeScheduler: void doMerge(org.apache.lucene.index.MergePolicy$OneMerge)>(r29);

        $r31 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.IndexWriter tWriter>;

        $r32 = virtualinvoke $r31.<org.apache.lucene.index.IndexWriter: org.apache.lucene.index.MergePolicy$OneMerge getNextMerge()>();

        r29 = $r32;

        $r33 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.ConcurrentMergeScheduler this$0>;

        entermonitor $r33;

     label03:
        $r34 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.ConcurrentMergeScheduler this$0>;

        virtualinvoke $r34.<java.lang.Object: void notifyAll()>();

        exitmonitor $r33;

     label04:
        goto label07;

     label05:
        $r28 := @caughtexception;

        exitmonitor $r33;

     label06:
        throw $r28;

     label07:
        if $r32 == null goto label08;

        $r7 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.ConcurrentMergeScheduler this$0>;

        virtualinvoke $r7.<org.apache.lucene.index.ConcurrentMergeScheduler: void updateMergeThreads()>();

        $r8 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.ConcurrentMergeScheduler this$0>;

        $z2 = virtualinvoke $r8.<org.apache.lucene.index.ConcurrentMergeScheduler: boolean verbose()>();

        if $z2 == 0 goto label02;

        $r10 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.ConcurrentMergeScheduler this$0>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  merge thread: do another merge ");

        $r13 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.IndexWriter tWriter>;

        $r12 = $r32.<org.apache.lucene.index.MergePolicy$OneMerge: java.util.List segments>;

        $r14 = virtualinvoke $r13.<org.apache.lucene.index.IndexWriter: java.lang.String segString(java.lang.Iterable)>($r12);

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<org.apache.lucene.index.ConcurrentMergeScheduler: void message(java.lang.String)>($r16);

        goto label02;

     label08:
        $r2 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.ConcurrentMergeScheduler this$0>;

        $z1 = virtualinvoke $r2.<org.apache.lucene.index.ConcurrentMergeScheduler: boolean verbose()>();

        if $z1 == 0 goto label09;

        $r6 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.ConcurrentMergeScheduler this$0>;

        virtualinvoke $r6.<org.apache.lucene.index.ConcurrentMergeScheduler: void message(java.lang.String)>("  merge thread: done");

     label09:
        r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: boolean done> = 1;

        $r3 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.ConcurrentMergeScheduler this$0>;

        entermonitor $r3;

     label10:
        $r4 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.ConcurrentMergeScheduler this$0>;

        virtualinvoke $r4.<org.apache.lucene.index.ConcurrentMergeScheduler: void updateMergeThreads()>();

        $r5 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.ConcurrentMergeScheduler this$0>;

        virtualinvoke $r5.<java.lang.Object: void notifyAll()>();

        exitmonitor $r3;

     label11:
        goto label14;

     label12:
        $r27 := @caughtexception;

        exitmonitor $r3;

     label13:
        throw $r27;

     label14:
        goto label29;

     label15:
        $r24 := @caughtexception;

        $z3 = $r24 instanceof org.apache.lucene.index.MergePolicy$MergeAbortedException;

        if $z3 != 0 goto label16;

        $r25 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.ConcurrentMergeScheduler this$0>;

        $z4 = staticinvoke <org.apache.lucene.index.ConcurrentMergeScheduler: boolean access$000(org.apache.lucene.index.ConcurrentMergeScheduler)>($r25);

        if $z4 != 0 goto label16;

        $r26 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.ConcurrentMergeScheduler this$0>;

        virtualinvoke $r26.<org.apache.lucene.index.ConcurrentMergeScheduler: void handleMergeException(java.lang.Throwable)>($r24);

     label16:
        r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: boolean done> = 1;

        $r35 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.ConcurrentMergeScheduler this$0>;

        entermonitor $r35;

     label17:
        $r36 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.ConcurrentMergeScheduler this$0>;

        virtualinvoke $r36.<org.apache.lucene.index.ConcurrentMergeScheduler: void updateMergeThreads()>();

        $r37 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.ConcurrentMergeScheduler this$0>;

        virtualinvoke $r37.<java.lang.Object: void notifyAll()>();

        exitmonitor $r35;

     label18:
        goto label21;

     label19:
        $r23 := @caughtexception;

        exitmonitor $r35;

     label20:
        throw $r23;

     label21:
        goto label29;

     label22:
        $r19 := @caughtexception;

     label23:
        r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: boolean done> = 1;

        $r20 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.ConcurrentMergeScheduler this$0>;

        entermonitor $r20;

     label24:
        $r21 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.ConcurrentMergeScheduler this$0>;

        virtualinvoke $r21.<org.apache.lucene.index.ConcurrentMergeScheduler: void updateMergeThreads()>();

        $r22 = r0.<org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread: org.apache.lucene.index.ConcurrentMergeScheduler this$0>;

        virtualinvoke $r22.<java.lang.Object: void notifyAll()>();

        exitmonitor $r20;

     label25:
        goto label28;

     label26:
        $r18 := @caughtexception;

        exitmonitor $r20;

     label27:
        throw $r18;

     label28:
        throw $r19;

     label29:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label01 to label09 with label15;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
        catch java.lang.Throwable from label15 to label16 with label22;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label26 to label27 with label26;
        catch java.lang.Throwable from label22 to label23 with label22;
    }
}
