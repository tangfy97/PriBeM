public class org.apache.cxf.jaxrs.provider.RequestDispatcherProvider extends org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider implements javax.ws.rs.ext.MessageBodyWriter
{
    private static final java.util.ResourceBundle BUNDLE;
    private static final java.util.logging.Logger LOG;
    private static final java.lang.String ABSOLUTE_PATH_PARAMETER;
    private static final java.lang.String BASE_PATH_PARAMETER;
    private static final java.lang.String WEBAPP_BASE_PATH_PARAMETER;
    private static final java.lang.String RELATIVE_PATH_PARAMETER;
    private static final java.lang.String REQUEST_SCOPE;
    private static final java.lang.String SESSION_SCOPE;
    private static final java.lang.String MESSAGE_RESOURCE_PATH_PROPERTY;
    private static final java.lang.String DEFAULT_RESOURCE_EXTENSION;
    private static final java.lang.String DEFAULT_LOCATION_PREFIX;
    private java.lang.String servletContextPath;
    private java.lang.String resourcePath;
    private java.util.Map resourcePaths;
    private java.util.Map classResources;
    private java.util.Map enumResources;
    private boolean useClassNames;
    private java.lang.String scope;
    private java.util.Map beanNames;
    private java.lang.String beanName;
    private java.lang.String dispatcherName;
    private java.lang.String servletPath;
    private boolean saveParametersAsAttributes;
    private boolean logRedirects;
    private boolean strictPathCheck;
    private java.lang.String locationPrefix;
    private java.lang.String resourceExtension;
    private org.apache.cxf.jaxrs.ext.MessageContext mc;

    public void <init>()
    {
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r0;
        java.util.Map $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider: void <init>()>();

        $r1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.Map resourcePaths> = $r1;

        $r2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.Map classResources> = $r2;

        $r3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.Map enumResources> = $r3;

        r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String scope> = "request";

        $r4 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.Map beanNames> = $r4;

        return;
    }

    public void setMessageContext(org.apache.cxf.jaxrs.ext.MessageContext)
    {
        org.apache.cxf.jaxrs.ext.MessageContext r1;
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        r1 := @parameter0: org.apache.cxf.jaxrs.ext.MessageContext;

        r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: org.apache.cxf.jaxrs.ext.MessageContext mc> = r1;

        return;
    }

    public void setStrictPathCheck(boolean)
    {
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r0;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: boolean strictPathCheck> = z0;

        return;
    }

    public void setUseClassNames(boolean)
    {
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r0;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: boolean useClassNames> = z0;

        return;
    }

    public long getSize(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r5;
        java.lang.reflect.Type r3;
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r0;
        java.lang.Object r1;
        java.lang.Class r2;
        java.lang.'annotation'.Annotation[] r4;

        r0 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.reflect.Type;

        r4 := @parameter3: java.lang.'annotation'.Annotation[];

        r5 := @parameter4: javax.ws.rs.core.MediaType;

        return -1L;
    }

    private java.lang.String getClassResourceName(java.lang.Class)
    {
        int $i2;
        java.lang.String $r1, $r4, r5, $r6, $r9, $r12, $r13, $r14, $r15;
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r3;
        char $c0, $c1;
        java.lang.Class r0;
        java.lang.StringBuilder $r2, $r7, $r8, $r10, $r11;

        r3 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getSimpleName()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $c0 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $c1 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i2 <= 1 goto label1;

        $r13 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

     label1:
        $r4 = r3.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String locationPrefix>;

        if $r4 != null goto label2;

        $r14 = "/WEB-INF/";

        goto label3;

     label2:
        $r14 = r3.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String locationPrefix>;

     label3:
        r5 = $r14;

        $r6 = r3.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String resourceExtension>;

        if $r6 != null goto label4;

        $r15 = ".jsp";

        goto label5;

     label4:
        $r15 = r3.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String resourceExtension>;

     label5:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public boolean isWriteable(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        org.apache.cxf.Bus $r14;
        java.net.URL $r15;
        java.lang.'annotation'.Annotation[] r17;
        javax.ws.rs.core.MediaType r18;
        org.apache.cxf.jaxrs.ext.MessageContext $r4, $r5;
        java.util.Map $r3, $r8;
        java.lang.String $r1, $r7, r12, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Iterator $r10;
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r0;
        java.util.Set $r9;
        java.lang.reflect.Type r16;
        java.lang.Class r2;
        java.lang.Object $r6, $r11;

        r0 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        r2 := @parameter0: java.lang.Class;

        r16 := @parameter1: java.lang.reflect.Type;

        r17 := @parameter2: java.lang.'annotation'.Annotation[];

        r18 := @parameter3: javax.ws.rs.core.MediaType;

        $z0 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: boolean useClassNames>;

        if $z0 == 0 goto label1;

        $r13 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String getClassResourceName(java.lang.Class)>(r2);

        $r14 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: org.apache.cxf.Bus getBus()>();

        $r15 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: java.net.URL getClasspathResourceURL(java.lang.String,java.lang.Class,org.apache.cxf.Bus)>($r13, class "Lorg/apache/cxf/jaxrs/provider/RequestDispatcherProvider;", $r14);

        if $r15 == null goto label1;

        return 1;

     label1:
        $r1 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String resourcePath>;

        if $r1 != null goto label2;

        $z1 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: boolean classResourceSupported(java.lang.Class)>(r2);

        if $z1 == 0 goto label3;

     label2:
        return 1;

     label3:
        $r3 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.Map resourcePaths>;

        $z2 = interfaceinvoke $r3.<java.util.Map: boolean isEmpty()>();

        if $z2 != 0 goto label8;

        $r7 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String getRequestPath()>();

        $r8 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.Map resourcePaths>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set keySet()>();

        $r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z3 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label8;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.lang.String) $r11;

        $z4 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: boolean strictPathCheck>;

        if $z4 == 0 goto label5;

        $z5 = virtualinvoke $r7.<java.lang.String: boolean endsWith(java.lang.String)>(r12);

        goto label6;

     label5:
        $z5 = virtualinvoke $r7.<java.lang.String: boolean contains(java.lang.CharSequence)>(r12);

     label6:
        if $z5 == 0 goto label7;

        return 1;

     label7:
        goto label4;

     label8:
        $r4 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        if $r4 == null goto label9;

        $r5 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        $r6 = interfaceinvoke $r5.<org.apache.cxf.jaxrs.ext.MessageContext: java.lang.Object get(java.lang.Object)>("redirect.resource.path");

        if $r6 == null goto label9;

        return 1;

     label9:
        return 0;
    }

    private boolean classResourceSupported(java.lang.Class)
    {
        java.lang.Enum r14;
        java.util.Map $r3, $r4, $r7;
        java.lang.String $r1, $r13, r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Iterator $r6, $r9;
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r2;
        java.util.Set $r5, $r8;
        java.lang.Class r0, $r12;
        java.lang.Object $r10, $r11;

        r2 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isEnum()>();

        if $z0 == 0 goto label7;

        $r4 = r2.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.Map enumResources>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r11 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r14 = (java.lang.Enum) $r11;

        $r12 = virtualinvoke r14.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        $z5 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z5 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        $r7 = r2.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.Map classResources>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z3 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.lang.String) $r10;

        $z4 = virtualinvoke r15.<java.lang.String: boolean startsWith(java.lang.String)>($r1);

        if $z4 == 0 goto label5;

        return 1;

     label5:
        goto label4;

     label6:
        return 0;

     label7:
        $r3 = r2.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.Map classResources>;

        $z1 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        return $z1;
    }

    public void writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream) throws java.io.IOException
    {
        javax.ws.rs.core.MediaType r24;
        boolean $z0, $z1, $z2;
        javax.servlet.http.HttpSession $r17;
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r0;
        javax.servlet.RequestDispatcher $r5;
        javax.ws.rs.InternalServerErrorException $r21;
        java.lang.reflect.Type r22;
        java.lang.Throwable $r18;
        java.lang.'annotation'.Annotation[] r23;
        javax.servlet.http.HttpServletRequest $r11;
        org.apache.cxf.jaxrs.ext.MessageContext $r7, $r10, $r20, $r28;
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter $r9;
        java.lang.Boolean $r6, $r19;
        java.lang.String $r4, $r8, $r12, $r13, $r14, $r15, $r16, $r27;
        java.io.OutputStream r26;
        javax.servlet.http.HttpServletResponse $r29;
        javax.ws.rs.core.MultivaluedMap r25;
        javax.servlet.ServletContext $r1;
        java.lang.Class r2;
        java.lang.Object r3;

        r0 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        r3 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        r22 := @parameter2: java.lang.reflect.Type;

        r23 := @parameter3: java.lang.'annotation'.Annotation[];

        r24 := @parameter4: javax.ws.rs.core.MediaType;

        r25 := @parameter5: javax.ws.rs.core.MultivaluedMap;

        r26 := @parameter6: java.io.OutputStream;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: javax.servlet.ServletContext getServletContext()>();

        $r4 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String getResourcePath(java.lang.Class,java.lang.Object)>(r2, r3);

        $r5 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: javax.servlet.RequestDispatcher getRequestDispatcher(javax.servlet.ServletContext,java.lang.Class,java.lang.String)>($r1, r2, $r4);

     label1:
        $r7 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke $r7.<org.apache.cxf.jaxrs.ext.MessageContext: void put(java.lang.Object,java.lang.Object)>("http.request.redirected", $r6);

        $r8 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String servletPath>;

        if $r8 != null goto label2;

        $r27 = "/";

        goto label3;

     label2:
        $r27 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String servletPath>;

     label3:
        $r9 = new org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter;

        $r10 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        $r11 = interfaceinvoke $r10.<org.apache.cxf.jaxrs.ext.MessageContext: javax.servlet.http.HttpServletRequest getHttpServletRequest()>();

        $z0 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: boolean saveParametersAsAttributes>;

        specialinvoke $r9.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter: void <init>(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,boolean)>($r11, $r4, $r27, $z0);

        $r12 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String getBeanName(java.lang.Object)>(r3);

        $r14 = "request";

        $r13 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String scope>;

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 == 0 goto label4;

        virtualinvoke $r9.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter: void setAttribute(java.lang.String,java.lang.Object)>($r12, r3);

        goto label5;

     label4:
        $r16 = "session";

        $r15 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String scope>;

        $z2 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z2 == 0 goto label5;

        $r17 = virtualinvoke $r9.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter: javax.servlet.http.HttpSession getSession(boolean)>(1);

        interfaceinvoke $r17.<javax.servlet.http.HttpSession: void setAttribute(java.lang.String,java.lang.Object)>($r12, r3);

     label5:
        virtualinvoke r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)>($r9);

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: void logRedirection(java.lang.String,java.lang.String,java.lang.Object)>($r4, $r12, r3);

        $r28 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        $r29 = interfaceinvoke $r28.<org.apache.cxf.jaxrs.ext.MessageContext: javax.servlet.http.HttpServletResponse getHttpServletResponse()>();

        interfaceinvoke $r5.<javax.servlet.RequestDispatcher: void forward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>($r9, $r29);

     label6:
        goto label8;

     label7:
        $r18 := @caughtexception;

        $r20 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        $r19 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        interfaceinvoke $r20.<org.apache.cxf.jaxrs.ext.MessageContext: void put(java.lang.Object,java.lang.Object)>("http.request.redirected", $r19);

        virtualinvoke $r18.<java.lang.Throwable: void printStackTrace()>();

        $r21 = new javax.ws.rs.InternalServerErrorException;

        specialinvoke $r21.<javax.ws.rs.InternalServerErrorException: void <init>(java.lang.Throwable)>($r18);

        throw $r21;

     label8:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
    }

    private void logRedirection(java.lang.String, java.lang.String, java.lang.Object)
    {
        java.lang.Object[] $r3;
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r0;
        java.util.logging.Logger $r1, $r11;
        org.apache.cxf.common.i18n.Message $r2;
        java.util.logging.Level $r12;
        java.util.ResourceBundle $r5;
        java.lang.Object r4;
        java.lang.Class $r6;
        java.lang.String $r7, r8, r9, $r10;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        r9 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Object;

        $z0 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: boolean logRedirects>;

        if $z0 == 0 goto label1;

        $r12 = <java.util.logging.Level: java.util.logging.Level INFO>;

        goto label2;

     label1:
        $r12 = <java.util.logging.Level: java.util.logging.Level FINE>;

     label2:
        $r1 = <org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.logging.Logger LOG>;

        $z1 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r12);

        if $z1 == 0 goto label3;

        $r2 = new org.apache.cxf.common.i18n.Message;

        $r5 = <org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.ResourceBundle BUNDLE>;

        $r3 = newarray (java.lang.Object)[3];

        $r6 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r3[0] = $r7;

        $r3[1] = r8;

        $r3[2] = r9;

        specialinvoke $r2.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("RESPONSE_REDIRECTED_TO", $r5, $r3);

        $r10 = virtualinvoke $r2.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        $r11 = <org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.logging.Logger LOG>;

        virtualinvoke $r11.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r12, $r10);

     label3:
        return;
    }

    java.lang.String getResourcePath(java.lang.Class, java.lang.Object)
    {
        java.util.Map $r3, $r7, $r13, $r18;
        boolean $z0, $z1, $z2, $z3;
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r0;
        java.util.Set $r8;
        java.lang.StringBuilder $r20, $r21, $r22, $r24;
        java.lang.String $r2, $r5, $r6, $r10, r12, $r15, $r16, $r23, $r25, $r26, r27, r28;
        java.util.Iterator $r9;
        java.lang.Class r1;
        java.lang.Object $r4, $r11, $r14, r17, $r19;

        r0 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        r1 := @parameter0: java.lang.Class;

        r17 := @parameter1: java.lang.Object;

        $z0 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: boolean useClassNames>;

        if $z0 == 0 goto label1;

        $r26 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String getClassResourceName(java.lang.Class)>(r1);

        return $r26;

     label1:
        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        r27 = $r2;

        $z1 = virtualinvoke r1.<java.lang.Class: boolean isEnum()>();

        if $z1 == 0 goto label3;

        $r18 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.Map enumResources>;

        $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>(r17);

        r28 = (java.lang.String) $r19;

        if r28 == null goto label2;

        return r28;

     label2:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r23 = virtualinvoke r17.<java.lang.Object: java.lang.String toString()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r3 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.Map classResources>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r27);

        $r25 = (java.lang.String) $r4;

        if $r25 == null goto label4;

        return $r25;

     label4:
        $r5 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String resourcePath>;

        if $r5 == null goto label5;

        $r16 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String resourcePath>;

        return $r16;

     label5:
        $r6 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String getRequestPath()>();

        $r7 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.Map resourcePaths>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label6:
        $z2 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label8;

        $r11 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.lang.String) $r11;

        $z3 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>(r12);

        if $z3 == 0 goto label7;

        $r13 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.Map resourcePaths>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r12);

        $r15 = (java.lang.String) $r14;

        return $r15;

     label7:
        goto label6;

     label8:
        $r10 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String getPathFromMessageContext()>();

        return $r10;
    }

    private java.lang.String getPathFromMessageContext()
    {
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r0;
        org.apache.cxf.jaxrs.ext.MessageContext $r1;
        java.lang.Object $r2;
        java.lang.StringBuilder $r4;
        java.lang.String r3, $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.ext.MessageContext: java.lang.Object get(java.lang.Object)>("redirect.resource.path");

        r3 = (java.lang.String) $r2;

        if r3 == null goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String locationPrefix>;

        if $r5 == null goto label1;

        $r10 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String locationPrefix>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

     label1:
        $r6 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String resourceExtension>;

        if $r7 == null goto label2;

        $r9 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String resourceExtension>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

     label2:
        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;

     label3:
        return null;
    }

    private java.lang.String getRequestPath()
    {
        org.apache.cxf.message.Message $r0, $r2;
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r5;
        java.lang.Object $r3;
        java.lang.String $r4;
        org.apache.cxf.message.Exchange $r1;

        r5 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        $r0 = staticinvoke <org.apache.cxf.phase.PhaseInterceptorChain: org.apache.cxf.message.Message getCurrentMessage()>();

        $r1 = interfaceinvoke $r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        $r3 = interfaceinvoke $r2.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("org.apache.cxf.request.uri");

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    protected javax.servlet.ServletContext getServletContext()
    {
        java.lang.Object[] $r7;
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r0;
        javax.ws.rs.InternalServerErrorException $r12;
        org.apache.cxf.common.i18n.Message $r6;
        java.util.logging.Logger $r11;
        org.apache.cxf.jaxrs.ext.MessageContext $r1;
        java.util.ResourceBundle $r9;
        javax.servlet.ServletContext $r2, $r5, r13;
        java.lang.String $r3, $r4, $r8, $r10;

        r0 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.ext.MessageContext: javax.servlet.ServletContext getServletContext()>();

        r13 = $r2;

        $r3 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String servletContextPath>;

        if $r3 == null goto label1;

        $r4 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String servletContextPath>;

        $r5 = interfaceinvoke $r2.<javax.servlet.ServletContext: javax.servlet.ServletContext getContext(java.lang.String)>($r4);

        r13 = $r5;

        if $r5 != null goto label1;

        $r6 = new org.apache.cxf.common.i18n.Message;

        $r9 = <org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.ResourceBundle BUNDLE>;

        $r7 = newarray (java.lang.Object)[1];

        $r8 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String servletContextPath>;

        $r7[0] = $r8;

        specialinvoke $r6.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("RESOURCE_DISPATCH_NOT_FOUND", $r9, $r7);

        $r10 = virtualinvoke $r6.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        $r11 = <org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.logging.Logger LOG>;

        virtualinvoke $r11.<java.util.logging.Logger: void severe(java.lang.String)>($r10);

        $r12 = new javax.ws.rs.InternalServerErrorException;

        specialinvoke $r12.<javax.ws.rs.InternalServerErrorException: void <init>()>();

        throw $r12;

     label1:
        return r13;
    }

    protected javax.servlet.RequestDispatcher getRequestDispatcher(javax.servlet.ServletContext, java.lang.Class, java.lang.String)
    {
        java.lang.Object[] $r5;
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r0;
        javax.servlet.RequestDispatcher $r12;
        javax.ws.rs.InternalServerErrorException $r9;
        org.apache.cxf.common.i18n.Message $r4;
        java.util.logging.Logger $r8;
        java.util.ResourceBundle $r6;
        javax.servlet.ServletContext r2;
        java.lang.Class r11;
        java.lang.String $r1, r3, $r7, $r10;

        r0 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        r2 := @parameter0: javax.servlet.ServletContext;

        r11 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.String;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String dispatcherName>;

        if $r1 == null goto label1;

        $r10 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String dispatcherName>;

        $r12 = interfaceinvoke r2.<javax.servlet.ServletContext: javax.servlet.RequestDispatcher getNamedDispatcher(java.lang.String)>($r10);

        goto label2;

     label1:
        $r12 = interfaceinvoke r2.<javax.servlet.ServletContext: javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)>(r3);

     label2:
        if $r12 != null goto label3;

        $r4 = new org.apache.cxf.common.i18n.Message;

        $r6 = <org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.ResourceBundle BUNDLE>;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r3;

        specialinvoke $r4.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("RESOURCE_PATH_NOT_FOUND", $r6, $r5);

        $r7 = virtualinvoke $r4.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        $r8 = <org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.logging.Logger LOG>;

        virtualinvoke $r8.<java.util.logging.Logger: void severe(java.lang.String)>($r7);

        $r9 = new javax.ws.rs.InternalServerErrorException;

        specialinvoke $r9.<javax.ws.rs.InternalServerErrorException: void <init>()>();

        throw $r9;

     label3:
        return $r12;
    }

    public void setResourcePath(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String resourcePath> = r1;

        return;
    }

    public void setServletContextPath(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String servletContextPath> = r1;

        return;
    }

    public void setScope(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String scope> = r1;

        return;
    }

    public void setBeanNames(java.util.Map)
    {
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        r1 := @parameter0: java.util.Map;

        r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.Map beanNames> = r1;

        return;
    }

    public void setBeanName(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String beanName> = r1;

        return;
    }

    public void setLogRedirects(java.lang.String)
    {
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r0;
        java.lang.Boolean $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>(r1);

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: boolean logRedirects> = $z0;

        return;
    }

    protected java.lang.String getBeanName(java.lang.Object)
    {
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r0;
        java.util.Map $r3;
        java.lang.Object r2, $r6;
        java.lang.Class $r4, $r8;
        java.lang.String $r1, $r5, r7, $r9, $r10, $r11;

        r0 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String beanName>;

        if $r1 == null goto label1;

        $r10 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String beanName>;

        return $r10;

     label1:
        $r3 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.Map beanNames>;

        $r4 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r7 = (java.lang.String) $r6;

        if r7 == null goto label2;

        $r11 = r7;

        goto label3;

     label2:
        $r8 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getSimpleName()>();

        $r11 = virtualinvoke $r9.<java.lang.String: java.lang.String toLowerCase()>();

     label3:
        return $r11;
    }

    protected void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)
    {
        java.net.URI $r10, $r13;
        boolean $z0;
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r0;
        java.util.Set $r5;
        java.util.List $r7, $r24;
        javax.ws.rs.core.UriInfo $r3;
        org.apache.cxf.jaxrs.ext.MessageContext $r1, $r2, $r15;
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter r8;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r11, $r12, $r14, $r17, $r27, r28;
        java.util.Map$Entry r22;
        java.util.Iterator $r6;
        javax.ws.rs.core.PathSegment $r19;
        javax.ws.rs.core.MultivaluedMap $r4, $r9, $r20;
        java.lang.Object $r16, $r18, $r21, $r23, $r25, $r26;

        r0 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        r8 := @parameter0: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        if $r1 == null goto label5;

        $r2 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        $r3 = interfaceinvoke $r2.<org.apache.cxf.jaxrs.ext.MessageContext: javax.ws.rs.core.UriInfo getUriInfo()>();

        $r4 = interfaceinvoke $r3.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getPathParameters()>();

        $r5 = interfaceinvoke $r4.<javax.ws.rs.core.MultivaluedMap: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r21 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r22 = (java.util.Map$Entry) $r21;

        $r23 = interfaceinvoke r22.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r24 = (java.util.List) $r23;

        $r25 = interfaceinvoke $r24.<java.util.List: java.lang.Object get(int)>(0);

        r28 = (java.lang.String) $r25;

        $i3 = virtualinvoke r28.<java.lang.String: int indexOf(java.lang.String)>(";");

        if $i3 <= 0 goto label2;

        r28 = virtualinvoke r28.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

     label2:
        $r26 = interfaceinvoke r22.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r27 = (java.lang.String) $r26;

        virtualinvoke r8.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter: void setParameter(java.lang.String,java.lang.String)>($r27, r28);

        goto label1;

     label3:
        $r7 = interfaceinvoke $r3.<javax.ws.rs.core.UriInfo: java.util.List getPathSegments()>();

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i0 <= 0 goto label4;

        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        $r18 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i2);

        $r19 = (javax.ws.rs.core.PathSegment) $r18;

        $r20 = interfaceinvoke $r19.<javax.ws.rs.core.PathSegment: javax.ws.rs.core.MultivaluedMap getMatrixParameters()>();

        virtualinvoke r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: void doSetRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter,javax.ws.rs.core.MultivaluedMap)>(r8, $r20);

     label4:
        $r9 = interfaceinvoke $r3.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>();

        virtualinvoke r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: void doSetRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter,javax.ws.rs.core.MultivaluedMap)>(r8, $r9);

        $r10 = interfaceinvoke $r3.<javax.ws.rs.core.UriInfo: java.net.URI getAbsolutePath()>();

        $r11 = virtualinvoke $r10.<java.net.URI: java.lang.String toString()>();

        virtualinvoke r8.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter: void setParameter(java.lang.String,java.lang.String)>("absolute.path", $r11);

        $r12 = interfaceinvoke $r3.<javax.ws.rs.core.UriInfo: java.lang.String getPath()>();

        virtualinvoke r8.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter: void setParameter(java.lang.String,java.lang.String)>("relative.path", $r12);

        $r13 = interfaceinvoke $r3.<javax.ws.rs.core.UriInfo: java.net.URI getBaseUri()>();

        $r14 = virtualinvoke $r13.<java.net.URI: java.lang.String toString()>();

        virtualinvoke r8.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter: void setParameter(java.lang.String,java.lang.String)>("base.path", $r14);

        $r15 = r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: org.apache.cxf.jaxrs.ext.MessageContext mc>;

        $r16 = interfaceinvoke $r15.<org.apache.cxf.jaxrs.ext.MessageContext: java.lang.Object get(java.lang.Object)>("http.base.path");

        $r17 = (java.lang.String) $r16;

        virtualinvoke r8.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter: void setParameter(java.lang.String,java.lang.String)>("webapp.base.path", $r17);

     label5:
        return;
    }

    protected void doSetRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter, javax.ws.rs.core.MultivaluedMap)
    {
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r10;
        java.util.Set $r1;
        javax.ws.rs.core.MultivaluedMap r0;
        java.util.List $r9;
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter r5;
        java.lang.Object $r3, $r6, $r8;
        java.lang.String $r7;
        boolean $z0;

        r10 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        r5 := @parameter0: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter;

        r0 := @parameter1: javax.ws.rs.core.MultivaluedMap;

        $r1 = interfaceinvoke r0.<javax.ws.rs.core.MultivaluedMap: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.String) $r6;

        $r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (java.util.List) $r8;

        virtualinvoke r5.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter: void setParameters(java.lang.String,java.util.List)>($r7, $r9);

        goto label1;

     label2:
        return;
    }

    public void setDispatcherName(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String dispatcherName> = r1;

        return;
    }

    public void setServletPath(java.lang.String)
    {
        java.lang.String r1;
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String servletPath> = r1;

        return;
    }

    public void setResourcePaths(java.util.Map)
    {
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        r1 := @parameter0: java.util.Map;

        r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.Map resourcePaths> = r1;

        return;
    }

    public void setClassResources(java.util.Map)
    {
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        r1 := @parameter0: java.util.Map;

        r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.Map classResources> = r1;

        return;
    }

    public void setSaveParametersAsAttributes(boolean)
    {
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r0;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: boolean saveParametersAsAttributes> = z0;

        return;
    }

    public void setEnumResources(java.util.Map)
    {
        org.apache.cxf.jaxrs.provider.RequestDispatcherProvider r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.RequestDispatcherProvider;

        r1 := @parameter0: java.util.Map;

        r0.<org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.Map enumResources> = r1;

        return;
    }

    static void <clinit>()
    {
        java.util.ResourceBundle $r0;
        java.util.logging.Logger $r1;

        <org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String DEFAULT_LOCATION_PREFIX> = "/WEB-INF/";

        <org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String DEFAULT_RESOURCE_EXTENSION> = ".jsp";

        <org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String MESSAGE_RESOURCE_PATH_PROPERTY> = "redirect.resource.path";

        <org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String SESSION_SCOPE> = "session";

        <org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String REQUEST_SCOPE> = "request";

        <org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String RELATIVE_PATH_PARAMETER> = "relative.path";

        <org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String WEBAPP_BASE_PATH_PARAMETER> = "webapp.base.path";

        <org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String BASE_PATH_PARAMETER> = "base.path";

        <org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.lang.String ABSOLUTE_PATH_PARAMETER> = "absolute.path";

        $r0 = staticinvoke <org.apache.cxf.common.i18n.BundleUtils: java.util.ResourceBundle getBundle(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/provider/RequestDispatcherProvider;");

        <org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.ResourceBundle BUNDLE> = $r0;

        $r1 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/provider/RequestDispatcherProvider;");

        <org.apache.cxf.jaxrs.provider.RequestDispatcherProvider: java.util.logging.Logger LOG> = $r1;

        return;
    }
}
