public class org.apache.lucene.queries.function.FunctionQuery$FunctionWeight extends org.apache.lucene.search.Weight
{
    protected final org.apache.lucene.search.IndexSearcher searcher;
    protected float queryNorm;
    protected float queryWeight;
    protected final java.util.Map context;
    final org.apache.lucene.queries.function.FunctionQuery this$0;

    public void <init>(org.apache.lucene.queries.function.FunctionQuery, org.apache.lucene.search.IndexSearcher) throws java.io.IOException
    {
        org.apache.lucene.queries.function.ValueSource $r5;
        org.apache.lucene.queries.function.FunctionQuery$FunctionWeight r0;
        org.apache.lucene.queries.function.FunctionQuery r1;
        java.util.Map $r3, $r4;
        org.apache.lucene.search.IndexSearcher r2;

        r0 := @this: org.apache.lucene.queries.function.FunctionQuery$FunctionWeight;

        r1 := @parameter0: org.apache.lucene.queries.function.FunctionQuery;

        r2 := @parameter1: org.apache.lucene.search.IndexSearcher;

        r0.<org.apache.lucene.queries.function.FunctionQuery$FunctionWeight: org.apache.lucene.queries.function.FunctionQuery this$0> = r1;

        specialinvoke r0.<org.apache.lucene.search.Weight: void <init>()>();

        r0.<org.apache.lucene.queries.function.FunctionQuery$FunctionWeight: org.apache.lucene.search.IndexSearcher searcher> = r2;

        $r3 = staticinvoke <org.apache.lucene.queries.function.ValueSource: java.util.Map newContext(org.apache.lucene.search.IndexSearcher)>(r2);

        r0.<org.apache.lucene.queries.function.FunctionQuery$FunctionWeight: java.util.Map context> = $r3;

        $r5 = r1.<org.apache.lucene.queries.function.FunctionQuery: org.apache.lucene.queries.function.ValueSource func>;

        $r4 = r0.<org.apache.lucene.queries.function.FunctionQuery$FunctionWeight: java.util.Map context>;

        virtualinvoke $r5.<org.apache.lucene.queries.function.ValueSource: void createWeight(java.util.Map,org.apache.lucene.search.IndexSearcher)>($r4, r2);

        return;
    }

    public org.apache.lucene.search.Query getQuery()
    {
        org.apache.lucene.queries.function.FunctionQuery$FunctionWeight r0;
        org.apache.lucene.queries.function.FunctionQuery $r1;

        r0 := @this: org.apache.lucene.queries.function.FunctionQuery$FunctionWeight;

        $r1 = r0.<org.apache.lucene.queries.function.FunctionQuery$FunctionWeight: org.apache.lucene.queries.function.FunctionQuery this$0>;

        return $r1;
    }

    public float getValueForNormalization() throws java.io.IOException
    {
        org.apache.lucene.queries.function.FunctionQuery$FunctionWeight r0;
        org.apache.lucene.queries.function.FunctionQuery $r1;
        float $f0, $f1, $f2, $f3;

        r0 := @this: org.apache.lucene.queries.function.FunctionQuery$FunctionWeight;

        $r1 = r0.<org.apache.lucene.queries.function.FunctionQuery$FunctionWeight: org.apache.lucene.queries.function.FunctionQuery this$0>;

        $f0 = virtualinvoke $r1.<org.apache.lucene.queries.function.FunctionQuery: float getBoost()>();

        r0.<org.apache.lucene.queries.function.FunctionQuery$FunctionWeight: float queryWeight> = $f0;

        $f2 = r0.<org.apache.lucene.queries.function.FunctionQuery$FunctionWeight: float queryWeight>;

        $f1 = r0.<org.apache.lucene.queries.function.FunctionQuery$FunctionWeight: float queryWeight>;

        $f3 = $f2 * $f1;

        return $f3;
    }

    public void normalize(float, float)
    {
        org.apache.lucene.queries.function.FunctionQuery$FunctionWeight r0;
        float f0, f1, $f2, $f3, $f4, $f5;

        r0 := @this: org.apache.lucene.queries.function.FunctionQuery$FunctionWeight;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $f2 = f0 * f1;

        r0.<org.apache.lucene.queries.function.FunctionQuery$FunctionWeight: float queryNorm> = $f2;

        $f4 = r0.<org.apache.lucene.queries.function.FunctionQuery$FunctionWeight: float queryWeight>;

        $f3 = r0.<org.apache.lucene.queries.function.FunctionQuery$FunctionWeight: float queryNorm>;

        $f5 = $f4 * $f3;

        r0.<org.apache.lucene.queries.function.FunctionQuery$FunctionWeight: float queryWeight> = $f5;

        return;
    }

    public org.apache.lucene.search.Scorer scorer(org.apache.lucene.index.AtomicReaderContext, boolean, boolean, org.apache.lucene.util.Bits) throws java.io.IOException
    {
        org.apache.lucene.queries.function.FunctionQuery$AllScorer $r0;
        org.apache.lucene.queries.function.FunctionQuery $r4;
        org.apache.lucene.queries.function.FunctionQuery$FunctionWeight r1;
        float $f0;
        org.apache.lucene.util.Bits r3;
        org.apache.lucene.index.AtomicReaderContext r2;
        boolean z0, z1;

        r1 := @this: org.apache.lucene.queries.function.FunctionQuery$FunctionWeight;

        r2 := @parameter0: org.apache.lucene.index.AtomicReaderContext;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r3 := @parameter3: org.apache.lucene.util.Bits;

        $r0 = new org.apache.lucene.queries.function.FunctionQuery$AllScorer;

        $r4 = r1.<org.apache.lucene.queries.function.FunctionQuery$FunctionWeight: org.apache.lucene.queries.function.FunctionQuery this$0>;

        $f0 = r1.<org.apache.lucene.queries.function.FunctionQuery$FunctionWeight: float queryWeight>;

        specialinvoke $r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: void <init>(org.apache.lucene.queries.function.FunctionQuery,org.apache.lucene.index.AtomicReaderContext,org.apache.lucene.util.Bits,org.apache.lucene.queries.function.FunctionQuery$FunctionWeight,float)>($r4, r2, r3, r1, $f0);

        return $r0;
    }

    public org.apache.lucene.search.Explanation explain(org.apache.lucene.index.AtomicReaderContext, int) throws java.io.IOException
    {
        org.apache.lucene.search.Scorer $r4;
        org.apache.lucene.search.Explanation $r6;
        org.apache.lucene.queries.function.FunctionQuery$AllScorer $r5;
        org.apache.lucene.queries.function.FunctionQuery$FunctionWeight r0;
        int i0;
        org.apache.lucene.util.Bits $r3;
        org.apache.lucene.index.AtomicReaderContext r1;
        org.apache.lucene.index.AtomicReader $r2;

        r0 := @this: org.apache.lucene.queries.function.FunctionQuery$FunctionWeight;

        r1 := @parameter0: org.apache.lucene.index.AtomicReaderContext;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r1.<org.apache.lucene.index.AtomicReaderContext: org.apache.lucene.index.AtomicReader reader()>();

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.AtomicReader: org.apache.lucene.util.Bits getLiveDocs()>();

        $r4 = virtualinvoke r0.<org.apache.lucene.queries.function.FunctionQuery$FunctionWeight: org.apache.lucene.search.Scorer scorer(org.apache.lucene.index.AtomicReaderContext,boolean,boolean,org.apache.lucene.util.Bits)>(r1, 1, 1, $r3);

        $r5 = (org.apache.lucene.queries.function.FunctionQuery$AllScorer) $r4;

        $r6 = virtualinvoke $r5.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: org.apache.lucene.search.Explanation explain(int)>(i0);

        return $r6;
    }
}
