public class org.apache.xalan.transformer.KeyTable extends java.lang.Object
{
    private int m_docKey;
    private java.util.Vector m_keyDeclarations;
    private java.util.Hashtable m_refsTable;
    private org.apache.xpath.objects.XNodeSet m_keyNodes;

    public int getDocKey()
    {
        int $i0;
        org.apache.xalan.transformer.KeyTable r0;

        r0 := @this: org.apache.xalan.transformer.KeyTable;

        $i0 = r0.<org.apache.xalan.transformer.KeyTable: int m_docKey>;

        return $i0;
    }

    org.apache.xalan.transformer.KeyIterator getKeyIterator()
    {
        org.apache.xalan.transformer.KeyIterator $r3;
        org.apache.xalan.transformer.KeyTable r0;
        org.apache.xpath.objects.XNodeSet $r1;
        org.apache.xml.dtm.DTMIterator $r2;

        r0 := @this: org.apache.xalan.transformer.KeyTable;

        $r1 = r0.<org.apache.xalan.transformer.KeyTable: org.apache.xpath.objects.XNodeSet m_keyNodes>;

        $r2 = virtualinvoke $r1.<org.apache.xpath.axes.NodeSequence: org.apache.xml.dtm.DTMIterator getContainedIter()>();

        $r3 = (org.apache.xalan.transformer.KeyIterator) $r2;

        return $r3;
    }

    public void <init>(int, org.apache.xml.utils.PrefixResolver, org.apache.xml.utils.QName, java.util.Vector, org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.KeyIterator $r2;
        org.apache.xml.utils.QName r3;
        org.apache.xalan.transformer.KeyTable r0;
        org.apache.xpath.objects.XNodeSet $r4, $r5, $r7;
        java.util.Vector r1;
        org.apache.xpath.XPathContext r6;
        int i0;
        org.apache.xml.utils.PrefixResolver r8;

        r0 := @this: org.apache.xalan.transformer.KeyTable;

        i0 := @parameter0: int;

        r8 := @parameter1: org.apache.xml.utils.PrefixResolver;

        r3 := @parameter2: org.apache.xml.utils.QName;

        r1 := @parameter3: java.util.Vector;

        r6 := @parameter4: org.apache.xpath.XPathContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.transformer.KeyTable: java.util.Hashtable m_refsTable> = null;

        r0.<org.apache.xalan.transformer.KeyTable: int m_docKey> = i0;

        r0.<org.apache.xalan.transformer.KeyTable: java.util.Vector m_keyDeclarations> = r1;

        $r2 = new org.apache.xalan.transformer.KeyIterator;

        specialinvoke $r2.<org.apache.xalan.transformer.KeyIterator: void <init>(org.apache.xml.utils.QName,java.util.Vector)>(r3, r1);

        $r4 = new org.apache.xpath.objects.XNodeSet;

        specialinvoke $r4.<org.apache.xpath.objects.XNodeSet: void <init>(org.apache.xml.dtm.DTMIterator)>($r2);

        r0.<org.apache.xalan.transformer.KeyTable: org.apache.xpath.objects.XNodeSet m_keyNodes> = $r4;

        $r5 = r0.<org.apache.xalan.transformer.KeyTable: org.apache.xpath.objects.XNodeSet m_keyNodes>;

        virtualinvoke $r5.<org.apache.xpath.axes.NodeSequence: void allowDetachToRelease(boolean)>(0);

        $r7 = r0.<org.apache.xalan.transformer.KeyTable: org.apache.xpath.objects.XNodeSet m_keyNodes>;

        virtualinvoke $r7.<org.apache.xpath.axes.NodeSequence: void setRoot(int,java.lang.Object)>(i0, r6);

        return;
    }

    public org.apache.xpath.objects.XNodeSet getNodeSetDTMByKey(org.apache.xml.utils.QName, org.apache.xml.utils.XMLString)
    {
        org.apache.xalan.transformer.KeyIterator r13;
        org.apache.xml.utils.QName r11;
        org.apache.xalan.transformer.KeyTable r0;
        org.apache.xpath.objects.XNodeSet $r4, r12;
        org.apache.xalan.transformer.KeyTable$1 $r7;
        org.apache.xml.dtm.DTMIterator $r5, $r9;
        org.apache.xml.utils.XMLString r2;
        java.lang.CloneNotSupportedException $r10;
        org.apache.xpath.XPathContext $r6;
        org.apache.xml.dtm.DTMManager $r8;
        java.lang.Object $r3;
        java.util.Hashtable $r1;

        r0 := @this: org.apache.xalan.transformer.KeyTable;

        r11 := @parameter0: org.apache.xml.utils.QName;

        r2 := @parameter1: org.apache.xml.utils.XMLString;

        $r1 = specialinvoke r0.<org.apache.xalan.transformer.KeyTable: java.util.Hashtable getRefsTable()>();

        $r3 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

        r12 = (org.apache.xpath.objects.XNodeSet) $r3;

     label1:
        if r12 == null goto label2;

        $r9 = virtualinvoke r12.<org.apache.xpath.axes.NodeSequence: org.apache.xml.dtm.DTMIterator cloneWithReset()>();

        r12 = (org.apache.xpath.objects.XNodeSet) $r9;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        r12 = null;

     label4:
        if r12 != null goto label5;

        $r4 = r0.<org.apache.xalan.transformer.KeyTable: org.apache.xpath.objects.XNodeSet m_keyNodes>;

        $r5 = virtualinvoke $r4.<org.apache.xpath.axes.NodeSequence: org.apache.xml.dtm.DTMIterator getContainedIter()>();

        r13 = (org.apache.xalan.transformer.KeyIterator) $r5;

        $r6 = virtualinvoke r13.<org.apache.xpath.axes.LocPathIterator: org.apache.xpath.XPathContext getXPathContext()>();

        $r7 = new org.apache.xalan.transformer.KeyTable$1;

        $r8 = virtualinvoke $r6.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager getDTMManager()>();

        specialinvoke $r7.<org.apache.xalan.transformer.KeyTable$1: void <init>(org.apache.xalan.transformer.KeyTable,org.apache.xml.dtm.DTMManager)>(r0, $r8);

        r12 = $r7;

        virtualinvoke $r7.<org.apache.xpath.axes.NodeSequence: void reset()>();

     label5:
        return r12;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public org.apache.xml.utils.QName getKeyTableName()
    {
        org.apache.xalan.transformer.KeyIterator $r1;
        org.apache.xml.utils.QName $r2;
        org.apache.xalan.transformer.KeyTable r0;

        r0 := @this: org.apache.xalan.transformer.KeyTable;

        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.KeyTable: org.apache.xalan.transformer.KeyIterator getKeyIterator()>();

        $r2 = virtualinvoke $r1.<org.apache.xalan.transformer.KeyIterator: org.apache.xml.utils.QName getName()>();

        return $r2;
    }

    private org.apache.xalan.templates.KeyDeclaration getKeyDeclaration()
    {
        org.apache.xml.utils.QName $r5, $r6;
        org.apache.xalan.transformer.KeyTable r0;
        org.apache.xalan.templates.KeyDeclaration r4;
        java.util.Vector $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.KeyTable;

        $r1 = r0.<org.apache.xalan.transformer.KeyTable: java.util.Vector m_keyDeclarations>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        i1 = 0;

        goto label3;

     label1:
        $r2 = r0.<org.apache.xalan.transformer.KeyTable: java.util.Vector m_keyDeclarations>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r4 = (org.apache.xalan.templates.KeyDeclaration) $r3;

        $r5 = virtualinvoke r4.<org.apache.xalan.templates.KeyDeclaration: org.apache.xml.utils.QName getName()>();

        $r6 = virtualinvoke r0.<org.apache.xalan.transformer.KeyTable: org.apache.xml.utils.QName getKeyTableName()>();

        $z0 = virtualinvoke $r5.<org.apache.xml.utils.QName: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        return r4;

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < $i0 goto label1;

        return null;
    }

    private java.util.Hashtable getRefsTable()
    {
        javax.xml.transform.TransformerException $r19;
        org.apache.xalan.templates.KeyDeclaration $r8;
        org.apache.xml.utils.XMLString $r17, $r18;
        org.apache.xpath.XPathContext $r7;
        int $i0, $i1, $i2, $i4, $i6;
        java.util.Hashtable $r1, $r2, $r21;
        org.apache.xml.utils.WrappedRuntimeException $r22;
        org.apache.xalan.transformer.KeyIterator r6;
        org.apache.xalan.transformer.KeyTable r0;
        org.apache.xpath.objects.XNodeSet $r4, $r9, $r10, $r14;
        org.apache.xpath.XPath $r11;
        org.apache.xml.dtm.DTMIterator $r5, $r15;
        org.apache.xml.dtm.DTM $r16;
        org.apache.xpath.objects.XObject $r13;
        org.apache.xml.utils.PrefixResolver $r12;

        r0 := @this: org.apache.xalan.transformer.KeyTable;

        $r1 = r0.<org.apache.xalan.transformer.KeyTable: java.util.Hashtable m_refsTable>;

        if $r1 != null goto label8;

        $r21 = new java.util.Hashtable;

        specialinvoke $r21.<java.util.Hashtable: void <init>(int)>(89);

        r0.<org.apache.xalan.transformer.KeyTable: java.util.Hashtable m_refsTable> = $r21;

        $r4 = r0.<org.apache.xalan.transformer.KeyTable: org.apache.xpath.objects.XNodeSet m_keyNodes>;

        $r5 = virtualinvoke $r4.<org.apache.xpath.axes.NodeSequence: org.apache.xml.dtm.DTMIterator getContainedIter()>();

        r6 = (org.apache.xalan.transformer.KeyIterator) $r5;

        $r7 = virtualinvoke r6.<org.apache.xpath.axes.LocPathIterator: org.apache.xpath.XPathContext getXPathContext()>();

        $r8 = specialinvoke r0.<org.apache.xalan.transformer.KeyTable: org.apache.xalan.templates.KeyDeclaration getKeyDeclaration()>();

        $r9 = r0.<org.apache.xalan.transformer.KeyTable: org.apache.xpath.objects.XNodeSet m_keyNodes>;

        virtualinvoke $r9.<org.apache.xpath.axes.NodeSequence: void reset()>();

        goto label7;

     label1:
        $r11 = virtualinvoke $r8.<org.apache.xalan.templates.KeyDeclaration: org.apache.xpath.XPath getUse()>();

        $r12 = virtualinvoke r6.<org.apache.xpath.axes.LocPathIterator: org.apache.xml.utils.PrefixResolver getPrefixResolver()>();

        $r13 = virtualinvoke $r11.<org.apache.xpath.XPath: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>($r7, $i0, $r12);

        $i1 = virtualinvoke $r13.<org.apache.xpath.objects.XObject: int getType()>();

        if $i1 == 4 goto label2;

        $r18 = virtualinvoke $r13.<org.apache.xpath.objects.XObject: org.apache.xml.utils.XMLString xstr()>();

        specialinvoke r0.<org.apache.xalan.transformer.KeyTable: void addValueInRefsTable(org.apache.xpath.XPathContext,org.apache.xml.utils.XMLString,int)>($r7, $r18, $i0);

        goto label5;

     label2:
        $r14 = (org.apache.xpath.objects.XNodeSet) $r13;

        $r15 = virtualinvoke $r14.<org.apache.xpath.objects.XNodeSet: org.apache.xml.dtm.DTMIterator iterRaw()>();

        goto label4;

     label3:
        $r16 = virtualinvoke $r7.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>($i2);

        $r17 = interfaceinvoke $r16.<org.apache.xml.dtm.DTM: org.apache.xml.utils.XMLString getStringValue(int)>($i2);

        specialinvoke r0.<org.apache.xalan.transformer.KeyTable: void addValueInRefsTable(org.apache.xpath.XPathContext,org.apache.xml.utils.XMLString,int)>($r7, $r17, $i0);

     label4:
        $i2 = interfaceinvoke $r15.<org.apache.xml.dtm.DTMIterator: int nextNode()>();

        $i4 = (int) -1;

        if $i4 != $i2 goto label3;

     label5:
        goto label7;

     label6:
        $r19 := @caughtexception;

        $r22 = new org.apache.xml.utils.WrappedRuntimeException;

        specialinvoke $r22.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>($r19);

        throw $r22;

     label7:
        $r10 = r0.<org.apache.xalan.transformer.KeyTable: org.apache.xpath.objects.XNodeSet m_keyNodes>;

        $i0 = virtualinvoke $r10.<org.apache.xpath.axes.NodeSequence: int nextNode()>();

        $i6 = (int) -1;

        if $i6 != $i0 goto label1;

     label8:
        $r2 = r0.<org.apache.xalan.transformer.KeyTable: java.util.Hashtable m_refsTable>;

        return $r2;

        catch javax.xml.transform.TransformerException from label1 to label5 with label6;
    }

    private void addValueInRefsTable(org.apache.xpath.XPathContext, org.apache.xml.utils.XMLString, int)
    {
        org.apache.xalan.transformer.KeyTable r0;
        org.apache.xpath.objects.XNodeSet $r5, r9;
        org.apache.xml.utils.XMLString r1;
        org.apache.xpath.NodeSetDTM $r4;
        org.apache.xpath.XPathContext r6;
        org.apache.xml.dtm.DTMManager $r7;
        int $i0, i1;
        java.lang.Object $r3;
        java.util.Hashtable $r2, $r8;

        r0 := @this: org.apache.xalan.transformer.KeyTable;

        r6 := @parameter0: org.apache.xpath.XPathContext;

        r1 := @parameter1: org.apache.xml.utils.XMLString;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.xalan.transformer.KeyTable: java.util.Hashtable m_refsTable>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r9 = (org.apache.xpath.objects.XNodeSet) $r3;

        if r9 != null goto label1;

        $r5 = new org.apache.xpath.objects.XNodeSet;

        $r7 = virtualinvoke r6.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager getDTMManager()>();

        specialinvoke $r5.<org.apache.xpath.objects.XNodeSet: void <init>(int,org.apache.xml.dtm.DTMManager)>(i1, $r7);

        virtualinvoke $r5.<org.apache.xpath.axes.NodeSequence: int nextNode()>();

        $r8 = r0.<org.apache.xalan.transformer.KeyTable: java.util.Hashtable m_refsTable>;

        virtualinvoke $r8.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

        goto label2;

     label1:
        $i0 = virtualinvoke r9.<org.apache.xpath.axes.NodeSequence: int getCurrentNode()>();

        if $i0 == i1 goto label2;

        $r4 = virtualinvoke r9.<org.apache.xpath.objects.XNodeSet: org.apache.xpath.NodeSetDTM mutableNodeset()>();

        virtualinvoke $r4.<org.apache.xpath.NodeSetDTM: void addNode(int)>(i1);

        virtualinvoke r9.<org.apache.xpath.axes.NodeSequence: int nextNode()>();

     label2:
        return;
    }
}
