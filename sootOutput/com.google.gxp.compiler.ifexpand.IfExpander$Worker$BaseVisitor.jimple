abstract class com.google.gxp.compiler.ifexpand.IfExpander$Worker$BaseVisitor extends com.google.gxp.compiler.parser.DefaultingParsedElementVisitor
{
    final com.google.gxp.compiler.ifexpand.IfExpander$Worker this$0;

    private void <init>(com.google.gxp.compiler.ifexpand.IfExpander$Worker)
    {
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$BaseVisitor r0;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker r1;

        r0 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$BaseVisitor;

        r1 := @parameter0: com.google.gxp.compiler.ifexpand.IfExpander$Worker;

        r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$BaseVisitor: com.google.gxp.compiler.ifexpand.IfExpander$Worker this$0> = r1;

        specialinvoke r0.<com.google.gxp.compiler.parser.DefaultingParsedElementVisitor: void <init>()>();

        return;
    }

    protected java.util.List processIfChildren(com.google.gxp.compiler.parser.GxpNamespace$GxpElement)
    {
        java.util.Iterator $r5;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor $r0;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$BaseVisitor r1;
        java.util.List $r4, $r6;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker $r3;
        com.google.gxp.compiler.parser.ParsedElement r8;
        java.lang.Object $r7;
        com.google.gxp.compiler.parser.GxpNamespace$GxpElement r2;
        boolean $z0;

        r1 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$BaseVisitor;

        r2 := @parameter0: com.google.gxp.compiler.parser.GxpNamespace$GxpElement;

        $r0 = new com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor;

        $r3 = r1.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$BaseVisitor: com.google.gxp.compiler.ifexpand.IfExpander$Worker this$0>;

        specialinvoke $r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: void <init>(com.google.gxp.compiler.ifexpand.IfExpander$Worker,com.google.gxp.compiler.parser.GxpNamespace$GxpElement)>($r3, r2);

        $r4 = virtualinvoke r2.<com.google.gxp.compiler.parser.GxpNamespace$GxpElement: java.util.List getChildren()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.google.gxp.compiler.parser.ParsedElement) $r7;

        virtualinvoke r8.<com.google.gxp.compiler.parser.ParsedElement: java.lang.Object acceptVisitor(com.google.gxp.compiler.parser.ParsedElementVisitor)>($r0);

        goto label1;

     label2:
        $r6 = virtualinvoke $r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$IfChildVisitor: java.util.List get()>();

        return $r6;
    }

    void <init>(com.google.gxp.compiler.ifexpand.IfExpander$Worker, com.google.gxp.compiler.ifexpand.IfExpander$1)
    {
        com.google.gxp.compiler.ifexpand.IfExpander$Worker$BaseVisitor r0;
        com.google.gxp.compiler.ifexpand.IfExpander$1 r2;
        com.google.gxp.compiler.ifexpand.IfExpander$Worker r1;

        r0 := @this: com.google.gxp.compiler.ifexpand.IfExpander$Worker$BaseVisitor;

        r1 := @parameter0: com.google.gxp.compiler.ifexpand.IfExpander$Worker;

        r2 := @parameter1: com.google.gxp.compiler.ifexpand.IfExpander$1;

        specialinvoke r0.<com.google.gxp.compiler.ifexpand.IfExpander$Worker$BaseVisitor: void <init>(com.google.gxp.compiler.ifexpand.IfExpander$Worker)>(r1);

        return;
    }
}
