public class org.apache.lucene.queryparser.xml.builders.TermsFilterBuilder extends java.lang.Object implements org.apache.lucene.queryparser.xml.FilterBuilder
{
    private final org.apache.lucene.analysis.Analyzer analyzer;

    public void <init>(org.apache.lucene.analysis.Analyzer)
    {
        org.apache.lucene.queryparser.xml.builders.TermsFilterBuilder r0;
        org.apache.lucene.analysis.Analyzer r1;

        r0 := @this: org.apache.lucene.queryparser.xml.builders.TermsFilterBuilder;

        r1 := @parameter0: org.apache.lucene.analysis.Analyzer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.queryparser.xml.builders.TermsFilterBuilder: org.apache.lucene.analysis.Analyzer analyzer> = r1;

        return;
    }

    public org.apache.lucene.search.Filter getFilter(org.w3c.dom.Element) throws org.apache.lucene.queryparser.xml.ParserException
    {
        java.util.ArrayList $r0;
        org.apache.lucene.queries.TermsFilter $r11;
        java.lang.String $r2, $r3, $r18;
        org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute r9;
        boolean $z0;
        org.apache.lucene.analysis.TokenStream $r7;
        org.apache.lucene.util.BytesRef $r10, $r12;
        org.apache.lucene.analysis.Analyzer $r6;
        java.io.IOException $r13;
        java.lang.RuntimeException $r14;
        org.w3c.dom.Element r1;
        java.io.StringReader $r5;
        java.lang.StringBuilder $r15, $r16, $r17;
        org.apache.lucene.util.Attribute $r8;
        org.apache.lucene.queryparser.xml.builders.TermsFilterBuilder r4;

        r4 := @this: org.apache.lucene.queryparser.xml.builders.TermsFilterBuilder;

        r1 := @parameter0: org.w3c.dom.Element;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: java.lang.String getNonBlankTextOrFail(org.w3c.dom.Element)>(r1);

        $r3 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: java.lang.String getAttributeWithInheritanceOrFail(org.w3c.dom.Element,java.lang.String)>(r1, "fieldName");

     label1:
        $r6 = r4.<org.apache.lucene.queryparser.xml.builders.TermsFilterBuilder: org.apache.lucene.analysis.Analyzer analyzer>;

        $r5 = new java.io.StringReader;

        specialinvoke $r5.<java.io.StringReader: void <init>(java.lang.String)>($r2);

        $r7 = virtualinvoke $r6.<org.apache.lucene.analysis.Analyzer: org.apache.lucene.analysis.TokenStream tokenStream(java.lang.String,java.io.Reader)>($r3, $r5);

        $r8 = virtualinvoke $r7.<org.apache.lucene.analysis.TokenStream: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/TermToBytesRefAttribute;");

        r9 = (org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute) $r8;

        $r10 = interfaceinvoke r9.<org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute: org.apache.lucene.util.BytesRef getBytesRef()>();

        virtualinvoke $r7.<org.apache.lucene.analysis.TokenStream: void reset()>();

     label2:
        $z0 = virtualinvoke $r7.<org.apache.lucene.analysis.TokenStream: boolean incrementToken()>();

        if $z0 == 0 goto label3;

        interfaceinvoke r9.<org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute: int fillBytesRef()>();

        $r12 = staticinvoke <org.apache.lucene.util.BytesRef: org.apache.lucene.util.BytesRef deepCopyOf(org.apache.lucene.util.BytesRef)>($r10);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label2;

     label3:
        virtualinvoke $r7.<org.apache.lucene.analysis.TokenStream: void end()>();

        virtualinvoke $r7.<org.apache.lucene.analysis.TokenStream: void close()>();

     label4:
        goto label6;

     label5:
        $r13 := @caughtexception;

        $r14 = new java.lang.RuntimeException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error constructing terms from index:");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r18);

        throw $r14;

     label6:
        $r11 = new org.apache.lucene.queries.TermsFilter;

        specialinvoke $r11.<org.apache.lucene.queries.TermsFilter: void <init>(java.lang.String,java.util.List)>($r3, $r0);

        return $r11;

        catch java.io.IOException from label1 to label4 with label5;
    }
}
