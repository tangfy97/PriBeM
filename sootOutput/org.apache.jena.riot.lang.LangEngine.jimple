public class org.apache.jena.riot.lang.LangEngine extends java.lang.Object
{
    protected org.apache.jena.riot.system.ParserProfile profile;
    protected final org.apache.jena.riot.tokens.Tokenizer tokens;
    private final org.apache.jena.atlas.iterator.PeekIterator peekIter;
    private org.apache.jena.riot.tokens.Token tokenEOF;
    protected long currLine;
    protected long currCol;

    protected void <init>(org.apache.jena.riot.tokens.Tokenizer, org.apache.jena.riot.system.ParserProfile)
    {
        org.apache.jena.riot.lang.LangEngine r0;
        org.apache.jena.riot.tokens.Tokenizer r1;
        org.apache.jena.riot.system.ParserProfile r2;
        org.apache.jena.atlas.iterator.PeekIterator $r3;

        r0 := @this: org.apache.jena.riot.lang.LangEngine;

        r1 := @parameter0: org.apache.jena.riot.tokens.Tokenizer;

        r2 := @parameter1: org.apache.jena.riot.system.ParserProfile;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jena.riot.lang.LangEngine: org.apache.jena.riot.tokens.Token tokenEOF> = null;

        r0.<org.apache.jena.riot.lang.LangEngine: long currLine> = -1L;

        r0.<org.apache.jena.riot.lang.LangEngine: long currCol> = -1L;

        r0.<org.apache.jena.riot.lang.LangEngine: org.apache.jena.riot.tokens.Tokenizer tokens> = r1;

        r0.<org.apache.jena.riot.lang.LangEngine: org.apache.jena.riot.system.ParserProfile profile> = r2;

        $r3 = new org.apache.jena.atlas.iterator.PeekIterator;

        specialinvoke $r3.<org.apache.jena.atlas.iterator.PeekIterator: void <init>(java.util.Iterator)>(r1);

        r0.<org.apache.jena.riot.lang.LangEngine: org.apache.jena.atlas.iterator.PeekIterator peekIter> = $r3;

        return;
    }

    protected final org.apache.jena.riot.tokens.Token peekToken()
    {
        org.apache.jena.riot.lang.LangEngine r0;
        org.apache.jena.atlas.iterator.PeekIterator $r1;
        java.lang.Object $r2;
        org.apache.jena.riot.tokens.Token $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.lang.LangEngine;

        $z0 = virtualinvoke r0.<org.apache.jena.riot.lang.LangEngine: boolean eof()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.jena.riot.lang.LangEngine: org.apache.jena.riot.tokens.Token tokenEOF>;

        return $r4;

     label1:
        $r1 = r0.<org.apache.jena.riot.lang.LangEngine: org.apache.jena.atlas.iterator.PeekIterator peekIter>;

        $r2 = virtualinvoke $r1.<org.apache.jena.atlas.iterator.PeekIterator: java.lang.Object peek()>();

        $r3 = (org.apache.jena.riot.tokens.Token) $r2;

        return $r3;
    }

    protected final boolean eof()
    {
        org.apache.jena.riot.lang.LangEngine r0;
        long $l0, $l1;
        org.apache.jena.riot.tokens.Token $r1, $r2, $r6;
        org.apache.jena.riot.tokens.TokenType $r5;
        org.apache.jena.riot.tokens.Tokenizer $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.lang.LangEngine;

        $r1 = r0.<org.apache.jena.riot.lang.LangEngine: org.apache.jena.riot.tokens.Token tokenEOF>;

        if $r1 == null goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r0.<org.apache.jena.riot.lang.LangEngine: boolean moreTokens()>();

        if $z0 != 0 goto label2;

        $r2 = new org.apache.jena.riot.tokens.Token;

        $r3 = r0.<org.apache.jena.riot.lang.LangEngine: org.apache.jena.riot.tokens.Tokenizer tokens>;

        $l0 = interfaceinvoke $r3.<org.apache.jena.riot.tokens.Tokenizer: long getLine()>();

        $r4 = r0.<org.apache.jena.riot.lang.LangEngine: org.apache.jena.riot.tokens.Tokenizer tokens>;

        $l1 = interfaceinvoke $r4.<org.apache.jena.riot.tokens.Tokenizer: long getColumn()>();

        specialinvoke $r2.<org.apache.jena.riot.tokens.Token: void <init>(long,long)>($l0, $l1);

        r0.<org.apache.jena.riot.lang.LangEngine: org.apache.jena.riot.tokens.Token tokenEOF> = $r2;

        $r6 = r0.<org.apache.jena.riot.lang.LangEngine: org.apache.jena.riot.tokens.Token tokenEOF>;

        $r5 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType EOF>;

        virtualinvoke $r6.<org.apache.jena.riot.tokens.Token: org.apache.jena.riot.tokens.Token setType(org.apache.jena.riot.tokens.TokenType)>($r5);

        return 1;

     label2:
        return 0;
    }

    protected final boolean moreTokens()
    {
        org.apache.jena.riot.lang.LangEngine r0;
        org.apache.jena.atlas.iterator.PeekIterator $r1;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.lang.LangEngine;

        $r1 = r0.<org.apache.jena.riot.lang.LangEngine: org.apache.jena.atlas.iterator.PeekIterator peekIter>;

        $z0 = virtualinvoke $r1.<org.apache.jena.atlas.iterator.PeekIterator: boolean hasNext()>();

        return $z0;
    }

    protected final boolean lookingAt(org.apache.jena.riot.tokens.TokenType)
    {
        org.apache.jena.riot.lang.LangEngine r0;
        org.apache.jena.riot.tokens.Token $r3, $r4;
        org.apache.jena.riot.tokens.TokenType r1, $r2, $r5;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.jena.riot.lang.LangEngine;

        r1 := @parameter0: org.apache.jena.riot.tokens.TokenType;

        $z0 = virtualinvoke r0.<org.apache.jena.riot.lang.LangEngine: boolean eof()>();

        if $z0 == 0 goto label3;

        $r5 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType EOF>;

        if r1 != $r5 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;

     label3:
        $r2 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType NODE>;

        if r1 != $r2 goto label4;

        $r4 = virtualinvoke r0.<org.apache.jena.riot.lang.LangEngine: org.apache.jena.riot.tokens.Token peekToken()>();

        $z2 = virtualinvoke $r4.<org.apache.jena.riot.tokens.Token: boolean isNode()>();

        return $z2;

     label4:
        $r3 = virtualinvoke r0.<org.apache.jena.riot.lang.LangEngine: org.apache.jena.riot.tokens.Token peekToken()>();

        $z1 = virtualinvoke $r3.<org.apache.jena.riot.tokens.Token: boolean hasType(org.apache.jena.riot.tokens.TokenType)>(r1);

        return $z1;
    }

    protected final org.apache.jena.riot.tokens.Token nextToken()
    {
        org.apache.jena.riot.lang.LangEngine r0;
        long $l0, $l1;
        org.apache.jena.riot.tokens.Token $r3, r8;
        org.apache.jena.atlas.AtlasException $r4;
        org.apache.jena.atlas.iterator.PeekIterator $r1;
        java.lang.Object $r2;
        java.lang.String $r6;
        org.apache.jena.riot.RiotParseException $r5, $r7;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.lang.LangEngine;

        $z0 = virtualinvoke r0.<org.apache.jena.riot.lang.LangEngine: boolean eof()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.jena.riot.lang.LangEngine: org.apache.jena.riot.tokens.Token tokenEOF>;

        return $r3;

     label1:
        $r1 = r0.<org.apache.jena.riot.lang.LangEngine: org.apache.jena.atlas.iterator.PeekIterator peekIter>;

        $r2 = virtualinvoke $r1.<org.apache.jena.atlas.iterator.PeekIterator: java.lang.Object next()>();

        r8 = (org.apache.jena.riot.tokens.Token) $r2;

        $l0 = virtualinvoke r8.<org.apache.jena.riot.tokens.Token: long getLine()>();

        r0.<org.apache.jena.riot.lang.LangEngine: long currLine> = $l0;

        $l1 = virtualinvoke r8.<org.apache.jena.riot.tokens.Token: long getColumn()>();

        r0.<org.apache.jena.riot.lang.LangEngine: long currCol> = $l1;

     label2:
        return r8;

     label3:
        $r7 := @caughtexception;

        virtualinvoke r0.<org.apache.jena.riot.lang.LangEngine: void raiseException(org.apache.jena.riot.RiotParseException)>($r7);

        throw $r7;

     label4:
        $r4 := @caughtexception;

        $r5 = new org.apache.jena.riot.RiotParseException;

        $r6 = virtualinvoke $r4.<org.apache.jena.atlas.AtlasException: java.lang.String getMessage()>();

        specialinvoke $r5.<org.apache.jena.riot.RiotParseException: void <init>(java.lang.String,long,long)>($r6, -1L, -1L);

        virtualinvoke r0.<org.apache.jena.riot.lang.LangEngine: void raiseException(org.apache.jena.riot.RiotParseException)>($r5);

        throw $r5;

        catch org.apache.jena.riot.RiotParseException from label1 to label2 with label3;
        catch org.apache.jena.atlas.AtlasException from label1 to label2 with label4;
    }

    protected final com.hp.hpl.jena.graph.Node scopedBNode(com.hp.hpl.jena.graph.Node, java.lang.String)
    {
        org.apache.jena.riot.lang.LabelToNode $r2;
        org.apache.jena.riot.lang.LangEngine r0;
        org.apache.jena.riot.system.ParserProfile $r1;
        java.lang.Object $r5;
        com.hp.hpl.jena.graph.Node r3, $r6;
        java.lang.String r4;

        r0 := @this: org.apache.jena.riot.lang.LangEngine;

        r3 := @parameter0: com.hp.hpl.jena.graph.Node;

        r4 := @parameter1: java.lang.String;

        $r1 = r0.<org.apache.jena.riot.lang.LangEngine: org.apache.jena.riot.system.ParserProfile profile>;

        $r2 = interfaceinvoke $r1.<org.apache.jena.riot.system.ParserProfile: org.apache.jena.riot.lang.LabelToNode getLabelToNode()>();

        $r5 = virtualinvoke $r2.<org.apache.jena.riot.lang.LabelToNode: java.lang.Object get(java.lang.Object,java.lang.Object)>(r3, r4);

        $r6 = (com.hp.hpl.jena.graph.Node) $r5;

        return $r6;
    }

    protected final void expectOrEOF(java.lang.String, org.apache.jena.riot.tokens.TokenType)
    {
        org.apache.jena.riot.tokens.TokenType r2;
        org.apache.jena.riot.lang.LangEngine r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.lang.LangEngine;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.jena.riot.tokens.TokenType;

        $z0 = virtualinvoke r0.<org.apache.jena.riot.lang.LangEngine: boolean eof()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<org.apache.jena.riot.lang.LangEngine: void expect(java.lang.String,org.apache.jena.riot.tokens.TokenType)>(r1, r2);

        return;
    }

    protected final void skipIf(org.apache.jena.riot.tokens.TokenType)
    {
        org.apache.jena.riot.tokens.TokenType r1;
        org.apache.jena.riot.lang.LangEngine r0;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.lang.LangEngine;

        r1 := @parameter0: org.apache.jena.riot.tokens.TokenType;

        $z0 = virtualinvoke r0.<org.apache.jena.riot.lang.LangEngine: boolean lookingAt(org.apache.jena.riot.tokens.TokenType)>(r1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.jena.riot.lang.LangEngine: org.apache.jena.riot.tokens.Token nextToken()>();

     label1:
        return;
    }

    protected final void expect(java.lang.String, org.apache.jena.riot.tokens.TokenType)
    {
        org.apache.jena.riot.tokens.TokenType r1;
        java.lang.Object[] $r4;
        org.apache.jena.riot.lang.LangEngine r0;
        java.lang.String r3;
        org.apache.jena.riot.tokens.Token $r2;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.lang.LangEngine;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.jena.riot.tokens.TokenType;

        $z0 = virtualinvoke r0.<org.apache.jena.riot.lang.LangEngine: boolean lookingAt(org.apache.jena.riot.tokens.TokenType)>(r1);

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke r0.<org.apache.jena.riot.lang.LangEngine: org.apache.jena.riot.tokens.Token peekToken()>();

        $r4 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<org.apache.jena.riot.lang.LangEngine: void exception(org.apache.jena.riot.tokens.Token,java.lang.String,java.lang.Object[])>($r2, r3, $r4);

     label1:
        virtualinvoke r0.<org.apache.jena.riot.lang.LangEngine: org.apache.jena.riot.tokens.Token nextToken()>();

        return;
    }

    protected final transient void exception(org.apache.jena.riot.tokens.Token, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r3;
        org.apache.jena.riot.lang.LangEngine r1;
        long $l0, $l1;
        org.apache.jena.riot.tokens.Token r0;
        java.lang.String r2, $r4, $r5;

        r1 := @this: org.apache.jena.riot.lang.LangEngine;

        r0 := @parameter0: org.apache.jena.riot.tokens.Token;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        if r0 == null goto label1;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, r3);

        $l0 = virtualinvoke r0.<org.apache.jena.riot.tokens.Token: long getLine()>();

        $l1 = virtualinvoke r0.<org.apache.jena.riot.tokens.Token: long getColumn()>();

        virtualinvoke r1.<org.apache.jena.riot.lang.LangEngine: void exceptionDirect(java.lang.String,long,long)>($r5, $l0, $l1);

        goto label2;

     label1:
        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, r3);

        virtualinvoke r1.<org.apache.jena.riot.lang.LangEngine: void exceptionDirect(java.lang.String,long,long)>($r4, -1L, -1L);

     label2:
        return;
    }

    protected final void exceptionDirect(java.lang.String, long, long)
    {
        org.apache.jena.riot.lang.LangEngine r0;
        long l0, l1;
        java.lang.String r2;
        org.apache.jena.riot.RiotParseException $r1;

        r0 := @this: org.apache.jena.riot.lang.LangEngine;

        r2 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r1 = new org.apache.jena.riot.RiotParseException;

        specialinvoke $r1.<org.apache.jena.riot.RiotParseException: void <init>(java.lang.String,long,long)>(r2, l0, l1);

        virtualinvoke r0.<org.apache.jena.riot.lang.LangEngine: void raiseException(org.apache.jena.riot.RiotParseException)>($r1);

        return;
    }

    protected final void raiseException(org.apache.jena.riot.RiotParseException)
    {
        org.apache.jena.riot.system.ErrorHandler $r2;
        org.apache.jena.riot.lang.LangEngine r0;
        org.apache.jena.riot.system.ParserProfile $r1;
        long $l0, $l1;
        java.lang.String $r4;
        org.apache.jena.riot.RiotParseException r3;

        r0 := @this: org.apache.jena.riot.lang.LangEngine;

        r3 := @parameter0: org.apache.jena.riot.RiotParseException;

        $r1 = r0.<org.apache.jena.riot.lang.LangEngine: org.apache.jena.riot.system.ParserProfile profile>;

        $r2 = interfaceinvoke $r1.<org.apache.jena.riot.system.ParserProfile: org.apache.jena.riot.system.ErrorHandler getHandler()>();

        if $r2 == null goto label1;

        $r4 = virtualinvoke r3.<org.apache.jena.riot.RiotParseException: java.lang.String getOriginalMessage()>();

        $l0 = virtualinvoke r3.<org.apache.jena.riot.RiotParseException: long getLine()>();

        $l1 = virtualinvoke r3.<org.apache.jena.riot.RiotParseException: long getCol()>();

        interfaceinvoke $r2.<org.apache.jena.riot.system.ErrorHandler: void fatal(java.lang.String,long,long)>($r4, $l0, $l1);

     label1:
        throw r3;
    }
}
