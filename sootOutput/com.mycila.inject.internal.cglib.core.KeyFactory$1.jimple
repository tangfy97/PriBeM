final class com.mycila.inject.internal.cglib.core.KeyFactory$1 extends java.lang.Object implements com.mycila.inject.internal.cglib.core.Customizer
{

    void <init>()
    {
        com.mycila.inject.internal.cglib.core.KeyFactory$1 r0;

        r0 := @this: com.mycila.inject.internal.cglib.core.KeyFactory$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void customize(com.mycila.inject.internal.cglib.core.CodeEmitter, com.mycila.inject.internal.asm.Type)
    {
        com.mycila.inject.internal.cglib.core.KeyFactory$1 r5;
        com.mycila.inject.internal.cglib.core.Signature $r4;
        com.mycila.inject.internal.asm.Type r0, $r1, $r3;
        com.mycila.inject.internal.cglib.core.CodeEmitter r2;
        boolean $z0;

        r5 := @this: com.mycila.inject.internal.cglib.core.KeyFactory$1;

        r2 := @parameter0: com.mycila.inject.internal.cglib.core.CodeEmitter;

        r0 := @parameter1: com.mycila.inject.internal.asm.Type;

        $r1 = <com.mycila.inject.internal.cglib.core.Constants: com.mycila.inject.internal.asm.Type TYPE_CLASS>;

        $z0 = virtualinvoke r0.<com.mycila.inject.internal.asm.Type: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r3 = <com.mycila.inject.internal.cglib.core.Constants: com.mycila.inject.internal.asm.Type TYPE_CLASS>;

        $r4 = staticinvoke <com.mycila.inject.internal.cglib.core.KeyFactory: com.mycila.inject.internal.cglib.core.Signature access$000()>();

        virtualinvoke r2.<com.mycila.inject.internal.cglib.core.CodeEmitter: void invoke_virtual(com.mycila.inject.internal.asm.Type,com.mycila.inject.internal.cglib.core.Signature)>($r3, $r4);

     label1:
        return;
    }
}
