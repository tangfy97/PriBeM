public class com.googlecode.mp4parser.authoring.SampleImpl extends java.lang.Object implements com.googlecode.mp4parser.authoring.Sample
{
    private final long offset;
    private final long size;
    private java.nio.ByteBuffer[] data;
    private final com.coremedia.iso.boxes.Container parent;

    public void <init>(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer[] $r2;
        com.googlecode.mp4parser.authoring.SampleImpl r0;
        int $i0;
        long $l1;
        java.nio.ByteBuffer r1;

        r0 := @this: com.googlecode.mp4parser.authoring.SampleImpl;

        r1 := @parameter0: java.nio.ByteBuffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.SampleImpl: long offset> = -1L;

        $i0 = virtualinvoke r1.<java.nio.ByteBuffer: int limit()>();

        $l1 = (long) $i0;

        r0.<com.googlecode.mp4parser.authoring.SampleImpl: long size> = $l1;

        $r2 = newarray (java.nio.ByteBuffer)[1];

        $r2[0] = r1;

        r0.<com.googlecode.mp4parser.authoring.SampleImpl: java.nio.ByteBuffer[] data> = $r2;

        r0.<com.googlecode.mp4parser.authoring.SampleImpl: com.coremedia.iso.boxes.Container parent> = null;

        return;
    }

    public void <init>(java.nio.ByteBuffer[])
    {
        java.nio.ByteBuffer[] r1;
        long $l2;
        java.nio.ByteBuffer r2;
        com.googlecode.mp4parser.authoring.SampleImpl r0;
        int i0, $i1, i3, i4;

        r0 := @this: com.googlecode.mp4parser.authoring.SampleImpl;

        r1 := @parameter0: java.nio.ByteBuffer[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.SampleImpl: long offset> = -1L;

        i3 = 0;

        i0 = lengthof r1;

        i4 = 0;

        goto label2;

     label1:
        r2 = r1[i4];

        $i1 = virtualinvoke r2.<java.nio.ByteBuffer: int remaining()>();

        i3 = i3 + $i1;

        i4 = i4 + 1;

     label2:
        if i4 < i0 goto label1;

        $l2 = (long) i3;

        r0.<com.googlecode.mp4parser.authoring.SampleImpl: long size> = $l2;

        r0.<com.googlecode.mp4parser.authoring.SampleImpl: java.nio.ByteBuffer[] data> = r1;

        r0.<com.googlecode.mp4parser.authoring.SampleImpl: com.coremedia.iso.boxes.Container parent> = null;

        return;
    }

    public void <init>(long, long, java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer[] $r1;
        com.googlecode.mp4parser.authoring.SampleImpl r0;
        long l0, l1;
        java.nio.ByteBuffer r2;

        r0 := @this: com.googlecode.mp4parser.authoring.SampleImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r2 := @parameter2: java.nio.ByteBuffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.SampleImpl: long offset> = l0;

        r0.<com.googlecode.mp4parser.authoring.SampleImpl: long size> = l1;

        $r1 = newarray (java.nio.ByteBuffer)[1];

        $r1[0] = r2;

        r0.<com.googlecode.mp4parser.authoring.SampleImpl: java.nio.ByteBuffer[] data> = $r1;

        r0.<com.googlecode.mp4parser.authoring.SampleImpl: com.coremedia.iso.boxes.Container parent> = null;

        return;
    }

    public void <init>(long, long, com.coremedia.iso.boxes.Container)
    {
        com.googlecode.mp4parser.authoring.SampleImpl r0;
        long l0, l1;
        com.coremedia.iso.boxes.Container r1;

        r0 := @this: com.googlecode.mp4parser.authoring.SampleImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: com.coremedia.iso.boxes.Container;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.SampleImpl: long offset> = l0;

        r0.<com.googlecode.mp4parser.authoring.SampleImpl: long size> = l1;

        r0.<com.googlecode.mp4parser.authoring.SampleImpl: java.nio.ByteBuffer[] data> = null;

        r0.<com.googlecode.mp4parser.authoring.SampleImpl: com.coremedia.iso.boxes.Container parent> = r1;

        return;
    }

    protected void ensureData()
    {
        long $l0, $l1;
        java.nio.ByteBuffer $r5;
        com.googlecode.mp4parser.authoring.SampleImpl r0;
        java.lang.String $r9, $r14;
        java.nio.ByteBuffer[] $r1, $r3;
        java.io.IOException $r10;
        java.lang.RuntimeException $r6, $r11;
        com.coremedia.iso.boxes.Container $r2, $r4;
        java.lang.StringBuilder $r7, $r8, $r12, $r13;

        r0 := @this: com.googlecode.mp4parser.authoring.SampleImpl;

        $r1 = r0.<com.googlecode.mp4parser.authoring.SampleImpl: java.nio.ByteBuffer[] data>;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = r0.<com.googlecode.mp4parser.authoring.SampleImpl: com.coremedia.iso.boxes.Container parent>;

        if $r2 != null goto label2;

        $r6 = new java.lang.RuntimeException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Missing parent container, can\'t read sample ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r6;

     label2:
        $r3 = newarray (java.nio.ByteBuffer)[1];

        $r4 = r0.<com.googlecode.mp4parser.authoring.SampleImpl: com.coremedia.iso.boxes.Container parent>;

        $l1 = r0.<com.googlecode.mp4parser.authoring.SampleImpl: long offset>;

        $l0 = r0.<com.googlecode.mp4parser.authoring.SampleImpl: long size>;

        $r5 = interfaceinvoke $r4.<com.coremedia.iso.boxes.Container: java.nio.ByteBuffer getByteBuffer(long,long)>($l1, $l0);

        $r3[0] = $r5;

        r0.<com.googlecode.mp4parser.authoring.SampleImpl: java.nio.ByteBuffer[] data> = $r3;

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        $r11 = new java.lang.RuntimeException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("couldn\'t read sample ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r14, $r10);

        throw $r11;

     label5:
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public void writeTo(java.nio.channels.WritableByteChannel) throws java.io.IOException
    {
        java.nio.ByteBuffer[] $r1;
        com.googlecode.mp4parser.authoring.SampleImpl r0;
        int i0, i1;
        java.nio.channels.WritableByteChannel r3;
        java.nio.ByteBuffer r2, $r4;

        r0 := @this: com.googlecode.mp4parser.authoring.SampleImpl;

        r3 := @parameter0: java.nio.channels.WritableByteChannel;

        virtualinvoke r0.<com.googlecode.mp4parser.authoring.SampleImpl: void ensureData()>();

        $r1 = r0.<com.googlecode.mp4parser.authoring.SampleImpl: java.nio.ByteBuffer[] data>;

        i0 = lengthof $r1;

        i1 = 0;

        goto label2;

     label1:
        r2 = $r1[i1];

        $r4 = virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>();

        interfaceinvoke r3.<java.nio.channels.WritableByteChannel: int write(java.nio.ByteBuffer)>($r4);

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

        return;
    }

    public long getSize()
    {
        com.googlecode.mp4parser.authoring.SampleImpl r0;
        long $l0;

        r0 := @this: com.googlecode.mp4parser.authoring.SampleImpl;

        $l0 = r0.<com.googlecode.mp4parser.authoring.SampleImpl: long size>;

        return $l0;
    }

    public java.nio.ByteBuffer asByteBuffer()
    {
        byte[] r1;
        java.nio.ByteBuffer[] $r3;
        long $l0;
        java.nio.ByteBuffer $r2, r4, $r5;
        com.googlecode.mp4parser.authoring.SampleImpl r0;
        int $i1, i2, i3;

        r0 := @this: com.googlecode.mp4parser.authoring.SampleImpl;

        virtualinvoke r0.<com.googlecode.mp4parser.authoring.SampleImpl: void ensureData()>();

        $l0 = r0.<com.googlecode.mp4parser.authoring.SampleImpl: long size>;

        $i1 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l0);

        r1 = newarray (byte)[$i1];

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r1);

        $r3 = r0.<com.googlecode.mp4parser.authoring.SampleImpl: java.nio.ByteBuffer[] data>;

        i2 = lengthof $r3;

        i3 = 0;

        goto label2;

     label1:
        r4 = $r3[i3];

        $r5 = virtualinvoke r4.<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>();

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>($r5);

        i3 = i3 + 1;

     label2:
        if i3 < i2 goto label1;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        com.googlecode.mp4parser.authoring.SampleImpl r2;
        java.lang.StringBuilder $r0, $r1, $r3;
        long $l0, $l1;
        java.lang.String $r4;

        r2 := @this: com.googlecode.mp4parser.authoring.SampleImpl;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SampleImpl");

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{offset=");

        $l0 = r2.<com.googlecode.mp4parser.authoring.SampleImpl: long offset>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{size=");

        $l1 = r2.<com.googlecode.mp4parser.authoring.SampleImpl: long size>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
