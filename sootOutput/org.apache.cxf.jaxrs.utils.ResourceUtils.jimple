public final class org.apache.cxf.jaxrs.utils.ResourceUtils extends java.lang.Object
{
    private static final java.util.logging.Logger LOG;
    private static final java.util.ResourceBundle BUNDLE;
    private static final java.lang.String CLASSPATH_PREFIX;
    private static final java.util.Set SERVER_PROVIDER_CLASS_NAMES;

    private void <init>()
    {
        org.apache.cxf.jaxrs.utils.ResourceUtils r0;

        r0 := @this: org.apache.cxf.jaxrs.utils.ResourceUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.reflect.Method findPostConstructMethod(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.reflect.Method $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: java.lang.reflect.Method findPostConstructMethod(java.lang.Class,java.lang.String)>(r0, null);

        return $r1;
    }

    public static java.lang.reflect.Method findPostConstructMethod(java.lang.Class, java.lang.String)
    {
        java.lang.reflect.Method[] $r1;
        int i0, i1, i2, i3;
        java.lang.String r3, $r9;
        java.lang.reflect.Method $r4, $r7, r10;
        boolean $z0;
        java.lang.Class[] $r5;
        java.lang.'annotation'.Annotation $r8;
        java.lang.Class r0, $r2, r6;

        r0 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.String;

        if class "Ljava/lang/Object;" == r0 goto label01;

        if null != r0 goto label02;

     label01:
        return null;

     label02:
        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        i0 = lengthof $r1;

        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

        r10 = $r1[i1];

        if r3 == null goto label04;

        $r9 = virtualinvoke r10.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label05;

        return r10;

     label04:
        $r8 = virtualinvoke r10.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljavax/annotation/PostConstruct;");

        if $r8 == null goto label05;

        return r10;

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: java.lang.reflect.Method findPostConstructMethod(java.lang.Class,java.lang.String)>($r2, r3);

        if $r4 == null goto label07;

        return $r4;

     label07:
        $r5 = virtualinvoke r0.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        i2 = lengthof $r5;

        i3 = 0;

     label08:
        if i3 >= i2 goto label10;

        r6 = $r5[i3];

        $r7 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: java.lang.reflect.Method findPostConstructMethod(java.lang.Class,java.lang.String)>(r6, r3);

        if $r7 == null goto label09;

        return $r7;

     label09:
        i3 = i3 + 1;

        goto label08;

     label10:
        return null;
    }

    public static java.lang.reflect.Method findPreDestroyMethod(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.reflect.Method $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: java.lang.reflect.Method findPreDestroyMethod(java.lang.Class,java.lang.String)>(r0, null);

        return $r1;
    }

    public static java.lang.reflect.Method findPreDestroyMethod(java.lang.Class, java.lang.String)
    {
        java.lang.reflect.Method[] $r1;
        int i0, i1, i2, i3;
        java.lang.String r3, $r9;
        java.lang.reflect.Method $r4, $r7, r10;
        boolean $z0;
        java.lang.Class[] $r5;
        java.lang.'annotation'.Annotation $r8;
        java.lang.Class r0, $r2, r6;

        r0 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.String;

        if class "Ljava/lang/Object;" == r0 goto label01;

        if null != r0 goto label02;

     label01:
        return null;

     label02:
        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        i0 = lengthof $r1;

        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

        r10 = $r1[i1];

        if r3 == null goto label04;

        $r9 = virtualinvoke r10.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label05;

        return r10;

     label04:
        $r8 = virtualinvoke r10.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljavax/annotation/PreDestroy;");

        if $r8 == null goto label05;

        return r10;

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: java.lang.reflect.Method findPreDestroyMethod(java.lang.Class,java.lang.String)>($r2, r3);

        if $r4 == null goto label07;

        return $r4;

     label07:
        $r5 = virtualinvoke r0.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        i2 = lengthof $r5;

        i3 = 0;

     label08:
        if i3 >= i2 goto label10;

        r6 = $r5[i3];

        $r7 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: java.lang.reflect.Method findPreDestroyMethod(java.lang.Class,java.lang.String)>(r6, r3);

        if $r7 == null goto label09;

        return $r7;

     label09:
        i3 = i3 + 1;

        goto label08;

     label10:
        return null;
    }

    public static org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.util.Map, org.apache.cxf.jaxrs.model.UserResource, boolean, boolean)
    {
        org.apache.cxf.Bus $r2;
        java.util.Map r0;
        org.apache.cxf.jaxrs.model.ClassResourceInfo $r3;
        org.apache.cxf.jaxrs.model.UserResource r1;
        boolean z0, z1;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: org.apache.cxf.jaxrs.model.UserResource;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r2 = staticinvoke <org.apache.cxf.BusFactory: org.apache.cxf.Bus getThreadDefaultBus()>();

        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,boolean,boolean,org.apache.cxf.Bus)>(r0, r1, z0, z1, $r2);

        return $r3;
    }

    public static org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.util.Map, org.apache.cxf.jaxrs.model.UserResource, boolean, boolean, org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r4;
        org.apache.cxf.jaxrs.model.UserResource r0;
        java.util.Map r3;
        org.apache.cxf.jaxrs.model.ClassResourceInfo $r5;
        java.lang.Class $r2;
        java.lang.String $r1;
        boolean z0, z1;

        r3 := @parameter0: java.util.Map;

        r0 := @parameter1: org.apache.cxf.jaxrs.model.UserResource;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r4 := @parameter4: org.apache.cxf.Bus;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.UserResource: java.lang.String getName()>();

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: java.lang.Class loadClass(java.lang.String)>($r1);

        $r5 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: org.apache.cxf.jaxrs.model.ClassResourceInfo createServiceClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)>(r3, r0, $r2, z0, z1, r4);

        return $r5;
    }

    public static org.apache.cxf.jaxrs.model.ClassResourceInfo createServiceClassResourceInfo(java.util.Map, org.apache.cxf.jaxrs.model.UserResource, java.lang.Class, boolean, boolean, org.apache.cxf.Bus)
    {
        org.apache.cxf.jaxrs.model.UserResource r0, $r31;
        org.apache.cxf.jaxrs.model.OperationResourceInfo $r17;
        java.lang.reflect.Method[] $r11, $r27, $r33;
        java.util.Map $r9, r28;
        java.lang.reflect.Method r12;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        org.apache.cxf.jaxrs.model.UserOperation r15;
        java.util.List $r23;
        org.apache.cxf.jaxrs.model.ClassResourceInfo $r1, $r41, $r42;
        java.lang.StringBuilder $r35, $r36, $r38, $r39;
        org.apache.cxf.Bus r5;
        org.apache.cxf.jaxrs.model.URITemplate $r7, $r19;
        int i0, i1;
        java.lang.String $r3, $r4, $r6, $r13, $r16, $r18, $r20, $r21, $r22, $r25, $r26, $r29, $r37, $r40;
        java.lang.RuntimeException $r34;
        java.lang.Class r2, $r10, $r24, $r32;
        java.lang.Object $r14, $r30;
        org.apache.cxf.jaxrs.model.MethodDispatcher $r8;

        r28 := @parameter0: java.util.Map;

        r0 := @parameter1: org.apache.cxf.jaxrs.model.UserResource;

        r2 := @parameter2: java.lang.Class;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r5 := @parameter5: org.apache.cxf.Bus;

        if r0 != null goto label01;

        $r34 = new java.lang.RuntimeException;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource class ");

        $r37 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no model info");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<java.lang.RuntimeException: void <init>(java.lang.String)>($r40);

        throw $r34;

     label01:
        $r1 = new org.apache.cxf.jaxrs.model.ClassResourceInfo;

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.UserResource: java.lang.String getConsumes()>();

        $r4 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.UserResource: java.lang.String getProduces()>();

        specialinvoke $r1.<org.apache.cxf.jaxrs.model.ClassResourceInfo: void <init>(java.lang.Class,java.lang.Class,boolean,boolean,boolean,java.lang.String,java.lang.String,org.apache.cxf.Bus)>(r2, r2, z0, z1, 1, $r3, $r4, r5);

        $r6 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.UserResource: java.lang.String getPath()>();

        $r7 = staticinvoke <org.apache.cxf.jaxrs.model.URITemplate: org.apache.cxf.jaxrs.model.URITemplate createTemplate(java.lang.String)>($r6);

        virtualinvoke $r1.<org.apache.cxf.jaxrs.model.ClassResourceInfo: void setURITemplate(org.apache.cxf.jaxrs.model.URITemplate)>($r7);

        $r8 = new org.apache.cxf.jaxrs.model.MethodDispatcher;

        specialinvoke $r8.<org.apache.cxf.jaxrs.model.MethodDispatcher: void <init>()>();

        $r9 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.UserResource: java.util.Map getOperationsAsMap()>();

        $r10 = virtualinvoke $r1.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class getServiceClass()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        i0 = lengthof $r11;

        i1 = 0;

     label02:
        if i1 >= i0 goto label09;

        r12 = $r11[i1];

        $r13 = virtualinvoke r12.<java.lang.reflect.Method: java.lang.String getName()>();

        $r14 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13);

        r15 = (org.apache.cxf.jaxrs.model.UserOperation) $r14;

        if r15 == null goto label08;

        $r16 = virtualinvoke r15.<org.apache.cxf.jaxrs.model.UserOperation: java.lang.String getName()>();

        if $r16 != null goto label03;

        goto label08;

     label03:
        $r17 = new org.apache.cxf.jaxrs.model.OperationResourceInfo;

        $r18 = virtualinvoke r15.<org.apache.cxf.jaxrs.model.UserOperation: java.lang.String getPath()>();

        $r19 = staticinvoke <org.apache.cxf.jaxrs.model.URITemplate: org.apache.cxf.jaxrs.model.URITemplate createTemplate(java.lang.String)>($r18);

        $r20 = virtualinvoke r15.<org.apache.cxf.jaxrs.model.UserOperation: java.lang.String getVerb()>();

        $r21 = virtualinvoke r15.<org.apache.cxf.jaxrs.model.UserOperation: java.lang.String getConsumes()>();

        $r22 = virtualinvoke r15.<org.apache.cxf.jaxrs.model.UserOperation: java.lang.String getProduces()>();

        $r23 = virtualinvoke r15.<org.apache.cxf.jaxrs.model.UserOperation: java.util.List getParameters()>();

        $z3 = virtualinvoke r15.<org.apache.cxf.jaxrs.model.UserOperation: boolean isOneway()>();

        specialinvoke $r17.<org.apache.cxf.jaxrs.model.OperationResourceInfo: void <init>(java.lang.reflect.Method,org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.jaxrs.model.URITemplate,java.lang.String,java.lang.String,java.lang.String,java.util.List,boolean)>(r12, $r1, $r19, $r20, $r21, $r22, $r23, $z3);

        $r24 = virtualinvoke r12.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r25 = virtualinvoke $r24.<java.lang.Class: java.lang.String getName()>();

        $r26 = virtualinvoke r15.<org.apache.cxf.jaxrs.model.UserOperation: java.lang.String getVerb()>();

        if $r26 != null goto label07;

        $z4 = interfaceinvoke r28.<java.util.Map: boolean containsKey(java.lang.Object)>($r25);

        if $z4 == 0 goto label08;

        $r29 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.UserResource: java.lang.String getName()>();

        $z5 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>($r29);

        if $z5 == 0 goto label04;

        $r41 = $r1;

        goto label05;

     label04:
        $r30 = interfaceinvoke r28.<java.util.Map: java.lang.Object get(java.lang.Object)>($r25);

        $r31 = (org.apache.cxf.jaxrs.model.UserResource) $r30;

        $r32 = virtualinvoke r12.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r41 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: org.apache.cxf.jaxrs.model.ClassResourceInfo createServiceClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)>(r28, $r31, $r32, 0, z1, r5);

     label05:
        if $r41 == null goto label06;

        virtualinvoke $r1.<org.apache.cxf.jaxrs.model.ClassResourceInfo: void addSubClassResourceInfo(org.apache.cxf.jaxrs.model.ClassResourceInfo)>($r41);

        $r33 = newarray (java.lang.reflect.Method)[1];

        $r33[0] = r12;

        virtualinvoke $r8.<org.apache.cxf.jaxrs.model.MethodDispatcher: void bind(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.reflect.Method[])>($r17, $r33);

     label06:
        goto label08;

     label07:
        $r27 = newarray (java.lang.reflect.Method)[1];

        $r27[0] = r12;

        virtualinvoke $r8.<org.apache.cxf.jaxrs.model.MethodDispatcher: void bind(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.reflect.Method[])>($r17, $r27);

     label08:
        i1 = i1 + 1;

        goto label02;

     label09:
        virtualinvoke $r1.<org.apache.cxf.jaxrs.model.ClassResourceInfo: void setMethodDispatcher(org.apache.cxf.jaxrs.model.MethodDispatcher)>($r8);

        $z2 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: boolean checkMethodDispatcher(org.apache.cxf.jaxrs.model.ClassResourceInfo)>($r1);

        if $z2 == 0 goto label10;

        $r42 = $r1;

        goto label11;

     label10:
        $r42 = null;

     label11:
        return $r42;
    }

    public static org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.lang.Class, java.lang.Class, boolean, boolean)
    {
        org.apache.cxf.Bus $r2;
        org.apache.cxf.jaxrs.model.ClassResourceInfo $r3;
        java.lang.Class r0, r1;
        boolean z0, z1;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r2 = staticinvoke <org.apache.cxf.BusFactory: org.apache.cxf.Bus getThreadDefaultBus()>();

        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.lang.Class,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)>(r0, r1, z0, z1, $r2);

        return $r3;
    }

    public static org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.lang.Class, java.lang.Class, boolean, boolean, org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r2;
        org.apache.cxf.jaxrs.model.ClassResourceInfo $r3;
        java.lang.Class r0, r1;
        boolean z0, z1;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r2 := @parameter4: org.apache.cxf.Bus;

        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.lang.Class,java.lang.Class,org.apache.cxf.jaxrs.model.ClassResourceInfo,boolean,boolean,org.apache.cxf.Bus)>(r0, r1, null, z0, z1, r2);

        return $r3;
    }

    public static org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.lang.Class, java.lang.Class, org.apache.cxf.jaxrs.model.ClassResourceInfo, boolean, boolean, org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r3;
        org.apache.cxf.jaxrs.model.URITemplate $r6;
        javax.ws.rs.Path $r5;
        org.apache.cxf.jaxrs.model.ClassResourceInfo $r0, r4, $r7;
        java.lang.Class r1, r2;
        boolean z0, z1, $z2;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        r4 := @parameter2: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r3 := @parameter5: org.apache.cxf.Bus;

        $r0 = new org.apache.cxf.jaxrs.model.ClassResourceInfo;

        specialinvoke $r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: void <init>(java.lang.Class,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)>(r1, r2, z0, z1, r3);

        virtualinvoke $r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: void setParent(org.apache.cxf.jaxrs.model.ClassResourceInfo)>(r4);

        if z0 == 0 goto label1;

        $r5 = virtualinvoke $r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: javax.ws.rs.Path getPath()>();

        $r6 = staticinvoke <org.apache.cxf.jaxrs.model.URITemplate: org.apache.cxf.jaxrs.model.URITemplate createTemplate(javax.ws.rs.Path)>($r5);

        virtualinvoke $r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: void setURITemplate(org.apache.cxf.jaxrs.model.URITemplate)>($r6);

     label1:
        staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: void evaluateResourceClass(org.apache.cxf.jaxrs.model.ClassResourceInfo,boolean)>($r0, z1);

        $z2 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: boolean checkMethodDispatcher(org.apache.cxf.jaxrs.model.ClassResourceInfo)>($r0);

        if $z2 == 0 goto label2;

        $r7 = $r0;

        goto label3;

     label2:
        $r7 = null;

     label3:
        return $r7;
    }

    private static void evaluateResourceClass(org.apache.cxf.jaxrs.model.ClassResourceInfo, boolean)
    {
        org.apache.cxf.Bus $r14;
        javax.ws.rs.Path r8;
        org.apache.cxf.jaxrs.model.OperationResourceInfo $r9;
        java.lang.reflect.Method[] $r3, $r10;
        int i0, i1;
        java.lang.String $r6;
        java.lang.reflect.Method r4, $r5;
        boolean z0;
        java.lang.'annotation'.Annotation $r7;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r1, $r12, $r13, r15, $r16;
        java.lang.Class $r2, $r11;
        org.apache.cxf.jaxrs.model.MethodDispatcher $r0;

        r1 := @parameter0: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        z0 := @parameter1: boolean;

        $r0 = new org.apache.cxf.jaxrs.model.MethodDispatcher;

        specialinvoke $r0.<org.apache.cxf.jaxrs.model.MethodDispatcher: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class getServiceClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        i0 = lengthof $r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label7;

        r4 = $r3[i1];

        $r5 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.reflect.Method getAnnotatedMethod(java.lang.reflect.Method)>(r4);

        $r6 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.String getHttpMethodValue(java.lang.reflect.Method)>($r5);

        $r7 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.'annotation'.Annotation getMethodAnnotation(java.lang.reflect.Method,java.lang.Class)>($r5, class "Ljavax/ws/rs/Path;");

        r8 = (javax.ws.rs.Path) $r7;

        if $r6 != null goto label2;

        if r8 == null goto label6;

     label2:
        $r9 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: org.apache.cxf.jaxrs.model.OperationResourceInfo createOperationInfo(java.lang.reflect.Method,java.lang.reflect.Method,org.apache.cxf.jaxrs.model.ClassResourceInfo,javax.ws.rs.Path,java.lang.String)>(r4, $r5, r1, r8, $r6);

        $r10 = newarray (java.lang.reflect.Method)[1];

        $r10[0] = r4;

        virtualinvoke $r0.<org.apache.cxf.jaxrs.model.MethodDispatcher: void bind(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.reflect.Method[])>($r9, $r10);

        if $r6 != null goto label6;

        $r11 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        if z0 == 0 goto label6;

        $r12 = virtualinvoke r1.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo findResource(java.lang.Class,java.lang.Class)>($r11, $r11);

        r15 = $r12;

        if $r12 != null goto label5;

        $r13 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: org.apache.cxf.jaxrs.model.ClassResourceInfo getAncestorWithSameServiceClass(org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.Class)>(r1, $r11);

        if $r13 == null goto label3;

        $r16 = $r13;

        goto label4;

     label3:
        $r14 = virtualinvoke r1.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.Bus getBus()>();

        $r16 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.lang.Class,java.lang.Class,org.apache.cxf.jaxrs.model.ClassResourceInfo,boolean,boolean,org.apache.cxf.Bus)>($r11, $r11, r1, 0, z0, $r14);

     label4:
        r15 = $r16;

     label5:
        if r15 == null goto label6;

        virtualinvoke r1.<org.apache.cxf.jaxrs.model.ClassResourceInfo: void addSubClassResourceInfo(org.apache.cxf.jaxrs.model.ClassResourceInfo)>(r15);

     label6:
        i1 = i1 + 1;

        goto label1;

     label7:
        virtualinvoke r1.<org.apache.cxf.jaxrs.model.ClassResourceInfo: void setMethodDispatcher(org.apache.cxf.jaxrs.model.MethodDispatcher)>($r0);

        return;
    }

    private static org.apache.cxf.jaxrs.model.ClassResourceInfo getAncestorWithSameServiceClass(org.apache.cxf.jaxrs.model.ClassResourceInfo, java.lang.Class)
    {
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0, $r3, $r4;
        java.lang.Class $r1, r2;

        r0 := @parameter0: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r2 := @parameter1: java.lang.Class;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class getServiceClass()>();

        if $r1 != r2 goto label2;

        return r0;

     label2:
        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo getParent()>();

        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: org.apache.cxf.jaxrs.model.ClassResourceInfo getAncestorWithSameServiceClass(org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.Class)>($r3, r2);

        return $r4;
    }

    public static java.lang.reflect.Constructor findResourceConstructor(java.lang.Class, boolean)
    {
        java.lang.'annotation'.Annotation[] $r8, $r9;
        java.lang.reflect.Constructor r5, $r11;
        java.lang.reflect.Constructor[] $r2;
        int i0, $i1, $i2, i3, i4;
        java.util.LinkedList $r0;
        boolean z0, $z1, z2;
        java.lang.'annotation'.Annotation[][] $r7;
        java.lang.Class[] $r6;
        org.apache.cxf.jaxrs.utils.ResourceUtils$1 $r3;
        java.lang.Class r1;
        java.lang.Object $r4, $r10;

        r1 := @parameter0: java.lang.Class;

        z0 := @parameter1: boolean;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>();

        i0 = lengthof $r2;

        i3 = 0;

     label1:
        if i3 >= i0 goto label7;

        r5 = $r2[i3];

        $r6 = virtualinvoke r5.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $r7 = virtualinvoke r5.<java.lang.reflect.Constructor: java.lang.'annotation'.Annotation[][] getParameterAnnotations()>();

        z2 = 1;

        i4 = 0;

     label2:
        $i2 = lengthof $r6;

        if i4 >= $i2 goto label5;

        if z0 != 0 goto label3;

        $r9 = $r7[i4];

        $r10 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.Object getAnnotation(java.lang.'annotation'.Annotation[],java.lang.Class)>($r9, class "Ljavax/ws/rs/core/Context;");

        if $r10 != null goto label4;

        z2 = 0;

        goto label5;

     label3:
        $r8 = $r7[i4];

        $z1 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: boolean isValidParamAnnotations(java.lang.'annotation'.Annotation[])>($r8);

        if $z1 != 0 goto label4;

        z2 = 0;

        goto label5;

     label4:
        i4 = i4 + 1;

        goto label2;

     label5:
        if z2 == 0 goto label6;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r5);

     label6:
        i3 = i3 + 1;

        goto label1;

     label7:
        $r3 = new org.apache.cxf.jaxrs.utils.ResourceUtils$1;

        specialinvoke $r3.<org.apache.cxf.jaxrs.utils.ResourceUtils$1: void <init>()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r0, $r3);

        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i1 != 0 goto label8;

        $r11 = null;

        goto label9;

     label8:
        $r4 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(0);

        $r11 = (java.lang.reflect.Constructor) $r4;

     label9:
        return $r11;
    }

    public static java.util.List getParameters(java.lang.reflect.Method)
    {
        java.lang.'annotation'.Annotation[][] $r1;
        java.lang.Class[] $r2;
        java.lang.'annotation'.Annotation[] $r5;
        org.apache.cxf.jaxrs.model.Parameter $r6;
        java.util.ArrayList $r3;
        java.util.List $r7, $r8;
        int $i0, $i1, $i2, i3;
        java.lang.Class $r4;
        java.lang.reflect.Method r0;

        r0 := @parameter0: java.lang.reflect.Method;

        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[][] getParameterAnnotations()>();

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $r7 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r8 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.List cast(java.util.List,java.lang.Class)>($r7, class "Lorg/apache/cxf/jaxrs/model/Parameter;");

        return $r8;

     label1:
        $r2 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r3 = new java.util.ArrayList;

        $i1 = lengthof $r1;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i1);

        i3 = 0;

     label2:
        $i2 = lengthof $r1;

        if i3 >= $i2 goto label3;

        $r5 = $r1[i3];

        $r4 = $r2[i3];

        $r6 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: org.apache.cxf.jaxrs.model.Parameter getParameter(int,java.lang.'annotation'.Annotation[],java.lang.Class)>(i3, $r5, $r4);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r6);

        i3 = i3 + 1;

        goto label2;

     label3:
        return $r3;
    }

    public static org.apache.cxf.jaxrs.model.Parameter getParameter(int, java.lang.'annotation'.Annotation[], java.lang.Class)
    {
        org.apache.cxf.jaxrs.model.ParameterType $r19, $r21, $r24, $r27, $r30, $r33, $r36, $r39, $r42;
        javax.ws.rs.QueryParam r9;
        javax.ws.rs.HeaderParam r15;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        javax.ws.rs.core.Context r2;
        javax.ws.rs.BeanParam $r40;
        javax.ws.rs.MatrixParam r11;
        javax.ws.rs.PathParam r7;
        java.lang.'annotation'.Annotation[] r0;
        org.apache.cxf.jaxrs.model.Parameter $r18, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41;
        int i0;
        javax.ws.rs.CookieParam r17;
        java.lang.String $r5, $r22, $r25, $r28, $r31, $r34, $r37;
        javax.ws.rs.FormParam r13;
        java.lang.Object $r1, $r3, $r4, $r6, $r8, $r10, $r12, $r14, $r16;
        java.lang.Class r43;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.'annotation'.Annotation[];

        r43 := @parameter2: java.lang.Class;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.Object getAnnotation(java.lang.'annotation'.Annotation[],java.lang.Class)>(r0, class "Ljavax/ws/rs/core/Context;");

        r2 = (javax.ws.rs.core.Context) $r1;

        if r2 == null goto label01;

        $r41 = new org.apache.cxf.jaxrs.model.Parameter;

        $r42 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType CONTEXT>;

        specialinvoke $r41.<org.apache.cxf.jaxrs.model.Parameter: void <init>(org.apache.cxf.jaxrs.model.ParameterType,int,java.lang.String)>($r42, i0, null);

        return $r41;

     label01:
        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.Object getAnnotation(java.lang.'annotation'.Annotation[],java.lang.Class)>(r0, class "Ljavax/ws/rs/Encoded;");

        if $r3 == null goto label02;

        $z7 = 1;

        $z6 = 1;

        $z5 = 1;

        $z4 = 1;

        $z3 = 1;

        $z2 = 1;

        $z1 = 1;

        goto label03;

     label02:
        $z7 = 0;

        $z6 = 0;

        $z5 = 0;

        $z4 = 0;

        $z3 = 0;

        $z2 = 0;

        $z1 = 0;

     label03:
        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.Object getAnnotation(java.lang.'annotation'.Annotation[],java.lang.Class)>(r0, class "Ljavax/ws/rs/BeanParam;");

        $r40 = (javax.ws.rs.BeanParam) $r4;

        if $r40 == null goto label04;

        $r38 = new org.apache.cxf.jaxrs.model.Parameter;

        $r39 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType BEAN>;

        specialinvoke $r38.<org.apache.cxf.jaxrs.model.Parameter: void <init>(org.apache.cxf.jaxrs.model.ParameterType,int,java.lang.String,boolean,java.lang.String)>($r39, i0, null, $z1, null);

        return $r38;

     label04:
        $r5 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.String getDefaultParameterValue(java.lang.'annotation'.Annotation[])>(r0);

        $r6 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.Object getAnnotation(java.lang.'annotation'.Annotation[],java.lang.Class)>(r0, class "Ljavax/ws/rs/PathParam;");

        r7 = (javax.ws.rs.PathParam) $r6;

        if r7 == null goto label05;

        $r35 = new org.apache.cxf.jaxrs.model.Parameter;

        $r36 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType PATH>;

        $r37 = interfaceinvoke r7.<javax.ws.rs.PathParam: java.lang.String value()>();

        specialinvoke $r35.<org.apache.cxf.jaxrs.model.Parameter: void <init>(org.apache.cxf.jaxrs.model.ParameterType,int,java.lang.String,boolean,java.lang.String)>($r36, i0, $r37, $z4, $r5);

        return $r35;

     label05:
        $r8 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.Object getAnnotation(java.lang.'annotation'.Annotation[],java.lang.Class)>(r0, class "Ljavax/ws/rs/QueryParam;");

        r9 = (javax.ws.rs.QueryParam) $r8;

        if r9 == null goto label06;

        $r32 = new org.apache.cxf.jaxrs.model.Parameter;

        $r33 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType QUERY>;

        $r34 = interfaceinvoke r9.<javax.ws.rs.QueryParam: java.lang.String value()>();

        specialinvoke $r32.<org.apache.cxf.jaxrs.model.Parameter: void <init>(org.apache.cxf.jaxrs.model.ParameterType,int,java.lang.String,boolean,java.lang.String)>($r33, i0, $r34, $z5, $r5);

        return $r32;

     label06:
        $r10 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.Object getAnnotation(java.lang.'annotation'.Annotation[],java.lang.Class)>(r0, class "Ljavax/ws/rs/MatrixParam;");

        r11 = (javax.ws.rs.MatrixParam) $r10;

        if r11 == null goto label07;

        $r29 = new org.apache.cxf.jaxrs.model.Parameter;

        $r30 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType MATRIX>;

        $r31 = interfaceinvoke r11.<javax.ws.rs.MatrixParam: java.lang.String value()>();

        specialinvoke $r29.<org.apache.cxf.jaxrs.model.Parameter: void <init>(org.apache.cxf.jaxrs.model.ParameterType,int,java.lang.String,boolean,java.lang.String)>($r30, i0, $r31, $z2, $r5);

        return $r29;

     label07:
        $r12 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.Object getAnnotation(java.lang.'annotation'.Annotation[],java.lang.Class)>(r0, class "Ljavax/ws/rs/FormParam;");

        r13 = (javax.ws.rs.FormParam) $r12;

        if r13 == null goto label08;

        $r26 = new org.apache.cxf.jaxrs.model.Parameter;

        $r27 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType FORM>;

        $r28 = interfaceinvoke r13.<javax.ws.rs.FormParam: java.lang.String value()>();

        specialinvoke $r26.<org.apache.cxf.jaxrs.model.Parameter: void <init>(org.apache.cxf.jaxrs.model.ParameterType,int,java.lang.String,boolean,java.lang.String)>($r27, i0, $r28, $z7, $r5);

        return $r26;

     label08:
        $r14 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.Object getAnnotation(java.lang.'annotation'.Annotation[],java.lang.Class)>(r0, class "Ljavax/ws/rs/HeaderParam;");

        r15 = (javax.ws.rs.HeaderParam) $r14;

        if r15 == null goto label09;

        $r23 = new org.apache.cxf.jaxrs.model.Parameter;

        $r24 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType HEADER>;

        $r25 = interfaceinvoke r15.<javax.ws.rs.HeaderParam: java.lang.String value()>();

        specialinvoke $r23.<org.apache.cxf.jaxrs.model.Parameter: void <init>(org.apache.cxf.jaxrs.model.ParameterType,int,java.lang.String,boolean,java.lang.String)>($r24, i0, $r25, $z6, $r5);

        return $r23;

     label09:
        $r16 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.Object getAnnotation(java.lang.'annotation'.Annotation[],java.lang.Class)>(r0, class "Ljavax/ws/rs/CookieParam;");

        r17 = (javax.ws.rs.CookieParam) $r16;

        if r17 == null goto label10;

        $r20 = new org.apache.cxf.jaxrs.model.Parameter;

        $r21 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType COOKIE>;

        $r22 = interfaceinvoke r17.<javax.ws.rs.CookieParam: java.lang.String value()>();

        specialinvoke $r20.<org.apache.cxf.jaxrs.model.Parameter: void <init>(org.apache.cxf.jaxrs.model.ParameterType,int,java.lang.String,boolean,java.lang.String)>($r21, i0, $r22, $z3, $r5);

        return $r20;

     label10:
        $r18 = new org.apache.cxf.jaxrs.model.Parameter;

        $r19 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType REQUEST_BODY>;

        specialinvoke $r18.<org.apache.cxf.jaxrs.model.Parameter: void <init>(org.apache.cxf.jaxrs.model.ParameterType,int,java.lang.String)>($r19, i0, null);

        return $r18;
    }

    private static org.apache.cxf.jaxrs.model.OperationResourceInfo createOperationInfo(java.lang.reflect.Method, java.lang.reflect.Method, org.apache.cxf.jaxrs.model.ClassResourceInfo, javax.ws.rs.Path, java.lang.String)
    {
        org.apache.cxf.jaxrs.model.URITemplate $r5;
        javax.ws.rs.Path r4;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r3;
        org.apache.cxf.jaxrs.model.OperationResourceInfo $r0;
        java.lang.String r6;
        java.lang.reflect.Method r1, r2;

        r1 := @parameter0: java.lang.reflect.Method;

        r2 := @parameter1: java.lang.reflect.Method;

        r3 := @parameter2: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r4 := @parameter3: javax.ws.rs.Path;

        r6 := @parameter4: java.lang.String;

        $r0 = new org.apache.cxf.jaxrs.model.OperationResourceInfo;

        specialinvoke $r0.<org.apache.cxf.jaxrs.model.OperationResourceInfo: void <init>(java.lang.reflect.Method,java.lang.reflect.Method,org.apache.cxf.jaxrs.model.ClassResourceInfo)>(r1, r2, r3);

        $r5 = staticinvoke <org.apache.cxf.jaxrs.model.URITemplate: org.apache.cxf.jaxrs.model.URITemplate createTemplate(javax.ws.rs.Path)>(r4);

        virtualinvoke $r0.<org.apache.cxf.jaxrs.model.OperationResourceInfo: void setURITemplate(org.apache.cxf.jaxrs.model.URITemplate)>($r5);

        virtualinvoke $r0.<org.apache.cxf.jaxrs.model.OperationResourceInfo: void setHttpMethod(java.lang.String)>(r6);

        return $r0;
    }

    private static boolean checkMethodDispatcher(org.apache.cxf.jaxrs.model.ClassResourceInfo)
    {
        java.lang.Object[] $r4;
        java.util.Set $r2;
        org.apache.cxf.common.i18n.Message $r3;
        java.util.logging.Logger $r5;
        java.util.ResourceBundle $r6;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0;
        java.lang.Class $r7;
        java.lang.String $r8, $r9;
        org.apache.cxf.jaxrs.model.MethodDispatcher $r1;
        boolean $z0;

        r0 := @parameter0: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.MethodDispatcher getMethodDispatcher()>();

        $r2 = virtualinvoke $r1.<org.apache.cxf.jaxrs.model.MethodDispatcher: java.util.Set getOperationResourceInfos()>();

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r5 = <org.apache.cxf.jaxrs.utils.ResourceUtils: java.util.logging.Logger LOG>;

        $r3 = new org.apache.cxf.common.i18n.Message;

        $r6 = <org.apache.cxf.jaxrs.utils.ResourceUtils: java.util.ResourceBundle BUNDLE>;

        $r4 = newarray (java.lang.Object)[1];

        $r7 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class getServiceClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r4[0] = $r8;

        specialinvoke $r3.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("NO_RESOURCE_OP_EXC", $r6, $r4);

        $r9 = virtualinvoke $r3.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        virtualinvoke $r5.<java.util.logging.Logger: void warning(java.lang.String)>($r9);

        return 0;

     label1:
        return 1;
    }

    private static java.lang.Class loadClass(java.lang.String)
    {
        java.lang.RuntimeException $r4;
        java.lang.Class $r2;
        java.lang.ClassNotFoundException $r3;
        java.lang.StringBuilder $r5, $r6, $r8, $r9;
        java.lang.String r0, $r1, $r7, $r10;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $r2 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: java.lang.Class loadClass(java.lang.String,java.lang.Class)>($r1, class "Lorg/apache/cxf/jaxrs/utils/ResourceUtils;");

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No class ");

        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can be found");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r10, $r3);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static java.util.List getUserResources(java.lang.String, org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r1;
        java.util.logging.Logger $r6;
        java.lang.Exception $r4;
        java.util.List $r3;
        java.lang.StringBuilder $r5, $r7, $r8;
        java.lang.String r0, $r9;
        java.io.InputStream $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.cxf.Bus;

     label1:
        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: java.io.InputStream getResourceStream(java.lang.String,org.apache.cxf.Bus)>(r0, r1);

        if $r2 != null goto label3;

     label2:
        return null;

     label3:
        $r3 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: java.util.List getUserResources(java.io.InputStream)>($r2);

     label4:
        return $r3;

     label5:
        $r4 := @caughtexception;

        $r6 = <org.apache.cxf.jaxrs.utils.ResourceUtils: java.util.logging.Logger LOG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem with processing a user model at ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.util.logging.Logger: void warning(java.lang.String)>($r9);

        return null;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static java.io.InputStream getResourceStream(java.lang.String, org.apache.cxf.Bus) throws java.lang.Exception
    {
        org.apache.cxf.Bus r1;
        java.net.URL $r2;
        java.lang.String r0;
        java.io.InputStream $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.cxf.Bus;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: java.net.URL getResourceURL(java.lang.String,org.apache.cxf.Bus)>(r0, r1);

        if $r2 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = virtualinvoke $r2.<java.net.URL: java.io.InputStream openStream()>();

     label2:
        return $r3;
    }

    public static java.net.URL getResourceURL(java.lang.String, org.apache.cxf.Bus) throws java.lang.Exception
    {
        org.apache.cxf.Bus r10;
        java.net.URL $r1, $r12, r15;
        int $i0;
        java.lang.String r0, $r7, $r8, $r9;
        java.net.URI $r14;
        boolean $z0, $z1;
        java.util.logging.Logger $r3;
        java.lang.Exception $r11;
        java.io.File $r13;
        java.lang.StringBuilder $r2, $r4, $r5, $r6;

        r0 := @parameter0: java.lang.String;

        r10 := @parameter1: org.apache.cxf.Bus;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("classpath:");

        if $z0 == 0 goto label1;

        $r8 = "classpath:";

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        $r9 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i0);

        r15 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: java.net.URL getClasspathResourceURL(java.lang.String,java.lang.Class,org.apache.cxf.Bus)>($r9, class "Lorg/apache/cxf/jaxrs/utils/ResourceUtils;", r10);

        goto label4;

     label1:
        $r1 = new java.net.URL;

        specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>(r0);

        r15 = $r1;

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        $r12 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: java.net.URL getClasspathResourceURL(java.lang.String,java.lang.Class,org.apache.cxf.Bus)>(r0, class "Lorg/apache/cxf/jaxrs/utils/ResourceUtils;", r10);

        r15 = $r12;

        if $r12 != null goto label4;

        $r13 = new java.io.File;

        specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>(r0);

        $z1 = virtualinvoke $r13.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label4;

        $r14 = virtualinvoke $r13.<java.io.File: java.net.URI toURI()>();

        r15 = virtualinvoke $r14.<java.net.URI: java.net.URL toURL()>();

     label4:
        if r15 != null goto label5;

        $r3 = <org.apache.cxf.jaxrs.utils.ResourceUtils: java.util.logging.Logger LOG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No resource ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is available");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.util.logging.Logger: void warning(java.lang.String)>($r7);

     label5:
        return r15;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.io.InputStream getClasspathResourceStream(java.lang.String, java.lang.Class, org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r3;
        java.lang.Class r1;
        java.lang.Object $r4;
        java.lang.String r0;
        java.io.InputStream $r2, $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        r3 := @parameter2: org.apache.cxf.Bus;

        $r2 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: java.io.InputStream getResourceAsStream(java.lang.String,java.lang.Class)>(r0, r1);

        if $r2 != null goto label1;

        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: java.lang.Object getResource(java.lang.String,java.lang.Class,org.apache.cxf.Bus)>(r0, class "Ljava/io/InputStream;", r3);

        $r5 = (java.io.InputStream) $r4;

        goto label2;

     label1:
        $r5 = $r2;

     label2:
        return $r5;
    }

    public static java.net.URL getClasspathResourceURL(java.lang.String, java.lang.Class, org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r3;
        java.net.URL $r2, $r5;
        java.lang.Class r1;
        java.lang.Object $r4;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        r3 := @parameter2: org.apache.cxf.Bus;

        $r2 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: java.net.URL getResource(java.lang.String,java.lang.Class)>(r0, r1);

        if $r2 != null goto label1;

        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: java.lang.Object getResource(java.lang.String,java.lang.Class,org.apache.cxf.Bus)>(r0, class "Ljava/net/URL;", r3);

        $r5 = (java.net.URL) $r4;

        goto label2;

     label1:
        $r5 = $r2;

     label2:
        return $r5;
    }

    public static java.lang.Object getResource(java.lang.String, java.lang.Class, org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r0;
        org.apache.cxf.resource.ResourceManager r2;
        java.lang.Object $r1, $r5;
        java.lang.Class r4;
        java.lang.String r3;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Class;

        r0 := @parameter2: org.apache.cxf.Bus;

        if r0 == null goto label1;

        $r1 = interfaceinvoke r0.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/resource/ResourceManager;");

        r2 = (org.apache.cxf.resource.ResourceManager) $r1;

        if r2 == null goto label1;

        $r5 = interfaceinvoke r2.<org.apache.cxf.resource.ResourceManager: java.lang.Object resolveResource(java.lang.String,java.lang.Class)>(r3, r4);

        return $r5;

     label1:
        return null;
    }

    public static java.util.List getUserResources(java.lang.String)
    {
        org.apache.cxf.Bus $r1;
        java.util.List $r2;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.cxf.BusFactory: org.apache.cxf.Bus getThreadDefaultBus()>();

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: java.util.List getUserResources(java.lang.String,org.apache.cxf.Bus)>(r0, $r1);

        return $r2;
    }

    public static java.util.List getUserResources(java.io.InputStream) throws java.lang.Exception
    {
        java.util.List $r4;
        org.w3c.dom.Element $r3;
        org.w3c.dom.Document $r2;
        java.io.InputStreamReader $r0;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        $r0 = new java.io.InputStreamReader;

        specialinvoke $r0.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r1, "UTF-8");

        $r2 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: org.w3c.dom.Document read(java.io.Reader)>($r0);

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: java.util.List getResourcesFromElement(org.w3c.dom.Element)>($r3);

        return $r4;
    }

    public static java.util.List getResourcesFromElement(org.w3c.dom.Element)
    {
        java.util.Iterator $r3;
        org.apache.cxf.jaxrs.model.UserResource $r6;
        java.util.ArrayList $r0;
        java.util.List $r2;
        org.w3c.dom.Element r1, r5;
        java.lang.Object $r4;
        boolean $z0;

        r1 := @parameter0: org.w3c.dom.Element;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = staticinvoke <org.apache.cxf.helpers.DOMUtils: java.util.List findAllElementsByTagNameNS(org.w3c.dom.Element,java.lang.String,java.lang.String)>(r1, "http://cxf.apache.org/jaxrs", "resource");

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.w3c.dom.Element) $r4;

        $r6 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: org.apache.cxf.jaxrs.model.UserResource getResourceFromElement(org.w3c.dom.Element)>(r5);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        return $r0;
    }

    public static org.apache.cxf.jaxrs.model.ResourceTypes getAllRequestResponseTypes(java.util.List, boolean)
    {
        org.apache.cxf.jaxrs.model.ResourceTypes $r1;
        java.util.List r0;
        boolean z0;

        r0 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: org.apache.cxf.jaxrs.model.ResourceTypes getAllRequestResponseTypes(java.util.List,boolean,javax.ws.rs.ext.MessageBodyWriter)>(r0, z0, null);

        return $r1;
    }

    public static org.apache.cxf.jaxrs.model.ResourceTypes getAllRequestResponseTypes(java.util.List, boolean, javax.ws.rs.ext.MessageBodyWriter)
    {
        java.util.Iterator $r2;
        javax.ws.rs.ext.MessageBodyWriter r5;
        org.apache.cxf.jaxrs.model.ResourceTypes $r0;
        java.util.List r1;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r4;
        java.lang.Object $r3;
        boolean $z0, z1;

        r1 := @parameter0: java.util.List;

        z1 := @parameter1: boolean;

        r5 := @parameter2: javax.ws.rs.ext.MessageBodyWriter;

        $r0 = new org.apache.cxf.jaxrs.model.ResourceTypes;

        specialinvoke $r0.<org.apache.cxf.jaxrs.model.ResourceTypes: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.jaxrs.model.ClassResourceInfo) $r3;

        staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: void getAllTypesForResource(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.jaxrs.model.ResourceTypes,boolean,javax.ws.rs.ext.MessageBodyWriter)>(r4, $r0, z1, r5);

        goto label1;

     label2:
        return $r0;
    }

    public static java.lang.Class getActualJaxbType(java.lang.Class, java.lang.reflect.Method, boolean)
    {
        java.lang.'annotation'.Annotation $r1;
        org.apache.cxf.jaxrs.model.wadl.ElementClass r2;
        java.lang.Class r3, $r4;
        java.lang.reflect.Method r0;
        boolean z0;

        r3 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.reflect.Method;

        z0 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/model/wadl/ElementClass;");

        r2 = (org.apache.cxf.jaxrs.model.wadl.ElementClass) $r1;

        if r2 == null goto label3;

        if z0 == 0 goto label1;

        $r4 = interfaceinvoke r2.<org.apache.cxf.jaxrs.model.wadl.ElementClass: java.lang.Class request()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke r2.<org.apache.cxf.jaxrs.model.wadl.ElementClass: java.lang.Class response()>();

     label2:
        if $r4 == class "Ljava/lang/Object;" goto label3;

        return $r4;

     label3:
        return r3;
    }

    private static void getAllTypesForResource(org.apache.cxf.jaxrs.model.ClassResourceInfo, org.apache.cxf.jaxrs.model.ResourceTypes, boolean, javax.ws.rs.ext.MessageBodyWriter)
    {
        javax.ws.rs.ext.MessageBodyWriter r8;
        org.apache.cxf.jaxrs.model.OperationResourceInfo r29;
        org.apache.cxf.jaxrs.model.ParameterType $r18, $r19;
        java.util.Map $r13, $r24;
        java.lang.reflect.Method $r10;
        boolean $z0, $z1, $z2, z3, $z4;
        java.util.Collection $r4;
        java.util.Set $r2;
        java.util.List $r14;
        java.lang.reflect.Type $r12, r23, $r31;
        java.lang.reflect.Type[] $r22;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0, r32;
        org.apache.cxf.jaxrs.model.Parameter r17;
        java.lang.'annotation'.Annotation[] $r26, $r27;
        org.apache.cxf.jaxrs.model.ResourceTypes r7;
        int $i0, $i1, $i2;
        java.lang.'annotation'.Annotation[][] $r25;
        java.util.Iterator $r3, $r5, $r15;
        java.lang.Class[] $r20;
        java.lang.Object $r6, $r9, $r16;
        java.lang.Class $r11, r21, $r28, r30;
        org.apache.cxf.jaxrs.model.MethodDispatcher $r1;

        r0 := @parameter0: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r7 := @parameter1: org.apache.cxf.jaxrs.model.ResourceTypes;

        z3 := @parameter2: boolean;

        r8 := @parameter3: javax.ws.rs.ext.MessageBodyWriter;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.MethodDispatcher getMethodDispatcher()>();

        $r2 = virtualinvoke $r1.<org.apache.cxf.jaxrs.model.MethodDispatcher: java.util.Set getOperationResourceInfos()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r9 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r29 = (org.apache.cxf.jaxrs.model.OperationResourceInfo) $r9;

        $r10 = virtualinvoke r29.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.lang.reflect.Method getMethodToInvoke()>();

        $r11 = virtualinvoke $r10.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        r30 = $r11;

        if $r11 != class "Ljavax/ws/rs/core/Response;" goto label02;

        r30 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: java.lang.Class getActualJaxbType(java.lang.Class,java.lang.reflect.Method,boolean)>($r11, $r10, 0);

     label02:
        $r12 = virtualinvoke $r10.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();

        if z3 == 0 goto label05;

        $r28 = r30;

        if $r11 != class "Ljavax/ws/rs/core/Response;" goto label03;

        $r31 = r30;

        goto label04;

     label03:
        $r31 = $r12;

     label04:
        $r27 = virtualinvoke $r10.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[] getAnnotations()>();

        staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: void checkJaxbType(java.lang.Class,java.lang.reflect.Type,org.apache.cxf.jaxrs.model.ResourceTypes,java.lang.'annotation'.Annotation[],javax.ws.rs.ext.MessageBodyWriter)>($r28, $r31, r7, $r27, r8);

        goto label06;

     label05:
        $r13 = virtualinvoke r7.<org.apache.cxf.jaxrs.model.ResourceTypes: java.util.Map getAllTypes()>();

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r30, $r12);

     label06:
        $r14 = virtualinvoke r29.<org.apache.cxf.jaxrs.model.OperationResourceInfo: java.util.List getParameters()>();

        $r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z4 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label10;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r17 = (org.apache.cxf.jaxrs.model.Parameter) $r16;

        $r18 = virtualinvoke r17.<org.apache.cxf.jaxrs.model.Parameter: org.apache.cxf.jaxrs.model.ParameterType getType()>();

        $r19 = <org.apache.cxf.jaxrs.model.ParameterType: org.apache.cxf.jaxrs.model.ParameterType REQUEST_BODY>;

        if $r18 != $r19 goto label09;

        $r20 = virtualinvoke $r10.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i0 = virtualinvoke r17.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

        r21 = $r20[$i0];

        $r22 = virtualinvoke $r10.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();

        $i1 = virtualinvoke r17.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

        r23 = $r22[$i1];

        if z3 == 0 goto label08;

        $r25 = virtualinvoke $r10.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[][] getParameterAnnotations()>();

        $i2 = virtualinvoke r17.<org.apache.cxf.jaxrs.model.Parameter: int getIndex()>();

        $r26 = $r25[$i2];

        staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: void checkJaxbType(java.lang.Class,java.lang.reflect.Type,org.apache.cxf.jaxrs.model.ResourceTypes,java.lang.'annotation'.Annotation[],javax.ws.rs.ext.MessageBodyWriter)>(r21, r23, r7, $r26, r8);

        goto label09;

     label08:
        $r24 = virtualinvoke r7.<org.apache.cxf.jaxrs.model.ResourceTypes: java.util.Map getAllTypes()>();

        interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r21, r23);

     label09:
        goto label07;

     label10:
        goto label01;

     label11:
        $r4 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.util.Collection getSubResources()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label12:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label14;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r32 = (org.apache.cxf.jaxrs.model.ClassResourceInfo) $r6;

        $z2 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: boolean isRecursiveSubResource(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.jaxrs.model.ClassResourceInfo)>(r0, r32);

        if $z2 != 0 goto label13;

        staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: void getAllTypesForResource(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.jaxrs.model.ResourceTypes,boolean,javax.ws.rs.ext.MessageBodyWriter)>(r32, r7, z3, r8);

     label13:
        goto label12;

     label14:
        return;
    }

    private static boolean isRecursiveSubResource(org.apache.cxf.jaxrs.model.ClassResourceInfo, org.apache.cxf.jaxrs.model.ClassResourceInfo)
    {
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0, r1, $r2;
        boolean $z0;

        r0 := @parameter0: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r1 := @parameter1: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        if r0 != null goto label1;

        return 0;

     label1:
        if r0 != r1 goto label2;

        return 1;

     label2:
        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: org.apache.cxf.jaxrs.model.ClassResourceInfo getParent()>();

        $z0 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: boolean isRecursiveSubResource(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.jaxrs.model.ClassResourceInfo)>($r2, r1);

        return $z0;
    }

    private static void checkJaxbType(java.lang.Class, java.lang.reflect.Type, org.apache.cxf.jaxrs.model.ResourceTypes, java.lang.'annotation'.Annotation[], javax.ws.rs.ext.MessageBodyWriter)
    {
        org.apache.cxf.jaxrs.model.wadl.XMLName $r17;
        javax.ws.rs.ext.MessageBodyWriter r2, r15;
        java.lang.'annotation'.Annotation[] r3;
        org.apache.cxf.jaxrs.model.ResourceTypes r5;
        javax.ws.rs.core.MediaType $r4;
        java.util.Map $r6, $r9, $r10, $r12;
        java.lang.String $r11;
        org.apache.cxf.jaxrs.provider.JAXBElementProvider $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7;
        java.lang.reflect.Type r7;
        java.lang.Class $r0, $r1, $r8, r14;
        java.lang.Object $r16;
        javax.xml.namespace.QName $r18;

        r14 := @parameter0: java.lang.Class;

        r7 := @parameter1: java.lang.reflect.Type;

        r5 := @parameter2: org.apache.cxf.jaxrs.model.ResourceTypes;

        r3 := @parameter3: java.lang.'annotation'.Annotation[];

        r2 := @parameter4: javax.ws.rs.ext.MessageBodyWriter;

        z7 = 0;

        $z0 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: boolean isSupportedCollectionOrArray(java.lang.Class)>(r14);

        if $z0 == 0 goto label1;

        r14 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.Class getActualType(java.lang.reflect.Type)>(r7);

        z7 = 1;

     label1:
        if r14 == null goto label2;

        $z1 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: boolean isPrimitive(java.lang.Class)>(r14);

        if $z1 != 0 goto label2;

        $r0 = class "Ljavax/xml/bind/JAXBElement;";

        $z2 = virtualinvoke $r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r14);

        if $z2 != 0 goto label2;

        $r1 = class "Ljavax/ws/rs/core/Response;";

        $z3 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r14);

        if $z3 != 0 goto label2;

        $z4 = virtualinvoke r14.<java.lang.Class: boolean isInterface()>();

        if $z4 == 0 goto label3;

     label2:
        return;

     label3:
        r15 = r2;

        if r2 != null goto label4;

        $r13 = new org.apache.cxf.jaxrs.provider.JAXBElementProvider;

        specialinvoke $r13.<org.apache.cxf.jaxrs.provider.JAXBElementProvider: void <init>()>();

        r15 = $r13;

     label4:
        $r4 = <javax.ws.rs.core.MediaType: javax.ws.rs.core.MediaType APPLICATION_XML_TYPE>;

        $z5 = interfaceinvoke r15.<javax.ws.rs.ext.MessageBodyWriter: boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)>(r14, r14, r3, $r4);

        if $z5 == 0 goto label9;

        $r6 = virtualinvoke r5.<org.apache.cxf.jaxrs.model.ResourceTypes: java.util.Map getAllTypes()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r14, r14);

        $r8 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: java.lang.Class getActualType(java.lang.reflect.Type)>(r7);

        if $r8 == r14 goto label5;

        if $r8 == null goto label5;

        if $r8 == class "Ljava/lang/Object;" goto label5;

        $z6 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: boolean isSupportedCollectionOrArray(java.lang.Class)>($r8);

        if $z6 != 0 goto label5;

        $r12 = virtualinvoke r5.<org.apache.cxf.jaxrs.model.ResourceTypes: java.util.Map getAllTypes()>();

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r8);

     label5:
        $r16 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.Object getAnnotation(java.lang.'annotation'.Annotation[],java.lang.Class)>(r3, class "Lorg/apache/cxf/jaxrs/model/wadl/XMLName;");

        $r17 = (org.apache.cxf.jaxrs.model.wadl.XMLName) $r16;

        if $r17 == null goto label6;

        $r11 = interfaceinvoke $r17.<org.apache.cxf.jaxrs.model.wadl.XMLName: java.lang.String value()>();

        $r18 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.xml.namespace.QName convertStringToQName(java.lang.String)>($r11);

        goto label7;

     label6:
        $r18 = null;

     label7:
        if z7 == 0 goto label8;

        $r10 = virtualinvoke r5.<org.apache.cxf.jaxrs.model.ResourceTypes: java.util.Map getCollectionMap()>();

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r14, $r18);

        goto label9;

     label8:
        $r9 = virtualinvoke r5.<org.apache.cxf.jaxrs.model.ResourceTypes: java.util.Map getXmlNameMap()>();

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r14, $r18);

     label9:
        return;
    }

    private static org.apache.cxf.jaxrs.model.UserResource getResourceFromElement(org.w3c.dom.Element)
    {
        org.apache.cxf.jaxrs.model.UserOperation $r11;
        java.util.Iterator $r8;
        org.apache.cxf.jaxrs.model.UserResource $r0;
        java.util.ArrayList $r7;
        java.util.List $r6;
        org.w3c.dom.Element r1, r10;
        int $i0;
        java.lang.Object $r9;
        java.lang.String $r2, $r3, $r4, $r5;
        boolean $z0;

        r1 := @parameter0: org.w3c.dom.Element;

        $r0 = new org.apache.cxf.jaxrs.model.UserResource;

        specialinvoke $r0.<org.apache.cxf.jaxrs.model.UserResource: void <init>()>();

        $r2 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("name");

        virtualinvoke $r0.<org.apache.cxf.jaxrs.model.UserResource: void setName(java.lang.String)>($r2);

        $r3 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("path");

        virtualinvoke $r0.<org.apache.cxf.jaxrs.model.UserResource: void setPath(java.lang.String)>($r3);

        $r4 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("consumes");

        virtualinvoke $r0.<org.apache.cxf.jaxrs.model.UserResource: void setConsumes(java.lang.String)>($r4);

        $r5 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("produces");

        virtualinvoke $r0.<org.apache.cxf.jaxrs.model.UserResource: void setProduces(java.lang.String)>($r5);

        $r6 = staticinvoke <org.apache.cxf.helpers.DOMUtils: java.util.List findAllElementsByTagNameNS(org.w3c.dom.Element,java.lang.String,java.lang.String)>(r1, "http://cxf.apache.org/jaxrs", "operation");

        $r7 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i0);

        $r8 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.w3c.dom.Element) $r9;

        $r11 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: org.apache.cxf.jaxrs.model.UserOperation getOperationFromElement(org.w3c.dom.Element)>(r10);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label1;

     label2:
        virtualinvoke $r0.<org.apache.cxf.jaxrs.model.UserResource: void setOperations(java.util.List)>($r7);

        return $r0;
    }

    private static org.apache.cxf.jaxrs.model.UserOperation getOperationFromElement(org.w3c.dom.Element)
    {
        org.apache.cxf.jaxrs.model.Parameter $r12;
        java.util.ArrayList $r9;
        int $i0, $i1, i2;
        java.lang.Boolean $r16;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r13, $r14, $r15, $r17;
        boolean $z0, $z1;
        org.apache.cxf.jaxrs.model.UserOperation $r0;
        java.util.List $r8;
        org.w3c.dom.Element r1, r11;
        java.lang.Object $r10;

        r1 := @parameter0: org.w3c.dom.Element;

        $r0 = new org.apache.cxf.jaxrs.model.UserOperation;

        specialinvoke $r0.<org.apache.cxf.jaxrs.model.UserOperation: void <init>()>();

        $r2 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("name");

        virtualinvoke $r0.<org.apache.cxf.jaxrs.model.UserOperation: void setName(java.lang.String)>($r2);

        $r3 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("verb");

        virtualinvoke $r0.<org.apache.cxf.jaxrs.model.UserOperation: void setVerb(java.lang.String)>($r3);

        $r4 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("path");

        virtualinvoke $r0.<org.apache.cxf.jaxrs.model.UserOperation: void setPath(java.lang.String)>($r4);

        $r5 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("oneway");

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r5);

        virtualinvoke $r0.<org.apache.cxf.jaxrs.model.UserOperation: void setOneway(boolean)>($z0);

        $r6 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("consumes");

        virtualinvoke $r0.<org.apache.cxf.jaxrs.model.UserOperation: void setConsumes(java.lang.String)>($r6);

        $r7 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("produces");

        virtualinvoke $r0.<org.apache.cxf.jaxrs.model.UserOperation: void setProduces(java.lang.String)>($r7);

        $r8 = staticinvoke <org.apache.cxf.helpers.DOMUtils: java.util.List findAllElementsByTagNameNS(org.w3c.dom.Element,java.lang.String,java.lang.String)>(r1, "http://cxf.apache.org/jaxrs", "param");

        $r9 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i0);

        i2 = 0;

     label1:
        $i1 = interfaceinvoke $r8.<java.util.List: int size()>();

        if i2 >= $i1 goto label2;

        $r10 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i2);

        r11 = (org.w3c.dom.Element) $r10;

        $r12 = new org.apache.cxf.jaxrs.model.Parameter;

        $r13 = interfaceinvoke r11.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("type");

        $r14 = interfaceinvoke r11.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("name");

        specialinvoke $r12.<org.apache.cxf.jaxrs.model.Parameter: void <init>(java.lang.String,int,java.lang.String)>($r13, i2, $r14);

        $r15 = interfaceinvoke r11.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("encoded");

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r15);

        $z1 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r12.<org.apache.cxf.jaxrs.model.Parameter: void setEncoded(boolean)>($z1);

        $r17 = interfaceinvoke r11.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("defaultValue");

        virtualinvoke $r12.<org.apache.cxf.jaxrs.model.Parameter: void setDefaultValue(java.lang.String)>($r17);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r12);

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<org.apache.cxf.jaxrs.model.UserOperation: void setParameters(java.util.List)>($r9);

        return $r0;
    }

    public static java.lang.Object[] createConstructorArguments(java.lang.reflect.Constructor, org.apache.cxf.message.Message)
    {
        java.lang.Object[] $r19;
        java.lang.'annotation'.Annotation[] $r7, $r10, $r12;
        org.apache.cxf.jaxrs.model.Parameter $r11;
        java.lang.reflect.Constructor r0;
        int $i0, i1, $i2;
        java.lang.'annotation'.Annotation[][] $r2;
        org.apache.cxf.message.Message r4;
        java.lang.Class[] $r1;
        javax.ws.rs.core.MultivaluedMap r6, $r20;
        java.lang.reflect.Type $r13, $r17;
        java.lang.reflect.Type[] $r3;
        java.lang.Object $r5, $r8, $r15, $r18;
        java.lang.Class $r9, $r14, $r16;

        r0 := @parameter0: java.lang.reflect.Constructor;

        r4 := @parameter1: org.apache.cxf.message.Message;

        $r1 = virtualinvoke r0.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $r2 = virtualinvoke r0.<java.lang.reflect.Constructor: java.lang.'annotation'.Annotation[][] getParameterAnnotations()>();

        $r3 = virtualinvoke r0.<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>();

        if r4 != null goto label1;

        $r20 = null;

        goto label2;

     label1:
        $r5 = interfaceinvoke r4.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("jaxrs.template.parameters");

        $r20 = (javax.ws.rs.core.MultivaluedMap) $r5;

     label2:
        r6 = $r20;

        $i0 = lengthof $r1;

        $r19 = newarray (java.lang.Object)[$i0];

        i1 = 0;

     label3:
        $i2 = lengthof $r1;

        if i1 >= $i2 goto label6;

        $r7 = $r2[i1];

        $r8 = staticinvoke <org.apache.cxf.jaxrs.utils.AnnotationUtils: java.lang.Object getAnnotation(java.lang.'annotation'.Annotation[],java.lang.Class)>($r7, class "Ljavax/ws/rs/core/Context;");

        if $r8 == null goto label4;

        $r17 = $r3[i1];

        $r16 = $r1[i1];

        $r18 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.Object createContextValue(org.apache.cxf.message.Message,java.lang.reflect.Type,java.lang.Class)>(r4, $r17, $r16);

        $r19[i1] = $r18;

        goto label5;

     label4:
        $r10 = $r2[i1];

        $r9 = $r1[i1];

        $r11 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: org.apache.cxf.jaxrs.model.Parameter getParameter(int,java.lang.'annotation'.Annotation[],java.lang.Class)>(i1, $r10, $r9);

        $r14 = $r1[i1];

        $r13 = $r3[i1];

        $r12 = $r2[i1];

        $r15 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.lang.Object createHttpParameterValue(org.apache.cxf.jaxrs.model.Parameter,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo)>($r11, $r14, $r13, $r12, r4, r6, null);

        $r19[i1] = $r15;

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        return $r19;
    }

    public static org.apache.cxf.jaxrs.JAXRSServerFactoryBean createApplication(javax.ws.rs.core.Application, boolean)
    {
        javax.ws.rs.core.Application r0;
        org.apache.cxf.jaxrs.JAXRSServerFactoryBean $r1;
        boolean z0;

        r0 := @parameter0: javax.ws.rs.core.Application;

        z0 := @parameter1: boolean;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: org.apache.cxf.jaxrs.JAXRSServerFactoryBean createApplication(javax.ws.rs.core.Application,boolean,boolean)>(r0, z0, 0);

        return $r1;
    }

    public static org.apache.cxf.jaxrs.JAXRSServerFactoryBean createApplication(javax.ws.rs.core.Application, boolean, boolean)
    {
        org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider $r29;
        org.apache.cxf.jaxrs.lifecycle.ResourceProvider $r16;
        javax.ws.rs.core.Application r0;
        boolean $z0, $z1, z2, z3, $z4, $z5, $z6, $z7, $z8;
        java.util.Set $r1, $r5, $r9;
        java.lang.'annotation'.Annotation $r21, $r24;
        java.lang.StringBuilder $r17, $r18, $r19, $r33, $r34, $r36, $r37;
        org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider $r27;
        java.lang.Throwable $r31;
        java.util.HashMap $r4;
        java.util.ArrayList $r2, $r3;
        java.lang.String $r35, $r38, r40;
        java.util.Map$Entry r12;
        org.apache.cxf.jaxrs.JAXRSServerFactoryBean $r8;
        java.util.Iterator $r6, $r7, $r10;
        javax.ws.rs.ApplicationPath r41;
        java.lang.RuntimeException $r32;
        java.lang.Object $r11, $r13, $r15, $r22, $r28, $r30;
        java.lang.Class $r14, $r20, $r23, $r25, $r26, r39;

        r0 := @parameter0: javax.ws.rs.core.Application;

        z2 := @parameter1: boolean;

        z3 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<javax.ws.rs.core.Application: java.util.Set getSingletons()>();

        staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: void verifySingletons(java.util.Set)>($r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r5 = virtualinvoke r0.<javax.ws.rs.core.Application: java.util.Set getClasses()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r28 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r39 = (java.lang.Class) $r28;

        $z4 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: boolean isValidApplicationClass(java.lang.Class,java.util.Set)>(r39, $r1);

        if $z4 == 0 goto label06;

        $z5 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: boolean isValidProvider(java.lang.Class)>(r39);

        if $z5 == 0 goto label05;

     label02:
        $r30 = virtualinvoke r39.<java.lang.Class: java.lang.Object newInstance()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r30);

     label03:
        goto label06;

     label04:
        $r31 := @caughtexception;

        $r32 = new java.lang.RuntimeException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");

        $r35 = virtualinvoke r39.<java.lang.Class: java.lang.String getName()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can not be created");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r38, $r31);

        throw $r32;

     label05:
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r39);

        $r29 = new org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider;

        specialinvoke $r29.<org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider: void <init>(java.lang.Class)>(r39);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r39, $r29);

     label06:
        goto label01;

     label07:
        $r7 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r22 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r23 = virtualinvoke $r22.<java.lang.Object: java.lang.Class getClass()>();

        $r24 = virtualinvoke $r23.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljavax/ws/rs/ext/Provider;");

        if $r24 == null goto label09;

        $z6 = 1;

        goto label10;

     label09:
        $z6 = 0;

     label10:
        if $z6 == 0 goto label11;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r22);

        goto label12;

     label11:
        $r25 = virtualinvoke $r22.<java.lang.Object: java.lang.Class getClass()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r25);

        $r26 = virtualinvoke $r22.<java.lang.Object: java.lang.Class getClass()>();

        $r27 = new org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider;

        specialinvoke $r27.<org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider: void <init>(java.lang.Object)>($r22);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, $r27);

     label12:
        goto label08;

     label13:
        $r8 = new org.apache.cxf.jaxrs.JAXRSServerFactoryBean;

        specialinvoke $r8.<org.apache.cxf.jaxrs.JAXRSServerFactoryBean: void <init>()>();

        r40 = "/";

        if z2 != 0 goto label14;

        $r20 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r21 = virtualinvoke $r20.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljavax/ws/rs/ApplicationPath;");

        r41 = (javax.ws.rs.ApplicationPath) $r21;

        if r41 == null goto label14;

        r40 = interfaceinvoke r41.<javax.ws.rs.ApplicationPath: java.lang.String value()>();

     label14:
        $z7 = virtualinvoke r40.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z7 != 0 goto label15;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

        r40 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label15:
        virtualinvoke $r8.<org.apache.cxf.jaxrs.JAXRSServerFactoryBean: void setAddress(java.lang.String)>(r40);

        virtualinvoke $r8.<org.apache.cxf.jaxrs.JAXRSServerFactoryBean: void setStaticSubresourceResolution(boolean)>(z3);

        virtualinvoke $r8.<org.apache.cxf.jaxrs.JAXRSServerFactoryBean: void setResourceClasses(java.util.List)>($r2);

        virtualinvoke $r8.<org.apache.cxf.jaxrs.JAXRSServerFactoryBean: void setProviders(java.util.List)>($r3);

        $r9 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        $r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label16:
        $z8 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label17;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.util.Map$Entry) $r11;

        $r13 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r14 = (java.lang.Class) $r13;

        $r15 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r16 = (org.apache.cxf.jaxrs.lifecycle.ResourceProvider) $r15;

        virtualinvoke $r8.<org.apache.cxf.jaxrs.JAXRSServerFactoryBean: void setResourceProvider(java.lang.Class,org.apache.cxf.jaxrs.lifecycle.ResourceProvider)>($r14, $r16);

        goto label16;

     label17:
        virtualinvoke $r8.<org.apache.cxf.jaxrs.JAXRSServerFactoryBean: void setApplication(javax.ws.rs.core.Application)>(r0);

        return $r8;

        catch java.lang.Throwable from label02 to label03 with label04;
    }

    private static boolean isValidProvider(java.lang.Class)
    {
        java.lang.Class[] $r2;
        java.util.Set $r5;
        java.lang.'annotation'.Annotation $r1;
        int i0, i1;
        java.lang.Class r0, $r3, r4;
        java.lang.String $r6;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Class;

        if r0 == null goto label1;

        if r0 != class "Ljava/lang/Object;" goto label2;

     label1:
        return 0;

     label2:
        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljavax/ws/rs/ext/Provider;");

        if $r1 == null goto label3;

        return 1;

     label3:
        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        i0 = lengthof $r2;

        i1 = 0;

     label4:
        if i1 >= i0 goto label6;

        r4 = $r2[i1];

        $r5 = <org.apache.cxf.jaxrs.utils.ResourceUtils: java.util.Set SERVER_PROVIDER_CLASS_NAMES>;

        $r6 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>();

        $z1 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>($r6);

        if $z1 == 0 goto label5;

        return 1;

     label5:
        i1 = i1 + 1;

        goto label4;

     label6:
        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.Class getSuperclass()>();

        $z0 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: boolean isValidProvider(java.lang.Class)>($r3);

        return $z0;
    }

    private static void verifySingletons(java.util.Set)
    {
        java.util.HashSet $r1;
        java.lang.String $r5, $r7, $r12, $r15;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r2;
        java.util.Set r0;
        java.lang.RuntimeException $r8;
        java.lang.Object $r3;
        java.lang.Class $r4, $r6, $r11;
        java.lang.StringBuilder $r9, $r10, $r13, $r14;

        r0 := @parameter0: java.util.Set;

        $z0 = interfaceinvoke r0.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r2 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $z2 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r5);

        if $z2 == 0 goto label3;

        $r8 = new java.lang.RuntimeException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("More than one instance of the same singleton class ");

        $r11 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is available");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r15);

        throw $r8;

     label3:
        $r6 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r7);

        goto label2;

     label4:
        return;
    }

    public static boolean isValidResourceClass(java.lang.Class)
    {
        java.util.logging.Logger $r2;
        int $i0;
        java.lang.Class r0;
        java.lang.StringBuilder $r1, $r3, $r5;
        java.lang.String $r4, $r6;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Class;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isInterface()>();

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke r0.<java.lang.Class: int getModifiers()>();

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isAbstract(int)>($i0);

        if $z1 == 0 goto label2;

     label1:
        $r2 = <org.apache.cxf.jaxrs.utils.ResourceUtils: java.util.logging.Logger LOG>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring invalid resource class ");

        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.util.logging.Logger: void info(java.lang.String)>($r6);

        return 0;

     label2:
        return 1;
    }

    private static boolean isValidApplicationClass(java.lang.Class, java.util.Set)
    {
        java.util.Iterator $r2;
        java.util.Set r1;
        java.util.logging.Logger $r6;
        java.lang.Class r0, $r4;
        java.lang.Object $r3;
        java.lang.StringBuilder $r5, $r7, $r9, $r10;
        java.lang.String $r8, $r11;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.util.Set;

        $z0 = staticinvoke <org.apache.cxf.jaxrs.utils.ResourceUtils: boolean isValidResourceClass(java.lang.Class)>(r0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        if r0 != $r4 goto label3;

        $r6 = <org.apache.cxf.jaxrs.utils.ResourceUtils: java.util.logging.Logger LOG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring per-request resource class ");

        $r8 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as it is also registered as singleton");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.util.logging.Logger: void info(java.lang.String)>($r11);

        return 0;

     label3:
        goto label2;

     label4:
        return 1;
    }

    public static javax.xml.bind.JAXBContext createJaxbContext(java.util.Set, java.lang.Class[], java.util.Map)
    {
        java.lang.Object[] $r3;
        java.util.Set r0;
        java.lang.Class[] r1, $r2, $r5;
        java.util.logging.Logger $r8;
        javax.xml.bind.JAXBException $r7;
        java.util.Map r4;
        int $i0;
        javax.xml.bind.JAXBContext $r6;
        boolean $z0;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: java.lang.Class[];

        r4 := @parameter2: java.util.Map;

        if r0 == null goto label1;

        $z0 = interfaceinvoke r0.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        staticinvoke <org.apache.cxf.common.jaxb.JAXBUtils: void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)>(r0, r1, null);

     label3:
        $i0 = interfaceinvoke r0.<java.util.Set: int size()>();

        $r2 = newarray (java.lang.Class)[$i0];

        $r3 = interfaceinvoke r0.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r5 = (java.lang.Class[]) $r3;

        $r6 = staticinvoke <javax.xml.bind.JAXBContext: javax.xml.bind.JAXBContext newInstance(java.lang.Class[],java.util.Map)>($r5, r4);

     label4:
        return $r6;

     label5:
        $r7 := @caughtexception;

        $r8 = <org.apache.cxf.jaxrs.utils.ResourceUtils: java.util.logging.Logger LOG>;

        virtualinvoke $r8.<java.util.logging.Logger: void fine(java.lang.String)>("No JAXB context can be created");

        return null;

        catch javax.xml.bind.JAXBException from label3 to label4 with label5;
    }

    static void <clinit>()
    {
        java.util.Set $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        java.util.logging.Logger $r0;
        java.util.HashSet $r2;
        java.util.ResourceBundle $r1;

        <org.apache.cxf.jaxrs.utils.ResourceUtils: java.lang.String CLASSPATH_PREFIX> = "classpath:";

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/utils/ResourceUtils;");

        <org.apache.cxf.jaxrs.utils.ResourceUtils: java.util.logging.Logger LOG> = $r0;

        $r1 = staticinvoke <org.apache.cxf.common.i18n.BundleUtils: java.util.ResourceBundle getBundle(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/utils/ResourceUtils;");

        <org.apache.cxf.jaxrs.utils.ResourceUtils: java.util.ResourceBundle BUNDLE> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        <org.apache.cxf.jaxrs.utils.ResourceUtils: java.util.Set SERVER_PROVIDER_CLASS_NAMES> = $r2;

        $r3 = <org.apache.cxf.jaxrs.utils.ResourceUtils: java.util.Set SERVER_PROVIDER_CLASS_NAMES>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>("javax.ws.rs.ext.MessageBodyWriter");

        $r4 = <org.apache.cxf.jaxrs.utils.ResourceUtils: java.util.Set SERVER_PROVIDER_CLASS_NAMES>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>("javax.ws.rs.ext.MessageBodyReader");

        $r5 = <org.apache.cxf.jaxrs.utils.ResourceUtils: java.util.Set SERVER_PROVIDER_CLASS_NAMES>;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>("javax.ws.rs.ext.ExceptionMapper");

        $r6 = <org.apache.cxf.jaxrs.utils.ResourceUtils: java.util.Set SERVER_PROVIDER_CLASS_NAMES>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>("javax.ws.rs.ext.ContextResolver");

        $r7 = <org.apache.cxf.jaxrs.utils.ResourceUtils: java.util.Set SERVER_PROVIDER_CLASS_NAMES>;

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>("javax.ws.rs.ext.ReaderInterceptor");

        $r8 = <org.apache.cxf.jaxrs.utils.ResourceUtils: java.util.Set SERVER_PROVIDER_CLASS_NAMES>;

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>("javax.ws.rs.ext.WriterInterceptor");

        $r9 = <org.apache.cxf.jaxrs.utils.ResourceUtils: java.util.Set SERVER_PROVIDER_CLASS_NAMES>;

        interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>("javax.ws.rs.ext.ParamConverterProvider");

        $r10 = <org.apache.cxf.jaxrs.utils.ResourceUtils: java.util.Set SERVER_PROVIDER_CLASS_NAMES>;

        interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>("javax.ws.rs.container.ContainerRequestFilter");

        $r11 = <org.apache.cxf.jaxrs.utils.ResourceUtils: java.util.Set SERVER_PROVIDER_CLASS_NAMES>;

        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>("javax.ws.rs.container.ContainerResponseFilter");

        $r12 = <org.apache.cxf.jaxrs.utils.ResourceUtils: java.util.Set SERVER_PROVIDER_CLASS_NAMES>;

        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>("javax.ws.rs.container.DynamicFeature");

        $r13 = <org.apache.cxf.jaxrs.utils.ResourceUtils: java.util.Set SERVER_PROVIDER_CLASS_NAMES>;

        interfaceinvoke $r13.<java.util.Set: boolean add(java.lang.Object)>("org.apache.cxf.jaxrs.ext.ContextResolver");

        return;
    }
}
