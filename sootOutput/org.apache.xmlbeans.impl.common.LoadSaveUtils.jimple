public class org.apache.xmlbeans.impl.common.LoadSaveUtils extends java.lang.Object
{

    public void <init>()
    {
        org.apache.xmlbeans.impl.common.LoadSaveUtils r0;

        r0 := @this: org.apache.xmlbeans.impl.common.LoadSaveUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.w3c.dom.Document xmlText2GenericDom(java.io.InputStream, org.w3c.dom.Document) throws org.xml.sax.SAXException, javax.xml.parsers.ParserConfigurationException, java.io.IOException
    {
        org.apache.xmlbeans.impl.common.Sax2Dom $r2;
        org.w3c.dom.Document r3, $r6;
        org.w3c.dom.Node $r5;
        javax.xml.parsers.SAXParserFactory $r0;
        javax.xml.parsers.SAXParser $r1;
        java.io.InputStream r4;

        r4 := @parameter0: java.io.InputStream;

        r3 := @parameter1: org.w3c.dom.Document;

        $r0 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

        virtualinvoke $r0.<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)>(1);

        $r1 = virtualinvoke $r0.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        $r2 = new org.apache.xmlbeans.impl.common.Sax2Dom;

        specialinvoke $r2.<org.apache.xmlbeans.impl.common.Sax2Dom: void <init>(org.w3c.dom.Node)>(r3);

        virtualinvoke $r1.<javax.xml.parsers.SAXParser: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/properties/lexical-handler", $r2);

        virtualinvoke $r1.<javax.xml.parsers.SAXParser: void parse(java.io.InputStream,org.xml.sax.helpers.DefaultHandler)>(r4, $r2);

        $r5 = virtualinvoke $r2.<org.apache.xmlbeans.impl.common.Sax2Dom: org.w3c.dom.Node getDOM()>();

        $r6 = (org.w3c.dom.Document) $r5;

        return $r6;
    }

    public static void xmlStreamReader2XmlText(javax.xml.stream.XMLStreamReader, java.io.OutputStream) throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.XMLStreamReader r3;
        javax.xml.stream.XMLStreamWriter $r2;
        boolean $z0;
        int $i0, $i1, $i2, i3, i4, $i6;
        java.lang.String $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28;
        java.io.OutputStream r1;
        javax.xml.stream.XMLOutputFactory $r0;

        r3 := @parameter0: javax.xml.stream.XMLStreamReader;

        r1 := @parameter1: java.io.OutputStream;

        $r0 = staticinvoke <javax.xml.stream.XMLOutputFactory: javax.xml.stream.XMLOutputFactory newInstance()>();

        $r2 = virtualinvoke $r0.<javax.xml.stream.XMLOutputFactory: javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream)>(r1);

     label01:
        $z0 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: boolean hasNext()>();

        if $z0 == 0 goto label25;

        $i0 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: int getEventType()>();

        tableswitch($i0)
        {
            case 1: goto label16;
            case 2: goto label08;
            case 3: goto label13;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label14;
            case 7: goto label15;
            case 8: goto label07;
            case 9: goto label10;
            case 10: goto label02;
            case 11: goto label06;
            case 12: goto label03;
            case 13: goto label11;
            case 14: goto label12;
            case 15: goto label09;
            default: goto label24;
        };

     label02:
        $r8 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getPrefix()>();

        $r9 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespaceURI()>();

        $r10 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getLocalName()>();

        $r11 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r8, $r9, $r10, $r11);

        goto label24;

     label03:
        $r6 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void writeCData(java.lang.String)>($r6);

        goto label24;

     label04:
        $r15 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>($r15);

        goto label24;

     label05:
        $r14 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void writeComment(java.lang.String)>($r14);

        goto label24;

     label06:
        $r7 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void writeDTD(java.lang.String)>($r7);

        goto label24;

     label07:
        interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void writeEndDocument()>();

        goto label24;

     label08:
        interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void writeEndElement()>();

        goto label24;

     label09:
        goto label24;

     label10:
        $r12 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void writeEntityRef(java.lang.String)>($r12);

        goto label24;

     label11:
        $r4 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getPrefix()>();

        $r5 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespaceURI()>();

        interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void writeNamespace(java.lang.String,java.lang.String)>($r4, $r5);

        goto label24;

     label12:
        goto label24;

     label13:
        $r16 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getPITarget()>();

        $r17 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getPIData()>();

        interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void writeProcessingInstruction(java.lang.String,java.lang.String)>($r16, $r17);

        goto label24;

     label14:
        $r13 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>($r13);

        goto label24;

     label15:
        interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void writeStartDocument()>();

        goto label24;

     label16:
        $r18 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getPrefix()>();

        if $r18 != null goto label17;

        $r27 = "";

        goto label18;

     label17:
        $r27 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getPrefix()>();

     label18:
        $r19 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getLocalName()>();

        $r20 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespaceURI()>();

        interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>($r27, $r19, $r20);

        $i1 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: int getAttributeCount()>();

        i3 = $i1 - 1;

     label19:
        if i3 < 0 goto label22;

        $r23 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributePrefix(int)>(i3);

        if $r23 != null goto label20;

        $r28 = "";

        goto label21;

     label20:
        $r28 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributePrefix(int)>(i3);

     label21:
        $r24 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeNamespace(int)>(i3);

        $r25 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeLocalName(int)>(i3);

        $r26 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeValue(int)>(i3);

        interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r28, $r24, $r25, $r26);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label19;

     label22:
        $i2 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: int getNamespaceCount()>();

        i4 = 0;

     label23:
        if i4 >= $i2 goto label24;

        $r21 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespacePrefix(int)>(i4);

        $r22 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespaceURI(int)>(i4);

        interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void writeNamespace(java.lang.String,java.lang.String)>($r21, $r22);

        i4 = i4 + 1;

        goto label23;

     label24:
        interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: int next()>();

        goto label01;

     label25:
        interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void flush()>();

        return;
    }
}
