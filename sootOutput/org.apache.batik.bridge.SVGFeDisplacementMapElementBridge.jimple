public class org.apache.batik.bridge.SVGFeDisplacementMapElementBridge extends org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge
{

    public void <init>()
    {
        org.apache.batik.bridge.SVGFeDisplacementMapElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGFeDisplacementMapElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: void <init>()>();

        return;
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.bridge.SVGFeDisplacementMapElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGFeDisplacementMapElementBridge;

        return "feDisplacementMap";
    }

    public org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.w3c.dom.Element, org.apache.batik.gvt.GraphicsNode, org.apache.batik.ext.awt.image.renderable.Filter, java.awt.geom.Rectangle2D, java.util.Map)
    {
        java.awt.geom.Rectangle2D $r12, r14, $r15, r16, $r17;
        java.util.ArrayList $r20;
        org.apache.batik.ext.awt.image.PadMode $r19, $r23;
        java.util.Map r9;
        double $d0;
        org.apache.batik.gvt.GraphicsNode r7;
        org.apache.batik.ext.awt.image.ARGBChannel $r2, $r3, $r4, $r5;
        org.apache.batik.ext.awt.image.renderable.DisplacementMapRable8Bit $r21;
        org.apache.batik.bridge.BridgeContext r1;
        org.apache.batik.ext.awt.image.renderable.Filter r8, $r10, $r11;
        org.apache.batik.ext.awt.image.renderable.PadRable8Bit $r18, $r22;
        org.w3c.dom.Element r0, r6;
        org.apache.batik.bridge.SVGFeDisplacementMapElementBridge r24;
        float $f0;
        java.lang.Object $r13;

        r24 := @this: org.apache.batik.bridge.SVGFeDisplacementMapElementBridge;

        r1 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r0 := @parameter1: org.w3c.dom.Element;

        r6 := @parameter2: org.w3c.dom.Element;

        r7 := @parameter3: org.apache.batik.gvt.GraphicsNode;

        r8 := @parameter4: org.apache.batik.ext.awt.image.renderable.Filter;

        r16 := @parameter5: java.awt.geom.Rectangle2D;

        r9 := @parameter6: java.util.Map;

        $f0 = staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: float convertNumber(org.w3c.dom.Element,java.lang.String,float,org.apache.batik.bridge.BridgeContext)>(r0, "scale", 0.0F, r1);

        $r2 = <org.apache.batik.ext.awt.image.ARGBChannel: org.apache.batik.ext.awt.image.ARGBChannel A>;

        $r3 = staticinvoke <org.apache.batik.bridge.SVGFeDisplacementMapElementBridge: org.apache.batik.ext.awt.image.ARGBChannel convertChannelSelector(org.w3c.dom.Element,java.lang.String,org.apache.batik.ext.awt.image.ARGBChannel,org.apache.batik.bridge.BridgeContext)>(r0, "xChannelSelector", $r2, r1);

        $r4 = <org.apache.batik.ext.awt.image.ARGBChannel: org.apache.batik.ext.awt.image.ARGBChannel A>;

        $r5 = staticinvoke <org.apache.batik.bridge.SVGFeDisplacementMapElementBridge: org.apache.batik.ext.awt.image.ARGBChannel convertChannelSelector(org.w3c.dom.Element,java.lang.String,org.apache.batik.ext.awt.image.ARGBChannel,org.apache.batik.bridge.BridgeContext)>(r0, "yChannelSelector", $r4, r1);

        $r10 = staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: org.apache.batik.ext.awt.image.renderable.Filter getIn(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)>(r0, r6, r7, r8, r9, r1);

        if $r10 != null goto label1;

        return null;

     label1:
        $r11 = staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: org.apache.batik.ext.awt.image.renderable.Filter getIn2(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)>(r0, r6, r7, r8, r9, r1);

        if $r11 != null goto label2;

        return null;

     label2:
        $r12 = interfaceinvoke $r10.<org.apache.batik.ext.awt.image.renderable.Filter: java.awt.geom.Rectangle2D getBounds2D()>();

        $r13 = virtualinvoke $r12.<java.awt.geom.RectangularShape: java.lang.Object clone()>();

        r14 = (java.awt.geom.Rectangle2D) $r13;

        $r15 = interfaceinvoke $r11.<org.apache.batik.ext.awt.image.renderable.Filter: java.awt.geom.Rectangle2D getBounds2D()>();

        virtualinvoke r14.<java.awt.geom.Rectangle2D: void add(java.awt.geom.Rectangle2D)>($r15);

        $r17 = staticinvoke <org.apache.batik.bridge.SVGUtilities: java.awt.geom.Rectangle2D convertFilterPrimitiveRegion(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.apache.batik.bridge.BridgeContext)>(r0, r6, r7, r14, r16, r1);

        $r18 = new org.apache.batik.ext.awt.image.renderable.PadRable8Bit;

        $r19 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode ZERO_PAD>;

        specialinvoke $r18.<org.apache.batik.ext.awt.image.renderable.PadRable8Bit: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)>($r10, $r17, $r19);

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>(int)>(2);

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r18);

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r21 = new org.apache.batik.ext.awt.image.renderable.DisplacementMapRable8Bit;

        $d0 = (double) $f0;

        specialinvoke $r21.<org.apache.batik.ext.awt.image.renderable.DisplacementMapRable8Bit: void <init>(java.util.List,double,org.apache.batik.ext.awt.image.ARGBChannel,org.apache.batik.ext.awt.image.ARGBChannel)>($r20, $d0, $r3, $r5);

        staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: void handleColorInterpolationFilters(org.apache.batik.ext.awt.image.renderable.Filter,org.w3c.dom.Element)>($r21, r0);

        $r22 = new org.apache.batik.ext.awt.image.renderable.PadRable8Bit;

        $r23 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode ZERO_PAD>;

        specialinvoke $r22.<org.apache.batik.ext.awt.image.renderable.PadRable8Bit: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)>($r21, $r17, $r23);

        staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: void updateFilterMap(org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)>(r0, $r22, r9);

        return $r22;
    }

    protected static org.apache.batik.ext.awt.image.ARGBChannel convertChannelSelector(org.w3c.dom.Element, java.lang.String, org.apache.batik.ext.awt.image.ARGBChannel, org.apache.batik.bridge.BridgeContext)
    {
        java.lang.Object[] $r9;
        int $i0;
        java.lang.String r1, $r2, $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3;
        org.apache.batik.bridge.BridgeException $r7;
        org.apache.batik.ext.awt.image.ARGBChannel $r10, $r11, $r12, $r13, r14;
        org.apache.batik.bridge.BridgeContext r8;
        org.w3c.dom.Element r0;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        r14 := @parameter2: org.apache.batik.ext.awt.image.ARGBChannel;

        r8 := @parameter3: org.apache.batik.bridge.BridgeContext;

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, r1);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return r14;

     label1:
        $r3 = "A";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        $r13 = <org.apache.batik.ext.awt.image.ARGBChannel: org.apache.batik.ext.awt.image.ARGBChannel A>;

        return $r13;

     label2:
        $r4 = "R";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label3;

        $r12 = <org.apache.batik.ext.awt.image.ARGBChannel: org.apache.batik.ext.awt.image.ARGBChannel R>;

        return $r12;

     label3:
        $r5 = "G";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z2 == 0 goto label4;

        $r11 = <org.apache.batik.ext.awt.image.ARGBChannel: org.apache.batik.ext.awt.image.ARGBChannel G>;

        return $r11;

     label4:
        $r6 = "B";

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z3 == 0 goto label5;

        $r10 = <org.apache.batik.ext.awt.image.ARGBChannel: org.apache.batik.ext.awt.image.ARGBChannel B>;

        return $r10;

     label5:
        $r7 = new org.apache.batik.bridge.BridgeException;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = r1;

        $r9[1] = $r2;

        specialinvoke $r7.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r8, r0, "attribute.malformed", $r9);

        throw $r7;
    }
}
