public class org.springframework.beans.support.ResourceEditorRegistrar extends java.lang.Object implements org.springframework.beans.PropertyEditorRegistrar
{
    private final org.springframework.core.io.ResourceLoader resourceLoader;

    public void <init>(org.springframework.core.io.ResourceLoader)
    {
        org.springframework.core.io.ResourceLoader r1;
        org.springframework.beans.support.ResourceEditorRegistrar r0;

        r0 := @this: org.springframework.beans.support.ResourceEditorRegistrar;

        r1 := @parameter0: org.springframework.core.io.ResourceLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.beans.support.ResourceEditorRegistrar: org.springframework.core.io.ResourceLoader resourceLoader> = r1;

        return;
    }

    public void registerCustomEditors(org.springframework.beans.PropertyEditorRegistry)
    {
        org.springframework.core.io.support.ResourceArrayPropertyEditor $r14;
        org.springframework.core.io.ResourceEditor $r0;
        org.springframework.beans.propertyeditors.FileEditor $r6;
        org.springframework.beans.PropertyEditorRegistry r3;
        org.springframework.beans.support.ResourceEditorRegistrar r1;
        org.springframework.beans.propertyeditors.InputSourceEditor $r5;
        boolean $z0;
        org.springframework.core.io.ResourceLoader $r2, $r8, $r13, $r15;
        org.springframework.beans.propertyeditors.URLEditor $r7;
        org.springframework.beans.propertyeditors.ClassEditor $r11;
        org.springframework.beans.propertyeditors.ClassArrayEditor $r12;
        org.springframework.beans.propertyeditors.InputStreamEditor $r4;
        org.springframework.beans.propertyeditors.URIEditor $r10;
        java.lang.ClassLoader $r9;
        org.springframework.core.io.support.ResourcePatternResolver $r16;

        r1 := @this: org.springframework.beans.support.ResourceEditorRegistrar;

        r3 := @parameter0: org.springframework.beans.PropertyEditorRegistry;

        $r0 = new org.springframework.core.io.ResourceEditor;

        $r2 = r1.<org.springframework.beans.support.ResourceEditorRegistrar: org.springframework.core.io.ResourceLoader resourceLoader>;

        specialinvoke $r0.<org.springframework.core.io.ResourceEditor: void <init>(org.springframework.core.io.ResourceLoader)>($r2);

        specialinvoke r1.<org.springframework.beans.support.ResourceEditorRegistrar: void doRegisterEditor(org.springframework.beans.PropertyEditorRegistry,java.lang.Class,java.beans.PropertyEditor)>(r3, class "Lorg/springframework/core/io/Resource;", $r0);

        specialinvoke r1.<org.springframework.beans.support.ResourceEditorRegistrar: void doRegisterEditor(org.springframework.beans.PropertyEditorRegistry,java.lang.Class,java.beans.PropertyEditor)>(r3, class "Lorg/springframework/core/io/ContextResource;", $r0);

        $r4 = new org.springframework.beans.propertyeditors.InputStreamEditor;

        specialinvoke $r4.<org.springframework.beans.propertyeditors.InputStreamEditor: void <init>(org.springframework.core.io.ResourceEditor)>($r0);

        specialinvoke r1.<org.springframework.beans.support.ResourceEditorRegistrar: void doRegisterEditor(org.springframework.beans.PropertyEditorRegistry,java.lang.Class,java.beans.PropertyEditor)>(r3, class "Ljava/io/InputStream;", $r4);

        $r5 = new org.springframework.beans.propertyeditors.InputSourceEditor;

        specialinvoke $r5.<org.springframework.beans.propertyeditors.InputSourceEditor: void <init>(org.springframework.core.io.ResourceEditor)>($r0);

        specialinvoke r1.<org.springframework.beans.support.ResourceEditorRegistrar: void doRegisterEditor(org.springframework.beans.PropertyEditorRegistry,java.lang.Class,java.beans.PropertyEditor)>(r3, class "Lorg/xml/sax/InputSource;", $r5);

        $r6 = new org.springframework.beans.propertyeditors.FileEditor;

        specialinvoke $r6.<org.springframework.beans.propertyeditors.FileEditor: void <init>(org.springframework.core.io.ResourceEditor)>($r0);

        specialinvoke r1.<org.springframework.beans.support.ResourceEditorRegistrar: void doRegisterEditor(org.springframework.beans.PropertyEditorRegistry,java.lang.Class,java.beans.PropertyEditor)>(r3, class "Ljava/io/File;", $r6);

        $r7 = new org.springframework.beans.propertyeditors.URLEditor;

        specialinvoke $r7.<org.springframework.beans.propertyeditors.URLEditor: void <init>(org.springframework.core.io.ResourceEditor)>($r0);

        specialinvoke r1.<org.springframework.beans.support.ResourceEditorRegistrar: void doRegisterEditor(org.springframework.beans.PropertyEditorRegistry,java.lang.Class,java.beans.PropertyEditor)>(r3, class "Ljava/net/URL;", $r7);

        $r8 = r1.<org.springframework.beans.support.ResourceEditorRegistrar: org.springframework.core.io.ResourceLoader resourceLoader>;

        $r9 = interfaceinvoke $r8.<org.springframework.core.io.ResourceLoader: java.lang.ClassLoader getClassLoader()>();

        $r10 = new org.springframework.beans.propertyeditors.URIEditor;

        specialinvoke $r10.<org.springframework.beans.propertyeditors.URIEditor: void <init>(java.lang.ClassLoader)>($r9);

        specialinvoke r1.<org.springframework.beans.support.ResourceEditorRegistrar: void doRegisterEditor(org.springframework.beans.PropertyEditorRegistry,java.lang.Class,java.beans.PropertyEditor)>(r3, class "Ljava/net/URI;", $r10);

        $r11 = new org.springframework.beans.propertyeditors.ClassEditor;

        specialinvoke $r11.<org.springframework.beans.propertyeditors.ClassEditor: void <init>(java.lang.ClassLoader)>($r9);

        specialinvoke r1.<org.springframework.beans.support.ResourceEditorRegistrar: void doRegisterEditor(org.springframework.beans.PropertyEditorRegistry,java.lang.Class,java.beans.PropertyEditor)>(r3, class "Ljava/lang/Class;", $r11);

        $r12 = new org.springframework.beans.propertyeditors.ClassArrayEditor;

        specialinvoke $r12.<org.springframework.beans.propertyeditors.ClassArrayEditor: void <init>(java.lang.ClassLoader)>($r9);

        specialinvoke r1.<org.springframework.beans.support.ResourceEditorRegistrar: void doRegisterEditor(org.springframework.beans.PropertyEditorRegistry,java.lang.Class,java.beans.PropertyEditor)>(r3, class "[Ljava/lang/Class;", $r12);

        $r13 = r1.<org.springframework.beans.support.ResourceEditorRegistrar: org.springframework.core.io.ResourceLoader resourceLoader>;

        $z0 = $r13 instanceof org.springframework.core.io.support.ResourcePatternResolver;

        if $z0 == 0 goto label1;

        $r14 = new org.springframework.core.io.support.ResourceArrayPropertyEditor;

        $r15 = r1.<org.springframework.beans.support.ResourceEditorRegistrar: org.springframework.core.io.ResourceLoader resourceLoader>;

        $r16 = (org.springframework.core.io.support.ResourcePatternResolver) $r15;

        specialinvoke $r14.<org.springframework.core.io.support.ResourceArrayPropertyEditor: void <init>(org.springframework.core.io.support.ResourcePatternResolver)>($r16);

        specialinvoke r1.<org.springframework.beans.support.ResourceEditorRegistrar: void doRegisterEditor(org.springframework.beans.PropertyEditorRegistry,java.lang.Class,java.beans.PropertyEditor)>(r3, class "[Lorg/springframework/core/io/Resource;", $r14);

     label1:
        return;
    }

    private void doRegisterEditor(org.springframework.beans.PropertyEditorRegistry, java.lang.Class, java.beans.PropertyEditor)
    {
        java.beans.PropertyEditor r2;
        org.springframework.beans.PropertyEditorRegistrySupport $r3;
        org.springframework.beans.PropertyEditorRegistry r0;
        java.lang.Class r1;
        boolean $z0;
        org.springframework.beans.support.ResourceEditorRegistrar r4;

        r4 := @this: org.springframework.beans.support.ResourceEditorRegistrar;

        r0 := @parameter0: org.springframework.beans.PropertyEditorRegistry;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.beans.PropertyEditor;

        $z0 = r0 instanceof org.springframework.beans.PropertyEditorRegistrySupport;

        if $z0 == 0 goto label1;

        $r3 = (org.springframework.beans.PropertyEditorRegistrySupport) r0;

        virtualinvoke $r3.<org.springframework.beans.PropertyEditorRegistrySupport: void overrideDefaultEditor(java.lang.Class,java.beans.PropertyEditor)>(r1, r2);

        goto label2;

     label1:
        interfaceinvoke r0.<org.springframework.beans.PropertyEditorRegistry: void registerCustomEditor(java.lang.Class,java.beans.PropertyEditor)>(r1, r2);

     label2:
        return;
    }
}
