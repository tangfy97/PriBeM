public class org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray extends javax.swing.JPanel implements org.wiztools.restclient.ui.reqbody.ReqBodyPanel
{
    private org.wiztools.restclient.ui.RESTUserInterface rest_ui;
    private org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset;
    private javax.swing.JButton jb_body;
    private javax.swing.JTextArea jta;
    private byte[] body;
    private static final int FILE_SIZE_THRESHOLD_LIMIT_MB;

    public void <init>()
    {
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray r0;
        javax.swing.JButton $r1;
        javax.swing.ImageIcon $r2;
        javax.swing.JTextArea $r3;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray;

        specialinvoke r0.<javax.swing.JPanel: void <init>()>();

        $r1 = new javax.swing.JButton;

        $r2 = staticinvoke <org.wiztools.restclient.ui.UIUtil: javax.swing.ImageIcon getIconFromClasspath(java.lang.String)>("org/wiztools/restclient/load_from_file.png");

        specialinvoke $r1.<javax.swing.JButton: void <init>(javax.swing.Icon)>($r2);

        r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: javax.swing.JButton jb_body> = $r1;

        $r3 = new javax.swing.JTextArea;

        specialinvoke $r3.<javax.swing.JTextArea: void <init>()>();

        r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: javax.swing.JTextArea jta> = $r3;

        return;
    }

    protected void init()
    {
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray r0;
        java.awt.FlowLayout $r3;
        javax.swing.JButton $r6, $r8, $r9;
        java.awt.Font $r10;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray$1 $r7;
        java.awt.Component $r5;
        javax.swing.JScrollPane $r13;
        org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent $r4;
        javax.swing.JTextArea $r11, $r12, $r14;
        java.awt.BorderLayout $r1;
        javax.swing.JPanel $r2;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray;

        $r1 = new java.awt.BorderLayout;

        specialinvoke $r1.<java.awt.BorderLayout: void <init>()>();

        virtualinvoke r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: void setLayout(java.awt.LayoutManager)>($r1);

        $r2 = new javax.swing.JPanel;

        $r3 = new java.awt.FlowLayout;

        specialinvoke $r3.<java.awt.FlowLayout: void <init>(int)>(0);

        specialinvoke $r2.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r3);

        $r4 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset>;

        $r5 = interfaceinvoke $r4.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent: java.awt.Component getComponent()>();

        virtualinvoke $r2.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r5);

        $r6 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: javax.swing.JButton jb_body>;

        virtualinvoke $r6.<javax.swing.JButton: void setToolTipText(java.lang.String)>("Select file having body content");

        $r8 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: javax.swing.JButton jb_body>;

        $r7 = new org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray$1;

        specialinvoke $r7.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray$1: void <init>(org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray)>(r0);

        virtualinvoke $r8.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r7);

        $r9 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: javax.swing.JButton jb_body>;

        virtualinvoke $r2.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r9);

        virtualinvoke r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: void add(java.awt.Component,java.lang.Object)>($r2, "North");

        $r11 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: javax.swing.JTextArea jta>;

        $r10 = <org.wiztools.restclient.ui.UIUtil: java.awt.Font FONT_MONO_12_PLAIN>;

        virtualinvoke $r11.<javax.swing.JTextArea: void setFont(java.awt.Font)>($r10);

        $r12 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: javax.swing.JTextArea jta>;

        virtualinvoke $r12.<javax.swing.JTextArea: void setEditable(boolean)>(0);

        $r13 = new javax.swing.JScrollPane;

        $r14 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: javax.swing.JTextArea jta>;

        specialinvoke $r13.<javax.swing.JScrollPane: void <init>(java.awt.Component)>($r14);

        virtualinvoke r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: void add(java.awt.Component,java.lang.Object)>($r13, "Center");

        return;
    }

    private void fileOpen()
    {
        byte[] $r5;
        org.wiztools.restclient.ui.RESTView $r50;
        byte $b5;
        javax.swing.JFrame $r10, $r15, $r33, $r42;
        java.lang.StringBuilder $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r35, $r36, $r37, $r44, $r46, $r54, $r55, $r56;
        long $l3, $l4;
        org.wiztools.restclient.XMLException $r52;
        java.lang.String $r4, $r7, $r13, $r26, $r28, $r29, $r31, $r38, $r45, $r47, $r51;
        java.io.IOException $r48, $r53;
        java.io.File $r3;
        javax.swing.JTextArea $r6, $r8;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray r0;
        org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent $r11, $r27, $r30, $r39;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.wiztools.restclient.ui.RESTUserInterface $r2, $r9, $r14, $r32, $r41, $r49;
        java.nio.charset.Charset $r40;
        org.wiztools.restclient.ui.FileChooserType $r1;
        int $i0, $i1, $i2, $i6;
        org.wiztools.restclient.bean.ContentType $r12;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray;

        $r2 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: org.wiztools.restclient.ui.RESTUserInterface rest_ui>;

        $r1 = <org.wiztools.restclient.ui.FileChooserType: org.wiztools.restclient.ui.FileChooserType OPEN_REQUEST_BODY>;

        $r3 = interfaceinvoke $r2.<org.wiztools.restclient.ui.RESTUserInterface: java.io.File getOpenFile(org.wiztools.restclient.ui.FileChooserType)>($r1);

        if $r3 != null goto label01;

        return;

     label01:
        $z0 = virtualinvoke $r3.<java.io.File: boolean canRead()>();

        if $z0 != 0 goto label02;

        $r41 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: org.wiztools.restclient.ui.RESTUserInterface rest_ui>;

        $r42 = interfaceinvoke $r41.<org.wiztools.restclient.ui.RESTUserInterface: javax.swing.JFrame getFrame()>();

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File not readable: ");

        $r45 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>($r42, $r47, "IO Error", 0);

        return;

     label02:
        $r4 = staticinvoke <org.wiztools.commons.FileUtil: java.lang.String getMimeType(java.io.File)>($r3);

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("content/unknown");

        if $z1 != 0 goto label07;

        $r11 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset>;

        $r12 = interfaceinvoke $r11.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent: org.wiztools.restclient.bean.ContentType getContentType()>();

        $r13 = interfaceinvoke $r12.<org.wiztools.restclient.bean.ContentType: java.lang.String getContentType()>();

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z2 != 0 goto label07;

        $r14 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: org.wiztools.restclient.ui.RESTUserInterface rest_ui>;

        $r15 = interfaceinvoke $r14.<org.wiztools.restclient.ui.RESTUserInterface: javax.swing.JFrame getFrame()>();

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The content-type selected (");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") does NOT match\n");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("the computed file mime type (");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\n");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Do you want to update the content-type to `");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'?");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = staticinvoke <javax.swing.JOptionPane: int showConfirmDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>($r15, $r26, "Mime-type mismatch correction", 0);

        if $i1 != 0 goto label07;

        $r27 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset>;

        interfaceinvoke $r27.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent: void setContentType(java.lang.String)>($r4);

        $r28 = "application/xml";

        $z3 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z3 == 0 goto label07;

     label03:
        $r29 = staticinvoke <org.wiztools.restclient.util.XMLUtil: java.lang.String getDocumentCharset(java.io.File)>($r3);

        if $r29 == null goto label04;

        $r30 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset>;

        $r31 = interfaceinvoke $r30.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent: java.lang.String getCharsetString()>();

        $z4 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        if $z4 != 0 goto label04;

        $r32 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: org.wiztools.restclient.ui.RESTUserInterface rest_ui>;

        $r33 = interfaceinvoke $r32.<org.wiztools.restclient.ui.RESTUserInterface: javax.swing.JFrame getFrame()>();

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Change charset to `");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'?");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = staticinvoke <javax.swing.JOptionPane: int showConfirmDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>($r33, $r38, "Change charset?", 0);

        if $i2 != 0 goto label04;

        $r39 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset>;

        $r40 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r29);

        interfaceinvoke $r39.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent: void setCharset(java.nio.charset.Charset)>($r40);

     label04:
        goto label07;

     label05:
        $r53 := @caughtexception;

        goto label07;

     label06:
        $r52 := @caughtexception;

     label07:
        $l3 = virtualinvoke $r3.<java.io.File: long length()>();

        $l4 = $l3 / 1048576L;

        $b5 = $l4 cmp 2L;

        $i6 = (int) $b5;

        if $i6 <= 0 goto label08;

        $r9 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: org.wiztools.restclient.ui.RESTUserInterface rest_ui>;

        $r10 = interfaceinvoke $r9.<org.wiztools.restclient.ui.RESTUserInterface: javax.swing.JFrame getFrame()>();

        $i0 = staticinvoke <javax.swing.JOptionPane: int showConfirmDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>($r10, "File size is more than 2 MB.\nBigger files are recommended to be configured using the File body.\nDo you want to continue loading?", "File exceeds threshold size", 0);

        if $i0 != 1 goto label08;

        return;

     label08:
        $r5 = staticinvoke <org.wiztools.commons.FileUtil: byte[] getContentAsBytes(java.io.File)>($r3);

        r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: byte[] body> = $r5;

        $r6 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: javax.swing.JTextArea jta>;

        $r7 = staticinvoke <org.wiztools.restclient.util.HexDump: java.lang.String getHexDataDumpAsString(byte[])>($r5);

        virtualinvoke $r6.<javax.swing.JTextArea: void setText(java.lang.String)>($r7);

        $r8 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: javax.swing.JTextArea jta>;

        virtualinvoke $r8.<javax.swing.JTextArea: void setCaretPosition(int)>(0);

     label09:
        goto label11;

     label10:
        $r48 := @caughtexception;

        $r49 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: org.wiztools.restclient.ui.RESTUserInterface rest_ui>;

        $r50 = interfaceinvoke $r49.<org.wiztools.restclient.ui.RESTUserInterface: org.wiztools.restclient.ui.RESTView getView()>();

        $r51 = staticinvoke <org.wiztools.restclient.util.Util: java.lang.String getStackTrace(java.lang.Throwable)>($r48);

        interfaceinvoke $r50.<org.wiztools.restclient.ui.RESTView: void doError(java.lang.String)>($r51);

     label11:
        return;

        catch java.io.IOException from label03 to label04 with label05;
        catch org.wiztools.restclient.XMLException from label03 to label04 with label06;
        catch java.io.IOException from label08 to label09 with label10;
    }

    public void enableBody()
    {
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray r0;
        org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent $r1;
        javax.swing.JButton $r2;
        javax.swing.JTextArea $r3;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray;

        $r1 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset>;

        interfaceinvoke $r1.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent: void enableComponent()>();

        $r2 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: javax.swing.JButton jb_body>;

        virtualinvoke $r2.<javax.swing.JButton: void setEnabled(boolean)>(1);

        $r3 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: javax.swing.JTextArea jta>;

        virtualinvoke $r3.<javax.swing.JTextArea: void setEnabled(boolean)>(1);

        return;
    }

    public void disableBody()
    {
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray r0;
        org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent $r1;
        javax.swing.JButton $r2;
        javax.swing.JTextArea $r3;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray;

        $r1 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset>;

        interfaceinvoke $r1.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent: void disableComponent()>();

        $r2 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: javax.swing.JButton jb_body>;

        virtualinvoke $r2.<javax.swing.JButton: void setEnabled(boolean)>(0);

        $r3 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: javax.swing.JTextArea jta>;

        virtualinvoke $r3.<javax.swing.JTextArea: void setEnabled(boolean)>(0);

        return;
    }

    public void setEntity(org.wiztools.restclient.bean.ReqEntity)
    {
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray r2;
        byte[] $r5, $r7;
        org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent $r3;
        org.wiztools.restclient.bean.ReqEntityByteArray r1;
        org.wiztools.restclient.bean.ReqEntity r0;
        org.wiztools.restclient.bean.ContentType $r4;
        javax.swing.JTextArea $r6;
        java.lang.String $r8;
        boolean $z0;

        r2 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray;

        r0 := @parameter0: org.wiztools.restclient.bean.ReqEntity;

        $z0 = r0 instanceof org.wiztools.restclient.bean.ReqEntityByteArray;

        if $z0 == 0 goto label1;

        r1 = (org.wiztools.restclient.bean.ReqEntityByteArray) r0;

        $r3 = r2.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset>;

        $r4 = interfaceinvoke r1.<org.wiztools.restclient.bean.ReqEntityByteArray: org.wiztools.restclient.bean.ContentType getContentType()>();

        interfaceinvoke $r3.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent: void setContentTypeCharset(org.wiztools.restclient.bean.ContentType)>($r4);

        $r5 = interfaceinvoke r1.<org.wiztools.restclient.bean.ReqEntityByteArray: byte[] getBody()>();

        r2.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: byte[] body> = $r5;

        $r6 = r2.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: javax.swing.JTextArea jta>;

        $r7 = interfaceinvoke r1.<org.wiztools.restclient.bean.ReqEntityByteArray: byte[] getBody()>();

        $r8 = staticinvoke <org.wiztools.restclient.util.HexDump: java.lang.String getHexDataDumpAsString(byte[])>($r7);

        virtualinvoke $r6.<javax.swing.JTextArea: void setText(java.lang.String)>($r8);

     label1:
        return;
    }

    public org.wiztools.restclient.bean.ReqEntity getEntity()
    {
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray r1;
        org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent $r2;
        byte[] $r3;
        org.wiztools.restclient.bean.ReqEntityByteArrayBean $r0;
        org.wiztools.restclient.bean.ContentType $r4;

        r1 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray;

        $r0 = new org.wiztools.restclient.bean.ReqEntityByteArrayBean;

        $r3 = r1.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: byte[] body>;

        $r2 = r1.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset>;

        $r4 = interfaceinvoke $r2.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent: org.wiztools.restclient.bean.ContentType getContentType()>();

        specialinvoke $r0.<org.wiztools.restclient.bean.ReqEntityByteArrayBean: void <init>(byte[],org.wiztools.restclient.bean.ContentType)>($r3, $r4);

        return $r0;
    }

    public java.awt.Component getComponent()
    {
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray r0;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray;

        return r0;
    }

    public void clear()
    {
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray r0;
        org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent $r1;
        javax.swing.JTextArea $r2;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray;

        $r1 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset>;

        interfaceinvoke $r1.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent: void clear()>();

        r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: byte[] body> = null;

        $r2 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: javax.swing.JTextArea jta>;

        virtualinvoke $r2.<javax.swing.JTextArea: void setText(java.lang.String)>("");

        return;
    }

    static void access$000(org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray)
    {
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray r0;

        r0 := @parameter0: org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray;

        specialinvoke r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: void fileOpen()>();

        return;
    }

    public static void <clinit>()
    {
        <org.wiztools.restclient.ui.reqbody.ReqBodyPanelByteArray: int FILE_SIZE_THRESHOLD_LIMIT_MB> = 2;

        return;
    }
}
