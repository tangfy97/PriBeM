public final class org.apache.poi.hssf.record.aggregates.CFRecordsAggregate extends org.apache.poi.hssf.record.aggregates.RecordAggregate
{
    private static final int MAX_97_2003_CONDTIONAL_FORMAT_RULES;
    private static final org.apache.poi.util.POILogger logger;
    private final org.apache.poi.hssf.record.CFHeaderRecord header;
    private final java.util.List rules;

    private void <init>(org.apache.poi.hssf.record.CFHeaderRecord, org.apache.poi.hssf.record.CFRuleRecord[])
    {
        org.apache.poi.hssf.record.CFRuleRecord $r4;
        java.util.ArrayList $r3;
        int $i0, $i1, $i2, $i3, $i4, i5;
        org.apache.poi.hssf.record.CFRuleRecord[] r2;
        java.lang.String $r13;
        org.apache.poi.hssf.record.CFHeaderRecord r1;
        org.apache.poi.util.POILogger $r8;
        java.lang.RuntimeException $r6;
        java.lang.IllegalArgumentException $r14, $r15;
        java.util.List $r5;
        org.apache.poi.hssf.record.aggregates.CFRecordsAggregate r0;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r12;

        r0 := @this: org.apache.poi.hssf.record.aggregates.CFRecordsAggregate;

        r1 := @parameter0: org.apache.poi.hssf.record.CFHeaderRecord;

        r2 := @parameter1: org.apache.poi.hssf.record.CFRuleRecord[];

        specialinvoke r0.<org.apache.poi.hssf.record.aggregates.RecordAggregate: void <init>()>();

        if r1 != null goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("header must not be null");

        throw $r15;

     label1:
        if r2 != null goto label2;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("rules must not be null");

        throw $r14;

     label2:
        $i0 = lengthof r2;

        if $i0 <= 3 goto label3;

        $r8 = <org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: org.apache.poi.util.POILogger logger>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Excel versions before 2007 require that No more than 3 rules may be specified, ");

        $i4 = lengthof r2;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" were found,");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" this file will cause problems with old Excel versions");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, $r13);

     label3:
        $i1 = lengthof r2;

        $i2 = virtualinvoke r1.<org.apache.poi.hssf.record.CFHeaderRecord: int getNumberOfConditionalFormats()>();

        if $i1 == $i2 goto label4;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("Mismatch number of rules");

        throw $r6;

     label4:
        r0.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: org.apache.poi.hssf.record.CFHeaderRecord header> = r1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(3);

        r0.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: java.util.List rules> = $r3;

        i5 = 0;

     label5:
        $i3 = lengthof r2;

        if i5 >= $i3 goto label6;

        $r5 = r0.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: java.util.List rules>;

        $r4 = r2[i5];

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r4);

        i5 = i5 + 1;

        goto label5;

     label6:
        return;
    }

    public void <init>(org.apache.poi.ss.util.CellRangeAddress[], org.apache.poi.hssf.record.CFRuleRecord[])
    {
        int $i0;
        org.apache.poi.hssf.record.CFRuleRecord[] r3;
        org.apache.poi.hssf.record.aggregates.CFRecordsAggregate r0;
        org.apache.poi.hssf.record.CFHeaderRecord $r1;
        org.apache.poi.ss.util.CellRangeAddress[] r2;

        r0 := @this: org.apache.poi.hssf.record.aggregates.CFRecordsAggregate;

        r2 := @parameter0: org.apache.poi.ss.util.CellRangeAddress[];

        r3 := @parameter1: org.apache.poi.hssf.record.CFRuleRecord[];

        $r1 = new org.apache.poi.hssf.record.CFHeaderRecord;

        $i0 = lengthof r3;

        specialinvoke $r1.<org.apache.poi.hssf.record.CFHeaderRecord: void <init>(org.apache.poi.ss.util.CellRangeAddress[],int)>(r2, $i0);

        specialinvoke r0.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: void <init>(org.apache.poi.hssf.record.CFHeaderRecord,org.apache.poi.hssf.record.CFRuleRecord[])>($r1, r3);

        return;
    }

    public static org.apache.poi.hssf.record.aggregates.CFRecordsAggregate createCFAggregate(org.apache.poi.hssf.model.RecordStream)
    {
        java.lang.IllegalStateException $r16;
        org.apache.poi.hssf.record.CFRuleRecord $r6;
        org.apache.poi.hssf.model.RecordStream r0;
        short $s0, $s3;
        int $i1, $i2, i4, $i5, $i6;
        org.apache.poi.hssf.record.CFRuleRecord[] r3;
        java.lang.String $r14;
        org.apache.poi.hssf.record.CFHeaderRecord r2;
        org.apache.poi.hssf.record.Record $r1, $r5;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r15;
        org.apache.poi.hssf.record.aggregates.CFRecordsAggregate $r17;

        r0 := @parameter0: org.apache.poi.hssf.model.RecordStream;

        $r1 = virtualinvoke r0.<org.apache.poi.hssf.model.RecordStream: org.apache.poi.hssf.record.Record getNext()>();

        $s0 = virtualinvoke $r1.<org.apache.poi.hssf.record.Record: short getSid()>();

        $i5 = (int) $s0;

        if $i5 == 432 goto label1;

        $r16 = new java.lang.IllegalStateException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("next record sid was ");

        $s3 = virtualinvoke $r1.<org.apache.poi.hssf.record.Record: short getSid()>();

        $i6 = (int) $s3;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" instead of ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(432);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as expected");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r16;

     label1:
        r2 = (org.apache.poi.hssf.record.CFHeaderRecord) $r1;

        $i1 = virtualinvoke r2.<org.apache.poi.hssf.record.CFHeaderRecord: int getNumberOfConditionalFormats()>();

        r3 = newarray (org.apache.poi.hssf.record.CFRuleRecord)[$i1];

        i4 = 0;

     label2:
        $i2 = lengthof r3;

        if i4 >= $i2 goto label3;

        $r5 = virtualinvoke r0.<org.apache.poi.hssf.model.RecordStream: org.apache.poi.hssf.record.Record getNext()>();

        $r6 = (org.apache.poi.hssf.record.CFRuleRecord) $r5;

        r3[i4] = $r6;

        i4 = i4 + 1;

        goto label2;

     label3:
        $r17 = new org.apache.poi.hssf.record.aggregates.CFRecordsAggregate;

        specialinvoke $r17.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: void <init>(org.apache.poi.hssf.record.CFHeaderRecord,org.apache.poi.hssf.record.CFRuleRecord[])>(r2, r3);

        return $r17;
    }

    public org.apache.poi.hssf.record.aggregates.CFRecordsAggregate cloneCFAggregate()
    {
        org.apache.poi.hssf.record.CFRuleRecord $r7, $r9;
        java.util.List $r1;
        int $i0, $i1, i2;
        org.apache.poi.hssf.record.CFRuleRecord[] r2;
        org.apache.poi.hssf.record.aggregates.CFRecordsAggregate r0, $r3;
        java.lang.Object $r5, $r8;
        org.apache.poi.hssf.record.CFHeaderRecord $r4, $r6;

        r0 := @this: org.apache.poi.hssf.record.aggregates.CFRecordsAggregate;

        $r1 = r0.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: java.util.List rules>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        r2 = newarray (org.apache.poi.hssf.record.CFRuleRecord)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r2;

        if i2 >= $i1 goto label2;

        $r7 = virtualinvoke r0.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: org.apache.poi.hssf.record.CFRuleRecord getRule(int)>(i2);

        $r8 = virtualinvoke $r7.<org.apache.poi.hssf.record.CFRuleRecord: java.lang.Object clone()>();

        $r9 = (org.apache.poi.hssf.record.CFRuleRecord) $r8;

        r2[i2] = $r9;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r3 = new org.apache.poi.hssf.record.aggregates.CFRecordsAggregate;

        $r4 = r0.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: org.apache.poi.hssf.record.CFHeaderRecord header>;

        $r5 = virtualinvoke $r4.<org.apache.poi.hssf.record.CFHeaderRecord: java.lang.Object clone()>();

        $r6 = (org.apache.poi.hssf.record.CFHeaderRecord) $r5;

        specialinvoke $r3.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: void <init>(org.apache.poi.hssf.record.CFHeaderRecord,org.apache.poi.hssf.record.CFRuleRecord[])>($r6, r2);

        return $r3;
    }

    public org.apache.poi.hssf.record.CFHeaderRecord getHeader()
    {
        org.apache.poi.hssf.record.aggregates.CFRecordsAggregate r0;
        org.apache.poi.hssf.record.CFHeaderRecord $r1;

        r0 := @this: org.apache.poi.hssf.record.aggregates.CFRecordsAggregate;

        $r1 = r0.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: org.apache.poi.hssf.record.CFHeaderRecord header>;

        return $r1;
    }

    private void checkRuleIndex(int)
    {
        java.lang.IllegalArgumentException $r0;
        java.util.List $r6, $r9;
        int i0, $i1, $i2;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r7;
        org.apache.poi.hssf.record.aggregates.CFRecordsAggregate r5;
        java.lang.String $r8;

        r5 := @this: org.apache.poi.hssf.record.aggregates.CFRecordsAggregate;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r9 = r5.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: java.util.List rules>;

        $i2 = interfaceinvoke $r9.<java.util.List: int size()>();

        if i0 < $i2 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad rule record index (");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") nRules=");

        $r6 = r5.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: java.util.List rules>;

        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r0;

     label2:
        return;
    }

    public org.apache.poi.hssf.record.CFRuleRecord getRule(int)
    {
        java.util.List $r1;
        org.apache.poi.hssf.record.CFRuleRecord $r3;
        int i0;
        org.apache.poi.hssf.record.aggregates.CFRecordsAggregate r0;
        java.lang.Object $r2;

        r0 := @this: org.apache.poi.hssf.record.aggregates.CFRecordsAggregate;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: void checkRuleIndex(int)>(i0);

        $r1 = r0.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: java.util.List rules>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.apache.poi.hssf.record.CFRuleRecord) $r2;

        return $r3;
    }

    public void setRule(int, org.apache.poi.hssf.record.CFRuleRecord)
    {
        java.util.List $r2;
        org.apache.poi.hssf.record.CFRuleRecord r0;
        int i0;
        org.apache.poi.hssf.record.aggregates.CFRecordsAggregate r1;
        java.lang.IllegalArgumentException $r3;

        r1 := @this: org.apache.poi.hssf.record.aggregates.CFRecordsAggregate;

        i0 := @parameter0: int;

        r0 := @parameter1: org.apache.poi.hssf.record.CFRuleRecord;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("r must not be null");

        throw $r3;

     label1:
        specialinvoke r1.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: void checkRuleIndex(int)>(i0);

        $r2 = r1.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: java.util.List rules>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r0);

        return;
    }

    public void addRule(org.apache.poi.hssf.record.CFRuleRecord)
    {
        org.apache.poi.hssf.record.CFRuleRecord r0;
        org.apache.poi.util.POILogger $r6;
        java.lang.IllegalArgumentException $r7;
        java.util.List $r2, $r3, $r4;
        int $i0, $i1;
        org.apache.poi.hssf.record.aggregates.CFRecordsAggregate r1;
        org.apache.poi.hssf.record.CFHeaderRecord $r5;

        r1 := @this: org.apache.poi.hssf.record.aggregates.CFRecordsAggregate;

        r0 := @parameter0: org.apache.poi.hssf.record.CFRuleRecord;

        if r0 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("r must not be null");

        throw $r7;

     label1:
        $r2 = r1.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: java.util.List rules>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 < 3 goto label2;

        $r6 = <org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r6.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "Excel versions before 2007 cannot cope with any more than 3 - this file will cause problems with old Excel versions");

     label2:
        $r3 = r1.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: java.util.List rules>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r0);

        $r5 = r1.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: org.apache.poi.hssf.record.CFHeaderRecord header>;

        $r4 = r1.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: java.util.List rules>;

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        virtualinvoke $r5.<org.apache.poi.hssf.record.CFHeaderRecord: void setNumberOfConditionalFormats(int)>($i1);

        return;
    }

    public int getNumberOfRules()
    {
        int $i0;
        org.apache.poi.hssf.record.aggregates.CFRecordsAggregate r0;
        java.util.List $r1;

        r0 := @this: org.apache.poi.hssf.record.aggregates.CFRecordsAggregate;

        $r1 = r0.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: java.util.List rules>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.poi.hssf.record.CFRuleRecord r6;
        java.util.List $r4, $r10;
        java.lang.StringBuffer $r0;
        int i0, $i1;
        org.apache.poi.hssf.record.aggregates.CFRecordsAggregate r1;
        java.lang.Object $r5;
        java.lang.String $r3, $r7, $r9;
        org.apache.poi.hssf.record.CFHeaderRecord $r2, $r8;

        r1 := @this: org.apache.poi.hssf.record.aggregates.CFRecordsAggregate;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[CF]\n");

        $r2 = r1.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: org.apache.poi.hssf.record.CFHeaderRecord header>;

        if $r2 == null goto label1;

        $r8 = r1.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: org.apache.poi.hssf.record.CFHeaderRecord header>;

        $r9 = virtualinvoke $r8.<org.apache.poi.hssf.record.CFHeaderRecord: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

     label1:
        i0 = 0;

     label2:
        $r10 = r1.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: java.util.List rules>;

        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

        if i0 >= $i1 goto label3;

        $r4 = r1.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: java.util.List rules>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0);

        r6 = (org.apache.poi.hssf.record.CFRuleRecord) $r5;

        $r7 = virtualinvoke r6.<org.apache.poi.hssf.record.CFRuleRecord: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        i0 = i0 + 1;

        goto label2;

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[/CF]\n");

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public void visitContainedRecords(org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor)
    {
        org.apache.poi.hssf.record.CFRuleRecord r6;
        java.util.List $r3, $r4;
        org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor r0;
        int $i0, i1;
        org.apache.poi.hssf.record.aggregates.CFRecordsAggregate r1;
        java.lang.Object $r5;
        org.apache.poi.hssf.record.CFHeaderRecord $r2;

        r1 := @this: org.apache.poi.hssf.record.aggregates.CFRecordsAggregate;

        r0 := @parameter0: org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor;

        $r2 = r1.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: org.apache.poi.hssf.record.CFHeaderRecord header>;

        interfaceinvoke r0.<org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor: void visitRecord(org.apache.poi.hssf.record.Record)>($r2);

        i1 = 0;

     label1:
        $r3 = r1.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: java.util.List rules>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r4 = r1.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: java.util.List rules>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r6 = (org.apache.poi.hssf.record.CFRuleRecord) $r5;

        interfaceinvoke r0.<org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor: void visitRecord(org.apache.poi.hssf.record.Record)>(r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public boolean updateFormulasAfterCellShift(org.apache.poi.ss.formula.FormulaShifter, int)
    {
        org.apache.poi.hssf.record.CFRuleRecord r13;
        org.apache.poi.ss.util.CellRangeAddress[] $r2, r11;
        java.util.ArrayList $r3;
        org.apache.poi.ss.formula.ptg.Ptg[] $r6, $r14;
        int $i0, i1, $i2, i3, i4, $i5;
        org.apache.poi.ss.formula.FormulaShifter r7;
        org.apache.poi.hssf.record.CFHeaderRecord $r1, $r8;
        boolean $z0, $z1, z2;
        org.apache.poi.ss.util.CellRangeAddress $r9, r10;
        java.util.List $r4, $r12;
        org.apache.poi.hssf.record.aggregates.CFRecordsAggregate r0;
        java.lang.Object $r5;

        r0 := @this: org.apache.poi.hssf.record.aggregates.CFRecordsAggregate;

        r7 := @parameter0: org.apache.poi.ss.formula.FormulaShifter;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: org.apache.poi.hssf.record.CFHeaderRecord header>;

        $r2 = virtualinvoke $r1.<org.apache.poi.hssf.record.CFHeaderRecord: org.apache.poi.ss.util.CellRangeAddress[] getCellRanges()>();

        z2 = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        i3 = 0;

     label01:
        $i0 = lengthof $r2;

        if i3 >= $i0 goto label04;

        r10 = $r2[i3];

        $r9 = staticinvoke <org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: org.apache.poi.ss.util.CellRangeAddress shiftRange(org.apache.poi.ss.formula.FormulaShifter,org.apache.poi.ss.util.CellRangeAddress,int)>(r7, r10, i1);

        if $r9 != null goto label02;

        z2 = 1;

        goto label03;

     label02:
        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r9);

        if $r9 == r10 goto label03;

        z2 = 1;

     label03:
        i3 = i3 + 1;

        goto label01;

     label04:
        if z2 == 0 goto label06;

        $i2 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i2 != 0 goto label05;

        return 0;

     label05:
        r11 = newarray (org.apache.poi.ss.util.CellRangeAddress)[$i2];

        interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r11);

        $r8 = r0.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: org.apache.poi.hssf.record.CFHeaderRecord header>;

        virtualinvoke $r8.<org.apache.poi.hssf.record.CFHeaderRecord: void setCellRanges(org.apache.poi.ss.util.CellRangeAddress[])>(r11);

     label06:
        i4 = 0;

     label07:
        $r12 = r0.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: java.util.List rules>;

        $i5 = interfaceinvoke $r12.<java.util.List: int size()>();

        if i4 >= $i5 goto label10;

        $r4 = r0.<org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: java.util.List rules>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i4);

        r13 = (org.apache.poi.hssf.record.CFRuleRecord) $r5;

        $r6 = virtualinvoke r13.<org.apache.poi.hssf.record.CFRuleRecord: org.apache.poi.ss.formula.ptg.Ptg[] getParsedExpression1()>();

        if $r6 == null goto label08;

        $z1 = virtualinvoke r7.<org.apache.poi.ss.formula.FormulaShifter: boolean adjustFormula(org.apache.poi.ss.formula.ptg.Ptg[],int)>($r6, i1);

        if $z1 == 0 goto label08;

        virtualinvoke r13.<org.apache.poi.hssf.record.CFRuleRecord: void setParsedExpression1(org.apache.poi.ss.formula.ptg.Ptg[])>($r6);

     label08:
        $r14 = virtualinvoke r13.<org.apache.poi.hssf.record.CFRuleRecord: org.apache.poi.ss.formula.ptg.Ptg[] getParsedExpression2()>();

        if $r14 == null goto label09;

        $z0 = virtualinvoke r7.<org.apache.poi.ss.formula.FormulaShifter: boolean adjustFormula(org.apache.poi.ss.formula.ptg.Ptg[],int)>($r14, i1);

        if $z0 == 0 goto label09;

        virtualinvoke r13.<org.apache.poi.hssf.record.CFRuleRecord: void setParsedExpression2(org.apache.poi.ss.formula.ptg.Ptg[])>($r14);

     label09:
        i4 = i4 + 1;

        goto label07;

     label10:
        return 1;
    }

    private static org.apache.poi.ss.util.CellRangeAddress shiftRange(org.apache.poi.ss.formula.FormulaShifter, org.apache.poi.ss.util.CellRangeAddress, int)
    {
        org.apache.poi.ss.formula.ptg.Ptg r4;
        java.lang.IllegalStateException $r5;
        org.apache.poi.ss.formula.ptg.Ptg[] $r2;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8;
        org.apache.poi.ss.formula.FormulaShifter r3;
        java.lang.String $r9, $r12;
        boolean $z0, $z1, $z2;
        org.apache.poi.ss.util.CellRangeAddress r1, $r14;
        org.apache.poi.ss.formula.ptg.AreaPtg $r0, r13;
        java.lang.StringBuilder $r6, $r7, $r10, $r11;
        java.lang.Class $r8;

        r3 := @parameter0: org.apache.poi.ss.formula.FormulaShifter;

        r1 := @parameter1: org.apache.poi.ss.util.CellRangeAddress;

        i4 := @parameter2: int;

        $r0 = new org.apache.poi.ss.formula.ptg.AreaPtg;

        $i0 = virtualinvoke r1.<org.apache.poi.ss.util.CellRangeAddress: int getFirstRow()>();

        $i1 = virtualinvoke r1.<org.apache.poi.ss.util.CellRangeAddress: int getLastRow()>();

        $i2 = virtualinvoke r1.<org.apache.poi.ss.util.CellRangeAddress: int getFirstColumn()>();

        $i3 = virtualinvoke r1.<org.apache.poi.ss.util.CellRangeAddress: int getLastColumn()>();

        specialinvoke $r0.<org.apache.poi.ss.formula.ptg.AreaPtg: void <init>(int,int,int,int,boolean,boolean,boolean,boolean)>($i0, $i1, $i2, $i3, 0, 0, 0, 0);

        $r2 = newarray (org.apache.poi.ss.formula.ptg.Ptg)[1];

        $r2[0] = $r0;

        $z0 = virtualinvoke r3.<org.apache.poi.ss.formula.FormulaShifter: boolean adjustFormula(org.apache.poi.ss.formula.ptg.Ptg[],int)>($r2, i4);

        if $z0 != 0 goto label1;

        return r1;

     label1:
        r4 = $r2[0];

        $z1 = r4 instanceof org.apache.poi.ss.formula.ptg.AreaPtg;

        if $z1 == 0 goto label2;

        r13 = (org.apache.poi.ss.formula.ptg.AreaPtg) r4;

        $r14 = new org.apache.poi.ss.util.CellRangeAddress;

        $i5 = virtualinvoke r13.<org.apache.poi.ss.formula.ptg.AreaPtg: int getFirstRow()>();

        $i6 = virtualinvoke r13.<org.apache.poi.ss.formula.ptg.AreaPtg: int getLastRow()>();

        $i7 = virtualinvoke r13.<org.apache.poi.ss.formula.ptg.AreaPtg: int getFirstColumn()>();

        $i8 = virtualinvoke r13.<org.apache.poi.ss.formula.ptg.AreaPtg: int getLastColumn()>();

        specialinvoke $r14.<org.apache.poi.ss.util.CellRangeAddress: void <init>(int,int,int,int)>($i5, $i6, $i7, $i8);

        return $r14;

     label2:
        $z2 = r4 instanceof org.apache.poi.ss.formula.ptg.AreaErrPtg;

        if $z2 == 0 goto label3;

        return null;

     label3:
        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected shifted ptg class (");

        $r8 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r5;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        <org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: int MAX_97_2003_CONDTIONAL_FORMAT_RULES> = 3;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hssf/record/aggregates/CFRecordsAggregate;");

        <org.apache.poi.hssf.record.aggregates.CFRecordsAggregate: org.apache.poi.util.POILogger logger> = $r0;

        return;
    }
}
