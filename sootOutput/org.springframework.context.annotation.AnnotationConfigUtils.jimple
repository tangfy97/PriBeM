public class org.springframework.context.'annotation'.AnnotationConfigUtils extends java.lang.Object
{
    public static final java.lang.String CONFIGURATION_ANNOTATION_PROCESSOR_BEAN_NAME;
    public static final java.lang.String AUTOWIRED_ANNOTATION_PROCESSOR_BEAN_NAME;
    public static final java.lang.String REQUIRED_ANNOTATION_PROCESSOR_BEAN_NAME;
    public static final java.lang.String COMMON_ANNOTATION_PROCESSOR_BEAN_NAME;
    public static final java.lang.String PERSISTENCE_ANNOTATION_PROCESSOR_BEAN_NAME;
    private static final java.lang.String PERSISTENCE_ANNOTATION_PROCESSOR_CLASS_NAME;
    private static final boolean jsr250Present;
    private static final boolean jpaPresent;

    static void <clinit>()
    {
        java.lang.Class $r0, $r2, $r4;
        java.lang.ClassLoader $r1, $r3, $r5;
        boolean $z0, $z1, $z2, $z3;

        <org.springframework.context.'annotation'.AnnotationConfigUtils: java.lang.String PERSISTENCE_ANNOTATION_PROCESSOR_CLASS_NAME> = "org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor";

        <org.springframework.context.'annotation'.AnnotationConfigUtils: java.lang.String PERSISTENCE_ANNOTATION_PROCESSOR_BEAN_NAME> = "org.springframework.context.annotation.internalPersistenceAnnotationProcessor";

        <org.springframework.context.'annotation'.AnnotationConfigUtils: java.lang.String COMMON_ANNOTATION_PROCESSOR_BEAN_NAME> = "org.springframework.context.annotation.internalCommonAnnotationProcessor";

        <org.springframework.context.'annotation'.AnnotationConfigUtils: java.lang.String REQUIRED_ANNOTATION_PROCESSOR_BEAN_NAME> = "org.springframework.context.annotation.internalRequiredAnnotationProcessor";

        <org.springframework.context.'annotation'.AnnotationConfigUtils: java.lang.String AUTOWIRED_ANNOTATION_PROCESSOR_BEAN_NAME> = "org.springframework.context.annotation.internalAutowiredAnnotationProcessor";

        <org.springframework.context.'annotation'.AnnotationConfigUtils: java.lang.String CONFIGURATION_ANNOTATION_PROCESSOR_BEAN_NAME> = "org.springframework.context.annotation.internalConfigurationAnnotationProcessor";

        $r0 = class "Lorg/springframework/context/annotation/AnnotationConfigUtils;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $z0 = staticinvoke <org.springframework.util.ClassUtils: boolean isPresent(java.lang.String,java.lang.ClassLoader)>("javax.annotation.Resource", $r1);

        <org.springframework.context.'annotation'.AnnotationConfigUtils: boolean jsr250Present> = $z0;

        $r2 = class "Lorg/springframework/context/annotation/AnnotationConfigUtils;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $z1 = staticinvoke <org.springframework.util.ClassUtils: boolean isPresent(java.lang.String,java.lang.ClassLoader)>("javax.persistence.EntityManagerFactory", $r3);

        if $z1 == 0 goto label1;

        $r4 = class "Lorg/springframework/context/annotation/AnnotationConfigUtils;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $z2 = staticinvoke <org.springframework.util.ClassUtils: boolean isPresent(java.lang.String,java.lang.ClassLoader)>("org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor", $r5);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        <org.springframework.context.'annotation'.AnnotationConfigUtils: boolean jpaPresent> = $z3;

        return;
    }

    public void <init>()
    {
        org.springframework.context.'annotation'.AnnotationConfigUtils r0;

        r0 := @this: org.springframework.context.'annotation'.AnnotationConfigUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void registerAnnotationConfigProcessors(org.springframework.beans.factory.support.BeanDefinitionRegistry)
    {
        org.springframework.beans.factory.support.BeanDefinitionRegistry r0;

        r0 := @parameter0: org.springframework.beans.factory.support.BeanDefinitionRegistry;

        staticinvoke <org.springframework.context.'annotation'.AnnotationConfigUtils: java.util.Set registerAnnotationConfigProcessors(org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.Object)>(r0, null);

        return;
    }

    public static java.util.Set registerAnnotationConfigProcessors(org.springframework.beans.factory.support.BeanDefinitionRegistry, java.lang.Object)
    {
        org.springframework.beans.factory.support.RootBeanDefinition $r2, $r8, $r10, $r12, $r14;
        java.lang.IllegalStateException $r17;
        org.springframework.beans.factory.support.BeanDefinitionRegistry r1;
        org.springframework.beans.factory.config.BeanDefinitionHolder $r7, $r9, $r11, $r13, $r15;
        java.util.LinkedHashSet $r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Class $r3, $r5;
        java.lang.Object r6;
        java.lang.ClassNotFoundException $r16;
        java.lang.ClassLoader $r4;

        r1 := @parameter0: org.springframework.beans.factory.support.BeanDefinitionRegistry;

        r6 := @parameter1: java.lang.Object;

        $r0 = new java.util.LinkedHashSet;

        specialinvoke $r0.<java.util.LinkedHashSet: void <init>(int)>(4);

        $z0 = interfaceinvoke r1.<org.springframework.beans.factory.support.BeanDefinitionRegistry: boolean containsBeanDefinition(java.lang.String)>("org.springframework.context.annotation.internalConfigurationAnnotationProcessor");

        if $z0 != 0 goto label1;

        $r14 = new org.springframework.beans.factory.support.RootBeanDefinition;

        specialinvoke $r14.<org.springframework.beans.factory.support.RootBeanDefinition: void <init>(java.lang.Class)>(class "Lorg/springframework/context/annotation/ConfigurationClassPostProcessor;");

        virtualinvoke $r14.<org.springframework.beans.factory.support.RootBeanDefinition: void setSource(java.lang.Object)>(r6);

        $r15 = staticinvoke <org.springframework.context.'annotation'.AnnotationConfigUtils: org.springframework.beans.factory.config.BeanDefinitionHolder registerPostProcessor(org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String)>(r1, $r14, "org.springframework.context.annotation.internalConfigurationAnnotationProcessor");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r15);

     label1:
        $z1 = interfaceinvoke r1.<org.springframework.beans.factory.support.BeanDefinitionRegistry: boolean containsBeanDefinition(java.lang.String)>("org.springframework.context.annotation.internalAutowiredAnnotationProcessor");

        if $z1 != 0 goto label2;

        $r12 = new org.springframework.beans.factory.support.RootBeanDefinition;

        specialinvoke $r12.<org.springframework.beans.factory.support.RootBeanDefinition: void <init>(java.lang.Class)>(class "Lorg/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor;");

        virtualinvoke $r12.<org.springframework.beans.factory.support.RootBeanDefinition: void setSource(java.lang.Object)>(r6);

        $r13 = staticinvoke <org.springframework.context.'annotation'.AnnotationConfigUtils: org.springframework.beans.factory.config.BeanDefinitionHolder registerPostProcessor(org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String)>(r1, $r12, "org.springframework.context.annotation.internalAutowiredAnnotationProcessor");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r13);

     label2:
        $z2 = interfaceinvoke r1.<org.springframework.beans.factory.support.BeanDefinitionRegistry: boolean containsBeanDefinition(java.lang.String)>("org.springframework.context.annotation.internalRequiredAnnotationProcessor");

        if $z2 != 0 goto label3;

        $r10 = new org.springframework.beans.factory.support.RootBeanDefinition;

        specialinvoke $r10.<org.springframework.beans.factory.support.RootBeanDefinition: void <init>(java.lang.Class)>(class "Lorg/springframework/beans/factory/annotation/RequiredAnnotationBeanPostProcessor;");

        virtualinvoke $r10.<org.springframework.beans.factory.support.RootBeanDefinition: void setSource(java.lang.Object)>(r6);

        $r11 = staticinvoke <org.springframework.context.'annotation'.AnnotationConfigUtils: org.springframework.beans.factory.config.BeanDefinitionHolder registerPostProcessor(org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String)>(r1, $r10, "org.springframework.context.annotation.internalRequiredAnnotationProcessor");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r11);

     label3:
        $z3 = <org.springframework.context.'annotation'.AnnotationConfigUtils: boolean jsr250Present>;

        if $z3 == 0 goto label4;

        $z5 = interfaceinvoke r1.<org.springframework.beans.factory.support.BeanDefinitionRegistry: boolean containsBeanDefinition(java.lang.String)>("org.springframework.context.annotation.internalCommonAnnotationProcessor");

        if $z5 != 0 goto label4;

        $r8 = new org.springframework.beans.factory.support.RootBeanDefinition;

        specialinvoke $r8.<org.springframework.beans.factory.support.RootBeanDefinition: void <init>(java.lang.Class)>(class "Lorg/springframework/context/annotation/CommonAnnotationBeanPostProcessor;");

        virtualinvoke $r8.<org.springframework.beans.factory.support.RootBeanDefinition: void setSource(java.lang.Object)>(r6);

        $r9 = staticinvoke <org.springframework.context.'annotation'.AnnotationConfigUtils: org.springframework.beans.factory.config.BeanDefinitionHolder registerPostProcessor(org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String)>(r1, $r8, "org.springframework.context.annotation.internalCommonAnnotationProcessor");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r9);

     label4:
        $z6 = <org.springframework.context.'annotation'.AnnotationConfigUtils: boolean jpaPresent>;

        if $z6 == 0 goto label9;

        $z4 = interfaceinvoke r1.<org.springframework.beans.factory.support.BeanDefinitionRegistry: boolean containsBeanDefinition(java.lang.String)>("org.springframework.context.annotation.internalPersistenceAnnotationProcessor");

        if $z4 != 0 goto label9;

        $r2 = new org.springframework.beans.factory.support.RootBeanDefinition;

        specialinvoke $r2.<org.springframework.beans.factory.support.RootBeanDefinition: void <init>()>();

     label5:
        $r3 = class "Lorg/springframework/context/annotation/AnnotationConfigUtils;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r5 = virtualinvoke $r4.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>("org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor");

        virtualinvoke $r2.<org.springframework.beans.factory.support.RootBeanDefinition: void setBeanClass(java.lang.Class)>($r5);

     label6:
        goto label8;

     label7:
        $r16 := @caughtexception;

        $r17 = new java.lang.IllegalStateException;

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot load optional framework class: org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor", $r16);

        throw $r17;

     label8:
        virtualinvoke $r2.<org.springframework.beans.factory.support.RootBeanDefinition: void setSource(java.lang.Object)>(r6);

        $r7 = staticinvoke <org.springframework.context.'annotation'.AnnotationConfigUtils: org.springframework.beans.factory.config.BeanDefinitionHolder registerPostProcessor(org.springframework.beans.factory.support.BeanDefinitionRegistry,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.String)>(r1, $r2, "org.springframework.context.annotation.internalPersistenceAnnotationProcessor");

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r7);

     label9:
        return $r0;

        catch java.lang.ClassNotFoundException from label5 to label6 with label7;
    }

    private static org.springframework.beans.factory.config.BeanDefinitionHolder registerPostProcessor(org.springframework.beans.factory.support.BeanDefinitionRegistry, org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String)
    {
        org.springframework.beans.factory.support.RootBeanDefinition r0;
        org.springframework.beans.factory.config.BeanDefinitionHolder $r3;
        java.lang.String r2;
        org.springframework.beans.factory.support.BeanDefinitionRegistry r1;

        r1 := @parameter0: org.springframework.beans.factory.support.BeanDefinitionRegistry;

        r0 := @parameter1: org.springframework.beans.factory.support.RootBeanDefinition;

        r2 := @parameter2: java.lang.String;

        virtualinvoke r0.<org.springframework.beans.factory.support.RootBeanDefinition: void setRole(int)>(2);

        interfaceinvoke r1.<org.springframework.beans.factory.support.BeanDefinitionRegistry: void registerBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>(r2, r0);

        $r3 = new org.springframework.beans.factory.config.BeanDefinitionHolder;

        specialinvoke $r3.<org.springframework.beans.factory.config.BeanDefinitionHolder: void <init>(org.springframework.beans.factory.config.BeanDefinition,java.lang.String)>(r0, r2);

        return $r3;
    }

    static void processCommonDefinitionAnnotations(org.springframework.beans.factory.'annotation'.AnnotatedBeanDefinition)
    {
        org.springframework.beans.factory.'annotation'.AnnotatedBeanDefinition r0;
        java.lang.String[] r21;
        java.util.Map $r13, $r18;
        java.lang.Boolean r20;
        java.lang.String $r3, $r6, $r9, $r12, $r17;
        boolean $z0, $z1, $z2, $z3;
        org.springframework.core.type.AnnotationMetadata $r1, $r4, $r7, $r10, $r15;
        java.lang.Class $r2, $r5, $r8, $r11, $r16;
        java.lang.Object $r14, $r19;

        r0 := @parameter0: org.springframework.beans.factory.'annotation'.AnnotatedBeanDefinition;

        $r1 = interfaceinvoke r0.<org.springframework.beans.factory.'annotation'.AnnotatedBeanDefinition: org.springframework.core.type.AnnotationMetadata getMetadata()>();

        $r2 = class "Lorg/springframework/context/annotation/Primary;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $z0 = interfaceinvoke $r1.<org.springframework.core.type.AnnotationMetadata: boolean isAnnotated(java.lang.String)>($r3);

        if $z0 == 0 goto label1;

        interfaceinvoke r0.<org.springframework.beans.factory.'annotation'.AnnotatedBeanDefinition: void setPrimary(boolean)>(1);

     label1:
        $r4 = interfaceinvoke r0.<org.springframework.beans.factory.'annotation'.AnnotatedBeanDefinition: org.springframework.core.type.AnnotationMetadata getMetadata()>();

        $r5 = class "Lorg/springframework/context/annotation/Lazy;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $z1 = interfaceinvoke $r4.<org.springframework.core.type.AnnotationMetadata: boolean isAnnotated(java.lang.String)>($r6);

        if $z1 == 0 goto label2;

        $r15 = interfaceinvoke r0.<org.springframework.beans.factory.'annotation'.AnnotatedBeanDefinition: org.springframework.core.type.AnnotationMetadata getMetadata()>();

        $r16 = class "Lorg/springframework/context/annotation/Lazy;";

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        $r18 = interfaceinvoke $r15.<org.springframework.core.type.AnnotationMetadata: java.util.Map getAnnotationAttributes(java.lang.String)>($r17);

        $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>("value");

        r20 = (java.lang.Boolean) $r19;

        $z3 = virtualinvoke r20.<java.lang.Boolean: boolean booleanValue()>();

        interfaceinvoke r0.<org.springframework.beans.factory.'annotation'.AnnotatedBeanDefinition: void setLazyInit(boolean)>($z3);

     label2:
        $r7 = interfaceinvoke r0.<org.springframework.beans.factory.'annotation'.AnnotatedBeanDefinition: org.springframework.core.type.AnnotationMetadata getMetadata()>();

        $r8 = class "Lorg/springframework/context/annotation/DependsOn;";

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $z2 = interfaceinvoke $r7.<org.springframework.core.type.AnnotationMetadata: boolean isAnnotated(java.lang.String)>($r9);

        if $z2 == 0 goto label3;

        $r10 = interfaceinvoke r0.<org.springframework.beans.factory.'annotation'.AnnotatedBeanDefinition: org.springframework.core.type.AnnotationMetadata getMetadata()>();

        $r11 = class "Lorg/springframework/context/annotation/DependsOn;";

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $r13 = interfaceinvoke $r10.<org.springframework.core.type.AnnotationMetadata: java.util.Map getAnnotationAttributes(java.lang.String)>($r12);

        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>("value");

        r21 = (java.lang.String[]) $r14;

        interfaceinvoke r0.<org.springframework.beans.factory.'annotation'.AnnotatedBeanDefinition: void setDependsOn(java.lang.String[])>(r21);

     label3:
        return;
    }

    static org.springframework.beans.factory.config.BeanDefinitionHolder applyScopedProxyMode(org.springframework.context.'annotation'.ScopeMetadata, org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.support.BeanDefinitionRegistry)
    {
        org.springframework.context.'annotation'.ScopedProxyMode $r1, $r2, $r3;
        org.springframework.beans.factory.support.BeanDefinitionRegistry r5;
        org.springframework.context.'annotation'.ScopeMetadata r0;
        org.springframework.beans.factory.config.BeanDefinitionHolder r4, $r6;
        boolean $z0, $z1;

        r0 := @parameter0: org.springframework.context.'annotation'.ScopeMetadata;

        r4 := @parameter1: org.springframework.beans.factory.config.BeanDefinitionHolder;

        r5 := @parameter2: org.springframework.beans.factory.support.BeanDefinitionRegistry;

        $r1 = virtualinvoke r0.<org.springframework.context.'annotation'.ScopeMetadata: org.springframework.context.'annotation'.ScopedProxyMode getScopedProxyMode()>();

        $r2 = <org.springframework.context.'annotation'.ScopedProxyMode: org.springframework.context.'annotation'.ScopedProxyMode NO>;

        $z0 = virtualinvoke $r1.<org.springframework.context.'annotation'.ScopedProxyMode: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return r4;

     label1:
        $r3 = <org.springframework.context.'annotation'.ScopedProxyMode: org.springframework.context.'annotation'.ScopedProxyMode TARGET_CLASS>;

        $z1 = virtualinvoke $r1.<org.springframework.context.'annotation'.ScopedProxyMode: boolean equals(java.lang.Object)>($r3);

        $r6 = staticinvoke <org.springframework.context.'annotation'.ScopedProxyCreator: org.springframework.beans.factory.config.BeanDefinitionHolder createScopedProxy(org.springframework.beans.factory.config.BeanDefinitionHolder,org.springframework.beans.factory.support.BeanDefinitionRegistry,boolean)>(r4, r5, $z1);

        return $r6;
    }
}
