public class org.apache.neethi.builders.converters.StaxToDOMConverter extends org.apache.neethi.builders.converters.AbstractStaxConverter implements org.apache.neethi.builders.converters.Converter
{

    public void <init>()
    {
        org.apache.neethi.builders.converters.StaxToDOMConverter r0;

        r0 := @this: org.apache.neethi.builders.converters.StaxToDOMConverter;

        specialinvoke r0.<org.apache.neethi.builders.converters.AbstractStaxConverter: void <init>()>();

        return;
    }

    public org.w3c.dom.Element convert(javax.xml.stream.XMLStreamReader)
    {
        org.w3c.dom.Element $r4;
        javax.xml.stream.XMLStreamReader r3;
        javax.xml.parsers.ParserConfigurationException $r7;
        org.w3c.dom.Document $r2;
        javax.xml.parsers.DocumentBuilder $r1;
        javax.xml.stream.XMLStreamException $r5;
        org.apache.neethi.builders.converters.StaxToDOMConverter r9;
        org.apache.neethi.builders.converters.ConverterException $r6, $r8;
        javax.xml.parsers.DocumentBuilderFactory $r0;

        r9 := @this: org.apache.neethi.builders.converters.StaxToDOMConverter;

        r3 := @parameter0: javax.xml.stream.XMLStreamReader;

     label1:
        $r0 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        $r1 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r2 = virtualinvoke $r1.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

        staticinvoke <org.apache.neethi.builders.converters.StaxToDOMConverter: void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader)>($r2, $r2, r3);

        $r4 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

     label2:
        return $r4;

     label3:
        $r7 := @caughtexception;

        $r8 = new org.apache.neethi.builders.converters.ConverterException;

        specialinvoke $r8.<org.apache.neethi.builders.converters.ConverterException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label4:
        $r5 := @caughtexception;

        $r6 = new org.apache.neethi.builders.converters.ConverterException;

        specialinvoke $r6.<org.apache.neethi.builders.converters.ConverterException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

        catch javax.xml.parsers.ParserConfigurationException from label1 to label2 with label3;
        catch javax.xml.stream.XMLStreamException from label1 to label2 with label4;
    }

    public static void readDocElements(org.w3c.dom.Document, org.w3c.dom.Node, javax.xml.stream.XMLStreamReader) throws javax.xml.stream.XMLStreamException
    {
        org.w3c.dom.Text $r11;
        javax.xml.stream.XMLStreamReader r1;
        org.w3c.dom.Document r2;
        org.w3c.dom.CDATASection $r4;
        boolean $z0, $z1, $z2, $z3;
        org.w3c.dom.Comment $r9;
        java.lang.StringBuilder $r23, $r24, $r25, $r26;
        org.w3c.dom.ProcessingInstruction $r7, $r14;
        org.w3c.dom.Attr $r34;
        java.util.Stack $r0;
        org.w3c.dom.Node $r20, r31;
        int $i0, $i1, i2, i3, $i4, i5;
        java.lang.String $r3, $r5, $r6, $r8, $r10, $r12, $r13, $r16, $r17, $r19, $r21, $r22, $r27, $r28, $r29, r32, $r33, $r35;
        org.w3c.dom.Element $r18, $r30;
        java.lang.Object $r15;

        r2 := @parameter0: org.w3c.dom.Document;

        r31 := @parameter1: org.w3c.dom.Node;

        r1 := @parameter2: javax.xml.stream.XMLStreamReader;

        $r0 = new java.util.Stack;

        specialinvoke $r0.<java.util.Stack: void <init>()>();

        i2 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: int getEventType()>();

     label01:
        $z2 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: boolean hasNext()>();

        if $z2 == 0 goto label19;

        tableswitch(i2)
        {
            case 1: goto label02;
            case 2: goto label09;
            case 3: goto label16;
            case 4: goto label13;
            case 5: goto label14;
            case 6: goto label18;
            case 7: goto label18;
            case 8: goto label18;
            case 9: goto label17;
            case 10: goto label12;
            case 11: goto label18;
            case 12: goto label15;
            case 13: goto label11;
            default: goto label18;
        };

     label02:
        $r16 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespaceURI()>();

        $r17 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getLocalName()>();

        $r18 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>($r16, $r17);

        $r19 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getPrefix()>();

        if $r19 == null goto label03;

        $r29 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getPrefix()>();

        interfaceinvoke $r18.<org.w3c.dom.Element: void setPrefix(java.lang.String)>($r29);

     label03:
        $r20 = interfaceinvoke r31.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r18);

        $r30 = (org.w3c.dom.Element) $r20;

        i3 = 0;

     label04:
        $i4 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: int getNamespaceCount()>();

        if i3 >= $i4 goto label05;

        $r27 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespaceURI(int)>(i3);

        $r28 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespacePrefix(int)>(i3);

        staticinvoke <org.apache.neethi.builders.converters.StaxToDOMConverter: void declare(org.w3c.dom.Element,java.lang.String,java.lang.String)>($r30, $r27, $r28);

        i3 = i3 + 1;

        goto label04;

     label05:
        i5 = 0;

     label06:
        $i0 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: int getAttributeCount()>();

        if i5 >= $i0 goto label08;

        $r21 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeLocalName(int)>(i5);

        r32 = $r21;

        $r22 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributePrefix(int)>(i5);

        if $r22 == null goto label07;

        $i1 = virtualinvoke $r22.<java.lang.String: int length()>();

        if $i1 <= 0 goto label07;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        r32 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        $r33 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeNamespace(int)>(i5);

        $r34 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Attr createAttributeNS(java.lang.String,java.lang.String)>($r33, r32);

        $r35 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeValue(int)>(i5);

        interfaceinvoke $r34.<org.w3c.dom.Attr: void setValue(java.lang.String)>($r35);

        interfaceinvoke $r30.<org.w3c.dom.Element: org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr)>($r34);

        i5 = i5 + 1;

        goto label06;

     label08:
        virtualinvoke $r0.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r31);

        r31 = $r30;

        goto label18;

     label09:
        $z0 = virtualinvoke $r0.<java.util.Stack: boolean isEmpty()>();

        if $z0 == 0 goto label10;

        return;

     label10:
        $r15 = virtualinvoke $r0.<java.util.Stack: java.lang.Object pop()>();

        r31 = (org.w3c.dom.Node) $r15;

        $z1 = r31 instanceof org.w3c.dom.Document;

        if $z1 == 0 goto label18;

        return;

     label11:
        goto label18;

     label12:
        goto label18;

     label13:
        if r31 == null goto label18;

        $r10 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        $r11 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>($r10);

        interfaceinvoke r31.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r11);

        goto label18;

     label14:
        if r31 == null goto label18;

        $r8 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        $r9 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.Comment createComment(java.lang.String)>($r8);

        interfaceinvoke r31.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r9);

        goto label18;

     label15:
        $r3 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        $r4 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.CDATASection createCDATASection(java.lang.String)>($r3);

        interfaceinvoke r31.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r4);

        goto label18;

     label16:
        $r12 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getPITarget()>();

        $r13 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getPIData()>();

        $r14 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String)>($r12, $r13);

        interfaceinvoke r31.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r14);

        goto label18;

     label17:
        $r5 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getPITarget()>();

        $r6 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: java.lang.String getPIData()>();

        $r7 = interfaceinvoke r2.<org.w3c.dom.Document: org.w3c.dom.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String)>($r5, $r6);

        interfaceinvoke r31.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r7);

        goto label18;

     label18:
        $z3 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: boolean hasNext()>();

        if $z3 == 0 goto label01;

        i2 = interfaceinvoke r1.<javax.xml.stream.XMLStreamReader: int next()>();

        goto label01;

     label19:
        return;
    }

    private static void declare(org.w3c.dom.Element, java.lang.String, java.lang.String)
    {
        org.w3c.dom.Attr $r8;
        org.w3c.dom.Element r1;
        org.w3c.dom.Document $r7;
        int $i0;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String r0, r2, r6;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xmlns:");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        r6 = "xmlns";

     label2:
        $r7 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.Document getOwnerDocument()>();

        $r8 = interfaceinvoke $r7.<org.w3c.dom.Document: org.w3c.dom.Attr createAttributeNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/xmlns/", r6);

        interfaceinvoke $r8.<org.w3c.dom.Attr: void setValue(java.lang.String)>(r2);

        interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr)>($r8);

        return;
    }

    public volatile java.lang.Object convert(java.lang.Object)
    {
        org.w3c.dom.Element $r3;
        javax.xml.stream.XMLStreamReader $r2;
        org.apache.neethi.builders.converters.StaxToDOMConverter r0;
        java.lang.Object r1;

        r0 := @this: org.apache.neethi.builders.converters.StaxToDOMConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (javax.xml.stream.XMLStreamReader) r1;

        $r3 = virtualinvoke r0.<org.apache.neethi.builders.converters.StaxToDOMConverter: org.w3c.dom.Element convert(javax.xml.stream.XMLStreamReader)>($r2);

        return $r3;
    }

    public volatile java.util.Iterator getChildren(java.lang.Object)
    {
        java.util.Iterator $r3;
        javax.xml.stream.XMLStreamReader $r2;
        org.apache.neethi.builders.converters.StaxToDOMConverter r0;
        java.lang.Object r1;

        r0 := @this: org.apache.neethi.builders.converters.StaxToDOMConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (javax.xml.stream.XMLStreamReader) r1;

        $r3 = specialinvoke r0.<org.apache.neethi.builders.converters.AbstractStaxConverter: java.util.Iterator getChildren(javax.xml.stream.XMLStreamReader)>($r2);

        return $r3;
    }

    public volatile java.util.Map getAttributes(java.lang.Object)
    {
        javax.xml.stream.XMLStreamReader $r2;
        java.util.Map $r3;
        org.apache.neethi.builders.converters.StaxToDOMConverter r0;
        java.lang.Object r1;

        r0 := @this: org.apache.neethi.builders.converters.StaxToDOMConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (javax.xml.stream.XMLStreamReader) r1;

        $r3 = specialinvoke r0.<org.apache.neethi.builders.converters.AbstractStaxConverter: java.util.Map getAttributes(javax.xml.stream.XMLStreamReader)>($r2);

        return $r3;
    }

    public volatile javax.xml.namespace.QName getQName(java.lang.Object)
    {
        javax.xml.stream.XMLStreamReader $r2;
        org.apache.neethi.builders.converters.StaxToDOMConverter r0;
        java.lang.Object r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.neethi.builders.converters.StaxToDOMConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (javax.xml.stream.XMLStreamReader) r1;

        $r3 = specialinvoke r0.<org.apache.neethi.builders.converters.AbstractStaxConverter: javax.xml.namespace.QName getQName(javax.xml.stream.XMLStreamReader)>($r2);

        return $r3;
    }
}
