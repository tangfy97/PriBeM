public class javax.servlet.jsp.tagext.SimpleTagSupport extends java.lang.Object implements javax.servlet.jsp.tagext.SimpleTag
{
    private javax.servlet.jsp.tagext.JspTag parentTag;
    private javax.servlet.jsp.JspContext jspContext;
    private javax.servlet.jsp.tagext.JspFragment jspBody;
    static java.lang.Class class$javax$servlet$jsp$tagext$JspTag;

    public void <init>()
    {
        javax.servlet.jsp.tagext.SimpleTagSupport r0;

        r0 := @this: javax.servlet.jsp.tagext.SimpleTagSupport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void doTag() throws javax.servlet.jsp.JspException, java.io.IOException
    {
        javax.servlet.jsp.tagext.SimpleTagSupport r0;

        r0 := @this: javax.servlet.jsp.tagext.SimpleTagSupport;

        return;
    }

    public void setParent(javax.servlet.jsp.tagext.JspTag)
    {
        javax.servlet.jsp.tagext.SimpleTagSupport r0;
        javax.servlet.jsp.tagext.JspTag r1;

        r0 := @this: javax.servlet.jsp.tagext.SimpleTagSupport;

        r1 := @parameter0: javax.servlet.jsp.tagext.JspTag;

        r0.<javax.servlet.jsp.tagext.SimpleTagSupport: javax.servlet.jsp.tagext.JspTag parentTag> = r1;

        return;
    }

    public javax.servlet.jsp.tagext.JspTag getParent()
    {
        javax.servlet.jsp.tagext.SimpleTagSupport r0;
        javax.servlet.jsp.tagext.JspTag $r1;

        r0 := @this: javax.servlet.jsp.tagext.SimpleTagSupport;

        $r1 = r0.<javax.servlet.jsp.tagext.SimpleTagSupport: javax.servlet.jsp.tagext.JspTag parentTag>;

        return $r1;
    }

    public void setJspContext(javax.servlet.jsp.JspContext)
    {
        javax.servlet.jsp.tagext.SimpleTagSupport r0;
        javax.servlet.jsp.JspContext r1;

        r0 := @this: javax.servlet.jsp.tagext.SimpleTagSupport;

        r1 := @parameter0: javax.servlet.jsp.JspContext;

        r0.<javax.servlet.jsp.tagext.SimpleTagSupport: javax.servlet.jsp.JspContext jspContext> = r1;

        return;
    }

    protected javax.servlet.jsp.JspContext getJspContext()
    {
        javax.servlet.jsp.tagext.SimpleTagSupport r0;
        javax.servlet.jsp.JspContext $r1;

        r0 := @this: javax.servlet.jsp.tagext.SimpleTagSupport;

        $r1 = r0.<javax.servlet.jsp.tagext.SimpleTagSupport: javax.servlet.jsp.JspContext jspContext>;

        return $r1;
    }

    public void setJspBody(javax.servlet.jsp.tagext.JspFragment)
    {
        javax.servlet.jsp.tagext.JspFragment r1;
        javax.servlet.jsp.tagext.SimpleTagSupport r0;

        r0 := @this: javax.servlet.jsp.tagext.SimpleTagSupport;

        r1 := @parameter0: javax.servlet.jsp.tagext.JspFragment;

        r0.<javax.servlet.jsp.tagext.SimpleTagSupport: javax.servlet.jsp.tagext.JspFragment jspBody> = r1;

        return;
    }

    protected javax.servlet.jsp.tagext.JspFragment getJspBody()
    {
        javax.servlet.jsp.tagext.JspFragment $r1;
        javax.servlet.jsp.tagext.SimpleTagSupport r0;

        r0 := @this: javax.servlet.jsp.tagext.SimpleTagSupport;

        $r1 = r0.<javax.servlet.jsp.tagext.SimpleTagSupport: javax.servlet.jsp.tagext.JspFragment jspBody>;

        return $r1;
    }

    public static final javax.servlet.jsp.tagext.JspTag findAncestorWithClass(javax.servlet.jsp.tagext.JspTag, java.lang.Class)
    {
        javax.servlet.jsp.tagext.TagAdapter $r3;
        javax.servlet.jsp.tagext.Tag $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7;
        javax.servlet.jsp.tagext.JspTag r6, r8;
        java.lang.Class r0, $r1, $r2, $r7;
        javax.servlet.jsp.tagext.SimpleTag $r5;

        r6 := @parameter0: javax.servlet.jsp.tagext.JspTag;

        r0 := @parameter1: java.lang.Class;

        z6 = 0;

        if r6 == null goto label03;

        if r0 == null goto label03;

        $r1 = <javax.servlet.jsp.tagext.SimpleTagSupport: java.lang.Class class$javax$servlet$jsp$tagext$JspTag>;

        if $r1 != null goto label01;

        $r7 = staticinvoke <javax.servlet.jsp.tagext.SimpleTagSupport: java.lang.Class class$(java.lang.String)>("javax.servlet.jsp.tagext.JspTag");

        <javax.servlet.jsp.tagext.SimpleTagSupport: java.lang.Class class$javax$servlet$jsp$tagext$JspTag> = $r7;

        goto label02;

     label01:
        $r7 = <javax.servlet.jsp.tagext.SimpleTagSupport: java.lang.Class class$javax$servlet$jsp$tagext$JspTag>;

     label02:
        $z0 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 != 0 goto label04;

        $z5 = virtualinvoke r0.<java.lang.Class: boolean isInterface()>();

        z6 = $z5;

        if $z5 != 0 goto label04;

     label03:
        return null;

     label04:
        r8 = null;

        $z7 = r6 instanceof javax.servlet.jsp.tagext.SimpleTag;

        if $z7 == 0 goto label05;

        $r5 = (javax.servlet.jsp.tagext.SimpleTag) r6;

        r8 = interfaceinvoke $r5.<javax.servlet.jsp.tagext.SimpleTag: javax.servlet.jsp.tagext.JspTag getParent()>();

        goto label06;

     label05:
        $z1 = r6 instanceof javax.servlet.jsp.tagext.Tag;

        if $z1 == 0 goto label06;

        $r4 = (javax.servlet.jsp.tagext.Tag) r6;

        r8 = interfaceinvoke $r4.<javax.servlet.jsp.tagext.Tag: javax.servlet.jsp.tagext.Tag getParent()>();

     label06:
        if r8 != null goto label07;

        return null;

     label07:
        $z2 = r8 instanceof javax.servlet.jsp.tagext.TagAdapter;

        if $z2 == 0 goto label08;

        $r3 = (javax.servlet.jsp.tagext.TagAdapter) r8;

        r8 = virtualinvoke $r3.<javax.servlet.jsp.tagext.TagAdapter: javax.servlet.jsp.tagext.JspTag getAdaptee()>();

     label08:
        if z6 == 0 goto label09;

        $z4 = virtualinvoke r0.<java.lang.Class: boolean isInstance(java.lang.Object)>(r8);

        if $z4 != 0 goto label10;

     label09:
        $r2 = virtualinvoke r8.<java.lang.Object: java.lang.Class getClass()>();

        $z3 = virtualinvoke r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r2);

        if $z3 == 0 goto label11;

     label10:
        return r8;

     label11:
        r6 = r8;

        goto label04;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
