public class com.google.gxp.base.dynamic.Chrome extends com.google.gxp.base.GxpTemplate
{
    private static final java.lang.String GXP$MESSAGE_SOURCE;
    private static final java.util.List GXP$ARGLIST;

    public void <init>()
    {
        com.google.gxp.base.dynamic.Chrome r0;

        r0 := @this: com.google.gxp.base.dynamic.Chrome;

        specialinvoke r0.<com.google.gxp.base.GxpTemplate: void <init>()>();

        return;
    }

    public static void write(java.lang.Appendable, com.google.gxp.base.GxpContext, com.google.gxp.html.HtmlClosure, com.google.gxp.html.HtmlClosure) throws java.io.IOException
    {
        com.google.gxp.base.GxpContext r0;
        java.lang.Appendable r1;
        com.google.gxp.html.HtmlAppender $r3, $r5;
        com.google.gxp.html.HtmlClosure r2, r4;

        r1 := @parameter0: java.lang.Appendable;

        r0 := @parameter1: com.google.gxp.base.GxpContext;

        r2 := @parameter2: com.google.gxp.html.HtmlClosure;

        r4 := @parameter3: com.google.gxp.html.HtmlClosure;

        virtualinvoke r0.<com.google.gxp.base.GxpContext: java.util.Locale getLocale()>();

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("<html><head><title>");

        $r3 = <com.google.gxp.html.HtmlAppender: com.google.gxp.html.HtmlAppender INSTANCE>;

        virtualinvoke $r3.<com.google.gxp.html.HtmlAppender: java.lang.Appendable append(java.lang.Appendable,com.google.gxp.base.GxpContext,com.google.gxp.base.MarkupClosure)>(r1, r0, r2);

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("</title>\n<style type=\"text/css\">\n      pre, .code {\n        background-color: #e0eaf4;\n        border: 1px solid #a9cef1;\n        padding-left: 1em;\n        padding-right: 1em;\n        padding-top: 0.5em;\n        padding-bottom: 0.5em;\n        overflow: auto;\n        font-family: courier;\n        font-size: 12;\n      }\n      div.file {\n        padding-left: 1em;\n        padding-right: 1em;\n        font-family: courier;\n        font-size: 12;\n        white-space:pre;\n      }\n      span.error {\n        color: red;\n        font-weight: bold;\n      }\n    </style></head>\n<body>");

        $r5 = <com.google.gxp.html.HtmlAppender: com.google.gxp.html.HtmlAppender INSTANCE>;

        virtualinvoke $r5.<com.google.gxp.html.HtmlAppender: java.lang.Appendable append(java.lang.Appendable,com.google.gxp.base.GxpContext,com.google.gxp.base.MarkupClosure)>(r1, r0, r4);

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("</body></html>");

        return;
    }

    public static java.util.List getArgList()
    {
        java.util.List $r0;

        $r0 = <com.google.gxp.base.dynamic.Chrome: java.util.List GXP$ARGLIST>;

        return $r0;
    }

    public static com.google.gxp.html.HtmlClosure getGxpClosure(com.google.gxp.html.HtmlClosure, com.google.gxp.html.HtmlClosure)
    {
        com.google.gxp.base.dynamic.Chrome$1 $r0;
        com.google.gxp.html.HtmlClosure r1, r2;

        r1 := @parameter0: com.google.gxp.html.HtmlClosure;

        r2 := @parameter1: com.google.gxp.html.HtmlClosure;

        $r0 = new com.google.gxp.base.dynamic.Chrome$1;

        specialinvoke $r0.<com.google.gxp.base.dynamic.Chrome$1: void <init>(com.google.gxp.html.HtmlClosure,com.google.gxp.html.HtmlClosure)>(r1, r2);

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;
        java.util.List $r1, $r2;

        <com.google.gxp.base.dynamic.Chrome: java.lang.String GXP$MESSAGE_SOURCE> = "com.google.gxp.base.dynamic.messages";

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "title";

        $r0[1] = "body";

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        <com.google.gxp.base.dynamic.Chrome: java.util.List GXP$ARGLIST> = $r2;

        return;
    }
}
