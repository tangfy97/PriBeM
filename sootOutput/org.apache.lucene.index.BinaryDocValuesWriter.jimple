class org.apache.lucene.index.BinaryDocValuesWriter extends org.apache.lucene.index.DocValuesWriter
{
    private final org.apache.lucene.util.ByteBlockPool pool;
    private final org.apache.lucene.util.packed.AppendingLongBuffer lengths;
    private final org.apache.lucene.index.FieldInfo fieldInfo;
    private int addedValues;

    public void <init>(org.apache.lucene.index.FieldInfo, org.apache.lucene.util.Counter)
    {
        org.apache.lucene.index.BinaryDocValuesWriter r0;
        org.apache.lucene.util.Counter r4;
        org.apache.lucene.util.packed.AppendingLongBuffer $r5;
        org.apache.lucene.index.FieldInfo r1;
        org.apache.lucene.util.ByteBlockPool $r2;
        org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator $r3;

        r0 := @this: org.apache.lucene.index.BinaryDocValuesWriter;

        r1 := @parameter0: org.apache.lucene.index.FieldInfo;

        r4 := @parameter1: org.apache.lucene.util.Counter;

        specialinvoke r0.<org.apache.lucene.index.DocValuesWriter: void <init>()>();

        r0.<org.apache.lucene.index.BinaryDocValuesWriter: int addedValues> = 0;

        r0.<org.apache.lucene.index.BinaryDocValuesWriter: org.apache.lucene.index.FieldInfo fieldInfo> = r1;

        $r2 = new org.apache.lucene.util.ByteBlockPool;

        $r3 = new org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator;

        specialinvoke $r3.<org.apache.lucene.util.ByteBlockPool$DirectTrackingAllocator: void <init>(org.apache.lucene.util.Counter)>(r4);

        specialinvoke $r2.<org.apache.lucene.util.ByteBlockPool: void <init>(org.apache.lucene.util.ByteBlockPool$Allocator)>($r3);

        r0.<org.apache.lucene.index.BinaryDocValuesWriter: org.apache.lucene.util.ByteBlockPool pool> = $r2;

        $r5 = new org.apache.lucene.util.packed.AppendingLongBuffer;

        specialinvoke $r5.<org.apache.lucene.util.packed.AppendingLongBuffer: void <init>()>();

        r0.<org.apache.lucene.index.BinaryDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer lengths> = $r5;

        return;
    }

    public void addValue(int, org.apache.lucene.util.BytesRef)
    {
        org.apache.lucene.util.BytesRef r1;
        java.lang.StringBuilder $r6, $r7, $r10, $r11, $r12, $r15, $r16, $r19, $r20, $r23, $r24, $r27, $r28;
        org.apache.lucene.index.BinaryDocValuesWriter r0;
        long $l7;
        org.apache.lucene.util.ByteBlockPool $r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9;
        java.lang.String $r9, $r13, $r18, $r21, $r26, $r29;
        java.lang.IllegalArgumentException $r5, $r14, $r22;
        org.apache.lucene.util.packed.AppendingLongBuffer $r2, $r4;
        org.apache.lucene.index.FieldInfo $r8, $r17, $r25;

        r0 := @this: org.apache.lucene.index.BinaryDocValuesWriter;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.lucene.util.BytesRef;

        $i1 = r0.<org.apache.lucene.index.BinaryDocValuesWriter: int addedValues>;

        if i0 >= $i1 goto label1;

        $r22 = new java.lang.IllegalArgumentException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DocValuesField \"");

        $r25 = r0.<org.apache.lucene.index.BinaryDocValuesWriter: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r26 = $r25.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" appears more than once in this document (only one value is allowed per field)");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r29);

        throw $r22;

     label1:
        if r1 != null goto label2;

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("field=\"");

        $r17 = r0.<org.apache.lucene.index.BinaryDocValuesWriter: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r18 = $r17.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": null value not allowed");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r14;

     label2:
        $i2 = r1.<org.apache.lucene.util.BytesRef: int length>;

        if $i2 <= 32766 goto label3;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DocValuesField \"");

        $r8 = r0.<org.apache.lucene.index.BinaryDocValuesWriter: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r9 = $r8.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" is too large, must be <= ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(32766);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r5;

     label3:
        $i3 = r0.<org.apache.lucene.index.BinaryDocValuesWriter: int addedValues>;

        if $i3 >= i0 goto label4;

        $i8 = r0.<org.apache.lucene.index.BinaryDocValuesWriter: int addedValues>;

        $i9 = $i8 + 1;

        r0.<org.apache.lucene.index.BinaryDocValuesWriter: int addedValues> = $i9;

        $r4 = r0.<org.apache.lucene.index.BinaryDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer lengths>;

        virtualinvoke $r4.<org.apache.lucene.util.packed.AppendingLongBuffer: void add(long)>(0L);

        goto label3;

     label4:
        $i4 = r0.<org.apache.lucene.index.BinaryDocValuesWriter: int addedValues>;

        $i5 = $i4 + 1;

        r0.<org.apache.lucene.index.BinaryDocValuesWriter: int addedValues> = $i5;

        $r2 = r0.<org.apache.lucene.index.BinaryDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer lengths>;

        $i6 = r1.<org.apache.lucene.util.BytesRef: int length>;

        $l7 = (long) $i6;

        virtualinvoke $r2.<org.apache.lucene.util.packed.AppendingLongBuffer: void add(long)>($l7);

        $r3 = r0.<org.apache.lucene.index.BinaryDocValuesWriter: org.apache.lucene.util.ByteBlockPool pool>;

        virtualinvoke $r3.<org.apache.lucene.util.ByteBlockPool: void append(org.apache.lucene.util.BytesRef)>(r1);

        return;
    }

    public void finish(int)
    {
        int i0;
        org.apache.lucene.index.BinaryDocValuesWriter r0;

        r0 := @this: org.apache.lucene.index.BinaryDocValuesWriter;

        i0 := @parameter0: int;

        return;
    }

    public void flush(org.apache.lucene.index.SegmentWriteState, org.apache.lucene.codecs.DocValuesConsumer) throws java.io.IOException
    {
        org.apache.lucene.codecs.DocValuesConsumer r2;
        org.apache.lucene.index.BinaryDocValuesWriter r3;
        org.apache.lucene.index.SegmentInfo $r1;
        org.apache.lucene.index.SegmentWriteState r0;
        int $i0;
        org.apache.lucene.index.FieldInfo $r5;
        org.apache.lucene.index.BinaryDocValuesWriter$1 $r4;

        r3 := @this: org.apache.lucene.index.BinaryDocValuesWriter;

        r0 := @parameter0: org.apache.lucene.index.SegmentWriteState;

        r2 := @parameter1: org.apache.lucene.codecs.DocValuesConsumer;

        $r1 = r0.<org.apache.lucene.index.SegmentWriteState: org.apache.lucene.index.SegmentInfo segmentInfo>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $r5 = r3.<org.apache.lucene.index.BinaryDocValuesWriter: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r4 = new org.apache.lucene.index.BinaryDocValuesWriter$1;

        specialinvoke $r4.<org.apache.lucene.index.BinaryDocValuesWriter$1: void <init>(org.apache.lucene.index.BinaryDocValuesWriter,int)>(r3, $i0);

        virtualinvoke r2.<org.apache.lucene.codecs.DocValuesConsumer: void addBinaryField(org.apache.lucene.index.FieldInfo,java.lang.Iterable)>($r5, $r4);

        return;
    }

    public void abort()
    {
        org.apache.lucene.index.BinaryDocValuesWriter r0;

        r0 := @this: org.apache.lucene.index.BinaryDocValuesWriter;

        return;
    }

    static org.apache.lucene.util.packed.AppendingLongBuffer access$000(org.apache.lucene.index.BinaryDocValuesWriter)
    {
        org.apache.lucene.index.BinaryDocValuesWriter r0;
        org.apache.lucene.util.packed.AppendingLongBuffer $r1;

        r0 := @parameter0: org.apache.lucene.index.BinaryDocValuesWriter;

        $r1 = r0.<org.apache.lucene.index.BinaryDocValuesWriter: org.apache.lucene.util.packed.AppendingLongBuffer lengths>;

        return $r1;
    }

    static org.apache.lucene.util.ByteBlockPool access$100(org.apache.lucene.index.BinaryDocValuesWriter)
    {
        org.apache.lucene.index.BinaryDocValuesWriter r0;
        org.apache.lucene.util.ByteBlockPool $r1;

        r0 := @parameter0: org.apache.lucene.index.BinaryDocValuesWriter;

        $r1 = r0.<org.apache.lucene.index.BinaryDocValuesWriter: org.apache.lucene.util.ByteBlockPool pool>;

        return $r1;
    }
}
