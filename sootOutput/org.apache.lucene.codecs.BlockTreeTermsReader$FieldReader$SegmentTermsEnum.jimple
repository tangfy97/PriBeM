final class org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum extends org.apache.lucene.index.TermsEnum
{
    private org.apache.lucene.store.IndexInput in;
    private org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame[] stack;
    private final org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame staticFrame;
    private org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame;
    private boolean termExists;
    private int targetBeforeCurrentLength;
    private final org.apache.lucene.store.ByteArrayDataInput scratchReader;
    private int validIndexPrefix;
    private boolean eof;
    final org.apache.lucene.util.BytesRef term;
    private final org.apache.lucene.util.fst.FST$BytesReader fstReader;
    private org.apache.lucene.util.fst.FST$Arc[] arcs;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1;

    public void <init>(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader) throws java.io.IOException
    {
        org.apache.lucene.util.fst.FST$BytesReader $r9;
        org.apache.lucene.store.ByteArrayDataInput $r21;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader r1;
        java.lang.AssertionError $r25;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame[] $r5;
        org.apache.lucene.util.fst.FST$Arc $r14, $r15, $r24;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r0;
        int i0, $i1, $i3;
        org.apache.lucene.util.fst.FST$Arc[] $r4, $r13, $r18, $r19;
        boolean $z0, $z1;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame $r10, $r20, $r23;
        org.apache.lucene.util.BytesRef $r22;
        org.apache.lucene.util.fst.FST $r7, $r8, $r11, $r12;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        r1 := @parameter0: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1> = r1;

        specialinvoke r0.<org.apache.lucene.index.TermsEnum: void <init>()>();

        $r21 = new org.apache.lucene.store.ByteArrayDataInput;

        specialinvoke $r21.<org.apache.lucene.store.ByteArrayDataInput: void <init>()>();

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.store.ByteArrayDataInput scratchReader> = $r21;

        $r22 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r22.<org.apache.lucene.util.BytesRef: void <init>()>();

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term> = $r22;

        $r4 = newarray (org.apache.lucene.util.fst.FST$Arc)[1];

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.fst.FST$Arc[] arcs> = $r4;

        $r5 = newarray (org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame)[0];

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame[] stack> = $r5;

        $r23 = new org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame;

        $i3 = (int) -1;

        specialinvoke $r23.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void <init>(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum,int)>(r0, $i3);

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame staticFrame> = $r23;

        $r7 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.fst.FST access$500(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader)>(r1);

        if $r7 != null goto label1;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader> = null;

        goto label2;

     label1:
        $r8 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.fst.FST access$500(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader)>(r1);

        $r9 = virtualinvoke $r8.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$BytesReader getBytesReader()>();

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader> = $r9;

     label2:
        i0 = 0;

     label3:
        $r19 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $i1 = lengthof $r19;

        if i0 >= $i1 goto label4;

        $r18 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $r24 = new org.apache.lucene.util.fst.FST$Arc;

        specialinvoke $r24.<org.apache.lucene.util.fst.FST$Arc: void <init>()>();

        $r18[i0] = $r24;

        i0 = i0 + 1;

        goto label3;

     label4:
        $r10 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame staticFrame>;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame> = $r10;

        $r11 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.fst.FST access$500(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader)>(r1);

        if $r11 == null goto label5;

        $r12 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.fst.FST access$500(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader)>(r1);

        $r13 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $r14 = $r13[0];

        $r15 = virtualinvoke $r12.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc getFirstArc(org.apache.lucene.util.fst.FST$Arc)>($r14);

        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label5;

        $z1 = virtualinvoke $r15.<org.apache.lucene.util.fst.FST$Arc: boolean isFinal()>();

        if $z1 != 0 goto label5;

        $r25 = new java.lang.AssertionError;

        specialinvoke $r25.<java.lang.AssertionError: void <init>()>();

        throw $r25;

     label5:
        $r20 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame staticFrame>;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame> = $r20;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: int validIndexPrefix> = 0;

        return;
    }

    void initIndexInput()
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r0;
        org.apache.lucene.store.IndexInput $r1, $r4, $r5;
        org.apache.lucene.codecs.BlockTreeTermsReader $r3;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader $r2;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.store.IndexInput in>;

        if $r1 != null goto label1;

        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r3 = $r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.codecs.BlockTreeTermsReader this$0>;

        $r4 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.store.IndexInput access$400(org.apache.lucene.codecs.BlockTreeTermsReader)>($r3);

        $r5 = virtualinvoke $r4.<org.apache.lucene.store.IndexInput: org.apache.lucene.store.IndexInput clone()>();

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.store.IndexInput in> = $r5;

     label1:
        return;
    }

    public org.apache.lucene.codecs.BlockTreeTermsReader$Stats computeBlockStats() throws java.io.IOException
    {
        org.apache.lucene.util.fst.FST$Arc $r40, $r41, $r48, $r49, r57, r67;
        byte $b8;
        org.apache.lucene.util.fst.FST$Arc[] $r39, $r47;
        org.apache.lucene.codecs.BlockTreeTermsReader$Stats $r0;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader $r2, $r5, $r8, $r11, $r35, $r37, $r45, $r51, $r53, $r55, $r58, $r68;
        long $l1, $l2, l4, $l7, $l9, $l10, $l11, $l12;
        java.lang.AssertionError $r33, $r42, $r50;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame[] $r30;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r1;
        java.lang.String $r4, $r7;
        org.apache.lucene.index.FieldInfo $r6;
        org.apache.lucene.util.fst.FST $r9, $r12, $r36, $r38, $r46, $r52, $r54, $r56;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame $r10, $r13, $r14, $r16, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r31, $r32, $r34, $r43, $r44, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r70, $r71, $r72;
        org.apache.lucene.util.BytesRef $r15, $r17, $r59, $r69, $r73;
        org.apache.lucene.codecs.BlockTreeTermsReader $r3;
        int $i0, $i3, $i5, $i6, $i13, $i14;

        r1 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        $r0 = new org.apache.lucene.codecs.BlockTreeTermsReader$Stats;

        $r2 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r3 = $r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.codecs.BlockTreeTermsReader this$0>;

        $r4 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader: java.lang.String access$800(org.apache.lucene.codecs.BlockTreeTermsReader)>($r3);

        $r5 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r6 = $r5.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r7 = $r6.<org.apache.lucene.index.FieldInfo: java.lang.String name>;

        specialinvoke $r0.<org.apache.lucene.codecs.BlockTreeTermsReader$Stats: void <init>(java.lang.String,java.lang.String)>($r4, $r7);

        $r8 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r9 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.fst.FST access$500(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader)>($r8);

        if $r9 == null goto label01;

        $r51 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r52 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.fst.FST access$500(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader)>($r51);

        $l9 = virtualinvoke $r52.<org.apache.lucene.util.fst.FST: long getNodeCount()>();

        $r0.<org.apache.lucene.codecs.BlockTreeTermsReader$Stats: long indexNodeCount> = $l9;

        $r53 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r54 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.fst.FST access$500(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader)>($r53);

        $l10 = virtualinvoke $r54.<org.apache.lucene.util.fst.FST: long getArcCount()>();

        $r0.<org.apache.lucene.codecs.BlockTreeTermsReader$Stats: long indexArcCount> = $l10;

        $r55 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r56 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.fst.FST access$500(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader)>($r55);

        $l11 = virtualinvoke $r56.<org.apache.lucene.util.fst.FST: long sizeInBytes()>();

        $r0.<org.apache.lucene.codecs.BlockTreeTermsReader$Stats: long indexNumBytes> = $l11;

     label01:
        $r10 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame staticFrame>;

        r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame> = $r10;

        $r11 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r12 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.fst.FST access$500(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader)>($r11);

        if $r12 == null goto label02;

        $r45 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r46 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.fst.FST access$500(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader)>($r45);

        $r47 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $r48 = $r47[0];

        $r49 = virtualinvoke $r46.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc getFirstArc(org.apache.lucene.util.fst.FST$Arc)>($r48);

        r57 = $r49;

        $z6 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z6 != 0 goto label03;

        $z7 = virtualinvoke $r49.<org.apache.lucene.util.fst.FST$Arc: boolean isFinal()>();

        if $z7 != 0 goto label03;

        $r50 = new java.lang.AssertionError;

        specialinvoke $r50.<java.lang.AssertionError: void <init>()>();

        throw $r50;

     label02:
        r57 = null;

     label03:
        $r58 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r59 = $r58.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.BytesRef rootCode>;

        $r60 = virtualinvoke r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame pushFrame(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.BytesRef,int)>(r57, $r59, 0);

        r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame> = $r60;

        $r61 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $r62 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $l12 = $r62.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fp>;

        $r61.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fpOrig> = $l12;

        $r63 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r63.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void loadBlock()>();

        r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: int validIndexPrefix> = 0;

        $r13 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $r64 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $z8 = $r64.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isLastInFloor>;

        if $z8 != 0 goto label04;

        $z9 = 1;

        goto label05;

     label04:
        $z9 = 0;

     label05:
        virtualinvoke $r0.<org.apache.lucene.codecs.BlockTreeTermsReader$Stats: void startBlock(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame,boolean)>($r13, $z9);

     label06:
        $r65 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $i13 = $r65.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $r66 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $i14 = $r66.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int entCount>;

        if $i13 != $i14 goto label10;

        $r25 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r0.<org.apache.lucene.codecs.BlockTreeTermsReader$Stats: void endBlock(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame)>($r25);

        $r26 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $z2 = $r26.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isLastInFloor>;

        if $z2 != 0 goto label07;

        $r43 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r43.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void loadNextFloorBlock()>();

        $r44 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r0.<org.apache.lucene.codecs.BlockTreeTermsReader$Stats: void startBlock(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame,boolean)>($r44, 1);

        goto label06;

     label07:
        $r27 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $i3 = $r27.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int ord>;

        if $i3 != 0 goto label08;

        goto label14;

     label08:
        $r28 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        l4 = $r28.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fpOrig>;

        $r30 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame[] stack>;

        $r29 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $i5 = $r29.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int ord>;

        $i6 = $i5 - 1;

        $r31 = $r30[$i6];

        r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame> = $r31;

        $z3 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z3 != 0 goto label09;

        $r32 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $l7 = $r32.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long lastSubFP>;

        $b8 = l4 cmp $l7;

        if $b8 == 0 goto label09;

        $r33 = new java.lang.AssertionError;

        specialinvoke $r33.<java.lang.AssertionError: void <init>()>();

        throw $r33;

     label09:
        goto label06;

     label10:
        $r14 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $z0 = virtualinvoke $r14.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean next()>();

        if $z0 == 0 goto label13;

        $r16 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $l1 = $r16.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long lastSubFP>;

        $r17 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $i0 = $r17.<org.apache.lucene.util.BytesRef: int length>;

        $r18 = virtualinvoke r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame pushFrame(org.apache.lucene.util.fst.FST$Arc,long,int)>(null, $l1, $i0);

        r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame> = $r18;

        $r20 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $r19 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $l2 = $r19.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fp>;

        $r20.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fpOrig> = $l2;

        $r21 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $r21.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isFloor> = 0;

        $r22 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r22.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void loadBlock()>();

        $r24 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $r23 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $z1 = $r23.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isLastInFloor>;

        if $z1 != 0 goto label11;

        $z10 = 1;

        goto label12;

     label11:
        $z10 = 0;

     label12:
        virtualinvoke $r0.<org.apache.lucene.codecs.BlockTreeTermsReader$Stats: void startBlock(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame,boolean)>($r24, $z10);

        goto label10;

     label13:
        $r15 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        virtualinvoke $r0.<org.apache.lucene.codecs.BlockTreeTermsReader$Stats: void term(org.apache.lucene.util.BytesRef)>($r15);

        goto label06;

     label14:
        virtualinvoke $r0.<org.apache.lucene.codecs.BlockTreeTermsReader$Stats: void finish()>();

        $r34 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame staticFrame>;

        r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame> = $r34;

        $r35 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r36 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.fst.FST access$500(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader)>($r35);

        if $r36 == null goto label15;

        $r37 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r38 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.fst.FST access$500(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader)>($r37);

        $r39 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $r40 = $r39[0];

        $r41 = virtualinvoke $r38.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc getFirstArc(org.apache.lucene.util.fst.FST$Arc)>($r40);

        r67 = $r41;

        $z4 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z4 != 0 goto label16;

        $z5 = virtualinvoke $r41.<org.apache.lucene.util.fst.FST$Arc: boolean isFinal()>();

        if $z5 != 0 goto label16;

        $r42 = new java.lang.AssertionError;

        specialinvoke $r42.<java.lang.AssertionError: void <init>()>();

        throw $r42;

     label15:
        r67 = null;

     label16:
        $r68 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r69 = $r68.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.BytesRef rootCode>;

        $r70 = virtualinvoke r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame pushFrame(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.BytesRef,int)>(r67, $r69, 0);

        r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame> = $r70;

        $r71 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r71.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void rewind()>();

        $r72 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r72.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void loadBlock()>();

        r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: int validIndexPrefix> = 0;

        $r73 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r73.<org.apache.lucene.util.BytesRef: int length> = 0;

        return $r0;
    }

    private org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame getFrame(int) throws java.io.IOException
    {
        java.lang.AssertionError $r6;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame[] $r1, $r2, $r4, r7, $r8, $r9, $r10;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        boolean $z0;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame $r3, $r5, $r11;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame[] stack>;

        $i1 = lengthof $r1;

        if i0 < $i1 goto label3;

        $i4 = 1 + i0;

        $i3 = <org.apache.lucene.util.RamUsageEstimator: int NUM_BYTES_OBJECT_REF>;

        $i5 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>($i4, $i3);

        r7 = newarray (org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame)[$i5];

        $r9 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame[] stack>;

        $r8 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame[] stack>;

        $i6 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r7, 0, $i6);

        $r10 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame[] stack>;

        i8 = lengthof $r10;

     label1:
        $i7 = lengthof r7;

        if i8 >= $i7 goto label2;

        $r11 = new org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame;

        specialinvoke $r11.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void <init>(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum,int)>(r0, i8);

        r7[i8] = $r11;

        i8 = i8 + 1;

        goto label1;

     label2:
        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame[] stack> = r7;

     label3:
        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        $r4 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame[] stack>;

        $r5 = $r4[i0];

        $i2 = $r5.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int ord>;

        if $i2 == i0 goto label4;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label4:
        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame[] stack>;

        $r3 = $r2[i0];

        return $r3;
    }

    private org.apache.lucene.util.fst.FST$Arc getArc(int)
    {
        org.apache.lucene.util.fst.FST$Arc $r3, $r8;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        org.apache.lucene.util.fst.FST$Arc[] $r1, $r2, r4, $r5, $r6, $r7;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $i1 = lengthof $r1;

        if i0 < $i1 goto label3;

        $i3 = 1 + i0;

        $i2 = <org.apache.lucene.util.RamUsageEstimator: int NUM_BYTES_OBJECT_REF>;

        $i4 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>($i3, $i2);

        r4 = newarray (org.apache.lucene.util.fst.FST$Arc)[$i4];

        $r6 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $r5 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $i5 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r4, 0, $i5);

        $r7 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        i7 = lengthof $r7;

     label1:
        $i6 = lengthof r4;

        if i7 >= $i6 goto label2;

        $r8 = new org.apache.lucene.util.fst.FST$Arc;

        specialinvoke $r8.<org.apache.lucene.util.fst.FST$Arc: void <init>()>();

        r4[i7] = $r8;

        i7 = i7 + 1;

        goto label1;

     label2:
        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.fst.FST$Arc[] arcs> = r4;

     label3:
        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $r3 = $r2[i0];

        return $r3;
    }

    public java.util.Comparator getComparator()
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r1;
        java.util.Comparator $r0;

        r1 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        $r0 = staticinvoke <org.apache.lucene.util.BytesRef: java.util.Comparator getUTF8SortedAsUnicodeComparator()>();

        return $r0;
    }

    org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame pushFrame(org.apache.lucene.util.fst.FST$Arc, org.apache.lucene.util.BytesRef, int) throws java.io.IOException
    {
        byte[] $r2;
        org.apache.lucene.store.ByteArrayDataInput $r3, $r4, $r8;
        long $l2, l3, $l6, $l8;
        org.apache.lucene.util.fst.FST$Arc r7;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r0;
        byte $b7, $b9;
        int $i0, $i1, $i4, $i5, i10;
        boolean $z0, $z1, $z2, $z3;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame $r5, $r6;
        org.apache.lucene.util.BytesRef r1;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        r7 := @parameter0: org.apache.lucene.util.fst.FST$Arc;

        r1 := @parameter1: org.apache.lucene.util.BytesRef;

        i10 := @parameter2: int;

        $r3 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.store.ByteArrayDataInput scratchReader>;

        $r2 = r1.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i1 = r1.<org.apache.lucene.util.BytesRef: int offset>;

        $i0 = r1.<org.apache.lucene.util.BytesRef: int length>;

        virtualinvoke $r3.<org.apache.lucene.store.ByteArrayDataInput: void reset(byte[],int,int)>($r2, $i1, $i0);

        $r4 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.store.ByteArrayDataInput scratchReader>;

        $l2 = virtualinvoke $r4.<org.apache.lucene.store.ByteArrayDataInput: long readVLong()>();

        l3 = $l2 >>> 2;

        $r5 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $i4 = $r5.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int ord>;

        $i5 = 1 + $i4;

        $r6 = specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame getFrame(int)>($i5);

        $l6 = $l2 & 2L;

        $b7 = $l6 cmp 0L;

        if $b7 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        $r6.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean hasTerms> = $z2;

        $z0 = $r6.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean hasTerms>;

        $r6.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean hasTermsOrig> = $z0;

        $l8 = $l2 & 1L;

        $b9 = $l8 cmp 0L;

        if $b9 == 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        $r6.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isFloor> = $z3;

        $z1 = $r6.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isFloor>;

        if $z1 == 0 goto label5;

        $r8 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.store.ByteArrayDataInput scratchReader>;

        virtualinvoke $r6.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void setFloorData(org.apache.lucene.store.ByteArrayDataInput,org.apache.lucene.util.BytesRef)>($r8, r1);

     label5:
        virtualinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame pushFrame(org.apache.lucene.util.fst.FST$Arc,long,int)>(r7, l3, i10);

        return $r6;
    }

    org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame pushFrame(org.apache.lucene.util.fst.FST$Arc, long, int) throws java.io.IOException
    {
        long l2, $l3;
        java.lang.AssertionError $r6;
        org.apache.lucene.util.fst.FST$Arc r3;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r0;
        byte $b4;
        int $i0, $i1, i5, $i6, $i7, $i8, $i9, $i11, $i13;
        boolean $z0;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame $r1, $r2;
        org.apache.lucene.codecs.BlockTermState $r4;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        r3 := @parameter0: org.apache.lucene.util.fst.FST$Arc;

        l2 := @parameter1: long;

        i5 := @parameter2: int;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $i0 = $r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int ord>;

        $i1 = 1 + $i0;

        $r2 = specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame getFrame(int)>($i1);

        $r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.util.fst.FST$Arc arc> = r3;

        $l3 = $r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fpOrig>;

        $b4 = $l3 cmp l2;

        if $b4 != 0 goto label2;

        $i6 = $r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $i11 = (int) -1;

        if $i6 == $i11 goto label2;

        $i8 = $r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        $i7 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: int targetBeforeCurrentLength>;

        if $i8 <= $i7 goto label1;

        virtualinvoke $r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void rewind()>();

     label1:
        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $i9 = $r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        if i5 == $i9 goto label3;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label2:
        $i13 = (int) -1;

        $r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt> = $i13;

        $r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix> = i5;

        $r4 = $r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTermState state>;

        $r4.<org.apache.lucene.codecs.BlockTermState: int termBlockOrd> = 0;

        $r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fp> = l2;

        $r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fpOrig> = l2;

        $r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long lastSubFP> = -1L;

     label3:
        return $r2;
    }

    private boolean clearEOF()
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r0;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean eof> = 0;

        return 1;
    }

    private boolean setEOF()
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r0;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean eof> = 1;

        return 1;
    }

    public boolean seekExact(org.apache.lucene.util.BytesRef, boolean) throws java.io.IOException
    {
        byte[] $r4, $r31, $r38, $r65, $r80, $r81, $r83, $r84, $r96, $r102, $r110, $r112;
        byte $b6, $b8, $b10, $b23, $b26, $b29, $b32, $b40, $b47;
        java.lang.StringBuilder $r99, $r100, $r101, $r103, $r121;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame[] $r73, $r90;
        short $s27, $s28, $s33, $s34, $s41, $s48, s57, $s58, $s59, $s62, $s64, $s65, $s66, $s71;
        org.apache.lucene.util.fst.FST$BytesReader $r35;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i11, $i12, $i13, $i14, $i15, $i16, i17, $i18, $i19, $i20, $i21, $i22, $i24, $i25, $i30, $i31, $i35, $i36, $i37, $i38, $i39, $i42, $i43, $i45, $i46, $i50, $i51, $i52, $i53, i54, i55, $i56, $i60, $i61, $i63, $i67, $i68, $i70, $i72;
        java.lang.Object $r14, $r18, $r20, $r42, $r45, $r47, $r52, $r54, $r55, $r67, $r72, $r89, $r93, $r95;
        org.apache.lucene.util.fst.FST$Arc $r12, $r13, $r34, $r36, r114;
        org.apache.lucene.util.fst.FST$Arc[] $r11, $r71, $r85;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader $r1, $r9, $r16, $r32, $r39, $r43, $r50, $r86, $r91;
        java.lang.AssertionError $r118, $r119, $r120, $r122, $r123, $r124, $r125, $r126;
        org.apache.lucene.util.fst.Outputs $r19, $r46, $r53, $r94;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r0;
        java.lang.String $r104;
        org.apache.lucene.index.TermsEnum$SeekStatus $r28, $r29, $r62, $r63;
        org.apache.lucene.util.fst.FST $r2, $r10, $r33;
        java.lang.IllegalStateException $r117;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, z16;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame $r6, $r7, $r8, $r15, $r22, $r23, $r24, $r25, $r26, $r27, $r49, $r57, $r58, $r59, $r60, $r61, $r76, r116;
        org.apache.lucene.util.BytesRef $r3, r5, $r21, $r30, $r37, $r41, $r48, $r64, $r66, $r68, $r74, $r77, $r78, $r79, $r82, $r88, $r105, $r109, $r111, r115;
        org.apache.lucene.codecs.BlockTreeTermsReader $r17, $r40, $r44, $r51, $r87, $r92;
        char $c44, $c49;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        r5 := @parameter0: org.apache.lucene.util.BytesRef;

        z16 := @parameter1: boolean;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r2 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.fst.FST access$500(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader)>($r1);

        if $r2 != null goto label01;

        $r117 = new java.lang.IllegalStateException;

        specialinvoke $r117.<java.lang.IllegalStateException: void <init>(java.lang.String)>("terms index was not loaded");

        throw $r117;

     label01:
        $r3 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r4 = $r3.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i1 = lengthof $r4;

        $i0 = r5.<org.apache.lucene.util.BytesRef: int length>;

        if $i1 > $i0 goto label02;

        $r111 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r109 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r110 = $r109.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i52 = r5.<org.apache.lucene.util.BytesRef: int length>;

        $i53 = 1 + $i52;

        $r112 = staticinvoke <org.apache.lucene.util.ArrayUtil: byte[] grow(byte[],int)>($r110, $i53);

        $r111.<org.apache.lucene.util.BytesRef: byte[] bytes> = $r112;

     label02:
        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label03;

        $z15 = specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean clearEOF()>();

        if $z15 != 0 goto label03;

        $r118 = new java.lang.AssertionError;

        specialinvoke $r118.<java.lang.AssertionError: void <init>()>();

        throw $r118;

     label03:
        $r6 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $i2 = $r6.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int ord>;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: int targetBeforeCurrentLength> = $i2;

        $r8 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $r7 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame staticFrame>;

        if $r8 == $r7 goto label21;

        $r71 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        r114 = $r71[0];

        $z8 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z8 != 0 goto label04;

        $z14 = virtualinvoke r114.<org.apache.lucene.util.fst.FST$Arc: boolean isFinal()>();

        if $z14 != 0 goto label04;

        $r119 = new java.lang.AssertionError;

        specialinvoke $r119.<java.lang.AssertionError: void <init>()>();

        throw $r119;

     label04:
        $r72 = r114.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        r115 = (org.apache.lucene.util.BytesRef) $r72;

        i54 = 0;

        $r73 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame[] stack>;

        r116 = $r73[0];

        $z9 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z9 != 0 goto label05;

        $i51 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: int validIndexPrefix>;

        $r105 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $i50 = $r105.<org.apache.lucene.util.BytesRef: int length>;

        if $i51 <= $i50 goto label05;

        $r120 = new java.lang.AssertionError;

        specialinvoke $r120.<java.lang.AssertionError: void <init>()>();

        throw $r120;

     label05:
        $i13 = r5.<org.apache.lucene.util.BytesRef: int length>;

        $i12 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: int validIndexPrefix>;

        $i14 = staticinvoke <java.lang.Math: int min(int,int)>($i13, $i12);

        i55 = 0;

     label06:
        if i54 >= $i14 goto label11;

        $r82 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r83 = $r82.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $b29 = $r83[i54];

        $s58 = (short) $b29;

        $s34 = $s58 & 255;

        $r84 = r5.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i30 = r5.<org.apache.lucene.util.BytesRef: int offset>;

        $i31 = $i30 + i54;

        $b32 = $r84[$i31];

        $s59 = (short) $b32;

        $s33 = $s59 & 255;

        $i60 = (int) $s34;

        $i61 = (int) $s33;

        i55 = $i60 - $i61;

        if i55 == 0 goto label07;

        goto label11;

     label07:
        $r85 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $i35 = 1 + i54;

        r114 = $r85[$i35];

        $z12 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z12 != 0 goto label08;

        $i42 = r114.<org.apache.lucene.util.fst.FST$Arc: int label>;

        $r96 = r5.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i38 = r5.<org.apache.lucene.util.BytesRef: int offset>;

        $i39 = $i38 + i54;

        $b40 = $r96[$i39];

        $s62 = (short) $b40;

        $s41 = $s62 & 255;

        $i63 = (int) $s41;

        if $i42 == $i63 goto label08;

        $r122 = new java.lang.AssertionError;

        $r121 = new java.lang.StringBuilder;

        specialinvoke $r121.<java.lang.StringBuilder: void <init>()>();

        $r99 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("arc.label=");

        $i43 = r114.<org.apache.lucene.util.fst.FST$Arc: int label>;

        $c44 = (char) $i43;

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c44);

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" targetLabel=");

        $r102 = r5.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i45 = r5.<org.apache.lucene.util.BytesRef: int offset>;

        $i46 = $i45 + i54;

        $b47 = $r102[$i46];

        $s64 = (short) $b47;

        $s48 = $s64 & 255;

        $c49 = (char) $s48;

        $r103 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c49);

        $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r122.<java.lang.AssertionError: void <init>(java.lang.Object)>($r104);

        throw $r122;

     label08:
        $r89 = r114.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        $r86 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r87 = $r86.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.codecs.BlockTreeTermsReader this$0>;

        $r88 = $r87.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.util.BytesRef NO_OUTPUT>;

        if $r89 == $r88 goto label09;

        $r91 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r92 = $r91.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.codecs.BlockTreeTermsReader this$0>;

        $r94 = $r92.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.util.fst.Outputs fstOutputs>;

        $r93 = r114.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        $r95 = virtualinvoke $r94.<org.apache.lucene.util.fst.Outputs: java.lang.Object add(java.lang.Object,java.lang.Object)>(r115, $r93);

        r115 = (org.apache.lucene.util.BytesRef) $r95;

     label09:
        $z13 = virtualinvoke r114.<org.apache.lucene.util.fst.FST$Arc: boolean isFinal()>();

        if $z13 == 0 goto label10;

        $r90 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame[] stack>;

        $i36 = r116.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int ord>;

        $i37 = 1 + $i36;

        r116 = $r90[$i37];

     label10:
        i54 = i54 + 1;

        goto label06;

     label11:
        if i55 != 0 goto label16;

        i17 = i54;

        $i19 = r5.<org.apache.lucene.util.BytesRef: int length>;

        $r77 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $i18 = $r77.<org.apache.lucene.util.BytesRef: int length>;

        $i20 = staticinvoke <java.lang.Math: int min(int,int)>($i19, $i18);

     label12:
        if i54 >= $i20 goto label14;

        $r79 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r80 = $r79.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $b23 = $r80[i54];

        $s65 = (short) $b23;

        $s28 = $s65 & 255;

        $r81 = r5.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i24 = r5.<org.apache.lucene.util.BytesRef: int offset>;

        $i25 = $i24 + i54;

        $b26 = $r81[$i25];

        $s66 = (short) $b26;

        $s27 = $s66 & 255;

        $i67 = (int) $s28;

        $i68 = (int) $s27;

        i55 = $i67 - $i68;

        if i55 == 0 goto label13;

        goto label14;

     label13:
        i54 = i54 + 1;

        goto label12;

     label14:
        if i55 != 0 goto label15;

        $r78 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $i22 = $r78.<org.apache.lucene.util.BytesRef: int length>;

        $i21 = r5.<org.apache.lucene.util.BytesRef: int length>;

        i55 = $i22 - $i21;

     label15:
        i54 = i17;

     label16:
        if i55 >= 0 goto label17;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame> = r116;

        goto label20;

     label17:
        if i55 <= 0 goto label18;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: int targetBeforeCurrentLength> = 0;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame> = r116;

        $r76 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r76.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void rewind()>();

        goto label20;

     label18:
        $z10 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z10 != 0 goto label19;

        $r74 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $i16 = $r74.<org.apache.lucene.util.BytesRef: int length>;

        $i15 = r5.<org.apache.lucene.util.BytesRef: int length>;

        if $i16 == $i15 goto label19;

        $r123 = new java.lang.AssertionError;

        specialinvoke $r123.<java.lang.AssertionError: void <init>()>();

        throw $r123;

     label19:
        $z11 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean termExists>;

        if $z11 == 0 goto label20;

        return 1;

     label20:
        goto label24;

     label21:
        $i70 = (int) -1;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: int targetBeforeCurrentLength> = $i70;

        $r9 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r10 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.fst.FST access$500(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader)>($r9);

        $r11 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $r12 = $r11[0];

        $r13 = virtualinvoke $r10.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc getFirstArc(org.apache.lucene.util.fst.FST$Arc)>($r12);

        r114 = $r13;

        $z1 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z1 != 0 goto label22;

        $z7 = virtualinvoke $r13.<org.apache.lucene.util.fst.FST$Arc: boolean isFinal()>();

        if $z7 != 0 goto label22;

        $r124 = new java.lang.AssertionError;

        specialinvoke $r124.<java.lang.AssertionError: void <init>()>();

        throw $r124;

     label22:
        $z2 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z2 != 0 goto label23;

        $r67 = $r13.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        if $r67 != null goto label23;

        $r125 = new java.lang.AssertionError;

        specialinvoke $r125.<java.lang.AssertionError: void <init>()>();

        throw $r125;

     label23:
        $r14 = $r13.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        $r68 = (org.apache.lucene.util.BytesRef) $r14;

        r115 = $r68;

        $r15 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame staticFrame>;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame> = $r15;

        i54 = 0;

        $r16 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r17 = $r16.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.codecs.BlockTreeTermsReader this$0>;

        $r19 = $r17.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.util.fst.Outputs fstOutputs>;

        $r18 = $r13.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object nextFinalOutput>;

        $r20 = virtualinvoke $r19.<org.apache.lucene.util.fst.Outputs: java.lang.Object add(java.lang.Object,java.lang.Object)>($r68, $r18);

        $r21 = (org.apache.lucene.util.BytesRef) $r20;

        $r22 = virtualinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame pushFrame(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.BytesRef,int)>($r13, $r21, 0);

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame> = $r22;

     label24:
        $i56 = r5.<org.apache.lucene.util.BytesRef: int length>;

        if i54 >= $i56 goto label31;

        $r31 = r5.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i4 = r5.<org.apache.lucene.util.BytesRef: int offset>;

        $i5 = $i4 + i54;

        $b6 = $r31[$i5];

        $s71 = (short) $b6;

        s57 = $s71 & 255;

        $r32 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r33 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.fst.FST access$500(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader)>($r32);

        $i7 = 1 + i54;

        $r34 = specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>($i7);

        $r35 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader>;

        $i72 = (int) s57;

        $r36 = virtualinvoke $r33.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc findTargetArc(int,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>($i72, r114, $r34, $r35);

        if $r36 != null goto label27;

        $r57 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $i9 = $r57.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: int validIndexPrefix> = $i9;

        $r58 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r58.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void scanToFloorFrame(org.apache.lucene.util.BytesRef)>(r5);

        $r59 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $z6 = $r59.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean hasTerms>;

        if $z6 != 0 goto label25;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean termExists> = 0;

        $r64 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r65 = $r64.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $b10 = (byte) s57;

        $r65[i54] = $b10;

        $r66 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $i11 = 1 + i54;

        $r66.<org.apache.lucene.util.BytesRef: int length> = $i11;

        return 0;

     label25:
        $r60 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r60.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void loadBlock()>();

        $r61 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $r62 = virtualinvoke $r61.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.index.TermsEnum$SeekStatus scanToTerm(org.apache.lucene.util.BytesRef,boolean)>(r5, 1);

        $r63 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus FOUND>;

        if $r62 != $r63 goto label26;

        return 1;

     label26:
        return 0;

     label27:
        r114 = $r36;

        $r37 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r38 = $r37.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $b8 = (byte) s57;

        $r38[i54] = $b8;

        $z4 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z4 != 0 goto label28;

        $r55 = $r36.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        if $r55 != null goto label28;

        $r126 = new java.lang.AssertionError;

        specialinvoke $r126.<java.lang.AssertionError: void <init>()>();

        throw $r126;

     label28:
        $r42 = $r36.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        $r39 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r40 = $r39.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.codecs.BlockTreeTermsReader this$0>;

        $r41 = $r40.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.util.BytesRef NO_OUTPUT>;

        if $r42 == $r41 goto label29;

        $r50 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r51 = $r50.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.codecs.BlockTreeTermsReader this$0>;

        $r53 = $r51.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.util.fst.Outputs fstOutputs>;

        $r52 = $r36.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        $r54 = virtualinvoke $r53.<org.apache.lucene.util.fst.Outputs: java.lang.Object add(java.lang.Object,java.lang.Object)>(r115, $r52);

        r115 = (org.apache.lucene.util.BytesRef) $r54;

     label29:
        i54 = i54 + 1;

        $z5 = virtualinvoke $r36.<org.apache.lucene.util.fst.FST$Arc: boolean isFinal()>();

        if $z5 == 0 goto label30;

        $r43 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r44 = $r43.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.codecs.BlockTreeTermsReader this$0>;

        $r46 = $r44.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.util.fst.Outputs fstOutputs>;

        $r45 = $r36.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object nextFinalOutput>;

        $r47 = virtualinvoke $r46.<org.apache.lucene.util.fst.Outputs: java.lang.Object add(java.lang.Object,java.lang.Object)>(r115, $r45);

        $r48 = (org.apache.lucene.util.BytesRef) $r47;

        $r49 = virtualinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame pushFrame(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.BytesRef,int)>($r36, $r48, i54);

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame> = $r49;

     label30:
        goto label24;

     label31:
        $r23 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $i3 = $r23.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: int validIndexPrefix> = $i3;

        $r24 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r24.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void scanToFloorFrame(org.apache.lucene.util.BytesRef)>(r5);

        $r25 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $z3 = $r25.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean hasTerms>;

        if $z3 != 0 goto label32;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean termExists> = 0;

        $r30 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r30.<org.apache.lucene.util.BytesRef: int length> = i54;

        return 0;

     label32:
        $r26 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r26.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void loadBlock()>();

        $r27 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $r28 = virtualinvoke $r27.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.index.TermsEnum$SeekStatus scanToTerm(org.apache.lucene.util.BytesRef,boolean)>(r5, 1);

        $r29 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus FOUND>;

        if $r28 != $r29 goto label33;

        return 1;

     label33:
        return 0;
    }

    public org.apache.lucene.index.TermsEnum$SeekStatus seekCeil(org.apache.lucene.util.BytesRef, boolean) throws java.io.IOException
    {
        byte[] $r4, $r33, $r40, $r83, $r84, $r86, $r87, $r99, $r105, $r113, $r115;
        byte $b6, $b8, $b21, $b24, $b27, $b30, $b38, $b45;
        java.lang.StringBuilder $r102, $r103, $r104, $r106, $r124;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame[] $r75, $r93;
        short $s25, $s26, $s31, $s32, $s39, $s46, s55, $s56, $s57, $s60, $s62, $s63, $s64, $s69;
        org.apache.lucene.util.fst.FST$BytesReader $r37;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i10, $i11, $i12, $i13, $i14, i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i28, $i29, $i33, $i34, $i35, $i36, $i37, $i40, $i41, $i43, $i44, $i48, $i49, $i50, $i51, i52, i53, $i54, $i58, $i59, $i61, $i65, $i66, $i68, $i70;
        java.lang.Object $r14, $r18, $r20, $r44, $r47, $r49, $r54, $r56, $r57, $r69, $r74, $r92, $r96, $r98;
        org.apache.lucene.util.fst.FST$Arc $r12, $r13, $r36, $r38, r117;
        org.apache.lucene.util.fst.FST$Arc[] $r11, $r73, $r88;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader $r1, $r9, $r16, $r34, $r41, $r45, $r52, $r89, $r94;
        java.lang.AssertionError $r121, $r122, $r123, $r125, $r126, $r127, $r128, $r129;
        org.apache.lucene.util.fst.Outputs $r19, $r48, $r55, $r97;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r0;
        java.lang.String $r107;
        org.apache.lucene.index.TermsEnum$SeekStatus $r27, $r28, $r31, $r32, $r63, $r64, $r67, $r68, $r76;
        org.apache.lucene.util.fst.FST $r2, $r10, $r35;
        java.lang.IllegalStateException $r120;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z14;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame $r6, $r7, $r8, $r15, $r22, $r23, $r24, $r25, $r26, $r51, $r59, $r60, $r61, $r62, $r79, r119;
        org.apache.lucene.util.BytesRef $r3, r5, $r21, $r29, $r30, $r39, $r43, $r50, $r65, $r66, $r70, $r77, $r80, $r81, $r82, $r85, $r91, $r108, $r112, $r114, r118;
        org.apache.lucene.codecs.BlockTreeTermsReader $r17, $r42, $r46, $r53, $r90, $r95;
        char $c42, $c47;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        r5 := @parameter0: org.apache.lucene.util.BytesRef;

        z14 := @parameter1: boolean;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r2 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.fst.FST access$500(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader)>($r1);

        if $r2 != null goto label01;

        $r120 = new java.lang.IllegalStateException;

        specialinvoke $r120.<java.lang.IllegalStateException: void <init>(java.lang.String)>("terms index was not loaded");

        throw $r120;

     label01:
        $r3 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r4 = $r3.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i1 = lengthof $r4;

        $i0 = r5.<org.apache.lucene.util.BytesRef: int length>;

        if $i1 > $i0 goto label02;

        $r114 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r112 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r113 = $r112.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i50 = r5.<org.apache.lucene.util.BytesRef: int length>;

        $i51 = 1 + $i50;

        $r115 = staticinvoke <org.apache.lucene.util.ArrayUtil: byte[] grow(byte[],int)>($r113, $i51);

        $r114.<org.apache.lucene.util.BytesRef: byte[] bytes> = $r115;

     label02:
        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label03;

        $z13 = specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean clearEOF()>();

        if $z13 != 0 goto label03;

        $r121 = new java.lang.AssertionError;

        specialinvoke $r121.<java.lang.AssertionError: void <init>()>();

        throw $r121;

     label03:
        $r6 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $i2 = $r6.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int ord>;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: int targetBeforeCurrentLength> = $i2;

        $r8 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $r7 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame staticFrame>;

        if $r8 == $r7 goto label21;

        $r73 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        r117 = $r73[0];

        $z6 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z6 != 0 goto label04;

        $z12 = virtualinvoke r117.<org.apache.lucene.util.fst.FST$Arc: boolean isFinal()>();

        if $z12 != 0 goto label04;

        $r122 = new java.lang.AssertionError;

        specialinvoke $r122.<java.lang.AssertionError: void <init>()>();

        throw $r122;

     label04:
        $r74 = r117.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        r118 = (org.apache.lucene.util.BytesRef) $r74;

        i52 = 0;

        $r75 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame[] stack>;

        r119 = $r75[0];

        $z7 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z7 != 0 goto label05;

        $i49 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: int validIndexPrefix>;

        $r108 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $i48 = $r108.<org.apache.lucene.util.BytesRef: int length>;

        if $i49 <= $i48 goto label05;

        $r123 = new java.lang.AssertionError;

        specialinvoke $r123.<java.lang.AssertionError: void <init>()>();

        throw $r123;

     label05:
        $i11 = r5.<org.apache.lucene.util.BytesRef: int length>;

        $i10 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: int validIndexPrefix>;

        $i12 = staticinvoke <java.lang.Math: int min(int,int)>($i11, $i10);

        i53 = 0;

     label06:
        if i52 >= $i12 goto label11;

        $r85 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r86 = $r85.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $b27 = $r86[i52];

        $s56 = (short) $b27;

        $s32 = $s56 & 255;

        $r87 = r5.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i28 = r5.<org.apache.lucene.util.BytesRef: int offset>;

        $i29 = $i28 + i52;

        $b30 = $r87[$i29];

        $s57 = (short) $b30;

        $s31 = $s57 & 255;

        $i58 = (int) $s32;

        $i59 = (int) $s31;

        i53 = $i58 - $i59;

        if i53 == 0 goto label07;

        goto label11;

     label07:
        $r88 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $i33 = 1 + i52;

        r117 = $r88[$i33];

        $z10 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z10 != 0 goto label08;

        $i40 = r117.<org.apache.lucene.util.fst.FST$Arc: int label>;

        $r99 = r5.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i36 = r5.<org.apache.lucene.util.BytesRef: int offset>;

        $i37 = $i36 + i52;

        $b38 = $r99[$i37];

        $s60 = (short) $b38;

        $s39 = $s60 & 255;

        $i61 = (int) $s39;

        if $i40 == $i61 goto label08;

        $r125 = new java.lang.AssertionError;

        $r124 = new java.lang.StringBuilder;

        specialinvoke $r124.<java.lang.StringBuilder: void <init>()>();

        $r102 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("arc.label=");

        $i41 = r117.<org.apache.lucene.util.fst.FST$Arc: int label>;

        $c42 = (char) $i41;

        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c42);

        $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" targetLabel=");

        $r105 = r5.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i43 = r5.<org.apache.lucene.util.BytesRef: int offset>;

        $i44 = $i43 + i52;

        $b45 = $r105[$i44];

        $s62 = (short) $b45;

        $s46 = $s62 & 255;

        $c47 = (char) $s46;

        $r106 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c47);

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r125.<java.lang.AssertionError: void <init>(java.lang.Object)>($r107);

        throw $r125;

     label08:
        $r92 = r117.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        $r89 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r90 = $r89.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.codecs.BlockTreeTermsReader this$0>;

        $r91 = $r90.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.util.BytesRef NO_OUTPUT>;

        if $r92 == $r91 goto label09;

        $r94 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r95 = $r94.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.codecs.BlockTreeTermsReader this$0>;

        $r97 = $r95.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.util.fst.Outputs fstOutputs>;

        $r96 = r117.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        $r98 = virtualinvoke $r97.<org.apache.lucene.util.fst.Outputs: java.lang.Object add(java.lang.Object,java.lang.Object)>(r118, $r96);

        r118 = (org.apache.lucene.util.BytesRef) $r98;

     label09:
        $z11 = virtualinvoke r117.<org.apache.lucene.util.fst.FST$Arc: boolean isFinal()>();

        if $z11 == 0 goto label10;

        $r93 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame[] stack>;

        $i34 = r119.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int ord>;

        $i35 = 1 + $i34;

        r119 = $r93[$i35];

     label10:
        i52 = i52 + 1;

        goto label06;

     label11:
        if i53 != 0 goto label16;

        i15 = i52;

        $i17 = r5.<org.apache.lucene.util.BytesRef: int length>;

        $r80 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $i16 = $r80.<org.apache.lucene.util.BytesRef: int length>;

        $i18 = staticinvoke <java.lang.Math: int min(int,int)>($i17, $i16);

     label12:
        if i52 >= $i18 goto label14;

        $r82 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r83 = $r82.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $b21 = $r83[i52];

        $s63 = (short) $b21;

        $s26 = $s63 & 255;

        $r84 = r5.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i22 = r5.<org.apache.lucene.util.BytesRef: int offset>;

        $i23 = $i22 + i52;

        $b24 = $r84[$i23];

        $s64 = (short) $b24;

        $s25 = $s64 & 255;

        $i65 = (int) $s26;

        $i66 = (int) $s25;

        i53 = $i65 - $i66;

        if i53 == 0 goto label13;

        goto label14;

     label13:
        i52 = i52 + 1;

        goto label12;

     label14:
        if i53 != 0 goto label15;

        $r81 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $i20 = $r81.<org.apache.lucene.util.BytesRef: int length>;

        $i19 = r5.<org.apache.lucene.util.BytesRef: int length>;

        i53 = $i20 - $i19;

     label15:
        i52 = i15;

     label16:
        if i53 >= 0 goto label17;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame> = r119;

        goto label20;

     label17:
        if i53 <= 0 goto label18;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: int targetBeforeCurrentLength> = 0;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame> = r119;

        $r79 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r79.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void rewind()>();

        goto label20;

     label18:
        $z8 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z8 != 0 goto label19;

        $r77 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $i14 = $r77.<org.apache.lucene.util.BytesRef: int length>;

        $i13 = r5.<org.apache.lucene.util.BytesRef: int length>;

        if $i14 == $i13 goto label19;

        $r126 = new java.lang.AssertionError;

        specialinvoke $r126.<java.lang.AssertionError: void <init>()>();

        throw $r126;

     label19:
        $z9 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean termExists>;

        if $z9 == 0 goto label20;

        $r76 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus FOUND>;

        return $r76;

     label20:
        goto label24;

     label21:
        $i68 = (int) -1;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: int targetBeforeCurrentLength> = $i68;

        $r9 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r10 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.fst.FST access$500(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader)>($r9);

        $r11 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $r12 = $r11[0];

        $r13 = virtualinvoke $r10.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc getFirstArc(org.apache.lucene.util.fst.FST$Arc)>($r12);

        r117 = $r13;

        $z1 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z1 != 0 goto label22;

        $z5 = virtualinvoke $r13.<org.apache.lucene.util.fst.FST$Arc: boolean isFinal()>();

        if $z5 != 0 goto label22;

        $r127 = new java.lang.AssertionError;

        specialinvoke $r127.<java.lang.AssertionError: void <init>()>();

        throw $r127;

     label22:
        $z2 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z2 != 0 goto label23;

        $r69 = $r13.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        if $r69 != null goto label23;

        $r128 = new java.lang.AssertionError;

        specialinvoke $r128.<java.lang.AssertionError: void <init>()>();

        throw $r128;

     label23:
        $r14 = $r13.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        $r70 = (org.apache.lucene.util.BytesRef) $r14;

        r118 = $r70;

        $r15 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame staticFrame>;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame> = $r15;

        i52 = 0;

        $r16 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r17 = $r16.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.codecs.BlockTreeTermsReader this$0>;

        $r19 = $r17.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.util.fst.Outputs fstOutputs>;

        $r18 = $r13.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object nextFinalOutput>;

        $r20 = virtualinvoke $r19.<org.apache.lucene.util.fst.Outputs: java.lang.Object add(java.lang.Object,java.lang.Object)>($r70, $r18);

        $r21 = (org.apache.lucene.util.BytesRef) $r20;

        $r22 = virtualinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame pushFrame(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.BytesRef,int)>($r13, $r21, 0);

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame> = $r22;

     label24:
        $i54 = r5.<org.apache.lucene.util.BytesRef: int length>;

        if i52 >= $i54 goto label31;

        $r33 = r5.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i4 = r5.<org.apache.lucene.util.BytesRef: int offset>;

        $i5 = $i4 + i52;

        $b6 = $r33[$i5];

        $s69 = (short) $b6;

        s55 = $s69 & 255;

        $r34 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r35 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.fst.FST access$500(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader)>($r34);

        $i7 = 1 + i52;

        $r36 = specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>($i7);

        $r37 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader>;

        $i70 = (int) s55;

        $r38 = virtualinvoke $r35.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc findTargetArc(int,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>($i70, r117, $r36, $r37);

        if $r38 != null goto label27;

        $r59 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $i9 = $r59.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: int validIndexPrefix> = $i9;

        $r60 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r60.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void scanToFloorFrame(org.apache.lucene.util.BytesRef)>(r5);

        $r61 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r61.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void loadBlock()>();

        $r62 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $r63 = virtualinvoke $r62.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.index.TermsEnum$SeekStatus scanToTerm(org.apache.lucene.util.BytesRef,boolean)>(r5, 0);

        $r64 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus END>;

        if $r63 != $r64 goto label26;

        $r65 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        virtualinvoke $r65.<org.apache.lucene.util.BytesRef: void copyBytes(org.apache.lucene.util.BytesRef)>(r5);

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean termExists> = 0;

        $r66 = virtualinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef next()>();

        if $r66 == null goto label25;

        $r68 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus NOT_FOUND>;

        return $r68;

     label25:
        $r67 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus END>;

        return $r67;

     label26:
        return $r63;

     label27:
        $r39 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r40 = $r39.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $b8 = (byte) s55;

        $r40[i52] = $b8;

        r117 = $r38;

        $z3 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z3 != 0 goto label28;

        $r57 = $r38.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        if $r57 != null goto label28;

        $r129 = new java.lang.AssertionError;

        specialinvoke $r129.<java.lang.AssertionError: void <init>()>();

        throw $r129;

     label28:
        $r44 = $r38.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        $r41 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r42 = $r41.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.codecs.BlockTreeTermsReader this$0>;

        $r43 = $r42.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.util.BytesRef NO_OUTPUT>;

        if $r44 == $r43 goto label29;

        $r52 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r53 = $r52.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.codecs.BlockTreeTermsReader this$0>;

        $r55 = $r53.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.util.fst.Outputs fstOutputs>;

        $r54 = $r38.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        $r56 = virtualinvoke $r55.<org.apache.lucene.util.fst.Outputs: java.lang.Object add(java.lang.Object,java.lang.Object)>(r118, $r54);

        r118 = (org.apache.lucene.util.BytesRef) $r56;

     label29:
        i52 = i52 + 1;

        $z4 = virtualinvoke $r38.<org.apache.lucene.util.fst.FST$Arc: boolean isFinal()>();

        if $z4 == 0 goto label30;

        $r45 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r46 = $r45.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.codecs.BlockTreeTermsReader this$0>;

        $r48 = $r46.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.util.fst.Outputs fstOutputs>;

        $r47 = $r38.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object nextFinalOutput>;

        $r49 = virtualinvoke $r48.<org.apache.lucene.util.fst.Outputs: java.lang.Object add(java.lang.Object,java.lang.Object)>(r118, $r47);

        $r50 = (org.apache.lucene.util.BytesRef) $r49;

        $r51 = virtualinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame pushFrame(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.BytesRef,int)>($r38, $r50, i52);

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame> = $r51;

     label30:
        goto label24;

     label31:
        $r23 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $i3 = $r23.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: int validIndexPrefix> = $i3;

        $r24 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r24.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void scanToFloorFrame(org.apache.lucene.util.BytesRef)>(r5);

        $r25 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r25.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void loadBlock()>();

        $r26 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $r27 = virtualinvoke $r26.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.index.TermsEnum$SeekStatus scanToTerm(org.apache.lucene.util.BytesRef,boolean)>(r5, 0);

        $r28 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus END>;

        if $r27 != $r28 goto label33;

        $r29 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        virtualinvoke $r29.<org.apache.lucene.util.BytesRef: void copyBytes(org.apache.lucene.util.BytesRef)>(r5);

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean termExists> = 0;

        $r30 = virtualinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef next()>();

        if $r30 == null goto label32;

        $r32 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus NOT_FOUND>;

        return $r32;

     label32:
        $r31 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus END>;

        return $r31;

     label33:
        return $r27;
    }

    private void printSeekState(java.io.PrintStream) throws java.io.IOException
    {
        byte[] $r7, $r43, $r54, $r61;
        byte $b26, $b30, $b37, $b55, $b56, $b58;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r45, $r46, $r47, $r48, $r56, $r58, $r59, $r62, $r68, $r69, $r70, $r72, $r75, $r76, $r77, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r109, $r110, $r111, $r128, $r129, $r130, $r131, $r132, $r133, $r134, $r136, $r140;
        long $l2, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l20, $l21, $l22, $l23, $l24, $l25, $l27, $l40, $l41, $l45, $l46, $l47, $l48, $l49, $l50, $l53;
        short $s31, $s38, $s65, $s67;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i14, $i15, $i16, $i17, $i18, $i19, $i28, $i29, $i32, $i33, $i35, $i36, $i42, $i43, $i44, $i51, $i52, i54, $i57, $i60, $i62, $i64, $i66;
        java.io.PrintStream r3;
        java.lang.Object $r123;
        org.apache.lucene.util.fst.FST$Arc $r52, $r57, $r65, $r71;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader $r119, $r121;
        java.lang.AssertionError $r126, $r135;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r0;
        java.lang.String $r41, $r49, $r63, $r73, $r107, $r113, $r114, $r115, $r116, $r117, $r118;
        java.lang.RuntimeException $r137, $r138, $r141;
        org.apache.lucene.util.fst.FST $r120, $r122;
        org.apache.lucene.store.ByteArrayDataInput $r139;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, z17, $z18, $z19, $z20, z21, z22, z23, z24, z25, z26;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame $r1, $r2, $r4, $r125;
        org.apache.lucene.util.BytesRef $r6, $r53, $r60, $r124, $r127;
        char $c34, $c39;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        r3 := @parameter0: java.io.PrintStream;

        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame staticFrame>;

        if $r2 != $r1 goto label01;

        virtualinvoke r3.<java.io.PrintStream: void println(java.lang.String)>("  no prior seek");

        goto label36;

     label01:
        virtualinvoke r3.<java.io.PrintStream: void println(java.lang.String)>("  prior seek state:");

        i54 = 0;

        z17 = 1;

        z26 = 1;

        z25 = 1;

        z24 = 1;

        z23 = 1;

        z22 = 1;

        z21 = 1;

     label02:
        $r4 = specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame getFrame(int)>(i54);

        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label03;

        if $r4 != null goto label03;

        $r126 = new java.lang.AssertionError;

        specialinvoke $r126.<java.lang.AssertionError: void <init>()>();

        throw $r126;

     label03:
        $r127 = new org.apache.lucene.util.BytesRef;

        $r6 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r7 = $r6.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i0 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        specialinvoke $r127.<org.apache.lucene.util.BytesRef: void <init>(byte[],int,int)>($r7, 0, $i0);

        $i1 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $i60 = (int) -1;

        if $i1 != $i60 goto label14;

        $r128 = new java.lang.StringBuilder;

        specialinvoke $r128.<java.lang.StringBuilder: void <init>()>();

        $r79 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    frame ");

        if z25 == 0 goto label04;

        $r113 = "(seek)";

        goto label05;

     label04:
        $r113 = "(next)";

     label05:
        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r113);

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ord=");

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i54);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fp=");

        $l41 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fp>;

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l41);

        $z11 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isFloor>;

        if $z11 == 0 goto label06;

        $r129 = new java.lang.StringBuilder;

        specialinvoke $r129.<java.lang.StringBuilder: void <init>()>();

        $r109 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (fpOrig=");

        $l53 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fpOrig>;

        $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l53);

        $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r114 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label07;

     label06:
        $r114 = "";

     label07:
        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r114);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" prefixLen=");

        $i42 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i42);

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" prefix=");

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r127);

        $i43 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $i62 = (int) -1;

        if $i43 != $i62 goto label08;

        $r115 = "";

        goto label09;

     label08:
        $r130 = new java.lang.StringBuilder;

        specialinvoke $r130.<java.lang.StringBuilder: void <init>()>();

        $r91 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (of ");

        $i44 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int entCount>;

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i44);

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r115 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        $r94 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r115);

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasTerms=");

        $z12 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean hasTerms>;

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z12);

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isFloor=");

        $z13 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isFloor>;

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z13);

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" code=");

        $l45 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fp>;

        $l47 = $l45 << 2;

        $z14 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean hasTerms>;

        if $z14 == 0 goto label10;

        $b55 = 2;

        goto label11;

     label10:
        $b55 = 0;

     label11:
        $l46 = (long) $b55;

        $l49 = $l47 + $l46;

        $z15 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isFloor>;

        if $z15 == 0 goto label12;

        $z18 = 1;

        goto label13;

     label12:
        $z18 = 0;

     label13:
        $l48 = (long) $z18;

        $l50 = $l49 + $l48;

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l50);

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isLastInFloor=");

        $z16 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isLastInFloor>;

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z16);

        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mdUpto=");

        $i51 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int metaDataUpto>;

        $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i51);

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tbOrd=");

        $i52 = virtualinvoke $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int getTermBlockOrd()>();

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i52);

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintStream: void println(java.lang.String)>($r107);

        goto label25;

     label14:
        $r131 = new java.lang.StringBuilder;

        specialinvoke $r131.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    frame ");

        if z26 == 0 goto label15;

        $r116 = "(seek, loaded)";

        goto label16;

     label15:
        $r116 = "(next, loaded)";

     label16:
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r116);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ord=");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i54);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fp=");

        $l2 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fp>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $z1 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isFloor>;

        if $z1 == 0 goto label17;

        $r132 = new java.lang.StringBuilder;

        specialinvoke $r132.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (fpOrig=");

        $l40 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fpOrig>;

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l40);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r117 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label18;

     label17:
        $r117 = "";

     label18:
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r117);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" prefixLen=");

        $i3 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" prefix=");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r127);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nextEnt=");

        $i4 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $i5 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $i64 = (int) -1;

        if $i5 != $i64 goto label19;

        $r118 = "";

        goto label20;

     label19:
        $r133 = new java.lang.StringBuilder;

        specialinvoke $r133.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (of ");

        $i6 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int entCount>;

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r118 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

     label20:
        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r118);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasTerms=");

        $z2 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean hasTerms>;

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isFloor=");

        $z3 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isFloor>;

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" code=");

        $l7 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fp>;

        $l9 = $l7 << 2;

        $z4 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean hasTerms>;

        if $z4 == 0 goto label21;

        $b56 = 2;

        goto label22;

     label21:
        $b56 = 0;

     label22:
        $l8 = (long) $b56;

        $l11 = $l9 + $l8;

        $z5 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isFloor>;

        if $z5 == 0 goto label23;

        $z19 = 1;

        goto label24;

     label23:
        $z19 = 0;

     label24:
        $l10 = (long) $z19;

        $l12 = $l11 + $l10;

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l12);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lastSubFP=");

        $l13 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long lastSubFP>;

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l13);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isLastInFloor=");

        $z6 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isLastInFloor>;

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mdUpto=");

        $i14 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int metaDataUpto>;

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tbOrd=");

        $i15 = virtualinvoke $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int getTermBlockOrd()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintStream: void println(java.lang.String)>($r41);

     label25:
        $r119 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r120 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.fst.FST access$500(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader)>($r119);

        if $r120 == null goto label33;

        $z7 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z7 != 0 goto label26;

        if z21 == 0 goto label26;

        $r65 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.util.fst.FST$Arc arc>;

        if $r65 != null goto label26;

        $r135 = new java.lang.AssertionError;

        $r134 = new java.lang.StringBuilder;

        specialinvoke $r134.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isSeekFrame=");

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z23);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" f.arc=");

        $r71 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.util.fst.FST$Arc arc>;

        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r71);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r135.<java.lang.AssertionError: void <init>(java.lang.Object)>($r73);

        throw $r135;

     label26:
        $i57 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        if $i57 <= 0 goto label27;

        if z22 == 0 goto label27;

        $r52 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.util.fst.FST$Arc arc>;

        $i32 = $r52.<org.apache.lucene.util.fst.FST$Arc: int label>;

        $r53 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r54 = $r53.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i28 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        $i29 = $i28 - 1;

        $b30 = $r54[$i29];

        $s65 = (short) $b30;

        $s31 = $s65 & 255;

        $i66 = (int) $s31;

        if $i32 == $i66 goto label27;

        $r136 = new java.lang.StringBuilder;

        specialinvoke $r136.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      broken seek state: arc.label=");

        $r57 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.util.fst.FST$Arc arc>;

        $i33 = $r57.<org.apache.lucene.util.fst.FST$Arc: int label>;

        $c34 = (char) $i33;

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c34);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs term byte=");

        $r60 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r61 = $r60.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i35 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        $i36 = $i35 - 1;

        $b37 = $r61[$i36];

        $s67 = (short) $b37;

        $s38 = $s67 & 255;

        $c39 = (char) $s38;

        $r62 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c39);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintStream: void println(java.lang.String)>($r63);

        $r137 = new java.lang.RuntimeException;

        specialinvoke $r137.<java.lang.RuntimeException: void <init>(java.lang.String)>("seek state is broken");

        throw $r137;

     label27:
        $r121 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r122 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.fst.FST access$500(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader)>($r121);

        $r123 = staticinvoke <org.apache.lucene.util.fst.Util: java.lang.Object get(org.apache.lucene.util.fst.FST,org.apache.lucene.util.BytesRef)>($r122, $r127);

        $r124 = (org.apache.lucene.util.BytesRef) $r123;

        if $r124 != null goto label28;

        virtualinvoke r3.<java.io.PrintStream: void println(java.lang.String)>("      broken seek state: prefix is not final in index");

        $r138 = new java.lang.RuntimeException;

        specialinvoke $r138.<java.lang.RuntimeException: void <init>(java.lang.String)>("seek state is broken");

        throw $r138;

     label28:
        if z24 == 0 goto label33;

        $z8 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isFloor>;

        if $z8 != 0 goto label33;

        $r139 = new org.apache.lucene.store.ByteArrayDataInput;

        $r43 = $r124.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i19 = $r124.<org.apache.lucene.util.BytesRef: int offset>;

        $i18 = $r124.<org.apache.lucene.util.BytesRef: int length>;

        specialinvoke $r139.<org.apache.lucene.store.ByteArrayDataInput: void <init>(byte[],int,int)>($r43, $i19, $i18);

        $l20 = virtualinvoke $r139.<org.apache.lucene.store.ByteArrayDataInput: long readVLong()>();

        $l21 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fp>;

        $l23 = $l21 << 2;

        $z9 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean hasTerms>;

        if $z9 == 0 goto label29;

        $b58 = 2;

        goto label30;

     label29:
        $b58 = 0;

     label30:
        $l22 = (long) $b58;

        $l25 = $l23 | $l22;

        $z10 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isFloor>;

        if $z10 == 0 goto label31;

        $z20 = 1;

        goto label32;

     label31:
        $z20 = 0;

     label32:
        $l24 = (long) $z20;

        $l27 = $l25 | $l24;

        $b26 = $l20 cmp $l27;

        if $b26 == 0 goto label33;

        $r140 = new java.lang.StringBuilder;

        specialinvoke $r140.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      broken seek state: output code=");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l20);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t match frame code=");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l27);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.PrintStream: void println(java.lang.String)>($r49);

        $r141 = new java.lang.RuntimeException;

        specialinvoke $r141.<java.lang.RuntimeException: void <init>(java.lang.String)>("seek state is broken");

        throw $r141;

     label33:
        $r125 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        if $r4 != $r125 goto label34;

        goto label36;

     label34:
        $i17 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        $i16 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: int validIndexPrefix>;

        if $i17 != $i16 goto label35;

        z17 = 0;

        z26 = 0;

        z25 = 0;

        z24 = 0;

        z23 = 0;

        z22 = 0;

        z21 = 0;

     label35:
        i54 = i54 + 1;

        goto label02;

     label36:
        return;
    }

    public org.apache.lucene.util.BytesRef next() throws java.io.IOException
    {
        org.apache.lucene.util.fst.FST$Arc $r35, $r36, r38;
        byte $b7;
        org.apache.lucene.util.fst.FST$Arc[] $r34;
        long $l1, $l6, l11;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader $r30, $r32, $r39;
        java.lang.AssertionError $r47, $r48, $r49, $r50;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame[] $r15;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r0;
        org.apache.lucene.store.IndexInput $r1;
        org.apache.lucene.util.fst.FST $r31, $r33;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame $r2, $r3, $r4, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r19, $r20, $r21, $r22, $r24, $r26, $r41, $r42, $r43, $r44, $r45, $r46;
        org.apache.lucene.util.BytesRef $r5, $r7, $r18, $r23, $r27, $r40;
        int $i0, $i2, $i3, $i4, $i5, $i8, $i9, $i10, $i12, $i13, $i14, $i16;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.store.IndexInput in>;

        if $r1 != null goto label03;

        $r30 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r31 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.fst.FST access$500(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader)>($r30);

        if $r31 == null goto label01;

        $r32 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r33 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.fst.FST access$500(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader)>($r32);

        $r34 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $r35 = $r34[0];

        $r36 = virtualinvoke $r33.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc getFirstArc(org.apache.lucene.util.fst.FST$Arc)>($r35);

        r38 = $r36;

        $z7 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z7 != 0 goto label02;

        $z8 = virtualinvoke $r36.<org.apache.lucene.util.fst.FST$Arc: boolean isFinal()>();

        if $z8 != 0 goto label02;

        $r47 = new java.lang.AssertionError;

        specialinvoke $r47.<java.lang.AssertionError: void <init>()>();

        throw $r47;

     label01:
        r38 = null;

     label02:
        $r39 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r40 = $r39.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.BytesRef rootCode>;

        $r41 = virtualinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame pushFrame(org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.BytesRef,int)>(r38, $r40, 0);

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame> = $r41;

        $r42 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r42.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void loadBlock()>();

     label03:
        $r43 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $i8 = $r43.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int ord>;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: int targetBeforeCurrentLength> = $i8;

        $z9 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z9 != 0 goto label04;

        $z6 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean eof>;

        if $z6 == 0 goto label04;

        $r48 = new java.lang.AssertionError;

        specialinvoke $r48.<java.lang.AssertionError: void <init>()>();

        throw $r48;

     label04:
        $r3 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame staticFrame>;

        if $r3 != $r2 goto label05;

        $r27 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $z4 = virtualinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean seekExact(org.apache.lucene.util.BytesRef,boolean)>($r27, 0);

        $z5 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z5 != 0 goto label05;

        if $z4 != 0 goto label05;

        $r49 = new java.lang.AssertionError;

        specialinvoke $r49.<java.lang.AssertionError: void <init>()>();

        throw $r49;

     label05:
        $r44 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $i9 = $r44.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $r45 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $i10 = $r45.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int entCount>;

        if $i9 != $i10 goto label11;

        $r11 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $z1 = $r11.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isLastInFloor>;

        if $z1 != 0 goto label06;

        $r26 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r26.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void loadNextFloorBlock()>();

        goto label05;

     label06:
        $r12 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $i2 = $r12.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int ord>;

        if $i2 != 0 goto label08;

        $z2 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z2 != 0 goto label07;

        $z3 = specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean setEOF()>();

        if $z3 != 0 goto label07;

        $r50 = new java.lang.AssertionError;

        specialinvoke $r50.<java.lang.AssertionError: void <init>()>();

        throw $r50;

     label07:
        $r23 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $r23.<org.apache.lucene.util.BytesRef: int length> = 0;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: int validIndexPrefix> = 0;

        $r24 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r24.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void rewind()>();

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean termExists> = 0;

        return null;

     label08:
        $r13 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        l11 = $r13.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long fpOrig>;

        $r15 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame[] stack>;

        $r14 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $i3 = $r14.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int ord>;

        $i4 = $i3 - 1;

        $r16 = $r15[$i4];

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame> = $r16;

        $r17 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $i5 = $r17.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int nextEnt>;

        $i16 = (int) -1;

        if $i5 == $i16 goto label09;

        $r22 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $l6 = $r22.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long lastSubFP>;

        $b7 = $l6 cmp l11;

        if $b7 == 0 goto label10;

     label09:
        $r19 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $r18 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        virtualinvoke $r19.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void scanToFloorFrame(org.apache.lucene.util.BytesRef)>($r18);

        $r20 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r20.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void loadBlock()>();

        $r21 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r21.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void scanToSubBlock(long)>(l11);

     label10:
        $i12 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: int validIndexPrefix>;

        $r46 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $i13 = $r46.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int prefix>;

        $i14 = staticinvoke <java.lang.Math: int min(int,int)>($i12, $i13);

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: int validIndexPrefix> = $i14;

        goto label05;

     label11:
        $r4 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $z0 = virtualinvoke $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean next()>();

        if $z0 == 0 goto label12;

        $r6 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $l1 = $r6.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: long lastSubFP>;

        $r7 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $i0 = $r7.<org.apache.lucene.util.BytesRef: int length>;

        $r8 = virtualinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame pushFrame(org.apache.lucene.util.fst.FST$Arc,long,int)>(null, $l1, $i0);

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame> = $r8;

        $r9 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $r9.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: boolean isFloor> = 0;

        $r10 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r10.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void loadBlock()>();

        goto label11;

     label12:
        $r5 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        return $r5;
    }

    public org.apache.lucene.util.BytesRef term()
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r0;
        org.apache.lucene.util.BytesRef $r1;
        java.lang.AssertionError $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean eof>;

        if $z1 == 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        return $r1;
    }

    public int docFreq() throws java.io.IOException
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame $r1, $r2;
        org.apache.lucene.codecs.BlockTermState $r3;
        java.lang.AssertionError $r4;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r0;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean eof>;

        if $z1 == 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void decodeMetaData()>();

        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $r3 = $r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTermState state>;

        $i0 = $r3.<org.apache.lucene.codecs.BlockTermState: int docFreq>;

        return $i0;
    }

    public long totalTermFreq() throws java.io.IOException
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame $r1, $r2;
        org.apache.lucene.codecs.BlockTermState $r3;
        long $l0;
        java.lang.AssertionError $r4;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean eof>;

        if $z1 == 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void decodeMetaData()>();

        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $r3 = $r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTermState state>;

        $l0 = $r3.<org.apache.lucene.codecs.BlockTermState: long totalTermFreq>;

        return $l0;
    }

    public org.apache.lucene.index.DocsEnum docs(org.apache.lucene.util.Bits, org.apache.lucene.index.DocsEnum, int) throws java.io.IOException
    {
        org.apache.lucene.codecs.BlockTreeTermsReader $r3;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader $r2, $r5;
        java.lang.AssertionError $r12;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r0;
        org.apache.lucene.codecs.PostingsReaderBase $r4;
        int i0;
        org.apache.lucene.util.Bits r7;
        boolean $z0, $z1;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame $r1, $r6;
        org.apache.lucene.codecs.BlockTermState $r9;
        org.apache.lucene.index.DocsEnum r8, $r11;
        org.apache.lucene.index.FieldInfo $r10;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        r7 := @parameter0: org.apache.lucene.util.Bits;

        r8 := @parameter1: org.apache.lucene.index.DocsEnum;

        i0 := @parameter2: int;

        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean eof>;

        if $z1 == 0 goto label1;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label1:
        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void decodeMetaData()>();

        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r3 = $r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.codecs.BlockTreeTermsReader this$0>;

        $r4 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.codecs.PostingsReaderBase access$000(org.apache.lucene.codecs.BlockTreeTermsReader)>($r3);

        $r5 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r10 = $r5.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r6 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $r9 = $r6.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTermState state>;

        $r11 = virtualinvoke $r4.<org.apache.lucene.codecs.PostingsReaderBase: org.apache.lucene.index.DocsEnum docs(org.apache.lucene.index.FieldInfo,org.apache.lucene.codecs.BlockTermState,org.apache.lucene.util.Bits,org.apache.lucene.index.DocsEnum,int)>($r10, $r9, r7, r8, i0);

        return $r11;
    }

    public org.apache.lucene.index.DocsAndPositionsEnum docsAndPositions(org.apache.lucene.util.Bits, org.apache.lucene.index.DocsAndPositionsEnum, int) throws java.io.IOException
    {
        org.apache.lucene.codecs.BlockTreeTermsReader $r7;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader $r1, $r6, $r9;
        java.lang.AssertionError $r16;
        org.apache.lucene.index.DocsAndPositionsEnum r12, $r15;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r0;
        org.apache.lucene.codecs.PostingsReaderBase $r8;
        int $i0, i1;
        org.apache.lucene.util.Bits r11;
        boolean $z0, $z1;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame $r5, $r10;
        org.apache.lucene.index.FieldInfo$IndexOptions $r3, $r4;
        org.apache.lucene.codecs.BlockTermState $r13;
        org.apache.lucene.index.FieldInfo $r2, $r14;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        r11 := @parameter0: org.apache.lucene.util.Bits;

        r12 := @parameter1: org.apache.lucene.index.DocsAndPositionsEnum;

        i1 := @parameter2: int;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r2 = $r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$IndexOptions getIndexOptions()>();

        $r4 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS_AND_POSITIONS>;

        $i0 = virtualinvoke $r3.<org.apache.lucene.index.FieldInfo$IndexOptions: int compareTo(java.lang.Enum)>($r4);

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $z1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean eof>;

        if $z1 == 0 goto label2;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label2:
        $r5 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r5.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void decodeMetaData()>();

        $r6 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r7 = $r6.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.codecs.BlockTreeTermsReader this$0>;

        $r8 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.codecs.PostingsReaderBase access$000(org.apache.lucene.codecs.BlockTreeTermsReader)>($r7);

        $r9 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r14 = $r9.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r10 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $r13 = $r10.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTermState state>;

        $r15 = virtualinvoke $r8.<org.apache.lucene.codecs.PostingsReaderBase: org.apache.lucene.index.DocsAndPositionsEnum docsAndPositions(org.apache.lucene.index.FieldInfo,org.apache.lucene.codecs.BlockTermState,org.apache.lucene.util.Bits,org.apache.lucene.index.DocsAndPositionsEnum,int)>($r14, $r13, r11, r12, i1);

        return $r15;
    }

    public void seekExact(org.apache.lucene.util.BytesRef, org.apache.lucene.index.TermState)
    {
        java.lang.AssertionError $r11, $r12, $r13;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r1;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame $r3, $r4, $r8, $r9, $r10;
        org.apache.lucene.index.TermState r5;
        org.apache.lucene.codecs.BlockTermState $r6;
        org.apache.lucene.util.BytesRef r0, $r2, $r7;

        r1 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        r0 := @parameter0: org.apache.lucene.util.BytesRef;

        r5 := @parameter1: org.apache.lucene.index.TermState;

        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z5 = specialinvoke r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean clearEOF()>();

        if $z5 != 0 goto label1;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label1:
        $r2 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        $i0 = virtualinvoke r0.<org.apache.lucene.util.BytesRef: int compareTo(org.apache.lucene.util.BytesRef)>($r2);

        if $i0 != 0 goto label2;

        $z4 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean termExists>;

        if $z4 != 0 goto label6;

     label2:
        $z1 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z1 != 0 goto label4;

        if r5 == null goto label3;

        $z3 = r5 instanceof org.apache.lucene.codecs.BlockTermState;

        if $z3 != 0 goto label4;

     label3:
        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label4:
        $r3 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame staticFrame>;

        r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame> = $r3;

        $r4 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $r6 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTermState state>;

        virtualinvoke $r6.<org.apache.lucene.codecs.BlockTermState: void copyFrom(org.apache.lucene.index.TermState)>(r5);

        $r7 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.util.BytesRef term>;

        virtualinvoke $r7.<org.apache.lucene.util.BytesRef: void copyBytes(org.apache.lucene.util.BytesRef)>(r0);

        $r9 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $r8 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $i1 = virtualinvoke $r8.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int getTermBlockOrd()>();

        $r9.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int metaDataUpto> = $i1;

        $z2 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z2 != 0 goto label5;

        $r10 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $i2 = $r10.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: int metaDataUpto>;

        if $i2 > 0 goto label5;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label5:
        r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: int validIndexPrefix> = 0;

     label6:
        return;
    }

    public org.apache.lucene.index.TermState termState() throws java.io.IOException
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame $r1, $r2;
        org.apache.lucene.index.TermState $r4;
        org.apache.lucene.codecs.BlockTermState $r3;
        java.lang.AssertionError $r5;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean eof>;

        if $z1 == 0 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        virtualinvoke $r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: void decodeMetaData()>();

        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        $r3 = $r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame: org.apache.lucene.codecs.BlockTermState state>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.codecs.BlockTermState: org.apache.lucene.index.TermState clone()>();

        return $r4;
    }

    public void seekExact(long)
    {
        java.lang.UnsupportedOperationException $r0;
        long l0;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r1;

        r1 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        l0 := @parameter0: long;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public long ord()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r1;

        r1 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    static org.apache.lucene.store.IndexInput access$900(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum)
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r0;
        org.apache.lucene.store.IndexInput $r1;

        r0 := @parameter0: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.store.IndexInput in>;

        return $r1;
    }

    static boolean access$1002(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum, boolean)
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r0;
        boolean z0;

        r0 := @parameter0: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        z0 := @parameter1: boolean;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean termExists> = z0;

        return z0;
    }

    static boolean access$1000(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum)
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r0;
        boolean $z0;

        r0 := @parameter0: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        $z0 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean termExists>;

        return $z0;
    }

    static org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame access$1102(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum, org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame)
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame r1;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r0;

        r0 := @parameter0: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        r1 := @parameter1: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame> = r1;

        return r1;
    }

    static org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame access$1100(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum)
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame $r1;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum r0;

        r0 := @parameter0: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum$Frame currentFrame>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/codecs/BlockTreeTermsReader;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$SegmentTermsEnum: boolean $assertionsDisabled> = $z1;

        return;
    }
}
