final class org.waveprotocol.wave.model.account.DocumentBasedAssignment$1 extends java.lang.Object implements org.waveprotocol.wave.model.adt.docbased.Factory
{

    void <init>()
    {
        org.waveprotocol.wave.model.account.DocumentBasedAssignment$1 r0;

        r0 := @this: org.waveprotocol.wave.model.account.DocumentBasedAssignment$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.model.account.ObservableAssignment adapt(org.waveprotocol.wave.model.document.util.DocumentEventRouter, java.lang.Object)
    {
        org.waveprotocol.wave.model.account.DocumentBasedAssignment $r2;
        org.waveprotocol.wave.model.account.DocumentBasedAssignment$1 r3;
        java.lang.Object r1;
        org.waveprotocol.wave.model.document.util.DocumentEventRouter r0;

        r3 := @this: org.waveprotocol.wave.model.account.DocumentBasedAssignment$1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.util.DocumentEventRouter;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <org.waveprotocol.wave.model.account.DocumentBasedAssignment: org.waveprotocol.wave.model.account.DocumentBasedAssignment create(org.waveprotocol.wave.model.document.util.DocumentEventRouter,java.lang.Object)>(r0, r1);

        return $r2;
    }

    public org.waveprotocol.wave.model.adt.docbased.Initializer createInitializer(org.waveprotocol.wave.model.account.DocumentBasedAssignment$AssignmentInitializer)
    {
        org.waveprotocol.wave.model.util.Serializer $r3, $r7;
        org.waveprotocol.wave.model.adt.docbased.Initializer $r11;
        org.waveprotocol.wave.model.account.Role $r8;
        org.waveprotocol.wave.model.account.DocumentBasedAssignment$AssignmentInitializer r2;
        org.waveprotocol.wave.model.adt.docbased.CompoundInitializer $r0;
        org.waveprotocol.wave.model.adt.docbased.Initializer[] $r1;
        org.waveprotocol.wave.model.account.DocumentBasedAssignment$1 r12;
        java.util.Map $r10;
        java.lang.String $r5, $r9;
        org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key $r4, $r6;

        r12 := @this: org.waveprotocol.wave.model.account.DocumentBasedAssignment$1;

        r2 := @parameter0: org.waveprotocol.wave.model.account.DocumentBasedAssignment$AssignmentInitializer;

        $r0 = new org.waveprotocol.wave.model.adt.docbased.CompoundInitializer;

        $r1 = newarray (org.waveprotocol.wave.model.adt.docbased.Initializer)[1];

        $r3 = <org.waveprotocol.wave.model.util.Serializer: org.waveprotocol.wave.model.util.Serializer STRING>;

        $r4 = <org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key: org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key ADDRESS>;

        $r5 = staticinvoke <org.waveprotocol.wave.model.account.DocumentBasedAssignment$AssignmentInitializer: java.lang.String access$100(org.waveprotocol.wave.model.account.DocumentBasedAssignment$AssignmentInitializer)>(r2);

        $r6 = <org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key: org.waveprotocol.wave.model.account.DocumentBasedAssignment$Key ROLE>;

        $r7 = <org.waveprotocol.wave.model.account.RoleSerializer: org.waveprotocol.wave.model.util.Serializer INSTANCE>;

        $r8 = staticinvoke <org.waveprotocol.wave.model.account.DocumentBasedAssignment$AssignmentInitializer: org.waveprotocol.wave.model.account.Role access$200(org.waveprotocol.wave.model.account.DocumentBasedAssignment$AssignmentInitializer)>(r2);

        $r9 = interfaceinvoke $r7.<org.waveprotocol.wave.model.util.Serializer: java.lang.String toString(java.lang.Object)>($r8);

        $r10 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: java.util.Map immutableMap(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r4, $r5, $r6, $r9);

        $r11 = staticinvoke <org.waveprotocol.wave.model.adt.docbased.DocumentBasedStructuredValue: org.waveprotocol.wave.model.adt.docbased.Initializer createInitialiser(org.waveprotocol.wave.model.util.Serializer,java.util.Map)>($r3, $r10);

        $r1[0] = $r11;

        specialinvoke $r0.<org.waveprotocol.wave.model.adt.docbased.CompoundInitializer: void <init>(org.waveprotocol.wave.model.adt.docbased.Initializer[])>($r1);

        return $r0;
    }

    public volatile org.waveprotocol.wave.model.adt.docbased.Initializer createInitializer(java.lang.Object)
    {
        org.waveprotocol.wave.model.adt.docbased.Initializer $r3;
        org.waveprotocol.wave.model.account.DocumentBasedAssignment$1 r0;
        java.lang.Object r1;
        org.waveprotocol.wave.model.account.DocumentBasedAssignment$AssignmentInitializer $r2;

        r0 := @this: org.waveprotocol.wave.model.account.DocumentBasedAssignment$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.account.DocumentBasedAssignment$AssignmentInitializer) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.model.account.DocumentBasedAssignment$1: org.waveprotocol.wave.model.adt.docbased.Initializer createInitializer(org.waveprotocol.wave.model.account.DocumentBasedAssignment$AssignmentInitializer)>($r2);

        return $r3;
    }

    public volatile java.lang.Object adapt(org.waveprotocol.wave.model.document.util.DocumentEventRouter, java.lang.Object)
    {
        org.waveprotocol.wave.model.account.ObservableAssignment $r3;
        org.waveprotocol.wave.model.account.DocumentBasedAssignment$1 r0;
        java.lang.Object r2;
        org.waveprotocol.wave.model.document.util.DocumentEventRouter r1;

        r0 := @this: org.waveprotocol.wave.model.account.DocumentBasedAssignment$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.DocumentEventRouter;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.model.account.DocumentBasedAssignment$1: org.waveprotocol.wave.model.account.ObservableAssignment adapt(org.waveprotocol.wave.model.document.util.DocumentEventRouter,java.lang.Object)>(r1, r2);

        return $r3;
    }
}
