class com.sun.lwuit.html.CSSBorder extends com.sun.lwuit.plaf.Border
{
    com.sun.lwuit.plaf.Border[] borders;
    com.sun.lwuit.Component 'cmp';

    static com.sun.lwuit.html.CSSBorder createCSSBorder(com.sun.lwuit.plaf.Border[], com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r2;
        com.sun.lwuit.html.CSSBorder $r1;
        com.sun.lwuit.plaf.Border[] r0;
        int $i0, i1;
        com.sun.lwuit.plaf.Border $r3;
        boolean z0;

        r0 := @parameter0: com.sun.lwuit.plaf.Border[];

        r2 := @parameter1: com.sun.lwuit.Component;

        z0 = 1;

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label3;

        $r3 = r0[i1];

        if $r3 == null goto label2;

        z0 = 0;

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        if z0 == 0 goto label4;

        return null;

     label4:
        $r1 = new com.sun.lwuit.html.CSSBorder;

        specialinvoke $r1.<com.sun.lwuit.html.CSSBorder: void <init>(com.sun.lwuit.plaf.Border[],com.sun.lwuit.Component)>(r0, r2);

        return $r1;
    }

    void mergeBorder(com.sun.lwuit.plaf.Border[])
    {
        com.sun.lwuit.html.CSSBorder r2;
        com.sun.lwuit.plaf.Border[] r0, $r4;
        int $i0, i1;
        com.sun.lwuit.plaf.Border $r1, $r3;

        r2 := @this: com.sun.lwuit.html.CSSBorder;

        r0 := @parameter0: com.sun.lwuit.plaf.Border[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label3;

        $r1 = r0[i1];

        if $r1 == null goto label2;

        $r4 = r2.<com.sun.lwuit.html.CSSBorder: com.sun.lwuit.plaf.Border[] borders>;

        $r3 = r0[i1];

        $r4[i1] = $r3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    void <init>(com.sun.lwuit.plaf.Border[], com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r3;
        com.sun.lwuit.html.CSSBorder r0;
        com.sun.lwuit.plaf.Border[] $r1, r2;

        r0 := @this: com.sun.lwuit.html.CSSBorder;

        r2 := @parameter0: com.sun.lwuit.plaf.Border[];

        r3 := @parameter1: com.sun.lwuit.Component;

        specialinvoke r0.<com.sun.lwuit.plaf.Border: void <init>()>();

        $r1 = newarray (com.sun.lwuit.plaf.Border)[4];

        r0.<com.sun.lwuit.html.CSSBorder: com.sun.lwuit.plaf.Border[] borders> = $r1;

        r0.<com.sun.lwuit.html.CSSBorder: com.sun.lwuit.plaf.Border[] borders> = r2;

        r0.<com.sun.lwuit.html.CSSBorder: com.sun.lwuit.Component 'cmp'> = r3;

        return;
    }

    public void paint(com.sun.lwuit.Graphics, com.sun.lwuit.Component)
    {
        com.sun.lwuit.plaf.UIManager $r29;
        com.sun.lwuit.Component r0;
        com.sun.lwuit.html.CSSBorder r2;
        com.sun.lwuit.plaf.Style $r1;
        java.util.Vector $r25, $r27;
        boolean $z0, z1, z2, $z3, z4;
        com.sun.lwuit.Graphics r9;
        com.sun.lwuit.geom.Rectangle $r10, $r15, $r18, $r21;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25;
        com.sun.lwuit.html.HTMLLink r24, r28;
        com.sun.lwuit.plaf.Border $r4, $r6, $r8, $r12, $r14, $r17, $r20, $r23;
        com.sun.lwuit.plaf.Border[] $r3, $r5, $r7, $r11, $r13, $r16, $r19, $r22;
        com.sun.lwuit.plaf.LookAndFeel $r30;
        java.lang.Object $r26;

        r2 := @this: com.sun.lwuit.html.CSSBorder;

        r9 := @parameter0: com.sun.lwuit.Graphics;

        r0 := @parameter1: com.sun.lwuit.Component;

        $i0 = virtualinvoke r0.<com.sun.lwuit.Component: int getX()>();

        $i1 = virtualinvoke r0.<com.sun.lwuit.Component: int getY()>();

        $i2 = virtualinvoke r0.<com.sun.lwuit.Component: int getWidth()>();

        $i3 = virtualinvoke r0.<com.sun.lwuit.Component: int getHeight()>();

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getStyle()>();

        z1 = 1;

        z2 = 1;

        $z0 = r0 instanceof com.sun.lwuit.html.HTMLLink;

        if $z0 == 0 goto label2;

        r28 = (com.sun.lwuit.html.HTMLLink) r0;

        r24 = r28.<com.sun.lwuit.html.HTMLLink: com.sun.lwuit.html.HTMLLink parentLink>;

        if r24 != null goto label1;

        $r27 = r28.<com.sun.lwuit.html.HTMLLink: java.util.Vector childLinks>;

        if $r27 == null goto label2;

        z2 = 0;

        goto label2;

     label1:
        z1 = 0;

        $r25 = r24.<com.sun.lwuit.html.HTMLLink: java.util.Vector childLinks>;

        $r26 = virtualinvoke $r25.<java.util.Vector: java.lang.Object lastElement()>();

        if $r26 == r28 goto label2;

        z2 = 0;

     label2:
        $r29 = staticinvoke <com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.UIManager getInstance()>();

        $r30 = virtualinvoke $r29.<com.sun.lwuit.plaf.UIManager: com.sun.lwuit.plaf.LookAndFeel getLookAndFeel()>();

        $z3 = virtualinvoke $r30.<com.sun.lwuit.plaf.LookAndFeel: boolean isRTL()>();

        if $z3 == 0 goto label3;

        z4 = z1;

        z1 = z2;

        z2 = z4;

     label3:
        $r3 = r2.<com.sun.lwuit.html.CSSBorder: com.sun.lwuit.plaf.Border[] borders>;

        $r4 = $r3[0];

        if $r4 == null goto label4;

        $r21 = specialinvoke r2.<com.sun.lwuit.html.CSSBorder: com.sun.lwuit.geom.Rectangle saveClip(com.sun.lwuit.Graphics)>(r9);

        $i25 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(int)>(0);

        virtualinvoke r9.<com.sun.lwuit.Graphics: void clipRect(int,int,int,int)>($i0, $i1, $i2, $i25);

        $r22 = r2.<com.sun.lwuit.html.CSSBorder: com.sun.lwuit.plaf.Border[] borders>;

        $r23 = $r22[0];

        virtualinvoke $r23.<com.sun.lwuit.plaf.Border: void paint(com.sun.lwuit.Graphics,com.sun.lwuit.Component)>(r9, r0);

        specialinvoke r2.<com.sun.lwuit.html.CSSBorder: void restoreClip(com.sun.lwuit.Graphics,com.sun.lwuit.geom.Rectangle)>(r9, $r21);

     label4:
        $r5 = r2.<com.sun.lwuit.html.CSSBorder: com.sun.lwuit.plaf.Border[] borders>;

        $r6 = $r5[2];

        if $r6 == null goto label5;

        $r18 = specialinvoke r2.<com.sun.lwuit.html.CSSBorder: com.sun.lwuit.geom.Rectangle saveClip(com.sun.lwuit.Graphics)>(r9);

        $i21 = $i1 + $i3;

        $i22 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(int)>(2);

        $i23 = $i21 - $i22;

        $i24 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(int)>(2);

        virtualinvoke r9.<com.sun.lwuit.Graphics: void clipRect(int,int,int,int)>($i0, $i23, $i2, $i24);

        $r19 = r2.<com.sun.lwuit.html.CSSBorder: com.sun.lwuit.plaf.Border[] borders>;

        $r20 = $r19[2];

        virtualinvoke $r20.<com.sun.lwuit.plaf.Border: void paint(com.sun.lwuit.Graphics,com.sun.lwuit.Component)>(r9, r0);

        specialinvoke r2.<com.sun.lwuit.html.CSSBorder: void restoreClip(com.sun.lwuit.Graphics,com.sun.lwuit.geom.Rectangle)>(r9, $r18);

     label5:
        if z1 == 0 goto label6;

        $r13 = r2.<com.sun.lwuit.html.CSSBorder: com.sun.lwuit.plaf.Border[] borders>;

        $r14 = $r13[1];

        if $r14 == null goto label6;

        $r15 = specialinvoke r2.<com.sun.lwuit.html.CSSBorder: com.sun.lwuit.geom.Rectangle saveClip(com.sun.lwuit.Graphics)>(r9);

        $i14 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(int)>(0);

        $i15 = $i1 + $i14;

        $i16 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(int)>(1);

        $i17 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(int)>(0);

        $i18 = $i3 - $i17;

        $i19 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(int)>(2);

        $i20 = $i18 - $i19;

        virtualinvoke r9.<com.sun.lwuit.Graphics: void clipRect(int,int,int,int)>($i0, $i15, $i16, $i20);

        $r16 = r2.<com.sun.lwuit.html.CSSBorder: com.sun.lwuit.plaf.Border[] borders>;

        $r17 = $r16[1];

        virtualinvoke $r17.<com.sun.lwuit.plaf.Border: void paint(com.sun.lwuit.Graphics,com.sun.lwuit.Component)>(r9, r0);

        specialinvoke r2.<com.sun.lwuit.html.CSSBorder: void restoreClip(com.sun.lwuit.Graphics,com.sun.lwuit.geom.Rectangle)>(r9, $r15);

     label6:
        if z2 == 0 goto label7;

        $r7 = r2.<com.sun.lwuit.html.CSSBorder: com.sun.lwuit.plaf.Border[] borders>;

        $r8 = $r7[3];

        if $r8 == null goto label7;

        $r10 = specialinvoke r2.<com.sun.lwuit.html.CSSBorder: com.sun.lwuit.geom.Rectangle saveClip(com.sun.lwuit.Graphics)>(r9);

        $i4 = $i0 + $i2;

        $i5 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(int)>(3);

        $i6 = $i4 - $i5;

        $i7 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(int)>(0);

        $i8 = $i1 + $i7;

        $i9 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(int)>(3);

        $i10 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(int)>(0);

        $i11 = $i3 - $i10;

        $i12 = virtualinvoke $r1.<com.sun.lwuit.plaf.Style: int getPadding(int)>(2);

        $i13 = $i11 - $i12;

        virtualinvoke r9.<com.sun.lwuit.Graphics: void clipRect(int,int,int,int)>($i6, $i8, $i9, $i13);

        $r11 = r2.<com.sun.lwuit.html.CSSBorder: com.sun.lwuit.plaf.Border[] borders>;

        $r12 = $r11[3];

        virtualinvoke $r12.<com.sun.lwuit.plaf.Border: void paint(com.sun.lwuit.Graphics,com.sun.lwuit.Component)>(r9, r0);

        specialinvoke r2.<com.sun.lwuit.html.CSSBorder: void restoreClip(com.sun.lwuit.Graphics,com.sun.lwuit.geom.Rectangle)>(r9, $r10);

     label7:
        return;
    }

    private com.sun.lwuit.geom.Rectangle saveClip(com.sun.lwuit.Graphics)
    {
        com.sun.lwuit.html.CSSBorder r2;
        int $i0, $i1, $i2, $i3;
        com.sun.lwuit.Graphics r1;
        com.sun.lwuit.geom.Rectangle $r0;

        r2 := @this: com.sun.lwuit.html.CSSBorder;

        r1 := @parameter0: com.sun.lwuit.Graphics;

        $r0 = new com.sun.lwuit.geom.Rectangle;

        $i0 = virtualinvoke r1.<com.sun.lwuit.Graphics: int getClipX()>();

        $i1 = virtualinvoke r1.<com.sun.lwuit.Graphics: int getClipY()>();

        $i2 = virtualinvoke r1.<com.sun.lwuit.Graphics: int getClipWidth()>();

        $i3 = virtualinvoke r1.<com.sun.lwuit.Graphics: int getClipHeight()>();

        specialinvoke $r0.<com.sun.lwuit.geom.Rectangle: void <init>(int,int,int,int)>($i0, $i1, $i2, $i3);

        return $r0;
    }

    private void restoreClip(com.sun.lwuit.Graphics, com.sun.lwuit.geom.Rectangle)
    {
        com.sun.lwuit.Graphics r0;
        com.sun.lwuit.geom.Rectangle r1;
        com.sun.lwuit.html.CSSBorder r4;
        com.sun.lwuit.geom.Dimension $r2, $r3;
        int $i0, $i1, $i2, $i3;

        r4 := @this: com.sun.lwuit.html.CSSBorder;

        r0 := @parameter0: com.sun.lwuit.Graphics;

        r1 := @parameter1: com.sun.lwuit.geom.Rectangle;

        $i0 = virtualinvoke r1.<com.sun.lwuit.geom.Rectangle: int getX()>();

        $i1 = virtualinvoke r1.<com.sun.lwuit.geom.Rectangle: int getY()>();

        $r2 = virtualinvoke r1.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i2 = virtualinvoke $r2.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $r3 = virtualinvoke r1.<com.sun.lwuit.geom.Rectangle: com.sun.lwuit.geom.Dimension getSize()>();

        $i3 = virtualinvoke $r3.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        virtualinvoke r0.<com.sun.lwuit.Graphics: void setClip(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }

    public void paintBorderBackground(com.sun.lwuit.Graphics, com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r2;
        com.sun.lwuit.html.CSSBorder r0;
        com.sun.lwuit.Graphics r1;

        r0 := @this: com.sun.lwuit.html.CSSBorder;

        r1 := @parameter0: com.sun.lwuit.Graphics;

        r2 := @parameter1: com.sun.lwuit.Component;

        return;
    }
}
