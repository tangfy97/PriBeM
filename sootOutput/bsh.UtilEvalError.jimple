public class bsh.UtilEvalError extends java.lang.Exception
{

    protected void <init>()
    {
        bsh.UtilEvalError r0;

        r0 := @this: bsh.UtilEvalError;

        specialinvoke r0.<java.lang.Exception: void <init>()>();

        return;
    }

    public void <init>(java.lang.String)
    {
        bsh.UtilEvalError r0;
        java.lang.String r1;

        r0 := @this: bsh.UtilEvalError;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        return;
    }

    public bsh.EvalError toEvalError(java.lang.String, bsh.SimpleNode, bsh.CallStack)
    {
        bsh.EvalError $r3;
        bsh.UtilEvalError r6;
        bsh.SimpleNode r10;
        bsh.CallStack r11;
        java.lang.StringBuffer $r0, $r1, $r2, $r4, $r5, $r8;
        java.lang.String $r7, $r9, r12, r13;
        boolean $z0;

        r6 := @this: bsh.UtilEvalError;

        r12 := @parameter0: java.lang.String;

        r10 := @parameter1: bsh.SimpleNode;

        r11 := @parameter2: bsh.CallStack;

        $z0 = <bsh.Interpreter: boolean DEBUG>;

        if $z0 == 0 goto label1;

        virtualinvoke r6.<bsh.UtilEvalError: void printStackTrace()>();

     label1:
        if r12 != null goto label2;

        r13 = "";

        goto label3;

     label2:
        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r12);

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        r13 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        $r3 = new bsh.EvalError;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r13);

        $r7 = virtualinvoke r6.<bsh.UtilEvalError: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<bsh.EvalError: void <init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)>($r9, r10, r11);

        return $r3;
    }

    public bsh.EvalError toEvalError(bsh.SimpleNode, bsh.CallStack)
    {
        bsh.EvalError $r3;
        bsh.UtilEvalError r0;
        bsh.SimpleNode r1;
        bsh.CallStack r2;

        r0 := @this: bsh.UtilEvalError;

        r1 := @parameter0: bsh.SimpleNode;

        r2 := @parameter1: bsh.CallStack;

        $r3 = virtualinvoke r0.<bsh.UtilEvalError: bsh.EvalError toEvalError(java.lang.String,bsh.SimpleNode,bsh.CallStack)>(null, r1, r2);

        return $r3;
    }
}
