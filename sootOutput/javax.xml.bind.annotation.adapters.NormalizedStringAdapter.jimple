public final class javax.xml.bind.'annotation'.adapters.NormalizedStringAdapter extends javax.xml.bind.'annotation'.adapters.XmlAdapter
{

    public void <init>()
    {
        javax.xml.bind.'annotation'.adapters.NormalizedStringAdapter r0;

        r0 := @this: javax.xml.bind.'annotation'.adapters.NormalizedStringAdapter;

        specialinvoke r0.<javax.xml.bind.'annotation'.adapters.XmlAdapter: void <init>()>();

        return;
    }

    public java.lang.String unmarshal(java.lang.String)
    {
        char $c1, $c2;
        int $i0, i3, i4, $i6, $i8, $i10;
        javax.xml.bind.'annotation'.adapters.NormalizedStringAdapter r3;
        char[] $r1;
        java.lang.String r0, $r4;
        boolean $z0, $z1;

        r3 := @this: javax.xml.bind.'annotation'.adapters.NormalizedStringAdapter;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i3 = $i0 - 1;

     label2:
        if i3 < 0 goto label3;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $z1 = staticinvoke <javax.xml.bind.'annotation'.adapters.NormalizedStringAdapter: boolean isWhiteSpaceExceptSpace(char)>($c2);

        if $z1 != 0 goto label3;

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label2;

     label3:
        if i3 >= 0 goto label4;

        return r0;

     label4:
        $r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        $i8 = (int) -1;

        i4 = i3 + $i8;

        $r1[i3] = 32;

     label5:
        if i4 < 0 goto label7;

        $c1 = $r1[i4];

        $z0 = staticinvoke <javax.xml.bind.'annotation'.adapters.NormalizedStringAdapter: boolean isWhiteSpaceExceptSpace(char)>($c1);

        if $z0 == 0 goto label6;

        $r1[i4] = 32;

     label6:
        $i10 = (int) -1;

        i4 = i4 + $i10;

        goto label5;

     label7:
        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r1);

        return $r4;
    }

    public java.lang.String marshal(java.lang.String)
    {
        javax.xml.bind.'annotation'.adapters.NormalizedStringAdapter r1;
        java.lang.String r0;

        r1 := @this: javax.xml.bind.'annotation'.adapters.NormalizedStringAdapter;

        r0 := @parameter0: java.lang.String;

        return r0;
    }

    protected static boolean isWhiteSpaceExceptSpace(char)
    {
        int $i1, $i2, $i3, $i4;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 < 32 goto label1;

        return 0;

     label1:
        $i2 = (int) c0;

        if $i2 == 9 goto label2;

        $i3 = (int) c0;

        if $i3 == 10 goto label2;

        $i4 = (int) c0;

        if $i4 != 13 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public volatile java.lang.Object marshal(java.lang.Object) throws java.lang.Exception
    {
        javax.xml.bind.'annotation'.adapters.NormalizedStringAdapter r0;
        java.lang.Object r1;
        java.lang.String $r2, $r3;

        r0 := @this: javax.xml.bind.'annotation'.adapters.NormalizedStringAdapter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) r1;

        $r3 = virtualinvoke r0.<javax.xml.bind.'annotation'.adapters.NormalizedStringAdapter: java.lang.String marshal(java.lang.String)>($r2);

        return $r3;
    }

    public volatile java.lang.Object unmarshal(java.lang.Object) throws java.lang.Exception
    {
        javax.xml.bind.'annotation'.adapters.NormalizedStringAdapter r0;
        java.lang.Object r1;
        java.lang.String $r2, $r3;

        r0 := @this: javax.xml.bind.'annotation'.adapters.NormalizedStringAdapter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) r1;

        $r3 = virtualinvoke r0.<javax.xml.bind.'annotation'.adapters.NormalizedStringAdapter: java.lang.String unmarshal(java.lang.String)>($r2);

        return $r3;
    }
}
