public abstract class org.eclipse.jetty.io.AbstractBuffer extends java.lang.Object implements org.eclipse.jetty.io.Buffer
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    private static final boolean __boundsChecking;
    protected static final java.lang.String __IMMUTABLE;
    protected static final java.lang.String __READONLY;
    protected static final java.lang.String __READWRITE;
    protected static final java.lang.String __VOLATILE;
    protected int _access;
    protected boolean _volatile;
    protected int _get;
    protected int _put;
    protected int _hash;
    protected int _hashGet;
    protected int _hashPut;
    protected int _mark;
    protected java.lang.String _string;
    protected org.eclipse.jetty.io.View _view;
    static final boolean $assertionsDisabled;

    public void <init>(int, boolean)
    {
        org.eclipse.jetty.io.AbstractBuffer r0;
        int i0, $i2;
        java.lang.IllegalArgumentException $r2;
        boolean z0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 != 0 goto label1;

        if z0 == 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("IMMUTABLE && VOLATILE");

        throw $r2;

     label1:
        $i2 = (int) -1;

        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void setMarkIndex(int)>($i2);

        r0.<org.eclipse.jetty.io.AbstractBuffer: int _access> = i0;

        r0.<org.eclipse.jetty.io.AbstractBuffer: boolean _volatile> = z0;

        return;
    }

    public byte[] asArray()
    {
        byte[] r1, $r2;
        org.eclipse.jetty.io.AbstractBuffer r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        $i0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int length()>();

        r1 = newarray (byte)[$i0];

        $r2 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: byte[] array()>();

        if $r2 == null goto label1;

        $i3 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int getIndex()>();

        $i4 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i3, r1, 0, $i4);

        goto label2;

     label1:
        $i1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int getIndex()>();

        $i2 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int length()>();

        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int peek(int,byte[],int,int)>($i1, r1, 0, $i2);

     label2:
        return r1;
    }

    public org.eclipse.jetty.io.ByteArrayBuffer duplicate(int)
    {
        byte[] $r3, $r5;
        org.eclipse.jetty.io.AbstractBuffer r0;
        org.eclipse.jetty.io.ByteArrayBuffer $r4;
        int $i0, i1, $i2;
        org.eclipse.jetty.io.Buffer $r1;
        org.eclipse.jetty.io.ByteArrayBuffer$CaseInsensitive $r2;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        i1 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: org.eclipse.jetty.io.Buffer buffer()>();

        $z0 = r0 instanceof org.eclipse.jetty.io.Buffer$CaseInsensitve;

        if $z0 != 0 goto label1;

        $z1 = $r1 instanceof org.eclipse.jetty.io.Buffer$CaseInsensitve;

        if $z1 == 0 goto label2;

     label1:
        $r2 = new org.eclipse.jetty.io.ByteArrayBuffer$CaseInsensitive;

        $r3 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: byte[] asArray()>();

        $i0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int length()>();

        specialinvoke $r2.<org.eclipse.jetty.io.ByteArrayBuffer$CaseInsensitive: void <init>(byte[],int,int,int)>($r3, 0, $i0, i1);

        return $r2;

     label2:
        $r4 = new org.eclipse.jetty.io.ByteArrayBuffer;

        $r5 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: byte[] asArray()>();

        $i2 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int length()>();

        specialinvoke $r4.<org.eclipse.jetty.io.ByteArrayBuffer: void <init>(byte[],int,int,int)>($r5, 0, $i2, i1);

        return $r4;
    }

    public org.eclipse.jetty.io.Buffer asNonVolatileBuffer()
    {
        org.eclipse.jetty.io.ByteArrayBuffer $r1;
        org.eclipse.jetty.io.AbstractBuffer r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: boolean isVolatile()>();

        if $z0 != 0 goto label1;

        return r0;

     label1:
        $i0 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _access>;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: org.eclipse.jetty.io.ByteArrayBuffer duplicate(int)>($i0);

        return $r1;
    }

    public org.eclipse.jetty.io.Buffer asImmutableBuffer()
    {
        org.eclipse.jetty.io.ByteArrayBuffer $r1;
        org.eclipse.jetty.io.AbstractBuffer r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: boolean isImmutable()>();

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: org.eclipse.jetty.io.ByteArrayBuffer duplicate(int)>(0);

        return $r1;
    }

    public org.eclipse.jetty.io.Buffer asReadOnlyBuffer()
    {
        org.eclipse.jetty.io.View $r1;
        org.eclipse.jetty.io.AbstractBuffer r0;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: boolean isReadOnly()>();

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r1 = new org.eclipse.jetty.io.View;

        $i0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int markIndex()>();

        $i1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int getIndex()>();

        $i2 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int putIndex()>();

        specialinvoke $r1.<org.eclipse.jetty.io.View: void <init>(org.eclipse.jetty.io.Buffer,int,int,int,int)>(r0, $i0, $i1, $i2, 1);

        return $r1;
    }

    public org.eclipse.jetty.io.Buffer asMutableBuffer()
    {
        org.eclipse.jetty.io.AbstractBuffer r0;
        org.eclipse.jetty.io.ByteArrayBuffer $r3;
        org.eclipse.jetty.io.View $r2;
        int $i0, $i1, $i2, $i3;
        org.eclipse.jetty.io.Buffer $r1;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: boolean isImmutable()>();

        if $z0 != 0 goto label1;

        return r0;

     label1:
        $r1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: org.eclipse.jetty.io.Buffer buffer()>();

        $z1 = interfaceinvoke $r1.<org.eclipse.jetty.io.Buffer: boolean isReadOnly()>();

        if $z1 == 0 goto label2;

        $r3 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: org.eclipse.jetty.io.ByteArrayBuffer duplicate(int)>(2);

        return $r3;

     label2:
        $r2 = new org.eclipse.jetty.io.View;

        $i0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int markIndex()>();

        $i1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int getIndex()>();

        $i2 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int putIndex()>();

        $i3 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _access>;

        specialinvoke $r2.<org.eclipse.jetty.io.View: void <init>(org.eclipse.jetty.io.Buffer,int,int,int,int)>($r1, $i0, $i1, $i2, $i3);

        return $r2;
    }

    public org.eclipse.jetty.io.Buffer buffer()
    {
        org.eclipse.jetty.io.AbstractBuffer r0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        return r0;
    }

    public void clear()
    {
        int $i1;
        org.eclipse.jetty.io.AbstractBuffer r0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        $i1 = (int) -1;

        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void setMarkIndex(int)>($i1);

        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void setGetIndex(int)>(0);

        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void setPutIndex(int)>(0);

        return;
    }

    public void compact()
    {
        byte[] $r1, $r3, $r4;
        java.lang.IllegalStateException $r5;
        int $i0, i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        org.eclipse.jetty.io.Buffer $r2;
        boolean $z0;
        org.eclipse.jetty.io.AbstractBuffer r0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: boolean isReadOnly()>();

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("READONLY");

        throw $r5;

     label1:
        $i0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int markIndex()>();

        if $i0 < 0 goto label2;

        $i10 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int markIndex()>();

        goto label3;

     label2:
        $i10 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int getIndex()>();

     label3:
        i1 = $i10;

        if $i10 <= 0 goto label7;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: byte[] array()>();

        $i2 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int putIndex()>();

        i3 = $i2 - $i10;

        if i3 <= 0 goto label5;

        if $r1 == null goto label4;

        $r3 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: byte[] array()>();

        $r4 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: byte[] array()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i10, $r4, 0, i3);

        goto label5;

     label4:
        $r2 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: org.eclipse.jetty.io.Buffer peek(int,int)>($i10, i3);

        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int poke(int,org.eclipse.jetty.io.Buffer)>(0, $r2);

     label5:
        $i11 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int markIndex()>();

        if $i11 <= 0 goto label6;

        $i8 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int markIndex()>();

        $i9 = $i8 - i1;

        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void setMarkIndex(int)>($i9);

     label6:
        $i4 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int getIndex()>();

        $i5 = $i4 - i1;

        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void setGetIndex(int)>($i5);

        $i6 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int putIndex()>();

        $i7 = $i6 - i1;

        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void setPutIndex(int)>($i7);

     label7:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        byte $b3, $b4;
        int $i0, $i1, $i2, $i5, $i6, $i7, $i8, i9, i10, $i11, $i13, $i15, $i16, $i17;
        org.eclipse.jetty.io.Buffer r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.eclipse.jetty.io.AbstractBuffer r1, r3;
        java.lang.Object r0;

        r1 := @this: org.eclipse.jetty.io.AbstractBuffer;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        if r0 == null goto label02;

        $z0 = r0 instanceof org.eclipse.jetty.io.Buffer;

        if $z0 != 0 goto label03;

     label02:
        return 0;

     label03:
        r2 = (org.eclipse.jetty.io.Buffer) r0;

        $z1 = r1 instanceof org.eclipse.jetty.io.Buffer$CaseInsensitve;

        if $z1 != 0 goto label04;

        $z3 = r2 instanceof org.eclipse.jetty.io.Buffer$CaseInsensitve;

        if $z3 == 0 goto label05;

     label04:
        $z2 = virtualinvoke r1.<org.eclipse.jetty.io.AbstractBuffer: boolean equalsIgnoreCase(org.eclipse.jetty.io.Buffer)>(r2);

        return $z2;

     label05:
        $i0 = interfaceinvoke r2.<org.eclipse.jetty.io.Buffer: int length()>();

        $i1 = virtualinvoke r1.<org.eclipse.jetty.io.AbstractBuffer: int length()>();

        if $i0 == $i1 goto label06;

        return 0;

     label06:
        $i2 = r1.<org.eclipse.jetty.io.AbstractBuffer: int _hash>;

        if $i2 == 0 goto label07;

        $z4 = r0 instanceof org.eclipse.jetty.io.AbstractBuffer;

        if $z4 == 0 goto label07;

        r3 = (org.eclipse.jetty.io.AbstractBuffer) r0;

        $i5 = r3.<org.eclipse.jetty.io.AbstractBuffer: int _hash>;

        if $i5 == 0 goto label07;

        $i7 = r1.<org.eclipse.jetty.io.AbstractBuffer: int _hash>;

        $i6 = r3.<org.eclipse.jetty.io.AbstractBuffer: int _hash>;

        if $i7 == $i6 goto label07;

        return 0;

     label07:
        $i8 = virtualinvoke r1.<org.eclipse.jetty.io.AbstractBuffer: int getIndex()>();

        i9 = interfaceinvoke r2.<org.eclipse.jetty.io.Buffer: int putIndex()>();

        i10 = virtualinvoke r1.<org.eclipse.jetty.io.AbstractBuffer: int putIndex()>();

     label08:
        $i11 = i10;

        $i13 = (int) -1;

        i10 = i10 + $i13;

        if $i11 <= $i8 goto label10;

        $b3 = virtualinvoke r1.<org.eclipse.jetty.io.AbstractBuffer: byte peek(int)>(i10);

        $i15 = (int) -1;

        i9 = i9 + $i15;

        $b4 = interfaceinvoke r2.<org.eclipse.jetty.io.Buffer: byte peek(int)>(i9);

        $i16 = (int) $b3;

        $i17 = (int) $b4;

        if $i16 == $i17 goto label09;

        return 0;

     label09:
        goto label08;

     label10:
        return 1;
    }

    public boolean equalsIgnoreCase(org.eclipse.jetty.io.Buffer)
    {
        byte[] $r3, $r4;
        byte $b3, $b4, b20, b21, b24, b25;
        org.eclipse.jetty.io.Buffer r0;
        boolean $z0;
        int $i0, $i1, $i2, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i22, $i23, $i27, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i41, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53;
        org.eclipse.jetty.io.AbstractBuffer r1, r2;

        r1 := @this: org.eclipse.jetty.io.AbstractBuffer;

        r0 := @parameter0: org.eclipse.jetty.io.Buffer;

        if r0 != r1 goto label01;

        return 1;

     label01:
        $i0 = interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: int length()>();

        $i1 = virtualinvoke r1.<org.eclipse.jetty.io.AbstractBuffer: int length()>();

        if $i0 == $i1 goto label02;

        return 0;

     label02:
        $i2 = r1.<org.eclipse.jetty.io.AbstractBuffer: int _hash>;

        if $i2 == 0 goto label03;

        $z0 = r0 instanceof org.eclipse.jetty.io.AbstractBuffer;

        if $z0 == 0 goto label03;

        r2 = (org.eclipse.jetty.io.AbstractBuffer) r0;

        $i14 = r2.<org.eclipse.jetty.io.AbstractBuffer: int _hash>;

        if $i14 == 0 goto label03;

        $i16 = r1.<org.eclipse.jetty.io.AbstractBuffer: int _hash>;

        $i15 = r2.<org.eclipse.jetty.io.AbstractBuffer: int _hash>;

        if $i16 == $i15 goto label03;

        return 0;

     label03:
        $i17 = virtualinvoke r1.<org.eclipse.jetty.io.AbstractBuffer: int getIndex()>();

        i18 = interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: int putIndex()>();

        $r3 = virtualinvoke r1.<org.eclipse.jetty.io.AbstractBuffer: byte[] array()>();

        $r4 = interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: byte[] array()>();

        if $r3 == null goto label09;

        if $r4 == null goto label09;

        i19 = virtualinvoke r1.<org.eclipse.jetty.io.AbstractBuffer: int putIndex()>();

     label04:
        $i9 = i19;

        $i27 = (int) -1;

        i19 = i19 + $i27;

        if $i9 <= $i17 goto label08;

        b20 = $r3[i19];

        $i29 = (int) -1;

        i18 = i18 + $i29;

        b21 = $r4[i18];

        $i30 = (int) b20;

        $i31 = (int) b21;

        if $i30 == $i31 goto label07;

        $i32 = (int) b20;

        if 97 > $i32 goto label05;

        $i33 = (int) b20;

        if $i33 > 122 goto label05;

        $i34 = (int) b20;

        $i12 = $i34 - 97;

        $i13 = $i12 + 65;

        b20 = (byte) $i13;

     label05:
        $i35 = (int) b21;

        if 97 > $i35 goto label06;

        $i36 = (int) b21;

        if $i36 > 122 goto label06;

        $i37 = (int) b21;

        $i10 = $i37 - 97;

        $i11 = $i10 + 65;

        b21 = (byte) $i11;

     label06:
        $i38 = (int) b20;

        $i39 = (int) b21;

        if $i38 == $i39 goto label07;

        return 0;

     label07:
        goto label04;

     label08:
        goto label14;

     label09:
        i22 = virtualinvoke r1.<org.eclipse.jetty.io.AbstractBuffer: int putIndex()>();

     label10:
        $i23 = i22;

        $i41 = (int) -1;

        i22 = i22 + $i41;

        if $i23 <= $i17 goto label14;

        $b3 = virtualinvoke r1.<org.eclipse.jetty.io.AbstractBuffer: byte peek(int)>(i22);

        b24 = $b3;

        $i43 = (int) -1;

        i18 = i18 + $i43;

        $b4 = interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: byte peek(int)>(i18);

        b25 = $b4;

        $i44 = (int) $b3;

        $i45 = (int) $b4;

        if $i44 == $i45 goto label13;

        $i46 = (int) $b3;

        if 97 > $i46 goto label11;

        $i47 = (int) $b3;

        if $i47 > 122 goto label11;

        $i48 = (int) $b3;

        $i7 = $i48 - 97;

        $i8 = $i7 + 65;

        b24 = (byte) $i8;

     label11:
        $i49 = (int) $b4;

        if 97 > $i49 goto label12;

        $i50 = (int) $b4;

        if $i50 > 122 goto label12;

        $i51 = (int) $b4;

        $i5 = $i51 - 97;

        $i6 = $i5 + 65;

        b25 = (byte) $i6;

     label12:
        $i52 = (int) b24;

        $i53 = (int) b25;

        if $i52 == $i53 goto label13;

        return 0;

     label13:
        goto label10;

     label14:
        return 1;
    }

    public byte get()
    {
        byte $b2;
        org.eclipse.jetty.io.AbstractBuffer r0;
        int $i0, $i1;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        $i0 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _get>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jetty.io.AbstractBuffer: int _get> = $i1;

        $b2 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: byte peek(int)>($i0);

        return $b2;
    }

    public int get(byte[], int, int)
    {
        byte[] r1;
        org.eclipse.jetty.io.AbstractBuffer r0;
        int $i0, $i1, i2, $i3, $i4, i5, $i7;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        r1 := @parameter0: byte[];

        i2 := @parameter1: int;

        i5 := @parameter2: int;

        $i0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int getIndex()>();

        $i1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int length()>();

        if $i1 != 0 goto label1;

        $i7 = (int) -1;

        return $i7;

     label1:
        if i5 <= $i1 goto label2;

        i5 = $i1;

     label2:
        $i3 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int peek(int,byte[],int,int)>($i0, r1, i2, i5);

        if $i3 <= 0 goto label3;

        $i4 = $i0 + $i3;

        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void setGetIndex(int)>($i4);

     label3:
        return $i3;
    }

    public org.eclipse.jetty.io.Buffer get(int)
    {
        org.eclipse.jetty.io.AbstractBuffer r0;
        int $i0, i1, $i2;
        org.eclipse.jetty.io.Buffer $r1;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        i1 := @parameter0: int;

        $i0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int getIndex()>();

        $r1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: org.eclipse.jetty.io.Buffer peek(int,int)>($i0, i1);

        $i2 = $i0 + i1;

        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void setGetIndex(int)>($i2);

        return $r1;
    }

    public final int getIndex()
    {
        int $i0;
        org.eclipse.jetty.io.AbstractBuffer r0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        $i0 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _get>;

        return $i0;
    }

    public boolean hasContent()
    {
        org.eclipse.jetty.io.AbstractBuffer r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        $i1 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _put>;

        $i0 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _get>;

        if $i1 <= $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int hashCode()
    {
        byte[] $r1;
        byte $b8, b17, b22;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, $i18, $i19, $i20, i21, $i23, $i24, $i25, $i26, $i28, $i29, $i30, $i31, $i32, $i34, $i35, $i36, $i37, $i38, $i40;
        org.eclipse.jetty.io.AbstractBuffer r0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        $i0 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _hash>;

        if $i0 == 0 goto label01;

        $i12 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _hashGet>;

        $i11 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _get>;

        if $i12 != $i11 goto label01;

        $i14 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _hashPut>;

        $i13 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _put>;

        if $i14 == $i13 goto label10;

     label01:
        $i15 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int getIndex()>();

        $r1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: byte[] array()>();

        if $r1 != null goto label05;

        i16 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int putIndex()>();

     label02:
        $i7 = i16;

        $i28 = (int) -1;

        i16 = i16 + $i28;

        if $i7 <= $i15 goto label04;

        $b8 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: byte peek(int)>(i16);

        b17 = $b8;

        $i29 = (int) $b8;

        if 97 > $i29 goto label03;

        $i30 = (int) $b8;

        if $i30 > 122 goto label03;

        $i31 = (int) $b8;

        $i9 = $i31 - 97;

        $i10 = $i9 + 65;

        b17 = (byte) $i10;

     label03:
        $i18 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _hash>;

        $i19 = 31 * $i18;

        $i32 = (int) b17;

        $i20 = $i19 + $i32;

        r0.<org.eclipse.jetty.io.AbstractBuffer: int _hash> = $i20;

        goto label02;

     label04:
        goto label08;

     label05:
        i21 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int putIndex()>();

     label06:
        $i1 = i21;

        $i34 = (int) -1;

        i21 = i21 + $i34;

        if $i1 <= $i15 goto label08;

        b22 = $r1[i21];

        $i35 = (int) b22;

        if 97 > $i35 goto label07;

        $i36 = (int) b22;

        if $i36 > 122 goto label07;

        $i37 = (int) b22;

        $i5 = $i37 - 97;

        $i6 = $i5 + 65;

        b22 = (byte) $i6;

     label07:
        $i23 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _hash>;

        $i24 = 31 * $i23;

        $i38 = (int) b22;

        $i25 = $i24 + $i38;

        r0.<org.eclipse.jetty.io.AbstractBuffer: int _hash> = $i25;

        goto label06;

     label08:
        $i2 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _hash>;

        if $i2 != 0 goto label09;

        $i40 = (int) -1;

        r0.<org.eclipse.jetty.io.AbstractBuffer: int _hash> = $i40;

     label09:
        $i3 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _get>;

        r0.<org.eclipse.jetty.io.AbstractBuffer: int _hashGet> = $i3;

        $i4 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _put>;

        r0.<org.eclipse.jetty.io.AbstractBuffer: int _hashPut> = $i4;

     label10:
        $i26 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _hash>;

        return $i26;
    }

    public boolean isImmutable()
    {
        int $i0;
        org.eclipse.jetty.io.AbstractBuffer r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        $i0 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _access>;

        if $i0 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isReadOnly()
    {
        int $i0;
        org.eclipse.jetty.io.AbstractBuffer r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        $i0 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _access>;

        if $i0 > 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isVolatile()
    {
        org.eclipse.jetty.io.AbstractBuffer r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        $z0 = r0.<org.eclipse.jetty.io.AbstractBuffer: boolean _volatile>;

        return $z0;
    }

    public int length()
    {
        org.eclipse.jetty.io.AbstractBuffer r0;
        int $i0, $i1, $i2;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        $i1 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _put>;

        $i0 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _get>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public void mark()
    {
        int $i0, $i1;
        org.eclipse.jetty.io.AbstractBuffer r0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        $i0 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _get>;

        $i1 = $i0 - 1;

        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void setMarkIndex(int)>($i1);

        return;
    }

    public void mark(int)
    {
        org.eclipse.jetty.io.AbstractBuffer r0;
        int i0, $i1, $i2;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        i0 := @parameter0: int;

        $i1 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _get>;

        $i2 = $i1 + i0;

        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void setMarkIndex(int)>($i2);

        return;
    }

    public int markIndex()
    {
        int $i0;
        org.eclipse.jetty.io.AbstractBuffer r0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        $i0 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _mark>;

        return $i0;
    }

    public byte peek()
    {
        int $i0;
        byte $b1;
        org.eclipse.jetty.io.AbstractBuffer r0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        $i0 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _get>;

        $b1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: byte peek(int)>($i0);

        return $b1;
    }

    public org.eclipse.jetty.io.Buffer peek(int, int)
    {
        org.eclipse.jetty.io.View $r1, $r2, $r4, $r5, $r6, $r7, $r8, $r10;
        byte $b4;
        int i0, i1, $i2, $i3, $i6, $i8;
        org.eclipse.jetty.io.Buffer $r3;
        boolean $z0;
        org.eclipse.jetty.io.AbstractBuffer r0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.eclipse.jetty.io.AbstractBuffer: org.eclipse.jetty.io.View _view>;

        if $r1 != null goto label3;

        $r10 = new org.eclipse.jetty.io.View;

        $i3 = i0 + i1;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: boolean isReadOnly()>();

        if $z0 == 0 goto label1;

        $b4 = 1;

        goto label2;

     label1:
        $b4 = 2;

     label2:
        $i6 = (int) -1;

        specialinvoke $r10.<org.eclipse.jetty.io.View: void <init>(org.eclipse.jetty.io.Buffer,int,int,int,int)>(r0, $i6, i0, $i3, $b4);

        r0.<org.eclipse.jetty.io.AbstractBuffer: org.eclipse.jetty.io.View _view> = $r10;

        goto label4;

     label3:
        $r2 = r0.<org.eclipse.jetty.io.AbstractBuffer: org.eclipse.jetty.io.View _view>;

        $r3 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: org.eclipse.jetty.io.Buffer buffer()>();

        virtualinvoke $r2.<org.eclipse.jetty.io.View: void update(org.eclipse.jetty.io.Buffer)>($r3);

        $r4 = r0.<org.eclipse.jetty.io.AbstractBuffer: org.eclipse.jetty.io.View _view>;

        $i8 = (int) -1;

        virtualinvoke $r4.<org.eclipse.jetty.io.View: void setMarkIndex(int)>($i8);

        $r5 = r0.<org.eclipse.jetty.io.AbstractBuffer: org.eclipse.jetty.io.View _view>;

        virtualinvoke $r5.<org.eclipse.jetty.io.View: void setGetIndex(int)>(0);

        $r6 = r0.<org.eclipse.jetty.io.AbstractBuffer: org.eclipse.jetty.io.View _view>;

        $i2 = i0 + i1;

        virtualinvoke $r6.<org.eclipse.jetty.io.View: void setPutIndex(int)>($i2);

        $r7 = r0.<org.eclipse.jetty.io.AbstractBuffer: org.eclipse.jetty.io.View _view>;

        virtualinvoke $r7.<org.eclipse.jetty.io.View: void setGetIndex(int)>(i0);

     label4:
        $r8 = r0.<org.eclipse.jetty.io.AbstractBuffer: org.eclipse.jetty.io.View _view>;

        return $r8;
    }

    public int poke(int, org.eclipse.jetty.io.Buffer)
    {
        byte[] $r2, $r3;
        byte $b5, $b8, $b11;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i9, $i10, $i12, $i13, i14, i15, i16, i17, i18, i19, i20, i21;
        org.eclipse.jetty.io.Buffer r1;
        org.eclipse.jetty.io.AbstractBuffer r0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        i14 := @parameter0: int;

        r1 := @parameter1: org.eclipse.jetty.io.Buffer;

        r0.<org.eclipse.jetty.io.AbstractBuffer: int _hash> = 0;

        $i0 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: int length()>();

        i15 = $i0;

        $i1 = i14 + $i0;

        $i2 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int capacity()>();

        if $i1 <= $i2 goto label01;

        $i13 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int capacity()>();

        i15 = $i13 - i14;

     label01:
        $r2 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: byte[] array()>();

        $r3 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: byte[] array()>();

        if $r2 == null goto label02;

        if $r3 == null goto label02;

        $i12 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: int getIndex()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i12, $r3, i14, i15);

        goto label10;

     label02:
        if $r2 == null goto label05;

        i16 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: int getIndex()>();

        i17 = 0;

     label03:
        if i17 >= i15 goto label04;

        $i9 = i14;

        i14 = i14 + 1;

        $i10 = i16;

        i16 = i16 + 1;

        $b11 = $r2[$i10];

        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void poke(int,byte)>($i9, $b11);

        i17 = i17 + 1;

        goto label03;

     label04:
        goto label10;

     label05:
        if $r3 == null goto label08;

        i18 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: int getIndex()>();

        i19 = 0;

     label06:
        if i19 >= i15 goto label07;

        $i6 = i14;

        i14 = i14 + 1;

        $i7 = i18;

        i18 = i18 + 1;

        $b8 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: byte peek(int)>($i7);

        $r3[$i6] = $b8;

        i19 = i19 + 1;

        goto label06;

     label07:
        goto label10;

     label08:
        i20 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: int getIndex()>();

        i21 = 0;

     label09:
        if i21 >= i15 goto label10;

        $i3 = i14;

        i14 = i14 + 1;

        $i4 = i20;

        i20 = i20 + 1;

        $b5 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: byte peek(int)>($i4);

        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void poke(int,byte)>($i3, $b5);

        i21 = i21 + 1;

        goto label09;

     label10:
        return i15;
    }

    public int poke(int, byte[], int, int)
    {
        byte[] $r1, r2;
        org.eclipse.jetty.io.AbstractBuffer r0;
        byte $b5;
        int $i0, $i1, i2, $i3, $i4, $i6, i7, i8, i9, i10;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        i7 := @parameter0: int;

        r2 := @parameter1: byte[];

        i2 := @parameter2: int;

        i8 := @parameter3: int;

        r0.<org.eclipse.jetty.io.AbstractBuffer: int _hash> = 0;

        $i0 = i7 + i8;

        $i1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int capacity()>();

        if $i0 <= $i1 goto label1;

        $i6 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int capacity()>();

        i8 = $i6 - i7;

     label1:
        $r1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: byte[] array()>();

        if $r1 == null goto label2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i2, $r1, i7, i8);

        goto label4;

     label2:
        i9 = i2;

        i10 = 0;

     label3:
        if i10 >= i8 goto label4;

        $i3 = i7;

        i7 = i7 + 1;

        $i4 = i9;

        i9 = i9 + 1;

        $b5 = r2[$i4];

        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void poke(int,byte)>($i3, $b5);

        i10 = i10 + 1;

        goto label3;

     label4:
        return i8;
    }

    public int put(org.eclipse.jetty.io.Buffer)
    {
        org.eclipse.jetty.io.AbstractBuffer r0;
        int $i0, $i1, $i2;
        org.eclipse.jetty.io.Buffer r1;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        r1 := @parameter0: org.eclipse.jetty.io.Buffer;

        $i0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int putIndex()>();

        $i1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int poke(int,org.eclipse.jetty.io.Buffer)>($i0, r1);

        $i2 = $i0 + $i1;

        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void setPutIndex(int)>($i2);

        return $i1;
    }

    public void put(byte)
    {
        byte b1;
        org.eclipse.jetty.io.AbstractBuffer r0;
        int $i0, $i2;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        b1 := @parameter0: byte;

        $i0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int putIndex()>();

        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void poke(int,byte)>($i0, b1);

        $i2 = $i0 + 1;

        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void setPutIndex(int)>($i2);

        return;
    }

    public int put(byte[], int, int)
    {
        byte[] r1;
        org.eclipse.jetty.io.AbstractBuffer r0;
        int $i0, i1, i2, $i3, $i4;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        r1 := @parameter0: byte[];

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int putIndex()>();

        $i3 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int poke(int,byte[],int,int)>($i0, r1, i1, i2);

        $i4 = $i0 + $i3;

        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void setPutIndex(int)>($i4);

        return $i3;
    }

    public int put(byte[])
    {
        byte[] r1;
        org.eclipse.jetty.io.AbstractBuffer r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        r1 := @parameter0: byte[];

        $i0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int putIndex()>();

        $i1 = lengthof r1;

        $i2 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int poke(int,byte[],int,int)>($i0, r1, 0, $i1);

        $i3 = $i0 + $i2;

        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void setPutIndex(int)>($i3);

        return $i2;
    }

    public final int putIndex()
    {
        int $i0;
        org.eclipse.jetty.io.AbstractBuffer r0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        $i0 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _put>;

        return $i0;
    }

    public void reset()
    {
        int $i0, $i1;
        org.eclipse.jetty.io.AbstractBuffer r0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        $i0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int markIndex()>();

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int markIndex()>();

        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void setGetIndex(int)>($i1);

     label1:
        return;
    }

    public void rewind()
    {
        int $i1;
        org.eclipse.jetty.io.AbstractBuffer r0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void setGetIndex(int)>(0);

        $i1 = (int) -1;

        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void setMarkIndex(int)>($i1);

        return;
    }

    public void setGetIndex(int)
    {
        int i0;
        org.eclipse.jetty.io.AbstractBuffer r0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        i0 := @parameter0: int;

        r0.<org.eclipse.jetty.io.AbstractBuffer: int _get> = i0;

        r0.<org.eclipse.jetty.io.AbstractBuffer: int _hash> = 0;

        return;
    }

    public void setMarkIndex(int)
    {
        int i0;
        org.eclipse.jetty.io.AbstractBuffer r0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        i0 := @parameter0: int;

        r0.<org.eclipse.jetty.io.AbstractBuffer: int _mark> = i0;

        return;
    }

    public void setPutIndex(int)
    {
        int i0;
        org.eclipse.jetty.io.AbstractBuffer r0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        i0 := @parameter0: int;

        r0.<org.eclipse.jetty.io.AbstractBuffer: int _put> = i0;

        r0.<org.eclipse.jetty.io.AbstractBuffer: int _hash> = 0;

        return;
    }

    public int skip(int)
    {
        org.eclipse.jetty.io.AbstractBuffer r0;
        int $i0, $i1, $i2, i3;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        i3 := @parameter0: int;

        $i0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int length()>();

        if $i0 >= i3 goto label1;

        i3 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int length()>();

     label1:
        $i1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int getIndex()>();

        $i2 = $i1 + i3;

        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void setGetIndex(int)>($i2);

        return i3;
    }

    public org.eclipse.jetty.io.Buffer slice()
    {
        org.eclipse.jetty.io.AbstractBuffer r0;
        int $i0, $i1;
        org.eclipse.jetty.io.Buffer $r1;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        $i0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int getIndex()>();

        $i1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int length()>();

        $r1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: org.eclipse.jetty.io.Buffer peek(int,int)>($i0, $i1);

        return $r1;
    }

    public org.eclipse.jetty.io.Buffer sliceFromMark()
    {
        org.eclipse.jetty.io.AbstractBuffer r0;
        int $i0, $i1, $i2, $i3;
        org.eclipse.jetty.io.Buffer $r1;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        $i0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int getIndex()>();

        $i1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int markIndex()>();

        $i2 = $i0 - $i1;

        $i3 = $i2 - 1;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: org.eclipse.jetty.io.Buffer sliceFromMark(int)>($i3);

        return $r1;
    }

    public org.eclipse.jetty.io.Buffer sliceFromMark(int)
    {
        org.eclipse.jetty.io.AbstractBuffer r0;
        int $i0, $i1, i2, $i4;
        org.eclipse.jetty.io.Buffer $r1;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        i2 := @parameter0: int;

        $i0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int markIndex()>();

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $i1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int markIndex()>();

        $r1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: org.eclipse.jetty.io.Buffer peek(int,int)>($i1, i2);

        $i4 = (int) -1;

        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void setMarkIndex(int)>($i4);

        return $r1;
    }

    public int space()
    {
        org.eclipse.jetty.io.AbstractBuffer r0;
        int $i0, $i1, $i2;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        $i0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int capacity()>();

        $i1 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _put>;

        $i2 = $i0 - $i1;

        return $i2;
    }

    public java.lang.String toDetailString()
    {
        byte $b7, $b13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, i14, i15, i16, $i17;
        java.lang.String $r3;
        org.eclipse.jetty.io.Buffer $r2;
        org.eclipse.jetty.io.AbstractBuffer r1;
        java.lang.StringBuilder $r0;

        r1 := @this: org.eclipse.jetty.io.AbstractBuffer;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $i0 = specialinvoke r1.<java.lang.Object: int hashCode()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r2 = virtualinvoke r1.<org.eclipse.jetty.io.AbstractBuffer: org.eclipse.jetty.io.Buffer buffer()>();

        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",m=");

        $i2 = virtualinvoke r1.<org.eclipse.jetty.io.AbstractBuffer: int markIndex()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",g=");

        $i3 = virtualinvoke r1.<org.eclipse.jetty.io.AbstractBuffer: int getIndex()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",p=");

        $i4 = virtualinvoke r1.<org.eclipse.jetty.io.AbstractBuffer: int putIndex()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",c=");

        $i5 = virtualinvoke r1.<org.eclipse.jetty.io.AbstractBuffer: int capacity()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]={");

        $i6 = virtualinvoke r1.<org.eclipse.jetty.io.AbstractBuffer: int markIndex()>();

        if $i6 < 0 goto label3;

        i14 = virtualinvoke r1.<org.eclipse.jetty.io.AbstractBuffer: int markIndex()>();

     label1:
        $i12 = virtualinvoke r1.<org.eclipse.jetty.io.AbstractBuffer: int getIndex()>();

        if i14 >= $i12 goto label2;

        $b13 = virtualinvoke r1.<org.eclipse.jetty.io.AbstractBuffer: byte peek(int)>(i14);

        staticinvoke <org.eclipse.jetty.util.TypeUtil: void toHex(byte,java.lang.Appendable)>($b13, $r0);

        i14 = i14 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}{");

     label3:
        i15 = 0;

        i16 = virtualinvoke r1.<org.eclipse.jetty.io.AbstractBuffer: int getIndex()>();

     label4:
        $i17 = virtualinvoke r1.<org.eclipse.jetty.io.AbstractBuffer: int putIndex()>();

        if i16 >= $i17 goto label6;

        $b7 = virtualinvoke r1.<org.eclipse.jetty.io.AbstractBuffer: byte peek(int)>(i16);

        staticinvoke <org.eclipse.jetty.util.TypeUtil: void toHex(byte,java.lang.Appendable)>($b7, $r0);

        $i8 = i15;

        i15 = i15 + 1;

        if $i8 != 50 goto label5;

        $i9 = virtualinvoke r1.<org.eclipse.jetty.io.AbstractBuffer: int putIndex()>();

        $i10 = $i9 - i16;

        if $i10 <= 20 goto label5;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ... ");

        $i11 = virtualinvoke r1.<org.eclipse.jetty.io.AbstractBuffer: int putIndex()>();

        i16 = $i11 - 20;

     label5:
        i16 = i16 + 1;

        goto label4;

     label6:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.String toString()
    {
        byte[] $r2, $r6;
        org.eclipse.jetty.io.AbstractBuffer r0;
        int $i0, $i1;
        java.lang.String $r1, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: boolean isImmutable()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<org.eclipse.jetty.io.AbstractBuffer: java.lang.String _string>;

        if $r3 != null goto label1;

        $r5 = new java.lang.String;

        $r6 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: byte[] asArray()>();

        $i1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int length()>();

        specialinvoke $r5.<java.lang.String: void <init>(byte[],int,int)>($r6, 0, $i1);

        r0.<org.eclipse.jetty.io.AbstractBuffer: java.lang.String _string> = $r5;

     label1:
        $r4 = r0.<org.eclipse.jetty.io.AbstractBuffer: java.lang.String _string>;

        return $r4;

     label2:
        $r1 = new java.lang.String;

        $r2 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: byte[] asArray()>();

        $i0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int length()>();

        specialinvoke $r1.<java.lang.String: void <init>(byte[],int,int)>($r2, 0, $i0);

        return $r1;
    }

    public java.lang.String toString(java.lang.String)
    {
        byte[] $r1, $r3, $r9;
        org.eclipse.jetty.io.AbstractBuffer r0;
        java.lang.Exception $r6;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2, r4, $r5, $r8;
        org.eclipse.jetty.util.log.Logger $r7;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        r4 := @parameter0: java.lang.String;

     label1:
        $r1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: byte[] array()>();

        if $r1 == null goto label3;

        $r5 = new java.lang.String;

        $i1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int getIndex()>();

        $i2 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int length()>();

        specialinvoke $r5.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r1, $i1, $i2, r4);

     label2:
        return $r5;

     label3:
        $r2 = new java.lang.String;

        $r3 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: byte[] asArray()>();

        $i0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int length()>();

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r3, 0, $i0, r4);

     label4:
        return $r2;

     label5:
        $r6 := @caughtexception;

        $r7 = <org.eclipse.jetty.io.AbstractBuffer: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r7.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r6);

        $r8 = new java.lang.String;

        $r9 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: byte[] asArray()>();

        $i3 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int length()>();

        specialinvoke $r8.<java.lang.String: void <init>(byte[],int,int)>($r9, 0, $i3);

        return $r8;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public java.lang.String toString(java.nio.charset.Charset)
    {
        byte[] $r1, $r3, $r9;
        org.eclipse.jetty.io.AbstractBuffer r0;
        java.lang.Exception $r6;
        java.nio.charset.Charset r4;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2, $r5, $r8;
        org.eclipse.jetty.util.log.Logger $r7;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        r4 := @parameter0: java.nio.charset.Charset;

     label1:
        $r1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: byte[] array()>();

        if $r1 == null goto label3;

        $r5 = new java.lang.String;

        $i1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int getIndex()>();

        $i2 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int length()>();

        specialinvoke $r5.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r1, $i1, $i2, r4);

     label2:
        return $r5;

     label3:
        $r2 = new java.lang.String;

        $r3 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: byte[] asArray()>();

        $i0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int length()>();

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r3, 0, $i0, r4);

     label4:
        return $r2;

     label5:
        $r6 := @caughtexception;

        $r7 = <org.eclipse.jetty.io.AbstractBuffer: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r7.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r6);

        $r8 = new java.lang.String;

        $r9 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: byte[] asArray()>();

        $i3 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int length()>();

        specialinvoke $r8.<java.lang.String: void <init>(byte[],int,int)>($r9, 0, $i3);

        return $r8;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public java.lang.String toDebugString()
    {
        org.eclipse.jetty.io.AbstractBuffer r1;
        int $i0;
        java.lang.StringBuilder $r0, $r3, $r4, $r5;
        java.lang.Class $r2;
        java.lang.String $r6;

        r1 := @this: org.eclipse.jetty.io.AbstractBuffer;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $i0 = specialinvoke r1.<java.lang.Object: int hashCode()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r2;
        byte[] $r1, $r3;
        org.eclipse.jetty.io.AbstractBuffer r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, i8, $i9;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        r2 := @parameter0: java.io.OutputStream;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: byte[] array()>();

        if $r1 == null goto label1;

        $i4 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int getIndex()>();

        $i5 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int length()>();

        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, $i4, $i5);

        goto label7;

     label1:
        $i0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int length()>();

        i6 = $i0;

        if $i0 <= 1024 goto label2;

        $i7 = 1024;

        goto label3;

     label2:
        $i7 = $i0;

     label3:
        $r3 = newarray (byte)[$i7];

        i8 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _get>;

     label4:
        if i6 <= 0 goto label7;

        $i3 = i8;

        $i1 = lengthof $r3;

        if i6 <= $i1 goto label5;

        $i9 = lengthof $r3;

        goto label6;

     label5:
        $i9 = i6;

     label6:
        $i2 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int peek(int,byte[],int,int)>($i3, $r3, 0, $i9);

        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i2);

        i8 = i8 + $i2;

        i6 = i6 - $i2;

        goto label4;

     label7:
        virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: void clear()>();

        return;
    }

    public int readFrom(java.io.InputStream, int) throws java.io.IOException
    {
        byte[] $r1, $r4;
        java.lang.AssertionError $r3;
        byte $b11;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10;
        boolean $z0;
        org.eclipse.jetty.io.AbstractBuffer r0;
        java.io.InputStream r2;

        r0 := @this: org.eclipse.jetty.io.AbstractBuffer;

        r2 := @parameter0: java.io.InputStream;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: byte[] array()>();

        $i0 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int space()>();

        i9 = $i0;

        if $i0 <= i1 goto label01;

        i9 = i1;

     label01:
        if $r1 == null goto label03;

        $i5 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _put>;

        $i6 = virtualinvoke r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i5, i9);

        if $i6 <= 0 goto label02;

        $i7 = r0.<org.eclipse.jetty.io.AbstractBuffer: int _put>;

        $i8 = $i7 + $i6;

        r0.<org.eclipse.jetty.io.AbstractBuffer: int _put> = $i8;

     label02:
        return $i6;

     label03:
        if i9 <= 1024 goto label04;

        $i10 = 1024;

        goto label05;

     label04:
        $i10 = i9;

     label05:
        $r4 = newarray (byte)[$i10];

     label06:
        if i9 <= 0 goto label11;

        $i2 = lengthof $r4;

        $i3 = virtualinvoke r2.<java.io.InputStream: int read(byte[],int,int)>($r4, 0, $i2);

        if $i3 >= 0 goto label09;

        if 0 <= 0 goto label07;

        $b11 = 0;

        goto label08;

     label07:
        $b11 = -1;

     label08:
        return $b11;

     label09:
        $i4 = virtualinvoke r0.<org.eclipse.jetty.io.AbstractBuffer: int put(byte[],int,int)>($r4, 0, $i3);

        $z0 = <org.eclipse.jetty.io.AbstractBuffer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label10;

        if $i3 == $i4 goto label10;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label10:
        i9 = i9 - $i3;

        goto label06;

     label11:
        return 0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        org.eclipse.jetty.util.log.Logger $r1;
        boolean $z0, $z1, $z2;

        <org.eclipse.jetty.io.AbstractBuffer: java.lang.String __VOLATILE> = "VOLATILE";

        <org.eclipse.jetty.io.AbstractBuffer: java.lang.String __READWRITE> = "READWRITE";

        <org.eclipse.jetty.io.AbstractBuffer: java.lang.String __READONLY> = "READONLY";

        <org.eclipse.jetty.io.AbstractBuffer: java.lang.String __IMMUTABLE> = "IMMUTABLE";

        $r0 = class "Lorg/eclipse/jetty/io/AbstractBuffer;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        <org.eclipse.jetty.io.AbstractBuffer: boolean $assertionsDisabled> = $z2;

        $r1 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/io/AbstractBuffer;");

        <org.eclipse.jetty.io.AbstractBuffer: org.eclipse.jetty.util.log.Logger LOG> = $r1;

        $z1 = staticinvoke <java.lang.Boolean: boolean getBoolean(java.lang.String)>("org.eclipse.jetty.io.AbstractBuffer.boundsChecking");

        <org.eclipse.jetty.io.AbstractBuffer: boolean __boundsChecking> = $z1;

        return;
    }
}
