public class org.apache.fontbox.ttf.HeaderTable extends org.apache.fontbox.ttf.TTFTable
{
    public static final java.lang.String TAG;
    private float version;
    private float fontRevision;
    private long checkSumAdjustment;
    private long magicNumber;
    private int flags;
    private int unitsPerEm;
    private java.util.Calendar created;
    private java.util.Calendar modified;
    private short xMin;
    private short yMin;
    private short xMax;
    private short yMax;
    private int macStyle;
    private int lowestRecPPEM;
    private short fontDirectionHint;
    private short indexToLocFormat;
    private short glyphDataFormat;

    public void <init>()
    {
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        specialinvoke r0.<org.apache.fontbox.ttf.TTFTable: void <init>()>();

        return;
    }

    public void initData(org.apache.fontbox.ttf.TrueTypeFont, org.apache.fontbox.ttf.TTFDataStream) throws java.io.IOException
    {
        long $l0, $l1;
        short $s4, $s5, $s6, $s7, $s10, $s11, $s12;
        java.util.Calendar $r2, $r3;
        org.apache.fontbox.ttf.HeaderTable r0;
        int $i2, $i3, $i8, $i9;
        org.apache.fontbox.ttf.TTFDataStream r1;
        org.apache.fontbox.ttf.TrueTypeFont r4;
        float $f0, $f1;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        r4 := @parameter0: org.apache.fontbox.ttf.TrueTypeFont;

        r1 := @parameter1: org.apache.fontbox.ttf.TTFDataStream;

        $f0 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: float read32Fixed()>();

        r0.<org.apache.fontbox.ttf.HeaderTable: float version> = $f0;

        $f1 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: float read32Fixed()>();

        r0.<org.apache.fontbox.ttf.HeaderTable: float fontRevision> = $f1;

        $l0 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: long readUnsignedInt()>();

        r0.<org.apache.fontbox.ttf.HeaderTable: long checkSumAdjustment> = $l0;

        $l1 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: long readUnsignedInt()>();

        r0.<org.apache.fontbox.ttf.HeaderTable: long magicNumber> = $l1;

        $i2 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: int readUnsignedShort()>();

        r0.<org.apache.fontbox.ttf.HeaderTable: int flags> = $i2;

        $i3 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: int readUnsignedShort()>();

        r0.<org.apache.fontbox.ttf.HeaderTable: int unitsPerEm> = $i3;

        $r2 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: java.util.Calendar readInternationalDate()>();

        r0.<org.apache.fontbox.ttf.HeaderTable: java.util.Calendar created> = $r2;

        $r3 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: java.util.Calendar readInternationalDate()>();

        r0.<org.apache.fontbox.ttf.HeaderTable: java.util.Calendar modified> = $r3;

        $s4 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: short readSignedShort()>();

        r0.<org.apache.fontbox.ttf.HeaderTable: short xMin> = $s4;

        $s5 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: short readSignedShort()>();

        r0.<org.apache.fontbox.ttf.HeaderTable: short yMin> = $s5;

        $s6 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: short readSignedShort()>();

        r0.<org.apache.fontbox.ttf.HeaderTable: short xMax> = $s6;

        $s7 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: short readSignedShort()>();

        r0.<org.apache.fontbox.ttf.HeaderTable: short yMax> = $s7;

        $i8 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: int readUnsignedShort()>();

        r0.<org.apache.fontbox.ttf.HeaderTable: int macStyle> = $i8;

        $i9 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: int readUnsignedShort()>();

        r0.<org.apache.fontbox.ttf.HeaderTable: int lowestRecPPEM> = $i9;

        $s10 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: short readSignedShort()>();

        r0.<org.apache.fontbox.ttf.HeaderTable: short fontDirectionHint> = $s10;

        $s11 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: short readSignedShort()>();

        r0.<org.apache.fontbox.ttf.HeaderTable: short indexToLocFormat> = $s11;

        $s12 = virtualinvoke r1.<org.apache.fontbox.ttf.TTFDataStream: short readSignedShort()>();

        r0.<org.apache.fontbox.ttf.HeaderTable: short glyphDataFormat> = $s12;

        r0.<org.apache.fontbox.ttf.HeaderTable: boolean initialized> = 1;

        return;
    }

    public long getCheckSumAdjustment()
    {
        long $l0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        $l0 = r0.<org.apache.fontbox.ttf.HeaderTable: long checkSumAdjustment>;

        return $l0;
    }

    public void setCheckSumAdjustment(long)
    {
        long l0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        l0 := @parameter0: long;

        r0.<org.apache.fontbox.ttf.HeaderTable: long checkSumAdjustment> = l0;

        return;
    }

    public java.util.Calendar getCreated()
    {
        java.util.Calendar $r1;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        $r1 = r0.<org.apache.fontbox.ttf.HeaderTable: java.util.Calendar created>;

        return $r1;
    }

    public void setCreated(java.util.Calendar)
    {
        java.util.Calendar r1;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        r1 := @parameter0: java.util.Calendar;

        r0.<org.apache.fontbox.ttf.HeaderTable: java.util.Calendar created> = r1;

        return;
    }

    public int getFlags()
    {
        int $i0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        $i0 = r0.<org.apache.fontbox.ttf.HeaderTable: int flags>;

        return $i0;
    }

    public void setFlags(int)
    {
        int i0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        i0 := @parameter0: int;

        r0.<org.apache.fontbox.ttf.HeaderTable: int flags> = i0;

        return;
    }

    public short getFontDirectionHint()
    {
        short $s0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        $s0 = r0.<org.apache.fontbox.ttf.HeaderTable: short fontDirectionHint>;

        return $s0;
    }

    public void setFontDirectionHint(short)
    {
        short s0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        s0 := @parameter0: short;

        r0.<org.apache.fontbox.ttf.HeaderTable: short fontDirectionHint> = s0;

        return;
    }

    public float getFontRevision()
    {
        float $f0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        $f0 = r0.<org.apache.fontbox.ttf.HeaderTable: float fontRevision>;

        return $f0;
    }

    public void setFontRevision(float)
    {
        float f0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        f0 := @parameter0: float;

        r0.<org.apache.fontbox.ttf.HeaderTable: float fontRevision> = f0;

        return;
    }

    public short getGlyphDataFormat()
    {
        short $s0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        $s0 = r0.<org.apache.fontbox.ttf.HeaderTable: short glyphDataFormat>;

        return $s0;
    }

    public void setGlyphDataFormat(short)
    {
        short s0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        s0 := @parameter0: short;

        r0.<org.apache.fontbox.ttf.HeaderTable: short glyphDataFormat> = s0;

        return;
    }

    public short getIndexToLocFormat()
    {
        short $s0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        $s0 = r0.<org.apache.fontbox.ttf.HeaderTable: short indexToLocFormat>;

        return $s0;
    }

    public void setIndexToLocFormat(short)
    {
        short s0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        s0 := @parameter0: short;

        r0.<org.apache.fontbox.ttf.HeaderTable: short indexToLocFormat> = s0;

        return;
    }

    public int getLowestRecPPEM()
    {
        int $i0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        $i0 = r0.<org.apache.fontbox.ttf.HeaderTable: int lowestRecPPEM>;

        return $i0;
    }

    public void setLowestRecPPEM(int)
    {
        int i0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        i0 := @parameter0: int;

        r0.<org.apache.fontbox.ttf.HeaderTable: int lowestRecPPEM> = i0;

        return;
    }

    public int getMacStyle()
    {
        int $i0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        $i0 = r0.<org.apache.fontbox.ttf.HeaderTable: int macStyle>;

        return $i0;
    }

    public void setMacStyle(int)
    {
        int i0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        i0 := @parameter0: int;

        r0.<org.apache.fontbox.ttf.HeaderTable: int macStyle> = i0;

        return;
    }

    public long getMagicNumber()
    {
        long $l0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        $l0 = r0.<org.apache.fontbox.ttf.HeaderTable: long magicNumber>;

        return $l0;
    }

    public void setMagicNumber(long)
    {
        long l0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        l0 := @parameter0: long;

        r0.<org.apache.fontbox.ttf.HeaderTable: long magicNumber> = l0;

        return;
    }

    public java.util.Calendar getModified()
    {
        java.util.Calendar $r1;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        $r1 = r0.<org.apache.fontbox.ttf.HeaderTable: java.util.Calendar modified>;

        return $r1;
    }

    public void setModified(java.util.Calendar)
    {
        java.util.Calendar r1;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        r1 := @parameter0: java.util.Calendar;

        r0.<org.apache.fontbox.ttf.HeaderTable: java.util.Calendar modified> = r1;

        return;
    }

    public int getUnitsPerEm()
    {
        int $i0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        $i0 = r0.<org.apache.fontbox.ttf.HeaderTable: int unitsPerEm>;

        return $i0;
    }

    public void setUnitsPerEm(int)
    {
        int i0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        i0 := @parameter0: int;

        r0.<org.apache.fontbox.ttf.HeaderTable: int unitsPerEm> = i0;

        return;
    }

    public float getVersion()
    {
        float $f0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        $f0 = r0.<org.apache.fontbox.ttf.HeaderTable: float version>;

        return $f0;
    }

    public void setVersion(float)
    {
        float f0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        f0 := @parameter0: float;

        r0.<org.apache.fontbox.ttf.HeaderTable: float version> = f0;

        return;
    }

    public short getXMax()
    {
        short $s0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        $s0 = r0.<org.apache.fontbox.ttf.HeaderTable: short xMax>;

        return $s0;
    }

    public void setXMax(short)
    {
        short s0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        s0 := @parameter0: short;

        r0.<org.apache.fontbox.ttf.HeaderTable: short xMax> = s0;

        return;
    }

    public short getXMin()
    {
        short $s0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        $s0 = r0.<org.apache.fontbox.ttf.HeaderTable: short xMin>;

        return $s0;
    }

    public void setXMin(short)
    {
        short s0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        s0 := @parameter0: short;

        r0.<org.apache.fontbox.ttf.HeaderTable: short xMin> = s0;

        return;
    }

    public short getYMax()
    {
        short $s0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        $s0 = r0.<org.apache.fontbox.ttf.HeaderTable: short yMax>;

        return $s0;
    }

    public void setYMax(short)
    {
        short s0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        s0 := @parameter0: short;

        r0.<org.apache.fontbox.ttf.HeaderTable: short yMax> = s0;

        return;
    }

    public short getYMin()
    {
        short $s0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        $s0 = r0.<org.apache.fontbox.ttf.HeaderTable: short yMin>;

        return $s0;
    }

    public void setYMin(short)
    {
        short s0;
        org.apache.fontbox.ttf.HeaderTable r0;

        r0 := @this: org.apache.fontbox.ttf.HeaderTable;

        s0 := @parameter0: short;

        r0.<org.apache.fontbox.ttf.HeaderTable: short yMin> = s0;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.fontbox.ttf.HeaderTable: java.lang.String TAG> = "head";

        return;
    }
}
