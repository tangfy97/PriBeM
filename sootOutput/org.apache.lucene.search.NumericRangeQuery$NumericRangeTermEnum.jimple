final class org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum extends org.apache.lucene.search.FilteredTermEnum
{
    private final org.apache.lucene.index.IndexReader reader;
    private final java.util.LinkedList rangeBounds;
    private final org.apache.lucene.index.Term termTemplate;
    private java.lang.String currentUpperBound;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.search.NumericRangeQuery this$0;

    void <init>(org.apache.lucene.search.NumericRangeQuery, org.apache.lucene.index.IndexReader) throws java.io.IOException
    {
        org.apache.lucene.document.NumericField$DataType $r7, $r9, $r10, $r16, $r17, $r22, $r23, $r27, $r28, $r34, $r35, $r40, $r41, $r46, $r47, $r49, $r50;
        org.apache.lucene.index.Term $r53;
        byte $b2, $b3;
        org.apache.lucene.search.NumericRangeQuery r1, $r4;
        long $l4, l5, $l6, $l7, l8, $l9;
        java.lang.AssertionError $r54, $r55, $r57, $r58;
        org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum$2 $r59;
        org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum$1 $r56;
        java.lang.String $r5;
        java.lang.Number $r11, $r12, $r13, $r14, $r15, $r19, $r20, $r21, $r25, $r26, $r29, $r30, $r31, $r32, $r33, $r37, $r38, $r39, $r43, $r44;
        org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum r0;
        int[] $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        float $f0, $f1;
        org.apache.lucene.index.IndexReader r6;
        int $i0, $i1, $i10, $i11, i12, $i13, $i14, i15, $i16, $i17, $i19;
        java.util.LinkedList $r52;
        double $d0, $d1;
        java.lang.IllegalArgumentException $r60;

        r0 := @this: org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum;

        r1 := @parameter0: org.apache.lucene.search.NumericRangeQuery;

        r6 := @parameter1: org.apache.lucene.index.IndexReader;

        r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: org.apache.lucene.search.NumericRangeQuery this$0> = r1;

        specialinvoke r0.<org.apache.lucene.search.FilteredTermEnum: void <init>()>();

        $r52 = new java.util.LinkedList;

        specialinvoke $r52.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: java.util.LinkedList rangeBounds> = $r52;

        $r53 = new org.apache.lucene.index.Term;

        $r4 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: org.apache.lucene.search.NumericRangeQuery this$0>;

        $r5 = $r4.<org.apache.lucene.search.NumericRangeQuery: java.lang.String field>;

        specialinvoke $r53.<org.apache.lucene.index.Term: void <init>(java.lang.String)>($r5);

        r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: org.apache.lucene.index.Term termTemplate> = $r53;

        r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: java.lang.String currentUpperBound> = null;

        r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: org.apache.lucene.index.IndexReader reader> = r6;

        $r8 = <org.apache.lucene.search.NumericRangeQuery$1: int[] $SwitchMap$org$apache$lucene$document$NumericField$DataType>;

        $r7 = r1.<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.document.NumericField$DataType dataType>;

        $i0 = virtualinvoke $r7.<org.apache.lucene.document.NumericField$DataType: int ordinal()>();

        $i1 = $r8[$i0];

        tableswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label01;
            case 3: goto label20;
            case 4: goto label20;
            default: goto label39;
        };

     label01:
        $r28 = r1.<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.document.NumericField$DataType dataType>;

        $r27 = <org.apache.lucene.document.NumericField$DataType: org.apache.lucene.document.NumericField$DataType LONG>;

        if $r28 != $r27 goto label04;

        $r43 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number min>;

        if $r43 != null goto label02;

        $l4 = -9223372036854775808L;

        goto label03;

     label02:
        $r44 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number min>;

        $l4 = virtualinvoke $r44.<java.lang.Number: long longValue()>();

     label03:
        l5 = $l4;

        goto label08;

     label04:
        $z2 = <org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: boolean $assertionsDisabled>;

        if $z2 != 0 goto label05;

        $r41 = r1.<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.document.NumericField$DataType dataType>;

        $r40 = <org.apache.lucene.document.NumericField$DataType: org.apache.lucene.document.NumericField$DataType DOUBLE>;

        if $r41 == $r40 goto label05;

        $r54 = new java.lang.AssertionError;

        specialinvoke $r54.<java.lang.AssertionError: void <init>()>();

        throw $r54;

     label05:
        $r29 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number min>;

        if $r29 != null goto label06;

        $l6 = <org.apache.lucene.search.NumericRangeQuery: long LONG_NEGATIVE_INFINITY>;

        goto label07;

     label06:
        $r30 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number min>;

        $d0 = virtualinvoke $r30.<java.lang.Number: double doubleValue()>();

        $l6 = staticinvoke <org.apache.lucene.util.NumericUtils: long doubleToSortableLong(double)>($d0);

     label07:
        l5 = $l6;

     label08:
        $z4 = r1.<org.apache.lucene.search.NumericRangeQuery: boolean minInclusive>;

        if $z4 != 0 goto label10;

        $r39 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number min>;

        if $r39 == null goto label10;

        $b3 = l5 cmp 9223372036854775807L;

        if $b3 != 0 goto label09;

        goto label40;

     label09:
        l5 = l5 + 1L;

     label10:
        $r46 = r1.<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.document.NumericField$DataType dataType>;

        $r47 = <org.apache.lucene.document.NumericField$DataType: org.apache.lucene.document.NumericField$DataType LONG>;

        if $r46 != $r47 goto label13;

        $r37 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number max>;

        if $r37 != null goto label11;

        $l7 = 9223372036854775807L;

        goto label12;

     label11:
        $r38 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number max>;

        $l7 = virtualinvoke $r38.<java.lang.Number: long longValue()>();

     label12:
        l8 = $l7;

        goto label17;

     label13:
        $z3 = <org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: boolean $assertionsDisabled>;

        if $z3 != 0 goto label14;

        $r35 = r1.<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.document.NumericField$DataType dataType>;

        $r34 = <org.apache.lucene.document.NumericField$DataType: org.apache.lucene.document.NumericField$DataType DOUBLE>;

        if $r35 == $r34 goto label14;

        $r55 = new java.lang.AssertionError;

        specialinvoke $r55.<java.lang.AssertionError: void <init>()>();

        throw $r55;

     label14:
        $r31 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number max>;

        if $r31 != null goto label15;

        $l9 = <org.apache.lucene.search.NumericRangeQuery: long LONG_POSITIVE_INFINITY>;

        goto label16;

     label15:
        $r32 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number max>;

        $d1 = virtualinvoke $r32.<java.lang.Number: double doubleValue()>();

        $l9 = staticinvoke <org.apache.lucene.util.NumericUtils: long doubleToSortableLong(double)>($d1);

     label16:
        l8 = $l9;

     label17:
        $z5 = r1.<org.apache.lucene.search.NumericRangeQuery: boolean maxInclusive>;

        if $z5 != 0 goto label19;

        $r33 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number max>;

        if $r33 == null goto label19;

        $b2 = l8 cmp -9223372036854775808L;

        if $b2 != 0 goto label18;

        goto label40;

     label18:
        l8 = l8 - 1L;

     label19:
        $r56 = new org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum$1;

        specialinvoke $r56.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum$1: void <init>(org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum,org.apache.lucene.search.NumericRangeQuery)>(r0, r1);

        $i10 = r1.<org.apache.lucene.search.NumericRangeQuery: int precisionStep>;

        staticinvoke <org.apache.lucene.util.NumericUtils: void splitLongRange(org.apache.lucene.util.NumericUtils$LongRangeBuilder,int,long,long)>($r56, $i10, l5, l8);

        goto label40;

     label20:
        $r10 = r1.<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.document.NumericField$DataType dataType>;

        $r9 = <org.apache.lucene.document.NumericField$DataType: org.apache.lucene.document.NumericField$DataType INT>;

        if $r10 != $r9 goto label23;

        $r25 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number min>;

        if $r25 != null goto label21;

        $i11 = -2147483648;

        goto label22;

     label21:
        $r26 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number min>;

        $i11 = virtualinvoke $r26.<java.lang.Number: int intValue()>();

     label22:
        i12 = $i11;

        goto label27;

     label23:
        $z0 = <org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label24;

        $r23 = r1.<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.document.NumericField$DataType dataType>;

        $r22 = <org.apache.lucene.document.NumericField$DataType: org.apache.lucene.document.NumericField$DataType FLOAT>;

        if $r23 == $r22 goto label24;

        $r57 = new java.lang.AssertionError;

        specialinvoke $r57.<java.lang.AssertionError: void <init>()>();

        throw $r57;

     label24:
        $r11 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number min>;

        if $r11 != null goto label25;

        $i13 = <org.apache.lucene.search.NumericRangeQuery: int INT_NEGATIVE_INFINITY>;

        goto label26;

     label25:
        $r12 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number min>;

        $f0 = virtualinvoke $r12.<java.lang.Number: float floatValue()>();

        $i13 = staticinvoke <org.apache.lucene.util.NumericUtils: int floatToSortableInt(float)>($f0);

     label26:
        i12 = $i13;

     label27:
        $z6 = r1.<org.apache.lucene.search.NumericRangeQuery: boolean minInclusive>;

        if $z6 != 0 goto label29;

        $r21 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number min>;

        if $r21 == null goto label29;

        if i12 != 2147483647 goto label28;

        goto label40;

     label28:
        i12 = i12 + 1;

     label29:
        $r49 = r1.<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.document.NumericField$DataType dataType>;

        $r50 = <org.apache.lucene.document.NumericField$DataType: org.apache.lucene.document.NumericField$DataType INT>;

        if $r49 != $r50 goto label32;

        $r19 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number max>;

        if $r19 != null goto label30;

        $i14 = 2147483647;

        goto label31;

     label30:
        $r20 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number max>;

        $i14 = virtualinvoke $r20.<java.lang.Number: int intValue()>();

     label31:
        i15 = $i14;

        goto label36;

     label32:
        $z1 = <org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: boolean $assertionsDisabled>;

        if $z1 != 0 goto label33;

        $r17 = r1.<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.document.NumericField$DataType dataType>;

        $r16 = <org.apache.lucene.document.NumericField$DataType: org.apache.lucene.document.NumericField$DataType FLOAT>;

        if $r17 == $r16 goto label33;

        $r58 = new java.lang.AssertionError;

        specialinvoke $r58.<java.lang.AssertionError: void <init>()>();

        throw $r58;

     label33:
        $r13 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number max>;

        if $r13 != null goto label34;

        $i16 = <org.apache.lucene.search.NumericRangeQuery: int INT_POSITIVE_INFINITY>;

        goto label35;

     label34:
        $r14 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number max>;

        $f1 = virtualinvoke $r14.<java.lang.Number: float floatValue()>();

        $i16 = staticinvoke <org.apache.lucene.util.NumericUtils: int floatToSortableInt(float)>($f1);

     label35:
        i15 = $i16;

     label36:
        $z7 = r1.<org.apache.lucene.search.NumericRangeQuery: boolean maxInclusive>;

        if $z7 != 0 goto label38;

        $r15 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number max>;

        if $r15 == null goto label38;

        if i15 != -2147483648 goto label37;

        goto label40;

     label37:
        $i19 = (int) -1;

        i15 = i15 + $i19;

     label38:
        $r59 = new org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum$2;

        specialinvoke $r59.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum$2: void <init>(org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum,org.apache.lucene.search.NumericRangeQuery)>(r0, r1);

        $i17 = r1.<org.apache.lucene.search.NumericRangeQuery: int precisionStep>;

        staticinvoke <org.apache.lucene.util.NumericUtils: void splitIntRange(org.apache.lucene.util.NumericUtils$IntRangeBuilder,int,int,int)>($r59, $i17, i12, i15);

        goto label40;

     label39:
        $r60 = new java.lang.IllegalArgumentException;

        specialinvoke $r60.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid numeric DataType");

        throw $r60;

     label40:
        virtualinvoke r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: boolean next()>();

        return;
    }

    public float difference()
    {
        org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum r0;

        r0 := @this: org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum;

        return 1.0F;
    }

    protected boolean endEnum()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum r1;

        r1 := @this: org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("not implemented");

        throw $r0;
    }

    protected void setEnum(org.apache.lucene.index.TermEnum)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.index.TermEnum r2;
        org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum r1;

        r1 := @this: org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum;

        r2 := @parameter0: org.apache.lucene.index.TermEnum;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("not implemented");

        throw $r0;
    }

    protected boolean termCompare(org.apache.lucene.index.Term)
    {
        org.apache.lucene.search.NumericRangeQuery $r3;
        org.apache.lucene.index.Term r0;
        int $i0;
        java.lang.String $r1, $r4, $r5, $r6;
        org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum r2;
        boolean $z0;

        r2 := @this: org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum;

        r0 := @parameter0: org.apache.lucene.index.Term;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.Term: java.lang.String field()>();

        $r3 = r2.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: org.apache.lucene.search.NumericRangeQuery this$0>;

        $r4 = $r3.<org.apache.lucene.search.NumericRangeQuery: java.lang.String field>;

        if $r1 != $r4 goto label1;

        $r5 = virtualinvoke r0.<org.apache.lucene.index.Term: java.lang.String text()>();

        $r6 = r2.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: java.lang.String currentUpperBound>;

        $i0 = virtualinvoke $r5.<java.lang.String: int compareTo(java.lang.String)>($r6);

        if $i0 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean next() throws java.io.IOException
    {
        org.apache.lucene.index.TermEnum $r5, $r14, $r15, $r19, $r23, $r24, $r27;
        org.apache.lucene.index.Term $r1, $r4, $r11, $r13, $r16, $r17, $r18, $r25, $r26;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.lucene.index.IndexReader $r12;
        java.lang.AssertionError $r3, $r22, $r28;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r10, $r20;
        java.util.LinkedList $r2, $r6, $r8, $r21, $r29;
        java.lang.Object $r7, $r9;
        org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum r0;

        r0 := @this: org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum;

        $r1 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: org.apache.lucene.index.Term currentTerm>;

        if $r1 == null goto label2;

        $z3 = <org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: boolean $assertionsDisabled>;

        if $z3 != 0 goto label1;

        $r27 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: org.apache.lucene.index.TermEnum actualEnum>;

        if $r27 != null goto label1;

        $r28 = new java.lang.AssertionError;

        specialinvoke $r28.<java.lang.AssertionError: void <init>()>();

        throw $r28;

     label1:
        $r23 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: org.apache.lucene.index.TermEnum actualEnum>;

        $z4 = virtualinvoke $r23.<org.apache.lucene.index.TermEnum: boolean next()>();

        if $z4 == 0 goto label2;

        $r24 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: org.apache.lucene.index.TermEnum actualEnum>;

        $r25 = virtualinvoke $r24.<org.apache.lucene.index.TermEnum: org.apache.lucene.index.Term term()>();

        r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: org.apache.lucene.index.Term currentTerm> = $r25;

        $r26 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: org.apache.lucene.index.Term currentTerm>;

        $z5 = virtualinvoke r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: boolean termCompare(org.apache.lucene.index.Term)>($r26);

        if $z5 == 0 goto label2;

        return 1;

     label2:
        r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: org.apache.lucene.index.Term currentTerm> = null;

     label3:
        $r29 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: java.util.LinkedList rangeBounds>;

        $i3 = virtualinvoke $r29.<java.util.LinkedList: int size()>();

        if $i3 < 2 goto label7;

        $z1 = <org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: boolean $assertionsDisabled>;

        if $z1 != 0 goto label4;

        $r21 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: java.util.LinkedList rangeBounds>;

        $i1 = virtualinvoke $r21.<java.util.LinkedList: int size()>();

        $i2 = $i1 % 2;

        if $i2 == 0 goto label4;

        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();

        throw $r22;

     label4:
        $r5 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: org.apache.lucene.index.TermEnum actualEnum>;

        if $r5 == null goto label5;

        $r19 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: org.apache.lucene.index.TermEnum actualEnum>;

        virtualinvoke $r19.<org.apache.lucene.index.TermEnum: void close()>();

        r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: org.apache.lucene.index.TermEnum actualEnum> = null;

     label5:
        $r6 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: java.util.LinkedList rangeBounds>;

        $r7 = virtualinvoke $r6.<java.util.LinkedList: java.lang.Object removeFirst()>();

        $r20 = (java.lang.String) $r7;

        $r8 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: java.util.LinkedList rangeBounds>;

        $r9 = virtualinvoke $r8.<java.util.LinkedList: java.lang.Object removeFirst()>();

        $r10 = (java.lang.String) $r9;

        r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: java.lang.String currentUpperBound> = $r10;

        $r12 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: org.apache.lucene.index.IndexReader reader>;

        $r11 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: org.apache.lucene.index.Term termTemplate>;

        $r13 = virtualinvoke $r11.<org.apache.lucene.index.Term: org.apache.lucene.index.Term createTerm(java.lang.String)>($r20);

        $r14 = virtualinvoke $r12.<org.apache.lucene.index.IndexReader: org.apache.lucene.index.TermEnum terms(org.apache.lucene.index.Term)>($r13);

        r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: org.apache.lucene.index.TermEnum actualEnum> = $r14;

        $r15 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: org.apache.lucene.index.TermEnum actualEnum>;

        $r16 = virtualinvoke $r15.<org.apache.lucene.index.TermEnum: org.apache.lucene.index.Term term()>();

        r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: org.apache.lucene.index.Term currentTerm> = $r16;

        $r17 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: org.apache.lucene.index.Term currentTerm>;

        if $r17 == null goto label6;

        $r18 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: org.apache.lucene.index.Term currentTerm>;

        $z2 = virtualinvoke r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: boolean termCompare(org.apache.lucene.index.Term)>($r18);

        if $z2 == 0 goto label6;

        return 1;

     label6:
        r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: org.apache.lucene.index.Term currentTerm> = null;

        goto label3;

     label7:
        $z0 = <org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label9;

        $r2 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: java.util.LinkedList rangeBounds>;

        $i0 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i0 != 0 goto label8;

        $r4 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: org.apache.lucene.index.Term currentTerm>;

        if $r4 == null goto label9;

     label8:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label9:
        return 0;
    }

    public void close() throws java.io.IOException
    {
        java.util.LinkedList $r1;
        org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum r0;

        r0 := @this: org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum;

        $r1 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: java.util.LinkedList rangeBounds>;

        virtualinvoke $r1.<java.util.LinkedList: void clear()>();

        r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: java.lang.String currentUpperBound> = null;

        specialinvoke r0.<org.apache.lucene.search.FilteredTermEnum: void close()>();

        return;
    }

    static java.util.LinkedList access$000(org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum)
    {
        java.util.LinkedList $r1;
        org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum r0;

        r0 := @parameter0: org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum;

        $r1 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: java.util.LinkedList rangeBounds>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/search/NumericRangeQuery;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.search.NumericRangeQuery$NumericRangeTermEnum: boolean $assertionsDisabled> = $z1;

        return;
    }
}
