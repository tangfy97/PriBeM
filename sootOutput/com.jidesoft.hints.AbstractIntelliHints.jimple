public abstract class com.jidesoft.hints.AbstractIntelliHints extends java.lang.Object implements com.jidesoft.hints.IntelliHints
{
    private com.jidesoft.popup.JidePopup _popup;
    private javax.swing.text.JTextComponent _textComponent;
    private javax.swing.JComponent _hintsComponent;
    private boolean _followCaret;
    private boolean _keyTyped;
    private boolean _autoPopup;
    private int _showHintsDelay;
    private java.util.List _showHintsKeyStrokes;
    private com.jidesoft.swing.DelegateAction _showAction;
    private com.jidesoft.swing.DelegateAction acceptAction;
    private com.jidesoft.swing.DelegateAction hideAction;
    private javax.swing.event.DocumentListener documentListener;

    public void <init>(javax.swing.text.JTextComponent)
    {
        javax.swing.event.DocumentListener $r9;
        javax.swing.KeyStroke[] $r16;
        int i0, i1;
        javax.swing.KeyStroke $r15, r17;
        com.jidesoft.hints.AbstractIntelliHints$7 $r2;
        com.jidesoft.hints.AbstractIntelliHints$6 $r1;
        com.jidesoft.hints.AbstractIntelliHints$1 $r11;
        com.jidesoft.hints.AbstractIntelliHints$3 $r14;
        com.jidesoft.hints.AbstractIntelliHints$2 $r13;
        com.jidesoft.popup.JidePopup $r6;
        com.jidesoft.hints.AbstractIntelliHints$8 $r3;
        javax.swing.text.JTextComponent r4, $r5, $r7, $r10, $r12, $r18;
        javax.swing.text.Document $r8;
        com.jidesoft.hints.AbstractIntelliHints$LazyDelegateAction $r19;
        com.jidesoft.hints.AbstractIntelliHints r0;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints;

        r4 := @parameter0: javax.swing.text.JTextComponent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jidesoft.hints.AbstractIntelliHints: boolean _followCaret> = 0;

        r0.<com.jidesoft.hints.AbstractIntelliHints: boolean _keyTyped> = 0;

        r0.<com.jidesoft.hints.AbstractIntelliHints: boolean _autoPopup> = 1;

        r0.<com.jidesoft.hints.AbstractIntelliHints: int _showHintsDelay> = 200;

        $r1 = new com.jidesoft.hints.AbstractIntelliHints$6;

        specialinvoke $r1.<com.jidesoft.hints.AbstractIntelliHints$6: void <init>(com.jidesoft.hints.AbstractIntelliHints)>(r0);

        r0.<com.jidesoft.hints.AbstractIntelliHints: com.jidesoft.swing.DelegateAction acceptAction> = $r1;

        $r2 = new com.jidesoft.hints.AbstractIntelliHints$7;

        specialinvoke $r2.<com.jidesoft.hints.AbstractIntelliHints$7: void <init>(com.jidesoft.hints.AbstractIntelliHints)>(r0);

        r0.<com.jidesoft.hints.AbstractIntelliHints: com.jidesoft.swing.DelegateAction hideAction> = $r2;

        $r3 = new com.jidesoft.hints.AbstractIntelliHints$8;

        specialinvoke $r3.<com.jidesoft.hints.AbstractIntelliHints$8: void <init>(com.jidesoft.hints.AbstractIntelliHints)>(r0);

        r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.event.DocumentListener documentListener> = $r3;

        r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent _textComponent> = r4;

        $r5 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        virtualinvoke $r5.<javax.swing.text.JTextComponent: void putClientProperty(java.lang.Object,java.lang.Object)>("INTELLI_HINTS", r0);

        $r6 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: com.jidesoft.popup.JidePopup createPopup()>();

        r0.<com.jidesoft.hints.AbstractIntelliHints: com.jidesoft.popup.JidePopup _popup> = $r6;

        $r7 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $r8 = virtualinvoke $r7.<javax.swing.text.JTextComponent: javax.swing.text.Document getDocument()>();

        $r9 = r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.event.DocumentListener documentListener>;

        interfaceinvoke $r8.<javax.swing.text.Document: void addDocumentListener(javax.swing.event.DocumentListener)>($r9);

        $r10 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $r11 = new com.jidesoft.hints.AbstractIntelliHints$1;

        specialinvoke $r11.<com.jidesoft.hints.AbstractIntelliHints$1: void <init>(com.jidesoft.hints.AbstractIntelliHints)>(r0);

        virtualinvoke $r10.<javax.swing.text.JTextComponent: void addKeyListener(java.awt.event.KeyListener)>($r11);

        $r12 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $r13 = new com.jidesoft.hints.AbstractIntelliHints$2;

        specialinvoke $r13.<com.jidesoft.hints.AbstractIntelliHints$2: void <init>(com.jidesoft.hints.AbstractIntelliHints)>(r0);

        virtualinvoke $r12.<javax.swing.text.JTextComponent: void addFocusListener(java.awt.event.FocusListener)>($r13);

        $r14 = new com.jidesoft.hints.AbstractIntelliHints$3;

        specialinvoke $r14.<com.jidesoft.hints.AbstractIntelliHints$3: void <init>(com.jidesoft.hints.AbstractIntelliHints)>(r0);

        r0.<com.jidesoft.hints.AbstractIntelliHints: com.jidesoft.swing.DelegateAction _showAction> = $r14;

        $r15 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.KeyStroke getShowHintsKeyStroke()>();

        virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: void addShowHintsKeyStroke(javax.swing.KeyStroke)>($r15);

        $r16 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.KeyStroke[] getDelegateKeyStrokes()>();

        i0 = lengthof $r16;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r17 = $r16[i1];

        $r18 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $r19 = new com.jidesoft.hints.AbstractIntelliHints$LazyDelegateAction;

        specialinvoke $r19.<com.jidesoft.hints.AbstractIntelliHints$LazyDelegateAction: void <init>(com.jidesoft.hints.AbstractIntelliHints,javax.swing.KeyStroke)>(r0, r17);

        staticinvoke <com.jidesoft.swing.DelegateAction: void replaceAction(javax.swing.JComponent,int,javax.swing.KeyStroke,com.jidesoft.swing.DelegateAction)>($r18, 0, r17, $r19);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    protected com.jidesoft.popup.JidePopup createPopup()
    {
        java.awt.Color $r3;
        com.jidesoft.popup.JidePopupFactory $r0;
        com.jidesoft.hints.AbstractIntelliHints$4 $r5;
        com.jidesoft.popup.JidePopup $r1;
        java.awt.BorderLayout $r2;
        com.jidesoft.hints.AbstractIntelliHints r6;
        javax.swing.border.Border $r4;

        r6 := @this: com.jidesoft.hints.AbstractIntelliHints;

        $r0 = staticinvoke <com.jidesoft.popup.JidePopupFactory: com.jidesoft.popup.JidePopupFactory getSharedInstance()>();

        $r1 = virtualinvoke $r0.<com.jidesoft.popup.JidePopupFactory: com.jidesoft.popup.JidePopup createPopup()>();

        $r2 = new java.awt.BorderLayout;

        specialinvoke $r2.<java.awt.BorderLayout: void <init>()>();

        virtualinvoke $r1.<com.jidesoft.popup.JidePopup: void setLayout(java.awt.LayoutManager)>($r2);

        virtualinvoke $r1.<com.jidesoft.popup.JidePopup: void setResizable(boolean)>(1);

        $r3 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlDkShadow");

        $r4 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color,int)>($r3, 1);

        virtualinvoke $r1.<com.jidesoft.popup.JidePopup: void setPopupBorder(javax.swing.border.Border)>($r4);

        virtualinvoke $r1.<com.jidesoft.popup.JidePopup: void setMovable(boolean)>(0);

        $r5 = new com.jidesoft.hints.AbstractIntelliHints$4;

        specialinvoke $r5.<com.jidesoft.hints.AbstractIntelliHints$4: void <init>(com.jidesoft.hints.AbstractIntelliHints)>(r6);

        virtualinvoke $r1.<com.jidesoft.popup.JidePopup: void addPopupMenuListener(javax.swing.event.PopupMenuListener)>($r5);

        virtualinvoke $r1.<com.jidesoft.popup.JidePopup: void setTransient(boolean)>(1);

        virtualinvoke $r1.<com.jidesoft.popup.JidePopup: void setKeepPreviousSize(boolean)>(0);

        virtualinvoke $r1.<com.jidesoft.popup.JidePopup: void setReturnFocusToOwner(boolean)>(0);

        return $r1;
    }

    public javax.swing.text.JTextComponent getTextComponent()
    {
        com.jidesoft.hints.AbstractIntelliHints r0;
        javax.swing.text.JTextComponent $r1;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints;

        $r1 = r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent _textComponent>;

        return $r1;
    }

    public void acceptHint(java.lang.Object)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9;
        java.lang.String $r5, $r8, $r9, $r13, $r17, r18;
        boolean $z0;
        javax.swing.text.JTextComponent $r2, $r3, $r4, $r6, $r7;
        java.lang.Object r0;
        java.lang.StringBuilder $r11, $r12, $r15, $r16, $r19, $r20;
        com.jidesoft.hints.AbstractIntelliHints r1;

        r1 := @this: com.jidesoft.hints.AbstractIntelliHints;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke r1.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $i0 = virtualinvoke $r2.<javax.swing.text.JTextComponent: int getCaretPosition()>();

        $z0 = virtualinvoke r1.<com.jidesoft.hints.AbstractIntelliHints: boolean isMultilineTextComponent()>();

        if $z0 == 0 goto label4;

        $r7 = virtualinvoke r1.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $r8 = virtualinvoke $r7.<javax.swing.text.JTextComponent: java.lang.String getText()>();

        $i2 = $i0 - 1;

        $i3 = virtualinvoke $r8.<java.lang.String: int lastIndexOf(int,int)>(10, $i2);

        $i7 = (int) -1;

        if $i0 != $i7 goto label2;

        $r17 = "";

        goto label3;

     label2:
        $r17 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int)>($i0);

     label3:
        $i4 = $i3 + 1;

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label5;

     label4:
        r18 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

     label5:
        $r3 = virtualinvoke r1.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        virtualinvoke $r3.<javax.swing.text.JTextComponent: void setText(java.lang.String)>(r18);

        $r4 = virtualinvoke r1.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $r5 = virtualinvoke $r4.<javax.swing.text.JTextComponent: java.lang.String getText()>();

        $i1 = virtualinvoke $r5.<java.lang.String: int indexOf(int,int)>(10, $i0);

        $r6 = virtualinvoke r1.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $i9 = (int) -1;

        if $i1 != $i9 goto label6;

        $i5 = virtualinvoke $r5.<java.lang.String: int length()>();

        goto label7;

     label6:
        $i5 = $i1;

     label7:
        virtualinvoke $r6.<javax.swing.text.JTextComponent: void setCaretPosition(int)>($i5);

        return;
    }

    protected boolean isMultilineTextComponent()
    {
        com.jidesoft.hints.AbstractIntelliHints r0;
        javax.swing.text.JTextComponent $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints;

        $r1 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $z0 = $r1 instanceof javax.swing.JTextArea;

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $z1 = $r2 instanceof javax.swing.JEditorPane;

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    protected void showHintsPopup()
    {
        com.jidesoft.hints.AbstractIntelliHints r0;
        javax.swing.text.JTextComponent $r1, $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints;

        $r1 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $z0 = virtualinvoke $r1.<javax.swing.text.JTextComponent: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $z1 = virtualinvoke $r2.<javax.swing.text.JTextComponent: boolean isEditable()>();

        if $z1 == 0 goto label1;

        $r3 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $z2 = virtualinvoke $r3.<javax.swing.text.JTextComponent: boolean hasFocus()>();

        if $z2 != 0 goto label2;

     label1:
        return;

     label2:
        virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: void showHints()>();

        return;
    }

    public void showHints()
    {
        boolean $z0, $z1;
        javax.swing.KeyStroke $r12, $r15;
        com.jidesoft.hints.AbstractIntelliHints$5 $r22;
        com.jidesoft.popup.JidePopup $r1, $r4, $r6, $r9, $r19;
        javax.swing.text.BadLocationException $r23;
        com.jidesoft.swing.DelegateAction $r13, $r16;
        java.awt.Rectangle $r5;
        java.awt.Insets $r8;
        int $i0, $i1, $i2, $i3, i4, i5, i6;
        javax.swing.JComponent $r2, $r17, $r18, $r20, $r21;
        javax.swing.text.JTextComponent $r7, $r10, $r11, $r14;
        java.lang.Object $r3;
        com.jidesoft.hints.AbstractIntelliHints r0;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints;

        $r1 = r0.<com.jidesoft.hints.AbstractIntelliHints: com.jidesoft.popup.JidePopup _popup>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.JComponent _hintsComponent>;

        if $r2 != null goto label2;

        $r17 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.JComponent createHintsComponent()>();

        r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.JComponent _hintsComponent> = $r17;

        $r19 = r0.<com.jidesoft.hints.AbstractIntelliHints: com.jidesoft.popup.JidePopup _popup>;

        $r18 = r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.JComponent _hintsComponent>;

        virtualinvoke $r19.<com.jidesoft.popup.JidePopup: java.awt.Component add(java.awt.Component)>($r18);

        $r20 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.JComponent getDelegateComponent()>();

        virtualinvoke $r20.<javax.swing.JComponent: void setRequestFocusEnabled(boolean)>(0);

        $r21 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.JComponent getDelegateComponent()>();

        $r22 = new com.jidesoft.hints.AbstractIntelliHints$5;

        specialinvoke $r22.<com.jidesoft.hints.AbstractIntelliHints$5: void <init>(com.jidesoft.hints.AbstractIntelliHints)>(r0);

        virtualinvoke $r21.<javax.swing.JComponent: void addMouseListener(java.awt.event.MouseListener)>($r22);

     label2:
        $r3 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: java.lang.Object getContext()>();

        $z0 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: boolean updateHints(java.lang.Object)>($r3);

        if $z0 == 0 goto label8;

        $z1 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: boolean isHintsPopupVisible()>();

        if $z1 != 0 goto label3;

        $r11 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $r12 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(27, 0);

        $r13 = r0.<com.jidesoft.hints.AbstractIntelliHints: com.jidesoft.swing.DelegateAction hideAction>;

        staticinvoke <com.jidesoft.swing.DelegateAction: void replaceAction(javax.swing.JComponent,int,javax.swing.KeyStroke,com.jidesoft.swing.DelegateAction)>($r11, 0, $r12, $r13);

        $r14 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $r15 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(10, 0);

        $r16 = r0.<com.jidesoft.hints.AbstractIntelliHints: com.jidesoft.swing.DelegateAction acceptAction>;

        staticinvoke <com.jidesoft.swing.DelegateAction: void replaceAction(javax.swing.JComponent,int,javax.swing.KeyStroke,com.jidesoft.swing.DelegateAction,boolean)>($r14, 0, $r15, $r16, 1);

     label3:
        i4 = 0;

        i5 = 0;

        i6 = 0;

     label4:
        $i0 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: int getCaretPositionForPopup()>();

        $r5 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: java.awt.Rectangle getCaretRectangleForPopup(int)>($i0);

        i5 = $r5.<java.awt.Rectangle: int y>;

        i4 = $r5.<java.awt.Rectangle: int x>;

        i6 = $r5.<java.awt.Rectangle: int height>;

     label5:
        goto label7;

     label6:
        $r23 := @caughtexception;

     label7:
        $r6 = r0.<com.jidesoft.hints.AbstractIntelliHints: com.jidesoft.popup.JidePopup _popup>;

        $r7 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        virtualinvoke $r6.<com.jidesoft.popup.JidePopup: void setOwner(java.awt.Component)>($r7);

        $r9 = r0.<com.jidesoft.hints.AbstractIntelliHints: com.jidesoft.popup.JidePopup _popup>;

        $r8 = new java.awt.Insets;

        $r10 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $i1 = virtualinvoke $r10.<javax.swing.text.JTextComponent: int getHeight()>();

        $i2 = $i1 - i6;

        $i3 = $i2 - i5;

        specialinvoke $r8.<java.awt.Insets: void <init>(int,int,int,int)>(i5, i4, $i3, 0);

        virtualinvoke $r9.<com.jidesoft.popup.JidePopup: void showPopup(java.awt.Insets)>($r8);

        goto label9;

     label8:
        $r4 = r0.<com.jidesoft.hints.AbstractIntelliHints: com.jidesoft.popup.JidePopup _popup>;

        virtualinvoke $r4.<com.jidesoft.popup.JidePopup: void hidePopup()>();

     label9:
        return;

        catch javax.swing.text.BadLocationException from label4 to label5 with label6;
    }

    protected java.awt.Rectangle getCaretRectangleForPopup(int) throws javax.swing.text.BadLocationException
    {
        java.awt.Rectangle $r4;
        javax.swing.plaf.TextUI $r2;
        int i0;
        com.jidesoft.hints.AbstractIntelliHints r0;
        javax.swing.text.JTextComponent $r1, $r3;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $r2 = virtualinvoke $r1.<javax.swing.text.JTextComponent: javax.swing.plaf.TextUI getUI()>();

        $r3 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $r4 = virtualinvoke $r2.<javax.swing.plaf.TextUI: java.awt.Rectangle modelToView(javax.swing.text.JTextComponent,int)>($r3, i0);

        return $r4;
    }

    protected int getCaretPositionForPopup()
    {
        java.awt.Rectangle $r8;
        java.awt.Point $r12;
        javax.swing.plaf.TextUI $r6, $r10;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        javax.swing.text.Caret $r2, $r4;
        javax.swing.text.BadLocationException $r13;
        javax.swing.text.JTextComponent $r1, $r3, $r5, $r7, $r9, $r11;
        com.jidesoft.hints.AbstractIntelliHints r0;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints;

        $r1 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $r2 = virtualinvoke $r1.<javax.swing.text.JTextComponent: javax.swing.text.Caret getCaret()>();

        $i0 = interfaceinvoke $r2.<javax.swing.text.Caret: int getDot()>();

        $r3 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $r4 = virtualinvoke $r3.<javax.swing.text.JTextComponent: javax.swing.text.Caret getCaret()>();

        $i1 = interfaceinvoke $r4.<javax.swing.text.Caret: int getMark()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $z0 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: boolean isFollowCaret()>();

        if $z0 == 0 goto label1;

        return $i2;

     label1:
        $r5 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $r6 = virtualinvoke $r5.<javax.swing.text.JTextComponent: javax.swing.plaf.TextUI getUI()>();

        $r7 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $r8 = virtualinvoke $r6.<javax.swing.plaf.TextUI: java.awt.Rectangle modelToView(javax.swing.text.JTextComponent,int)>($r7, $i2);

        $r8.<java.awt.Rectangle: int x> = 0;

        $r9 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $r10 = virtualinvoke $r9.<javax.swing.text.JTextComponent: javax.swing.plaf.TextUI getUI()>();

        $r11 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $r12 = virtualinvoke $r8.<java.awt.Rectangle: java.awt.Point getLocation()>();

        $i3 = virtualinvoke $r10.<javax.swing.plaf.TextUI: int viewToModel(javax.swing.text.JTextComponent,java.awt.Point)>($r11, $r12);

     label2:
        return $i3;

     label3:
        $r13 := @caughtexception;

        return 0;

        catch javax.swing.text.BadLocationException from label1 to label2 with label3;
    }

    protected java.lang.Object getContext()
    {
        javax.swing.text.JTextComponent $r1, $r3, $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2, $r5, $r6;
        com.jidesoft.hints.AbstractIntelliHints r0;
        boolean $z0;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints;

        $z0 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: boolean isMultilineTextComponent()>();

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $i0 = virtualinvoke $r3.<javax.swing.text.JTextComponent: int getCaretPosition()>();

        if $i0 != 0 goto label1;

        return "";

     label1:
        $r4 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $r5 = virtualinvoke $r4.<javax.swing.text.JTextComponent: java.lang.String getText()>();

        $i1 = $i0 - 1;

        $i2 = virtualinvoke $r5.<java.lang.String: int lastIndexOf(int,int)>(10, $i1);

        $i3 = $i2 + 1;

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>($i3, $i0);

        return $r6;

     label2:
        $r1 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $r2 = virtualinvoke $r1.<javax.swing.text.JTextComponent: java.lang.String getText()>();

        return $r2;
    }

    protected void hideHintsPopup()
    {
        com.jidesoft.popup.JidePopup $r1, $r2;
        com.jidesoft.hints.AbstractIntelliHints r0;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints;

        $r1 = r0.<com.jidesoft.hints.AbstractIntelliHints: com.jidesoft.popup.JidePopup _popup>;

        if $r1 == null goto label1;

        $r2 = r0.<com.jidesoft.hints.AbstractIntelliHints: com.jidesoft.popup.JidePopup _popup>;

        virtualinvoke $r2.<com.jidesoft.popup.JidePopup: void hidePopup()>();

     label1:
        specialinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: void setKeyTyped(boolean)>(0);

        return;
    }

    public void setHintsEnabled(boolean)
    {
        javax.swing.event.DocumentListener $r3, $r6;
        javax.swing.text.JTextComponent $r1, $r4;
        javax.swing.text.Document $r2, $r5;
        com.jidesoft.hints.AbstractIntelliHints r0;
        boolean z0;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        $r4 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $r5 = virtualinvoke $r4.<javax.swing.text.JTextComponent: javax.swing.text.Document getDocument()>();

        $r6 = r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.event.DocumentListener documentListener>;

        interfaceinvoke $r5.<javax.swing.text.Document: void removeDocumentListener(javax.swing.event.DocumentListener)>($r6);

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $r2 = virtualinvoke $r1.<javax.swing.text.JTextComponent: javax.swing.text.Document getDocument()>();

        $r3 = r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.event.DocumentListener documentListener>;

        interfaceinvoke $r2.<javax.swing.text.Document: void addDocumentListener(javax.swing.event.DocumentListener)>($r3);

     label2:
        return;
    }

    public boolean isHintsPopupVisible()
    {
        com.jidesoft.popup.JidePopup $r1, $r2;
        com.jidesoft.hints.AbstractIntelliHints r0;
        boolean $z0, $z1;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints;

        $r1 = r0.<com.jidesoft.hints.AbstractIntelliHints: com.jidesoft.popup.JidePopup _popup>;

        if $r1 == null goto label1;

        $r2 = r0.<com.jidesoft.hints.AbstractIntelliHints: com.jidesoft.popup.JidePopup _popup>;

        $z0 = virtualinvoke $r2.<com.jidesoft.popup.JidePopup: boolean isPopupVisible()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isFollowCaret()
    {
        com.jidesoft.hints.AbstractIntelliHints r0;
        boolean $z0;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints;

        $z0 = r0.<com.jidesoft.hints.AbstractIntelliHints: boolean _followCaret>;

        return $z0;
    }

    public void setFollowCaret(boolean)
    {
        com.jidesoft.hints.AbstractIntelliHints r0;
        boolean z0;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.hints.AbstractIntelliHints: boolean _followCaret> = z0;

        return;
    }

    public boolean isAutoPopup()
    {
        com.jidesoft.hints.AbstractIntelliHints r0;
        boolean $z0;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints;

        $z0 = r0.<com.jidesoft.hints.AbstractIntelliHints: boolean _autoPopup>;

        return $z0;
    }

    public void setAutoPopup(boolean)
    {
        com.jidesoft.hints.AbstractIntelliHints r0;
        boolean z0;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.hints.AbstractIntelliHints: boolean _autoPopup> = z0;

        return;
    }

    protected abstract javax.swing.KeyStroke[] getDelegateKeyStrokes();

    protected abstract javax.swing.JComponent getDelegateComponent();

    protected javax.swing.KeyStroke getShowHintsKeyStroke()
    {
        javax.swing.KeyStroke $r1, $r2;
        com.jidesoft.hints.AbstractIntelliHints r0;
        boolean $z0;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints;

        $z0 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: boolean isMultilineTextComponent()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(32, 2);

        return $r2;

     label1:
        $r1 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>(40, 0);

        return $r1;
    }

    private boolean isKeyTyped()
    {
        com.jidesoft.hints.AbstractIntelliHints r0;
        boolean $z0;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints;

        $z0 = r0.<com.jidesoft.hints.AbstractIntelliHints: boolean _keyTyped>;

        return $z0;
    }

    private void setKeyTyped(boolean)
    {
        com.jidesoft.hints.AbstractIntelliHints r0;
        boolean z0;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.hints.AbstractIntelliHints: boolean _keyTyped> = z0;

        return;
    }

    public int getShowHintsDelay()
    {
        int $i0;
        com.jidesoft.hints.AbstractIntelliHints r0;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints;

        $i0 = r0.<com.jidesoft.hints.AbstractIntelliHints: int _showHintsDelay>;

        return $i0;
    }

    public void setShowHintsDelay(int)
    {
        int i0;
        com.jidesoft.hints.AbstractIntelliHints r0;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints;

        i0 := @parameter0: int;

        r0.<com.jidesoft.hints.AbstractIntelliHints: int _showHintsDelay> = i0;

        return;
    }

    public void addShowHintsKeyStroke(javax.swing.KeyStroke)
    {
        javax.swing.KeyStroke r2;
        java.util.List $r1, $r3;
        com.jidesoft.swing.DelegateAction $r5;
        com.jidesoft.hints.AbstractIntelliHints r0;
        javax.swing.text.JTextComponent $r4;
        java.util.ArrayList $r6;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints;

        r2 := @parameter0: javax.swing.KeyStroke;

        $r1 = r0.<com.jidesoft.hints.AbstractIntelliHints: java.util.List _showHintsKeyStrokes>;

        if $r1 != null goto label1;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.jidesoft.hints.AbstractIntelliHints: java.util.List _showHintsKeyStrokes> = $r6;

     label1:
        $r3 = r0.<com.jidesoft.hints.AbstractIntelliHints: java.util.List _showHintsKeyStrokes>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        $r4 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $r5 = r0.<com.jidesoft.hints.AbstractIntelliHints: com.jidesoft.swing.DelegateAction _showAction>;

        staticinvoke <com.jidesoft.swing.DelegateAction: void replaceAction(javax.swing.JComponent,int,javax.swing.KeyStroke,com.jidesoft.swing.DelegateAction)>($r4, 0, r2, $r5);

        return;
    }

    public void removeShowHintsKeyStroke(javax.swing.KeyStroke)
    {
        javax.swing.KeyStroke r2;
        java.util.List $r1, $r3;
        com.jidesoft.swing.DelegateAction $r5;
        com.jidesoft.hints.AbstractIntelliHints r0;
        javax.swing.text.JTextComponent $r4;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints;

        r2 := @parameter0: javax.swing.KeyStroke;

        $r1 = r0.<com.jidesoft.hints.AbstractIntelliHints: java.util.List _showHintsKeyStrokes>;

        if $r1 == null goto label1;

        $r3 = r0.<com.jidesoft.hints.AbstractIntelliHints: java.util.List _showHintsKeyStrokes>;

        interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>(r2);

        $r4 = virtualinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent getTextComponent()>();

        $r5 = r0.<com.jidesoft.hints.AbstractIntelliHints: com.jidesoft.swing.DelegateAction _showAction>;

        staticinvoke <com.jidesoft.swing.DelegateAction: void restoreAction(javax.swing.JComponent,int,javax.swing.KeyStroke,javax.swing.Action)>($r4, 0, r2, $r5);

     label1:
        return;
    }

    public javax.swing.KeyStroke[] getAllShowHintsKeyStrokes()
    {
        java.lang.Object[] $r5;
        javax.swing.KeyStroke[] $r4, $r6, $r7;
        java.util.List $r1, $r2, $r3;
        int $i0;
        com.jidesoft.hints.AbstractIntelliHints r0;

        r0 := @this: com.jidesoft.hints.AbstractIntelliHints;

        $r1 = r0.<com.jidesoft.hints.AbstractIntelliHints: java.util.List _showHintsKeyStrokes>;

        if $r1 != null goto label1;

        $r7 = newarray (javax.swing.KeyStroke)[0];

        return $r7;

     label1:
        $r3 = r0.<com.jidesoft.hints.AbstractIntelliHints: java.util.List _showHintsKeyStrokes>;

        $r2 = r0.<com.jidesoft.hints.AbstractIntelliHints: java.util.List _showHintsKeyStrokes>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r4 = newarray (javax.swing.KeyStroke)[$i0];

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (javax.swing.KeyStroke[]) $r5;

        return $r6;
    }

    public static com.jidesoft.hints.IntelliHints getIntelliHints(javax.swing.JComponent)
    {
        javax.swing.JComponent r0;
        java.lang.Object $r1;
        com.jidesoft.hints.IntelliHints $r2;

        r0 := @parameter0: javax.swing.JComponent;

        $r1 = virtualinvoke r0.<javax.swing.JComponent: java.lang.Object getClientProperty(java.lang.Object)>("INTELLI_HINTS");

        $r2 = (com.jidesoft.hints.IntelliHints) $r1;

        return $r2;
    }

    static void access$000(com.jidesoft.hints.AbstractIntelliHints, boolean)
    {
        com.jidesoft.hints.AbstractIntelliHints r0;
        boolean z0;

        r0 := @parameter0: com.jidesoft.hints.AbstractIntelliHints;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: void setKeyTyped(boolean)>(z0);

        return;
    }

    static com.jidesoft.popup.JidePopup access$100(com.jidesoft.hints.AbstractIntelliHints)
    {
        com.jidesoft.popup.JidePopup $r1;
        com.jidesoft.hints.AbstractIntelliHints r0;

        r0 := @parameter0: com.jidesoft.hints.AbstractIntelliHints;

        $r1 = r0.<com.jidesoft.hints.AbstractIntelliHints: com.jidesoft.popup.JidePopup _popup>;

        return $r1;
    }

    static com.jidesoft.swing.DelegateAction access$200(com.jidesoft.hints.AbstractIntelliHints)
    {
        com.jidesoft.swing.DelegateAction $r1;
        com.jidesoft.hints.AbstractIntelliHints r0;

        r0 := @parameter0: com.jidesoft.hints.AbstractIntelliHints;

        $r1 = r0.<com.jidesoft.hints.AbstractIntelliHints: com.jidesoft.swing.DelegateAction hideAction>;

        return $r1;
    }

    static com.jidesoft.swing.DelegateAction access$300(com.jidesoft.hints.AbstractIntelliHints)
    {
        com.jidesoft.swing.DelegateAction $r1;
        com.jidesoft.hints.AbstractIntelliHints r0;

        r0 := @parameter0: com.jidesoft.hints.AbstractIntelliHints;

        $r1 = r0.<com.jidesoft.hints.AbstractIntelliHints: com.jidesoft.swing.DelegateAction acceptAction>;

        return $r1;
    }

    static javax.swing.text.JTextComponent access$400(com.jidesoft.hints.AbstractIntelliHints)
    {
        com.jidesoft.hints.AbstractIntelliHints r0;
        javax.swing.text.JTextComponent $r1;

        r0 := @parameter0: com.jidesoft.hints.AbstractIntelliHints;

        $r1 = r0.<com.jidesoft.hints.AbstractIntelliHints: javax.swing.text.JTextComponent _textComponent>;

        return $r1;
    }

    static boolean access$500(com.jidesoft.hints.AbstractIntelliHints)
    {
        com.jidesoft.hints.AbstractIntelliHints r0;
        boolean $z0;

        r0 := @parameter0: com.jidesoft.hints.AbstractIntelliHints;

        $z0 = specialinvoke r0.<com.jidesoft.hints.AbstractIntelliHints: boolean isKeyTyped()>();

        return $z0;
    }
}
