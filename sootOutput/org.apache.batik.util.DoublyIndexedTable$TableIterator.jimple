public class org.apache.batik.util.DoublyIndexedTable$TableIterator extends java.lang.Object implements java.util.Iterator
{
    private int nextIndex;
    private org.apache.batik.util.DoublyIndexedTable$Entry nextEntry;
    private boolean finished;
    private final org.apache.batik.util.DoublyIndexedTable this$0;

    public void <init>(org.apache.batik.util.DoublyIndexedTable)
    {
        org.apache.batik.util.DoublyIndexedTable r1;
        org.apache.batik.util.DoublyIndexedTable$TableIterator r0;
        org.apache.batik.util.DoublyIndexedTable$Entry[] $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4;
        org.apache.batik.util.DoublyIndexedTable$Entry $r4, $r5, $r6;
        boolean $z0;

        r0 := @this: org.apache.batik.util.DoublyIndexedTable$TableIterator;

        r1 := @parameter0: org.apache.batik.util.DoublyIndexedTable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: org.apache.batik.util.DoublyIndexedTable this$0> = r1;

        goto label3;

     label1:
        $r3 = r1.<org.apache.batik.util.DoublyIndexedTable: org.apache.batik.util.DoublyIndexedTable$Entry[] table>;

        $i2 = r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: int nextIndex>;

        $r4 = $r3[$i2];

        r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: org.apache.batik.util.DoublyIndexedTable$Entry nextEntry> = $r4;

        $r5 = r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: org.apache.batik.util.DoublyIndexedTable$Entry nextEntry>;

        if $r5 == null goto label2;

        goto label4;

     label2:
        $i3 = r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: int nextIndex>;

        $i4 = $i3 + 1;

        r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: int nextIndex> = $i4;

     label3:
        $i1 = r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: int nextIndex>;

        $r2 = r1.<org.apache.batik.util.DoublyIndexedTable: org.apache.batik.util.DoublyIndexedTable$Entry[] table>;

        $i0 = lengthof $r2;

        if $i1 < $i0 goto label1;

     label4:
        $r6 = r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: org.apache.batik.util.DoublyIndexedTable$Entry nextEntry>;

        if $r6 != null goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: boolean finished> = $z0;

        return;
    }

    public boolean hasNext()
    {
        org.apache.batik.util.DoublyIndexedTable$TableIterator r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.util.DoublyIndexedTable$TableIterator;

        $z0 = r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: boolean finished>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public java.lang.Object next()
    {
        org.apache.batik.util.DoublyIndexedTable$TableIterator r0;
        org.apache.batik.util.DoublyIndexedTable$Entry r1;
        java.util.NoSuchElementException $r2;
        boolean $z0;

        r0 := @this: org.apache.batik.util.DoublyIndexedTable$TableIterator;

        $z0 = r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: boolean finished>;

        if $z0 == 0 goto label1;

        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();

        throw $r2;

     label1:
        r1 = r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: org.apache.batik.util.DoublyIndexedTable$Entry nextEntry>;

        virtualinvoke r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: void findNext()>();

        return r1;
    }

    protected void findNext()
    {
        org.apache.batik.util.DoublyIndexedTable$TableIterator r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;
        org.apache.batik.util.DoublyIndexedTable $r4, $r6;
        org.apache.batik.util.DoublyIndexedTable$Entry[] $r5, $r7;
        org.apache.batik.util.DoublyIndexedTable$Entry $r1, $r2, $r3, $r8, $r9, $r10;

        r0 := @this: org.apache.batik.util.DoublyIndexedTable$TableIterator;

        $r1 = r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: org.apache.batik.util.DoublyIndexedTable$Entry nextEntry>;

        $r2 = $r1.<org.apache.batik.util.DoublyIndexedTable$Entry: org.apache.batik.util.DoublyIndexedTable$Entry next>;

        r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: org.apache.batik.util.DoublyIndexedTable$Entry nextEntry> = $r2;

        $r3 = r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: org.apache.batik.util.DoublyIndexedTable$Entry nextEntry>;

        if $r3 != null goto label4;

        $i0 = r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: int nextIndex>;

        $i1 = $i0 + 1;

        r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: int nextIndex> = $i1;

        goto label3;

     label1:
        $r6 = r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: org.apache.batik.util.DoublyIndexedTable this$0>;

        $r7 = $r6.<org.apache.batik.util.DoublyIndexedTable: org.apache.batik.util.DoublyIndexedTable$Entry[] table>;

        $i4 = r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: int nextIndex>;

        $r8 = $r7[$i4];

        r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: org.apache.batik.util.DoublyIndexedTable$Entry nextEntry> = $r8;

        $r9 = r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: org.apache.batik.util.DoublyIndexedTable$Entry nextEntry>;

        if $r9 == null goto label2;

        goto label4;

     label2:
        $i5 = r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: int nextIndex>;

        $i6 = $i5 + 1;

        r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: int nextIndex> = $i6;

     label3:
        $i3 = r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: int nextIndex>;

        $r4 = r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: org.apache.batik.util.DoublyIndexedTable this$0>;

        $r5 = $r4.<org.apache.batik.util.DoublyIndexedTable: org.apache.batik.util.DoublyIndexedTable$Entry[] table>;

        $i2 = lengthof $r5;

        if $i3 < $i2 goto label1;

     label4:
        $r10 = r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: org.apache.batik.util.DoublyIndexedTable$Entry nextEntry>;

        if $r10 != null goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        r0.<org.apache.batik.util.DoublyIndexedTable$TableIterator: boolean finished> = $z0;

        return;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.batik.util.DoublyIndexedTable$TableIterator r1;

        r1 := @this: org.apache.batik.util.DoublyIndexedTable$TableIterator;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }
}
