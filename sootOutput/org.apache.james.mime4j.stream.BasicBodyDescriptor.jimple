class org.apache.james.mime4j.stream.BasicBodyDescriptor extends java.lang.Object implements org.apache.james.mime4j.stream.BodyDescriptor
{
    private final java.lang.String mimeType;
    private final java.lang.String mediaType;
    private final java.lang.String subType;
    private final java.lang.String boundary;
    private final java.lang.String charset;
    private final java.lang.String transferEncoding;
    private final long contentLength;

    void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, long)
    {
        org.apache.james.mime4j.stream.BasicBodyDescriptor r0;
        long l0;
        java.lang.String r1, r2, r3, r4, r5, r6;

        r0 := @this: org.apache.james.mime4j.stream.BasicBodyDescriptor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.String;

        l0 := @parameter6: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.james.mime4j.stream.BasicBodyDescriptor: java.lang.String mimeType> = r1;

        r0.<org.apache.james.mime4j.stream.BasicBodyDescriptor: java.lang.String mediaType> = r2;

        r0.<org.apache.james.mime4j.stream.BasicBodyDescriptor: java.lang.String subType> = r3;

        r0.<org.apache.james.mime4j.stream.BasicBodyDescriptor: java.lang.String boundary> = r4;

        r0.<org.apache.james.mime4j.stream.BasicBodyDescriptor: java.lang.String charset> = r5;

        r0.<org.apache.james.mime4j.stream.BasicBodyDescriptor: java.lang.String transferEncoding> = r6;

        r0.<org.apache.james.mime4j.stream.BasicBodyDescriptor: long contentLength> = l0;

        return;
    }

    public java.lang.String getMimeType()
    {
        org.apache.james.mime4j.stream.BasicBodyDescriptor r0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.stream.BasicBodyDescriptor;

        $r1 = r0.<org.apache.james.mime4j.stream.BasicBodyDescriptor: java.lang.String mimeType>;

        return $r1;
    }

    public java.lang.String getMediaType()
    {
        org.apache.james.mime4j.stream.BasicBodyDescriptor r0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.stream.BasicBodyDescriptor;

        $r1 = r0.<org.apache.james.mime4j.stream.BasicBodyDescriptor: java.lang.String mediaType>;

        return $r1;
    }

    public java.lang.String getSubType()
    {
        org.apache.james.mime4j.stream.BasicBodyDescriptor r0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.stream.BasicBodyDescriptor;

        $r1 = r0.<org.apache.james.mime4j.stream.BasicBodyDescriptor: java.lang.String subType>;

        return $r1;
    }

    public java.lang.String getBoundary()
    {
        org.apache.james.mime4j.stream.BasicBodyDescriptor r0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.stream.BasicBodyDescriptor;

        $r1 = r0.<org.apache.james.mime4j.stream.BasicBodyDescriptor: java.lang.String boundary>;

        return $r1;
    }

    public java.lang.String getCharset()
    {
        org.apache.james.mime4j.stream.BasicBodyDescriptor r0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.stream.BasicBodyDescriptor;

        $r1 = r0.<org.apache.james.mime4j.stream.BasicBodyDescriptor: java.lang.String charset>;

        return $r1;
    }

    public java.lang.String getTransferEncoding()
    {
        org.apache.james.mime4j.stream.BasicBodyDescriptor r0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.stream.BasicBodyDescriptor;

        $r1 = r0.<org.apache.james.mime4j.stream.BasicBodyDescriptor: java.lang.String transferEncoding>;

        return $r1;
    }

    public long getContentLength()
    {
        org.apache.james.mime4j.stream.BasicBodyDescriptor r0;
        long $l0;

        r0 := @this: org.apache.james.mime4j.stream.BasicBodyDescriptor;

        $l0 = r0.<org.apache.james.mime4j.stream.BasicBodyDescriptor: long contentLength>;

        return $l0;
    }

    public java.lang.String toString()
    {
        org.apache.james.mime4j.stream.BasicBodyDescriptor r1;
        java.lang.StringBuilder $r0;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7;

        r1 := @this: org.apache.james.mime4j.stream.BasicBodyDescriptor;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[mimeType=");

        $r2 = r1.<org.apache.james.mime4j.stream.BasicBodyDescriptor: java.lang.String mimeType>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mediaType=");

        $r3 = r1.<org.apache.james.mime4j.stream.BasicBodyDescriptor: java.lang.String mediaType>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", subType=");

        $r4 = r1.<org.apache.james.mime4j.stream.BasicBodyDescriptor: java.lang.String subType>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", boundary=");

        $r5 = r1.<org.apache.james.mime4j.stream.BasicBodyDescriptor: java.lang.String boundary>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", charset=");

        $r6 = r1.<org.apache.james.mime4j.stream.BasicBodyDescriptor: java.lang.String charset>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r7 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
