class org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2$1 extends java.lang.Object implements org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Mapper
{
    static final boolean $assertionsDisabled;
    final java.lang.String val$name;
    final org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2 this$1;

    void <init>(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2, java.lang.String)
    {
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2 r1;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2$1 r0;
        java.lang.String r2;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2$1;

        r1 := @parameter0: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2;

        r2 := @parameter1: java.lang.String;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2$1: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2 this$1> = r1;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2$1: java.lang.String val$name> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.model.document.operation.AttributesUpdate map(java.lang.String)
    {
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2 $r1, $r5, $r13, $r16, $r17, $r18;
        java.lang.String[] $r3;
        java.lang.AssertionError $r20;
        java.lang.String $r4, $r6, $r10, r11;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2$1 r0;
        org.waveprotocol.wave.model.document.operation.Attributes $r7;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AttributesUpdateChecker $r14;
        java.lang.Object $r9;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r15;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate $r8, $r12, $r19;
        org.waveprotocol.wave.model.document.operation.impl.AttributesUpdateImpl $r2;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2$1;

        r11 := @parameter0: java.lang.String;

        $r1 = r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2$1: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2 this$1>;

        $r8 = $r1.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2: org.waveprotocol.wave.model.document.operation.AttributesUpdate val$finalAccu>;

        $r2 = new org.waveprotocol.wave.model.document.operation.impl.AttributesUpdateImpl;

        $r3 = newarray (java.lang.String)[3];

        $r4 = r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2$1: java.lang.String val$name>;

        $r3[0] = $r4;

        $r5 = r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2$1: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2 this$1>;

        $r7 = $r5.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2: org.waveprotocol.wave.model.document.operation.Attributes val$oldAttributes>;

        $r6 = r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2$1: java.lang.String val$name>;

        $r9 = interfaceinvoke $r7.<org.waveprotocol.wave.model.document.operation.Attributes: java.lang.Object get(java.lang.Object)>($r6);

        $r10 = (java.lang.String) $r9;

        $r3[1] = $r10;

        $r3[2] = r11;

        specialinvoke $r2.<org.waveprotocol.wave.model.document.operation.impl.AttributesUpdateImpl: void <init>(java.lang.String[])>($r3);

        $r12 = interfaceinvoke $r8.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: org.waveprotocol.wave.model.document.operation.AttributesUpdate composeWith(org.waveprotocol.wave.model.document.operation.AttributesUpdate)>($r2);

        $z0 = <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2$1: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r18 = r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2$1: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2 this$1>;

        $r19 = $r18.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2: org.waveprotocol.wave.model.document.operation.AttributesUpdate val$finalAccu>;

        if $r12 != $r19 goto label1;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label1:
        $r13 = r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2$1: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2 this$1>;

        $r14 = $r13.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AttributesUpdateChecker val$checker>;

        $r15 = interfaceinvoke $r14.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AttributesUpdateChecker: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult check(org.waveprotocol.wave.model.document.operation.AttributesUpdate)>($r12);

        $r16 = r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2$1: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2 this$1>;

        $z1 = $r16.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2: boolean val$valid>;

        if $z1 == 0 goto label2;

        $z4 = virtualinvoke $r15.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: boolean isValid()>();

        if $z4 == 0 goto label3;

     label2:
        $r17 = r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2$1: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2 this$1>;

        $z2 = $r17.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2: boolean val$valid>;

        if $z2 != 0 goto label4;

        $z3 = virtualinvoke $r15.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: boolean isIllFormed()>();

        if $z3 == 0 goto label4;

     label3:
        return null;

     label4:
        return $r12;
    }

    public volatile java.lang.Object map(java.lang.Object)
    {
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2$1 r0;
        java.lang.Object r1;
        java.lang.String $r2;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate $r3;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2$1: org.waveprotocol.wave.model.document.operation.AttributesUpdate map(java.lang.String)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/model/testing/RandomDocOpGenerator;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$2$1: boolean $assertionsDisabled> = $z1;

        return;
    }
}
