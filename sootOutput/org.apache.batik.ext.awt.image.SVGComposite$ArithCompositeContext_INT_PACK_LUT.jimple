public class org.apache.batik.ext.awt.image.SVGComposite$ArithCompositeContext_INT_PACK_LUT extends org.apache.batik.ext.awt.image.SVGComposite$AlphaPreCompositeContext_INT_PACK
{
    byte[] lut;

    void <init>(java.awt.image.ColorModel, java.awt.image.ColorModel, float, float, float, float)
    {
        byte[] $r3, $r4;
        byte $b9;
        float $f0, $f1, f2, $f3, $f4, $f5, f6, $f7, $f8, $f9, $f10, $f11, f12, f13, f14, f15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, $i11;
        org.apache.batik.ext.awt.image.SVGComposite$ArithCompositeContext_INT_PACK_LUT r0;
        java.awt.image.ColorModel r1, r2;

        r0 := @this: org.apache.batik.ext.awt.image.SVGComposite$ArithCompositeContext_INT_PACK_LUT;

        r1 := @parameter0: java.awt.image.ColorModel;

        r2 := @parameter1: java.awt.image.ColorModel;

        f12 := @parameter2: float;

        f2 := @parameter3: float;

        f6 := @parameter4: float;

        f13 := @parameter5: float;

        specialinvoke r0.<org.apache.batik.ext.awt.image.SVGComposite$AlphaPreCompositeContext_INT_PACK: void <init>(java.awt.image.ColorModel,java.awt.image.ColorModel)>(r1, r2);

        f14 = f12 / 255.0F;

        $f0 = f13 * 255.0F;

        f15 = $f0 + 0.5F;

        $r3 = newarray (byte)[65536];

        r0.<org.apache.batik.ext.awt.image.SVGComposite$ArithCompositeContext_INT_PACK_LUT: byte[] lut> = $r3;

        i7 = 0;

        goto label4;

     label1:
        $i1 = i7 >> 8;

        $i0 = i7 & 255;

        $i2 = $i1 * $i0;

        $f1 = (float) $i2;

        $f5 = $f1 * f14;

        $i3 = i7 >> 8;

        $f3 = (float) $i3;

        $f4 = $f3 * f2;

        $f9 = $f5 + $f4;

        $i4 = i7 & 255;

        $f7 = (float) $i4;

        $f8 = $f7 * f6;

        $f10 = $f9 + $f8;

        $f11 = $f10 + f15;

        i8 = (int) $f11;

        $i11 = (int) -256;

        $i5 = i8 & $i11;

        if $i5 == 0 goto label3;

        $i6 = i8 & -2147483648;

        if $i6 == 0 goto label2;

        i8 = 0;

        goto label3;

     label2:
        i8 = 255;

     label3:
        $r4 = r0.<org.apache.batik.ext.awt.image.SVGComposite$ArithCompositeContext_INT_PACK_LUT: byte[] lut>;

        $b9 = (byte) i8;

        $r4[i7] = $b9;

        i7 = i7 + 1;

     label4:
        if i7 < 65536 goto label1;

        return;
    }

    public void precompose_INT_PACK(int, int, int[], int, int, int[], int, int, int[], int, int)
    {
        byte[] r1;
        byte $b11, $b17, $b23, $b29;
        short s18, s24, s30, s45, $s48, $s51, $s54, $s57;
        int[] r2, r3, r4;
        int i0, i1, i2, $i3, i4, $i5, i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i19, $i20, $i21, $i22, $i25, $i26, $i27, $i28, $i31, $i32, $i33, $i34, $i35, $i36, $i37, i38, i39, i40, i41, i42, i43, i44, $i47, $i50, $i53, $i56, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67;
        org.apache.batik.ext.awt.image.SVGComposite$ArithCompositeContext_INT_PACK_LUT r0;

        r0 := @this: org.apache.batik.ext.awt.image.SVGComposite$ArithCompositeContext_INT_PACK_LUT;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r2 := @parameter2: int[];

        i38 := @parameter3: int;

        i41 := @parameter4: int;

        r3 := @parameter5: int[];

        i39 := @parameter6: int;

        i42 := @parameter7: int;

        r4 := @parameter8: int[];

        i40 := @parameter9: int;

        i43 := @parameter10: int;

        r1 = r0.<org.apache.batik.ext.awt.image.SVGComposite$ArithCompositeContext_INT_PACK_LUT: byte[] lut>;

        i44 = 0;

        goto label7;

     label1:
        i2 = i43 + i1;

        goto label6;

     label2:
        $i3 = i41;

        i41 = i41 + 1;

        i4 = r2[$i3];

        $i5 = i42;

        i42 = i42 + 1;

        i6 = r3[$i5];

        $i7 = i4 >> 16;

        $i47 = (int) 65280;

        $i9 = $i7 & $i47;

        $i8 = i6 >>> 24;

        $i10 = $i9 | $i8;

        $b11 = r1[$i10];

        $s48 = (short) $b11;

        s45 = 255 & $s48;

        $i12 = i4 >> 8;

        $i50 = (int) 65280;

        $i15 = $i12 & $i50;

        $i13 = i6 >> 16;

        $i14 = $i13 & 255;

        $i16 = $i15 | $i14;

        $b17 = r1[$i16];

        $s51 = (short) $b17;

        s18 = 255 & $s51;

        $i53 = (int) 65280;

        $i21 = i4 & $i53;

        $i19 = i6 >> 8;

        $i20 = $i19 & 255;

        $i22 = $i21 | $i20;

        $b23 = r1[$i22];

        $s54 = (short) $b23;

        s24 = 255 & $s54;

        $i25 = i4 << 8;

        $i56 = (int) 65280;

        $i27 = $i25 & $i56;

        $i26 = i6 & 255;

        $i28 = $i27 | $i26;

        $b29 = r1[$i28];

        $s57 = (short) $b29;

        s30 = 255 & $s57;

        $i58 = (int) s18;

        $i59 = (int) s45;

        if $i58 <= $i59 goto label3;

        s45 = s18;

     label3:
        $i60 = (int) s24;

        $i61 = (int) s45;

        if $i60 <= $i61 goto label4;

        s45 = s24;

     label4:
        $i62 = (int) s30;

        $i63 = (int) s45;

        if $i62 <= $i63 goto label5;

        s45 = s30;

     label5:
        $i31 = i43;

        i43 = i43 + 1;

        $i64 = (int) s45;

        $i33 = $i64 << 24;

        $i65 = (int) s18;

        $i32 = $i65 << 16;

        $i35 = $i33 | $i32;

        $i66 = (int) s24;

        $i34 = $i66 << 8;

        $i36 = $i35 | $i34;

        $i67 = (int) s30;

        $i37 = $i36 | $i67;

        r4[$i31] = $i37;

     label6:
        if i43 < i2 goto label2;

        i41 = i41 + i38;

        i42 = i42 + i39;

        i43 = i43 + i40;

        i44 = i44 + 1;

     label7:
        if i44 < i0 goto label1;

        return;
    }
}
