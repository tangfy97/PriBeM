public class org.dom4j.rule.Stylesheet extends java.lang.Object
{
    private org.dom4j.rule.RuleManager ruleManager;
    private java.lang.String modeName;

    public void <init>()
    {
        org.dom4j.rule.Stylesheet r0;
        org.dom4j.rule.RuleManager $r1;

        r0 := @this: org.dom4j.rule.Stylesheet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.dom4j.rule.RuleManager;

        specialinvoke $r1.<org.dom4j.rule.RuleManager: void <init>()>();

        r0.<org.dom4j.rule.Stylesheet: org.dom4j.rule.RuleManager ruleManager> = $r1;

        return;
    }

    public void addRule(org.dom4j.rule.Rule)
    {
        org.dom4j.rule.Stylesheet r0;
        org.dom4j.rule.Rule r1;
        org.dom4j.rule.RuleManager $r2;

        r0 := @this: org.dom4j.rule.Stylesheet;

        r1 := @parameter0: org.dom4j.rule.Rule;

        $r2 = r0.<org.dom4j.rule.Stylesheet: org.dom4j.rule.RuleManager ruleManager>;

        virtualinvoke $r2.<org.dom4j.rule.RuleManager: void addRule(org.dom4j.rule.Rule)>(r1);

        return;
    }

    public void removeRule(org.dom4j.rule.Rule)
    {
        org.dom4j.rule.Stylesheet r0;
        org.dom4j.rule.Rule r1;
        org.dom4j.rule.RuleManager $r2;

        r0 := @this: org.dom4j.rule.Stylesheet;

        r1 := @parameter0: org.dom4j.rule.Rule;

        $r2 = r0.<org.dom4j.rule.Stylesheet: org.dom4j.rule.RuleManager ruleManager>;

        virtualinvoke $r2.<org.dom4j.rule.RuleManager: void removeRule(org.dom4j.rule.Rule)>(r1);

        return;
    }

    public void run(java.lang.Object) throws java.lang.Exception
    {
        java.lang.Object r1;
        org.dom4j.rule.Stylesheet r0;
        java.lang.String $r2;

        r0 := @this: org.dom4j.rule.Stylesheet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.dom4j.rule.Stylesheet: java.lang.String modeName>;

        virtualinvoke r0.<org.dom4j.rule.Stylesheet: void run(java.lang.Object,java.lang.String)>(r1, $r2);

        return;
    }

    public void run(java.lang.Object, java.lang.String) throws java.lang.Exception
    {
        java.util.List $r3;
        org.dom4j.Node $r4;
        java.lang.Object r0;
        org.dom4j.rule.Stylesheet r1;
        java.lang.String r2;
        boolean $z0, $z1;

        r1 := @this: org.dom4j.rule.Stylesheet;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        $z0 = r0 instanceof org.dom4j.Node;

        if $z0 == 0 goto label1;

        $r4 = (org.dom4j.Node) r0;

        virtualinvoke r1.<org.dom4j.rule.Stylesheet: void run(org.dom4j.Node,java.lang.String)>($r4, r2);

        goto label2;

     label1:
        $z1 = r0 instanceof java.util.List;

        if $z1 == 0 goto label2;

        $r3 = (java.util.List) r0;

        virtualinvoke r1.<org.dom4j.rule.Stylesheet: void run(java.util.List,java.lang.String)>($r3, r2);

     label2:
        return;
    }

    public void run(java.util.List) throws java.lang.Exception
    {
        java.util.List r1;
        org.dom4j.rule.Stylesheet r0;
        java.lang.String $r2;

        r0 := @this: org.dom4j.rule.Stylesheet;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<org.dom4j.rule.Stylesheet: java.lang.String modeName>;

        virtualinvoke r0.<org.dom4j.rule.Stylesheet: void run(java.util.List,java.lang.String)>(r1, $r2);

        return;
    }

    public void run(java.util.List, java.lang.String) throws java.lang.Exception
    {
        org.dom4j.Node $r4;
        org.dom4j.rule.Stylesheet r2;
        java.util.List r0;
        int $i0, i1;
        java.lang.Object $r1;
        java.lang.String r3;
        boolean $z0;

        r2 := @this: org.dom4j.rule.Stylesheet;

        r0 := @parameter0: java.util.List;

        r3 := @parameter1: java.lang.String;

        i1 = 0;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

     label1:
        if i1 >= $i0 goto label3;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        $z0 = $r1 instanceof org.dom4j.Node;

        if $z0 == 0 goto label2;

        $r4 = (org.dom4j.Node) $r1;

        virtualinvoke r2.<org.dom4j.rule.Stylesheet: void run(org.dom4j.Node,java.lang.String)>($r4, r3);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void run(org.dom4j.Node) throws java.lang.Exception
    {
        org.dom4j.rule.Stylesheet r0;
        java.lang.String $r2;
        org.dom4j.Node r1;

        r0 := @this: org.dom4j.rule.Stylesheet;

        r1 := @parameter0: org.dom4j.Node;

        $r2 = r0.<org.dom4j.rule.Stylesheet: java.lang.String modeName>;

        virtualinvoke r0.<org.dom4j.rule.Stylesheet: void run(org.dom4j.Node,java.lang.String)>(r1, $r2);

        return;
    }

    public void run(org.dom4j.Node, java.lang.String) throws java.lang.Exception
    {
        org.dom4j.rule.RuleManager $r2;
        org.dom4j.rule.Mode $r3;
        org.dom4j.Node r4;
        org.dom4j.rule.Stylesheet r0;
        java.lang.String r1;

        r0 := @this: org.dom4j.rule.Stylesheet;

        r4 := @parameter0: org.dom4j.Node;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.dom4j.rule.Stylesheet: org.dom4j.rule.RuleManager ruleManager>;

        $r3 = virtualinvoke $r2.<org.dom4j.rule.RuleManager: org.dom4j.rule.Mode getMode(java.lang.String)>(r1);

        virtualinvoke $r3.<org.dom4j.rule.Mode: void fireRule(org.dom4j.Node)>(r4);

        return;
    }

    public void applyTemplates(java.lang.Object, org.dom4j.XPath) throws java.lang.Exception
    {
        org.dom4j.XPath r2;
        java.lang.Object r1;
        org.dom4j.rule.Stylesheet r0;
        java.lang.String $r3;

        r0 := @this: org.dom4j.rule.Stylesheet;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.dom4j.XPath;

        $r3 = r0.<org.dom4j.rule.Stylesheet: java.lang.String modeName>;

        virtualinvoke r0.<org.dom4j.rule.Stylesheet: void applyTemplates(java.lang.Object,org.dom4j.XPath,java.lang.String)>(r1, r2, $r3);

        return;
    }

    public void applyTemplates(java.lang.Object, org.dom4j.XPath, java.lang.String) throws java.lang.Exception
    {
        org.dom4j.rule.RuleManager $r2;
        java.util.Iterator $r7;
        org.dom4j.rule.Mode $r3;
        org.dom4j.Node r9;
        org.dom4j.rule.Stylesheet r0;
        java.util.List $r6;
        org.dom4j.XPath r4;
        java.lang.Object r5, $r8;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.dom4j.rule.Stylesheet;

        r5 := @parameter0: java.lang.Object;

        r4 := @parameter1: org.dom4j.XPath;

        r1 := @parameter2: java.lang.String;

        $r2 = r0.<org.dom4j.rule.Stylesheet: org.dom4j.rule.RuleManager ruleManager>;

        $r3 = virtualinvoke $r2.<org.dom4j.rule.RuleManager: org.dom4j.rule.Mode getMode(java.lang.String)>(r1);

        $r6 = interfaceinvoke r4.<org.dom4j.XPath: java.util.List selectNodes(java.lang.Object)>(r5);

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.dom4j.Node) $r8;

        virtualinvoke $r3.<org.dom4j.rule.Mode: void fireRule(org.dom4j.Node)>(r9);

        goto label1;

     label2:
        return;
    }

    public void applyTemplates(java.lang.Object, org.jaxen.XPath) throws java.lang.Exception
    {
        java.lang.Object r1;
        org.jaxen.XPath r2;
        org.dom4j.rule.Stylesheet r0;
        java.lang.String $r3;

        r0 := @this: org.dom4j.rule.Stylesheet;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.jaxen.XPath;

        $r3 = r0.<org.dom4j.rule.Stylesheet: java.lang.String modeName>;

        virtualinvoke r0.<org.dom4j.rule.Stylesheet: void applyTemplates(java.lang.Object,org.jaxen.XPath,java.lang.String)>(r1, r2, $r3);

        return;
    }

    public void applyTemplates(java.lang.Object, org.jaxen.XPath, java.lang.String) throws java.lang.Exception
    {
        org.dom4j.rule.RuleManager $r2;
        java.util.Iterator $r7;
        org.dom4j.rule.Mode $r3;
        org.dom4j.Node r9;
        org.jaxen.XPath r4;
        org.dom4j.rule.Stylesheet r0;
        java.util.List $r6;
        java.lang.Object r5, $r8;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.dom4j.rule.Stylesheet;

        r5 := @parameter0: java.lang.Object;

        r4 := @parameter1: org.jaxen.XPath;

        r1 := @parameter2: java.lang.String;

        $r2 = r0.<org.dom4j.rule.Stylesheet: org.dom4j.rule.RuleManager ruleManager>;

        $r3 = virtualinvoke $r2.<org.dom4j.rule.RuleManager: org.dom4j.rule.Mode getMode(java.lang.String)>(r1);

        $r6 = interfaceinvoke r4.<org.jaxen.XPath: java.util.List selectNodes(java.lang.Object)>(r5);

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.dom4j.Node) $r8;

        virtualinvoke $r3.<org.dom4j.rule.Mode: void fireRule(org.dom4j.Node)>(r9);

        goto label1;

     label2:
        return;
    }

    public void applyTemplates(java.lang.Object) throws java.lang.Exception
    {
        java.lang.Object r1;
        org.dom4j.rule.Stylesheet r0;
        java.lang.String $r2;

        r0 := @this: org.dom4j.rule.Stylesheet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.dom4j.rule.Stylesheet: java.lang.String modeName>;

        virtualinvoke r0.<org.dom4j.rule.Stylesheet: void applyTemplates(java.lang.Object,java.lang.String)>(r1, $r2);

        return;
    }

    public void applyTemplates(java.lang.Object, java.lang.String) throws java.lang.Exception
    {
        org.dom4j.Document $r6, r11;
        org.dom4j.rule.RuleManager $r2;
        org.dom4j.Node $r8, $r9;
        int $i0, $i1, $i2, i3, i4, i5;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.dom4j.rule.Mode $r3;
        org.dom4j.rule.Stylesheet r0;
        java.util.List r12;
        java.lang.Object r4, $r5;
        org.dom4j.Element $r7, r10;

        r0 := @this: org.dom4j.rule.Stylesheet;

        r4 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.dom4j.rule.Stylesheet: org.dom4j.rule.RuleManager ruleManager>;

        $r3 = virtualinvoke $r2.<org.dom4j.rule.RuleManager: org.dom4j.rule.Mode getMode(java.lang.String)>(r1);

        $z0 = r4 instanceof org.dom4j.Element;

        if $z0 == 0 goto label03;

        r10 = (org.dom4j.Element) r4;

        i3 = 0;

        $i2 = interfaceinvoke r10.<org.dom4j.Element: int nodeCount()>();

     label01:
        if i3 >= $i2 goto label02;

        $r9 = interfaceinvoke r10.<org.dom4j.Element: org.dom4j.Node node(int)>(i3);

        virtualinvoke $r3.<org.dom4j.rule.Mode: void fireRule(org.dom4j.Node)>($r9);

        i3 = i3 + 1;

        goto label01;

     label02:
        goto label10;

     label03:
        $z1 = r4 instanceof org.dom4j.Document;

        if $z1 == 0 goto label06;

        r11 = (org.dom4j.Document) r4;

        i4 = 0;

        $i1 = interfaceinvoke r11.<org.dom4j.Document: int nodeCount()>();

     label04:
        if i4 >= $i1 goto label05;

        $r8 = interfaceinvoke r11.<org.dom4j.Document: org.dom4j.Node node(int)>(i4);

        virtualinvoke $r3.<org.dom4j.rule.Mode: void fireRule(org.dom4j.Node)>($r8);

        i4 = i4 + 1;

        goto label04;

     label05:
        goto label10;

     label06:
        $z2 = r4 instanceof java.util.List;

        if $z2 == 0 goto label10;

        r12 = (java.util.List) r4;

        i5 = 0;

        $i0 = interfaceinvoke r12.<java.util.List: int size()>();

     label07:
        if i5 >= $i0 goto label10;

        $r5 = interfaceinvoke r12.<java.util.List: java.lang.Object get(int)>(i5);

        $z3 = $r5 instanceof org.dom4j.Element;

        if $z3 == 0 goto label08;

        $r7 = (org.dom4j.Element) $r5;

        virtualinvoke r0.<org.dom4j.rule.Stylesheet: void applyTemplates(java.lang.Object,java.lang.String)>($r7, r1);

        goto label09;

     label08:
        $z4 = $r5 instanceof org.dom4j.Document;

        if $z4 == 0 goto label09;

        $r6 = (org.dom4j.Document) $r5;

        virtualinvoke r0.<org.dom4j.rule.Stylesheet: void applyTemplates(java.lang.Object,java.lang.String)>($r6, r1);

     label09:
        i5 = i5 + 1;

        goto label07;

     label10:
        return;
    }

    public void clear()
    {
        org.dom4j.rule.Stylesheet r0;
        org.dom4j.rule.RuleManager $r1;

        r0 := @this: org.dom4j.rule.Stylesheet;

        $r1 = r0.<org.dom4j.rule.Stylesheet: org.dom4j.rule.RuleManager ruleManager>;

        virtualinvoke $r1.<org.dom4j.rule.RuleManager: void clear()>();

        return;
    }

    public java.lang.String getModeName()
    {
        org.dom4j.rule.Stylesheet r0;
        java.lang.String $r1;

        r0 := @this: org.dom4j.rule.Stylesheet;

        $r1 = r0.<org.dom4j.rule.Stylesheet: java.lang.String modeName>;

        return $r1;
    }

    public void setModeName(java.lang.String)
    {
        org.dom4j.rule.Stylesheet r0;
        java.lang.String r1;

        r0 := @this: org.dom4j.rule.Stylesheet;

        r1 := @parameter0: java.lang.String;

        r0.<org.dom4j.rule.Stylesheet: java.lang.String modeName> = r1;

        return;
    }

    public org.dom4j.rule.Action getValueOfAction()
    {
        org.dom4j.rule.Action $r2;
        org.dom4j.rule.Stylesheet r0;
        org.dom4j.rule.RuleManager $r1;

        r0 := @this: org.dom4j.rule.Stylesheet;

        $r1 = r0.<org.dom4j.rule.Stylesheet: org.dom4j.rule.RuleManager ruleManager>;

        $r2 = virtualinvoke $r1.<org.dom4j.rule.RuleManager: org.dom4j.rule.Action getValueOfAction()>();

        return $r2;
    }

    public void setValueOfAction(org.dom4j.rule.Action)
    {
        org.dom4j.rule.Action r1;
        org.dom4j.rule.Stylesheet r0;
        org.dom4j.rule.RuleManager $r2;

        r0 := @this: org.dom4j.rule.Stylesheet;

        r1 := @parameter0: org.dom4j.rule.Action;

        $r2 = r0.<org.dom4j.rule.Stylesheet: org.dom4j.rule.RuleManager ruleManager>;

        virtualinvoke $r2.<org.dom4j.rule.RuleManager: void setValueOfAction(org.dom4j.rule.Action)>(r1);

        return;
    }
}
