public class com.hp.hpl.jena.reasoner.rulesys.builtins.ListEqual extends com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin
{

    public void <init>()
    {
        com.hp.hpl.jena.reasoner.rulesys.builtins.ListEqual r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.ListEqual;

        specialinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.builtins.BaseBuiltin: void <init>()>();

        return;
    }

    public java.lang.String getName()
    {
        com.hp.hpl.jena.reasoner.rulesys.builtins.ListEqual r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.ListEqual;

        return "listEqual";
    }

    public int getArgLength()
    {
        com.hp.hpl.jena.reasoner.rulesys.builtins.ListEqual r0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.ListEqual;

        return 2;
    }

    public boolean bodyCall(com.hp.hpl.jena.graph.Node[], int, com.hp.hpl.jena.reasoner.rulesys.RuleContext)
    {
        com.hp.hpl.jena.reasoner.rulesys.RuleContext r1;
        com.hp.hpl.jena.graph.Node[] r2;
        com.hp.hpl.jena.reasoner.rulesys.builtins.ListEqual r0;
        int i0;
        com.hp.hpl.jena.graph.Node $r3, $r4;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.builtins.ListEqual;

        r2 := @parameter0: com.hp.hpl.jena.graph.Node[];

        i0 := @parameter1: int;

        r1 := @parameter2: com.hp.hpl.jena.reasoner.rulesys.RuleContext;

        virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.builtins.ListEqual: void checkArgs(int,com.hp.hpl.jena.reasoner.rulesys.RuleContext)>(i0, r1);

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.builtins.ListEqual: com.hp.hpl.jena.graph.Node getArg(int,com.hp.hpl.jena.graph.Node[],com.hp.hpl.jena.reasoner.rulesys.RuleContext)>(0, r2, r1);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.builtins.ListEqual: com.hp.hpl.jena.graph.Node getArg(int,com.hp.hpl.jena.graph.Node[],com.hp.hpl.jena.reasoner.rulesys.RuleContext)>(1, r2, r1);

        $z0 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.builtins.ListEqual: boolean listEqual(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.reasoner.rulesys.RuleContext)>($r3, $r4, r1);

        return $z0;
    }

    protected static boolean listEqual(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.reasoner.rulesys.RuleContext)
    {
        com.hp.hpl.jena.reasoner.rulesys.RuleContext r1;
        com.hp.hpl.jena.graph.Node r0, r3, r7, r10;
        int $i0, $i1;
        boolean $z0, $z1, $z2, z3;
        java.util.Iterator $r5, $r8;
        java.util.List $r2, $r4;
        java.lang.Object $r6, $r9;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        r3 := @parameter1: com.hp.hpl.jena.graph.Node;

        r1 := @parameter2: com.hp.hpl.jena.reasoner.rulesys.RuleContext;

        $r2 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.Util: java.util.List convertList(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.reasoner.rulesys.RuleContext)>(r0, r1);

        $r4 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.Util: java.util.List convertList(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.reasoner.rulesys.RuleContext)>(r3, r1);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        $r5 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.hp.hpl.jena.graph.Node) $r6;

        z3 = 0;

        $r8 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.hp.hpl.jena.graph.Node) $r9;

        $z2 = virtualinvoke r7.<com.hp.hpl.jena.graph.Node: boolean sameValueAs(java.lang.Object)>(r10);

        if $z2 == 0 goto label4;

        interfaceinvoke $r8.<java.util.Iterator: void remove()>();

        z3 = 1;

        goto label5;

     label4:
        goto label3;

     label5:
        if z3 != 0 goto label6;

        return 0;

     label6:
        goto label2;

     label7:
        return 1;
    }
}
