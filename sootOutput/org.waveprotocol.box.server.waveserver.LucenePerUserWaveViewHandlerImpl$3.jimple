class org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$3 extends java.lang.Object implements java.util.concurrent.Callable
{
    final org.waveprotocol.wave.model.id.WaveletName val$waveletName;
    final org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl this$0;

    void <init>(org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl, org.waveprotocol.wave.model.id.WaveletName)
    {
        org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl r1;
        org.waveprotocol.wave.model.id.WaveletName r2;
        org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$3 r0;

        r0 := @this: org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$3;

        r1 := @parameter0: org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl;

        r2 := @parameter1: org.waveprotocol.wave.model.id.WaveletName;

        r0.<org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$3: org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl this$0> = r1;

        r0.<org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$3: org.waveprotocol.wave.model.id.WaveletName val$waveletName> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Void call() throws java.lang.Exception
    {
        org.waveprotocol.wave.model.id.WaveletName $r3, $r11;
        org.waveprotocol.box.server.waveserver.ReadableWaveletDataProvider $r2;
        java.util.logging.Logger $r7;
        java.util.logging.Level $r9;
        org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl $r1, $r5;
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData $r4;
        org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$3 r0;
        java.lang.StringBuilder $r8, $r10, $r12;
        java.lang.String $r13;
        org.waveprotocol.box.server.waveserver.WaveServerException $r6;

        r0 := @this: org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$3;

     label1:
        $r1 = r0.<org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$3: org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl this$0>;

        $r2 = staticinvoke <org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl: org.waveprotocol.box.server.waveserver.ReadableWaveletDataProvider access$000(org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl)>($r1);

        $r3 = r0.<org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$3: org.waveprotocol.wave.model.id.WaveletName val$waveletName>;

        $r4 = interfaceinvoke $r2.<org.waveprotocol.box.server.waveserver.ReadableWaveletDataProvider: org.waveprotocol.wave.model.wave.data.ReadableWaveletData getReadableWaveletData(org.waveprotocol.wave.model.id.WaveletName)>($r3);

        $r5 = r0.<org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$3: org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl this$0>;

        staticinvoke <org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl: void access$100(org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl,org.waveprotocol.wave.model.wave.data.ReadableWaveletData)>($r5, $r4);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = staticinvoke <org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl: java.util.logging.Logger access$200()>();

        $r9 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to initialize index for ");

        $r11 = r0.<org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$3: org.waveprotocol.wave.model.id.WaveletName val$waveletName>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r9, $r13, $r6);

        throw $r6;

     label4:
        return null;

        catch org.waveprotocol.box.server.waveserver.WaveServerException from label1 to label2 with label3;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        java.lang.Void $r1;
        org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$3 r0;

        r0 := @this: org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$3;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.server.waveserver.LucenePerUserWaveViewHandlerImpl$3: java.lang.Void call()>();

        return $r1;
    }
}
