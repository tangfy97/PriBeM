final class com.google.inject.internal.MethodAspect extends java.lang.Object
{
    private final com.google.inject.matcher.Matcher classMatcher;
    private final com.google.inject.matcher.Matcher methodMatcher;
    private final java.util.List interceptors;

    void <init>(com.google.inject.matcher.Matcher, com.google.inject.matcher.Matcher, java.util.List)
    {
        com.google.inject.internal.MethodAspect r0;
        java.util.List r7, $r9;
        java.lang.Object $r2, $r5, $r8;
        com.google.inject.matcher.Matcher r1, $r3, r4, $r6;

        r0 := @this: com.google.inject.internal.MethodAspect;

        r1 := @parameter0: com.google.inject.matcher.Matcher;

        r4 := @parameter1: com.google.inject.matcher.Matcher;

        r7 := @parameter2: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "class matcher");

        $r3 = (com.google.inject.matcher.Matcher) $r2;

        r0.<com.google.inject.internal.MethodAspect: com.google.inject.matcher.Matcher classMatcher> = $r3;

        $r5 = staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r4, "method matcher");

        $r6 = (com.google.inject.matcher.Matcher) $r5;

        r0.<com.google.inject.internal.MethodAspect: com.google.inject.matcher.Matcher methodMatcher> = $r6;

        $r8 = staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r7, "interceptors");

        $r9 = (java.util.List) $r8;

        r0.<com.google.inject.internal.MethodAspect: java.util.List interceptors> = $r9;

        return;
    }

    transient void <init>(com.google.inject.matcher.Matcher, com.google.inject.matcher.Matcher, org.aopalliance.intercept.MethodInterceptor[])
    {
        java.util.List $r4;
        com.google.inject.internal.MethodAspect r0;
        com.google.inject.matcher.Matcher r1, r2;
        org.aopalliance.intercept.MethodInterceptor[] r3;

        r0 := @this: com.google.inject.internal.MethodAspect;

        r1 := @parameter0: com.google.inject.matcher.Matcher;

        r2 := @parameter1: com.google.inject.matcher.Matcher;

        r3 := @parameter2: org.aopalliance.intercept.MethodInterceptor[];

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r3);

        specialinvoke r0.<com.google.inject.internal.MethodAspect: void <init>(com.google.inject.matcher.Matcher,com.google.inject.matcher.Matcher,java.util.List)>(r1, r2, $r4);

        return;
    }

    boolean matches(java.lang.Class)
    {
        com.google.inject.internal.MethodAspect r0;
        java.lang.Class r1;
        com.google.inject.matcher.Matcher $r2;
        boolean $z0;

        r0 := @this: com.google.inject.internal.MethodAspect;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<com.google.inject.internal.MethodAspect: com.google.inject.matcher.Matcher classMatcher>;

        $z0 = interfaceinvoke $r2.<com.google.inject.matcher.Matcher: boolean matches(java.lang.Object)>(r1);

        return $z0;
    }

    boolean matches(java.lang.reflect.Method)
    {
        com.google.inject.internal.MethodAspect r0;
        com.google.inject.matcher.Matcher $r2;
        java.lang.reflect.Method r1;
        boolean $z0;

        r0 := @this: com.google.inject.internal.MethodAspect;

        r1 := @parameter0: java.lang.reflect.Method;

        $r2 = r0.<com.google.inject.internal.MethodAspect: com.google.inject.matcher.Matcher methodMatcher>;

        $z0 = interfaceinvoke $r2.<com.google.inject.matcher.Matcher: boolean matches(java.lang.Object)>(r1);

        return $z0;
    }

    java.util.List interceptors()
    {
        java.util.List $r1;
        com.google.inject.internal.MethodAspect r0;

        r0 := @this: com.google.inject.internal.MethodAspect;

        $r1 = r0.<com.google.inject.internal.MethodAspect: java.util.List interceptors>;

        return $r1;
    }
}
