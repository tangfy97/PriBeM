public class org.eclipse.jetty.util.preventers.GCThreadLeakPreventer extends org.eclipse.jetty.util.preventers.AbstractLeakPreventer
{

    public void <init>()
    {
        org.eclipse.jetty.util.preventers.GCThreadLeakPreventer r0;

        r0 := @this: org.eclipse.jetty.util.preventers.GCThreadLeakPreventer;

        specialinvoke r0.<org.eclipse.jetty.util.preventers.AbstractLeakPreventer: void <init>()>();

        return;
    }

    public void prevent(java.lang.ClassLoader)
    {
        java.lang.Object[] $r4;
        java.lang.Class[] $r1;
        java.lang.Exception $r6;
        java.lang.Long $r5;
        java.lang.Class $r0, $r2;
        java.lang.ClassNotFoundException $r8;
        org.eclipse.jetty.util.log.Logger $r7, $r9;
        java.lang.ClassLoader r11;
        java.lang.reflect.Method $r3;
        org.eclipse.jetty.util.preventers.GCThreadLeakPreventer r10;

        r10 := @this: org.eclipse.jetty.util.preventers.GCThreadLeakPreventer;

        r11 := @parameter0: java.lang.ClassLoader;

     label1:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("sun.misc.GC");

        $r1 = newarray (java.lang.Class)[1];

        $r2 = <java.lang.Long: java.lang.Class TYPE>;

        $r1[0] = $r2;

        $r3 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("requestLatency", $r1);

        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(9223372036854775806L);

        $r4[0] = $r5;

        virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r4);

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        $r9 = <org.eclipse.jetty.util.preventers.GCThreadLeakPreventer: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r9.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r8);

        goto label5;

     label4:
        $r6 := @caughtexception;

        $r7 = <org.eclipse.jetty.util.preventers.GCThreadLeakPreventer: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r7.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r6);

     label5:
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }
}
