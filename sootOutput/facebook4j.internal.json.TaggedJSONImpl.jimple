public class facebook4j.internal.json.TaggedJSONImpl extends facebook4j.internal.json.FacebookResponseImpl implements facebook4j.Tagged, java.io.Serializable
{
    private static final long serialVersionUID;
    private java.lang.String id;
    private java.lang.String type;
    private facebook4j.Post post;
    private facebook4j.Photo photo;
    private facebook4j.Video video;
    private java.lang.String message;
    private java.util.Map messageTags;
    private java.lang.String objectId;
    private facebook4j.Privacy privacy;
    private java.util.List 'to';
    private java.util.Date updatedTime;

    void <init>(facebook4j.internal.http.HttpResponse, facebook4j.conf.Configuration) throws facebook4j.FacebookException
    {
        facebook4j.internal.json.TaggedJSONImpl r0;
        facebook4j.conf.Configuration r3;
        facebook4j.internal.org.json.JSONObject $r2;
        facebook4j.internal.http.HttpResponse r1;
        boolean $z0;

        r0 := @this: facebook4j.internal.json.TaggedJSONImpl;

        r1 := @parameter0: facebook4j.internal.http.HttpResponse;

        r3 := @parameter1: facebook4j.conf.Configuration;

        specialinvoke r0.<facebook4j.internal.json.FacebookResponseImpl: void <init>(facebook4j.internal.http.HttpResponse)>(r1);

        $r2 = virtualinvoke r1.<facebook4j.internal.http.HttpResponse: facebook4j.internal.org.json.JSONObject asJSONObject()>();

        specialinvoke r0.<facebook4j.internal.json.TaggedJSONImpl: void init(facebook4j.internal.org.json.JSONObject)>($r2);

        $z0 = interfaceinvoke r3.<facebook4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z0 == 0 goto label1;

        staticinvoke <facebook4j.internal.json.DataObjectFactoryUtil: void clearThreadLocalMap()>();

        staticinvoke <facebook4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>(r0, $r2);

     label1:
        return;
    }

    void <init>(facebook4j.internal.org.json.JSONObject) throws facebook4j.FacebookException
    {
        facebook4j.internal.json.TaggedJSONImpl r0;
        facebook4j.internal.org.json.JSONObject r1;

        r0 := @this: facebook4j.internal.json.TaggedJSONImpl;

        r1 := @parameter0: facebook4j.internal.org.json.JSONObject;

        specialinvoke r0.<facebook4j.internal.json.FacebookResponseImpl: void <init>()>();

        specialinvoke r0.<facebook4j.internal.json.TaggedJSONImpl: void init(facebook4j.internal.org.json.JSONObject)>(r1);

        return;
    }

    private void init(facebook4j.internal.org.json.JSONObject) throws facebook4j.FacebookException
    {
        java.util.Date $r11;
        facebook4j.internal.json.TaggedJSONImpl r0;
        facebook4j.internal.json.PostJSONImpl $r6;
        facebook4j.internal.org.json.JSONObject r1, $r9, $r12, $r15, $r19, $r26;
        facebook4j.internal.json.TagJSONImpl $r27;
        java.util.Map $r7, $r25;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        facebook4j.Tag[] r24;
        facebook4j.internal.json.CategoryJSONImpl $r16;
        java.util.List $r10, $r17;
        facebook4j.FacebookException $r32;
        facebook4j.internal.json.PrivacyJSONImpl $r8;
        java.util.HashMap $r20;
        java.util.ArrayList $r14;
        facebook4j.internal.json.VideoJSONImpl $r29;
        int $i0, $i1, $i2, i3, i4;
        java.lang.String $r2, $r3, $r4, $r5, $r18, $r28, r33;
        java.util.Iterator $r21;
        facebook4j.internal.org.json.JSONException $r31;
        facebook4j.internal.json.PhotoJSONImpl $r30;
        facebook4j.internal.org.json.JSONArray $r13, $r23;
        java.lang.Object $r22;

        r0 := @this: facebook4j.internal.json.TaggedJSONImpl;

        r1 := @parameter0: facebook4j.internal.org.json.JSONObject;

     label01:
        $r2 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.String getRawString(java.lang.String,facebook4j.internal.org.json.JSONObject)>("id", r1);

        r0.<facebook4j.internal.json.TaggedJSONImpl: java.lang.String id> = $r2;

        $r3 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.String getRawString(java.lang.String,facebook4j.internal.org.json.JSONObject)>("type", r1);

        r0.<facebook4j.internal.json.TaggedJSONImpl: java.lang.String type> = $r3;

        $r4 = r0.<facebook4j.internal.json.TaggedJSONImpl: java.lang.String type>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("photo");

        if $z0 == 0 goto label02;

        $r30 = new facebook4j.internal.json.PhotoJSONImpl;

        specialinvoke $r30.<facebook4j.internal.json.PhotoJSONImpl: void <init>(facebook4j.internal.org.json.JSONObject)>(r1);

        r0.<facebook4j.internal.json.TaggedJSONImpl: facebook4j.Photo photo> = $r30;

        goto label04;

     label02:
        $r5 = r0.<facebook4j.internal.json.TaggedJSONImpl: java.lang.String type>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("video");

        if $z1 == 0 goto label03;

        $r29 = new facebook4j.internal.json.VideoJSONImpl;

        specialinvoke $r29.<facebook4j.internal.json.VideoJSONImpl: void <init>(facebook4j.internal.org.json.JSONObject)>(r1);

        r0.<facebook4j.internal.json.TaggedJSONImpl: facebook4j.Video video> = $r29;

        goto label04;

     label03:
        $r6 = new facebook4j.internal.json.PostJSONImpl;

        specialinvoke $r6.<facebook4j.internal.json.PostJSONImpl: void <init>(facebook4j.internal.org.json.JSONObject)>(r1);

        r0.<facebook4j.internal.json.TaggedJSONImpl: facebook4j.Post post> = $r6;

     label04:
        $z6 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("message");

        if $z6 != 0 goto label05;

        $r28 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.String getRawString(java.lang.String,facebook4j.internal.org.json.JSONObject)>("message", r1);

        r0.<facebook4j.internal.json.TaggedJSONImpl: java.lang.String message> = $r28;

     label05:
        $z2 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("message_tags");

        if $z2 != 0 goto label10;

        $r19 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: facebook4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("message_tags");

        $r20 = new java.util.HashMap;

        specialinvoke $r20.<java.util.HashMap: void <init>()>();

        r0.<facebook4j.internal.json.TaggedJSONImpl: java.util.Map messageTags> = $r20;

        $r21 = virtualinvoke $r19.<facebook4j.internal.org.json.JSONObject: java.util.Iterator keys()>();

     label06:
        $z5 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label09;

        $r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r33 = (java.lang.String) $r22;

        $r23 = virtualinvoke $r19.<facebook4j.internal.org.json.JSONObject: facebook4j.internal.org.json.JSONArray getJSONArray(java.lang.String)>(r33);

        $i1 = virtualinvoke $r23.<facebook4j.internal.org.json.JSONArray: int length()>();

        r24 = newarray (facebook4j.Tag)[$i1];

        i3 = 0;

     label07:
        $i2 = virtualinvoke $r23.<facebook4j.internal.org.json.JSONArray: int length()>();

        if i3 >= $i2 goto label08;

        $r26 = virtualinvoke $r23.<facebook4j.internal.org.json.JSONArray: facebook4j.internal.org.json.JSONObject getJSONObject(int)>(i3);

        $r27 = new facebook4j.internal.json.TagJSONImpl;

        specialinvoke $r27.<facebook4j.internal.json.TagJSONImpl: void <init>(facebook4j.internal.org.json.JSONObject)>($r26);

        r24[i3] = $r27;

        i3 = i3 + 1;

        goto label07;

     label08:
        $r25 = r0.<facebook4j.internal.json.TaggedJSONImpl: java.util.Map messageTags>;

        interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r33, r24);

        goto label06;

     label09:
        goto label11;

     label10:
        $r7 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<facebook4j.internal.json.TaggedJSONImpl: java.util.Map messageTags> = $r7;

     label11:
        $z3 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("object_id");

        if $z3 != 0 goto label12;

        $r18 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.String getRawString(java.lang.String,facebook4j.internal.org.json.JSONObject)>("object_id", r1);

        r0.<facebook4j.internal.json.TaggedJSONImpl: java.lang.String objectId> = $r18;

     label12:
        $r8 = new facebook4j.internal.json.PrivacyJSONImpl;

        $r9 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: facebook4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("privacy");

        specialinvoke $r8.<facebook4j.internal.json.PrivacyJSONImpl: void <init>(facebook4j.internal.org.json.JSONObject)>($r9);

        r0.<facebook4j.internal.json.TaggedJSONImpl: facebook4j.Privacy privacy> = $r8;

        $z4 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("to");

        if $z4 != 0 goto label15;

        $r12 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: facebook4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("to");

        $r13 = virtualinvoke $r12.<facebook4j.internal.org.json.JSONObject: facebook4j.internal.org.json.JSONArray getJSONArray(java.lang.String)>("data");

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r0.<facebook4j.internal.json.TaggedJSONImpl: java.util.List 'to'> = $r14;

        i4 = 0;

     label13:
        $i0 = virtualinvoke $r13.<facebook4j.internal.org.json.JSONArray: int length()>();

        if i4 >= $i0 goto label14;

        $r15 = virtualinvoke $r13.<facebook4j.internal.org.json.JSONArray: facebook4j.internal.org.json.JSONObject getJSONObject(int)>(i4);

        $r17 = r0.<facebook4j.internal.json.TaggedJSONImpl: java.util.List 'to'>;

        $r16 = new facebook4j.internal.json.CategoryJSONImpl;

        specialinvoke $r16.<facebook4j.internal.json.CategoryJSONImpl: void <init>(facebook4j.internal.org.json.JSONObject)>($r15);

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r16);

        i4 = i4 + 1;

        goto label13;

     label14:
        goto label16;

     label15:
        $r10 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<facebook4j.internal.json.TaggedJSONImpl: java.util.List 'to'> = $r10;

     label16:
        $r11 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.util.Date getISO8601Datetime(java.lang.String,facebook4j.internal.org.json.JSONObject)>("updated_time", r1);

        r0.<facebook4j.internal.json.TaggedJSONImpl: java.util.Date updatedTime> = $r11;

     label17:
        goto label19;

     label18:
        $r31 := @caughtexception;

        $r32 = new facebook4j.FacebookException;

        specialinvoke $r32.<facebook4j.FacebookException: void <init>(java.lang.Throwable)>($r31);

        throw $r32;

     label19:
        return;

        catch facebook4j.internal.org.json.JSONException from label01 to label17 with label18;
    }

    public java.lang.String getId()
    {
        java.lang.String $r1;
        facebook4j.internal.json.TaggedJSONImpl r0;

        r0 := @this: facebook4j.internal.json.TaggedJSONImpl;

        $r1 = r0.<facebook4j.internal.json.TaggedJSONImpl: java.lang.String id>;

        return $r1;
    }

    public java.lang.String getType()
    {
        java.lang.String $r1;
        facebook4j.internal.json.TaggedJSONImpl r0;

        r0 := @this: facebook4j.internal.json.TaggedJSONImpl;

        $r1 = r0.<facebook4j.internal.json.TaggedJSONImpl: java.lang.String type>;

        return $r1;
    }

    public facebook4j.Post getPost()
    {
        facebook4j.Post $r1;
        facebook4j.internal.json.TaggedJSONImpl r0;

        r0 := @this: facebook4j.internal.json.TaggedJSONImpl;

        $r1 = r0.<facebook4j.internal.json.TaggedJSONImpl: facebook4j.Post post>;

        return $r1;
    }

    public facebook4j.Photo getPhoto()
    {
        facebook4j.internal.json.TaggedJSONImpl r0;
        facebook4j.Photo $r1;

        r0 := @this: facebook4j.internal.json.TaggedJSONImpl;

        $r1 = r0.<facebook4j.internal.json.TaggedJSONImpl: facebook4j.Photo photo>;

        return $r1;
    }

    public facebook4j.Video getVideo()
    {
        facebook4j.Video $r1;
        facebook4j.internal.json.TaggedJSONImpl r0;

        r0 := @this: facebook4j.internal.json.TaggedJSONImpl;

        $r1 = r0.<facebook4j.internal.json.TaggedJSONImpl: facebook4j.Video video>;

        return $r1;
    }

    public java.lang.String getMessage()
    {
        java.lang.String $r1;
        facebook4j.internal.json.TaggedJSONImpl r0;

        r0 := @this: facebook4j.internal.json.TaggedJSONImpl;

        $r1 = r0.<facebook4j.internal.json.TaggedJSONImpl: java.lang.String message>;

        return $r1;
    }

    public java.util.Map getMessageTags()
    {
        facebook4j.internal.json.TaggedJSONImpl r0;
        java.util.Map $r1;

        r0 := @this: facebook4j.internal.json.TaggedJSONImpl;

        $r1 = r0.<facebook4j.internal.json.TaggedJSONImpl: java.util.Map messageTags>;

        return $r1;
    }

    public java.lang.String getObjectId()
    {
        java.lang.String $r1;
        facebook4j.internal.json.TaggedJSONImpl r0;

        r0 := @this: facebook4j.internal.json.TaggedJSONImpl;

        $r1 = r0.<facebook4j.internal.json.TaggedJSONImpl: java.lang.String objectId>;

        return $r1;
    }

    public facebook4j.Privacy getPrivacy()
    {
        facebook4j.Privacy $r1;
        facebook4j.internal.json.TaggedJSONImpl r0;

        r0 := @this: facebook4j.internal.json.TaggedJSONImpl;

        $r1 = r0.<facebook4j.internal.json.TaggedJSONImpl: facebook4j.Privacy privacy>;

        return $r1;
    }

    public java.util.List getTo()
    {
        java.util.List $r1;
        facebook4j.internal.json.TaggedJSONImpl r0;

        r0 := @this: facebook4j.internal.json.TaggedJSONImpl;

        $r1 = r0.<facebook4j.internal.json.TaggedJSONImpl: java.util.List 'to'>;

        return $r1;
    }

    public java.util.Date getUpdatedTime()
    {
        facebook4j.internal.json.TaggedJSONImpl r0;
        java.util.Date $r1;

        r0 := @this: facebook4j.internal.json.TaggedJSONImpl;

        $r1 = r0.<facebook4j.internal.json.TaggedJSONImpl: java.util.Date updatedTime>;

        return $r1;
    }

    static facebook4j.ResponseList createTaggedList(facebook4j.internal.http.HttpResponse, facebook4j.conf.Configuration) throws facebook4j.FacebookException
    {
        facebook4j.conf.Configuration r0;
        facebook4j.internal.http.HttpResponse r1;
        facebook4j.internal.json.ResponseListImpl $r4;
        facebook4j.internal.json.TaggedJSONImpl $r7;
        facebook4j.internal.org.json.JSONObject $r2, $r6;
        facebook4j.internal.org.json.JSONException $r8;
        facebook4j.FacebookException $r9;
        int $i0, i1;
        facebook4j.Tagged[] $r5;
        facebook4j.internal.org.json.JSONArray $r3;
        boolean $z0, $z1, $z2;

        r1 := @parameter0: facebook4j.internal.http.HttpResponse;

        r0 := @parameter1: facebook4j.conf.Configuration;

     label1:
        $z0 = interfaceinvoke r0.<facebook4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z0 == 0 goto label2;

        staticinvoke <facebook4j.internal.json.DataObjectFactoryUtil: void clearThreadLocalMap()>();

     label2:
        $r2 = virtualinvoke r1.<facebook4j.internal.http.HttpResponse: facebook4j.internal.org.json.JSONObject asJSONObject()>();

        $r3 = virtualinvoke $r2.<facebook4j.internal.org.json.JSONObject: facebook4j.internal.org.json.JSONArray getJSONArray(java.lang.String)>("data");

        $i0 = virtualinvoke $r3.<facebook4j.internal.org.json.JSONArray: int length()>();

        $r4 = new facebook4j.internal.json.ResponseListImpl;

        $r5 = newarray (facebook4j.Tagged)[0];

        specialinvoke $r4.<facebook4j.internal.json.ResponseListImpl: void <init>(int,facebook4j.internal.org.json.JSONObject,java.lang.Object[])>($i0, $r2, $r5);

        i1 = 0;

     label3:
        if i1 >= $i0 goto label5;

        $r6 = virtualinvoke $r3.<facebook4j.internal.org.json.JSONArray: facebook4j.internal.org.json.JSONObject getJSONObject(int)>(i1);

        $r7 = new facebook4j.internal.json.TaggedJSONImpl;

        specialinvoke $r7.<facebook4j.internal.json.TaggedJSONImpl: void <init>(facebook4j.internal.org.json.JSONObject)>($r6);

        $z2 = interfaceinvoke r0.<facebook4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z2 == 0 goto label4;

        staticinvoke <facebook4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r7, $r6);

     label4:
        interfaceinvoke $r4.<facebook4j.ResponseList: boolean add(java.lang.Object)>($r7);

        i1 = i1 + 1;

        goto label3;

     label5:
        $z1 = interfaceinvoke r0.<facebook4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z1 == 0 goto label6;

        staticinvoke <facebook4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r4, $r3);

     label6:
        return $r4;

     label7:
        $r8 := @caughtexception;

        $r9 = new facebook4j.FacebookException;

        specialinvoke $r9.<facebook4j.FacebookException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

        catch facebook4j.internal.org.json.JSONException from label1 to label6 with label7;
    }

    public boolean equals(java.lang.Object)
    {
        facebook4j.internal.json.TaggedJSONImpl r0, r2;
        java.lang.Object r1;
        java.lang.String $r3, $r4, $r5, $r6;
        boolean $z0, $z1;

        r0 := @this: facebook4j.internal.json.TaggedJSONImpl;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof facebook4j.internal.json.TaggedJSONImpl;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (facebook4j.internal.json.TaggedJSONImpl) r1;

        $r3 = r0.<facebook4j.internal.json.TaggedJSONImpl: java.lang.String id>;

        if $r3 == null goto label3;

        $r6 = r0.<facebook4j.internal.json.TaggedJSONImpl: java.lang.String id>;

        $r5 = r2.<facebook4j.internal.json.TaggedJSONImpl: java.lang.String id>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label5;

        goto label4;

     label3:
        $r4 = r2.<facebook4j.internal.json.TaggedJSONImpl: java.lang.String id>;

        if $r4 == null goto label5;

     label4:
        return 0;

     label5:
        return 1;
    }

    public int hashCode()
    {
        facebook4j.internal.json.TaggedJSONImpl r0;
        int $i0;
        java.lang.String $r1, $r2;

        r0 := @this: facebook4j.internal.json.TaggedJSONImpl;

        $r1 = r0.<facebook4j.internal.json.TaggedJSONImpl: java.lang.String id>;

        if $r1 == null goto label1;

        $r2 = r0.<facebook4j.internal.json.TaggedJSONImpl: java.lang.String id>;

        $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public java.lang.String toString()
    {
        java.util.Date $r37;
        facebook4j.Privacy $r31;
        facebook4j.internal.json.TaggedJSONImpl r2;
        java.util.Map $r24;
        java.util.List $r34;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r6, $r8, $r9, $r10, $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r22, $r23, $r25, $r26, $r28, $r29, $r30, $r32, $r33, $r35, $r36, $r38, $r39;
        facebook4j.Video $r17;
        facebook4j.Post $r11;
        java.lang.String $r3, $r7, $r20, $r27, $r40;
        facebook4j.Photo $r14;

        r2 := @this: facebook4j.internal.json.TaggedJSONImpl;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TaggedJSONImpl{id=\'");

        $r3 = r2.<facebook4j.internal.json.TaggedJSONImpl: java.lang.String id>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type=\'");

        $r7 = r2.<facebook4j.internal.json.TaggedJSONImpl: java.lang.String type>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", post=");

        $r11 = r2.<facebook4j.internal.json.TaggedJSONImpl: facebook4j.Post post>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", photo=");

        $r14 = r2.<facebook4j.internal.json.TaggedJSONImpl: facebook4j.Photo photo>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", video=");

        $r17 = r2.<facebook4j.internal.json.TaggedJSONImpl: facebook4j.Video video>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", message=\'");

        $r20 = r2.<facebook4j.internal.json.TaggedJSONImpl: java.lang.String message>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", messageTags=");

        $r24 = r2.<facebook4j.internal.json.TaggedJSONImpl: java.util.Map messageTags>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", objectId=\'");

        $r27 = r2.<facebook4j.internal.json.TaggedJSONImpl: java.lang.String objectId>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", privacy=");

        $r31 = r2.<facebook4j.internal.json.TaggedJSONImpl: facebook4j.Privacy privacy>;

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", to=");

        $r34 = r2.<facebook4j.internal.json.TaggedJSONImpl: java.util.List 'to'>;

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", updatedTime=");

        $r37 = r2.<facebook4j.internal.json.TaggedJSONImpl: java.util.Date updatedTime>;

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r40;
    }

    public volatile facebook4j.FacebookResponse$Metadata getMetadata()
    {
        facebook4j.internal.json.TaggedJSONImpl r0;
        facebook4j.FacebookResponse$Metadata $r1;

        r0 := @this: facebook4j.internal.json.TaggedJSONImpl;

        $r1 = specialinvoke r0.<facebook4j.internal.json.FacebookResponseImpl: facebook4j.FacebookResponse$Metadata getMetadata()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <facebook4j.internal.json.TaggedJSONImpl: long serialVersionUID> = -6025394310112011794L;

        return;
    }
}
