class org.apache.solr.client.solrj.impl.LBHttpSolrServer$ServerWrapper extends java.lang.Object
{
    final org.apache.solr.client.solrj.impl.HttpSolrServer solrServer;
    long lastUsed;
    long lastChecked;
    boolean standard;
    int failedPings;

    public void <init>(org.apache.solr.client.solrj.impl.HttpSolrServer)
    {
        org.apache.solr.client.solrj.impl.LBHttpSolrServer$ServerWrapper r0;
        org.apache.solr.client.solrj.impl.HttpSolrServer r1;

        r0 := @this: org.apache.solr.client.solrj.impl.LBHttpSolrServer$ServerWrapper;

        r1 := @parameter0: org.apache.solr.client.solrj.impl.HttpSolrServer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.solr.client.solrj.impl.LBHttpSolrServer$ServerWrapper: boolean standard> = 1;

        r0.<org.apache.solr.client.solrj.impl.LBHttpSolrServer$ServerWrapper: int failedPings> = 0;

        r0.<org.apache.solr.client.solrj.impl.LBHttpSolrServer$ServerWrapper: org.apache.solr.client.solrj.impl.HttpSolrServer solrServer> = r1;

        return;
    }

    public java.lang.String toString()
    {
        org.apache.solr.client.solrj.impl.LBHttpSolrServer$ServerWrapper r0;
        java.lang.String $r2;
        org.apache.solr.client.solrj.impl.HttpSolrServer $r1;

        r0 := @this: org.apache.solr.client.solrj.impl.LBHttpSolrServer$ServerWrapper;

        $r1 = r0.<org.apache.solr.client.solrj.impl.LBHttpSolrServer$ServerWrapper: org.apache.solr.client.solrj.impl.HttpSolrServer solrServer>;

        $r2 = virtualinvoke $r1.<org.apache.solr.client.solrj.impl.HttpSolrServer: java.lang.String getBaseURL()>();

        return $r2;
    }

    public java.lang.String getKey()
    {
        org.apache.solr.client.solrj.impl.LBHttpSolrServer$ServerWrapper r0;
        java.lang.String $r2;
        org.apache.solr.client.solrj.impl.HttpSolrServer $r1;

        r0 := @this: org.apache.solr.client.solrj.impl.LBHttpSolrServer$ServerWrapper;

        $r1 = r0.<org.apache.solr.client.solrj.impl.LBHttpSolrServer$ServerWrapper: org.apache.solr.client.solrj.impl.HttpSolrServer solrServer>;

        $r2 = virtualinvoke $r1.<org.apache.solr.client.solrj.impl.HttpSolrServer: java.lang.String getBaseURL()>();

        return $r2;
    }

    public int hashCode()
    {
        int $i0;
        org.apache.solr.client.solrj.impl.LBHttpSolrServer$ServerWrapper r0;
        java.lang.String $r1;

        r0 := @this: org.apache.solr.client.solrj.impl.LBHttpSolrServer$ServerWrapper;

        $r1 = virtualinvoke r0.<org.apache.solr.client.solrj.impl.LBHttpSolrServer$ServerWrapper: java.lang.String getKey()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.solr.client.solrj.impl.LBHttpSolrServer$ServerWrapper r0, $r3;
        java.lang.Object r1;
        java.lang.String $r2, $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.solr.client.solrj.impl.LBHttpSolrServer$ServerWrapper;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.apache.solr.client.solrj.impl.LBHttpSolrServer$ServerWrapper;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<org.apache.solr.client.solrj.impl.LBHttpSolrServer$ServerWrapper: java.lang.String getKey()>();

        $r3 = (org.apache.solr.client.solrj.impl.LBHttpSolrServer$ServerWrapper) r1;

        $r4 = virtualinvoke $r3.<org.apache.solr.client.solrj.impl.LBHttpSolrServer$ServerWrapper: java.lang.String getKey()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        return $z1;
    }
}
