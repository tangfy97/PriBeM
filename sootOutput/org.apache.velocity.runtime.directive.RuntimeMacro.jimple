public class org.apache.velocity.runtime.directive.RuntimeMacro extends org.apache.velocity.runtime.directive.Directive
{
    private java.lang.String macroName;
    private java.lang.String literal;
    private org.apache.velocity.runtime.parser.node.Node node;
    protected boolean strictRef;
    private java.lang.String badArgsErrorMsg;

    public void <init>(java.lang.String)
    {
        org.apache.velocity.runtime.directive.RuntimeMacro r0;
        java.lang.String r1, $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.apache.velocity.runtime.directive.RuntimeMacro;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.velocity.runtime.directive.Directive: void <init>()>();

        r0.<org.apache.velocity.runtime.directive.RuntimeMacro: java.lang.String literal> = null;

        r0.<org.apache.velocity.runtime.directive.RuntimeMacro: org.apache.velocity.runtime.parser.node.Node node> = null;

        r0.<org.apache.velocity.runtime.directive.RuntimeMacro: boolean strictRef> = 0;

        r0.<org.apache.velocity.runtime.directive.RuntimeMacro: java.lang.String badArgsErrorMsg> = null;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null arguments");

        throw $r3;

     label1:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String intern()>();

        r0.<org.apache.velocity.runtime.directive.RuntimeMacro: java.lang.String macroName> = $r2;

        return;
    }

    public java.lang.String getName()
    {
        org.apache.velocity.runtime.directive.RuntimeMacro r0;
        java.lang.String $r1;

        r0 := @this: org.apache.velocity.runtime.directive.RuntimeMacro;

        $r1 = r0.<org.apache.velocity.runtime.directive.RuntimeMacro: java.lang.String macroName>;

        return $r1;
    }

    public java.lang.String getScopeName()
    {
        org.apache.velocity.runtime.directive.RuntimeMacro r0;

        r0 := @this: org.apache.velocity.runtime.directive.RuntimeMacro;

        return "macro";
    }

    public int getType()
    {
        org.apache.velocity.runtime.directive.RuntimeMacro r0;

        r0 := @this: org.apache.velocity.runtime.directive.RuntimeMacro;

        return 2;
    }

    public void init(org.apache.velocity.runtime.RuntimeServices, org.apache.velocity.context.InternalContextAdapter, org.apache.velocity.runtime.parser.node.Node)
    {
        org.apache.velocity.exception.TemplateInitException $r20;
        org.apache.velocity.runtime.RuntimeServices r1, $r6;
        java.lang.StringBuffer $r8, $r9, $r12, $r13, $r15, $r16, $r18;
        int $i0, i1, $i2;
        org.apache.velocity.runtime.directive.RuntimeMacro r0;
        org.apache.velocity.runtime.parser.Token $r4, $r10;
        java.lang.String $r5, $r11, $r14, $r17, $r19, $r21, $r22, $r23;
        org.apache.velocity.runtime.parser.node.Node r3, $r7;
        boolean $z0, $z1, $z2, $z3;
        org.apache.velocity.context.InternalContextAdapter r2;

        r0 := @this: org.apache.velocity.runtime.directive.RuntimeMacro;

        r1 := @parameter0: org.apache.velocity.runtime.RuntimeServices;

        r2 := @parameter1: org.apache.velocity.context.InternalContextAdapter;

        r3 := @parameter2: org.apache.velocity.runtime.parser.node.Node;

        specialinvoke r0.<org.apache.velocity.runtime.directive.Directive: void init(org.apache.velocity.runtime.RuntimeServices,org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.Node)>(r1, r2, r3);

        r0.<org.apache.velocity.runtime.directive.RuntimeMacro: org.apache.velocity.runtime.RuntimeServices rsvc> = r1;

        r0.<org.apache.velocity.runtime.directive.RuntimeMacro: org.apache.velocity.runtime.parser.node.Node node> = r3;

        $r4 = interfaceinvoke r3.<org.apache.velocity.runtime.parser.node.Node: org.apache.velocity.runtime.parser.Token getLastToken()>();

        $r5 = $r4.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>(")");

        if $z0 != 0 goto label1;

        $r23 = $r4.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $z3 = virtualinvoke $r23.<java.lang.String: boolean startsWith(java.lang.String)>("#end");

        if $z3 == 0 goto label2;

     label1:
        $r6 = r0.<org.apache.velocity.runtime.directive.RuntimeMacro: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $z1 = interfaceinvoke $r6.<org.apache.velocity.runtime.RuntimeServices: boolean getBoolean(java.lang.String,boolean)>("runtime.references.strict", 0);

        r0.<org.apache.velocity.runtime.directive.RuntimeMacro: boolean strictRef> = $z1;

     label2:
        i1 = 0;

     label3:
        $i2 = interfaceinvoke r3.<org.apache.velocity.runtime.parser.node.Node: int jjtGetNumChildren()>();

        if i1 >= $i2 goto label5;

        $r7 = interfaceinvoke r3.<org.apache.velocity.runtime.parser.node.Node: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>(i1);

        $i0 = interfaceinvoke $r7.<org.apache.velocity.runtime.parser.node.Node: int getType()>();

        if $i0 != 10 goto label4;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid arg \'");

        $r10 = interfaceinvoke $r7.<org.apache.velocity.runtime.parser.node.Node: org.apache.velocity.runtime.parser.Token getFirstToken()>();

        $r11 = $r10.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        $r12 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' in macro #");

        $r14 = r0.<org.apache.velocity.runtime.directive.RuntimeMacro: java.lang.String macroName>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" at ");

        $r17 = staticinvoke <org.apache.velocity.runtime.log.Log: java.lang.String formatFileString(org.apache.velocity.runtime.parser.node.Node)>($r7);

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.apache.velocity.runtime.directive.RuntimeMacro: java.lang.String badArgsErrorMsg> = $r19;

        $z2 = r0.<org.apache.velocity.runtime.directive.RuntimeMacro: boolean strictRef>;

        if $z2 == 0 goto label4;

        $r20 = new org.apache.velocity.exception.TemplateInitException;

        $r21 = r0.<org.apache.velocity.runtime.directive.RuntimeMacro: java.lang.String badArgsErrorMsg>;

        $r22 = interfaceinvoke r2.<org.apache.velocity.context.InternalContextAdapter: java.lang.String getCurrentTemplateName()>();

        specialinvoke $r20.<org.apache.velocity.exception.TemplateInitException: void <init>(java.lang.String,java.lang.String,int,int)>($r21, $r22, 0, 0);

        throw $r20;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return;
    }

    private java.lang.String getLiteral()
    {
        org.apache.commons.lang.text.StrBuilder $r2;
        org.apache.velocity.runtime.directive.RuntimeMacro r0;
        org.apache.velocity.runtime.parser.Token $r7, r9;
        java.lang.String $r1, $r4, $r5, $r8, $r10;
        org.apache.velocity.runtime.parser.node.Node $r3, $r6;

        r0 := @this: org.apache.velocity.runtime.directive.RuntimeMacro;

        $r1 = r0.<org.apache.velocity.runtime.directive.RuntimeMacro: java.lang.String literal>;

        if $r1 != null goto label4;

        $r2 = new org.apache.commons.lang.text.StrBuilder;

        specialinvoke $r2.<org.apache.commons.lang.text.StrBuilder: void <init>()>();

        $r3 = r0.<org.apache.velocity.runtime.directive.RuntimeMacro: org.apache.velocity.runtime.parser.node.Node node>;

        r9 = interfaceinvoke $r3.<org.apache.velocity.runtime.parser.node.Node: org.apache.velocity.runtime.parser.Token getFirstToken()>();

     label1:
        if r9 == null goto label2;

        $r6 = r0.<org.apache.velocity.runtime.directive.RuntimeMacro: org.apache.velocity.runtime.parser.node.Node node>;

        $r7 = interfaceinvoke $r6.<org.apache.velocity.runtime.parser.node.Node: org.apache.velocity.runtime.parser.Token getLastToken()>();

        if r9 == $r7 goto label2;

        $r8 = r9.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.String)>($r8);

        r9 = r9.<org.apache.velocity.runtime.parser.Token: org.apache.velocity.runtime.parser.Token next>;

        goto label1;

     label2:
        if r9 == null goto label3;

        $r5 = r9.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.String)>($r5);

     label3:
        $r4 = virtualinvoke $r2.<org.apache.commons.lang.text.StrBuilder: java.lang.String toString()>();

        r0.<org.apache.velocity.runtime.directive.RuntimeMacro: java.lang.String literal> = $r4;

     label4:
        $r10 = r0.<org.apache.velocity.runtime.directive.RuntimeMacro: java.lang.String literal>;

        return $r10;
    }

    public boolean render(org.apache.velocity.context.InternalContextAdapter, java.io.Writer, org.apache.velocity.runtime.parser.node.Node) throws java.io.IOException, org.apache.velocity.exception.ResourceNotFoundException, org.apache.velocity.exception.ParseErrorException, org.apache.velocity.exception.MethodInvocationException
    {
        org.apache.velocity.context.InternalContextAdapter r1;
        java.io.Writer r2;
        org.apache.velocity.runtime.directive.RuntimeMacro r0;
        org.apache.velocity.runtime.parser.node.Node r3;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.directive.RuntimeMacro;

        r1 := @parameter0: org.apache.velocity.context.InternalContextAdapter;

        r2 := @parameter1: java.io.Writer;

        r3 := @parameter2: org.apache.velocity.runtime.parser.node.Node;

        $z0 = virtualinvoke r0.<org.apache.velocity.runtime.directive.RuntimeMacro: boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node,org.apache.velocity.runtime.Renderable)>(r1, r2, r3, null);

        return $z0;
    }

    public boolean render(org.apache.velocity.context.InternalContextAdapter, java.io.Writer, org.apache.velocity.runtime.parser.node.Node, org.apache.velocity.runtime.Renderable) throws java.io.IOException, org.apache.velocity.exception.ResourceNotFoundException, org.apache.velocity.exception.ParseErrorException, org.apache.velocity.exception.MethodInvocationException
    {
        org.apache.velocity.exception.TemplateInitException $r55, $r69;
        org.apache.velocity.runtime.directive.RuntimeMacro r2;
        org.apache.velocity.exception.VelocityException $r73;
        java.lang.Throwable $r31;
        java.lang.StringBuffer $r11, $r13, $r14, $r17, $r36, $r38, $r39, $r41, $r47, $r49, $r50, $r52, $r59, $r60, $r62, $r66, $r70, $r71, $r72;
        java.lang.String $r1, $r4, $r5, $r8, $r12, $r16, $r18, $r20, $r22, $r23, $r27, $r29, $r37, $r40, $r42, $r48, $r51, $r53, $r58, $r61, $r63;
        org.apache.velocity.context.InternalContextAdapter r0;
        org.apache.velocity.runtime.directive.VelocimacroProxy $r24, r65;
        org.apache.velocity.runtime.Renderable r19;
        org.apache.velocity.exception.ParseErrorException $r68;
        java.io.IOException $r32;
        java.lang.RuntimeException $r43;
        org.apache.velocity.runtime.log.Log $r34, $r45;
        org.apache.velocity.runtime.directive.StopCommand $r54;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r25;
        java.io.Writer r7;
        org.apache.velocity.util.introspection.Info $r67;
        org.apache.velocity.runtime.RuntimeServices $r3, $r26, $r33, $r44;
        int $i0, $i1, $i2, i3, $i5;
        org.apache.velocity.runtime.parser.node.Node r15;
        org.apache.velocity.runtime.directive.Directive $r6, $r30;
        java.lang.Object $r28;

        r2 := @this: org.apache.velocity.runtime.directive.RuntimeMacro;

        r0 := @parameter0: org.apache.velocity.context.InternalContextAdapter;

        r7 := @parameter1: java.io.Writer;

        r15 := @parameter2: org.apache.velocity.runtime.parser.node.Node;

        r19 := @parameter3: org.apache.velocity.runtime.Renderable;

        r65 = null;

        $r1 = interfaceinvoke r0.<org.apache.velocity.context.InternalContextAdapter: java.lang.String getCurrentTemplateName()>();

        $r3 = r2.<org.apache.velocity.runtime.directive.RuntimeMacro: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r4 = r2.<org.apache.velocity.runtime.directive.RuntimeMacro: java.lang.String macroName>;

        $r5 = virtualinvoke r2.<org.apache.velocity.runtime.directive.RuntimeMacro: java.lang.String getTemplateName()>();

        $r6 = interfaceinvoke $r3.<org.apache.velocity.runtime.RuntimeServices: org.apache.velocity.runtime.directive.Directive getVelocimacro(java.lang.String,java.lang.String,java.lang.String)>($r4, $r5, $r1);

        if $r6 == null goto label01;

        r65 = (org.apache.velocity.runtime.directive.VelocimacroProxy) $r6;

     label01:
        if r65 != null goto label04;

        $r25 = interfaceinvoke r0.<org.apache.velocity.context.InternalContextAdapter: java.util.List getMacroLibraries()>();

        if $r25 == null goto label04;

        $i2 = interfaceinvoke $r25.<java.util.List: int size()>();

        i3 = $i2 - 1;

     label02:
        if i3 < 0 goto label04;

        $r26 = r2.<org.apache.velocity.runtime.directive.RuntimeMacro: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r27 = r2.<org.apache.velocity.runtime.directive.RuntimeMacro: java.lang.String macroName>;

        $r28 = interfaceinvoke $r25.<java.util.List: java.lang.Object get(int)>(i3);

        $r29 = (java.lang.String) $r28;

        $r30 = interfaceinvoke $r26.<org.apache.velocity.runtime.RuntimeServices: org.apache.velocity.runtime.directive.Directive getVelocimacro(java.lang.String,java.lang.String,java.lang.String)>($r27, $r29, $r1);

        if $r30 == null goto label03;

        r65 = (org.apache.velocity.runtime.directive.VelocimacroProxy) $r30;

        goto label04;

     label03:
        $i5 = (int) -1;

        i3 = i3 + $i5;

        goto label02;

     label04:
        if r65 == null goto label19;

     label05:
        $r24 = r65;

        if r19 == null goto label06;

        $z3 = 1;

        goto label07;

     label06:
        $z3 = 0;

     label07:
        virtualinvoke $r24.<org.apache.velocity.runtime.directive.VelocimacroProxy: void checkArgs(org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.Node,boolean)>(r0, r15, $z3);

     label08:
        goto label10;

     label09:
        $r55 := @caughtexception;

        $r68 = new org.apache.velocity.exception.ParseErrorException;

        $r66 = new java.lang.StringBuffer;

        specialinvoke $r66.<java.lang.StringBuffer: void <init>()>();

        $r58 = virtualinvoke $r55.<org.apache.velocity.exception.TemplateInitException: java.lang.String getMessage()>();

        $r59 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r58);

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" at ");

        $r61 = staticinvoke <org.apache.velocity.runtime.log.Log: java.lang.String formatFileString(org.apache.velocity.runtime.parser.node.Node)>(r15);

        $r62 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuffer: java.lang.String toString()>();

        $r67 = new org.apache.velocity.util.introspection.Info;

        specialinvoke $r67.<org.apache.velocity.util.introspection.Info: void <init>(org.apache.velocity.runtime.parser.node.Node)>(r15);

        specialinvoke $r68.<org.apache.velocity.exception.ParseErrorException: void <init>(java.lang.String,org.apache.velocity.util.introspection.Info)>($r63, $r67);

        throw $r68;

     label10:
        $r20 = r2.<org.apache.velocity.runtime.directive.RuntimeMacro: java.lang.String badArgsErrorMsg>;

        if $r20 == null goto label11;

        $r69 = new org.apache.velocity.exception.TemplateInitException;

        $r22 = r2.<org.apache.velocity.runtime.directive.RuntimeMacro: java.lang.String badArgsErrorMsg>;

        $r23 = interfaceinvoke r0.<org.apache.velocity.context.InternalContextAdapter: java.lang.String getCurrentTemplateName()>();

        $i0 = interfaceinvoke r15.<org.apache.velocity.runtime.parser.node.Node: int getColumn()>();

        $i1 = interfaceinvoke r15.<org.apache.velocity.runtime.parser.node.Node: int getLine()>();

        specialinvoke $r69.<org.apache.velocity.exception.TemplateInitException: void <init>(java.lang.String,java.lang.String,int,int)>($r22, $r23, $i0, $i1);

        throw $r69;

     label11:
        virtualinvoke r2.<org.apache.velocity.runtime.directive.RuntimeMacro: void preRender(org.apache.velocity.context.InternalContextAdapter)>(r0);

        $z1 = virtualinvoke r65.<org.apache.velocity.runtime.directive.VelocimacroProxy: boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node,org.apache.velocity.runtime.Renderable)>(r0, r7, r15, r19);

     label12:
        virtualinvoke r2.<org.apache.velocity.runtime.directive.RuntimeMacro: void postRender(org.apache.velocity.context.InternalContextAdapter)>(r0);

        return $z1;

     label13:
        $r54 := @caughtexception;

        $z2 = virtualinvoke $r54.<org.apache.velocity.runtime.directive.StopCommand: boolean isFor(java.lang.Object)>(r2);

        if $z2 != 0 goto label14;

        throw $r54;

     label14:
        virtualinvoke r2.<org.apache.velocity.runtime.directive.RuntimeMacro: void postRender(org.apache.velocity.context.InternalContextAdapter)>(r0);

        return 1;

     label15:
        $r43 := @caughtexception;

        $r44 = r2.<org.apache.velocity.runtime.directive.RuntimeMacro: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r45 = interfaceinvoke $r44.<org.apache.velocity.runtime.RuntimeServices: org.apache.velocity.runtime.log.Log getLog()>();

        $r70 = new java.lang.StringBuffer;

        specialinvoke $r70.<java.lang.StringBuffer: void <init>()>();

        $r47 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Exception in macro #");

        $r48 = r2.<org.apache.velocity.runtime.directive.RuntimeMacro: java.lang.String macroName>;

        $r49 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" called at ");

        $r51 = staticinvoke <org.apache.velocity.runtime.log.Log: java.lang.String formatFileString(org.apache.velocity.runtime.parser.node.Node)>(r15);

        $r52 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r51);

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r45.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r53);

        throw $r43;

     label16:
        $r32 := @caughtexception;

        $r33 = r2.<org.apache.velocity.runtime.directive.RuntimeMacro: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r34 = interfaceinvoke $r33.<org.apache.velocity.runtime.RuntimeServices: org.apache.velocity.runtime.log.Log getLog()>();

        $r71 = new java.lang.StringBuffer;

        specialinvoke $r71.<java.lang.StringBuffer: void <init>()>();

        $r36 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Exception in macro #");

        $r37 = r2.<org.apache.velocity.runtime.directive.RuntimeMacro: java.lang.String macroName>;

        $r38 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" called at ");

        $r40 = staticinvoke <org.apache.velocity.runtime.log.Log: java.lang.String formatFileString(org.apache.velocity.runtime.parser.node.Node)>(r15);

        $r41 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r34.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r42);

        throw $r32;

     label17:
        $r31 := @caughtexception;

     label18:
        virtualinvoke r2.<org.apache.velocity.runtime.directive.RuntimeMacro: void postRender(org.apache.velocity.context.InternalContextAdapter)>(r0);

        throw $r31;

     label19:
        $z0 = r2.<org.apache.velocity.runtime.directive.RuntimeMacro: boolean strictRef>;

        if $z0 == 0 goto label20;

        $r73 = new org.apache.velocity.exception.VelocityException;

        $r72 = new java.lang.StringBuffer;

        specialinvoke $r72.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Macro \'#");

        $r12 = r2.<org.apache.velocity.runtime.directive.RuntimeMacro: java.lang.String macroName>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is not defined at ");

        $r16 = staticinvoke <org.apache.velocity.runtime.log.Log: java.lang.String formatFileString(org.apache.velocity.runtime.parser.node.Node)>(r15);

        $r17 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r73.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String)>($r18);

        throw $r73;

     label20:
        $r8 = specialinvoke r2.<org.apache.velocity.runtime.directive.RuntimeMacro: java.lang.String getLiteral()>();

        virtualinvoke r7.<java.io.Writer: void write(java.lang.String)>($r8);

        return 1;

        catch org.apache.velocity.exception.TemplateInitException from label05 to label08 with label09;
        catch org.apache.velocity.runtime.directive.StopCommand from label11 to label12 with label13;
        catch java.lang.RuntimeException from label11 to label12 with label15;
        catch java.io.IOException from label11 to label12 with label16;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label18 with label17;
    }
}
