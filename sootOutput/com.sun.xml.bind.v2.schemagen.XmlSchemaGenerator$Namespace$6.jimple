class com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$6 extends com.sun.xml.bind.v2.schemagen.Tree$Term
{
    final javax.xml.namespace.QName val$ename;
    final com.sun.xml.bind.v2.model.core.ReferencePropertyInfo val$rp;
    final com.sun.xml.bind.v2.schemagen.Tree val$choice;
    final com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1;

    void <init>(com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace, javax.xml.namespace.QName, com.sun.xml.bind.v2.model.core.ReferencePropertyInfo, com.sun.xml.bind.v2.schemagen.Tree)
    {
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$6 r0;
        javax.xml.namespace.QName r2;
        com.sun.xml.bind.v2.schemagen.Tree r4;
        com.sun.xml.bind.v2.model.core.ReferencePropertyInfo r3;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace r1;

        r0 := @this: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$6;

        r1 := @parameter0: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace;

        r2 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: com.sun.xml.bind.v2.model.core.ReferencePropertyInfo;

        r4 := @parameter3: com.sun.xml.bind.v2.schemagen.Tree;

        r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$6: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1> = r1;

        r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$6: javax.xml.namespace.QName val$ename> = r2;

        r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$6: com.sun.xml.bind.v2.model.core.ReferencePropertyInfo val$rp> = r3;

        r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$6: com.sun.xml.bind.v2.schemagen.Tree val$choice> = r4;

        specialinvoke r0.<com.sun.xml.bind.v2.schemagen.Tree$Term: void <init>()>();

        return;
    }

    protected void write(com.sun.xml.bind.v2.schemagen.xmlschema.ContentModelContainer, boolean, boolean)
    {
        com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement $r1, $r5;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$6 r2;
        com.sun.xml.bind.v2.model.core.ReferencePropertyInfo $r9;
        com.sun.xml.bind.v2.schemagen.xmlschema.ComplexType $r10;
        com.sun.xml.bind.v2.schemagen.xmlschema.ContentModelContainer r0;
        javax.xml.namespace.QName $r3, $r8;
        java.lang.String $r4;
        com.sun.xml.bind.v2.schemagen.Form $r7;
        com.sun.xml.bind.v2.schemagen.Tree $r11;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace $r6;
        boolean $z0, z1, z2;

        r2 := @this: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$6;

        r0 := @parameter0: com.sun.xml.bind.v2.schemagen.xmlschema.ContentModelContainer;

        z2 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r1 = interfaceinvoke r0.<com.sun.xml.bind.v2.schemagen.xmlschema.ContentModelContainer: com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement element()>();

        $r3 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$6: javax.xml.namespace.QName val$ename>;

        $r4 = virtualinvoke $r3.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r5 = interfaceinvoke $r1.<com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement: com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement name(java.lang.String)>($r4);

        $r6 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$6: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1>;

        $r7 = staticinvoke <com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace: com.sun.xml.bind.v2.schemagen.Form access$1900(com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace)>($r6);

        $r8 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$6: javax.xml.namespace.QName val$ename>;

        virtualinvoke $r7.<com.sun.xml.bind.v2.schemagen.Form: void writeForm(com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement,javax.xml.namespace.QName)>($r5, $r8);

        $r9 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$6: com.sun.xml.bind.v2.model.core.ReferencePropertyInfo val$rp>;

        $z0 = interfaceinvoke $r9.<com.sun.xml.bind.v2.model.core.ReferencePropertyInfo: boolean isCollectionNillable()>();

        if $z0 == 0 goto label1;

        interfaceinvoke $r5.<com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement: com.sun.xml.bind.v2.schemagen.xmlschema.Element nillable(boolean)>(1);

     label1:
        virtualinvoke r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$6: void writeOccurs(com.sun.xml.bind.v2.schemagen.xmlschema.Occurs,boolean,boolean)>($r5, 1, z1);

        $r10 = interfaceinvoke $r5.<com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement: com.sun.xml.bind.v2.schemagen.xmlschema.ComplexType complexType()>();

        $r11 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$6: com.sun.xml.bind.v2.schemagen.Tree val$choice>;

        virtualinvoke $r11.<com.sun.xml.bind.v2.schemagen.Tree: void write(com.sun.xml.bind.v2.schemagen.xmlschema.TypeDefParticle)>($r10);

        return;
    }
}
