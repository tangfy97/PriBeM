public class org.apache.tika.detect.CompositeDetector extends java.lang.Object implements org.apache.tika.detect.Detector
{
    private static final long serialVersionUID;
    private final org.apache.tika.mime.MediaTypeRegistry registry;
    private final java.util.List detectors;

    public void <init>(org.apache.tika.mime.MediaTypeRegistry, java.util.List)
    {
        java.util.List r2;
        org.apache.tika.detect.CompositeDetector r0;
        org.apache.tika.mime.MediaTypeRegistry r1;

        r0 := @this: org.apache.tika.detect.CompositeDetector;

        r1 := @parameter0: org.apache.tika.mime.MediaTypeRegistry;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.tika.detect.CompositeDetector: org.apache.tika.mime.MediaTypeRegistry registry> = r1;

        r0.<org.apache.tika.detect.CompositeDetector: java.util.List detectors> = r2;

        return;
    }

    public void <init>(java.util.List)
    {
        java.util.List r2;
        org.apache.tika.detect.CompositeDetector r0;
        org.apache.tika.mime.MediaTypeRegistry $r1;

        r0 := @this: org.apache.tika.detect.CompositeDetector;

        r2 := @parameter0: java.util.List;

        $r1 = new org.apache.tika.mime.MediaTypeRegistry;

        specialinvoke $r1.<org.apache.tika.mime.MediaTypeRegistry: void <init>()>();

        specialinvoke r0.<org.apache.tika.detect.CompositeDetector: void <init>(org.apache.tika.mime.MediaTypeRegistry,java.util.List)>($r1, r2);

        return;
    }

    public transient void <init>(org.apache.tika.detect.Detector[])
    {
        java.util.List $r2;
        org.apache.tika.detect.CompositeDetector r0;
        org.apache.tika.detect.Detector[] r1;

        r0 := @this: org.apache.tika.detect.CompositeDetector;

        r1 := @parameter0: org.apache.tika.detect.Detector[];

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        specialinvoke r0.<org.apache.tika.detect.CompositeDetector: void <init>(java.util.List)>($r2);

        return;
    }

    public org.apache.tika.mime.MediaType detect(java.io.InputStream, org.apache.tika.metadata.Metadata) throws java.io.IOException
    {
        org.apache.tika.detect.CompositeDetector r0;
        java.util.Iterator $r2;
        org.apache.tika.mime.MediaTypeRegistry $r8;
        org.apache.tika.detect.Detector r4;
        org.apache.tika.mime.MediaType $r7, r9;
        java.util.List $r1;
        org.apache.tika.metadata.Metadata r6;
        java.lang.Object $r3;
        boolean $z0, $z1;
        java.io.InputStream r5;

        r0 := @this: org.apache.tika.detect.CompositeDetector;

        r5 := @parameter0: java.io.InputStream;

        r6 := @parameter1: org.apache.tika.metadata.Metadata;

        r9 = <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType OCTET_STREAM>;

        $r1 = virtualinvoke r0.<org.apache.tika.detect.CompositeDetector: java.util.List getDetectors()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.tika.detect.Detector) $r3;

        $r7 = interfaceinvoke r4.<org.apache.tika.detect.Detector: org.apache.tika.mime.MediaType detect(java.io.InputStream,org.apache.tika.metadata.Metadata)>(r5, r6);

        $r8 = r0.<org.apache.tika.detect.CompositeDetector: org.apache.tika.mime.MediaTypeRegistry registry>;

        $z1 = virtualinvoke $r8.<org.apache.tika.mime.MediaTypeRegistry: boolean isSpecializationOf(org.apache.tika.mime.MediaType,org.apache.tika.mime.MediaType)>($r7, r9);

        if $z1 == 0 goto label2;

        r9 = $r7;

     label2:
        goto label1;

     label3:
        return r9;
    }

    public java.util.List getDetectors()
    {
        java.util.List $r1, $r2;
        org.apache.tika.detect.CompositeDetector r0;

        r0 := @this: org.apache.tika.detect.CompositeDetector;

        $r1 = r0.<org.apache.tika.detect.CompositeDetector: java.util.List detectors>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.tika.detect.CompositeDetector: long serialVersionUID> = 5980683158436430252L;

        return;
    }
}
