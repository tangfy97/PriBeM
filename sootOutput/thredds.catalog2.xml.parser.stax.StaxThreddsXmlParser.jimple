public class thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser extends java.lang.Object implements thredds.catalog2.xml.parser.ThreddsXmlParser
{
    private org.slf4j.Logger log;
    private thredds.catalog2.xml.parser.stax.CatalogElementParser$Factory catElemParserFactory;

    public static thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser newInstance()
    {
        thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser $r0;

        $r0 = new thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser;

        specialinvoke $r0.<thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser: void <init>()>();

        return $r0;
    }

    private void <init>()
    {
        org.slf4j.Logger $r2;
        java.lang.Class $r1;
        thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser r0;
        thredds.catalog2.xml.parser.stax.CatalogElementParser$Factory $r3;

        r0 := @this: thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>($r1);

        r0.<thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser: org.slf4j.Logger log> = $r2;

        $r3 = new thredds.catalog2.xml.parser.stax.CatalogElementParser$Factory;

        specialinvoke $r3.<thredds.catalog2.xml.parser.stax.CatalogElementParser$Factory: void <init>()>();

        r0.<thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser: thredds.catalog2.xml.parser.stax.CatalogElementParser$Factory catElemParserFactory> = $r3;

        return;
    }

    private javax.xml.stream.XMLInputFactory getFactory()
    {
        javax.xml.stream.XMLInputFactory $r0;
        java.lang.Boolean $r1, $r2;
        thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser r3;

        r3 := @this: thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser;

        $r0 = staticinvoke <javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLInputFactory newInstance()>();

        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r0.<javax.xml.stream.XMLInputFactory: void setProperty(java.lang.String,java.lang.Object)>("javax.xml.stream.isCoalescing", $r1);

        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r0.<javax.xml.stream.XMLInputFactory: void setProperty(java.lang.String,java.lang.Object)>("javax.xml.stream.supportDTD", $r2);

        return $r0;
    }

    private thredds.catalog2.builder.CatalogBuilder readCatalogXML(javax.xml.transform.Source) throws thredds.catalog2.xml.parser.ThreddsXmlParserException
    {
        thredds.catalog2.xml.parser.stax.CatalogElementParser $r36;
        javax.xml.stream.XMLInputFactory $r1;
        thredds.catalog2.xml.parser.ThreddsXmlParserException $r44;
        javax.xml.stream.events.XMLEvent $r6;
        javax.xml.stream.XMLStreamException $r37;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r7, $r9, $r11, $r12, $r13, $r14, $r16, $r18, $r21, $r22, $r26, $r28, $r31, $r32, $r38, $r40, $r42, $r45, $r46, $r48;
        javax.xml.namespace.QName $r20, $r30;
        thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser r0;
        javax.xml.transform.Source r2;
        thredds.catalog2.simpleImpl.ThreddsBuilderFactoryImpl $r4;
        javax.xml.stream.events.EndElement $r19;
        java.lang.String $r15, $r23, $r33, $r35, $r41, $r43, $r47, $r49;
        thredds.catalog2.xml.parser.stax.CatalogElementParser$Factory $r24, $r34;
        javax.xml.stream.events.StartElement $r25, $r29;
        thredds.catalog2.builder.ThreddsBuilder r50;
        javax.xml.stream.XMLEventReader $r3;
        org.slf4j.Logger $r8, $r17, $r27, $r39;
        javax.xml.stream.Location $r10;
        thredds.catalog2.builder.CatalogBuilder $r5;

        r0 := @this: thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser;

        r2 := @parameter0: javax.xml.transform.Source;

     label01:
        $r1 = specialinvoke r0.<thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser: javax.xml.stream.XMLInputFactory getFactory()>();

        $r3 = virtualinvoke $r1.<javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLEventReader createXMLEventReader(javax.xml.transform.Source)>(r2);

        $r4 = new thredds.catalog2.simpleImpl.ThreddsBuilderFactoryImpl;

        specialinvoke $r4.<thredds.catalog2.simpleImpl.ThreddsBuilderFactoryImpl: void <init>()>();

        r50 = null;

     label02:
        $z5 = interfaceinvoke $r3.<javax.xml.stream.XMLEventReader: boolean hasNext()>();

        if $z5 == 0 goto label09;

        $r6 = interfaceinvoke $r3.<javax.xml.stream.XMLEventReader: javax.xml.stream.events.XMLEvent peek()>();

        $z0 = interfaceinvoke $r6.<javax.xml.stream.events.XMLEvent: boolean isEndDocument()>();

        if $z0 == 0 goto label03;

        interfaceinvoke $r3.<javax.xml.stream.XMLEventReader: java.lang.Object next()>();

        goto label09;

     label03:
        $z1 = interfaceinvoke $r6.<javax.xml.stream.events.XMLEvent: boolean isStartDocument()>();

        if $z1 == 0 goto label04;

        interfaceinvoke $r3.<javax.xml.stream.XMLEventReader: java.lang.Object next()>();

        goto label08;

     label04:
        $z2 = interfaceinvoke $r6.<javax.xml.stream.events.XMLEvent: boolean isStartElement()>();

        if $z2 == 0 goto label06;

        $r24 = r0.<thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser: thredds.catalog2.xml.parser.stax.CatalogElementParser$Factory catElemParserFactory>;

        $r25 = interfaceinvoke $r6.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.StartElement asStartElement()>();

        $z4 = virtualinvoke $r24.<thredds.catalog2.xml.parser.stax.CatalogElementParser$Factory: boolean isEventMyStartElement(javax.xml.stream.events.XMLEvent)>($r25);

        if $z4 == 0 goto label05;

        $r34 = r0.<thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser: thredds.catalog2.xml.parser.stax.CatalogElementParser$Factory catElemParserFactory>;

        $r35 = interfaceinvoke r2.<javax.xml.transform.Source: java.lang.String getSystemId()>();

        $r36 = virtualinvoke $r34.<thredds.catalog2.xml.parser.stax.CatalogElementParser$Factory: thredds.catalog2.xml.parser.stax.CatalogElementParser getNewParser(java.lang.String,javax.xml.stream.XMLEventReader,thredds.catalog2.builder.ThreddsBuilderFactory)>($r35, $r3, $r4);

        r50 = virtualinvoke $r36.<thredds.catalog2.xml.parser.stax.CatalogElementParser: thredds.catalog2.builder.ThreddsBuilder parse()>();

        goto label08;

     label05:
        staticinvoke <thredds.catalog2.xml.parser.stax.StaxThreddsXmlParserUtils: java.lang.String consumeElementAndConvertToXmlString(javax.xml.stream.XMLEventReader)>($r3);

        $r27 = r0.<thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser: org.slf4j.Logger log>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readCatalogXML(): Unrecognized start element [");

        $r29 = interfaceinvoke $r6.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.StartElement asStartElement()>();

        $r30 = interfaceinvoke $r29.<javax.xml.stream.events.StartElement: javax.xml.namespace.QName getName()>();

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r27.<org.slf4j.Logger: void warn(java.lang.String)>($r33);

        goto label08;

     label06:
        $z3 = interfaceinvoke $r6.<javax.xml.stream.events.XMLEvent: boolean isEndElement()>();

        if $z3 == 0 goto label07;

        $r17 = r0.<thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser: org.slf4j.Logger log>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readCatalogXML(): Unrecognized end element [");

        $r19 = interfaceinvoke $r6.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.EndElement asEndElement()>();

        $r20 = interfaceinvoke $r19.<javax.xml.stream.events.EndElement: javax.xml.namespace.QName getName()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r17.<org.slf4j.Logger: void error(java.lang.String)>($r23);

        goto label09;

     label07:
        $r8 = r0.<thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser: org.slf4j.Logger log>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readCatalogXML(): Unhandled event [");

        $r10 = interfaceinvoke $r6.<javax.xml.stream.events.XMLEvent: javax.xml.stream.Location getLocation()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String)>($r15);

        interfaceinvoke $r3.<javax.xml.stream.XMLEventReader: java.lang.Object next()>();

        goto label02;

     label08:
        goto label02;

     label09:
        interfaceinvoke $r3.<javax.xml.stream.XMLEventReader: void close()>();

        if r50 != null goto label11;

     label10:
        return null;

     label11:
        $r5 = (thredds.catalog2.builder.CatalogBuilder) r50;

     label12:
        return $r5;

     label13:
        $r37 := @caughtexception;

        $r39 = r0.<thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser: org.slf4j.Logger log>;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readCatalogXML(): Failed to parse catalog document: ");

        $r41 = virtualinvoke $r37.<javax.xml.stream.XMLStreamException: java.lang.String getMessage()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r39.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r43, $r37);

        $r44 = new thredds.catalog2.xml.parser.ThreddsXmlParserException;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse catalog document: ");

        $r47 = virtualinvoke $r37.<javax.xml.stream.XMLStreamException: java.lang.String getMessage()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r44.<thredds.catalog2.xml.parser.ThreddsXmlParserException: void <init>(java.lang.String,java.lang.Throwable)>($r49, $r37);

        throw $r44;

        catch javax.xml.stream.XMLStreamException from label01 to label10 with label13;
        catch javax.xml.stream.XMLStreamException from label11 to label12 with label13;
    }

    public thredds.catalog2.Catalog parse(java.net.URI) throws thredds.catalog2.xml.parser.ThreddsXmlParserException
    {
        org.slf4j.Logger $r6;
        javax.xml.transform.Source $r1;
        thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser r2;
        thredds.catalog2.builder.BuilderException $r5;
        thredds.catalog2.xml.parser.ThreddsXmlParserException $r7;
        java.net.URI r0;
        thredds.catalog2.builder.CatalogBuilder $r3;
        thredds.catalog2.Catalog $r4;

        r2 := @this: thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser;

        r0 := @parameter0: java.net.URI;

        $r1 = staticinvoke <thredds.catalog2.xml.parser.stax.StaxThreddsXmlParserUtils: javax.xml.transform.Source getSourceFromUri(java.net.URI)>(r0);

     label1:
        $r3 = specialinvoke r2.<thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser: thredds.catalog2.builder.CatalogBuilder readCatalogXML(javax.xml.transform.Source)>($r1);

        $r4 = interfaceinvoke $r3.<thredds.catalog2.builder.CatalogBuilder: thredds.catalog2.Catalog build()>();

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = r2.<thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser: org.slf4j.Logger log>;

        interfaceinvoke $r6.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("parse(): Failed to parse catalog document.", $r5);

        $r7 = new thredds.catalog2.xml.parser.ThreddsXmlParserException;

        specialinvoke $r7.<thredds.catalog2.xml.parser.ThreddsXmlParserException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to parse catalog document.", $r5);

        throw $r7;

        catch thredds.catalog2.builder.BuilderException from label1 to label2 with label3;
    }

    public thredds.catalog2.Catalog parse(java.io.File, java.net.URI) throws thredds.catalog2.xml.parser.ThreddsXmlParserException
    {
        thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser r0;
        thredds.catalog2.builder.BuilderException $r5;
        thredds.catalog2.xml.parser.ThreddsXmlParserException $r12;
        java.net.URI r2;
        java.lang.String $r9, $r11, $r15, $r17;
        thredds.catalog2.Catalog $r4;
        org.slf4j.Logger $r7;
        java.io.File r1;
        java.lang.StringBuilder $r6, $r8, $r10, $r13, $r14, $r16;
        thredds.catalog2.builder.CatalogBuilder $r3;

        r0 := @this: thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.net.URI;

     label1:
        $r3 = virtualinvoke r0.<thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser: thredds.catalog2.builder.CatalogBuilder parseIntoBuilder(java.io.File,java.net.URI)>(r1, r2);

        $r4 = interfaceinvoke $r3.<thredds.catalog2.builder.CatalogBuilder: thredds.catalog2.Catalog build()>();

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r7 = r0.<thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser: org.slf4j.Logger log>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parse(): Failed to parse catalog document: ");

        $r9 = virtualinvoke $r5.<thredds.catalog2.builder.BuilderException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r11, $r5);

        $r12 = new thredds.catalog2.xml.parser.ThreddsXmlParserException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse catalog document: ");

        $r15 = virtualinvoke $r5.<thredds.catalog2.builder.BuilderException: java.lang.String getMessage()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<thredds.catalog2.xml.parser.ThreddsXmlParserException: void <init>(java.lang.String,java.lang.Throwable)>($r17, $r5);

        throw $r12;

        catch thredds.catalog2.builder.BuilderException from label1 to label2 with label3;
    }

    public thredds.catalog2.Catalog parse(java.io.Reader, java.net.URI) throws thredds.catalog2.xml.parser.ThreddsXmlParserException
    {
        thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser r0;
        thredds.catalog2.builder.BuilderException $r5;
        thredds.catalog2.xml.parser.ThreddsXmlParserException $r12;
        java.net.URI r2;
        java.lang.String $r9, $r11, $r15, $r17;
        thredds.catalog2.Catalog $r4;
        org.slf4j.Logger $r7;
        java.io.Reader r1;
        java.lang.StringBuilder $r6, $r8, $r10, $r13, $r14, $r16;
        thredds.catalog2.builder.CatalogBuilder $r3;

        r0 := @this: thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: java.net.URI;

     label1:
        $r3 = virtualinvoke r0.<thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser: thredds.catalog2.builder.CatalogBuilder parseIntoBuilder(java.io.Reader,java.net.URI)>(r1, r2);

        $r4 = interfaceinvoke $r3.<thredds.catalog2.builder.CatalogBuilder: thredds.catalog2.Catalog build()>();

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r7 = r0.<thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser: org.slf4j.Logger log>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parse(): Failed to parse catalog document: ");

        $r9 = virtualinvoke $r5.<thredds.catalog2.builder.BuilderException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r11, $r5);

        $r12 = new thredds.catalog2.xml.parser.ThreddsXmlParserException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse catalog document: ");

        $r15 = virtualinvoke $r5.<thredds.catalog2.builder.BuilderException: java.lang.String getMessage()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<thredds.catalog2.xml.parser.ThreddsXmlParserException: void <init>(java.lang.String,java.lang.Throwable)>($r17, $r5);

        throw $r12;

        catch thredds.catalog2.builder.BuilderException from label1 to label2 with label3;
    }

    public thredds.catalog2.Catalog parse(java.io.InputStream, java.net.URI) throws thredds.catalog2.xml.parser.ThreddsXmlParserException
    {
        thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser r0;
        thredds.catalog2.builder.BuilderException $r5;
        thredds.catalog2.xml.parser.ThreddsXmlParserException $r12;
        java.net.URI r2;
        java.lang.String $r9, $r11, $r15, $r17;
        thredds.catalog2.Catalog $r4;
        org.slf4j.Logger $r7;
        java.lang.StringBuilder $r6, $r8, $r10, $r13, $r14, $r16;
        java.io.InputStream r1;
        thredds.catalog2.builder.CatalogBuilder $r3;

        r0 := @this: thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.net.URI;

     label1:
        $r3 = virtualinvoke r0.<thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser: thredds.catalog2.builder.CatalogBuilder parseIntoBuilder(java.io.InputStream,java.net.URI)>(r1, r2);

        $r4 = interfaceinvoke $r3.<thredds.catalog2.builder.CatalogBuilder: thredds.catalog2.Catalog build()>();

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r7 = r0.<thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser: org.slf4j.Logger log>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parse(): Failed to parse catalog document: ");

        $r9 = virtualinvoke $r5.<thredds.catalog2.builder.BuilderException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r11, $r5);

        $r12 = new thredds.catalog2.xml.parser.ThreddsXmlParserException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse catalog document: ");

        $r15 = virtualinvoke $r5.<thredds.catalog2.builder.BuilderException: java.lang.String getMessage()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<thredds.catalog2.xml.parser.ThreddsXmlParserException: void <init>(java.lang.String,java.lang.Throwable)>($r17, $r5);

        throw $r12;

        catch thredds.catalog2.builder.BuilderException from label1 to label2 with label3;
    }

    public thredds.catalog2.builder.CatalogBuilder parseIntoBuilder(java.net.URI) throws thredds.catalog2.xml.parser.ThreddsXmlParserException
    {
        java.net.URI r0;
        javax.xml.transform.Source $r1;
        thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser r2;
        thredds.catalog2.builder.CatalogBuilder $r3;

        r2 := @this: thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser;

        r0 := @parameter0: java.net.URI;

        $r1 = staticinvoke <thredds.catalog2.xml.parser.stax.StaxThreddsXmlParserUtils: javax.xml.transform.Source getSourceFromUri(java.net.URI)>(r0);

        $r3 = specialinvoke r2.<thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser: thredds.catalog2.builder.CatalogBuilder readCatalogXML(javax.xml.transform.Source)>($r1);

        return $r3;
    }

    public thredds.catalog2.builder.CatalogBuilder parseIntoBuilder(java.io.File, java.net.URI) throws thredds.catalog2.xml.parser.ThreddsXmlParserException
    {
        java.net.URI r1;
        javax.xml.transform.Source $r2;
        thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser r3;
        java.io.File r0;
        thredds.catalog2.builder.CatalogBuilder $r4;

        r3 := @this: thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.net.URI;

        $r2 = staticinvoke <thredds.catalog2.xml.parser.stax.StaxThreddsXmlParserUtils: javax.xml.transform.Source getSourceFromFile(java.io.File,java.net.URI)>(r0, r1);

        $r4 = specialinvoke r3.<thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser: thredds.catalog2.builder.CatalogBuilder readCatalogXML(javax.xml.transform.Source)>($r2);

        return $r4;
    }

    public thredds.catalog2.builder.CatalogBuilder parseIntoBuilder(java.io.Reader, java.net.URI) throws thredds.catalog2.xml.parser.ThreddsXmlParserException
    {
        javax.xml.transform.stream.StreamSource $r0;
        java.io.Reader r1;
        java.net.URI r2;
        java.lang.String $r3;
        thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser r4;
        thredds.catalog2.builder.CatalogBuilder $r5;

        r4 := @this: thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: java.net.URI;

        $r0 = new javax.xml.transform.stream.StreamSource;

        $r3 = virtualinvoke r2.<java.net.URI: java.lang.String toString()>();

        specialinvoke $r0.<javax.xml.transform.stream.StreamSource: void <init>(java.io.Reader,java.lang.String)>(r1, $r3);

        $r5 = specialinvoke r4.<thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser: thredds.catalog2.builder.CatalogBuilder readCatalogXML(javax.xml.transform.Source)>($r0);

        return $r5;
    }

    public thredds.catalog2.builder.CatalogBuilder parseIntoBuilder(java.io.InputStream, java.net.URI) throws thredds.catalog2.xml.parser.ThreddsXmlParserException
    {
        javax.xml.transform.stream.StreamSource $r0;
        java.net.URI r2;
        java.lang.String $r3;
        thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser r4;
        java.io.InputStream r1;
        thredds.catalog2.builder.CatalogBuilder $r5;

        r4 := @this: thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.net.URI;

        $r0 = new javax.xml.transform.stream.StreamSource;

        $r3 = virtualinvoke r2.<java.net.URI: java.lang.String toString()>();

        specialinvoke $r0.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream,java.lang.String)>(r1, $r3);

        $r5 = specialinvoke r4.<thredds.catalog2.xml.parser.stax.StaxThreddsXmlParser: thredds.catalog2.builder.CatalogBuilder readCatalogXML(javax.xml.transform.Source)>($r0);

        return $r5;
    }
}
