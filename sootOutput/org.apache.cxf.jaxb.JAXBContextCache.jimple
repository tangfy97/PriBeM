public final class org.apache.cxf.jaxb.JAXBContextCache extends java.lang.Object
{
    private static final java.util.Map JAXBCONTEXT_CACHE;
    private static final java.util.Map OBJECT_FACTORY_CACHE;

    private void <init>()
    {
        org.apache.cxf.jaxb.JAXBContextCache r0;

        r0 := @this: org.apache.cxf.jaxb.JAXBContextCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void clearCaches()
    {
        java.lang.Throwable $r4, $r5;
        java.util.Map $r0, $r1, $r2, $r3;

        $r0 = <org.apache.cxf.jaxb.JAXBContextCache: java.util.Map JAXBCONTEXT_CACHE>;

        entermonitor $r0;

     label01:
        $r1 = <org.apache.cxf.jaxb.JAXBContextCache: java.util.Map JAXBCONTEXT_CACHE>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        exitmonitor $r0;

     label02:
        goto label05;

     label03:
        $r5 := @caughtexception;

        exitmonitor $r0;

     label04:
        throw $r5;

     label05:
        $r2 = <org.apache.cxf.jaxb.JAXBContextCache: java.util.Map OBJECT_FACTORY_CACHE>;

        entermonitor $r2;

     label06:
        $r3 = <org.apache.cxf.jaxb.JAXBContextCache: java.util.Map OBJECT_FACTORY_CACHE>;

        interfaceinvoke $r3.<java.util.Map: void clear()>();

        exitmonitor $r2;

     label07:
        goto label10;

     label08:
        $r4 := @caughtexception;

        exitmonitor $r2;

     label09:
        throw $r4;

     label10:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public static void scanPackages(java.util.Set)
    {
        java.util.Set r0;
        java.util.Map $r1;

        r0 := @parameter0: java.util.Set;

        $r1 = <org.apache.cxf.jaxb.JAXBContextCache: java.util.Map OBJECT_FACTORY_CACHE>;

        staticinvoke <org.apache.cxf.jaxb.JAXBUtils: void scanPackages(java.util.Set,java.util.Map)>(r0, $r1);

        return;
    }

    public static org.apache.cxf.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.lang.Class) throws javax.xml.bind.JAXBException
    {
        java.util.HashSet $r0;
        java.lang.Class r1;
        org.apache.cxf.jaxb.JAXBContextCache$CachedContextAndSchemas $r2;

        r1 := @parameter0: java.lang.Class;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>(r1);

        staticinvoke <org.apache.cxf.jaxb.JAXBContextCache: void scanPackages(java.util.Set)>($r0);

        $r2 = staticinvoke <org.apache.cxf.jaxb.JAXBContextCache: org.apache.cxf.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)>($r0, null, null, null, 0);

        return $r2;
    }

    public static org.apache.cxf.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.lang.String, java.util.Map, java.lang.ClassLoader) throws javax.xml.bind.JAXBException
    {
        java.util.HashSet $r0;
        java.util.Map r3;
        java.lang.String r1;
        java.lang.ClassLoader r2;
        org.apache.cxf.jaxb.JAXBContextCache$CachedContextAndSchemas $r4;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.Map;

        r2 := @parameter2: java.lang.ClassLoader;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        staticinvoke <org.apache.cxf.jaxb.JAXBContextCache: void addPackage(java.util.Set,java.lang.String,java.lang.ClassLoader)>($r0, r1, r2);

        $r4 = staticinvoke <org.apache.cxf.jaxb.JAXBContextCache: org.apache.cxf.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)>($r0, null, r3, null, 1);

        return $r4;
    }

    public static org.apache.cxf.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set, java.lang.String, java.util.Map, java.util.Collection, boolean) throws javax.xml.bind.JAXBException
    {
        org.apache.cxf.jaxb.JAXBContextCache$CachedContextAndSchemas $r9, r31;
        java.util.Map r3, $r5, $r6, $r10, $r11, $r13, $r19;
        boolean $z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.util.Collection r4;
        java.util.Set r0, $r7, $r14, r17;
        javax.xml.bind.JAXBException $r25;
        java.lang.Throwable $r23, $r28;
        java.util.HashMap $r2;
        java.lang.String $r22, r29;
        javax.xml.bind.JAXBContext $r12, r32;
        java.security.PrivilegedActionException $r24;
        java.util.Map$Entry r33;
        java.util.Iterator $r1, $r8;
        org.apache.cxf.jaxb.JAXBContextCache$1 $r26;
        java.lang.Object $r15, $r16, $r18, $r20, $r21, $r27;
        java.lang.Class r30;

        r0 := @parameter0: java.util.Set;

        r29 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Map;

        r4 := @parameter3: java.util.Collection;

        z1 := @parameter4: boolean;

        $r1 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r21 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r30 = (java.lang.Class) $r21;

        $r22 = virtualinvoke r30.<java.lang.Class: java.lang.String getName()>();

        $z6 = virtualinvoke $r22.<java.lang.String: boolean endsWith(java.lang.String)>("ObjectFactory");

        if $z6 == 0 goto label02;

        $z7 = staticinvoke <org.apache.cxf.jaxb.JAXBContextCache: boolean checkObjectFactoryNamespaces(java.lang.Class)>(r30);

        if $z7 == 0 goto label02;

        r29 = null;

     label02:
        goto label01;

     label03:
        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        if r29 == null goto label04;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.sun.xml.bind.defaultNamespaceRemap", r29);

     label04:
        if r3 == null goto label05;

        interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r3);

     label05:
        r31 = null;

        r32 = null;

        if r4 == null goto label06;

        $z5 = interfaceinvoke r4.<java.util.Collection: boolean isEmpty()>();

        if $z5 == 0 goto label18;

     label06:
        $r5 = <org.apache.cxf.jaxb.JAXBContextCache: java.util.Map JAXBCONTEXT_CACHE>;

        entermonitor $r5;

     label07:
        if z1 == 0 goto label08;

        $r19 = <org.apache.cxf.jaxb.JAXBContextCache: java.util.Map JAXBCONTEXT_CACHE>;

        $r20 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r31 = (org.apache.cxf.jaxb.JAXBContextCache$CachedContextAndSchemas) $r20;

        goto label11;

     label08:
        $r6 = <org.apache.cxf.jaxb.JAXBContextCache: java.util.Map JAXBCONTEXT_CACHE>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z2 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r15 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r33 = (java.util.Map$Entry) $r15;

        $r16 = interfaceinvoke r33.<java.util.Map$Entry: java.lang.Object getKey()>();

        r17 = (java.util.Set) $r16;

        if r17 == null goto label10;

        $z4 = interfaceinvoke r17.<java.util.Set: boolean containsAll(java.util.Collection)>(r0);

        if $z4 == 0 goto label10;

        $r18 = interfaceinvoke r33.<java.util.Map$Entry: java.lang.Object getValue()>();

        r31 = (org.apache.cxf.jaxb.JAXBContextCache$CachedContextAndSchemas) $r18;

        goto label11;

     label10:
        goto label09;

     label11:
        if r31 == null goto label14;

        $r12 = virtualinvoke r31.<org.apache.cxf.jaxb.JAXBContextCache$CachedContextAndSchemas: javax.xml.bind.JAXBContext getContext()>();

        r32 = $r12;

        if $r12 != null goto label12;

        $r13 = <org.apache.cxf.jaxb.JAXBContextCache: java.util.Map JAXBCONTEXT_CACHE>;

        $r14 = virtualinvoke r31.<org.apache.cxf.jaxb.JAXBContextCache$CachedContextAndSchemas: java.util.Set getClasses()>();

        interfaceinvoke $r13.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r14);

        r31 = null;

        goto label14;

     label12:
        exitmonitor $r5;

     label13:
        return r31;

     label14:
        exitmonitor $r5;

     label15:
        goto label18;

     label16:
        $r28 := @caughtexception;

        exitmonitor $r5;

     label17:
        throw $r28;

     label18:
        if r32 != null goto label34;

     label19:
        r32 = staticinvoke <org.apache.cxf.jaxb.JAXBContextCache: javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)>(r0, $r2, r4);

     label20:
        goto label27;

     label21:
        $r25 := @caughtexception;

        $z8 = staticinvoke <org.apache.cxf.jaxb.JAXBContextCache: boolean addJaxbObjectFactory(javax.xml.bind.JAXBException,java.util.Set)>($r25, r0);

     label22:
        if r31 != null goto label26;

        if $z8 == 0 goto label26;

     label23:
        $r26 = new org.apache.cxf.jaxb.JAXBContextCache$1;

        specialinvoke $r26.<org.apache.cxf.jaxb.JAXBContextCache$1: void <init>(java.util.Set)>(r0);

        $r27 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r26);

        r32 = (javax.xml.bind.JAXBContext) $r27;

     label24:
        goto label22;

     label25:
        $r24 := @caughtexception;

        throw $r25;

     label26:
        if r32 != null goto label27;

        throw $r25;

     label27:
        $r9 = new org.apache.cxf.jaxb.JAXBContextCache$CachedContextAndSchemas;

        specialinvoke $r9.<org.apache.cxf.jaxb.JAXBContextCache$CachedContextAndSchemas: void <init>(javax.xml.bind.JAXBContext,java.util.Set)>(r32, r0);

        r31 = $r9;

        $r10 = <org.apache.cxf.jaxb.JAXBContextCache: java.util.Map JAXBCONTEXT_CACHE>;

        entermonitor $r10;

     label28:
        if r4 == null goto label29;

        $z3 = interfaceinvoke r4.<java.util.Collection: boolean isEmpty()>();

        if $z3 == 0 goto label30;

     label29:
        $r11 = <org.apache.cxf.jaxb.JAXBContextCache: java.util.Map JAXBCONTEXT_CACHE>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r9);

     label30:
        exitmonitor $r10;

     label31:
        goto label34;

     label32:
        $r23 := @caughtexception;

        exitmonitor $r10;

     label33:
        throw $r23;

     label34:
        return r31;

        catch java.lang.Throwable from label07 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
        catch javax.xml.bind.JAXBException from label19 to label20 with label21;
        catch java.security.PrivilegedActionException from label23 to label24 with label25;
        catch java.lang.Throwable from label28 to label31 with label32;
        catch java.lang.Throwable from label32 to label33 with label32;
    }

    private static boolean checkObjectFactoryNamespaces(java.lang.Class)
    {
        java.lang.reflect.Method[] $r1;
        int i0, i1;
        java.lang.'annotation'.Annotation $r3;
        java.lang.Class r0, $r5, $r6;
        java.lang.String $r7;
        javax.xml.bind.'annotation'.XmlElementDecl r4;
        java.lang.reflect.Method r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = $r1[i1];

        $r3 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljavax/xml/bind/annotation/XmlElementDecl;");

        r4 = (javax.xml.bind.'annotation'.XmlElementDecl) $r3;

        if r4 == null goto label2;

        $r5 = class "Ljavax/xml/bind/annotation/XmlElementDecl$GLOBAL;";

        $r6 = interfaceinvoke r4.<javax.xml.bind.'annotation'.XmlElementDecl: java.lang.Class scope()>();

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r4.<javax.xml.bind.'annotation'.XmlElementDecl: java.lang.String namespace()>();

        $z1 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r7);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private static javax.xml.bind.JAXBContext createContext(java.util.Set, java.util.Map, java.util.Collection) throws javax.xml.bind.JAXBException
    {
        java.util.Map r2;
        java.util.Set r1;
        java.lang.Exception $r57, $r59, $r60;
        java.lang.StringBuilder $r11, $r12, $r13, $r16, $r17, $r18, $r21, $r22, $r23, $r26, $r27, $r28, $r30, $r31, $r32, $r35, $r36, $r37, $r40, $r41, $r42, $r44, $r45, $r46, $r49, $r50, $r51;
        java.lang.Throwable $r67, $r68, $r69;
        java.lang.Object[] $r8, $r10, $r65;
        java.lang.String $r5, $r6, $r14, $r19, $r24, $r29, $r33, $r38, $r43, $r47, $r52, $r61, $r62, r71, r80, r81, r82, r83, r84, r85, r86, r87, r88;
        java.security.PrivilegedActionException $r56;
        java.lang.Class[] $r7, $r9, $r64, $r66;
        java.lang.RuntimeException $r58;
        java.lang.reflect.Method[] $r3;
        java.lang.reflect.Method r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Collection r0;
        javax.xml.bind.JAXBException r79;
        int $i0, $i1, $i2, i3, i4;
        javax.xml.bind.JAXBContext $r55, r78;
        org.apache.cxf.jaxb.JAXBContextCache$2 $r76;
        java.lang.Object $r15, $r20, $r25, $r34, $r39, $r48, $r53, $r54, $r63, $r72, $r73, $r74, $r75, $r77;
        java.lang.Class r70;

        r1 := @parameter0: java.util.Set;

        r2 := @parameter1: java.util.Map;

        r0 := @parameter2: java.util.Collection;

        if r0 == null goto label21;

        $z0 = interfaceinvoke r0.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label21;

        r70 = null;

        r71 = "com.sun.xml.bind.";

        r88 = "com.sun.xml.bind.";

        r87 = "com.sun.xml.bind.";

        r86 = "com.sun.xml.bind.";

        r85 = "com.sun.xml.bind.";

        r84 = "com.sun.xml.bind.";

        r83 = "com.sun.xml.bind.";

        r82 = "com.sun.xml.bind.";

        r81 = "com.sun.xml.bind.";

        r80 = "com.sun.xml.bind.";

     label01:
        r70 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: java.lang.Class loadClass(java.lang.String,java.lang.Class)>("com.sun.xml.bind.v2.ContextFactory", class "Lorg/apache/cxf/jaxb/JAXBContextCache;");

     label02:
        goto label07;

     label03:
        $r69 := @caughtexception;

     label04:
        r70 = staticinvoke <org.apache.cxf.common.classloader.ClassLoaderUtils: java.lang.Class loadClass(java.lang.String,java.lang.Class)>("com.sun.xml.internal.bind.v2.ContextFactory", class "Lorg/apache/cxf/jaxb/JAXBContextCache;");

        r71 = "com.sun.xml.internal.bind.";

        r88 = "com.sun.xml.internal.bind.";

        r87 = "com.sun.xml.internal.bind.";

        r86 = "com.sun.xml.internal.bind.";

        r85 = "com.sun.xml.internal.bind.";

        r84 = "com.sun.xml.internal.bind.";

        r83 = "com.sun.xml.internal.bind.";

        r82 = "com.sun.xml.internal.bind.";

        r81 = "com.sun.xml.internal.bind.";

        r80 = "com.sun.xml.internal.bind.";

     label05:
        goto label07;

     label06:
        $r68 := @caughtexception;

     label07:
        if r70 == null goto label21;

        $r3 = virtualinvoke r70.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        i3 = lengthof $r3;

        i4 = 0;

     label08:
        if i4 >= i3 goto label21;

        r4 = $r3[i4];

        $r5 = "createContext";

        $r6 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.String getName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label20;

        $r7 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r7;

        if $i0 != 9 goto label20;

     label09:
        $r8 = newarray (java.lang.Object)[9];

        $i1 = interfaceinvoke r1.<java.util.Set: int size()>();

        $r9 = newarray (java.lang.Class)[$i1];

        $r10 = interfaceinvoke r1.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r9);

        $r8[0] = $r10;

        $r8[1] = r0;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r81);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("subclassReplacements");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14);

        $r8[2] = $r15;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r82);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("defaultNamespaceRemap");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r19);

        $r8[3] = $r20;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r85);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c14n");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r24);

        if $r25 != null goto label10;

        $r72 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        goto label11;

     label10:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r86);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c14n");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        $r72 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r29);

     label11:
        $r8[4] = $r72;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r84);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("v2.model.annotation.RuntimeAnnotationReader");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        $r34 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r33);

        $r8[5] = $r34;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r83);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XmlAccessorFactory");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        $r39 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r38);

        if $r39 != null goto label12;

        $r73 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        goto label13;

     label12:
        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r80);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XmlAccessorFactory");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        $r73 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r43);

     label13:
        $r8[6] = $r73;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r87);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("treatEverythingNillable");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        $r48 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r47);

        if $r48 != null goto label14;

        $r74 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        goto label15;

     label14:
        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r88);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("treatEverythingNillable");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        $r74 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r52);

     label15:
        $r8[7] = $r74;

        $r53 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("retainReferenceToInfo");

        if $r53 != null goto label16;

        $r75 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        goto label17;

     label16:
        $r75 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("retainReferenceToInfo");

     label17:
        $r8[8] = $r75;

        $r54 = virtualinvoke r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r8);

        $r55 = (javax.xml.bind.JAXBContext) $r54;

     label18:
        return $r55;

     label19:
        $r67 := @caughtexception;

     label20:
        i4 = i4 + 1;

        goto label08;

     label21:
        $r76 = new org.apache.cxf.jaxb.JAXBContextCache$2;

        specialinvoke $r76.<org.apache.cxf.jaxb.JAXBContextCache$2: void <init>(java.util.Set,java.util.Map)>(r1, r2);

        $r77 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r76);

        r78 = (javax.xml.bind.JAXBContext) $r77;

     label22:
        goto label27;

     label23:
        $r56 := @caughtexception;

        $r57 = virtualinvoke $r56.<java.security.PrivilegedActionException: java.lang.Exception getException()>();

        $z2 = $r57 instanceof javax.xml.bind.JAXBException;

        if $z2 == 0 goto label26;

        $r60 = virtualinvoke $r56.<java.security.PrivilegedActionException: java.lang.Exception getException()>();

        r79 = (javax.xml.bind.JAXBException) $r60;

        $z3 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>("com.sun.xml.bind.defaultNamespaceRemap");

        if $z3 == 0 goto label24;

        $r61 = virtualinvoke r79.<javax.xml.bind.JAXBException: java.lang.String getMessage()>();

        if $r61 == null goto label24;

        $r62 = virtualinvoke r79.<javax.xml.bind.JAXBException: java.lang.String getMessage()>();

        $z4 = virtualinvoke $r62.<java.lang.String: boolean contains(java.lang.CharSequence)>("com.sun.xml.bind.defaultNamespaceRemap");

        if $z4 == 0 goto label24;

        $r63 = interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>("com.sun.xml.bind.defaultNamespaceRemap");

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("com.sun.xml.internal.bind.defaultNamespaceRemap", $r63);

        $i2 = interfaceinvoke r1.<java.util.Set: int size()>();

        $r64 = newarray (java.lang.Class)[$i2];

        $r65 = interfaceinvoke r1.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r64);

        $r66 = (java.lang.Class[]) $r65;

        r78 = staticinvoke <javax.xml.bind.JAXBContext: javax.xml.bind.JAXBContext newInstance(java.lang.Class[],java.util.Map)>($r66, r2);

        goto label25;

     label24:
        throw r79;

     label25:
        goto label27;

     label26:
        $r58 = new java.lang.RuntimeException;

        $r59 = virtualinvoke $r56.<java.security.PrivilegedActionException: java.lang.Exception getException()>();

        specialinvoke $r58.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r59);

        throw $r58;

     label27:
        return r78;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label09 to label18 with label19;
        catch java.security.PrivilegedActionException from label21 to label22 with label23;
    }

    private static boolean addJaxbObjectFactory(javax.xml.bind.JAXBException, java.util.Set)
    {
        byte[] $r4;
        java.io.ByteArrayOutputStream $r0;
        java.util.regex.Matcher $r6;
        java.lang.String $r3, $r7, $r8, $r15;
        boolean $z0, $z1, z2;
        java.io.PrintStream $r1;
        java.util.Set r17;
        javax.xml.bind.JAXBException r2;
        java.lang.Class $r9, $r16;
        java.lang.StringBuilder $r11, $r12, $r13, $r14;
        java.lang.ClassNotFoundException $r18;
        java.util.regex.Pattern $r5;
        java.lang.ClassLoader $r10;

        r2 := @parameter0: javax.xml.bind.JAXBException;

        r17 := @parameter1: java.util.Set;

        z2 = 0;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new java.io.PrintStream;

        specialinvoke $r1.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r0);

        virtualinvoke r2.<javax.xml.bind.JAXBException: void printStackTrace(java.io.PrintStream)>($r1);

        $r3 = new java.lang.String;

        $r4 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r3.<java.lang.String: void <init>(byte[])>($r4);

        $r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(?<=There\'s\\sno\\sObjectFactory\\swith\\san\\s@XmlElementDecl\\sfor\\sthe\\selement\\s\\{)\\S*(?=\\})");

        $r6 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

     label1:
        $z0 = virtualinvoke $r6.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label6;

        $r7 = virtualinvoke $r6.<java.util.regex.Matcher: java.lang.String group()>();

        $r8 = staticinvoke <org.apache.cxf.jaxb.JAXBUtils: java.lang.String namespaceURIToPackage(java.lang.String)>($r7);

     label2:
        $r9 = class "Lorg/apache/cxf/jaxb/JAXBContextCache;";

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ObjectFactory");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = virtualinvoke $r10.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r15);

        $z1 = interfaceinvoke r17.<java.util.Set: boolean contains(java.lang.Object)>($r16);

        if $z1 != 0 goto label3;

        interfaceinvoke r17.<java.util.Set: boolean add(java.lang.Object)>($r16);

        z2 = 1;

     label3:
        goto label5;

     label4:
        $r18 := @caughtexception;

     label5:
        goto label1;

     label6:
        return z2;

        catch java.lang.ClassNotFoundException from label2 to label3 with label4;
    }

    public static void addPackage(java.util.Set, java.lang.String, java.lang.ClassLoader)
    {
        boolean $z0, $z1;
        java.util.Set r0;
        java.lang.Exception $r25, $r26, $r27;
        java.lang.StringBuilder $r2, $r3, $r8, $r10, $r11, $r18, $r19, $r23, $r24, $r31, $r32, $r35, $r36;
        java.lang.ClassLoader r5;
        int $i0, $i1, $i3;
        java.lang.String $r4, $r9, $r12, $r16, $r20, r28, r29, r30;
        java.io.InputStreamReader $r33;
        java.lang.Class $r6, $r21;
        java.io.BufferedReader $r34;
        java.io.InputStream $r13;

        r0 := @parameter0: java.util.Set;

        r28 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.ClassLoader;

     label01:
        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".ObjectFactory");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r4, 0, r5);

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r6);

     label02:
        goto label04;

     label03:
        $r27 := @caughtexception;

     label04:
        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r9 = virtualinvoke r28.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/jaxb.index");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke r5.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>($r12);

        $r34 = new java.io.BufferedReader;

        $r33 = new java.io.InputStreamReader;

        specialinvoke $r33.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r13, "UTF-8");

        specialinvoke $r34.<java.io.BufferedReader: void <init>(java.io.Reader)>($r33);

        $z0 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>(r28);

        if $z0 != 0 goto label05;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        r29 = virtualinvoke $r34.<java.io.BufferedReader: java.lang.String readLine()>();

     label06:
        if r29 == null goto label12;

        $r16 = virtualinvoke r29.<java.lang.String: java.lang.String trim()>();

        r30 = $r16;

        $i0 = virtualinvoke $r16.<java.lang.String: int indexOf(java.lang.String)>("#");

        $i3 = (int) -1;

        if $i0 == $i3 goto label07;

        $i1 = virtualinvoke $r16.<java.lang.String: int indexOf(java.lang.String)>("#");

        r30 = virtualinvoke $r16.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label07:
        $z1 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>(r30);

        if $z1 != 0 goto label11;

     label08:
        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r20, 0, r5);

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r21);

     label09:
        goto label11;

     label10:
        $r26 := @caughtexception;

     label11:
        r29 = virtualinvoke $r34.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label06;

     label12:
        goto label14;

     label13:
        $r25 := @caughtexception;

     label14:
        return;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Exception from label04 to label12 with label13;
    }

    static void <clinit>()
    {
        org.apache.cxf.common.util.CacheMap $r0, $r1;

        $r0 = new org.apache.cxf.common.util.CacheMap;

        specialinvoke $r0.<org.apache.cxf.common.util.CacheMap: void <init>()>();

        <org.apache.cxf.jaxb.JAXBContextCache: java.util.Map JAXBCONTEXT_CACHE> = $r0;

        $r1 = new org.apache.cxf.common.util.CacheMap;

        specialinvoke $r1.<org.apache.cxf.common.util.CacheMap: void <init>()>();

        <org.apache.cxf.jaxb.JAXBContextCache: java.util.Map OBJECT_FACTORY_CACHE> = $r1;

        return;
    }
}
