class groovyjarjarantlr.SimpleTokenManager extends java.lang.Object implements groovyjarjarantlr.TokenManager, java.lang.Cloneable
{
    protected int maxToken;
    protected groovyjarjarantlr.collections.impl.Vector vocabulary;
    private java.util.Hashtable table;
    protected groovyjarjarantlr.Tool antlrTool;
    protected java.lang.String name;
    protected boolean readOnly;

    void <init>(java.lang.String, groovyjarjarantlr.Tool)
    {
        groovyjarjarantlr.TokenSymbol $r5;
        groovyjarjarantlr.Tool r1;
        groovyjarjarantlr.SimpleTokenManager r0;
        java.lang.String r2;
        groovyjarjarantlr.collections.impl.Vector $r3, $r6, $r7;
        java.util.Hashtable $r4;

        r0 := @this: groovyjarjarantlr.SimpleTokenManager;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: groovyjarjarantlr.Tool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<groovyjarjarantlr.SimpleTokenManager: int maxToken> = 4;

        r0.<groovyjarjarantlr.SimpleTokenManager: boolean readOnly> = 0;

        r0.<groovyjarjarantlr.SimpleTokenManager: groovyjarjarantlr.Tool antlrTool> = r1;

        r0.<groovyjarjarantlr.SimpleTokenManager: java.lang.String name> = r2;

        $r3 = new groovyjarjarantlr.collections.impl.Vector;

        specialinvoke $r3.<groovyjarjarantlr.collections.impl.Vector: void <init>(int)>(1);

        r0.<groovyjarjarantlr.SimpleTokenManager: groovyjarjarantlr.collections.impl.Vector vocabulary> = $r3;

        $r4 = new java.util.Hashtable;

        specialinvoke $r4.<java.util.Hashtable: void <init>()>();

        r0.<groovyjarjarantlr.SimpleTokenManager: java.util.Hashtable table> = $r4;

        $r5 = new groovyjarjarantlr.TokenSymbol;

        specialinvoke $r5.<groovyjarjarantlr.TokenSymbol: void <init>(java.lang.String)>("EOF");

        virtualinvoke $r5.<groovyjarjarantlr.TokenSymbol: void setTokenType(int)>(1);

        virtualinvoke r0.<groovyjarjarantlr.SimpleTokenManager: void define(groovyjarjarantlr.TokenSymbol)>($r5);

        $r6 = r0.<groovyjarjarantlr.SimpleTokenManager: groovyjarjarantlr.collections.impl.Vector vocabulary>;

        virtualinvoke $r6.<groovyjarjarantlr.collections.impl.Vector: void ensureCapacity(int)>(3);

        $r7 = r0.<groovyjarjarantlr.SimpleTokenManager: groovyjarjarantlr.collections.impl.Vector vocabulary>;

        virtualinvoke $r7.<groovyjarjarantlr.collections.impl.Vector: void setElementAt(java.lang.Object,int)>("NULL_TREE_LOOKAHEAD", 3);

        return;
    }

    public java.lang.Object clone()
    {
        java.lang.CloneNotSupportedException $r11;
        groovyjarjarantlr.Tool $r9, $r12;
        groovyjarjarantlr.SimpleTokenManager r0, r2;
        int $i0;
        java.lang.Object $r1, $r4, $r7;
        java.lang.String $r10;
        groovyjarjarantlr.collections.impl.Vector $r3, $r5;
        java.util.Hashtable $r6, $r8;

        r0 := @this: groovyjarjarantlr.SimpleTokenManager;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (groovyjarjarantlr.SimpleTokenManager) $r1;

        $r3 = r0.<groovyjarjarantlr.SimpleTokenManager: groovyjarjarantlr.collections.impl.Vector vocabulary>;

        $r4 = virtualinvoke $r3.<groovyjarjarantlr.collections.impl.Vector: java.lang.Object clone()>();

        $r5 = (groovyjarjarantlr.collections.impl.Vector) $r4;

        r2.<groovyjarjarantlr.SimpleTokenManager: groovyjarjarantlr.collections.impl.Vector vocabulary> = $r5;

        $r6 = r0.<groovyjarjarantlr.SimpleTokenManager: java.util.Hashtable table>;

        $r7 = virtualinvoke $r6.<java.util.Hashtable: java.lang.Object clone()>();

        $r8 = (java.util.Hashtable) $r7;

        r2.<groovyjarjarantlr.SimpleTokenManager: java.util.Hashtable table> = $r8;

        $i0 = r0.<groovyjarjarantlr.SimpleTokenManager: int maxToken>;

        r2.<groovyjarjarantlr.SimpleTokenManager: int maxToken> = $i0;

        $r9 = r0.<groovyjarjarantlr.SimpleTokenManager: groovyjarjarantlr.Tool antlrTool>;

        r2.<groovyjarjarantlr.SimpleTokenManager: groovyjarjarantlr.Tool antlrTool> = $r9;

        $r10 = r0.<groovyjarjarantlr.SimpleTokenManager: java.lang.String name>;

        r2.<groovyjarjarantlr.SimpleTokenManager: java.lang.String name> = $r10;

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        $r12 = r0.<groovyjarjarantlr.SimpleTokenManager: groovyjarjarantlr.Tool antlrTool>;

        virtualinvoke $r12.<groovyjarjarantlr.Tool: void panic(java.lang.String)>("cannot clone token manager");

        return null;

     label4:
        return r2;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public void define(groovyjarjarantlr.TokenSymbol)
    {
        groovyjarjarantlr.TokenSymbol r1;
        groovyjarjarantlr.SimpleTokenManager r0;
        int $i0, $i1;
        java.lang.String $r4, $r5;
        groovyjarjarantlr.collections.impl.Vector $r2, $r3;

        r0 := @this: groovyjarjarantlr.SimpleTokenManager;

        r1 := @parameter0: groovyjarjarantlr.TokenSymbol;

        $r2 = r0.<groovyjarjarantlr.SimpleTokenManager: groovyjarjarantlr.collections.impl.Vector vocabulary>;

        $i0 = virtualinvoke r1.<groovyjarjarantlr.TokenSymbol: int getTokenType()>();

        virtualinvoke $r2.<groovyjarjarantlr.collections.impl.Vector: void ensureCapacity(int)>($i0);

        $r3 = r0.<groovyjarjarantlr.SimpleTokenManager: groovyjarjarantlr.collections.impl.Vector vocabulary>;

        $r4 = virtualinvoke r1.<groovyjarjarantlr.TokenSymbol: java.lang.String getId()>();

        $i1 = virtualinvoke r1.<groovyjarjarantlr.TokenSymbol: int getTokenType()>();

        virtualinvoke $r3.<groovyjarjarantlr.collections.impl.Vector: void setElementAt(java.lang.Object,int)>($r4, $i1);

        $r5 = virtualinvoke r1.<groovyjarjarantlr.TokenSymbol: java.lang.String getId()>();

        virtualinvoke r0.<groovyjarjarantlr.SimpleTokenManager: void mapToTokenSymbol(java.lang.String,groovyjarjarantlr.TokenSymbol)>($r5, r1);

        return;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        groovyjarjarantlr.SimpleTokenManager r0;

        r0 := @this: groovyjarjarantlr.SimpleTokenManager;

        $r1 = r0.<groovyjarjarantlr.SimpleTokenManager: java.lang.String name>;

        return $r1;
    }

    public java.lang.String getTokenStringAt(int)
    {
        groovyjarjarantlr.SimpleTokenManager r0;
        int i0;
        java.lang.Object $r2;
        java.lang.String $r3;
        groovyjarjarantlr.collections.impl.Vector $r1;

        r0 := @this: groovyjarjarantlr.SimpleTokenManager;

        i0 := @parameter0: int;

        $r1 = r0.<groovyjarjarantlr.SimpleTokenManager: groovyjarjarantlr.collections.impl.Vector vocabulary>;

        $r2 = virtualinvoke $r1.<groovyjarjarantlr.collections.impl.Vector: java.lang.Object elementAt(int)>(i0);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public groovyjarjarantlr.TokenSymbol getTokenSymbol(java.lang.String)
    {
        groovyjarjarantlr.TokenSymbol $r4;
        groovyjarjarantlr.SimpleTokenManager r0;
        java.lang.Object $r3;
        java.lang.String r1;
        java.util.Hashtable $r2;

        r0 := @this: groovyjarjarantlr.SimpleTokenManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<groovyjarjarantlr.SimpleTokenManager: java.util.Hashtable table>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (groovyjarjarantlr.TokenSymbol) $r3;

        return $r4;
    }

    public groovyjarjarantlr.TokenSymbol getTokenSymbolAt(int)
    {
        groovyjarjarantlr.TokenSymbol $r2;
        groovyjarjarantlr.SimpleTokenManager r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: groovyjarjarantlr.SimpleTokenManager;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<groovyjarjarantlr.SimpleTokenManager: java.lang.String getTokenStringAt(int)>(i0);

        $r2 = virtualinvoke r0.<groovyjarjarantlr.SimpleTokenManager: groovyjarjarantlr.TokenSymbol getTokenSymbol(java.lang.String)>($r1);

        return $r2;
    }

    public java.util.Enumeration getTokenSymbolElements()
    {
        java.util.Enumeration $r2;
        groovyjarjarantlr.SimpleTokenManager r0;
        java.util.Hashtable $r1;

        r0 := @this: groovyjarjarantlr.SimpleTokenManager;

        $r1 = r0.<groovyjarjarantlr.SimpleTokenManager: java.util.Hashtable table>;

        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.util.Enumeration elements()>();

        return $r2;
    }

    public java.util.Enumeration getTokenSymbolKeys()
    {
        java.util.Enumeration $r2;
        groovyjarjarantlr.SimpleTokenManager r0;
        java.util.Hashtable $r1;

        r0 := @this: groovyjarjarantlr.SimpleTokenManager;

        $r1 = r0.<groovyjarjarantlr.SimpleTokenManager: java.util.Hashtable table>;

        $r2 = virtualinvoke $r1.<java.util.Hashtable: java.util.Enumeration keys()>();

        return $r2;
    }

    public groovyjarjarantlr.collections.impl.Vector getVocabulary()
    {
        groovyjarjarantlr.SimpleTokenManager r0;
        groovyjarjarantlr.collections.impl.Vector $r1;

        r0 := @this: groovyjarjarantlr.SimpleTokenManager;

        $r1 = r0.<groovyjarjarantlr.SimpleTokenManager: groovyjarjarantlr.collections.impl.Vector vocabulary>;

        return $r1;
    }

    public boolean isReadOnly()
    {
        groovyjarjarantlr.SimpleTokenManager r0;

        r0 := @this: groovyjarjarantlr.SimpleTokenManager;

        return 0;
    }

    public void mapToTokenSymbol(java.lang.String, groovyjarjarantlr.TokenSymbol)
    {
        groovyjarjarantlr.TokenSymbol r2;
        groovyjarjarantlr.SimpleTokenManager r0;
        java.lang.String r1;
        java.util.Hashtable $r3;

        r0 := @this: groovyjarjarantlr.SimpleTokenManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: groovyjarjarantlr.TokenSymbol;

        $r3 = r0.<groovyjarjarantlr.SimpleTokenManager: java.util.Hashtable table>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public int maxTokenType()
    {
        int $i0, $i1;
        groovyjarjarantlr.SimpleTokenManager r0;

        r0 := @this: groovyjarjarantlr.SimpleTokenManager;

        $i0 = r0.<groovyjarjarantlr.SimpleTokenManager: int maxToken>;

        $i1 = $i0 - 1;

        return $i1;
    }

    public int nextTokenType()
    {
        int $i0, $i1;
        groovyjarjarantlr.SimpleTokenManager r0;

        r0 := @this: groovyjarjarantlr.SimpleTokenManager;

        $i0 = r0.<groovyjarjarantlr.SimpleTokenManager: int maxToken>;

        $i1 = $i0 + 1;

        r0.<groovyjarjarantlr.SimpleTokenManager: int maxToken> = $i1;

        return $i0;
    }

    public void setName(java.lang.String)
    {
        java.lang.String r1;
        groovyjarjarantlr.SimpleTokenManager r0;

        r0 := @this: groovyjarjarantlr.SimpleTokenManager;

        r1 := @parameter0: java.lang.String;

        r0.<groovyjarjarantlr.SimpleTokenManager: java.lang.String name> = r1;

        return;
    }

    public void setReadOnly(boolean)
    {
        groovyjarjarantlr.SimpleTokenManager r0;
        boolean z0;

        r0 := @this: groovyjarjarantlr.SimpleTokenManager;

        z0 := @parameter0: boolean;

        r0.<groovyjarjarantlr.SimpleTokenManager: boolean readOnly> = z0;

        return;
    }

    public boolean tokenDefined(java.lang.String)
    {
        groovyjarjarantlr.SimpleTokenManager r0;
        java.lang.String r1;
        java.util.Hashtable $r2;
        boolean $z0;

        r0 := @this: groovyjarjarantlr.SimpleTokenManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<groovyjarjarantlr.SimpleTokenManager: java.util.Hashtable table>;

        $z0 = virtualinvoke $r2.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }
}
