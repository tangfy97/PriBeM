public class com.coremedia.iso.boxes.SampleSizeBox extends com.googlecode.mp4parser.AbstractFullBox
{
    private long sampleSize;
    private long[] sampleSizes;
    public static final java.lang.String TYPE;
    int sampleCount;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_3;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_5;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_6;

    public void <init>()
    {
        com.coremedia.iso.boxes.SampleSizeBox r0;
        long[] $r1;

        r0 := @this: com.coremedia.iso.boxes.SampleSizeBox;

        specialinvoke r0.<com.googlecode.mp4parser.AbstractFullBox: void <init>(java.lang.String)>("stsz");

        $r1 = newarray (long)[0];

        r0.<com.coremedia.iso.boxes.SampleSizeBox: long[] sampleSizes> = $r1;

        return;
    }

    public long getSampleSize()
    {
        com.coremedia.iso.boxes.SampleSizeBox r0;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        long $l0;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.SampleSizeBox;

        $r1 = <com.coremedia.iso.boxes.SampleSizeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $l0 = r0.<com.coremedia.iso.boxes.SampleSizeBox: long sampleSize>;

        return $l0;
    }

    public void setSampleSize(long)
    {
        com.coremedia.iso.boxes.SampleSizeBox r0;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        long l0;
        java.lang.Object $r2;
        org.aspectj.lang.JoinPoint $r3;

        r0 := @this: com.coremedia.iso.boxes.SampleSizeBox;

        l0 := @parameter0: long;

        $r1 = <com.coremedia.iso.boxes.SampleSizeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1>;

        $r2 = staticinvoke <org.aspectj.runtime.internal.Conversions: java.lang.Object longObject(long)>(l0);

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r1, r0, r0, $r2);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        r0.<com.coremedia.iso.boxes.SampleSizeBox: long sampleSize> = l0;

        return;
    }

    public long getSampleSizeAtIndex(int)
    {
        com.coremedia.iso.boxes.SampleSizeBox r0;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        long $l1, $l3, $l4;
        long[] $r5;
        byte $b2;
        int i0, $i5;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        java.lang.Object $r2;
        org.aspectj.lang.JoinPoint $r3;

        r0 := @this: com.coremedia.iso.boxes.SampleSizeBox;

        i0 := @parameter0: int;

        $r1 = <com.coremedia.iso.boxes.SampleSizeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2>;

        $r2 = staticinvoke <org.aspectj.runtime.internal.Conversions: java.lang.Object intObject(int)>(i0);

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r1, r0, r0, $r2);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        $l1 = r0.<com.coremedia.iso.boxes.SampleSizeBox: long sampleSize>;

        $b2 = $l1 cmp 0L;

        $i5 = (int) $b2;

        if $i5 <= 0 goto label1;

        $l4 = r0.<com.coremedia.iso.boxes.SampleSizeBox: long sampleSize>;

        return $l4;

     label1:
        $r5 = r0.<com.coremedia.iso.boxes.SampleSizeBox: long[] sampleSizes>;

        $l3 = $r5[i0];

        return $l3;
    }

    public long getSampleCount()
    {
        com.coremedia.iso.boxes.SampleSizeBox r0;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        long $l0, $l3, $l5;
        long[] $r4;
        byte $b1;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i2, $i4, $i6;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.SampleSizeBox;

        $r1 = <com.coremedia.iso.boxes.SampleSizeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_3>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $l0 = r0.<com.coremedia.iso.boxes.SampleSizeBox: long sampleSize>;

        $b1 = $l0 cmp 0L;

        $i6 = (int) $b1;

        if $i6 <= 0 goto label1;

        $i4 = r0.<com.coremedia.iso.boxes.SampleSizeBox: int sampleCount>;

        $l5 = (long) $i4;

        return $l5;

     label1:
        $r4 = r0.<com.coremedia.iso.boxes.SampleSizeBox: long[] sampleSizes>;

        $i2 = lengthof $r4;

        $l3 = (long) $i2;

        return $l3;
    }

    public long[] getSampleSizes()
    {
        com.coremedia.iso.boxes.SampleSizeBox r0;
        long[] $r4;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.SampleSizeBox;

        $r1 = <com.coremedia.iso.boxes.SampleSizeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $r4 = r0.<com.coremedia.iso.boxes.SampleSizeBox: long[] sampleSizes>;

        return $r4;
    }

    public void setSampleSizes(long[])
    {
        com.coremedia.iso.boxes.SampleSizeBox r1;
        long[] r0;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        org.aspectj.lang.JoinPoint$StaticPart $r2;
        org.aspectj.lang.JoinPoint $r3;

        r1 := @this: com.coremedia.iso.boxes.SampleSizeBox;

        r0 := @parameter0: long[];

        $r2 = <com.coremedia.iso.boxes.SampleSizeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_5>;

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, r1, r1, r0);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        r1.<com.coremedia.iso.boxes.SampleSizeBox: long[] sampleSizes> = r0;

        return;
    }

    protected long getContentSize()
    {
        com.coremedia.iso.boxes.SampleSizeBox r0;
        long $l0, $l3;
        long[] $r1;
        byte $b1;
        int $i2, $i4, $i5;

        r0 := @this: com.coremedia.iso.boxes.SampleSizeBox;

        $l0 = r0.<com.coremedia.iso.boxes.SampleSizeBox: long sampleSize>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r1 = r0.<com.coremedia.iso.boxes.SampleSizeBox: long[] sampleSizes>;

        $i4 = lengthof $r1;

        $i5 = $i4 * 4;

        goto label2;

     label1:
        $i5 = 0;

     label2:
        $i2 = 12 + $i5;

        $l3 = (long) $i2;

        return $l3;
    }

    public void _parseDetails(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.SampleSizeBox r0;
        long $l0, $l1, $l3, $l7;
        java.nio.ByteBuffer r1;
        long[] $r2, $r3;
        byte $b4;
        int $i2, $i5, $i6, i8;

        r0 := @this: com.coremedia.iso.boxes.SampleSizeBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.SampleSizeBox: long parseVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $l0 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.SampleSizeBox: long sampleSize> = $l0;

        $l1 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        $i2 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l1);

        r0.<com.coremedia.iso.boxes.SampleSizeBox: int sampleCount> = $i2;

        $l3 = r0.<com.coremedia.iso.boxes.SampleSizeBox: long sampleSize>;

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label3;

        $i5 = r0.<com.coremedia.iso.boxes.SampleSizeBox: int sampleCount>;

        $r2 = newarray (long)[$i5];

        r0.<com.coremedia.iso.boxes.SampleSizeBox: long[] sampleSizes> = $r2;

        i8 = 0;

        goto label2;

     label1:
        $r3 = r0.<com.coremedia.iso.boxes.SampleSizeBox: long[] sampleSizes>;

        $l7 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        $r3[i8] = $l7;

        i8 = i8 + 1;

     label2:
        $i6 = r0.<com.coremedia.iso.boxes.SampleSizeBox: int sampleCount>;

        if i8 < $i6 goto label1;

     label3:
        return;
    }

    protected void getContent(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.SampleSizeBox r0;
        long $l0, $l1, $l4, $l6, l8;
        java.nio.ByteBuffer r1;
        long[] $r2, $r3;
        byte $b2;
        int $i3, $i5, i7, i9;

        r0 := @this: com.coremedia.iso.boxes.SampleSizeBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.SampleSizeBox: void writeVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $l0 = r0.<com.coremedia.iso.boxes.SampleSizeBox: long sampleSize>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l0);

        $l1 = r0.<com.coremedia.iso.boxes.SampleSizeBox: long sampleSize>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label3;

        $r2 = r0.<com.coremedia.iso.boxes.SampleSizeBox: long[] sampleSizes>;

        $i5 = lengthof $r2;

        $l6 = (long) $i5;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l6);

        $r3 = r0.<com.coremedia.iso.boxes.SampleSizeBox: long[] sampleSizes>;

        i7 = lengthof $r3;

        i9 = 0;

        goto label2;

     label1:
        l8 = $r3[i9];

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, l8);

        i9 = i9 + 1;

     label2:
        if i9 < i7 goto label1;

        goto label4;

     label3:
        $i3 = r0.<com.coremedia.iso.boxes.SampleSizeBox: int sampleCount>;

        $l4 = (long) $i3;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l4);

     label4:
        return;
    }

    public java.lang.String toString()
    {
        com.coremedia.iso.boxes.SampleSizeBox r0;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        long $l0, $l1;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.SampleSizeBox;

        $r1 = <com.coremedia.iso.boxes.SampleSizeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_6>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("SampleSizeBox[sampleSize=");

        $l0 = virtualinvoke r0.<com.coremedia.iso.boxes.SampleSizeBox: long getSampleSize()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";sampleCount=");

        $l1 = virtualinvoke r0.<com.coremedia.iso.boxes.SampleSizeBox: long getSampleCount()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    static void <clinit>()
    {
        <com.coremedia.iso.boxes.SampleSizeBox: java.lang.String TYPE> = "stsz";

        staticinvoke <com.coremedia.iso.boxes.SampleSizeBox: void ajc$preClinit()>();

        return;
    }

    private static void ajc$preClinit()
    {
        org.aspectj.runtime.reflect.Factory $r0;
        org.aspectj.lang.JoinPoint$StaticPart $r2, $r4, $r6, $r8, $r10, $r12, $r14;
        org.aspectj.lang.reflect.MethodSignature $r1, $r3, $r5, $r7, $r9, $r11, $r13;

        $r0 = new org.aspectj.runtime.reflect.Factory;

        specialinvoke $r0.<org.aspectj.runtime.reflect.Factory: void <init>(java.lang.String,java.lang.Class)>("SampleSizeBox.java", class "Lcom/coremedia/iso/boxes/SampleSizeBox;");

        $r1 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getSampleSize", "com.coremedia.iso.boxes.SampleSizeBox", "", "", "", "long");

        $r2 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r1, 50);

        <com.coremedia.iso.boxes.SampleSizeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0> = $r2;

        $r3 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setSampleSize", "com.coremedia.iso.boxes.SampleSizeBox", "long", "sampleSize", "", "void");

        $r4 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r3, 54);

        <com.coremedia.iso.boxes.SampleSizeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1> = $r4;

        $r5 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getSampleSizeAtIndex", "com.coremedia.iso.boxes.SampleSizeBox", "int", "index", "", "long");

        $r6 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r5, 59);

        <com.coremedia.iso.boxes.SampleSizeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2> = $r6;

        $r7 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getSampleCount", "com.coremedia.iso.boxes.SampleSizeBox", "", "", "", "long");

        $r8 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r7, 67);

        <com.coremedia.iso.boxes.SampleSizeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_3> = $r8;

        $r9 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getSampleSizes", "com.coremedia.iso.boxes.SampleSizeBox", "", "", "", "[J");

        $r10 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r9, 76);

        <com.coremedia.iso.boxes.SampleSizeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4> = $r10;

        $r11 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setSampleSizes", "com.coremedia.iso.boxes.SampleSizeBox", "[J", "sampleSizes", "", "void");

        $r12 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r11, 80);

        <com.coremedia.iso.boxes.SampleSizeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_5> = $r12;

        $r13 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "toString", "com.coremedia.iso.boxes.SampleSizeBox", "", "", "", "java.lang.String");

        $r14 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r13, 119);

        <com.coremedia.iso.boxes.SampleSizeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_6> = $r14;

        return;
    }
}
