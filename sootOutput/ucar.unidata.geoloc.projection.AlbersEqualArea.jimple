public class ucar.unidata.geoloc.projection.AlbersEqualArea extends ucar.unidata.geoloc.ProjectionImpl
{
    private double n;
    private double C;
    private double rho0;
    private double lat0;
    private double lon0;
    private double par1;
    private double par2;
    private double lon0Degrees;
    private ucar.unidata.geoloc.LatLonPointImpl origin;
    private double falseEasting;
    private double falseNorthing;
    private double earth_radius;

    public ucar.unidata.geoloc.ProjectionImpl constructCopy()
    {
        ucar.unidata.geoloc.projection.AlbersEqualArea $r0, r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;

        r1 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        $r0 = new ucar.unidata.geoloc.projection.AlbersEqualArea;

        $d0 = virtualinvoke r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double getOriginLat()>();

        $d1 = virtualinvoke r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double getOriginLon()>();

        $d2 = virtualinvoke r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double getParallelOne()>();

        $d3 = virtualinvoke r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double getParallelTwo()>();

        $d4 = virtualinvoke r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double getFalseEasting()>();

        $d5 = virtualinvoke r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double getFalseNorthing()>();

        $d6 = virtualinvoke r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double getEarthRadius()>();

        specialinvoke $r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: void <init>(double,double,double,double,double,double,double)>($d0, $d1, $d2, $d3, $d4, $d5, $d6);

        return $r0;
    }

    public void <init>()
    {
        ucar.unidata.geoloc.projection.AlbersEqualArea r0;

        r0 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        specialinvoke r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: void <init>(double,double,double,double)>(23.0, -96.0, 29.5, 45.5);

        return;
    }

    public void <init>(double, double, double, double)
    {
        ucar.unidata.geoloc.projection.AlbersEqualArea r0;
        double d0, d1, d2, d3, $d4, $d5;

        r0 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        $d4 = staticinvoke <ucar.unidata.geoloc.Earth: double getRadius()>();

        $d5 = $d4 * 0.001;

        specialinvoke r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: void <init>(double,double,double,double,double,double,double)>(d0, d1, d2, d3, 0.0, 0.0, $d5);

        return;
    }

    public void <init>(double, double, double, double, double, double)
    {
        ucar.unidata.geoloc.projection.AlbersEqualArea r0;
        double d0, d1, d2, d3, d4, d5, $d6, $d7;

        r0 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        $d6 = staticinvoke <ucar.unidata.geoloc.Earth: double getRadius()>();

        $d7 = $d6 * 0.001;

        specialinvoke r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: void <init>(double,double,double,double,double,double,double)>(d0, d1, d2, d3, d4, d5, $d7);

        return;
    }

    public void <init>(double, double, double, double, double, double, double)
    {
        double[] r2;
        byte $b0, $b1, $b2;
        double d0, $d1, d2, $d3, d4, d5, d6, d7, d8;
        ucar.unidata.util.Parameter $r3;
        ucar.unidata.geoloc.LatLonPointImpl $r1;
        ucar.unidata.geoloc.projection.AlbersEqualArea r0;

        r0 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        d0 := @parameter0: double;

        d2 := @parameter1: double;

        d4 := @parameter2: double;

        d5 := @parameter3: double;

        d6 := @parameter4: double;

        d7 := @parameter5: double;

        d8 := @parameter6: double;

        specialinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: void <init>()>();

        r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: java.lang.String name> = "AlbersEqualArea";

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>(d0);

        r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double lat0> = $d1;

        r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double lon0Degrees> = d2;

        $d3 = staticinvoke <java.lang.Math: double toRadians(double)>(d2);

        r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double lon0> = $d3;

        r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double par1> = d4;

        r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double par2> = d5;

        r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double falseEasting> = d6;

        r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double falseNorthing> = d7;

        r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double earth_radius> = d8;

        $r1 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>(d0, d2);

        r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: ucar.unidata.geoloc.LatLonPointImpl origin> = $r1;

        specialinvoke r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: void precalculate()>();

        virtualinvoke r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: void addParameter(java.lang.String,java.lang.String)>("grid_mapping_name", "albers_conical_equal_area");

        virtualinvoke r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: void addParameter(java.lang.String,double)>("latitude_of_projection_origin", d0);

        virtualinvoke r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: void addParameter(java.lang.String,double)>("longitude_of_central_meridian", d2);

        $b0 = d5 cmpl d4;

        if $b0 != 0 goto label1;

        virtualinvoke r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: void addParameter(java.lang.String,double)>("standard_parallel", d4);

        goto label2;

     label1:
        r2 = newarray (double)[2];

        r2[0] = d4;

        r2[1] = d5;

        $r3 = new ucar.unidata.util.Parameter;

        specialinvoke $r3.<ucar.unidata.util.Parameter: void <init>(java.lang.String,double[])>("standard_parallel", r2);

        virtualinvoke r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: void addParameter(ucar.unidata.util.Parameter)>($r3);

     label2:
        $b1 = d6 cmpl 0.0;

        if $b1 != 0 goto label3;

        $b2 = d7 cmpl 0.0;

        if $b2 == 0 goto label4;

     label3:
        virtualinvoke r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: void addParameter(java.lang.String,double)>("false_easting", d6);

        virtualinvoke r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: void addParameter(java.lang.String,double)>("false_northing", d7);

        virtualinvoke r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: void addParameter(java.lang.String,java.lang.String)>("units", "km");

     label4:
        virtualinvoke r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: void addParameter(java.lang.String,double)>("earth_radius", d8);

        return;
    }

    private void precalculate()
    {
        byte $b0;
        int $i1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21;
        ucar.unidata.geoloc.projection.AlbersEqualArea r0;

        r0 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        $d0 = r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double par1>;

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>($d0);

        $d2 = r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double par2>;

        $d3 = staticinvoke <java.lang.Math: double toRadians(double)>($d2);

        $d5 = r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double par2>;

        $d4 = r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double par1>;

        $d6 = $d5 - $d4;

        $d7 = staticinvoke <java.lang.Math: double abs(double)>($d6);

        $b0 = $d7 cmpg 1.0E-6;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        $d21 = staticinvoke <java.lang.Math: double sin(double)>($d1);

        r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double n> = $d21;

        goto label2;

     label1:
        $d8 = staticinvoke <java.lang.Math: double sin(double)>($d1);

        $d9 = staticinvoke <java.lang.Math: double sin(double)>($d3);

        $d10 = $d8 + $d9;

        $d11 = $d10 / 2.0;

        r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double n> = $d11;

     label2:
        $d12 = staticinvoke <java.lang.Math: double cos(double)>($d1);

        $d13 = staticinvoke <java.lang.Math: double pow(double,double)>($d12, 2.0);

        $d14 = r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double n>;

        $d15 = 2.0 * $d14;

        $d16 = staticinvoke <java.lang.Math: double sin(double)>($d1);

        $d17 = $d15 * $d16;

        $d18 = $d13 + $d17;

        r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double C> = $d18;

        $d19 = r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double lat0>;

        $d20 = specialinvoke r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double computeRho(double)>($d19);

        r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double rho0> = $d20;

        return;
    }

    private double computeRho(double)
    {
        ucar.unidata.geoloc.projection.AlbersEqualArea r0;
        double $d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;

        r0 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        d1 := @parameter0: double;

        $d2 = r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double earth_radius>;

        $d3 = r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double C>;

        $d0 = r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double n>;

        $d4 = 2.0 * $d0;

        $d5 = staticinvoke <java.lang.Math: double sin(double)>(d1);

        $d6 = $d4 * $d5;

        $d7 = $d3 - $d6;

        $d8 = staticinvoke <java.lang.Math: double sqrt(double)>($d7);

        $d10 = $d2 * $d8;

        $d9 = r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double n>;

        $d11 = $d10 / $d9;

        return $d11;
    }

    private double computeTheta(double)
    {
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        ucar.unidata.geoloc.projection.AlbersEqualArea r0;

        r0 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        d0 := @parameter0: double;

        $d1 = staticinvoke <java.lang.Math: double toDegrees(double)>(d0);

        $d2 = r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double lon0Degrees>;

        $d3 = $d1 - $d2;

        $d4 = staticinvoke <ucar.unidata.geoloc.LatLonPointImpl: double lonNormal(double)>($d3);

        $d5 = r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double n>;

        $d6 = staticinvoke <java.lang.Math: double toRadians(double)>($d4);

        $d7 = $d5 * $d6;

        return $d7;
    }

    public java.lang.Object clone()
    {
        java.lang.Object $r1;
        ucar.unidata.geoloc.LatLonPointImpl $r3;
        ucar.unidata.geoloc.projection.AlbersEqualArea r0, r2;
        double $d0, $d1;

        r0 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        $r1 = specialinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: java.lang.Object clone()>();

        r2 = (ucar.unidata.geoloc.projection.AlbersEqualArea) $r1;

        $r3 = new ucar.unidata.geoloc.LatLonPointImpl;

        $d0 = virtualinvoke r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double getOriginLat()>();

        $d1 = virtualinvoke r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double getOriginLon()>();

        specialinvoke $r3.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d0, $d1);

        r2.<ucar.unidata.geoloc.projection.AlbersEqualArea: ucar.unidata.geoloc.LatLonPointImpl origin> = $r3;

        return r2;
    }

    public boolean equals(java.lang.Object)
    {
        ucar.unidata.geoloc.ProjectionRect $r3, $r4;
        byte $b0, $b1, $b2, $b3;
        boolean $z0, $z1, $z2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        java.lang.Object r0;
        ucar.unidata.geoloc.projection.AlbersEqualArea r1, r2;

        r2 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof ucar.unidata.geoloc.projection.AlbersEqualArea;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (ucar.unidata.geoloc.projection.AlbersEqualArea) r0;

        $d0 = virtualinvoke r2.<ucar.unidata.geoloc.projection.AlbersEqualArea: double getParallelOne()>();

        $d1 = virtualinvoke r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double getParallelOne()>();

        $b0 = $d0 cmpl $d1;

        if $b0 != 0 goto label2;

        $d2 = virtualinvoke r2.<ucar.unidata.geoloc.projection.AlbersEqualArea: double getParallelTwo()>();

        $d3 = virtualinvoke r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double getParallelTwo()>();

        $b1 = $d2 cmpl $d3;

        if $b1 != 0 goto label2;

        $d4 = virtualinvoke r2.<ucar.unidata.geoloc.projection.AlbersEqualArea: double getOriginLat()>();

        $d5 = virtualinvoke r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double getOriginLat()>();

        $b2 = $d4 cmpl $d5;

        if $b2 != 0 goto label2;

        $d6 = virtualinvoke r2.<ucar.unidata.geoloc.projection.AlbersEqualArea: double getOriginLon()>();

        $d7 = virtualinvoke r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double getOriginLon()>();

        $b3 = $d6 cmpl $d7;

        if $b3 != 0 goto label2;

        $r4 = r2.<ucar.unidata.geoloc.projection.AlbersEqualArea: ucar.unidata.geoloc.ProjectionRect defaultMapArea>;

        $r3 = r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: ucar.unidata.geoloc.ProjectionRect defaultMapArea>;

        $z1 = virtualinvoke $r4.<ucar.unidata.geoloc.ProjectionRect: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public double getParallelTwo()
    {
        ucar.unidata.geoloc.projection.AlbersEqualArea r0;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        $d0 = r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double par2>;

        return $d0;
    }

    public void setParallelTwo(double)
    {
        ucar.unidata.geoloc.projection.AlbersEqualArea r0;
        double d0;

        r0 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        d0 := @parameter0: double;

        r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double par2> = d0;

        specialinvoke r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: void precalculate()>();

        return;
    }

    public double getParallelOne()
    {
        ucar.unidata.geoloc.projection.AlbersEqualArea r0;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        $d0 = r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double par1>;

        return $d0;
    }

    public void setParallelOne(double)
    {
        ucar.unidata.geoloc.projection.AlbersEqualArea r0;
        double d0;

        r0 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        d0 := @parameter0: double;

        r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double par1> = d0;

        specialinvoke r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: void precalculate()>();

        return;
    }

    public double getOriginLon()
    {
        ucar.unidata.geoloc.LatLonPointImpl $r1;
        ucar.unidata.geoloc.projection.AlbersEqualArea r0;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        $r1 = r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: ucar.unidata.geoloc.LatLonPointImpl origin>;

        $d0 = virtualinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        return $d0;
    }

    public void setOriginLon(double)
    {
        ucar.unidata.geoloc.LatLonPointImpl $r1;
        ucar.unidata.geoloc.projection.AlbersEqualArea r0;
        double d0, $d1;

        r0 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        d0 := @parameter0: double;

        $r1 = r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: ucar.unidata.geoloc.LatLonPointImpl origin>;

        virtualinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: void setLongitude(double)>(d0);

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>(d0);

        r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double lon0> = $d1;

        specialinvoke r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: void precalculate()>();

        return;
    }

    public double getOriginLat()
    {
        ucar.unidata.geoloc.LatLonPointImpl $r1;
        ucar.unidata.geoloc.projection.AlbersEqualArea r0;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        $r1 = r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: ucar.unidata.geoloc.LatLonPointImpl origin>;

        $d0 = virtualinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        return $d0;
    }

    public void setOriginLat(double)
    {
        ucar.unidata.geoloc.LatLonPointImpl $r1;
        ucar.unidata.geoloc.projection.AlbersEqualArea r0;
        double d0, $d1;

        r0 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        d0 := @parameter0: double;

        $r1 = r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: ucar.unidata.geoloc.LatLonPointImpl origin>;

        virtualinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: void setLatitude(double)>(d0);

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>(d0);

        r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double lat0> = $d1;

        specialinvoke r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: void precalculate()>();

        return;
    }

    public double getFalseEasting()
    {
        ucar.unidata.geoloc.projection.AlbersEqualArea r0;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        $d0 = r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double falseEasting>;

        return $d0;
    }

    public void setFalseEasting(double)
    {
        ucar.unidata.geoloc.projection.AlbersEqualArea r0;
        double d0;

        r0 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        d0 := @parameter0: double;

        r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double falseEasting> = d0;

        return;
    }

    public double getFalseNorthing()
    {
        ucar.unidata.geoloc.projection.AlbersEqualArea r0;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        $d0 = r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double falseNorthing>;

        return $d0;
    }

    public void setFalseNorthing(double)
    {
        ucar.unidata.geoloc.projection.AlbersEqualArea r0;
        double d0;

        r0 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        d0 := @parameter0: double;

        r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double falseNorthing> = d0;

        return;
    }

    public double getEarthRadius()
    {
        ucar.unidata.geoloc.projection.AlbersEqualArea r0;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        $d0 = r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double earth_radius>;

        return $d0;
    }

    public java.lang.String getProjectionTypeLabel()
    {
        ucar.unidata.geoloc.projection.AlbersEqualArea r0;

        r0 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        return "Albers Equal Area";
    }

    public java.lang.String paramsToString()
    {
        java.lang.StringBuilder $r0, $r1, $r5, $r6, $r8, $r9, $r11;
        ucar.unidata.geoloc.LatLonPointImpl $r3;
        java.lang.String $r4, $r7, $r10, $r12;
        ucar.unidata.geoloc.projection.AlbersEqualArea r2;
        double $d0, $d1;

        r2 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" origin ");

        $r3 = r2.<ucar.unidata.geoloc.projection.AlbersEqualArea: ucar.unidata.geoloc.LatLonPointImpl origin>;

        $r4 = virtualinvoke $r3.<ucar.unidata.geoloc.LatLonPointImpl: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" parallels: ");

        $d0 = r2.<ucar.unidata.geoloc.projection.AlbersEqualArea: double par1>;

        $r7 = staticinvoke <ucar.unidata.util.Format: java.lang.String d(double,int)>($d0, 3);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $d1 = r2.<ucar.unidata.geoloc.projection.AlbersEqualArea: double par2>;

        $r10 = staticinvoke <ucar.unidata.util.Format: java.lang.String d(double,int)>($d1, 3);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public double getScale(double)
    {
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, d9;
        ucar.unidata.geoloc.projection.AlbersEqualArea r0;

        r0 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        d9 := @parameter0: double;

        $d0 = staticinvoke <java.lang.Math: double toRadians(double)>(d9);

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        $d2 = r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: double C>;

        $d3 = 2.0 * $d1;

        $d4 = staticinvoke <java.lang.Math: double sin(double)>($d0);

        $d5 = $d3 * $d4;

        $d6 = $d2 - $d5;

        $d7 = staticinvoke <java.lang.Math: double sqrt(double)>($d6);

        $d8 = $d1 / $d7;

        return $d8;
    }

    public boolean crossSeam(ucar.unidata.geoloc.ProjectionPoint, ucar.unidata.geoloc.ProjectionPoint)
    {
        byte $b0, $b1;
        int $i2, $i3;
        ucar.unidata.geoloc.ProjectionPoint r0, r1;
        boolean $z0, $z1, $z2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        ucar.unidata.geoloc.projection.AlbersEqualArea r2;

        r2 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        r0 := @parameter0: ucar.unidata.geoloc.ProjectionPoint;

        r1 := @parameter1: ucar.unidata.geoloc.ProjectionPoint;

        $z0 = staticinvoke <ucar.unidata.geoloc.ProjectionPointImpl: boolean isInfinite(ucar.unidata.geoloc.ProjectionPoint)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <ucar.unidata.geoloc.ProjectionPointImpl: boolean isInfinite(ucar.unidata.geoloc.ProjectionPoint)>(r1);

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        $d0 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d1 = interfaceinvoke r1.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d2 = $d0 * $d1;

        $b0 = $d2 cmpg 0.0;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label3;

        $d3 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d4 = interfaceinvoke r1.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d5 = $d3 - $d4;

        $d6 = staticinvoke <java.lang.Math: double abs(double)>($d5);

        $b1 = $d6 cmpl 5000.0;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    public ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint, ucar.unidata.geoloc.ProjectionPointImpl)
    {
        ucar.unidata.geoloc.ProjectionPointImpl r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, d9, $d10, $d11, $d12, $d13, $d14, d15;
        ucar.unidata.geoloc.LatLonPoint r0;
        ucar.unidata.geoloc.projection.AlbersEqualArea r1;

        r1 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        r0 := @parameter0: ucar.unidata.geoloc.LatLonPoint;

        r2 := @parameter1: ucar.unidata.geoloc.ProjectionPointImpl;

        $d0 = interfaceinvoke r0.<ucar.unidata.geoloc.LatLonPoint: double getLatitude()>();

        $d1 = interfaceinvoke r0.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $d2 = staticinvoke <java.lang.Math: double toRadians(double)>($d0);

        $d3 = staticinvoke <java.lang.Math: double toRadians(double)>($d1);

        $d4 = specialinvoke r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double computeRho(double)>($d2);

        $d5 = specialinvoke r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double computeTheta(double)>($d3);

        $d6 = staticinvoke <java.lang.Math: double sin(double)>($d5);

        $d8 = $d4 * $d6;

        $d7 = r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double falseEasting>;

        d9 = $d8 + $d7;

        $d10 = r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double rho0>;

        $d11 = staticinvoke <java.lang.Math: double cos(double)>($d5);

        $d12 = $d4 * $d11;

        $d14 = $d10 - $d12;

        $d13 = r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double falseNorthing>;

        d15 = $d14 + $d13;

        virtualinvoke r2.<ucar.unidata.geoloc.ProjectionPointImpl: void setLocation(double,double)>(d9, d15);

        return r2;
    }

    public ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint, ucar.unidata.geoloc.LatLonPointImpl)
    {
        byte $b0, $b1;
        ucar.unidata.geoloc.projection.AlbersEqualArea r1;
        int $i2, $i3;
        ucar.unidata.geoloc.ProjectionPoint r0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, d29, d30, d31, d32;
        ucar.unidata.geoloc.LatLonPointImpl r2;

        r1 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        r0 := @parameter0: ucar.unidata.geoloc.ProjectionPoint;

        r2 := @parameter1: ucar.unidata.geoloc.LatLonPointImpl;

        $d0 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d1 = r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double falseEasting>;

        d29 = $d0 - $d1;

        $d2 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        $d3 = r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double falseNorthing>;

        d30 = $d2 - $d3;

        d31 = r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double rho0>;

        $d4 = r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double n>;

        $b0 = $d4 cmpg 0.0;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label1;

        d31 = d31 * -1.0;

        d29 = d29 * -1.0;

        d30 = d30 * -1.0;

     label1:
        $d28 = d31 - d30;

        $d6 = d29 * d29;

        $d5 = $d28 * $d28;

        $d7 = $d6 + $d5;

        $d8 = staticinvoke <java.lang.Math: double sqrt(double)>($d7);

        d32 = $d8;

        $d9 = staticinvoke <java.lang.Math: double atan2(double,double)>(d29, $d28);

        $d10 = r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double n>;

        $b1 = $d10 cmpg 0.0;

        $i3 = (int) $b1;

        if $i3 >= 0 goto label2;

        d32 = $d8 * -1.0;

     label2:
        $d15 = r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double C>;

        $d11 = r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double n>;

        $d13 = d32 * $d11;

        $d12 = r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double earth_radius>;

        $d14 = $d13 / $d12;

        $d16 = staticinvoke <java.lang.Math: double pow(double,double)>($d14, 2.0);

        $d19 = $d15 - $d16;

        $d17 = r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double n>;

        $d18 = 2.0 * $d17;

        $d20 = $d19 / $d18;

        $d21 = staticinvoke <java.lang.Math: double asin(double)>($d20);

        $d22 = staticinvoke <java.lang.Math: double toDegrees(double)>($d21);

        $d23 = r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double n>;

        $d25 = $d9 / $d23;

        $d24 = r1.<ucar.unidata.geoloc.projection.AlbersEqualArea: double lon0>;

        $d26 = $d25 + $d24;

        $d27 = staticinvoke <java.lang.Math: double toDegrees(double)>($d26);

        virtualinvoke r2.<ucar.unidata.geoloc.LatLonPointImpl: void setLatitude(double)>($d22);

        virtualinvoke r2.<ucar.unidata.geoloc.LatLonPointImpl: void setLongitude(double)>($d27);

        return r2;
    }

    public float[][] latLonToProj(float[][], float[][], int, int)
    {
        float $f0, $f1, $f2, $f3;
        ucar.unidata.geoloc.projection.AlbersEqualArea r7;
        float[] $r1, r2, r3, r5, r6;
        int i0, i1, i2, i3;
        double $d0, $d1, $d2, $d3, $d4, d5, $d6, $d7, $d8, d9, $d10, $d11, $d12, $d13, d14, d15;
        float[][] r0, r4;

        r7 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        r0 := @parameter0: float[][];

        r4 := @parameter1: float[][];

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = r0[0];

        i0 = lengthof $r1;

        r2 = r0[i1];

        r3 = r0[i2];

        r5 = r4[0];

        r6 = r4[1];

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $f0 = r2[i3];

        d14 = (double) $f0;

        $f1 = r3[i3];

        d15 = (double) $f1;

        $d0 = staticinvoke <java.lang.Math: double toRadians(double)>(d14);

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>(d15);

        $d2 = specialinvoke r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double computeRho(double)>($d0);

        $d3 = specialinvoke r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double computeTheta(double)>($d1);

        $d4 = staticinvoke <java.lang.Math: double sin(double)>($d3);

        d5 = $d2 * $d4;

        $d6 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double rho0>;

        $d7 = staticinvoke <java.lang.Math: double cos(double)>($d3);

        $d8 = $d2 * $d7;

        d9 = $d6 - $d8;

        $d10 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double falseEasting>;

        $d11 = d5 + $d10;

        $f2 = (float) $d11;

        r5[i3] = $f2;

        $d12 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double falseNorthing>;

        $d13 = d9 + $d12;

        $f3 = (float) $d13;

        r6[i3] = $f3;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r4;
    }

    public float[][] projToLatLon(float[][], float[][])
    {
        byte $b1, $b2;
        float $f0, $f1, $f2, $f3;
        ucar.unidata.geoloc.projection.AlbersEqualArea r7;
        float[] $r1, r2, r3, r5, r6;
        int i0, i3, $i4, $i5;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, d29, d30, d31, d32;
        float[][] r0, r4;

        r7 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        r0 := @parameter0: float[][];

        r4 := @parameter1: float[][];

        $r1 = r0[0];

        i0 = lengthof $r1;

        r2 = r0[0];

        r3 = r0[1];

        r5 = r4[0];

        r6 = r4[1];

        d29 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double rho0>;

        i3 = 0;

     label1:
        if i3 >= i0 goto label4;

        $f0 = r2[i3];

        $d1 = (double) $f0;

        $d0 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double falseEasting>;

        d30 = $d1 - $d0;

        $f1 = r3[i3];

        $d3 = (double) $f1;

        $d2 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double falseNorthing>;

        d31 = $d3 - $d2;

        $d4 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double n>;

        $b1 = $d4 cmpg 0.0;

        $i4 = (int) $b1;

        if $i4 >= 0 goto label2;

        d29 = d29 * -1.0;

        d30 = d30 * -1.0;

        d31 = d31 * -1.0;

     label2:
        $d28 = d29 - d31;

        $d6 = d30 * d30;

        $d5 = $d28 * $d28;

        $d7 = $d6 + $d5;

        $d8 = staticinvoke <java.lang.Math: double sqrt(double)>($d7);

        d32 = $d8;

        $d9 = staticinvoke <java.lang.Math: double atan2(double,double)>(d30, $d28);

        $d10 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double n>;

        $b2 = $d10 cmpg 0.0;

        $i5 = (int) $b2;

        if $i5 >= 0 goto label3;

        d32 = $d8 * -1.0;

     label3:
        $d15 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double C>;

        $d11 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double n>;

        $d13 = d32 * $d11;

        $d12 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double earth_radius>;

        $d14 = $d13 / $d12;

        $d16 = staticinvoke <java.lang.Math: double pow(double,double)>($d14, 2.0);

        $d19 = $d15 - $d16;

        $d17 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double n>;

        $d18 = 2.0 * $d17;

        $d20 = $d19 / $d18;

        $d21 = staticinvoke <java.lang.Math: double asin(double)>($d20);

        $d22 = staticinvoke <java.lang.Math: double toDegrees(double)>($d21);

        $d23 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double n>;

        $d25 = $d9 / $d23;

        $d24 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double lon0>;

        $d26 = $d25 + $d24;

        $d27 = staticinvoke <java.lang.Math: double toDegrees(double)>($d26);

        $f2 = (float) $d22;

        r5[i3] = $f2;

        $f3 = (float) $d27;

        r6[i3] = $f3;

        i3 = i3 + 1;

        goto label1;

     label4:
        return r4;
    }

    public double[][] latLonToProj(double[][], double[][], int, int)
    {
        double[] $r1, r2, r3, r5, r6;
        int i0, i1, i2, i3;
        double $d0, $d1, $d2, $d3, $d4, d5, $d6, $d7, $d8, d9, $d10, $d11, $d12, $d13, d14, d15;
        double[][] r0, r4;
        ucar.unidata.geoloc.projection.AlbersEqualArea r7;

        r7 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        r0 := @parameter0: double[][];

        r4 := @parameter1: double[][];

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = r0[0];

        i0 = lengthof $r1;

        r2 = r0[i1];

        r3 = r0[i2];

        r5 = r4[0];

        r6 = r4[1];

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        d14 = r2[i3];

        d15 = r3[i3];

        $d0 = staticinvoke <java.lang.Math: double toRadians(double)>(d14);

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>(d15);

        $d2 = specialinvoke r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double computeRho(double)>($d0);

        $d3 = specialinvoke r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double computeTheta(double)>($d1);

        $d4 = staticinvoke <java.lang.Math: double sin(double)>($d3);

        d5 = $d2 * $d4;

        $d6 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double rho0>;

        $d7 = staticinvoke <java.lang.Math: double cos(double)>($d3);

        $d8 = $d2 * $d7;

        d9 = $d6 - $d8;

        $d10 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double falseEasting>;

        $d11 = d5 + $d10;

        r5[i3] = $d11;

        $d12 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double falseNorthing>;

        $d13 = d9 + $d12;

        r6[i3] = $d13;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r4;
    }

    public double[][] projToLatLon(double[][], double[][])
    {
        byte $b1, $b2;
        double[][] r0, r4;
        ucar.unidata.geoloc.projection.AlbersEqualArea r7;
        double[] $r1, r2, r3, r5, r6;
        int i0, i3, $i4, $i5;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, d29, d30, d31, d32;

        r7 := @this: ucar.unidata.geoloc.projection.AlbersEqualArea;

        r0 := @parameter0: double[][];

        r4 := @parameter1: double[][];

        $r1 = r0[0];

        i0 = lengthof $r1;

        r2 = r0[0];

        r3 = r0[1];

        r5 = r4[0];

        r6 = r4[1];

        d29 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double rho0>;

        i3 = 0;

     label1:
        if i3 >= i0 goto label4;

        $d1 = r2[i3];

        $d0 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double falseEasting>;

        d30 = $d1 - $d0;

        $d3 = r3[i3];

        $d2 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double falseNorthing>;

        d31 = $d3 - $d2;

        $d4 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double n>;

        $b1 = $d4 cmpg 0.0;

        $i4 = (int) $b1;

        if $i4 >= 0 goto label2;

        d29 = d29 * -1.0;

        d30 = d30 * -1.0;

        d31 = d31 * -1.0;

     label2:
        $d28 = d29 - d31;

        $d6 = d30 * d30;

        $d5 = $d28 * $d28;

        $d7 = $d6 + $d5;

        $d8 = staticinvoke <java.lang.Math: double sqrt(double)>($d7);

        d32 = $d8;

        $d9 = staticinvoke <java.lang.Math: double atan2(double,double)>(d30, $d28);

        $d10 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double n>;

        $b2 = $d10 cmpg 0.0;

        $i5 = (int) $b2;

        if $i5 >= 0 goto label3;

        d32 = $d8 * -1.0;

     label3:
        $d15 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double C>;

        $d11 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double n>;

        $d13 = d32 * $d11;

        $d12 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double earth_radius>;

        $d14 = $d13 / $d12;

        $d16 = staticinvoke <java.lang.Math: double pow(double,double)>($d14, 2.0);

        $d19 = $d15 - $d16;

        $d17 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double n>;

        $d18 = 2.0 * $d17;

        $d20 = $d19 / $d18;

        $d21 = staticinvoke <java.lang.Math: double asin(double)>($d20);

        $d22 = staticinvoke <java.lang.Math: double toDegrees(double)>($d21);

        $d23 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double n>;

        $d25 = $d9 / $d23;

        $d24 = r7.<ucar.unidata.geoloc.projection.AlbersEqualArea: double lon0>;

        $d26 = $d25 + $d24;

        $d27 = staticinvoke <java.lang.Math: double toDegrees(double)>($d26);

        r5[i3] = $d22;

        r6[i3] = $d27;

        i3 = i3 + 1;

        goto label1;

     label4:
        return r4;
    }

    public static void main(java.lang.String[])
    {
        java.lang.Object[] $r1;
        java.lang.String[] r17;
        ucar.unidata.geoloc.ProjectionPointImpl $r5;
        java.lang.String $r3, $r10, $r16;
        java.io.PrintStream $r2, $r4, $r7, $r13;
        ucar.unidata.geoloc.LatLonPoint $r11;
        java.lang.StringBuilder $r6, $r8, $r9, $r12, $r14, $r15;
        ucar.unidata.geoloc.projection.AlbersEqualArea $r0;

        r17 := @parameter0: java.lang.String[];

        $r0 = new ucar.unidata.geoloc.projection.AlbersEqualArea;

        specialinvoke $r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: void <init>(double,double,double,double)>(23.0, -96.0, 29.5, 45.5);

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = newarray (java.lang.Object)[1];

        $r3 = virtualinvoke $r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: java.lang.String getName()>();

        $r1[0] = $r3;

        virtualinvoke $r2.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("name=%s%n", $r1);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("ll = 35N 75W");

        $r5 = virtualinvoke $r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: ucar.unidata.geoloc.ProjectionPointImpl latLonToProj(double,double)>(35.0, -75.0);

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("proj point = ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);

        $r11 = virtualinvoke $r0.<ucar.unidata.geoloc.projection.AlbersEqualArea: ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint)>($r5);

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ll = ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r16);

        return;
    }
}
