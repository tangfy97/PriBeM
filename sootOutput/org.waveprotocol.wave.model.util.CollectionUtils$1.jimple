final class org.waveprotocol.wave.model.util.CollectionUtils$1 extends java.lang.Object implements org.waveprotocol.wave.model.util.DataDomain
{

    void <init>()
    {
        org.waveprotocol.wave.model.util.CollectionUtils$1 r0;

        r0 := @this: org.waveprotocol.wave.model.util.CollectionUtils$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void compose(org.waveprotocol.wave.model.util.StringSet, org.waveprotocol.wave.model.util.ReadableStringSet, org.waveprotocol.wave.model.util.ReadableStringSet)
    {
        org.waveprotocol.wave.model.util.ReadableStringSet r1, r2;
        org.waveprotocol.wave.model.util.StringSet r0;
        org.waveprotocol.wave.model.util.CollectionUtils$1 r3;

        r3 := @this: org.waveprotocol.wave.model.util.CollectionUtils$1;

        r0 := @parameter0: org.waveprotocol.wave.model.util.StringSet;

        r2 := @parameter1: org.waveprotocol.wave.model.util.ReadableStringSet;

        r1 := @parameter2: org.waveprotocol.wave.model.util.ReadableStringSet;

        interfaceinvoke r0.<org.waveprotocol.wave.model.util.StringSet: void clear()>();

        interfaceinvoke r0.<org.waveprotocol.wave.model.util.StringSet: void addAll(org.waveprotocol.wave.model.util.ReadableStringSet)>(r1);

        interfaceinvoke r0.<org.waveprotocol.wave.model.util.StringSet: void addAll(org.waveprotocol.wave.model.util.ReadableStringSet)>(r2);

        return;
    }

    public org.waveprotocol.wave.model.util.StringSet empty()
    {
        org.waveprotocol.wave.model.util.CollectionUtils$1 r1;
        org.waveprotocol.wave.model.util.StringSet $r0;

        r1 := @this: org.waveprotocol.wave.model.util.CollectionUtils$1;

        $r0 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: org.waveprotocol.wave.model.util.StringSet createStringSet()>();

        return $r0;
    }

    public org.waveprotocol.wave.model.util.ReadableStringSet readOnlyView(org.waveprotocol.wave.model.util.StringSet)
    {
        org.waveprotocol.wave.model.util.CollectionUtils$1 r1;
        org.waveprotocol.wave.model.util.StringSet r0;

        r1 := @this: org.waveprotocol.wave.model.util.CollectionUtils$1;

        r0 := @parameter0: org.waveprotocol.wave.model.util.StringSet;

        return r0;
    }

    public volatile java.lang.Object readOnlyView(java.lang.Object)
    {
        org.waveprotocol.wave.model.util.ReadableStringSet $r3;
        org.waveprotocol.wave.model.util.StringSet $r2;
        org.waveprotocol.wave.model.util.CollectionUtils$1 r0;
        java.lang.Object r1;

        r0 := @this: org.waveprotocol.wave.model.util.CollectionUtils$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.util.StringSet) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.model.util.CollectionUtils$1: org.waveprotocol.wave.model.util.ReadableStringSet readOnlyView(org.waveprotocol.wave.model.util.StringSet)>($r2);

        return $r3;
    }

    public volatile void compose(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.model.util.ReadableStringSet $r4, $r5;
        org.waveprotocol.wave.model.util.StringSet $r6;
        org.waveprotocol.wave.model.util.CollectionUtils$1 r0;
        java.lang.Object r1, r2, r3;

        r0 := @this: org.waveprotocol.wave.model.util.CollectionUtils$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r6 = (org.waveprotocol.wave.model.util.StringSet) r1;

        $r5 = (org.waveprotocol.wave.model.util.ReadableStringSet) r2;

        $r4 = (org.waveprotocol.wave.model.util.ReadableStringSet) r3;

        virtualinvoke r0.<org.waveprotocol.wave.model.util.CollectionUtils$1: void compose(org.waveprotocol.wave.model.util.StringSet,org.waveprotocol.wave.model.util.ReadableStringSet,org.waveprotocol.wave.model.util.ReadableStringSet)>($r6, $r5, $r4);

        return;
    }

    public volatile java.lang.Object empty()
    {
        org.waveprotocol.wave.model.util.CollectionUtils$1 r0;
        org.waveprotocol.wave.model.util.StringSet $r1;

        r0 := @this: org.waveprotocol.wave.model.util.CollectionUtils$1;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.util.CollectionUtils$1: org.waveprotocol.wave.model.util.StringSet empty()>();

        return $r1;
    }
}
