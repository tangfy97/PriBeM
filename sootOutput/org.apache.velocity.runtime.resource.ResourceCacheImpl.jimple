public class org.apache.velocity.runtime.resource.ResourceCacheImpl extends java.lang.Object implements org.apache.velocity.runtime.resource.ResourceCache
{
    protected java.util.Map cache;
    protected org.apache.velocity.runtime.RuntimeServices rsvc;

    public void <init>()
    {
        org.apache.velocity.runtime.resource.ResourceCacheImpl r0;
        java.util.Map $r1;

        r0 := @this: org.apache.velocity.runtime.resource.ResourceCacheImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.apache.velocity.util.MapFactory: java.util.Map create(int,float,int,boolean)>(512, 0.5F, 30, 0);

        r0.<org.apache.velocity.runtime.resource.ResourceCacheImpl: java.util.Map cache> = $r1;

        r0.<org.apache.velocity.runtime.resource.ResourceCacheImpl: org.apache.velocity.runtime.RuntimeServices rsvc> = null;

        return;
    }

    public void initialize(org.apache.velocity.runtime.RuntimeServices)
    {
        org.apache.velocity.runtime.RuntimeServices r1, $r2, $r3;
        java.lang.StringBuffer $r5, $r6, $r8, $r9, $r12, $r13;
        java.util.Map $r10, $r16, $r17;
        int $i0;
        java.lang.String $r14;
        org.apache.velocity.runtime.resource.ResourceCacheImpl r0;
        org.apache.velocity.runtime.log.Log $r4;
        java.lang.Class $r7, $r11;
        org.apache.commons.collections.map.LRUMap $r15;

        r0 := @this: org.apache.velocity.runtime.resource.ResourceCacheImpl;

        r1 := @parameter0: org.apache.velocity.runtime.RuntimeServices;

        r0.<org.apache.velocity.runtime.resource.ResourceCacheImpl: org.apache.velocity.runtime.RuntimeServices rsvc> = r1;

        $r2 = r0.<org.apache.velocity.runtime.resource.ResourceCacheImpl: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $i0 = interfaceinvoke $r2.<org.apache.velocity.runtime.RuntimeServices: int getInt(java.lang.String,int)>("resource.manager.defaultcache.size", 89);

        if $i0 <= 0 goto label1;

        $r15 = new org.apache.commons.collections.map.LRUMap;

        specialinvoke $r15.<org.apache.commons.collections.map.LRUMap: void <init>(int)>($i0);

        $r16 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r15);

        $r17 = r0.<org.apache.velocity.runtime.resource.ResourceCacheImpl: java.util.Map cache>;

        interfaceinvoke $r16.<java.util.Map: void putAll(java.util.Map)>($r17);

        r0.<org.apache.velocity.runtime.resource.ResourceCacheImpl: java.util.Map cache> = $r16;

     label1:
        $r3 = r0.<org.apache.velocity.runtime.resource.ResourceCacheImpl: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r4 = interfaceinvoke $r3.<org.apache.velocity.runtime.RuntimeServices: org.apache.velocity.runtime.log.Log getLog()>();

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ResourceCache: initialized (");

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") with ");

        $r10 = r0.<org.apache.velocity.runtime.resource.ResourceCacheImpl: java.util.Map cache>;

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" cache map.");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r4.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r14);

        return;
    }

    public org.apache.velocity.runtime.resource.Resource get(java.lang.Object)
    {
        java.util.Map $r2;
        java.lang.Object r1, $r3;
        org.apache.velocity.runtime.resource.ResourceCacheImpl r0;
        org.apache.velocity.runtime.resource.Resource $r4;

        r0 := @this: org.apache.velocity.runtime.resource.ResourceCacheImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.velocity.runtime.resource.ResourceCacheImpl: java.util.Map cache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.velocity.runtime.resource.Resource) $r3;

        return $r4;
    }

    public org.apache.velocity.runtime.resource.Resource put(java.lang.Object, org.apache.velocity.runtime.resource.Resource)
    {
        java.util.Map $r3;
        java.lang.Object r1, $r4;
        org.apache.velocity.runtime.resource.ResourceCacheImpl r0;
        org.apache.velocity.runtime.resource.Resource r2, $r5;

        r0 := @this: org.apache.velocity.runtime.resource.ResourceCacheImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.velocity.runtime.resource.Resource;

        $r3 = r0.<org.apache.velocity.runtime.resource.ResourceCacheImpl: java.util.Map cache>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r5 = (org.apache.velocity.runtime.resource.Resource) $r4;

        return $r5;
    }

    public org.apache.velocity.runtime.resource.Resource remove(java.lang.Object)
    {
        java.util.Map $r2;
        java.lang.Object r1, $r3;
        org.apache.velocity.runtime.resource.ResourceCacheImpl r0;
        org.apache.velocity.runtime.resource.Resource $r4;

        r0 := @this: org.apache.velocity.runtime.resource.ResourceCacheImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.velocity.runtime.resource.ResourceCacheImpl: java.util.Map cache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r4 = (org.apache.velocity.runtime.resource.Resource) $r3;

        return $r4;
    }

    public java.util.Iterator enumerateKeys()
    {
        java.util.Iterator $r3;
        java.util.Map $r1;
        java.util.Set $r2;
        org.apache.velocity.runtime.resource.ResourceCacheImpl r0;

        r0 := @this: org.apache.velocity.runtime.resource.ResourceCacheImpl;

        $r1 = r0.<org.apache.velocity.runtime.resource.ResourceCacheImpl: java.util.Map cache>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        return $r3;
    }
}
