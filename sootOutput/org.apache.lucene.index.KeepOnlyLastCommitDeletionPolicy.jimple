public final class org.apache.lucene.index.KeepOnlyLastCommitDeletionPolicy extends org.apache.lucene.index.IndexDeletionPolicy
{

    public void <init>()
    {
        org.apache.lucene.index.KeepOnlyLastCommitDeletionPolicy r0;

        r0 := @this: org.apache.lucene.index.KeepOnlyLastCommitDeletionPolicy;

        specialinvoke r0.<org.apache.lucene.index.IndexDeletionPolicy: void <init>()>();

        return;
    }

    public void onInit(java.util.List)
    {
        java.util.List r1;
        org.apache.lucene.index.KeepOnlyLastCommitDeletionPolicy r0;

        r0 := @this: org.apache.lucene.index.KeepOnlyLastCommitDeletionPolicy;

        r1 := @parameter0: java.util.List;

        virtualinvoke r0.<org.apache.lucene.index.KeepOnlyLastCommitDeletionPolicy: void onCommit(java.util.List)>(r1);

        return;
    }

    public void onCommit(java.util.List)
    {
        org.apache.lucene.index.IndexCommit $r2;
        java.util.List r0;
        org.apache.lucene.index.KeepOnlyLastCommitDeletionPolicy r3;
        int $i0, $i1, i2;
        java.lang.Object $r1;

        r3 := @this: org.apache.lucene.index.KeepOnlyLastCommitDeletionPolicy;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i2 = 0;

     label1:
        $i1 = $i0 - 1;

        if i2 >= $i1 goto label2;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        $r2 = (org.apache.lucene.index.IndexCommit) $r1;

        virtualinvoke $r2.<org.apache.lucene.index.IndexCommit: void delete()>();

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }
}
