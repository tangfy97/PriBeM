public class tdb.tdbclean extends tdb.cmdline.CmdTDB
{

    public static transient void main(java.lang.String[])
    {
        java.lang.String[] r1;
        tdb.tdbclean $r0;

        r1 := @parameter0: java.lang.String[];

        staticinvoke <tdb.cmdline.CmdTDB: void init()>();

        $r0 = new tdb.tdbclean;

        specialinvoke $r0.<tdb.tdbclean: void <init>(java.lang.String[])>(r1);

        virtualinvoke $r0.<tdb.tdbclean: void mainRun()>();

        return;
    }

    protected void <init>(java.lang.String[])
    {
        java.lang.String[] r1;
        tdb.tdbclean r0;

        r0 := @this: tdb.tdbclean;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<tdb.cmdline.CmdTDB: void <init>(java.lang.String[])>(r1);

        return;
    }

    protected java.lang.String getSummary()
    {
        tdb.tdbclean r1;
        java.lang.StringBuilder $r0, $r3, $r4;
        java.lang.String $r2, $r5;

        r1 := @this: tdb.tdbclean;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<tdb.tdbclean: java.lang.String getCommandName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" DIRECTORY");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    protected void exec()
    {
        java.util.List $r2;
        tdb.cmdline.ModTDBDataset $r1;
        java.util.Iterator $r3;
        tdb.tdbclean r0;
        java.lang.Object $r4;
        java.lang.String r5;
        boolean $z0;

        r0 := @this: tdb.tdbclean;

        $r1 = r0.<tdb.tdbclean: tdb.cmdline.ModTDBDataset tdbDatasetAssembler>;

        $r2 = virtualinvoke $r1.<tdb.cmdline.ModTDBDataset: java.util.List locations()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        specialinvoke r0.<tdb.tdbclean: void clean(java.lang.String)>(r5);

        goto label1;

     label2:
        return;
    }

    private void clean(java.lang.String)
    {
        java.io.PrintStream $r3;
        tdb.tdbclean r0;
        java.lang.StringBuilder $r2, $r4, $r5;
        java.lang.String r1, $r6;
        boolean $z0;

        r0 := @this: tdb.tdbclean;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<tdb.tdbclean: boolean isVerbose()>();

        if $z0 == 0 goto label1;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Clean: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);

     label1:
        staticinvoke <org.apache.jena.atlas.lib.FileOps: void clearDirectory(java.lang.String)>(r1);

        return;
    }
}
