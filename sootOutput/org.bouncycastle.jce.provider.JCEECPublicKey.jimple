public class org.bouncycastle.jce.provider.JCEECPublicKey extends java.lang.Object implements java.security.interfaces.ECPublicKey, org.bouncycastle.jce.interfaces.ECPublicKey, org.bouncycastle.jce.interfaces.ECPointEncoder
{
    private java.lang.String algorithm;
    private org.bouncycastle.math.ec.ECPoint q;
    private java.security.spec.ECParameterSpec ecSpec;
    private boolean withCompression;
    private org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters gostParams;

    public void <init>(java.lang.String, org.bouncycastle.jce.provider.JCEECPublicKey)
    {
        org.bouncycastle.math.ec.ECPoint $r3;
        org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters $r5;
        org.bouncycastle.jce.provider.JCEECPublicKey r0, r2;
        java.lang.String r1;
        java.security.spec.ECParameterSpec $r4;
        boolean $z0;

        r0 := @this: org.bouncycastle.jce.provider.JCEECPublicKey;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.bouncycastle.jce.provider.JCEECPublicKey;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.lang.String algorithm> = "EC";

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.lang.String algorithm> = r1;

        $r3 = r2.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q>;

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q> = $r3;

        $r4 = r2.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec>;

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec> = $r4;

        $z0 = r2.<org.bouncycastle.jce.provider.JCEECPublicKey: boolean withCompression>;

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: boolean withCompression> = $z0;

        $r5 = r2.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters gostParams>;

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters gostParams> = $r5;

        return;
    }

    public void <init>(java.lang.String, java.security.spec.ECPublicKeySpec)
    {
        org.bouncycastle.math.ec.ECPoint $r6;
        java.security.spec.ECPublicKeySpec r2;
        java.security.spec.ECPoint $r5;
        org.bouncycastle.jce.provider.JCEECPublicKey r0;
        java.lang.String r1;
        java.security.spec.ECParameterSpec $r3, $r4;

        r0 := @this: org.bouncycastle.jce.provider.JCEECPublicKey;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.spec.ECPublicKeySpec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.lang.String algorithm> = "EC";

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.lang.String algorithm> = r1;

        $r3 = virtualinvoke r2.<java.security.spec.ECPublicKeySpec: java.security.spec.ECParameterSpec getParams()>();

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec> = $r3;

        $r4 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec>;

        $r5 = virtualinvoke r2.<java.security.spec.ECPublicKeySpec: java.security.spec.ECPoint getW()>();

        $r6 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: org.bouncycastle.math.ec.ECPoint convertPoint(java.security.spec.ECParameterSpec,java.security.spec.ECPoint,boolean)>($r4, $r5, 0);

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q> = $r6;

        return;
    }

    public void <init>(java.lang.String, org.bouncycastle.jce.spec.ECPublicKeySpec)
    {
        byte[] $r19;
        org.bouncycastle.math.ec.ECFieldElement $r10, $r13;
        org.bouncycastle.math.ec.ECPoint $r3, $r5, $r9, $r12, $r15;
        java.math.BigInteger $r11, $r14;
        java.lang.String r1;
        org.bouncycastle.math.ec.ECCurve $r6, $r8, $r17;
        org.bouncycastle.jce.provider.JCEECPublicKey r0;
        java.security.spec.EllipticCurve $r20;
        java.security.spec.ECParameterSpec $r22;
        org.bouncycastle.jce.spec.ECParameterSpec $r4, $r7, $r16, $r18, $r21;
        org.bouncycastle.jce.spec.ECPublicKeySpec r2;

        r0 := @this: org.bouncycastle.jce.provider.JCEECPublicKey;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.bouncycastle.jce.spec.ECPublicKeySpec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.lang.String algorithm> = "EC";

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.lang.String algorithm> = r1;

        $r3 = virtualinvoke r2.<org.bouncycastle.jce.spec.ECPublicKeySpec: org.bouncycastle.math.ec.ECPoint getQ()>();

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q> = $r3;

        $r4 = virtualinvoke r2.<org.bouncycastle.jce.spec.ECPublicKeySpec: org.bouncycastle.jce.spec.ECParameterSpec getParams()>();

        if $r4 == null goto label1;

        $r16 = virtualinvoke r2.<org.bouncycastle.jce.spec.ECPublicKeySpec: org.bouncycastle.jce.spec.ECParameterSpec getParams()>();

        $r17 = virtualinvoke $r16.<org.bouncycastle.jce.spec.ECParameterSpec: org.bouncycastle.math.ec.ECCurve getCurve()>();

        $r18 = virtualinvoke r2.<org.bouncycastle.jce.spec.ECPublicKeySpec: org.bouncycastle.jce.spec.ECParameterSpec getParams()>();

        $r19 = virtualinvoke $r18.<org.bouncycastle.jce.spec.ECParameterSpec: byte[] getSeed()>();

        $r20 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: java.security.spec.EllipticCurve convertCurve(org.bouncycastle.math.ec.ECCurve,byte[])>($r17, $r19);

        $r21 = virtualinvoke r2.<org.bouncycastle.jce.spec.ECPublicKeySpec: org.bouncycastle.jce.spec.ECParameterSpec getParams()>();

        $r22 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: java.security.spec.ECParameterSpec convertSpec(java.security.spec.EllipticCurve,org.bouncycastle.jce.spec.ECParameterSpec)>($r20, $r21);

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec> = $r22;

        goto label3;

     label1:
        $r5 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q>;

        $r6 = virtualinvoke $r5.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECCurve getCurve()>();

        if $r6 != null goto label2;

        $r7 = staticinvoke <org.bouncycastle.jce.provider.ProviderUtil: org.bouncycastle.jce.spec.ECParameterSpec getEcImplicitlyCa()>();

        $r8 = virtualinvoke $r7.<org.bouncycastle.jce.spec.ECParameterSpec: org.bouncycastle.math.ec.ECCurve getCurve()>();

        $r9 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q>;

        $r10 = virtualinvoke $r9.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getX()>();

        $r11 = virtualinvoke $r10.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r12 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q>;

        $r13 = virtualinvoke $r12.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getY()>();

        $r14 = virtualinvoke $r13.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r15 = virtualinvoke $r8.<org.bouncycastle.math.ec.ECCurve: org.bouncycastle.math.ec.ECPoint createPoint(java.math.BigInteger,java.math.BigInteger,boolean)>($r11, $r14, 0);

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q> = $r15;

     label2:
        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec> = null;

     label3:
        return;
    }

    public void <init>(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters, java.security.spec.ECParameterSpec)
    {
        byte[] $r7;
        org.bouncycastle.math.ec.ECCurve $r6;
        org.bouncycastle.crypto.params.ECPublicKeyParameters r1;
        org.bouncycastle.jce.provider.JCEECPublicKey r0;
        java.security.spec.EllipticCurve $r8;
        java.security.spec.ECParameterSpec r5, $r9;
        org.bouncycastle.math.ec.ECPoint $r4;
        org.bouncycastle.crypto.params.ECDomainParameters $r2;
        java.lang.String r3;

        r0 := @this: org.bouncycastle.jce.provider.JCEECPublicKey;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: org.bouncycastle.crypto.params.ECPublicKeyParameters;

        r5 := @parameter2: java.security.spec.ECParameterSpec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.lang.String algorithm> = "EC";

        $r2 = virtualinvoke r1.<org.bouncycastle.crypto.params.ECPublicKeyParameters: org.bouncycastle.crypto.params.ECDomainParameters getParameters()>();

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.lang.String algorithm> = r3;

        $r4 = virtualinvoke r1.<org.bouncycastle.crypto.params.ECPublicKeyParameters: org.bouncycastle.math.ec.ECPoint getQ()>();

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q> = $r4;

        if r5 != null goto label1;

        $r6 = virtualinvoke $r2.<org.bouncycastle.crypto.params.ECDomainParameters: org.bouncycastle.math.ec.ECCurve getCurve()>();

        $r7 = virtualinvoke $r2.<org.bouncycastle.crypto.params.ECDomainParameters: byte[] getSeed()>();

        $r8 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: java.security.spec.EllipticCurve convertCurve(org.bouncycastle.math.ec.ECCurve,byte[])>($r6, $r7);

        $r9 = specialinvoke r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec createSpec(java.security.spec.EllipticCurve,org.bouncycastle.crypto.params.ECDomainParameters)>($r8, $r2);

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec> = $r9;

        goto label2;

     label1:
        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec> = r5;

     label2:
        return;
    }

    public void <init>(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters, org.bouncycastle.jce.spec.ECParameterSpec)
    {
        byte[] $r7, $r11;
        org.bouncycastle.math.ec.ECCurve $r6, $r10;
        org.bouncycastle.crypto.params.ECPublicKeyParameters r1;
        org.bouncycastle.jce.provider.JCEECPublicKey r0;
        java.security.spec.EllipticCurve $r8, $r12;
        java.security.spec.ECParameterSpec $r9, $r13;
        org.bouncycastle.math.ec.ECPoint $r4;
        org.bouncycastle.crypto.params.ECDomainParameters $r2;
        org.bouncycastle.jce.spec.ECParameterSpec r5;
        java.lang.String r3;

        r0 := @this: org.bouncycastle.jce.provider.JCEECPublicKey;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: org.bouncycastle.crypto.params.ECPublicKeyParameters;

        r5 := @parameter2: org.bouncycastle.jce.spec.ECParameterSpec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.lang.String algorithm> = "EC";

        $r2 = virtualinvoke r1.<org.bouncycastle.crypto.params.ECPublicKeyParameters: org.bouncycastle.crypto.params.ECDomainParameters getParameters()>();

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.lang.String algorithm> = r3;

        $r4 = virtualinvoke r1.<org.bouncycastle.crypto.params.ECPublicKeyParameters: org.bouncycastle.math.ec.ECPoint getQ()>();

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q> = $r4;

        if r5 != null goto label1;

        $r10 = virtualinvoke $r2.<org.bouncycastle.crypto.params.ECDomainParameters: org.bouncycastle.math.ec.ECCurve getCurve()>();

        $r11 = virtualinvoke $r2.<org.bouncycastle.crypto.params.ECDomainParameters: byte[] getSeed()>();

        $r12 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: java.security.spec.EllipticCurve convertCurve(org.bouncycastle.math.ec.ECCurve,byte[])>($r10, $r11);

        $r13 = specialinvoke r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec createSpec(java.security.spec.EllipticCurve,org.bouncycastle.crypto.params.ECDomainParameters)>($r12, $r2);

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec> = $r13;

        goto label2;

     label1:
        $r6 = virtualinvoke r5.<org.bouncycastle.jce.spec.ECParameterSpec: org.bouncycastle.math.ec.ECCurve getCurve()>();

        $r7 = virtualinvoke r5.<org.bouncycastle.jce.spec.ECParameterSpec: byte[] getSeed()>();

        $r8 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: java.security.spec.EllipticCurve convertCurve(org.bouncycastle.math.ec.ECCurve,byte[])>($r6, $r7);

        $r9 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: java.security.spec.ECParameterSpec convertSpec(java.security.spec.EllipticCurve,org.bouncycastle.jce.spec.ECParameterSpec)>($r8, r5);

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec> = $r9;

     label2:
        return;
    }

    public void <init>(java.lang.String, org.bouncycastle.crypto.params.ECPublicKeyParameters)
    {
        org.bouncycastle.math.ec.ECPoint $r3;
        org.bouncycastle.crypto.params.ECPublicKeyParameters r2;
        org.bouncycastle.jce.provider.JCEECPublicKey r0;
        java.lang.String r1;

        r0 := @this: org.bouncycastle.jce.provider.JCEECPublicKey;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.bouncycastle.crypto.params.ECPublicKeyParameters;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.lang.String algorithm> = "EC";

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.lang.String algorithm> = r1;

        $r3 = virtualinvoke r2.<org.bouncycastle.crypto.params.ECPublicKeyParameters: org.bouncycastle.math.ec.ECPoint getQ()>();

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q> = $r3;

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec> = null;

        return;
    }

    private java.security.spec.ECParameterSpec createSpec(java.security.spec.EllipticCurve, org.bouncycastle.crypto.params.ECDomainParameters)
    {
        org.bouncycastle.math.ec.ECFieldElement $r5, $r8;
        org.bouncycastle.jce.provider.JCEECPublicKey r12;
        java.security.spec.EllipticCurve r1;
        java.security.spec.ECParameterSpec $r0;
        org.bouncycastle.math.ec.ECPoint $r4, $r7;
        org.bouncycastle.crypto.params.ECDomainParameters r3;
        int $i0;
        java.security.spec.ECPoint $r2;
        java.math.BigInteger $r6, $r9, $r10, $r11;

        r12 := @this: org.bouncycastle.jce.provider.JCEECPublicKey;

        r1 := @parameter0: java.security.spec.EllipticCurve;

        r3 := @parameter1: org.bouncycastle.crypto.params.ECDomainParameters;

        $r0 = new java.security.spec.ECParameterSpec;

        $r2 = new java.security.spec.ECPoint;

        $r4 = virtualinvoke r3.<org.bouncycastle.crypto.params.ECDomainParameters: org.bouncycastle.math.ec.ECPoint getG()>();

        $r5 = virtualinvoke $r4.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getX()>();

        $r6 = virtualinvoke $r5.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r7 = virtualinvoke r3.<org.bouncycastle.crypto.params.ECDomainParameters: org.bouncycastle.math.ec.ECPoint getG()>();

        $r8 = virtualinvoke $r7.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getY()>();

        $r9 = virtualinvoke $r8.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r2.<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>($r6, $r9);

        $r10 = virtualinvoke r3.<org.bouncycastle.crypto.params.ECDomainParameters: java.math.BigInteger getN()>();

        $r11 = virtualinvoke r3.<org.bouncycastle.crypto.params.ECDomainParameters: java.math.BigInteger getH()>();

        $i0 = virtualinvoke $r11.<java.math.BigInteger: int intValue()>();

        specialinvoke $r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>(r1, $r2, $r10, $i0);

        return $r0;
    }

    public void <init>(java.security.interfaces.ECPublicKey)
    {
        org.bouncycastle.math.ec.ECPoint $r6;
        java.security.spec.ECPoint $r5;
        org.bouncycastle.jce.provider.JCEECPublicKey r0;
        java.lang.String $r2;
        java.security.interfaces.ECPublicKey r1;
        java.security.spec.ECParameterSpec $r3, $r4;

        r0 := @this: org.bouncycastle.jce.provider.JCEECPublicKey;

        r1 := @parameter0: java.security.interfaces.ECPublicKey;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.lang.String algorithm> = "EC";

        $r2 = interfaceinvoke r1.<java.security.interfaces.ECPublicKey: java.lang.String getAlgorithm()>();

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.lang.String algorithm> = $r2;

        $r3 = interfaceinvoke r1.<java.security.interfaces.ECPublicKey: java.security.spec.ECParameterSpec getParams()>();

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec> = $r3;

        $r4 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec>;

        $r5 = interfaceinvoke r1.<java.security.interfaces.ECPublicKey: java.security.spec.ECPoint getW()>();

        $r6 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: org.bouncycastle.math.ec.ECPoint convertPoint(java.security.spec.ECParameterSpec,java.security.spec.ECPoint,boolean)>($r4, $r5, 0);

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q> = $r6;

        return;
    }

    void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)
    {
        org.bouncycastle.jce.provider.JCEECPublicKey r0;
        org.bouncycastle.asn1.x509.SubjectPublicKeyInfo r1;

        r0 := @this: org.bouncycastle.jce.provider.JCEECPublicKey;

        r1 := @parameter0: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.lang.String algorithm> = "EC";

        specialinvoke r0.<org.bouncycastle.jce.provider.JCEECPublicKey: void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>(r1);

        return;
    }

    private void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)
    {
        byte[] $r12, $r31, $r45, $r47, $r57, r80, r81, $r85;
        org.bouncycastle.asn1.ASN1Sequence $r10, $r51;
        org.bouncycastle.asn1.ASN1OctetString r79, r87;
        byte $b3, $b4, $b8, $b12, $b14, $b17;
        java.math.BigInteger $r19, $r22, $r23, $r24, $r38, $r41, $r42, $r43, $r69, $r72, $r73, $r74, $r92, $r93;
        org.bouncycastle.asn1.x9.X9ECParameters $r29, $r99;
        org.bouncycastle.asn1.DERObject $r7, $r9, $r28;
        org.bouncycastle.math.ec.ECFieldElement $r18, $r21, $r37, $r40, $r68, $r71;
        org.bouncycastle.math.ec.ECPoint $r17, $r20, $r36, $r39, $r61, $r67, $r70, $r89;
        java.lang.String $r34, $r54, $r65;
        java.io.IOException $r75, $r77;
        java.security.spec.ECParameterSpec $r101;
        java.security.spec.ECPoint $r94, $r97, $r100;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r1, $r5, $r49;
        org.bouncycastle.asn1.x509.SubjectPublicKeyInfo r0;
        org.bouncycastle.asn1.DERBitString $r44, $r84;
        org.bouncycastle.asn1.ASN1Object $r26, $r46;
        org.bouncycastle.asn1.DERObjectIdentifier $r2, $r3, $r53, $r64, r82;
        boolean $z0, $z1, $z2;
        java.security.spec.EllipticCurve $r13, $r32, $r58;
        org.bouncycastle.jce.spec.ECNamedCurveParameterSpec $r55;
        org.bouncycastle.jce.spec.ECNamedCurveSpec $r95, $r98;
        org.bouncycastle.asn1.x9.X962Parameters $r96;
        org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters $r52, $r63, $r91;
        org.bouncycastle.asn1.DEREncodable $r6, $r50;
        org.bouncycastle.asn1.DEROctetString $r102;
        int $i0, $i1, $i2, $i5, $i6, $i7, $i9, $i10, $i11, $i13, i15, i16, $i18, $i19, $i20, $i21;
        org.bouncycastle.math.ec.ECCurve $r11, $r30, $r56, r83;
        org.bouncycastle.jce.provider.JCEECPublicKey r14;
        java.lang.IllegalArgumentException $r90, $r104;
        org.bouncycastle.asn1.x9.X9IntegerConverter $r103;
        org.bouncycastle.asn1.x9.X9ECPoint $r105;
        org.bouncycastle.jce.spec.ECParameterSpec $r27;

        r14 := @this: org.bouncycastle.jce.provider.JCEECPublicKey;

        r0 := @parameter0: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo;

        $r1 = virtualinvoke r0.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        $r3 = <org.bouncycastle.asn1.cryptopro.CryptoProObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier gostR3410_2001>;

        $z0 = virtualinvoke $r2.<org.bouncycastle.asn1.DERObjectIdentifier: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label09;

        $r44 = virtualinvoke r0.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: org.bouncycastle.asn1.DERBitString getPublicKeyData()>();

        r14.<org.bouncycastle.jce.provider.JCEECPublicKey: java.lang.String algorithm> = "ECGOST3410";

     label01:
        $r45 = virtualinvoke $r44.<org.bouncycastle.asn1.DERBitString: byte[] getBytes()>();

        $r46 = staticinvoke <org.bouncycastle.asn1.ASN1Object: org.bouncycastle.asn1.ASN1Object fromByteArray(byte[])>($r45);

        r79 = (org.bouncycastle.asn1.ASN1OctetString) $r46;

     label02:
        goto label04;

     label03:
        $r77 := @caughtexception;

        $r90 = new java.lang.IllegalArgumentException;

        specialinvoke $r90.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("error recovering public key");

        throw $r90;

     label04:
        $r47 = virtualinvoke r79.<org.bouncycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        r80 = newarray (byte)[32];

        r81 = newarray (byte)[32];

        i15 = 0;

     label05:
        $i9 = lengthof r80;

        if i15 == $i9 goto label06;

        $i13 = 31 - i15;

        $b14 = $r47[$i13];

        r80[i15] = $b14;

        i15 = i15 + 1;

        goto label05;

     label06:
        i16 = 0;

     label07:
        $i10 = lengthof r81;

        if i16 == $i10 goto label08;

        $i11 = 63 - i16;

        $b12 = $r47[$i11];

        r81[i16] = $b12;

        i16 = i16 + 1;

        goto label07;

     label08:
        $r91 = new org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters;

        $r49 = virtualinvoke r0.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

        $r50 = virtualinvoke $r49.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DEREncodable getParameters()>();

        $r51 = (org.bouncycastle.asn1.ASN1Sequence) $r50;

        specialinvoke $r91.<org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r51);

        r14.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters gostParams> = $r91;

        $r52 = r14.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters gostParams>;

        $r53 = virtualinvoke $r52.<org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters: org.bouncycastle.asn1.DERObjectIdentifier getPublicKeyParamSet()>();

        $r54 = staticinvoke <org.bouncycastle.asn1.cryptopro.ECGOST3410NamedCurves: java.lang.String getName(org.bouncycastle.asn1.DERObjectIdentifier)>($r53);

        $r55 = staticinvoke <org.bouncycastle.jce.ECGOST3410NamedCurveTable: org.bouncycastle.jce.spec.ECNamedCurveParameterSpec getParameterSpec(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<org.bouncycastle.jce.spec.ECNamedCurveParameterSpec: org.bouncycastle.math.ec.ECCurve getCurve()>();

        $r57 = virtualinvoke $r55.<org.bouncycastle.jce.spec.ECNamedCurveParameterSpec: byte[] getSeed()>();

        $r58 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: java.security.spec.EllipticCurve convertCurve(org.bouncycastle.math.ec.ECCurve,byte[])>($r56, $r57);

        $r92 = new java.math.BigInteger;

        specialinvoke $r92.<java.math.BigInteger: void <init>(int,byte[])>(1, r80);

        $r93 = new java.math.BigInteger;

        specialinvoke $r93.<java.math.BigInteger: void <init>(int,byte[])>(1, r81);

        $r61 = virtualinvoke $r56.<org.bouncycastle.math.ec.ECCurve: org.bouncycastle.math.ec.ECPoint createPoint(java.math.BigInteger,java.math.BigInteger,boolean)>($r92, $r93, 0);

        r14.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q> = $r61;

        $r95 = new org.bouncycastle.jce.spec.ECNamedCurveSpec;

        $r63 = r14.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters gostParams>;

        $r64 = virtualinvoke $r63.<org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters: org.bouncycastle.asn1.DERObjectIdentifier getPublicKeyParamSet()>();

        $r65 = staticinvoke <org.bouncycastle.asn1.cryptopro.ECGOST3410NamedCurves: java.lang.String getName(org.bouncycastle.asn1.DERObjectIdentifier)>($r64);

        $r94 = new java.security.spec.ECPoint;

        $r67 = virtualinvoke $r55.<org.bouncycastle.jce.spec.ECNamedCurveParameterSpec: org.bouncycastle.math.ec.ECPoint getG()>();

        $r68 = virtualinvoke $r67.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getX()>();

        $r69 = virtualinvoke $r68.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r70 = virtualinvoke $r55.<org.bouncycastle.jce.spec.ECNamedCurveParameterSpec: org.bouncycastle.math.ec.ECPoint getG()>();

        $r71 = virtualinvoke $r70.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getY()>();

        $r72 = virtualinvoke $r71.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r94.<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>($r69, $r72);

        $r73 = virtualinvoke $r55.<org.bouncycastle.jce.spec.ECNamedCurveParameterSpec: java.math.BigInteger getN()>();

        $r74 = virtualinvoke $r55.<org.bouncycastle.jce.spec.ECNamedCurveParameterSpec: java.math.BigInteger getH()>();

        specialinvoke $r95.<org.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,java.math.BigInteger)>($r65, $r58, $r94, $r73, $r74);

        r14.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec> = $r95;

        goto label18;

     label09:
        $r96 = new org.bouncycastle.asn1.x9.X962Parameters;

        $r5 = virtualinvoke r0.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmId()>();

        $r6 = virtualinvoke $r5.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DEREncodable getParameters()>();

        $r7 = (org.bouncycastle.asn1.DERObject) $r6;

        specialinvoke $r96.<org.bouncycastle.asn1.x9.X962Parameters: void <init>(org.bouncycastle.asn1.DERObject)>($r7);

        $z1 = virtualinvoke $r96.<org.bouncycastle.asn1.x9.X962Parameters: boolean isNamedCurve()>();

        if $z1 == 0 goto label10;

        $r28 = virtualinvoke $r96.<org.bouncycastle.asn1.x9.X962Parameters: org.bouncycastle.asn1.DERObject getParameters()>();

        r82 = (org.bouncycastle.asn1.DERObjectIdentifier) $r28;

        $r29 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.ECUtil: org.bouncycastle.asn1.x9.X9ECParameters getNamedCurveByOid(org.bouncycastle.asn1.DERObjectIdentifier)>(r82);

        $r30 = virtualinvoke $r29.<org.bouncycastle.asn1.x9.X9ECParameters: org.bouncycastle.math.ec.ECCurve getCurve()>();

        r83 = $r30;

        $r31 = virtualinvoke $r29.<org.bouncycastle.asn1.x9.X9ECParameters: byte[] getSeed()>();

        $r32 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: java.security.spec.EllipticCurve convertCurve(org.bouncycastle.math.ec.ECCurve,byte[])>($r30, $r31);

        $r98 = new org.bouncycastle.jce.spec.ECNamedCurveSpec;

        $r34 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.ECUtil: java.lang.String getCurveName(org.bouncycastle.asn1.DERObjectIdentifier)>(r82);

        $r97 = new java.security.spec.ECPoint;

        $r36 = virtualinvoke $r29.<org.bouncycastle.asn1.x9.X9ECParameters: org.bouncycastle.math.ec.ECPoint getG()>();

        $r37 = virtualinvoke $r36.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getX()>();

        $r38 = virtualinvoke $r37.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r39 = virtualinvoke $r29.<org.bouncycastle.asn1.x9.X9ECParameters: org.bouncycastle.math.ec.ECPoint getG()>();

        $r40 = virtualinvoke $r39.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getY()>();

        $r41 = virtualinvoke $r40.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r97.<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>($r38, $r41);

        $r42 = virtualinvoke $r29.<org.bouncycastle.asn1.x9.X9ECParameters: java.math.BigInteger getN()>();

        $r43 = virtualinvoke $r29.<org.bouncycastle.asn1.x9.X9ECParameters: java.math.BigInteger getH()>();

        specialinvoke $r98.<org.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,java.math.BigInteger)>($r34, $r32, $r97, $r42, $r43);

        r14.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec> = $r98;

        goto label12;

     label10:
        $z2 = virtualinvoke $r96.<org.bouncycastle.asn1.x9.X962Parameters: boolean isImplicitlyCA()>();

        if $z2 == 0 goto label11;

        r14.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec> = null;

        $r27 = staticinvoke <org.bouncycastle.jce.provider.ProviderUtil: org.bouncycastle.jce.spec.ECParameterSpec getEcImplicitlyCa()>();

        r83 = virtualinvoke $r27.<org.bouncycastle.jce.spec.ECParameterSpec: org.bouncycastle.math.ec.ECCurve getCurve()>();

        goto label12;

     label11:
        $r99 = new org.bouncycastle.asn1.x9.X9ECParameters;

        $r9 = virtualinvoke $r96.<org.bouncycastle.asn1.x9.X962Parameters: org.bouncycastle.asn1.DERObject getParameters()>();

        $r10 = (org.bouncycastle.asn1.ASN1Sequence) $r9;

        specialinvoke $r99.<org.bouncycastle.asn1.x9.X9ECParameters: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r10);

        $r11 = virtualinvoke $r99.<org.bouncycastle.asn1.x9.X9ECParameters: org.bouncycastle.math.ec.ECCurve getCurve()>();

        r83 = $r11;

        $r12 = virtualinvoke $r99.<org.bouncycastle.asn1.x9.X9ECParameters: byte[] getSeed()>();

        $r13 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: java.security.spec.EllipticCurve convertCurve(org.bouncycastle.math.ec.ECCurve,byte[])>($r11, $r12);

        $r101 = new java.security.spec.ECParameterSpec;

        $r100 = new java.security.spec.ECPoint;

        $r17 = virtualinvoke $r99.<org.bouncycastle.asn1.x9.X9ECParameters: org.bouncycastle.math.ec.ECPoint getG()>();

        $r18 = virtualinvoke $r17.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getX()>();

        $r19 = virtualinvoke $r18.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r20 = virtualinvoke $r99.<org.bouncycastle.asn1.x9.X9ECParameters: org.bouncycastle.math.ec.ECPoint getG()>();

        $r21 = virtualinvoke $r20.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getY()>();

        $r22 = virtualinvoke $r21.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r100.<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>($r19, $r22);

        $r23 = virtualinvoke $r99.<org.bouncycastle.asn1.x9.X9ECParameters: java.math.BigInteger getN()>();

        $r24 = virtualinvoke $r99.<org.bouncycastle.asn1.x9.X9ECParameters: java.math.BigInteger getH()>();

        $i0 = virtualinvoke $r24.<java.math.BigInteger: int intValue()>();

        specialinvoke $r101.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r13, $r100, $r23, $i0);

        r14.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec> = $r101;

     label12:
        $r84 = virtualinvoke r0.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: org.bouncycastle.asn1.DERBitString getPublicKeyData()>();

        $r85 = virtualinvoke $r84.<org.bouncycastle.asn1.DERBitString: byte[] getBytes()>();

        $r102 = new org.bouncycastle.asn1.DEROctetString;

        specialinvoke $r102.<org.bouncycastle.asn1.DEROctetString: void <init>(byte[])>($r85);

        r87 = $r102;

        $b17 = $r85[0];

        $i18 = (int) $b17;

        if $i18 != 4 goto label17;

        $b3 = $r85[1];

        $i1 = lengthof $r85;

        $i2 = $i1 - 2;

        $i19 = (int) $b3;

        if $i19 != $i2 goto label17;

        $b4 = $r85[2];

        $i20 = (int) $b4;

        if $i20 == 2 goto label13;

        $b8 = $r85[2];

        $i21 = (int) $b8;

        if $i21 != 3 goto label17;

     label13:
        $r103 = new org.bouncycastle.asn1.x9.X9IntegerConverter;

        specialinvoke $r103.<org.bouncycastle.asn1.x9.X9IntegerConverter: void <init>()>();

        $i5 = virtualinvoke $r103.<org.bouncycastle.asn1.x9.X9IntegerConverter: int getByteLength(org.bouncycastle.math.ec.ECCurve)>(r83);

        $i6 = lengthof $r85;

        $i7 = $i6 - 3;

        if $i5 < $i7 goto label17;

     label14:
        $r26 = staticinvoke <org.bouncycastle.asn1.ASN1Object: org.bouncycastle.asn1.ASN1Object fromByteArray(byte[])>($r85);

        r87 = (org.bouncycastle.asn1.ASN1OctetString) $r26;

     label15:
        goto label17;

     label16:
        $r75 := @caughtexception;

        $r104 = new java.lang.IllegalArgumentException;

        specialinvoke $r104.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("error recovering public key");

        throw $r104;

     label17:
        $r105 = new org.bouncycastle.asn1.x9.X9ECPoint;

        specialinvoke $r105.<org.bouncycastle.asn1.x9.X9ECPoint: void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.asn1.ASN1OctetString)>(r83, r87);

        $r89 = virtualinvoke $r105.<org.bouncycastle.asn1.x9.X9ECPoint: org.bouncycastle.math.ec.ECPoint getPoint()>();

        r14.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q> = $r89;

     label18:
        return;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.io.IOException from label14 to label15 with label16;
    }

    public java.lang.String getAlgorithm()
    {
        org.bouncycastle.jce.provider.JCEECPublicKey r0;
        java.lang.String $r1;

        r0 := @this: org.bouncycastle.jce.provider.JCEECPublicKey;

        $r1 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.lang.String algorithm>;

        return $r1;
    }

    public java.lang.String getFormat()
    {
        org.bouncycastle.jce.provider.JCEECPublicKey r0;

        r0 := @this: org.bouncycastle.jce.provider.JCEECPublicKey;

        return "X.509";
    }

    public byte[] getEncoded()
    {
        byte[] $r17, $r41, $r56, $r80, $r81;
        org.bouncycastle.asn1.ASN1OctetString $r75;
        java.math.BigInteger $r12, $r14, $r36, $r38, $r52, $r55, $r69, $r72;
        org.bouncycastle.asn1.x9.X9ECParameters $r7, $r31;
        org.bouncycastle.asn1.DERObject $r60, $r74, $r79;
        org.bouncycastle.math.ec.ECFieldElement $r51, $r54, $r68, $r71;
        long $l1, $l3;
        org.bouncycastle.math.ec.ECPoint $r10, $r34, $r50, $r53, $r64, $r67, $r70, $r73;
        java.lang.String $r1, $r23, $r46;
        java.security.spec.ECParameterSpec $r2, $r3, $r4, $r8, $r11, $r13, $r15, $r21, $r27, $r28, $r32, $r35, $r37, $r39, $r44;
        java.security.spec.ECPoint $r9, $r33;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r58, $r77;
        org.bouncycastle.asn1.x509.SubjectPublicKeyInfo $r57, r62, $r76;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.bouncycastle.asn1.DERObjectIdentifier $r24, $r47, $r48, $r59, $r78;
        java.security.spec.EllipticCurve $r5, $r16, $r29, $r40;
        org.bouncycastle.jce.spec.ECNamedCurveSpec $r22, $r45;
        org.bouncycastle.asn1.x9.X962Parameters $r18, $r19, $r25, $r42, r63;
        org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters $r26, $r43;
        org.bouncycastle.asn1.DEROctetString $r61;
        org.bouncycastle.asn1.DERNull $r20;
        int $i0, $i2;
        org.bouncycastle.math.ec.ECCurve $r6, $r30, $r65;
        org.bouncycastle.asn1.ASN1Encodable r49;
        org.bouncycastle.jce.provider.JCEECPublicKey r0;
        org.bouncycastle.asn1.x9.X9ECPoint $r66;

        r0 := @this: org.bouncycastle.jce.provider.JCEECPublicKey;

        $r1 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.lang.String algorithm>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("ECGOST3410");

        if $z0 == 0 goto label4;

        $r26 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters gostParams>;

        if $r26 == null goto label1;

        r49 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters gostParams>;

        goto label3;

     label1:
        $r27 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec>;

        $z3 = $r27 instanceof org.bouncycastle.jce.spec.ECNamedCurveSpec;

        if $z3 == 0 goto label2;

        $r43 = new org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters;

        $r44 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec>;

        $r45 = (org.bouncycastle.jce.spec.ECNamedCurveSpec) $r44;

        $r46 = virtualinvoke $r45.<org.bouncycastle.jce.spec.ECNamedCurveSpec: java.lang.String getName()>();

        $r47 = staticinvoke <org.bouncycastle.asn1.cryptopro.ECGOST3410NamedCurves: org.bouncycastle.asn1.DERObjectIdentifier getOID(java.lang.String)>($r46);

        $r48 = <org.bouncycastle.asn1.cryptopro.CryptoProObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier gostR3411_94_CryptoProParamSet>;

        specialinvoke $r43.<org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters: void <init>(org.bouncycastle.asn1.DERObjectIdentifier,org.bouncycastle.asn1.DERObjectIdentifier)>($r47, $r48);

        r49 = $r43;

        goto label3;

     label2:
        $r28 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec>;

        $r29 = virtualinvoke $r28.<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()>();

        $r30 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: org.bouncycastle.math.ec.ECCurve convertCurve(java.security.spec.EllipticCurve)>($r29);

        $r31 = new org.bouncycastle.asn1.x9.X9ECParameters;

        $r32 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec>;

        $r33 = virtualinvoke $r32.<java.security.spec.ECParameterSpec: java.security.spec.ECPoint getGenerator()>();

        $z4 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: boolean withCompression>;

        $r34 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: org.bouncycastle.math.ec.ECPoint convertPoint(org.bouncycastle.math.ec.ECCurve,java.security.spec.ECPoint,boolean)>($r30, $r33, $z4);

        $r35 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec>;

        $r36 = virtualinvoke $r35.<java.security.spec.ECParameterSpec: java.math.BigInteger getOrder()>();

        $r37 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec>;

        $i2 = virtualinvoke $r37.<java.security.spec.ECParameterSpec: int getCofactor()>();

        $l3 = (long) $i2;

        $r38 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l3);

        $r39 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec>;

        $r40 = virtualinvoke $r39.<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()>();

        $r41 = virtualinvoke $r40.<java.security.spec.EllipticCurve: byte[] getSeed()>();

        specialinvoke $r31.<org.bouncycastle.asn1.x9.X9ECParameters: void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>($r30, $r34, $r36, $r38, $r41);

        $r42 = new org.bouncycastle.asn1.x9.X962Parameters;

        specialinvoke $r42.<org.bouncycastle.asn1.x9.X962Parameters: void <init>(org.bouncycastle.asn1.x9.X9ECParameters)>($r31);

        r49 = $r42;

     label3:
        $r50 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q>;

        $r51 = virtualinvoke $r50.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getX()>();

        $r52 = virtualinvoke $r51.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r53 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q>;

        $r54 = virtualinvoke $r53.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getY()>();

        $r55 = virtualinvoke $r54.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r56 = newarray (byte)[64];

        specialinvoke r0.<org.bouncycastle.jce.provider.JCEECPublicKey: void extractBytes(byte[],int,java.math.BigInteger)>($r56, 0, $r52);

        specialinvoke r0.<org.bouncycastle.jce.provider.JCEECPublicKey: void extractBytes(byte[],int,java.math.BigInteger)>($r56, 32, $r55);

        $r57 = new org.bouncycastle.asn1.x509.SubjectPublicKeyInfo;

        $r58 = new org.bouncycastle.asn1.x509.AlgorithmIdentifier;

        $r59 = <org.bouncycastle.asn1.cryptopro.CryptoProObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier gostR3410_2001>;

        $r60 = virtualinvoke r49.<org.bouncycastle.asn1.ASN1Encodable: org.bouncycastle.asn1.DERObject getDERObject()>();

        specialinvoke $r58.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.bouncycastle.asn1.DERObjectIdentifier,org.bouncycastle.asn1.DEREncodable)>($r59, $r60);

        $r61 = new org.bouncycastle.asn1.DEROctetString;

        specialinvoke $r61.<org.bouncycastle.asn1.DEROctetString: void <init>(byte[])>($r56);

        specialinvoke $r57.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.DEREncodable)>($r58, $r61);

        r62 = $r57;

        goto label8;

     label4:
        $r2 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec>;

        $z1 = $r2 instanceof org.bouncycastle.jce.spec.ECNamedCurveSpec;

        if $z1 == 0 goto label5;

        $r21 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec>;

        $r22 = (org.bouncycastle.jce.spec.ECNamedCurveSpec) $r21;

        $r23 = virtualinvoke $r22.<org.bouncycastle.jce.spec.ECNamedCurveSpec: java.lang.String getName()>();

        $r24 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.ECUtil: org.bouncycastle.asn1.DERObjectIdentifier getNamedCurveOid(java.lang.String)>($r23);

        $r25 = new org.bouncycastle.asn1.x9.X962Parameters;

        specialinvoke $r25.<org.bouncycastle.asn1.x9.X962Parameters: void <init>(org.bouncycastle.asn1.DERObjectIdentifier)>($r24);

        r63 = $r25;

        goto label7;

     label5:
        $r3 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec>;

        if $r3 != null goto label6;

        $r19 = new org.bouncycastle.asn1.x9.X962Parameters;

        $r20 = <org.bouncycastle.asn1.DERNull: org.bouncycastle.asn1.DERNull INSTANCE>;

        specialinvoke $r19.<org.bouncycastle.asn1.x9.X962Parameters: void <init>(org.bouncycastle.asn1.DERObject)>($r20);

        r63 = $r19;

        goto label7;

     label6:
        $r4 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec>;

        $r5 = virtualinvoke $r4.<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()>();

        $r6 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: org.bouncycastle.math.ec.ECCurve convertCurve(java.security.spec.EllipticCurve)>($r5);

        $r7 = new org.bouncycastle.asn1.x9.X9ECParameters;

        $r8 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec>;

        $r9 = virtualinvoke $r8.<java.security.spec.ECParameterSpec: java.security.spec.ECPoint getGenerator()>();

        $z2 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: boolean withCompression>;

        $r10 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: org.bouncycastle.math.ec.ECPoint convertPoint(org.bouncycastle.math.ec.ECCurve,java.security.spec.ECPoint,boolean)>($r6, $r9, $z2);

        $r11 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec>;

        $r12 = virtualinvoke $r11.<java.security.spec.ECParameterSpec: java.math.BigInteger getOrder()>();

        $r13 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec>;

        $i0 = virtualinvoke $r13.<java.security.spec.ECParameterSpec: int getCofactor()>();

        $l1 = (long) $i0;

        $r14 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        $r15 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec>;

        $r16 = virtualinvoke $r15.<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()>();

        $r17 = virtualinvoke $r16.<java.security.spec.EllipticCurve: byte[] getSeed()>();

        specialinvoke $r7.<org.bouncycastle.asn1.x9.X9ECParameters: void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>($r6, $r10, $r12, $r14, $r17);

        $r18 = new org.bouncycastle.asn1.x9.X962Parameters;

        specialinvoke $r18.<org.bouncycastle.asn1.x9.X962Parameters: void <init>(org.bouncycastle.asn1.x9.X9ECParameters)>($r7);

        r63 = $r18;

     label7:
        $r64 = virtualinvoke r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint engineGetQ()>();

        $r65 = virtualinvoke $r64.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECCurve getCurve()>();

        $r66 = new org.bouncycastle.asn1.x9.X9ECPoint;

        $r67 = virtualinvoke r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint getQ()>();

        $r68 = virtualinvoke $r67.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getX()>();

        $r69 = virtualinvoke $r68.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r70 = virtualinvoke r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint getQ()>();

        $r71 = virtualinvoke $r70.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getY()>();

        $r72 = virtualinvoke $r71.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $z5 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: boolean withCompression>;

        $r73 = virtualinvoke $r65.<org.bouncycastle.math.ec.ECCurve: org.bouncycastle.math.ec.ECPoint createPoint(java.math.BigInteger,java.math.BigInteger,boolean)>($r69, $r72, $z5);

        specialinvoke $r66.<org.bouncycastle.asn1.x9.X9ECPoint: void <init>(org.bouncycastle.math.ec.ECPoint)>($r73);

        $r74 = virtualinvoke $r66.<org.bouncycastle.asn1.x9.X9ECPoint: org.bouncycastle.asn1.DERObject getDERObject()>();

        $r75 = (org.bouncycastle.asn1.ASN1OctetString) $r74;

        $r76 = new org.bouncycastle.asn1.x509.SubjectPublicKeyInfo;

        $r77 = new org.bouncycastle.asn1.x509.AlgorithmIdentifier;

        $r78 = <org.bouncycastle.asn1.x9.X9ObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier id_ecPublicKey>;

        $r79 = virtualinvoke r63.<org.bouncycastle.asn1.ASN1Encodable: org.bouncycastle.asn1.DERObject getDERObject()>();

        specialinvoke $r77.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.bouncycastle.asn1.DERObjectIdentifier,org.bouncycastle.asn1.DEREncodable)>($r78, $r79);

        $r80 = virtualinvoke $r75.<org.bouncycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        specialinvoke $r76.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])>($r77, $r80);

        r62 = $r76;

     label8:
        $r81 = virtualinvoke r62.<org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: byte[] getDEREncoded()>();

        return $r81;
    }

    private void extractBytes(byte[], int, java.math.BigInteger)
    {
        byte[] $r1, r2, r4;
        byte $b5;
        int $i0, i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, i11;
        java.math.BigInteger r0;
        org.bouncycastle.jce.provider.JCEECPublicKey r3;

        r3 := @this: org.bouncycastle.jce.provider.JCEECPublicKey;

        r2 := @parameter0: byte[];

        i1 := @parameter1: int;

        r0 := @parameter2: java.math.BigInteger;

        $r1 = virtualinvoke r0.<java.math.BigInteger: byte[] toByteArray()>();

        $i0 = lengthof $r1;

        if $i0 >= 32 goto label1;

        r4 = newarray (byte)[32];

        $i8 = lengthof r4;

        $i7 = lengthof $r1;

        $i10 = $i8 - $i7;

        $i9 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, r4, $i10, $i9);

     label1:
        i11 = 0;

     label2:
        if i11 == 32 goto label3;

        $i6 = i1 + i11;

        $i2 = lengthof $r1;

        $i3 = $i2 - 1;

        $i4 = $i3 - i11;

        $b5 = $r1[$i4];

        r2[$i6] = $b5;

        i11 = i11 + 1;

        goto label2;

     label3:
        return;
    }

    public java.security.spec.ECParameterSpec getParams()
    {
        org.bouncycastle.jce.provider.JCEECPublicKey r0;
        java.security.spec.ECParameterSpec $r1;

        r0 := @this: org.bouncycastle.jce.provider.JCEECPublicKey;

        $r1 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec>;

        return $r1;
    }

    public org.bouncycastle.jce.spec.ECParameterSpec getParameters()
    {
        org.bouncycastle.jce.provider.JCEECPublicKey r0;
        org.bouncycastle.jce.spec.ECParameterSpec $r3;
        java.security.spec.ECParameterSpec $r1, $r2;
        boolean $z0;

        r0 := @this: org.bouncycastle.jce.provider.JCEECPublicKey;

        $r1 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec>;

        $z0 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: boolean withCompression>;

        $r3 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: org.bouncycastle.jce.spec.ECParameterSpec convertSpec(java.security.spec.ECParameterSpec,boolean)>($r2, $z0);

        return $r3;
    }

    public java.security.spec.ECPoint getW()
    {
        org.bouncycastle.math.ec.ECFieldElement $r3, $r6;
        org.bouncycastle.jce.provider.JCEECPublicKey r1;
        org.bouncycastle.math.ec.ECPoint $r2, $r5;
        java.security.spec.ECPoint $r0;
        java.math.BigInteger $r4, $r7;

        r1 := @this: org.bouncycastle.jce.provider.JCEECPublicKey;

        $r0 = new java.security.spec.ECPoint;

        $r2 = r1.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q>;

        $r3 = virtualinvoke $r2.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getX()>();

        $r4 = virtualinvoke $r3.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r5 = r1.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q>;

        $r6 = virtualinvoke $r5.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getY()>();

        $r7 = virtualinvoke $r6.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        specialinvoke $r0.<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>($r4, $r7);

        return $r0;
    }

    public org.bouncycastle.math.ec.ECPoint getQ()
    {
        org.bouncycastle.math.ec.ECFieldElement $r6, $r8, $r11, $r13;
        org.bouncycastle.jce.provider.JCEECPublicKey r0;
        java.security.spec.ECParameterSpec $r1;
        org.bouncycastle.math.ec.ECPoint $r2, $r3, $r5, $r7, $r10, $r12;
        org.bouncycastle.math.ec.ECPoint$Fp $r9;
        org.bouncycastle.math.ec.ECPoint$F2m $r4;
        boolean $z0;

        r0 := @this: org.bouncycastle.jce.provider.JCEECPublicKey;

        $r1 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec>;

        if $r1 != null goto label2;

        $r3 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q>;

        $z0 = $r3 instanceof org.bouncycastle.math.ec.ECPoint$Fp;

        if $z0 == 0 goto label1;

        $r9 = new org.bouncycastle.math.ec.ECPoint$Fp;

        $r10 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q>;

        $r11 = virtualinvoke $r10.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getX()>();

        $r12 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q>;

        $r13 = virtualinvoke $r12.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getY()>();

        specialinvoke $r9.<org.bouncycastle.math.ec.ECPoint$Fp: void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECFieldElement,org.bouncycastle.math.ec.ECFieldElement)>(null, $r11, $r13);

        return $r9;

     label1:
        $r4 = new org.bouncycastle.math.ec.ECPoint$F2m;

        $r5 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q>;

        $r6 = virtualinvoke $r5.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getX()>();

        $r7 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q>;

        $r8 = virtualinvoke $r7.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getY()>();

        specialinvoke $r4.<org.bouncycastle.math.ec.ECPoint$F2m: void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECFieldElement,org.bouncycastle.math.ec.ECFieldElement)>(null, $r6, $r8);

        return $r4;

     label2:
        $r2 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q>;

        return $r2;
    }

    public org.bouncycastle.math.ec.ECPoint engineGetQ()
    {
        org.bouncycastle.jce.provider.JCEECPublicKey r0;
        org.bouncycastle.math.ec.ECPoint $r1;

        r0 := @this: org.bouncycastle.jce.provider.JCEECPublicKey;

        $r1 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q>;

        return $r1;
    }

    org.bouncycastle.jce.spec.ECParameterSpec engineGetSpec()
    {
        org.bouncycastle.jce.provider.JCEECPublicKey r0;
        org.bouncycastle.jce.spec.ECParameterSpec $r2, $r4;
        java.security.spec.ECParameterSpec $r1, $r3;
        boolean $z0;

        r0 := @this: org.bouncycastle.jce.provider.JCEECPublicKey;

        $r1 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec>;

        if $r1 == null goto label1;

        $r3 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec ecSpec>;

        $z0 = r0.<org.bouncycastle.jce.provider.JCEECPublicKey: boolean withCompression>;

        $r4 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: org.bouncycastle.jce.spec.ECParameterSpec convertSpec(java.security.spec.ECParameterSpec,boolean)>($r3, $z0);

        return $r4;

     label1:
        $r2 = staticinvoke <org.bouncycastle.jce.provider.ProviderUtil: org.bouncycastle.jce.spec.ECParameterSpec getEcImplicitlyCa()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        org.bouncycastle.math.ec.ECFieldElement $r6, $r12;
        org.bouncycastle.math.ec.ECPoint $r5, $r11;
        java.lang.StringBuffer $r0, $r2, $r3, $r9, $r10, $r15;
        java.math.BigInteger $r7, $r13;
        java.lang.String $r1, $r8, $r14, $r16;
        org.bouncycastle.jce.provider.JCEECPublicKey r4;

        r4 := @this: org.bouncycastle.jce.provider.JCEECPublicKey;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("EC Public Key");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("            X: ");

        $r5 = r4.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q>;

        $r6 = virtualinvoke $r5.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getX()>();

        $r7 = virtualinvoke $r6.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r8 = virtualinvoke $r7.<java.math.BigInteger: java.lang.String toString(int)>(16);

        $r9 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("            Y: ");

        $r11 = r4.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint q>;

        $r12 = virtualinvoke $r11.<org.bouncycastle.math.ec.ECPoint: org.bouncycastle.math.ec.ECFieldElement getY()>();

        $r13 = virtualinvoke $r12.<org.bouncycastle.math.ec.ECFieldElement: java.math.BigInteger toBigInteger()>();

        $r14 = virtualinvoke $r13.<java.math.BigInteger: java.lang.String toString(int)>(16);

        $r15 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r16 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r16;
    }

    public void setPointFormat(java.lang.String)
    {
        org.bouncycastle.jce.provider.JCEECPublicKey r0;
        java.lang.String r1, $r2;
        boolean $z0, $z1;

        r0 := @this: org.bouncycastle.jce.provider.JCEECPublicKey;

        r1 := @parameter0: java.lang.String;

        $r2 = "UNCOMPRESSED";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<org.bouncycastle.jce.provider.JCEECPublicKey: boolean withCompression> = $z1;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.bouncycastle.jce.provider.JCEECPublicKey r1, r2;
        org.bouncycastle.math.ec.ECPoint $r3, $r4;
        java.lang.Object r0;
        org.bouncycastle.jce.spec.ECParameterSpec $r5, $r6;
        boolean $z0, $z1, $z2, $z3;

        r2 := @this: org.bouncycastle.jce.provider.JCEECPublicKey;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.bouncycastle.jce.provider.JCEECPublicKey;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (org.bouncycastle.jce.provider.JCEECPublicKey) r0;

        $r3 = virtualinvoke r2.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint engineGetQ()>();

        $r4 = virtualinvoke r1.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint engineGetQ()>();

        $z1 = virtualinvoke $r3.<org.bouncycastle.math.ec.ECPoint: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label2;

        $r5 = virtualinvoke r2.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.jce.spec.ECParameterSpec engineGetSpec()>();

        $r6 = virtualinvoke r1.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.jce.spec.ECParameterSpec engineGetSpec()>();

        $z2 = virtualinvoke $r5.<org.bouncycastle.jce.spec.ECParameterSpec: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public int hashCode()
    {
        org.bouncycastle.math.ec.ECPoint $r1;
        int $i0, $i1, $i2;
        org.bouncycastle.jce.provider.JCEECPublicKey r0;
        org.bouncycastle.jce.spec.ECParameterSpec $r2;

        r0 := @this: org.bouncycastle.jce.provider.JCEECPublicKey;

        $r1 = virtualinvoke r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.math.ec.ECPoint engineGetQ()>();

        $i0 = virtualinvoke $r1.<org.bouncycastle.math.ec.ECPoint: int hashCode()>();

        $r2 = virtualinvoke r0.<org.bouncycastle.jce.provider.JCEECPublicKey: org.bouncycastle.jce.spec.ECParameterSpec engineGetSpec()>();

        $i1 = virtualinvoke $r2.<org.bouncycastle.jce.spec.ECParameterSpec: int hashCode()>();

        $i2 = $i0 ^ $i1;

        return $i2;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        byte[] $r2, r3;
        org.bouncycastle.asn1.x509.SubjectPublicKeyInfo $r6;
        java.io.ObjectInputStream r0;
        org.bouncycastle.jce.provider.JCEECPublicKey r4;
        java.lang.Object $r1, $r7;
        java.lang.String $r8;
        org.bouncycastle.asn1.ASN1Object $r5;
        boolean $z0;

        r4 := @this: org.bouncycastle.jce.provider.JCEECPublicKey;

        r0 := @parameter0: java.io.ObjectInputStream;

        $r1 = virtualinvoke r0.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r2 = (byte[]) $r1;

        r3 = (byte[]) $r2;

        $r5 = staticinvoke <org.bouncycastle.asn1.ASN1Object: org.bouncycastle.asn1.ASN1Object fromByteArray(byte[])>(r3);

        $r6 = staticinvoke <org.bouncycastle.asn1.x509.SubjectPublicKeyInfo: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getInstance(java.lang.Object)>($r5);

        specialinvoke r4.<org.bouncycastle.jce.provider.JCEECPublicKey: void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>($r6);

        $r7 = virtualinvoke r0.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r8 = (java.lang.String) $r7;

        r4.<org.bouncycastle.jce.provider.JCEECPublicKey: java.lang.String algorithm> = $r8;

        $z0 = virtualinvoke r0.<java.io.ObjectInputStream: boolean readBoolean()>();

        r4.<org.bouncycastle.jce.provider.JCEECPublicKey: boolean withCompression> = $z0;

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        byte[] $r2;
        java.io.ObjectOutputStream r0;
        org.bouncycastle.jce.provider.JCEECPublicKey r1;
        java.lang.String $r3;
        boolean $z0;

        r1 := @this: org.bouncycastle.jce.provider.JCEECPublicKey;

        r0 := @parameter0: java.io.ObjectOutputStream;

        $r2 = virtualinvoke r1.<org.bouncycastle.jce.provider.JCEECPublicKey: byte[] getEncoded()>();

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        $r3 = r1.<org.bouncycastle.jce.provider.JCEECPublicKey: java.lang.String algorithm>;

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r3);

        $z0 = r1.<org.bouncycastle.jce.provider.JCEECPublicKey: boolean withCompression>;

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeBoolean(boolean)>($z0);

        return;
    }
}
