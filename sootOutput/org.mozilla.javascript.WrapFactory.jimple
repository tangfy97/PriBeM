public class org.mozilla.javascript.WrapFactory extends java.lang.Object
{
    private boolean javaPrimitiveWrap;

    public void <init>()
    {
        org.mozilla.javascript.WrapFactory r0;

        r0 := @this: org.mozilla.javascript.WrapFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mozilla.javascript.WrapFactory: boolean javaPrimitiveWrap> = 1;

        return;
    }

    public java.lang.Object wrap(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object, java.lang.Class)
    {
        java.lang.Integer $r16;
        java.lang.Character $r9, $r14;
        int $i2;
        java.lang.String $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.mozilla.javascript.Context r5;
        char $c0, $c1;
        org.mozilla.javascript.WrapFactory r3;
        org.mozilla.javascript.Scriptable r6, $r7;
        org.mozilla.javascript.NativeJavaArray $r8;
        java.lang.Object r0, $r1, $r15;
        java.lang.Class r2, $r4, $r11, $r12;

        r3 := @this: org.mozilla.javascript.WrapFactory;

        r5 := @parameter0: org.mozilla.javascript.Context;

        r6 := @parameter1: org.mozilla.javascript.Scriptable;

        r0 := @parameter2: java.lang.Object;

        r2 := @parameter3: java.lang.Class;

        if r0 == null goto label1;

        $r1 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r0 == $r1 goto label1;

        $z0 = r0 instanceof org.mozilla.javascript.Scriptable;

        if $z0 == 0 goto label2;

     label1:
        return r0;

     label2:
        if r2 == null goto label5;

        $z7 = virtualinvoke r2.<java.lang.Class: boolean isPrimitive()>();

        if $z7 == 0 goto label5;

        $r11 = <java.lang.Void: java.lang.Class TYPE>;

        if r2 != $r11 goto label3;

        $r15 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        return $r15;

     label3:
        $r12 = <java.lang.Character: java.lang.Class TYPE>;

        if r2 != $r12 goto label4;

        $r16 = new java.lang.Integer;

        $r14 = (java.lang.Character) r0;

        $c1 = virtualinvoke $r14.<java.lang.Character: char charValue()>();

        $i2 = (int) $c1;

        specialinvoke $r16.<java.lang.Integer: void <init>(int)>($i2);

        return $r16;

     label4:
        return r0;

     label5:
        $z1 = virtualinvoke r3.<org.mozilla.javascript.WrapFactory: boolean isJavaPrimitiveWrap()>();

        if $z1 != 0 goto label8;

        $z3 = r0 instanceof java.lang.String;

        if $z3 != 0 goto label6;

        $z4 = r0 instanceof java.lang.Number;

        if $z4 != 0 goto label6;

        $z5 = r0 instanceof java.lang.Boolean;

        if $z5 == 0 goto label7;

     label6:
        return r0;

     label7:
        $z6 = r0 instanceof java.lang.Character;

        if $z6 == 0 goto label8;

        $r9 = (java.lang.Character) r0;

        $c0 = virtualinvoke $r9.<java.lang.Character: char charValue()>();

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c0);

        return $r10;

     label8:
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z2 = virtualinvoke $r4.<java.lang.Class: boolean isArray()>();

        if $z2 == 0 goto label9;

        $r8 = staticinvoke <org.mozilla.javascript.NativeJavaArray: org.mozilla.javascript.NativeJavaArray wrap(org.mozilla.javascript.Scriptable,java.lang.Object)>(r6, r0);

        return $r8;

     label9:
        $r7 = virtualinvoke r3.<org.mozilla.javascript.WrapFactory: org.mozilla.javascript.Scriptable wrapAsJavaObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Class)>(r5, r6, r0, r2);

        return $r7;
    }

    public org.mozilla.javascript.Scriptable wrapNewObject(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object)
    {
        org.mozilla.javascript.Context r3;
        org.mozilla.javascript.WrapFactory r2;
        org.mozilla.javascript.Scriptable r4, $r5, $r7;
        org.mozilla.javascript.NativeJavaArray $r6;
        java.lang.Object r0;
        java.lang.Class $r1;
        boolean $z0, $z1;

        r2 := @this: org.mozilla.javascript.WrapFactory;

        r3 := @parameter0: org.mozilla.javascript.Context;

        r4 := @parameter1: org.mozilla.javascript.Scriptable;

        r0 := @parameter2: java.lang.Object;

        $z0 = r0 instanceof org.mozilla.javascript.Scriptable;

        if $z0 == 0 goto label1;

        $r7 = (org.mozilla.javascript.Scriptable) r0;

        return $r7;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z1 == 0 goto label2;

        $r6 = staticinvoke <org.mozilla.javascript.NativeJavaArray: org.mozilla.javascript.NativeJavaArray wrap(org.mozilla.javascript.Scriptable,java.lang.Object)>(r4, r0);

        return $r6;

     label2:
        $r5 = virtualinvoke r2.<org.mozilla.javascript.WrapFactory: org.mozilla.javascript.Scriptable wrapAsJavaObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Class)>(r3, r4, r0, null);

        return $r5;
    }

    public org.mozilla.javascript.Scriptable wrapAsJavaObject(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object, java.lang.Class)
    {
        org.mozilla.javascript.NativeJavaObject $r0;
        org.mozilla.javascript.Scriptable r1;
        org.mozilla.javascript.Context r5;
        java.lang.Object r2;
        java.lang.Class r3;
        org.mozilla.javascript.WrapFactory r4;

        r4 := @this: org.mozilla.javascript.WrapFactory;

        r5 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Class;

        $r0 = new org.mozilla.javascript.NativeJavaObject;

        specialinvoke $r0.<org.mozilla.javascript.NativeJavaObject: void <init>(org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Class)>(r1, r2, r3);

        return $r0;
    }

    public final boolean isJavaPrimitiveWrap()
    {
        org.mozilla.javascript.WrapFactory r0;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.WrapFactory;

        $z0 = r0.<org.mozilla.javascript.WrapFactory: boolean javaPrimitiveWrap>;

        return $z0;
    }

    public final void setJavaPrimitiveWrap(boolean)
    {
        org.mozilla.javascript.Context $r0;
        org.mozilla.javascript.WrapFactory r1;
        boolean z0, $z1;

        r1 := @this: org.mozilla.javascript.WrapFactory;

        z0 := @parameter0: boolean;

        $r0 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Context getCurrentContext()>();

        if $r0 == null goto label1;

        $z1 = virtualinvoke $r0.<org.mozilla.javascript.Context: boolean isSealed()>();

        if $z1 == 0 goto label1;

        staticinvoke <org.mozilla.javascript.Context: void onSealedMutation()>();

     label1:
        r1.<org.mozilla.javascript.WrapFactory: boolean javaPrimitiveWrap> = z0;

        return;
    }
}
