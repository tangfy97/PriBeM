final enum class org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type extends java.lang.Enum
{
    public static final enum org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type CELL;
    public static final enum org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type ROW;
    public static final enum org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type COLUMN;
    private static final org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type[] $VALUES;

    public static org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type[] values()
    {
        java.lang.Object $r1;
        org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type[] $r0, $r2;

        $r0 = <org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type: org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type[]) $r1;

        return $r2;
    }

    public static org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type valueOf(java.lang.String)
    {
        org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type $r2;
        java.lang.String r0;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/poi/ss/formula/FormulaParser$SimpleRangePart$Type;", r0);

        $r2 = (org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type r0;
        java.lang.String r1;

        r0 := @this: org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public static org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type get(boolean, boolean)
    {
        org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type $r0, $r2;
        java.lang.IllegalArgumentException $r1;
        boolean z0, z1;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        if z0 == 0 goto label3;

        if z1 == 0 goto label1;

        $r2 = <org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type: org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type CELL>;

        goto label2;

     label1:
        $r2 = <org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type: org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type COLUMN>;

     label2:
        return $r2;

     label3:
        if z1 != 0 goto label4;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("must have either letters or numbers");

        throw $r1;

     label4:
        $r0 = <org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type: org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type ROW>;

        return $r0;
    }

    static void <clinit>()
    {
        org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type $r0, $r1, $r2, $r4, $r5, $r6;
        org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type[] $r3;

        $r0 = new org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type;

        specialinvoke $r0.<org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type: void <init>(java.lang.String,int)>("CELL", 0);

        <org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type: org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type CELL> = $r0;

        $r1 = new org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type;

        specialinvoke $r1.<org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type: void <init>(java.lang.String,int)>("ROW", 1);

        <org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type: org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type ROW> = $r1;

        $r2 = new org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type;

        specialinvoke $r2.<org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type: void <init>(java.lang.String,int)>("COLUMN", 2);

        <org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type: org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type COLUMN> = $r2;

        $r3 = newarray (org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type)[3];

        $r4 = <org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type: org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type CELL>;

        $r3[0] = $r4;

        $r5 = <org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type: org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type ROW>;

        $r3[1] = $r5;

        $r6 = <org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type: org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type COLUMN>;

        $r3[2] = $r6;

        <org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type: org.apache.poi.ss.formula.FormulaParser$SimpleRangePart$Type[] $VALUES> = $r3;

        return;
    }
}
