public class ucar.nc2.ncml.NcMLReader extends java.lang.Object
{
    public static final org.jdom.Namespace ncNS;
    private static org.slf4j.Logger log;
    private static boolean debugURL;
    private static boolean debugXML;
    private static boolean showParsedXML;
    private static boolean debugOpen;
    private static boolean debugConstruct;
    private static boolean debugCmd;
    private static boolean debugAggDetail;
    private static boolean validate;
    private java.lang.String location;
    private boolean explicit;
    private java.util.Formatter errlog;

    public void <init>()
    {
        ucar.nc2.ncml.NcMLReader r0;
        java.util.Formatter $r1;

        r0 := @this: ucar.nc2.ncml.NcMLReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.ncml.NcMLReader: boolean explicit> = 0;

        $r1 = new java.util.Formatter;

        specialinvoke $r1.<java.util.Formatter: void <init>()>();

        r0.<ucar.nc2.ncml.NcMLReader: java.util.Formatter errlog> = $r1;

        return;
    }

    public static void setDebugFlags(ucar.nc2.util.DebugFlags)
    {
        ucar.nc2.util.DebugFlags r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @parameter0: ucar.nc2.util.DebugFlags;

        $z0 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("NcML/debugURL");

        <ucar.nc2.ncml.NcMLReader: boolean debugURL> = $z0;

        $z1 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("NcML/debugXML");

        <ucar.nc2.ncml.NcMLReader: boolean debugXML> = $z1;

        $z2 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("NcML/showParsedXML");

        <ucar.nc2.ncml.NcMLReader: boolean showParsedXML> = $z2;

        $z3 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("NcML/debugCmd");

        <ucar.nc2.ncml.NcMLReader: boolean debugCmd> = $z3;

        $z4 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("NcML/debugOpen");

        <ucar.nc2.ncml.NcMLReader: boolean debugOpen> = $z4;

        $z5 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("NcML/debugConstruct");

        <ucar.nc2.ncml.NcMLReader: boolean debugConstruct> = $z5;

        $z6 = interfaceinvoke r0.<ucar.nc2.util.DebugFlags: boolean isSet(java.lang.String)>("NcML/debugAggDetail");

        <ucar.nc2.ncml.NcMLReader: boolean debugAggDetail> = $z6;

        return;
    }

    public static void wrapNcMLresource(ucar.nc2.dataset.NetcdfDataset, java.lang.String, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.ncml.NcMLReader $r8;
        org.jdom.output.XMLOutputter $r16;
        org.jdom.Document $r6;
        ucar.nc2.util.CancelTask r10;
        org.jdom.JDOMException $r45;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.io.FileNotFoundException $r44;
        java.lang.StringBuilder $r11, $r13, $r14, $r17, $r19, $r21, $r22, $r25, $r27, $r28, $r29, $r31, $r33, $r34, $r35, $r38, $r40, $r42;
        java.lang.ClassLoader $r2;
        org.jdom.input.SAXBuilder $r5;
        java.lang.String r3, $r9, $r15, $r20, $r23, $r30, $r36, $r41, $r43, $r47;
        java.io.PrintStream $r12, $r18, $r24, $r26, $r32, $r39;
        java.io.IOException $r46;
        java.lang.Class $r1;
        ucar.nc2.dataset.NetcdfDataset r0;
        org.jdom.Element $r7;
        java.io.InputStream $r4, $r37;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter1: java.lang.String;

        r10 := @parameter2: ucar.nc2.util.CancelTask;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r4 = virtualinvoke $r2.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r3);

        if $r4 != null goto label1;

        $r44 = new java.io.FileNotFoundException;

        specialinvoke $r44.<java.io.FileNotFoundException: void <init>(java.lang.String)>(r3);

        throw $r44;

     label1:
        $z0 = <ucar.nc2.ncml.NcMLReader: boolean debugXML>;

        if $z0 == 0 goto label2;

        $r32 = <java.lang.System: java.io.PrintStream out>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" NetcdfDataset URL = <");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r36);

        $r37 = virtualinvoke $r2.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r3);

        $r39 = <java.lang.System: java.io.PrintStream out>;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" contents=\n");

        $r41 = staticinvoke <ucar.nc2.util.IO: java.lang.String readContents(java.io.InputStream)>($r37);

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>($r43);

     label2:
        $r5 = new org.jdom.input.SAXBuilder;

        $z1 = <ucar.nc2.ncml.NcMLReader: boolean validate>;

        specialinvoke $r5.<org.jdom.input.SAXBuilder: void <init>(boolean)>($z1);

        $z2 = <ucar.nc2.ncml.NcMLReader: boolean debugURL>;

        if $z2 == 0 goto label3;

        $r26 = <java.lang.System: java.io.PrintStream out>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" NetcdfDataset URL = <");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r30);

     label3:
        $r6 = virtualinvoke $r5.<org.jdom.input.SAXBuilder: org.jdom.Document build(java.io.InputStream)>($r4);

     label4:
        goto label6;

     label5:
        $r45 := @caughtexception;

        $r46 = new java.io.IOException;

        $r47 = virtualinvoke $r45.<org.jdom.JDOMException: java.lang.String getMessage()>();

        specialinvoke $r46.<java.io.IOException: void <init>(java.lang.String)>($r47);

        throw $r46;

     label6:
        $z3 = <ucar.nc2.ncml.NcMLReader: boolean debugXML>;

        if $z3 == 0 goto label7;

        $r24 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>(" SAXBuilder done");

     label7:
        $z4 = <ucar.nc2.ncml.NcMLReader: boolean showParsedXML>;

        if $z4 == 0 goto label8;

        $r16 = new org.jdom.output.XMLOutputter;

        specialinvoke $r16.<org.jdom.output.XMLOutputter: void <init>()>();

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*** NetcdfDataset/showParsedXML = \n");

        $r20 = virtualinvoke $r16.<org.jdom.output.XMLOutputter: java.lang.String outputString(org.jdom.Document)>($r6);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n*******");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r23);

     label8:
        $r7 = virtualinvoke $r6.<org.jdom.Document: org.jdom.Element getRootElement()>();

        $r8 = new ucar.nc2.ncml.NcMLReader;

        specialinvoke $r8.<ucar.nc2.ncml.NcMLReader: void <init>()>();

        $r9 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String getLocation()>();

        virtualinvoke $r8.<ucar.nc2.ncml.NcMLReader: void readNetcdf(java.lang.String,ucar.nc2.dataset.NetcdfDataset,ucar.nc2.NetcdfFile,org.jdom.Element,ucar.nc2.util.CancelTask)>($r9, r0, r0, $r7, r10);

        $z5 = <ucar.nc2.ncml.NcMLReader: boolean debugOpen>;

        if $z5 == 0 goto label9;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("***NcMLReader.wrapNcML result= \n");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15);

     label9:
        return;

        catch org.jdom.JDOMException from label2 to label4 with label5;
    }

    public static void wrapNcML(ucar.nc2.dataset.NetcdfDataset, java.lang.String, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.ncml.NcMLReader $r4;
        org.jdom.output.XMLOutputter $r12;
        org.jdom.Document $r2;
        ucar.nc2.util.CancelTask r6;
        org.jdom.JDOMException $r27;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r7, $r9, $r10, $r13, $r15, $r17, $r18, $r21, $r23, $r24, $r25;
        org.jdom.input.SAXBuilder $r0;
        java.lang.String r1, $r11, $r16, $r19, $r26, $r29;
        java.io.PrintStream $r8, $r14, $r20, $r22;
        java.io.IOException $r28;
        org.jdom.Element $r3;
        ucar.nc2.dataset.NetcdfDataset r5;

        r5 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: java.lang.String;

        r6 := @parameter2: ucar.nc2.util.CancelTask;

     label1:
        $r0 = new org.jdom.input.SAXBuilder;

        $z0 = <ucar.nc2.ncml.NcMLReader: boolean validate>;

        specialinvoke $r0.<org.jdom.input.SAXBuilder: void <init>(boolean)>($z0);

        $z1 = <ucar.nc2.ncml.NcMLReader: boolean debugURL>;

        if $z1 == 0 goto label2;

        $r22 = <java.lang.System: java.io.PrintStream out>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" NetcdfDataset URL = <");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r26);

     label2:
        $r2 = virtualinvoke $r0.<org.jdom.input.SAXBuilder: org.jdom.Document build(java.lang.String)>(r1);

     label3:
        goto label5;

     label4:
        $r27 := @caughtexception;

        $r28 = new java.io.IOException;

        $r29 = virtualinvoke $r27.<org.jdom.JDOMException: java.lang.String getMessage()>();

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>($r29);

        throw $r28;

     label5:
        $z2 = <ucar.nc2.ncml.NcMLReader: boolean debugXML>;

        if $z2 == 0 goto label6;

        $r20 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>(" SAXBuilder done");

     label6:
        $z3 = <ucar.nc2.ncml.NcMLReader: boolean showParsedXML>;

        if $z3 == 0 goto label7;

        $r12 = new org.jdom.output.XMLOutputter;

        specialinvoke $r12.<org.jdom.output.XMLOutputter: void <init>()>();

        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*** NetcdfDataset/showParsedXML = \n");

        $r16 = virtualinvoke $r12.<org.jdom.output.XMLOutputter: java.lang.String outputString(org.jdom.Document)>($r2);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n*******");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r19);

     label7:
        $r3 = virtualinvoke $r2.<org.jdom.Document: org.jdom.Element getRootElement()>();

        $r4 = new ucar.nc2.ncml.NcMLReader;

        specialinvoke $r4.<ucar.nc2.ncml.NcMLReader: void <init>()>();

        virtualinvoke $r4.<ucar.nc2.ncml.NcMLReader: void readNetcdf(java.lang.String,ucar.nc2.dataset.NetcdfDataset,ucar.nc2.NetcdfFile,org.jdom.Element,ucar.nc2.util.CancelTask)>(r1, r5, r5, $r3, r6);

        $z4 = <ucar.nc2.ncml.NcMLReader: boolean debugOpen>;

        if $z4 == 0 goto label8;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("***NcMLReader.wrapNcML result= \n");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r11);

     label8:
        return;

        catch org.jdom.JDOMException from label1 to label3 with label4;
    }

    public static ucar.nc2.dataset.NetcdfDataset mergeNcML(ucar.nc2.NetcdfFile, org.jdom.Element) throws java.io.IOException
    {
        ucar.nc2.ncml.NcMLReader $r2;
        ucar.nc2.NetcdfFile r1;
        ucar.nc2.dataset.NetcdfDataset $r0;
        org.jdom.Element r3;

        r1 := @parameter0: ucar.nc2.NetcdfFile;

        r3 := @parameter1: org.jdom.Element;

        $r0 = new ucar.nc2.dataset.NetcdfDataset;

        specialinvoke $r0.<ucar.nc2.dataset.NetcdfDataset: void <init>(ucar.nc2.NetcdfFile,java.util.Set)>(r1, null);

        $r2 = new ucar.nc2.ncml.NcMLReader;

        specialinvoke $r2.<ucar.nc2.ncml.NcMLReader: void <init>()>();

        specialinvoke $r2.<ucar.nc2.ncml.NcMLReader: void readGroup(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Group,org.jdom.Element)>($r0, $r0, null, null, r3);

        virtualinvoke $r0.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        return $r0;
    }

    public static ucar.nc2.dataset.NetcdfDataset mergeNcMLdirect(ucar.nc2.dataset.NetcdfDataset, org.jdom.Element) throws java.io.IOException
    {
        ucar.nc2.ncml.NcMLReader $r0;
        ucar.nc2.dataset.NetcdfDataset r1;
        org.jdom.Element r2;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: org.jdom.Element;

        $r0 = new ucar.nc2.ncml.NcMLReader;

        specialinvoke $r0.<ucar.nc2.ncml.NcMLReader: void <init>()>();

        specialinvoke $r0.<ucar.nc2.ncml.NcMLReader: void readGroup(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Group,org.jdom.Element)>(r1, r1, null, null, r2);

        virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        return r1;
    }

    public static ucar.nc2.dataset.NetcdfDataset readNcML(java.lang.String, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.lang.String r0;
        ucar.nc2.util.CancelTask r1;
        ucar.nc2.dataset.NetcdfDataset $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: ucar.nc2.util.CancelTask;

        $r2 = staticinvoke <ucar.nc2.ncml.NcMLReader: ucar.nc2.dataset.NetcdfDataset readNcML(java.lang.String,java.lang.String,ucar.nc2.util.CancelTask)>(r0, null, r1);

        return $r2;
    }

    public static ucar.nc2.dataset.NetcdfDataset readNcML(java.lang.String, java.lang.String, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.ncml.NcMLReader $r72;
        org.jdom.output.XMLOutputter $r12;
        org.jdom.Document $r3;
        ucar.nc2.util.CancelTask r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r13, $r15, $r17, $r18, $r21, $r23, $r24, $r25, $r27, $r29, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r46, $r48, $r50, $r52, $r54, $r56, $r58, $r60, $r62, $r64, $r66;
        java.lang.String r1, $r10, $r11, $r16, $r19, $r26, $r31, $r35, $r37, $r41, $r43, $r47, $r49, $r53, $r55, $r59, $r61, $r65, $r67, $r70, r71;
        java.io.IOException $r69;
        org.jdom.Element $r4;
        ucar.nc2.dataset.NetcdfDataset $r73;
        java.net.URL $r0;
        org.jdom.JDOMException $r68;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.jdom.input.SAXBuilder $r2;
        java.io.PrintStream $r7, $r14, $r20, $r22, $r28, $r33, $r39, $r45, $r51, $r57, $r63;

        r1 := @parameter0: java.lang.String;

        r71 := @parameter1: java.lang.String;

        r5 := @parameter2: ucar.nc2.util.CancelTask;

        $r0 = new java.net.URL;

        specialinvoke $r0.<java.net.URL: void <init>(java.lang.String)>(r1);

        $z0 = <ucar.nc2.ncml.NcMLReader: boolean debugURL>;

        if $z0 == 0 goto label1;

        $r28 = <java.lang.System: java.io.PrintStream out>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" NcMLReader open ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r31);

        $r33 = <java.lang.System: java.io.PrintStream out>;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   URL = ");

        $r35 = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r37);

        $r39 = <java.lang.System: java.io.PrintStream out>;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   external form = ");

        $r41 = virtualinvoke $r0.<java.net.URL: java.lang.String toExternalForm()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>($r43);

        $r45 = <java.lang.System: java.io.PrintStream out>;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   protocol = ");

        $r47 = virtualinvoke $r0.<java.net.URL: java.lang.String getProtocol()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r45.<java.io.PrintStream: void println(java.lang.String)>($r49);

        $r51 = <java.lang.System: java.io.PrintStream out>;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   host = ");

        $r53 = virtualinvoke $r0.<java.net.URL: java.lang.String getHost()>();

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r51.<java.io.PrintStream: void println(java.lang.String)>($r55);

        $r57 = <java.lang.System: java.io.PrintStream out>;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   path = ");

        $r59 = virtualinvoke $r0.<java.net.URL: java.lang.String getPath()>();

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r57.<java.io.PrintStream: void println(java.lang.String)>($r61);

        $r63 = <java.lang.System: java.io.PrintStream out>;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  file = ");

        $r65 = virtualinvoke $r0.<java.net.URL: java.lang.String getFile()>();

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r63.<java.io.PrintStream: void println(java.lang.String)>($r67);

     label1:
        $r2 = new org.jdom.input.SAXBuilder;

        $z1 = <ucar.nc2.ncml.NcMLReader: boolean validate>;

        specialinvoke $r2.<org.jdom.input.SAXBuilder: void <init>(boolean)>($z1);

        $z2 = <ucar.nc2.ncml.NcMLReader: boolean debugURL>;

        if $z2 == 0 goto label2;

        $r22 = <java.lang.System: java.io.PrintStream out>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" NetcdfDataset URL = <");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r26);

     label2:
        $r3 = virtualinvoke $r2.<org.jdom.input.SAXBuilder: org.jdom.Document build(java.net.URL)>($r0);

     label3:
        goto label5;

     label4:
        $r68 := @caughtexception;

        $r69 = new java.io.IOException;

        $r70 = virtualinvoke $r68.<org.jdom.JDOMException: java.lang.String getMessage()>();

        specialinvoke $r69.<java.io.IOException: void <init>(java.lang.String)>($r70);

        throw $r69;

     label5:
        $z3 = <ucar.nc2.ncml.NcMLReader: boolean debugXML>;

        if $z3 == 0 goto label6;

        $r20 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>(" SAXBuilder done");

     label6:
        $z4 = <ucar.nc2.ncml.NcMLReader: boolean showParsedXML>;

        if $z4 == 0 goto label7;

        $r12 = new org.jdom.output.XMLOutputter;

        specialinvoke $r12.<org.jdom.output.XMLOutputter: void <init>()>();

        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*** NetcdfDataset/showParsedXML = \n");

        $r16 = virtualinvoke $r12.<org.jdom.output.XMLOutputter: java.lang.String outputString(org.jdom.Document)>($r3);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n*******");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r19);

     label7:
        $r4 = virtualinvoke $r3.<org.jdom.Document: org.jdom.Element getRootElement()>();

        if r71 != null goto label8;

        $r11 = virtualinvoke $r4.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("location");

        r71 = $r11;

        if $r11 != null goto label8;

        r71 = virtualinvoke $r4.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("uri");

     label8:
        $r72 = new ucar.nc2.ncml.NcMLReader;

        specialinvoke $r72.<ucar.nc2.ncml.NcMLReader: void <init>()>();

        $r73 = specialinvoke $r72.<ucar.nc2.ncml.NcMLReader: ucar.nc2.dataset.NetcdfDataset readNcML(java.lang.String,java.lang.String,org.jdom.Element,ucar.nc2.util.CancelTask)>(r1, r71, $r4, r5);

        $z5 = <ucar.nc2.ncml.NcMLReader: boolean debugOpen>;

        if $z5 == 0 goto label9;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("***NcMLReader.readNcML result= \n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r73);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);

     label9:
        return $r73;

        catch org.jdom.JDOMException from label1 to label3 with label4;
    }

    public static ucar.nc2.dataset.NetcdfDataset readNcML(java.io.InputStream, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        org.jdom.input.SAXBuilder $r0;
        org.jdom.output.XMLOutputter $r11;
        org.jdom.Document $r2;
        ucar.nc2.util.CancelTask r4;
        org.jdom.JDOMException $r20;
        java.lang.String $r10, $r15, $r18, $r22;
        boolean $z0, $z1, $z2, $z3;
        java.io.PrintStream $r7, $r13, $r19;
        java.io.IOException $r21;
        java.lang.StringBuilder $r6, $r8, $r9, $r12, $r14, $r16, $r17;
        org.jdom.Element $r3;
        ucar.nc2.dataset.NetcdfDataset $r5;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r4 := @parameter1: ucar.nc2.util.CancelTask;

     label1:
        $r0 = new org.jdom.input.SAXBuilder;

        $z0 = <ucar.nc2.ncml.NcMLReader: boolean validate>;

        specialinvoke $r0.<org.jdom.input.SAXBuilder: void <init>(boolean)>($z0);

        $r2 = virtualinvoke $r0.<org.jdom.input.SAXBuilder: org.jdom.Document build(java.io.InputStream)>(r1);

     label2:
        goto label4;

     label3:
        $r20 := @caughtexception;

        $r21 = new java.io.IOException;

        $r22 = virtualinvoke $r20.<org.jdom.JDOMException: java.lang.String getMessage()>();

        specialinvoke $r21.<java.io.IOException: void <init>(java.lang.String)>($r22);

        throw $r21;

     label4:
        $z1 = <ucar.nc2.ncml.NcMLReader: boolean debugXML>;

        if $z1 == 0 goto label5;

        $r19 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>(" SAXBuilder done");

     label5:
        $z2 = <ucar.nc2.ncml.NcMLReader: boolean showParsedXML>;

        if $z2 == 0 goto label6;

        $r11 = new org.jdom.output.XMLOutputter;

        specialinvoke $r11.<org.jdom.output.XMLOutputter: void <init>()>();

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*** NetcdfDataset/showParsedXML = \n");

        $r15 = virtualinvoke $r11.<org.jdom.output.XMLOutputter: java.lang.String outputString(org.jdom.Document)>($r2);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n*******");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18);

     label6:
        $r3 = virtualinvoke $r2.<org.jdom.Document: org.jdom.Element getRootElement()>();

        $r5 = staticinvoke <ucar.nc2.ncml.NcMLReader: ucar.nc2.dataset.NetcdfDataset readNcML(java.lang.String,org.jdom.Element,ucar.nc2.util.CancelTask)>(null, $r3, r4);

        $z3 = <ucar.nc2.ncml.NcMLReader: boolean debugOpen>;

        if $z3 == 0 goto label7;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("***NcMLReader.readNcML (stream) result= \n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);

     label7:
        return $r5;

        catch org.jdom.JDOMException from label1 to label2 with label3;
    }

    public static ucar.nc2.dataset.NetcdfDataset readNcML(java.io.Reader, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.io.Reader r0;
        ucar.nc2.util.CancelTask r1;
        ucar.nc2.dataset.NetcdfDataset $r2;

        r0 := @parameter0: java.io.Reader;

        r1 := @parameter1: ucar.nc2.util.CancelTask;

        $r2 = staticinvoke <ucar.nc2.ncml.NcMLReader: ucar.nc2.dataset.NetcdfDataset readNcML(java.io.Reader,java.lang.String,ucar.nc2.util.CancelTask)>(r0, null, r1);

        return $r2;
    }

    public static ucar.nc2.dataset.NetcdfDataset readNcML(java.io.Reader, java.lang.String, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        org.jdom.input.SAXBuilder $r0;
        org.jdom.output.XMLOutputter $r12;
        org.jdom.Document $r2;
        ucar.nc2.util.CancelTask r5;
        org.jdom.JDOMException $r21;
        java.lang.String r4, $r11, $r16, $r19, $r23;
        boolean $z0, $z1, $z2, $z3;
        java.io.PrintStream $r8, $r14, $r20;
        java.io.IOException $r22;
        java.io.Reader r1;
        java.lang.StringBuilder $r7, $r9, $r10, $r13, $r15, $r17, $r18;
        org.jdom.Element $r3;
        ucar.nc2.dataset.NetcdfDataset $r6;

        r1 := @parameter0: java.io.Reader;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: ucar.nc2.util.CancelTask;

     label1:
        $r0 = new org.jdom.input.SAXBuilder;

        $z0 = <ucar.nc2.ncml.NcMLReader: boolean validate>;

        specialinvoke $r0.<org.jdom.input.SAXBuilder: void <init>(boolean)>($z0);

        $r2 = virtualinvoke $r0.<org.jdom.input.SAXBuilder: org.jdom.Document build(java.io.Reader)>(r1);

     label2:
        goto label4;

     label3:
        $r21 := @caughtexception;

        $r22 = new java.io.IOException;

        $r23 = virtualinvoke $r21.<org.jdom.JDOMException: java.lang.String getMessage()>();

        specialinvoke $r22.<java.io.IOException: void <init>(java.lang.String)>($r23);

        throw $r22;

     label4:
        $z1 = <ucar.nc2.ncml.NcMLReader: boolean debugXML>;

        if $z1 == 0 goto label5;

        $r20 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>(" SAXBuilder done");

     label5:
        $z2 = <ucar.nc2.ncml.NcMLReader: boolean showParsedXML>;

        if $z2 == 0 goto label6;

        $r12 = new org.jdom.output.XMLOutputter;

        specialinvoke $r12.<org.jdom.output.XMLOutputter: void <init>()>();

        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*** NetcdfDataset/showParsedXML = \n");

        $r16 = virtualinvoke $r12.<org.jdom.output.XMLOutputter: java.lang.String outputString(org.jdom.Document)>($r2);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n*******");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r19);

     label6:
        $r3 = virtualinvoke $r2.<org.jdom.Document: org.jdom.Element getRootElement()>();

        $r6 = staticinvoke <ucar.nc2.ncml.NcMLReader: ucar.nc2.dataset.NetcdfDataset readNcML(java.lang.String,org.jdom.Element,ucar.nc2.util.CancelTask)>(r4, $r3, r5);

        $z3 = <ucar.nc2.ncml.NcMLReader: boolean debugOpen>;

        if $z3 == 0 goto label7;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("***NcMLReader.readNcML (stream) result= \n");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r11);

     label7:
        return $r6;

        catch org.jdom.JDOMException from label1 to label2 with label3;
    }

    public static ucar.nc2.dataset.NetcdfDataset readNcML(java.lang.String, org.jdom.Element, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.util.CancelTask r4;
        ucar.nc2.ncml.NcMLReader $r2;
        java.lang.String $r1, r3, r6;
        org.jdom.Element r0;
        ucar.nc2.dataset.NetcdfDataset $r5;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: org.jdom.Element;

        r4 := @parameter2: ucar.nc2.util.CancelTask;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("location");

        r6 = $r1;

        if $r1 != null goto label1;

        r6 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("uri");

     label1:
        $r2 = new ucar.nc2.ncml.NcMLReader;

        specialinvoke $r2.<ucar.nc2.ncml.NcMLReader: void <init>()>();

        $r5 = specialinvoke $r2.<ucar.nc2.ncml.NcMLReader: ucar.nc2.dataset.NetcdfDataset readNcML(java.lang.String,java.lang.String,org.jdom.Element,ucar.nc2.util.CancelTask)>(r3, r6, r0, r4);

        return $r5;
    }

    private ucar.nc2.dataset.NetcdfDataset readNcML(java.lang.String, java.lang.String, org.jdom.Element, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.ncml.NcMLReader r6;
        ucar.nc2.util.CancelTask r8;
        int i0, $i2;
        org.jdom.Namespace $r20;
        java.lang.String r0, $r1, $r3, $r4, $r5, $r15, r18;
        boolean $z0, $z1, $z2;
        ucar.nc2.ncml.NcMLReader$NcMLNetcdfFile $r25;
        java.io.IOException $r26;
        java.lang.IllegalArgumentException $r24;
        java.lang.Exception $r16;
        java.lang.StringBuilder $r13, $r14, $r23;
        org.jdom.Element r2, $r21;
        ucar.nc2.dataset.NetcdfDataset r19, r22, $r27, $r28;

        r6 := @this: ucar.nc2.ncml.NcMLReader;

        r0 := @parameter0: java.lang.String;

        r18 := @parameter1: java.lang.String;

        r2 := @parameter2: org.jdom.Element;

        r8 := @parameter3: ucar.nc2.util.CancelTask;

        $r1 = staticinvoke <ucar.nc2.util.URLnaming: java.lang.String resolve(java.lang.String,java.lang.String)>(r0, r18);

        if $r1 == null goto label01;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label01;

        $r24 = new java.lang.IllegalArgumentException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NcML location attribute refers to the NcML document itself");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r24;

     label01:
        $r3 = virtualinvoke r2.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("iosp");

        $r4 = virtualinvoke r2.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("iospParam");

        $r5 = virtualinvoke r2.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("buffer_size");

        $i2 = (int) -1;

        i0 = $i2;

        if $r5 == null goto label02;

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

     label02:
        r19 = null;

        if $r1 == null goto label08;

        if $r3 == null goto label07;

     label03:
        $r25 = new ucar.nc2.ncml.NcMLReader$NcMLNetcdfFile;

        specialinvoke $r25.<ucar.nc2.ncml.NcMLReader$NcMLNetcdfFile: void <init>(java.lang.String,java.lang.String,java.lang.String,int,ucar.nc2.util.CancelTask)>($r3, $r4, $r1, i0, r8);

     label04:
        goto label06;

     label05:
        $r16 := @caughtexception;

        $r26 = new java.io.IOException;

        specialinvoke $r26.<java.io.IOException: void <init>(java.lang.Throwable)>($r16);

        throw $r26;

     label06:
        $r27 = new ucar.nc2.dataset.NetcdfDataset;

        specialinvoke $r27.<ucar.nc2.dataset.NetcdfDataset: void <init>(ucar.nc2.NetcdfFile,boolean)>($r25, 0);

        r19 = $r27;

        goto label08;

     label07:
        r19 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.NetcdfDataset openDataset(java.lang.String,java.util.Set,int,ucar.nc2.util.CancelTask,java.lang.Object)>($r1, null, i0, r8, $r4);

     label08:
        $r20 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r21 = virtualinvoke r2.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("explicit", $r20);

        if $r21 == null goto label09;

        $z2 = 1;

        goto label10;

     label09:
        $z2 = 0;

     label10:
        r6.<ucar.nc2.ncml.NcMLReader: boolean explicit> = $z2;

        $z0 = r6.<ucar.nc2.ncml.NcMLReader: boolean explicit>;

        if $z0 != 0 goto label11;

        if r19 != null goto label13;

     label11:
        $r28 = new ucar.nc2.dataset.NetcdfDataset;

        specialinvoke $r28.<ucar.nc2.dataset.NetcdfDataset: void <init>()>();

        r22 = $r28;

        if r19 != null goto label12;

        r19 = $r28;

        goto label14;

     label12:
        virtualinvoke $r28.<ucar.nc2.dataset.NetcdfDataset: void setReferencedFile(ucar.nc2.NetcdfFile)>(r19);

        goto label14;

     label13:
        r22 = r19;

     label14:
        virtualinvoke r6.<ucar.nc2.ncml.NcMLReader: void readNetcdf(java.lang.String,ucar.nc2.dataset.NetcdfDataset,ucar.nc2.NetcdfFile,org.jdom.Element,ucar.nc2.util.CancelTask)>(r0, r22, r19, r2, r8);

        return r22;

        catch java.lang.Exception from label03 to label04 with label05;
    }

    public void readNetcdf(java.lang.String, ucar.nc2.dataset.NetcdfDataset, ucar.nc2.NetcdfFile, org.jdom.Element, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.ncml.NcMLReader r0;
        java.util.Formatter $r11;
        ucar.nc2.util.CancelTask r21;
        org.jdom.Namespace $r3, $r4, $r8, $r29;
        boolean $z0, $z1, $z2;
        java.util.Set $r14;
        java.lang.StringBuilder $r17, $r18, $r19, $r24, $r25, $r27, $r28, $r31, $r33, $r35, $r36, $r37, $r39;
        ucar.nc2.NetcdfFile r10;
        ucar.nc2.ncml.Aggregation $r22;
        int $i0;
        java.lang.String r1, $r6, $r7, $r12, $r13, $r15, $r20, $r26, $r30, $r32, $r38, $r40;
        java.io.PrintStream $r34;
        java.lang.IllegalArgumentException $r16, $r23;
        org.jdom.Element r2, $r9;
        ucar.nc2.dataset.NetcdfDataset r5;

        r0 := @this: ucar.nc2.ncml.NcMLReader;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: ucar.nc2.dataset.NetcdfDataset;

        r10 := @parameter2: ucar.nc2.NetcdfFile;

        r2 := @parameter3: org.jdom.Element;

        r21 := @parameter4: ucar.nc2.util.CancelTask;

        r0.<ucar.nc2.ncml.NcMLReader: java.lang.String location> = r1;

        $z0 = <ucar.nc2.ncml.NcMLReader: boolean debugOpen>;

        if $z0 == 0 goto label1;

        $r34 = <java.lang.System: java.io.PrintStream out>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NcMLReader.readNetcdf ncml= ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" referencedDatasetUri= ");

        $r38 = virtualinvoke r10.<ucar.nc2.NetcdfFile: java.lang.String getLocation()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r40);

     label1:
        $r3 = virtualinvoke r2.<org.jdom.Element: org.jdom.Namespace getNamespace()>();

        $r4 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $z1 = virtualinvoke $r3.<org.jdom.Namespace: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label2;

        $r23 = new java.lang.IllegalArgumentException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incorrect namespace specified in NcML= ");

        $r26 = virtualinvoke $r3.<org.jdom.Namespace: java.lang.String getURI()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n   must be=");

        $r29 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r30 = virtualinvoke $r29.<org.jdom.Namespace: java.lang.String getURI()>();

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r32);

        throw $r23;

     label2:
        if r1 == null goto label3;

        virtualinvoke r5.<ucar.nc2.dataset.NetcdfDataset: void setLocation(java.lang.String)>(r1);

     label3:
        $r6 = virtualinvoke r2.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("id");

        virtualinvoke r5.<ucar.nc2.dataset.NetcdfDataset: void setId(java.lang.String)>($r6);

        $r7 = virtualinvoke r2.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("title");

        virtualinvoke r5.<ucar.nc2.dataset.NetcdfDataset: void setTitle(java.lang.String)>($r7);

        $r8 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r9 = virtualinvoke r2.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("aggregation", $r8);

        if $r9 == null goto label4;

        $r22 = specialinvoke r0.<ucar.nc2.ncml.NcMLReader: ucar.nc2.ncml.Aggregation readAgg(org.jdom.Element,java.lang.String,ucar.nc2.dataset.NetcdfDataset,ucar.nc2.util.CancelTask)>($r9, r1, r5, r21);

        virtualinvoke r5.<ucar.nc2.dataset.NetcdfDataset: void setAggregation(ucar.nc2.ncml.Aggregation)>($r22);

        virtualinvoke $r22.<ucar.nc2.ncml.Aggregation: void finish(ucar.nc2.util.CancelTask)>(r21);

     label4:
        specialinvoke r0.<ucar.nc2.ncml.NcMLReader: void readGroup(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Group,org.jdom.Element)>(r5, r10, null, null, r2);

        $r11 = r0.<ucar.nc2.ncml.NcMLReader: java.util.Formatter errlog>;

        $r12 = virtualinvoke $r11.<java.util.Formatter: java.lang.String toString()>();

        $i0 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i0 <= 0 goto label5;

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NcML had fatal errors:");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r16;

     label5:
        virtualinvoke r5.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        $r13 = virtualinvoke r2.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("enhance");

        $r14 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: java.util.Set parseEnhanceMode(java.lang.String)>($r13);

        virtualinvoke r5.<ucar.nc2.dataset.NetcdfDataset: void enhance(java.util.Set)>($r14);

        $r15 = virtualinvoke r2.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("addRecords");

        if $r15 == null goto label6;

        $z2 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z2 == 0 goto label6;

        virtualinvoke r5.<ucar.nc2.dataset.NetcdfDataset: java.lang.Object sendIospMessage(java.lang.Object)>("AddRecordStructure");

     label6:
        return;
    }

    private void readAtt(java.lang.Object, java.lang.Object, org.jdom.Element)
    {
        ucar.nc2.ncml.NcMLReader r3;
        java.util.Formatter $r31, $r33, $r36, $r40;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.jdom.Attribute $r7;
        ucar.nc2.Attribute $r5, $r6, $r9, $r17, $r24;
        java.lang.StringBuilder $r11, $r13, $r14, $r18, $r20, $r21, $r25, $r27, $r28;
        java.lang.Object[] $r30, $r32, $r35, $r39;
        java.lang.String $r1, $r2, $r15, $r22, $r29, $r37, $r41, r42;
        java.io.PrintStream $r12, $r19, $r26;
        java.lang.RuntimeException $r34, $r38;
        ucar.ma2.Array $r10, $r16, $r23;
        java.lang.Object r4, r8;
        org.jdom.Element r0;

        r3 := @this: ucar.nc2.ncml.NcMLReader;

        r8 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        r0 := @parameter2: org.jdom.Element;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        if $r1 != null goto label01;

        $r33 = r3.<ucar.nc2.ncml.NcMLReader: java.util.Formatter errlog>;

        $r32 = newarray (java.lang.Object)[1];

        $r32[0] = r0;

        virtualinvoke $r33.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("NcML Attribute name is required (%s)%n", $r32);

        return;

     label01:
        $r2 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("orgName");

        r42 = $r2;

        if $r2 == null goto label02;

        $z5 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z5 != 0 goto label02;

        $z6 = 1;

        goto label03;

     label02:
        $z6 = 0;

     label03:
        z0 = $z6;

        if $r2 != null goto label04;

        r42 = $r1;

        goto label05;

     label04:
        $r5 = specialinvoke r3.<ucar.nc2.ncml.NcMLReader: ucar.nc2.Attribute findAttribute(java.lang.Object,java.lang.String)>(r4, $r2);

        if null != $r5 goto label05;

        $r31 = r3.<ucar.nc2.ncml.NcMLReader: java.util.Formatter errlog>;

        $r30 = newarray (java.lang.Object)[3];

        $r30[0] = $r2;

        $r30[1] = $r1;

        $r30[2] = r8;

        virtualinvoke $r31.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("NcML attribute orgName \'%s\' doesnt exist. att=%s in=%s%n", $r30);

        return;

     label05:
        $r6 = specialinvoke r3.<ucar.nc2.ncml.NcMLReader: ucar.nc2.Attribute findAttribute(java.lang.Object,java.lang.String)>(r4, r42);

        if $r6 != null goto label09;

        $z4 = <ucar.nc2.ncml.NcMLReader: boolean debugConstruct>;

        if $z4 == 0 goto label06;

        $r26 = <java.lang.System: java.io.PrintStream out>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" add new att = ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r29);

     label06:
        $r23 = staticinvoke <ucar.nc2.ncml.NcMLReader: ucar.ma2.Array readAttributeValues(org.jdom.Element)>(r0);

        $r24 = new ucar.nc2.Attribute;

        specialinvoke $r24.<ucar.nc2.Attribute: void <init>(java.lang.String,ucar.ma2.Array)>($r1, $r23);

        specialinvoke r3.<ucar.nc2.ncml.NcMLReader: void addAttribute(java.lang.Object,ucar.nc2.Attribute)>(r8, $r24);

     label07:
        goto label18;

     label08:
        $r38 := @caughtexception;

        $r40 = r3.<ucar.nc2.ncml.NcMLReader: java.util.Formatter errlog>;

        $r39 = newarray (java.lang.Object)[3];

        $r41 = virtualinvoke $r38.<java.lang.RuntimeException: java.lang.String getMessage()>();

        $r39[0] = $r41;

        $r39[1] = $r1;

        $r39[2] = r8;

        virtualinvoke $r40.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("NcML new Attribute Exception: %s att=%s in=%s%n", $r39);

        goto label18;

     label09:
        $z1 = <ucar.nc2.ncml.NcMLReader: boolean debugConstruct>;

        if $z1 == 0 goto label10;

        $r19 = <java.lang.System: java.io.PrintStream out>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" modify existing att = ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r22);

     label10:
        $r7 = virtualinvoke r0.<org.jdom.Element: org.jdom.Attribute getAttribute(java.lang.String)>("value");

        if $r7 == null goto label11;

        $z7 = 1;

        goto label12;

     label11:
        $z7 = 0;

     label12:
        if $z7 == 0 goto label16;

     label13:
        $r16 = staticinvoke <ucar.nc2.ncml.NcMLReader: ucar.ma2.Array readAttributeValues(org.jdom.Element)>(r0);

        $r17 = new ucar.nc2.Attribute;

        specialinvoke $r17.<ucar.nc2.Attribute: void <init>(java.lang.String,ucar.ma2.Array)>($r1, $r16);

        specialinvoke r3.<ucar.nc2.ncml.NcMLReader: void addAttribute(java.lang.Object,ucar.nc2.Attribute)>(r8, $r17);

     label14:
        goto label17;

     label15:
        $r34 := @caughtexception;

        $r36 = r3.<ucar.nc2.ncml.NcMLReader: java.util.Formatter errlog>;

        $r35 = newarray (java.lang.Object)[3];

        $r37 = virtualinvoke $r34.<java.lang.RuntimeException: java.lang.String getMessage()>();

        $r35[0] = $r37;

        $r35[1] = $r1;

        $r35[2] = r8;

        virtualinvoke $r36.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("NcML existing Attribute Exception: %s att=%s in=%s%n", $r35);

        return;

     label16:
        $r9 = new ucar.nc2.Attribute;

        $r10 = virtualinvoke $r6.<ucar.nc2.Attribute: ucar.ma2.Array getValues()>();

        specialinvoke $r9.<ucar.nc2.Attribute: void <init>(java.lang.String,ucar.ma2.Array)>($r1, $r10);

        specialinvoke r3.<ucar.nc2.ncml.NcMLReader: void addAttribute(java.lang.Object,ucar.nc2.Attribute)>(r8, $r9);

     label17:
        if z0 == 0 goto label18;

        $z2 = r3.<ucar.nc2.ncml.NcMLReader: boolean explicit>;

        if $z2 != 0 goto label18;

        specialinvoke r3.<ucar.nc2.ncml.NcMLReader: void removeAttribute(java.lang.Object,ucar.nc2.Attribute)>(r8, $r6);

        $z3 = <ucar.nc2.ncml.NcMLReader: boolean debugConstruct>;

        if $z3 == 0 goto label18;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" remove old att = ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15);

     label18:
        return;

        catch java.lang.RuntimeException from label06 to label07 with label08;
        catch java.lang.RuntimeException from label13 to label14 with label15;
    }

    public static ucar.ma2.Array readAttributeValues(org.jdom.Element) throws java.lang.IllegalArgumentException
    {
        java.util.ArrayList $r6, $r11;
        java.util.StringTokenizer $r7;
        java.lang.String $r1, $r2, $r3, $r5, $r9, r16;
        boolean $z0;
        ucar.ma2.DataType $r4, $r10, $r14, r15;
        java.lang.IllegalArgumentException $r13;
        ucar.ma2.Array $r8, $r12;
        org.jdom.Element r0;

        r0 := @parameter0: org.jdom.Element;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("value");

        if $r1 != null goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No value specified");

        throw $r13;

     label1:
        $r2 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String unquoteXmlAttribute(java.lang.String)>($r1);

        $r3 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("type");

        if $r3 != null goto label2;

        $r14 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        goto label3;

     label2:
        $r14 = staticinvoke <ucar.ma2.DataType: ucar.ma2.DataType getType(java.lang.String)>($r3);

     label3:
        r15 = $r14;

        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r14 != $r4 goto label4;

        r15 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

     label4:
        $r5 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("separator");

        r16 = $r5;

        if $r5 != null goto label5;

        $r10 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if r15 != $r10 goto label5;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r12 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array makeArray(ucar.ma2.DataType,java.util.List)>(r15, $r11);

        return $r12;

     label5:
        if $r5 != null goto label6;

        r16 = " ";

     label6:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = new java.util.StringTokenizer;

        specialinvoke $r7.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r2, r16);

     label7:
        $z0 = virtualinvoke $r7.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label8;

        $r9 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label7;

     label8:
        $r8 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array makeArray(ucar.ma2.DataType,java.util.List)>(r15, $r6);

        return $r8;
    }

    private ucar.nc2.Attribute findAttribute(java.lang.Object, java.lang.String)
    {
        ucar.nc2.ncml.NcMLReader r6;
        ucar.nc2.Group $r4;
        ucar.nc2.Attribute $r3, $r5;
        java.lang.Object r0;
        ucar.nc2.Variable $r2;
        java.lang.String r1;
        boolean $z0, $z1;

        r6 := @this: ucar.nc2.ncml.NcMLReader;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = r0 instanceof ucar.nc2.Group;

        if $z0 == 0 goto label2;

        $r4 = (ucar.nc2.Group) r0;

        $r5 = virtualinvoke $r4.<ucar.nc2.Group: ucar.nc2.Attribute findAttribute(java.lang.String)>(r1);

        return $r5;

     label2:
        $z1 = r0 instanceof ucar.nc2.Variable;

        if $z1 == 0 goto label3;

        $r2 = (ucar.nc2.Variable) r0;

        $r3 = virtualinvoke $r2.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>(r1);

        return $r3;

     label3:
        return null;
    }

    private void addAttribute(java.lang.Object, ucar.nc2.Attribute)
    {
        ucar.nc2.Attribute r1;
        java.lang.Object r0;
        ucar.nc2.Variable $r2;
        ucar.nc2.ncml.NcMLReader r4;
        ucar.nc2.Group $r3;
        boolean $z0, $z1;

        r4 := @this: ucar.nc2.ncml.NcMLReader;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: ucar.nc2.Attribute;

        $z0 = r0 instanceof ucar.nc2.Group;

        if $z0 == 0 goto label1;

        $r3 = (ucar.nc2.Group) r0;

        virtualinvoke $r3.<ucar.nc2.Group: void addAttribute(ucar.nc2.Attribute)>(r1);

        goto label2;

     label1:
        $z1 = r0 instanceof ucar.nc2.Variable;

        if $z1 == 0 goto label2;

        $r2 = (ucar.nc2.Variable) r0;

        virtualinvoke $r2.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>(r1);

     label2:
        return;
    }

    private void removeAttribute(java.lang.Object, ucar.nc2.Attribute)
    {
        ucar.nc2.Attribute r1;
        java.lang.Object r0;
        ucar.nc2.Variable $r2;
        ucar.nc2.ncml.NcMLReader r4;
        ucar.nc2.Group $r3;
        boolean $z0, $z1;

        r4 := @this: ucar.nc2.ncml.NcMLReader;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: ucar.nc2.Attribute;

        $z0 = r0 instanceof ucar.nc2.Group;

        if $z0 == 0 goto label1;

        $r3 = (ucar.nc2.Group) r0;

        virtualinvoke $r3.<ucar.nc2.Group: boolean remove(ucar.nc2.Attribute)>(r1);

        goto label2;

     label1:
        $z1 = r0 instanceof ucar.nc2.Variable;

        if $z1 == 0 goto label2;

        $r2 = (ucar.nc2.Variable) r0;

        virtualinvoke $r2.<ucar.nc2.Variable: boolean remove(ucar.nc2.Attribute)>(r1);

     label2:
        return;
    }

    private void readDim(ucar.nc2.Group, ucar.nc2.Group, org.jdom.Element)
    {
        ucar.nc2.ncml.NcMLReader r26;
        java.util.Formatter $r28;
        boolean $z0, $z1, $z2, $z3, z4, $z5, $z6, $z7, $z8, $z9, z10, $z11, z12, $z13, $z14, $z15;
        ucar.nc2.Group r3, r9;
        java.lang.StringBuilder $r10, $r12, $r13, $r20, $r22, $r23;
        java.lang.Object[] $r27;
        int $i0, i1;
        java.lang.String $r1, $r2, $r5, $r6, $r7, $r8, $r14, $r15, $r16, $r17, $r18, $r24, r29;
        java.io.PrintStream $r11, $r21;
        ucar.nc2.Dimension r4, $r19, $r25, $r30;
        org.jdom.Element r0;

        r26 := @this: ucar.nc2.ncml.NcMLReader;

        r9 := @parameter0: ucar.nc2.Group;

        r3 := @parameter1: ucar.nc2.Group;

        r0 := @parameter2: org.jdom.Element;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        if $r1 != null goto label01;

        $r28 = r26.<ucar.nc2.ncml.NcMLReader: java.util.Formatter errlog>;

        $r27 = newarray (java.lang.Object)[1];

        $r27[0] = r0;

        virtualinvoke $r28.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("NcML Dimension name is required (%s)%n", $r27);

        return;

     label01:
        $r2 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("orgName");

        r29 = $r2;

        if $r2 != null goto label02;

        r29 = $r1;

     label02:
        if r3 != null goto label03;

        $r30 = null;

        goto label04;

     label03:
        $r30 = virtualinvoke r3.<ucar.nc2.Group: ucar.nc2.Dimension findDimension(java.lang.String)>(r29);

     label04:
        r4 = $r30;

        if $r30 != null goto label12;

        $r15 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("length");

        $r16 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("isUnlimited");

        $r17 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("isShared");

        $r18 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("isVariableLength");

        if $r16 == null goto label05;

        $z8 = virtualinvoke $r16.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z8 == 0 goto label05;

        $z9 = 1;

        goto label06;

     label05:
        $z9 = 0;

     label06:
        z10 = $z9;

        if $r18 == null goto label07;

        $z7 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z7 == 0 goto label07;

        $z11 = 1;

        goto label08;

     label07:
        $z11 = 0;

     label08:
        z4 = $z11;

        z12 = 1;

        if $r17 == null goto label09;

        $z6 = virtualinvoke $r17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("false");

        if $z6 == 0 goto label09;

        z12 = 0;

     label09:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r15);

        if $r18 == null goto label10;

        $z5 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("false");

        if $z5 == 0 goto label10;

        $r25 = <ucar.nc2.Dimension: ucar.nc2.Dimension VLEN>;

        i1 = virtualinvoke $r25.<ucar.nc2.Dimension: int getLength()>();

     label10:
        $z13 = <ucar.nc2.ncml.NcMLReader: boolean debugConstruct>;

        if $z13 == 0 goto label11;

        $r21 = <java.lang.System: java.io.PrintStream out>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" add new dim = ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r24);

     label11:
        $r19 = new ucar.nc2.Dimension;

        specialinvoke $r19.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean,boolean,boolean)>($r1, i1, z12, z10, z4);

        virtualinvoke r9.<ucar.nc2.Group: void addDimension(ucar.nc2.Dimension)>($r19);

        goto label20;

     label12:
        virtualinvoke $r30.<ucar.nc2.Dimension: void setName(java.lang.String)>($r1);

        $r5 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("length");

        $r6 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("isUnlimited");

        $r7 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("isShared");

        $r8 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("isVariableLength");

        if $r6 == null goto label13;

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        virtualinvoke $r30.<ucar.nc2.Dimension: void setUnlimited(boolean)>($z3);

     label13:
        if $r7 == null goto label16;

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("false");

        if $z2 != 0 goto label14;

        $z14 = 1;

        goto label15;

     label14:
        $z14 = 0;

     label15:
        virtualinvoke r4.<ucar.nc2.Dimension: void setShared(boolean)>($z14);

     label16:
        if $r8 == null goto label17;

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        virtualinvoke r4.<ucar.nc2.Dimension: void setVariableLength(boolean)>($z1);

     label17:
        if $r5 == null goto label18;

        $z0 = virtualinvoke r4.<ucar.nc2.Dimension: boolean isVariableLength()>();

        if $z0 != 0 goto label18;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        virtualinvoke r4.<ucar.nc2.Dimension: void setLength(int)>($i0);

     label18:
        $z15 = <ucar.nc2.ncml.NcMLReader: boolean debugConstruct>;

        if $z15 == 0 goto label19;

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" modify existing dim = ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r14);

     label19:
        if r9 == r3 goto label20;

        virtualinvoke r9.<ucar.nc2.Group: void addDimension(ucar.nc2.Dimension)>(r4);

     label20:
        return;
    }

    private void readGroup(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.NetcdfFile, ucar.nc2.Group, ucar.nc2.Group, org.jdom.Element) throws java.io.IOException
    {
        ucar.nc2.ncml.NcMLReader r19;
        org.jdom.Namespace $r5, $r8, $r11, $r14, $r57;
        ucar.nc2.Group r0, r4, $r39, $r45, r54, r55;
        java.lang.StringBuilder $r22, $r24, $r26, $r34, $r36, $r37, $r40, $r42, $r43, $r46, $r48, $r49;
        java.lang.Object[] $r51;
        java.lang.String $r2, $r3, $r25, $r27, $r29, $r30, $r38, $r44, $r50, r56;
        org.jdom.Element r1, r18, r60, r61, r62, r63;
        ucar.nc2.dataset.NetcdfDataset r20;
        java.util.Formatter $r52;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.util.List $r6, $r9, $r12, $r15, $r58;
        ucar.nc2.NetcdfFile r21;
        java.io.PrintStream $r23, $r35, $r41, $r47, $r53;
        java.util.Iterator $r7, $r10, $r13, $r16, $r59;
        java.lang.Object $r17, $r28, $r31, $r32, $r33;

        r19 := @this: ucar.nc2.ncml.NcMLReader;

        r20 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r21 := @parameter1: ucar.nc2.NetcdfFile;

        r0 := @parameter2: ucar.nc2.Group;

        r4 := @parameter3: ucar.nc2.Group;

        r1 := @parameter4: org.jdom.Element;

        r54 = null;

        if r0 != null goto label01;

        r55 = virtualinvoke r20.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        r54 = virtualinvoke r21.<ucar.nc2.NetcdfFile: ucar.nc2.Group getRootGroup()>();

        $z9 = <ucar.nc2.ncml.NcMLReader: boolean debugConstruct>;

        if $z9 == 0 goto label08;

        $r53 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r53.<java.io.PrintStream: void println(java.lang.String)>(" root group ");

        goto label08;

     label01:
        $r2 = virtualinvoke r1.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        if $r2 != null goto label02;

        $r52 = r19.<ucar.nc2.ncml.NcMLReader: java.util.Formatter errlog>;

        $r51 = newarray (java.lang.Object)[1];

        $r51[0] = r1;

        virtualinvoke $r52.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("NcML Group name is required (%s)%n", $r51);

        return;

     label02:
        $r3 = virtualinvoke r1.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("orgName");

        r56 = $r3;

        if $r3 != null goto label03;

        r56 = $r2;

     label03:
        if r4 == null goto label04;

        r54 = virtualinvoke r4.<ucar.nc2.Group: ucar.nc2.Group findGroup(java.lang.String)>(r56);

     label04:
        if r54 != null goto label05;

        $r45 = new ucar.nc2.Group;

        specialinvoke $r45.<ucar.nc2.Group: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,java.lang.String)>(r20, r0, $r2);

        r55 = $r45;

        virtualinvoke r0.<ucar.nc2.Group: void addGroup(ucar.nc2.Group)>($r45);

        $z8 = <ucar.nc2.ncml.NcMLReader: boolean debugConstruct>;

        if $z8 == 0 goto label08;

        $r47 = <java.lang.System: java.io.PrintStream out>;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" add new group = ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>($r50);

        goto label08;

     label05:
        if r0 == r4 goto label06;

        $r39 = new ucar.nc2.Group;

        specialinvoke $r39.<ucar.nc2.Group: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,java.lang.String)>(r20, r0, $r2);

        r55 = $r39;

        virtualinvoke r0.<ucar.nc2.Group: void addGroup(ucar.nc2.Group)>($r39);

        $z7 = <ucar.nc2.ncml.NcMLReader: boolean debugConstruct>;

        if $z7 == 0 goto label08;

        $r41 = <java.lang.System: java.io.PrintStream out>;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" transfer existing group = ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>($r44);

        goto label08;

     label06:
        r55 = r54;

        $z0 = virtualinvoke r56.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label07;

        virtualinvoke r54.<ucar.nc2.Group: void setName(java.lang.String)>($r2);

     label07:
        $z1 = <ucar.nc2.ncml.NcMLReader: boolean debugConstruct>;

        if $z1 == 0 goto label08;

        $r35 = <java.lang.System: java.io.PrintStream out>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" modify existing group = ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>($r38);

     label08:
        $r57 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r58 = virtualinvoke r1.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("attribute", $r57);

        $r59 = interfaceinvoke $r58.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z10 = interfaceinvoke $r59.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label10;

        $r33 = interfaceinvoke $r59.<java.util.Iterator: java.lang.Object next()>();

        r60 = (org.jdom.Element) $r33;

        specialinvoke r19.<ucar.nc2.ncml.NcMLReader: void readAtt(java.lang.Object,java.lang.Object,org.jdom.Element)>(r55, r54, r60);

        goto label09;

     label10:
        $r5 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r6 = virtualinvoke r1.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("dimension", $r5);

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label12;

        $r32 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r61 = (org.jdom.Element) $r32;

        specialinvoke r19.<ucar.nc2.ncml.NcMLReader: void readDim(ucar.nc2.Group,ucar.nc2.Group,org.jdom.Element)>(r55, r54, r61);

        goto label11;

     label12:
        $r8 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r9 = virtualinvoke r1.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("variable", $r8);

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z3 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label14;

        $r31 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r62 = (org.jdom.Element) $r31;

        specialinvoke r19.<ucar.nc2.ncml.NcMLReader: void readVariable(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Group,org.jdom.Element)>(r20, r55, r54, r62);

        goto label13;

     label14:
        $r11 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r12 = virtualinvoke r1.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("remove", $r11);

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z4 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label16;

        $r28 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r63 = (org.jdom.Element) $r28;

        $r29 = virtualinvoke r63.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("type");

        $r30 = virtualinvoke r63.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        specialinvoke r19.<ucar.nc2.ncml.NcMLReader: void cmdRemove(ucar.nc2.Group,java.lang.String,java.lang.String)>(r55, $r29, $r30);

        goto label15;

     label16:
        $r14 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r15 = virtualinvoke r1.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("group", $r14);

        $r16 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label17:
        $z5 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label19;

        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r18 = (org.jdom.Element) $r17;

        specialinvoke r19.<ucar.nc2.ncml.NcMLReader: void readGroup(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Group,org.jdom.Element)>(r20, r21, r55, r54, r18);

        $z6 = <ucar.nc2.ncml.NcMLReader: boolean debugConstruct>;

        if $z6 == 0 goto label18;

        $r23 = <java.lang.System: java.io.PrintStream out>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" add group = ");

        $r25 = virtualinvoke r55.<ucar.nc2.Group: java.lang.String getName()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r27);

     label18:
        goto label17;

     label19:
        return;
    }

    private void readVariable(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Group, ucar.nc2.Group, org.jdom.Element) throws java.io.IOException
    {
        ucar.nc2.ncml.NcMLReader r20;
        java.lang.Integer $r82, $r83;
        org.jdom.Namespace $r9, $r14, $r49, $r102, $r110, $r112;
        ucar.nc2.Group r3, r7;
        java.lang.StringBuilder $r57, $r59, $r60, $r66, $r68, $r69, $r72, $r74, $r75;
        java.lang.Object[] $r21, $r24, $r27, $r37, $r77, $r80, $r87, $r91;
        ucar.ma2.Section $r31, $r33, $r34, $r40;
        ucar.nc2.Structure $r63, $r65;
        java.lang.String $r1, $r2, $r5, $r6, $r16, $r17, $r19, $r23, $r26, $r29, $r30, $r36, $r39, $r54, $r55, $r61, $r70, $r76, $r84, $r85, $r89, $r93, $r94, $r97, r98;
        java.lang.NumberFormatException $r86;
        java.io.IOException $r95;
        ucar.ma2.Array $r41, $r47;
        ucar.ma2.InvalidRangeException $r79, $r90;
        ucar.nc2.dataset.StructureDS $r62, $r64, r107, r108;
        org.jdom.Element r0, $r15, r105, r106, r109, $r111, $r113;
        ucar.nc2.dataset.NetcdfDataset r48;
        java.lang.IllegalStateException $r96;
        java.util.Formatter $r22, $r25, $r28, $r38, $r78, $r81, $r88, $r92;
        int[] $r32, $r46;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        ucar.nc2.dataset.VariableDS $r8;
        ucar.ma2.DataType $r12, $r13, $r43, $r45, r100;
        java.util.List $r10, $r50, $r103;
        int $i0, $i1;
        ucar.nc2.Variable r4, $r18, $r35, $r71, $r99, r101;
        java.io.PrintStream $r58, $r67, $r73;
        java.util.Iterator $r11, $r51, $r104;
        java.lang.Class $r42, $r44;
        java.lang.Object $r52, $r53, $r56;

        r20 := @this: ucar.nc2.ncml.NcMLReader;

        r48 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r7 := @parameter1: ucar.nc2.Group;

        r3 := @parameter2: ucar.nc2.Group;

        r0 := @parameter3: org.jdom.Element;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        if $r1 != null goto label01;

        $r78 = r20.<ucar.nc2.ncml.NcMLReader: java.util.Formatter errlog>;

        $r77 = newarray (java.lang.Object)[1];

        $r77[0] = r0;

        virtualinvoke $r78.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("NcML Variable name is required (%s)%n", $r77);

        return;

     label01:
        $r2 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("orgName");

        r98 = $r2;

        if $r2 != null goto label02;

        r98 = $r1;

     label02:
        if r3 != null goto label03;

        $r99 = null;

        goto label04;

     label03:
        $r99 = virtualinvoke r3.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>(r98);

     label04:
        r4 = $r99;

        if $r99 != null goto label06;

        $z7 = <ucar.nc2.ncml.NcMLReader: boolean debugConstruct>;

        if $z7 == 0 goto label05;

        $r73 = <java.lang.System: java.io.PrintStream out>;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" add new var = ");

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r73.<java.io.PrintStream: void println(java.lang.String)>($r76);

     label05:
        $r71 = specialinvoke r20.<ucar.nc2.ncml.NcMLReader: ucar.nc2.Variable readVariableNew(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,org.jdom.Element)>(r48, r7, null, r0);

        virtualinvoke r7.<ucar.nc2.Group: void addVariable(ucar.nc2.Variable)>($r71);

        return;

     label06:
        $r5 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("type");

        if $r5 == null goto label07;

        r100 = staticinvoke <ucar.ma2.DataType: ucar.ma2.DataType getType(java.lang.String)>($r5);

        goto label08;

     label07:
        r100 = virtualinvoke $r99.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

     label08:
        $r6 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("shape");

        if r3 != r7 goto label10;

        r101 = r4;

        virtualinvoke r4.<ucar.nc2.Variable: void setName(java.lang.String)>($r1);

        virtualinvoke r4.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>(r100);

        if $r6 == null goto label09;

        virtualinvoke r4.<ucar.nc2.Variable: void setDimensions(java.lang.String)>($r6);

     label09:
        $z6 = <ucar.nc2.ncml.NcMLReader: boolean debugConstruct>;

        if $z6 == 0 goto label15;

        $r67 = <java.lang.System: java.io.PrintStream out>;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" modify existing var = ");

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r98);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r67.<java.io.PrintStream: void println(java.lang.String)>($r70);

        goto label15;

     label10:
        $z0 = r4 instanceof ucar.nc2.Structure;

        if $z0 == 0 goto label11;

        $r64 = new ucar.nc2.dataset.StructureDS;

        $r65 = (ucar.nc2.Structure) r4;

        specialinvoke $r64.<ucar.nc2.dataset.StructureDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.nc2.Structure)>(r48, r7, null, $r1, $r65);

        r101 = $r64;

        virtualinvoke $r64.<ucar.nc2.Variable: void setDimensions(java.lang.String)>($r6);

        goto label13;

     label11:
        $z1 = r4 instanceof ucar.nc2.Sequence;

        if $z1 == 0 goto label12;

        $r62 = new ucar.nc2.dataset.StructureDS;

        $r63 = (ucar.nc2.Structure) r4;

        specialinvoke $r62.<ucar.nc2.dataset.StructureDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.nc2.Structure)>(r48, r7, null, $r1, $r63);

        r101 = $r62;

        virtualinvoke $r62.<ucar.nc2.Variable: void setDimensions(java.lang.String)>($r6);

        goto label13;

     label12:
        $r8 = new ucar.nc2.dataset.VariableDS;

        specialinvoke $r8.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.nc2.Variable)>(r7, null, $r1, r4);

        r101 = $r8;

        virtualinvoke $r8.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>(r100);

        virtualinvoke $r8.<ucar.nc2.Variable: void setDimensions(java.lang.String)>($r6);

     label13:
        $z8 = <ucar.nc2.ncml.NcMLReader: boolean debugConstruct>;

        if $z8 == 0 goto label14;

        $r58 = <java.lang.System: java.io.PrintStream out>;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" modify explicit var = ");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r98);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r58.<java.io.PrintStream: void println(java.lang.String)>($r61);

     label14:
        virtualinvoke r7.<ucar.nc2.Group: void addVariable(ucar.nc2.Variable)>(r101);

     label15:
        $r102 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r103 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("attribute", $r102);

        $r104 = interfaceinvoke $r103.<java.util.List: java.util.Iterator iterator()>();

     label16:
        $z9 = interfaceinvoke $r104.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label17;

        $r56 = interfaceinvoke $r104.<java.util.Iterator: java.lang.Object next()>();

        r105 = (org.jdom.Element) $r56;

        specialinvoke r20.<ucar.nc2.ncml.NcMLReader: void readAtt(java.lang.Object,java.lang.Object,org.jdom.Element)>(r101, r4, r105);

        goto label16;

     label17:
        $r9 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r10 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("remove", $r9);

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label18:
        $z2 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label19;

        $r53 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r106 = (org.jdom.Element) $r53;

        $r54 = virtualinvoke r106.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("type");

        $r55 = virtualinvoke r106.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        specialinvoke r20.<ucar.nc2.ncml.NcMLReader: void cmdRemove(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r101, $r54, $r55);

        goto label18;

     label19:
        $r12 = virtualinvoke r101.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r13 = <ucar.ma2.DataType: ucar.ma2.DataType STRUCTURE>;

        if $r12 != $r13 goto label22;

        r107 = (ucar.nc2.dataset.StructureDS) r101;

        r108 = (ucar.nc2.dataset.StructureDS) r4;

        $r49 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r50 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("variable", $r49);

        $r51 = interfaceinvoke $r50.<java.util.List: java.util.Iterator iterator()>();

     label20:
        $z5 = interfaceinvoke $r51.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label21;

        $r52 = interfaceinvoke $r51.<java.util.Iterator: java.lang.Object next()>();

        r109 = (org.jdom.Element) $r52;

        specialinvoke r20.<ucar.nc2.ncml.NcMLReader: void readVariableNested(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Structure,ucar.nc2.Structure,org.jdom.Element)>(r48, r107, r108, r109);

        goto label20;

     label21:
        goto label28;

     label22:
        $r14 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r15 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("values", $r14);

        if $r15 == null goto label23;

        specialinvoke r20.<ucar.nc2.ncml.NcMLReader: void readValues(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable,org.jdom.Element,org.jdom.Element)>(r48, r101, r0, $r15);

        goto label28;

     label23:
        $z3 = virtualinvoke r101.<ucar.nc2.Variable: boolean hasCachedData()>();

        if $z3 == 0 goto label28;

     label24:
        $r41 = virtualinvoke r101.<ucar.nc2.Variable: ucar.ma2.Array read()>();

     label25:
        goto label27;

     label26:
        $r95 := @caughtexception;

        $r96 = new java.lang.IllegalStateException;

        $r97 = virtualinvoke $r95.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r96.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r97);

        throw $r96;

     label27:
        $r42 = virtualinvoke $r41.<java.lang.Object: java.lang.Class getClass()>();

        $r43 = virtualinvoke r101.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r44 = virtualinvoke $r43.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        if $r42 == $r44 goto label28;

        $r45 = virtualinvoke r101.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r46 = virtualinvoke r101.<ucar.nc2.Variable: int[] getShape()>();

        $r47 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r45, $r46);

        staticinvoke <ucar.ma2.MAMath: void copy(ucar.ma2.Array,ucar.ma2.Array)>($r47, $r41);

        virtualinvoke r101.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r47, 0);

     label28:
        $r110 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r111 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("logicalSection", $r110);

        if null == $r111 goto label34;

        $r30 = virtualinvoke $r111.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("section");

        if $r30 == null goto label34;

     label29:
        $r31 = new ucar.ma2.Section;

        specialinvoke $r31.<ucar.ma2.Section: void <init>(java.lang.String)>($r30);

        $r32 = virtualinvoke r101.<ucar.nc2.Variable: int[] getShape()>();

        $r33 = staticinvoke <ucar.ma2.Section: ucar.ma2.Section fill(ucar.ma2.Section,int[])>($r31, $r32);

        $r34 = virtualinvoke r101.<ucar.nc2.Variable: ucar.ma2.Section getShapeAsSection()>();

        $z4 = virtualinvoke $r34.<ucar.ma2.Section: boolean contains(ucar.ma2.Section)>($r33);

        if $z4 != 0 goto label31;

        $r38 = r20.<ucar.nc2.ncml.NcMLReader: java.util.Formatter errlog>;

        $r37 = newarray (java.lang.Object)[3];

        $r39 = virtualinvoke r101.<ucar.nc2.Variable: java.lang.String getName()>();

        $r37[0] = $r39;

        $r37[1] = $r30;

        $r40 = virtualinvoke r101.<ucar.nc2.Variable: ucar.ma2.Section getShapeAsSection()>();

        $r37[2] = $r40;

        virtualinvoke $r38.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Invalid logicalSection on variable=%s section =(%s) original=(%s) %n", $r37);

     label30:
        return;

     label31:
        $r35 = virtualinvoke r101.<ucar.nc2.Variable: ucar.nc2.Variable section(ucar.ma2.Section)>($r33);

        $r36 = virtualinvoke r101.<ucar.nc2.Variable: java.lang.String getShortName()>();

        virtualinvoke r7.<ucar.nc2.Group: boolean removeVariable(java.lang.String)>($r36);

        virtualinvoke r7.<ucar.nc2.Group: void addVariable(ucar.nc2.Variable)>($r35);

     label32:
        goto label34;

     label33:
        $r90 := @caughtexception;

        $r92 = r20.<ucar.nc2.ncml.NcMLReader: java.util.Formatter errlog>;

        $r91 = newarray (java.lang.Object)[3];

        $r93 = virtualinvoke r101.<ucar.nc2.Variable: java.lang.String getName()>();

        $r91[0] = $r93;

        $r91[1] = $r30;

        $r94 = virtualinvoke $r90.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        $r91[2] = $r94;

        virtualinvoke $r92.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Invalid logicalSection on variable=%s section=(%s) error=%s %n", $r91);

        return;

     label34:
        $r112 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r113 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("logicalSlice", $r112);

        if null == $r113 goto label43;

        $r16 = virtualinvoke $r113.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("dimName");

        if null != $r16 goto label35;

        $r28 = r20.<ucar.nc2.ncml.NcMLReader: java.util.Formatter errlog>;

        $r27 = newarray (java.lang.Object)[1];

        $r29 = virtualinvoke r101.<ucar.nc2.Variable: java.lang.String getName()>();

        $r27[0] = $r29;

        virtualinvoke $r28.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("NcML logicalSlice: dimName is required, variable=%s %n", $r27);

        return;

     label35:
        $i0 = virtualinvoke r101.<ucar.nc2.Variable: int findDimensionIndex(java.lang.String)>($r16);

        if $i0 >= 0 goto label36;

        $r25 = r20.<ucar.nc2.ncml.NcMLReader: java.util.Formatter errlog>;

        $r24 = newarray (java.lang.Object)[2];

        $r24[0] = $r16;

        $r26 = virtualinvoke r101.<ucar.nc2.Variable: java.lang.String getName()>();

        $r24[1] = $r26;

        virtualinvoke $r25.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("NcML logicalSlice: cant find dimension %s in variable=%s %n", $r24);

        return;

     label36:
        $r17 = virtualinvoke $r113.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("index");

        if null != $r17 goto label37;

        $r22 = r20.<ucar.nc2.ncml.NcMLReader: java.util.Formatter errlog>;

        $r21 = newarray (java.lang.Object)[1];

        $r23 = virtualinvoke r101.<ucar.nc2.Variable: java.lang.String getName()>();

        $r21[0] = $r23;

        virtualinvoke $r22.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("NcML logicalSlice: index is required, variable=%s %n", $r21);

        return;

     label37:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r17);

     label38:
        goto label40;

     label39:
        $r86 := @caughtexception;

        $r88 = r20.<ucar.nc2.ncml.NcMLReader: java.util.Formatter errlog>;

        $r87 = newarray (java.lang.Object)[2];

        $r87[0] = $r17;

        $r89 = virtualinvoke r101.<ucar.nc2.Variable: java.lang.String getName()>();

        $r87[1] = $r89;

        virtualinvoke $r88.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("NcML logicalSlice: index=%s must be integer, variable=%s %n", $r87);

        return;

     label40:
        $r18 = virtualinvoke r101.<ucar.nc2.Variable: ucar.nc2.Variable slice(int,int)>($i0, $i1);

        $r19 = virtualinvoke r101.<ucar.nc2.Variable: java.lang.String getShortName()>();

        virtualinvoke r7.<ucar.nc2.Group: boolean removeVariable(java.lang.String)>($r19);

        virtualinvoke r7.<ucar.nc2.Group: void addVariable(ucar.nc2.Variable)>($r18);

     label41:
        goto label43;

     label42:
        $r79 := @caughtexception;

        $r81 = r20.<ucar.nc2.ncml.NcMLReader: java.util.Formatter errlog>;

        $r80 = newarray (java.lang.Object)[4];

        $r82 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r80[0] = $r82;

        $r83 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r80[1] = $r83;

        $r84 = virtualinvoke r101.<ucar.nc2.Variable: java.lang.String getName()>();

        $r80[2] = $r84;

        $r85 = virtualinvoke $r79.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        $r80[3] = $r85;

        virtualinvoke $r81.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Invalid logicalSlice (%d,%d) on variable=%s error=%s %n", $r80);

        return;

     label43:
        return;

        catch java.io.IOException from label24 to label25 with label26;
        catch ucar.ma2.InvalidRangeException from label29 to label30 with label33;
        catch ucar.ma2.InvalidRangeException from label31 to label32 with label33;
        catch java.lang.NumberFormatException from label37 to label38 with label39;
        catch ucar.ma2.InvalidRangeException from label40 to label41 with label42;
    }

    private ucar.nc2.Variable readVariableNew(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Group, ucar.nc2.Structure, org.jdom.Element)
    {
        ucar.nc2.ncml.NcMLReader r14;
        java.util.Formatter $r34;
        org.jdom.Namespace $r11, $r17, $r23, $r38;
        boolean $z0, $z1, $z2;
        ucar.nc2.dataset.VariableDS $r7;
        ucar.ma2.DataType $r3, $r5, $r6;
        ucar.nc2.Group r9;
        java.util.List $r18, $r24, $r39;
        java.lang.StringBuilder $r28, $r29, $r30, $r31;
        ucar.nc2.dataset.SequenceDS $r16;
        java.lang.Object[] $r33;
        ucar.nc2.Structure r10;
        ucar.nc2.Sequence $r15;
        ucar.nc2.Variable r36;
        java.lang.String $r1, $r2, $r4, $r32, r35;
        java.util.Iterator $r19, $r25, $r40;
        java.lang.IllegalArgumentException $r27;
        ucar.nc2.dataset.StructureDS $r22;
        java.lang.Object $r13, $r20, $r26;
        org.jdom.Element r0, $r12, r21, r37, r41;
        ucar.nc2.dataset.NetcdfDataset r8;

        r14 := @this: ucar.nc2.ncml.NcMLReader;

        r8 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r9 := @parameter1: ucar.nc2.Group;

        r10 := @parameter2: ucar.nc2.Structure;

        r0 := @parameter3: org.jdom.Element;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        if $r1 != null goto label01;

        $r34 = r14.<ucar.nc2.ncml.NcMLReader: java.util.Formatter errlog>;

        $r33 = newarray (java.lang.Object)[1];

        $r33[0] = r0;

        virtualinvoke $r34.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("NcML Variable name is required (%s)%n", $r33);

        return null;

     label01:
        $r2 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("type");

        if $r2 != null goto label02;

        $r27 = new java.lang.IllegalArgumentException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New variable (");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") must have datatype attribute");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r32);

        throw $r27;

     label02:
        $r3 = staticinvoke <ucar.ma2.DataType: ucar.ma2.DataType getType(java.lang.String)>($r2);

        $r4 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("shape");

        r35 = $r4;

        if $r4 != null goto label03;

        r35 = "";

     label03:
        $r5 = <ucar.ma2.DataType: ucar.ma2.DataType STRUCTURE>;

        if $r3 != $r5 goto label06;

        $r22 = new ucar.nc2.dataset.StructureDS;

        specialinvoke $r22.<ucar.nc2.dataset.StructureDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r8, r9, r10, $r1, r35, null, null);

        r36 = $r22;

        $r23 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r24 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("variable", $r23);

        $r25 = interfaceinvoke $r24.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke $r25.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r26 = interfaceinvoke $r25.<java.util.Iterator: java.lang.Object next()>();

        r37 = (org.jdom.Element) $r26;

        specialinvoke r14.<ucar.nc2.ncml.NcMLReader: void readVariableNested(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Structure,ucar.nc2.Structure,org.jdom.Element)>(r8, $r22, $r22, r37);

        goto label04;

     label05:
        goto label10;

     label06:
        $r6 = <ucar.ma2.DataType: ucar.ma2.DataType SEQUENCE>;

        if $r3 != $r6 goto label09;

        $r15 = new ucar.nc2.Sequence;

        specialinvoke $r15.<ucar.nc2.Sequence: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r8, r9, r10, $r1);

        $r16 = new ucar.nc2.dataset.SequenceDS;

        specialinvoke $r16.<ucar.nc2.dataset.SequenceDS: void <init>(ucar.nc2.Group,ucar.nc2.Sequence)>(r9, $r15);

        r36 = $r16;

        $r17 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r18 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("variable", $r17);

        $r19 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r21 = (org.jdom.Element) $r20;

        specialinvoke r14.<ucar.nc2.ncml.NcMLReader: void readVariableNested(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Structure,ucar.nc2.Structure,org.jdom.Element)>(r8, $r16, $r16, r21);

        goto label07;

     label08:
        goto label10;

     label09:
        $r7 = new ucar.nc2.dataset.VariableDS;

        specialinvoke $r7.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r8, r9, r10, $r1, $r3, r35, null, null);

        r36 = $r7;

        $r11 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r12 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("values", $r11);

        if $r12 == null goto label10;

        specialinvoke r14.<ucar.nc2.ncml.NcMLReader: void readValues(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable,org.jdom.Element,org.jdom.Element)>(r8, $r7, r0, $r12);

     label10:
        $r38 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r39 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("attribute", $r38);

        $r40 = interfaceinvoke $r39.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z2 = interfaceinvoke $r40.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label12;

        $r13 = interfaceinvoke $r40.<java.util.Iterator: java.lang.Object next()>();

        r41 = (org.jdom.Element) $r13;

        specialinvoke r14.<ucar.nc2.ncml.NcMLReader: void readAtt(java.lang.Object,java.lang.Object,org.jdom.Element)>(r36, null, r41);

        goto label11;

     label12:
        return r36;
    }

    private void readVariableNested(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Structure, ucar.nc2.Structure, org.jdom.Element)
    {
        ucar.nc2.ncml.NcMLReader r23;
        java.util.Formatter $r52;
        org.jdom.Namespace $r10, $r13, $r18, $r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        ucar.nc2.dataset.VariableDS $r6;
        ucar.ma2.DataType $r16, $r17, $r25, $r26, $r35;
        ucar.nc2.Group $r7, $r42, $r44;
        java.util.List $r11, $r14, $r19;
        java.lang.StringBuilder $r36, $r38, $r39, $r46, $r48, $r49;
        java.lang.Object[] $r51;
        ucar.nc2.Structure r3, r5, $r43;
        ucar.nc2.Variable $r4, $r45, r54;
        java.lang.String $r1, $r2, $r8, $r9, $r32, $r33, $r40, $r50, r53;
        java.io.PrintStream $r37, $r47;
        java.util.Iterator $r12, $r15, $r20;
        ucar.nc2.dataset.StructureDS $r29, $r30, $r41;
        java.lang.Object $r21, $r31, $r34;
        org.jdom.Element r0, r22, $r28, r55, r56;
        ucar.nc2.dataset.NetcdfDataset r24;

        r23 := @this: ucar.nc2.ncml.NcMLReader;

        r24 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r5 := @parameter1: ucar.nc2.Structure;

        r3 := @parameter2: ucar.nc2.Structure;

        r0 := @parameter3: org.jdom.Element;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        if $r1 != null goto label01;

        $r52 = r23.<ucar.nc2.ncml.NcMLReader: java.util.Formatter errlog>;

        $r51 = newarray (java.lang.Object)[1];

        $r51[0] = r0;

        virtualinvoke $r52.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("NcML Variable name is required (%s)%n", $r51);

        return;

     label01:
        $r2 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("orgName");

        r53 = $r2;

        if $r2 != null goto label02;

        r53 = $r1;

     label02:
        $r4 = virtualinvoke r3.<ucar.nc2.Structure: ucar.nc2.Variable findVariable(java.lang.String)>(r53);

        if $r4 != null goto label04;

        $z2 = <ucar.nc2.ncml.NcMLReader: boolean debugConstruct>;

        if $z2 == 0 goto label03;

        $r47 = <java.lang.System: java.io.PrintStream out>;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" add new var = ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>($r50);

     label03:
        $r44 = virtualinvoke r5.<ucar.nc2.Structure: ucar.nc2.Group getParentGroup()>();

        $r45 = specialinvoke r23.<ucar.nc2.ncml.NcMLReader: ucar.nc2.Variable readVariableNew(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,org.jdom.Element)>(r24, $r44, r5, r0);

        virtualinvoke r5.<ucar.nc2.Structure: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>($r45);

        return;

     label04:
        if r5 != r3 goto label05;

        r54 = $r4;

        virtualinvoke $r4.<ucar.nc2.Variable: void setName(java.lang.String)>($r1);

        goto label08;

     label05:
        $z0 = $r4 instanceof ucar.nc2.Structure;

        if $z0 == 0 goto label06;

        $r41 = new ucar.nc2.dataset.StructureDS;

        $r42 = virtualinvoke r5.<ucar.nc2.Structure: ucar.nc2.Group getParentGroup()>();

        $r43 = (ucar.nc2.Structure) $r4;

        specialinvoke $r41.<ucar.nc2.dataset.StructureDS: void <init>(ucar.nc2.Group,ucar.nc2.Structure)>($r42, $r43);

        r54 = $r41;

        virtualinvoke $r41.<ucar.nc2.Variable: void setName(java.lang.String)>($r1);

        virtualinvoke $r41.<ucar.nc2.Variable: void setParentStructure(ucar.nc2.Structure)>(r5);

        goto label07;

     label06:
        $r6 = new ucar.nc2.dataset.VariableDS;

        $r7 = virtualinvoke r5.<ucar.nc2.Structure: ucar.nc2.Group getParentGroup()>();

        specialinvoke $r6.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.Group,ucar.nc2.Variable,boolean)>($r7, $r4, 0);

        r54 = $r6;

        virtualinvoke $r6.<ucar.nc2.Variable: void setName(java.lang.String)>($r1);

        virtualinvoke $r6.<ucar.nc2.Variable: void setParentStructure(ucar.nc2.Structure)>(r5);

     label07:
        virtualinvoke r5.<ucar.nc2.Structure: ucar.nc2.Variable addMemberVariable(ucar.nc2.Variable)>(r54);

     label08:
        $z3 = <ucar.nc2.ncml.NcMLReader: boolean debugConstruct>;

        if $z3 == 0 goto label09;

        $r37 = <java.lang.System: java.io.PrintStream out>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" modify existing var = ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r53);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>($r40);

     label09:
        $r8 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("type");

        if $r8 == null goto label10;

        $r35 = staticinvoke <ucar.ma2.DataType: ucar.ma2.DataType getType(java.lang.String)>($r8);

        virtualinvoke r54.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r35);

     label10:
        $r9 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("shape");

        if $r9 == null goto label11;

        virtualinvoke r54.<ucar.nc2.Variable: void setDimensions(java.lang.String)>($r9);

     label11:
        $r10 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r11 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("attribute", $r10);

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z4 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label13;

        $r34 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r55 = (org.jdom.Element) $r34;

        specialinvoke r23.<ucar.nc2.ncml.NcMLReader: void readAtt(java.lang.Object,java.lang.Object,org.jdom.Element)>(r54, $r4, r55);

        goto label12;

     label13:
        $r13 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r14 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("remove", $r13);

        $r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z1 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label15;

        $r31 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r56 = (org.jdom.Element) $r31;

        $r32 = virtualinvoke r56.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("type");

        $r33 = virtualinvoke r56.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        specialinvoke r23.<ucar.nc2.ncml.NcMLReader: void cmdRemove(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r54, $r32, $r33);

        goto label14;

     label15:
        $r16 = virtualinvoke r54.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r17 = <ucar.ma2.DataType: ucar.ma2.DataType STRUCTURE>;

        if $r16 == $r17 goto label16;

        $r25 = virtualinvoke r54.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r26 = <ucar.ma2.DataType: ucar.ma2.DataType SEQUENCE>;

        if $r25 != $r26 goto label19;

     label16:
        $r29 = (ucar.nc2.dataset.StructureDS) r54;

        $r30 = (ucar.nc2.dataset.StructureDS) $r4;

        $r18 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r19 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("variable", $r18);

        $r20 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>();

     label17:
        $z5 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label18;

        $r21 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        r22 = (org.jdom.Element) $r21;

        specialinvoke r23.<ucar.nc2.ncml.NcMLReader: void readVariableNested(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Structure,ucar.nc2.Structure,org.jdom.Element)>(r24, $r29, $r30, r22);

        goto label17;

     label18:
        goto label20;

     label19:
        $r27 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r28 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("values", $r27);

        if $r28 == null goto label20;

        specialinvoke r23.<ucar.nc2.ncml.NcMLReader: void readValues(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable,org.jdom.Element,org.jdom.Element)>(r24, r54, r0, $r28);

     label20:
        return;
    }

    private void readValues(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Variable, org.jdom.Element, org.jdom.Element)
    {
        ucar.nc2.ncml.NcMLReader r23;
        java.util.Formatter $r25, $r31;
        int[] $r19;
        org.jdom.Namespace $r6;
        boolean $z0;
        ucar.ma2.DataType $r10, $r11, $r17;
        ucar.nc2.Group $r21, $r28;
        ucar.nc2.Attribute r32;
        java.lang.Object[] $r24, $r30;
        long $l1, $l4;
        java.util.ArrayList $r12;
        java.util.StringTokenizer $r13;
        int $i0, $i2, $i5, $i6, $i7, i8, i9;
        ucar.nc2.Variable r9, $r29;
        java.lang.String $r1, $r2, $r3, $r4, $r7, $r8, $r15, $r26, $r27, $r33, r34;
        double $d0, $d1;
        char $c3;
        ucar.ma2.Array $r20, $r22;
        char[] r16;
        java.lang.Class $r18;
        org.jdom.Element r0, r5;
        ucar.nc2.dataset.NetcdfDataset r14;

        r23 := @this: ucar.nc2.ncml.NcMLReader;

        r14 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r9 := @parameter1: ucar.nc2.Variable;

        r5 := @parameter2: org.jdom.Element;

        r0 := @parameter3: org.jdom.Element;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("fromAttribute");

        if $r1 == null goto label07;

        $i5 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(64);

        if $i5 <= 0 goto label02;

        $r26 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);

        $i6 = $i5 + 1;

        $r27 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i6);

        $r28 = virtualinvoke r14.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r29 = virtualinvoke $r28.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>($r26);

        if $r29 != null goto label01;

        $r31 = r23.<ucar.nc2.ncml.NcMLReader: java.util.Formatter errlog>;

        $r30 = newarray (java.lang.Object)[1];

        $r30[0] = $r1;

        virtualinvoke $r31.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Cant find variable %s %n", $r30);

        return;

     label01:
        r32 = virtualinvoke $r29.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>($r27);

        goto label05;

     label02:
        if $i5 != 0 goto label03;

        $r33 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

        goto label04;

     label03:
        $r33 = $r1;

     label04:
        $r21 = virtualinvoke r14.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        r32 = virtualinvoke $r21.<ucar.nc2.Group: ucar.nc2.Attribute findAttribute(java.lang.String)>($r33);

     label05:
        if r32 != null goto label06;

        $r25 = r23.<ucar.nc2.ncml.NcMLReader: java.util.Formatter errlog>;

        $r24 = newarray (java.lang.Object)[1];

        $r24[0] = $r1;

        virtualinvoke $r25.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Cant find attribute %s %n", $r24);

        return;

     label06:
        $r22 = virtualinvoke r32.<ucar.nc2.Attribute: ucar.ma2.Array getValues()>();

        virtualinvoke r9.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r22, 1);

        return;

     label07:
        $r2 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("start");

        $r3 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("increment");

        $r4 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("npts");

        if $r4 != null goto label08;

        $l4 = virtualinvoke r9.<ucar.nc2.Variable: long getSize()>();

        $i7 = (int) $l4;

        goto label09;

     label08:
        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

     label09:
        if $r2 == null goto label10;

        if $r3 == null goto label10;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r2);

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

        virtualinvoke r14.<ucar.nc2.dataset.NetcdfDataset: void setValues(ucar.nc2.Variable,int,double,double)>(r9, $i7, $d0, $d1);

        return;

     label10:
        $r6 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r7 = virtualinvoke r5.<org.jdom.Element: java.lang.String getChildText(java.lang.String,org.jdom.Namespace)>("values", $r6);

        $r8 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("separator");

        r34 = $r8;

        if $r8 != null goto label11;

        r34 = " ";

     label11:
        $r10 = virtualinvoke r9.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r11 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r10 != $r11 goto label14;

        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();

        $l1 = virtualinvoke r9.<ucar.nc2.Variable: long getSize()>();

        i8 = (int) $l1;

        r16 = newarray (char)[i8];

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, i8);

        i9 = 0;

     label12:
        if i9 >= $i2 goto label13;

        $c3 = virtualinvoke $r7.<java.lang.String: char charAt(int)>(i9);

        r16[i9] = $c3;

        i9 = i9 + 1;

        goto label12;

     label13:
        $r17 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        $r18 = virtualinvoke $r17.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r19 = virtualinvoke r9.<ucar.nc2.Variable: int[] getShape()>();

        $r20 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>($r18, $r19, r16);

        virtualinvoke r9.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r20, 1);

        goto label17;

     label14:
        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        $r13 = new java.util.StringTokenizer;

        specialinvoke $r13.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r7, r34);

     label15:
        $z0 = virtualinvoke $r13.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label16;

        $r15 = virtualinvoke $r13.<java.util.StringTokenizer: java.lang.String nextToken()>();

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r15);

        goto label15;

     label16:
        virtualinvoke r14.<ucar.nc2.dataset.NetcdfDataset: void setValues(ucar.nc2.Variable,java.util.List)>(r9, $r12);

     label17:
        return;
    }

    private ucar.nc2.ncml.Aggregation readAgg(org.jdom.Element, java.lang.String, ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        org.jdom.Namespace $r6, $r9, $r12, $r15, $r17, $r19, $r21, $r23, $r25, $r40, $r68, $r71, $r74, $r77;
        java.lang.StringBuilder $r43, $r45, $r46, $r56, $r57, $r58, $r60, $r62, $r64, $r65, $r101, $r103, $r104, $r107, $r108, $r109;
        ucar.nc2.ncml.AggregationOuterDimension r117;
        ucar.nc2.ncml.AggregationExisting $r114;
        org.jdom.Element r0, $r16, $r41, r116, r118, r119, r120, r121, r122, r124;
        ucar.nc2.ncml.AggregationNew $r113;
        ucar.nc2.ncml.AggregationFmrc $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        ucar.nc2.ncml.AggregationTiled $r112;
        java.io.PrintStream $r44, $r63, $r102;
        java.lang.Object $r29, $r48, $r80, $r82, $r86, $r89, $r91;
        ucar.nc2.ncml.AggregationUnion $r111;
        ucar.nc2.ncml.NcMLReader r55;
        ucar.nc2.util.CancelTask r42;
        java.util.Set $r37;
        ucar.nc2.ncml.Aggregation r115;
        java.lang.String $r1, $r2, $r3, $r27, $r28, $r30, $r31, $r32, $r33, $r34, $r35, $r36, r38, $r39, $r47, $r49, $r50, $r51, $r52, $r53, $r59, $r61, $r66, $r67, $r81, $r83, $r84, $r85, $r87, $r88, $r90, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r105, $r110, r123;
        ucar.nc2.ncml.NcMLReader$NcmlElementReader $r54;
        ucar.nc2.dataset.NetcdfDataset r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, z22, $z23, $z24, $z25, $z26, $z27, $z28;
        java.util.List $r7, $r10, $r13, $r18, $r20, $r22, $r24, $r26, $r69, $r72, $r75, $r78;
        java.util.Iterator $r8, $r11, $r14, $r70, $r73, $r76, $r79;
        java.lang.IllegalArgumentException $r106;

        r55 := @this: ucar.nc2.ncml.NcMLReader;

        r0 := @parameter0: org.jdom.Element;

        r38 := @parameter1: java.lang.String;

        r5 := @parameter2: ucar.nc2.dataset.NetcdfDataset;

        r42 := @parameter3: ucar.nc2.util.CancelTask;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("dimName");

        $r2 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("type");

        $r3 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("recheckEvery");

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("joinExisting");

        if $z0 == 0 goto label01;

        $r114 = new ucar.nc2.ncml.AggregationExisting;

        specialinvoke $r114.<ucar.nc2.ncml.AggregationExisting: void <init>(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r5, $r1, $r3);

        r115 = $r114;

        goto label11;

     label01:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("joinNew");

        if $z1 == 0 goto label02;

        $r113 = new ucar.nc2.ncml.AggregationNew;

        specialinvoke $r113.<ucar.nc2.ncml.AggregationNew: void <init>(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r5, $r1, $r3);

        r115 = $r113;

        goto label11;

     label02:
        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("tiled");

        if $z2 == 0 goto label03;

        $r112 = new ucar.nc2.ncml.AggregationTiled;

        specialinvoke $r112.<ucar.nc2.ncml.AggregationTiled: void <init>(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r5, $r1, $r3);

        r115 = $r112;

        goto label11;

     label03:
        $z3 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("union");

        if $z3 == 0 goto label04;

        $r111 = new ucar.nc2.ncml.AggregationUnion;

        specialinvoke $r111.<ucar.nc2.ncml.AggregationUnion: void <init>(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r5, $r1, $r3);

        r115 = $r111;

        goto label11;

     label04:
        $z4 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("forecastModelRunCollection");

        if $z4 != 0 goto label05;

        $z16 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("forecastModelRunSingleCollection");

        if $z16 == 0 goto label10;

     label05:
        $r4 = new ucar.nc2.ncml.AggregationFmrc;

        specialinvoke $r4.<ucar.nc2.ncml.AggregationFmrc: void <init>(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String)>(r5, $r1, $r3);

        r115 = $r4;

        $r6 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r7 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("scanFmrc", $r6);

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z17 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z17 == 0 goto label09;

        $r91 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r116 = (org.jdom.Element) $r91;

        $r92 = virtualinvoke r116.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("location");

        $r93 = virtualinvoke r116.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("regExp");

        $r94 = virtualinvoke r116.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("suffix");

        $r95 = virtualinvoke r116.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("subdirs");

        $r96 = virtualinvoke r116.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("olderThan");

        $r97 = virtualinvoke r116.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("runDateMatcher");

        $r98 = virtualinvoke r116.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("forecastDateMatcher");

        $r99 = virtualinvoke r116.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("forecastOffsetMatcher");

        $r100 = staticinvoke <ucar.nc2.util.URLnaming: java.lang.String resolve(java.lang.String,java.lang.String)>(r38, $r92);

        virtualinvoke $r4.<ucar.nc2.ncml.AggregationFmrc: void addDirectoryScanFmrc(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r100, $r94, $r93, $r95, $r96, $r97, $r98, $r99);

        if r42 == null goto label07;

        $z15 = interfaceinvoke r42.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z15 == 0 goto label07;

        return null;

     label07:
        $z14 = <ucar.nc2.ncml.NcMLReader: boolean debugAggDetail>;

        if $z14 == 0 goto label08;

        $r102 = <java.lang.System: java.io.PrintStream out>;

        $r101 = new java.lang.StringBuilder;

        specialinvoke $r101.<java.lang.StringBuilder: void <init>()>();

        $r103 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" debugAgg: nested dirLocation = ");

        $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r100);

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r102.<java.io.PrintStream: void println(java.lang.String)>($r105);

     label08:
        goto label06;

     label09:
        goto label11;

     label10:
        $r106 = new java.lang.IllegalArgumentException;

        $r107 = new java.lang.StringBuilder;

        specialinvoke $r107.<java.lang.StringBuilder: void <init>()>();

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown aggregation type=");

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r106.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r110);

        throw $r106;

     label11:
        $z18 = r115 instanceof ucar.nc2.ncml.AggregationOuterDimension;

        if $z18 == 0 goto label20;

        r117 = (ucar.nc2.ncml.AggregationOuterDimension) r115;

        $r67 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("timeUnitsChange");

        if $r67 == null goto label12;

        $z13 = virtualinvoke $r67.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        virtualinvoke r117.<ucar.nc2.ncml.AggregationOuterDimension: void setTimeUnitsChange(boolean)>($z13);

     label12:
        $r68 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r69 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("variableAgg", $r68);

        $r70 = interfaceinvoke $r69.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z19 = interfaceinvoke $r70.<java.util.Iterator: boolean hasNext()>();

        if $z19 == 0 goto label14;

        $r89 = interfaceinvoke $r70.<java.util.Iterator: java.lang.Object next()>();

        r118 = (org.jdom.Element) $r89;

        $r90 = virtualinvoke r118.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        virtualinvoke r117.<ucar.nc2.ncml.AggregationOuterDimension: void addVariable(java.lang.String)>($r90);

        goto label13;

     label14:
        $r71 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r72 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("promoteGlobalAttribute", $r71);

        $r73 = interfaceinvoke $r72.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z10 = interfaceinvoke $r73.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label16;

        $r86 = interfaceinvoke $r73.<java.util.Iterator: java.lang.Object next()>();

        r119 = (org.jdom.Element) $r86;

        $r87 = virtualinvoke r119.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        $r88 = virtualinvoke r119.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("orgName");

        virtualinvoke r117.<ucar.nc2.ncml.AggregationOuterDimension: void addVariableFromGlobalAttribute(java.lang.String,java.lang.String)>($r87, $r88);

        goto label15;

     label16:
        $r74 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r75 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("promoteGlobalAttributeCompose", $r74);

        $r76 = interfaceinvoke $r75.<java.util.List: java.util.Iterator iterator()>();

     label17:
        $z11 = interfaceinvoke $r76.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label18;

        $r82 = interfaceinvoke $r76.<java.util.Iterator: java.lang.Object next()>();

        r120 = (org.jdom.Element) $r82;

        $r83 = virtualinvoke r120.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        $r84 = virtualinvoke r120.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("format");

        $r85 = virtualinvoke r120.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("orgName");

        virtualinvoke r117.<ucar.nc2.ncml.AggregationOuterDimension: void addVariableFromGlobalAttributeCompose(java.lang.String,java.lang.String,java.lang.String)>($r83, $r84, $r85);

        goto label17;

     label18:
        $r77 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r78 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("cacheVariable", $r77);

        $r79 = interfaceinvoke $r78.<java.util.List: java.util.Iterator iterator()>();

     label19:
        $z12 = interfaceinvoke $r79.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label20;

        $r80 = interfaceinvoke $r79.<java.util.Iterator: java.lang.Object next()>();

        r121 = (org.jdom.Element) $r80;

        $r81 = virtualinvoke r121.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        virtualinvoke r117.<ucar.nc2.ncml.AggregationOuterDimension: void addCacheVariable(java.lang.String,ucar.ma2.DataType)>($r81, null);

        goto label19;

     label20:
        $r9 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r10 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("netcdf", $r9);

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label21:
        $z20 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z20 == 0 goto label25;

        $r48 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r122 = (org.jdom.Element) $r48;

        $r49 = virtualinvoke r122.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("location");

        r123 = $r49;

        if $r49 != null goto label22;

        r123 = virtualinvoke r122.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("uri");

     label22:
        $r50 = virtualinvoke r122.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("id");

        $r51 = virtualinvoke r122.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("ncoords");

        $r52 = virtualinvoke r122.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("coordValue");

        $r53 = virtualinvoke r122.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("section");

        $r54 = new ucar.nc2.ncml.NcMLReader$NcmlElementReader;

        specialinvoke $r54.<ucar.nc2.ncml.NcMLReader$NcmlElementReader: void <init>(ucar.nc2.ncml.NcMLReader,java.lang.String,java.lang.String,org.jdom.Element)>(r55, r38, r123, r122);

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $i5 = virtualinvoke r122.<org.jdom.Element: int hashCode()>();

        $r59 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i5);

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r115.<ucar.nc2.ncml.Aggregation: void addExplicitDataset(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,ucar.nc2.util.cache.FileFactory)>($r61, r123, $r50, $r51, $r52, $r53, $r54);

        if r42 == null goto label23;

        $z9 = interfaceinvoke r42.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z9 == 0 goto label23;

        return null;

     label23:
        $z8 = <ucar.nc2.ncml.NcMLReader: boolean debugAggDetail>;

        if $z8 == 0 goto label24;

        $r63 = <java.lang.System: java.io.PrintStream out>;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" debugAgg: nested dataset = ");

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r123);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r63.<java.io.PrintStream: void println(java.lang.String)>($r66);

     label24:
        goto label21;

     label25:
        $r12 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r13 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("scan", $r12);

        $r14 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label26:
        $z5 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label29;

        $r29 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r124 = (org.jdom.Element) $r29;

        $r30 = virtualinvoke r124.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("location");

        $r31 = virtualinvoke r124.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("regExp");

        $r32 = virtualinvoke r124.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("suffix");

        $r33 = virtualinvoke r124.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("subdirs");

        $r34 = virtualinvoke r124.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("olderThan");

        $r35 = virtualinvoke r124.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("dateFormatMark");

        $r36 = virtualinvoke r124.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("enhance");

        $r37 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: java.util.Set parseEnhanceMode(java.lang.String)>($r36);

        $r39 = staticinvoke <ucar.nc2.util.URLnaming: java.lang.String resolve(java.lang.String,java.lang.String)>(r38, $r30);

        $r40 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r41 = virtualinvoke r124.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("crawlableDatasetImpl", $r40);

        virtualinvoke r115.<ucar.nc2.ncml.Aggregation: void addDatasetScan(org.jdom.Element,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.lang.String,java.lang.String)>($r41, $r39, $r32, $r31, $r35, $r37, $r33, $r34);

        if r42 == null goto label27;

        $z7 = interfaceinvoke r42.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z7 == 0 goto label27;

        return null;

     label27:
        $z6 = <ucar.nc2.ncml.NcMLReader: boolean debugAggDetail>;

        if $z6 == 0 goto label28;

        $r44 = <java.lang.System: java.io.PrintStream out>;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" debugAgg: nested dirLocation = ");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>($r47);

     label28:
        goto label26;

     label29:
        $r15 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r16 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("collection", $r15);

        if $r16 == null goto label30;

        $r27 = virtualinvoke $r16.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("spec");

        $r28 = virtualinvoke $r16.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("olderThan");

        virtualinvoke r115.<ucar.nc2.ncml.Aggregation: void addCollection(java.lang.String,java.lang.String)>($r27, $r28);

     label30:
        $r17 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r18 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("attribute", $r17);

        $i0 = interfaceinvoke $r18.<java.util.List: int size()>();

        if $i0 <= 0 goto label31;

        $z28 = 1;

        $z27 = 1;

        goto label32;

     label31:
        $z28 = 0;

        $z27 = 0;

     label32:
        z22 = $z27;

        if $z28 != 0 goto label35;

        $r25 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r26 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("variable", $r25);

        $i4 = interfaceinvoke $r26.<java.util.List: int size()>();

        if $i4 <= 0 goto label33;

        $z23 = 1;

        goto label34;

     label33:
        $z23 = 0;

     label34:
        z22 = $z23;

     label35:
        if z22 != 0 goto label38;

        $r23 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r24 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("dimension", $r23);

        $i3 = interfaceinvoke $r24.<java.util.List: int size()>();

        if $i3 <= 0 goto label36;

        $z24 = 1;

        goto label37;

     label36:
        $z24 = 0;

     label37:
        z22 = $z24;

     label38:
        if z22 != 0 goto label41;

        $r21 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r22 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("group", $r21);

        $i2 = interfaceinvoke $r22.<java.util.List: int size()>();

        if $i2 <= 0 goto label39;

        $z25 = 1;

        goto label40;

     label39:
        $z25 = 0;

     label40:
        z22 = $z25;

     label41:
        if z22 != 0 goto label44;

        $r19 = <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS>;

        $r20 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("remove", $r19);

        $i1 = interfaceinvoke $r20.<java.util.List: int size()>();

        if $i1 <= 0 goto label42;

        $z26 = 1;

        goto label43;

     label42:
        $z26 = 0;

     label43:
        z22 = $z26;

     label44:
        if z22 == 0 goto label45;

        virtualinvoke r115.<ucar.nc2.ncml.Aggregation: void setModifications(org.jdom.Element)>(r0);

     label45:
        return r115;
    }

    private void cmdRemove(ucar.nc2.Group, java.lang.String, java.lang.String)
    {
        ucar.nc2.ncml.NcMLReader r4;
        java.util.Formatter $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6;
        ucar.nc2.Group r8;
        ucar.nc2.Attribute $r9;
        java.lang.StringBuilder $r10, $r12, $r13, $r14, $r15, $r18, $r20, $r21, $r22, $r23, $r26, $r28, $r29, $r30, $r31;
        java.lang.Object[] $r2;
        ucar.nc2.Variable $r17;
        java.lang.String r0, r3, $r5, $r7, $r16, $r24, $r32;
        java.io.PrintStream $r11, $r19, $r27;
        org.slf4j.Logger $r6;
        ucar.nc2.Dimension $r25;

        r4 := @this: ucar.nc2.ncml.NcMLReader;

        r8 := @parameter0: ucar.nc2.Group;

        r0 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        z6 = 0;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("dimension");

        if $z0 == 0 goto label3;

        $r25 = virtualinvoke r8.<ucar.nc2.Group: ucar.nc2.Dimension findDimension(java.lang.String)>(r3);

        if $r25 == null goto label1;

        virtualinvoke r8.<ucar.nc2.Group: boolean remove(ucar.nc2.Dimension)>($r25);

        $z5 = <ucar.nc2.ncml.NcMLReader: boolean debugCmd>;

        if $z5 == 0 goto label2;

        $r27 = <java.lang.System: java.io.PrintStream out>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CMD remove ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r32);

        goto label2;

     label1:
        z6 = 1;

     label2:
        goto label8;

     label3:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("variable");

        if $z1 == 0 goto label6;

        $r17 = virtualinvoke r8.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>(r3);

        if $r17 == null goto label4;

        virtualinvoke r8.<ucar.nc2.Group: boolean remove(ucar.nc2.Variable)>($r17);

        $z4 = <ucar.nc2.ncml.NcMLReader: boolean debugCmd>;

        if $z4 == 0 goto label5;

        $r19 = <java.lang.System: java.io.PrintStream out>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CMD remove ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r24);

        goto label5;

     label4:
        z6 = 1;

     label5:
        goto label8;

     label6:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("attribute");

        if $z2 == 0 goto label8;

        $r9 = virtualinvoke r8.<ucar.nc2.Group: ucar.nc2.Attribute findAttribute(java.lang.String)>(r3);

        if $r9 == null goto label7;

        virtualinvoke r8.<ucar.nc2.Group: boolean remove(ucar.nc2.Attribute)>($r9);

        $z3 = <ucar.nc2.ncml.NcMLReader: boolean debugCmd>;

        if $z3 == 0 goto label8;

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CMD remove ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r16);

        goto label8;

     label7:
        z6 = 1;

     label8:
        if z6 == 0 goto label9;

        $r1 = new java.util.Formatter;

        specialinvoke $r1.<java.util.Formatter: void <init>()>();

        $r2 = newarray (java.lang.Object)[3];

        $r2[0] = r0;

        $r2[1] = r3;

        $r5 = r4.<ucar.nc2.ncml.NcMLReader: java.lang.String location>;

        $r2[2] = $r5;

        virtualinvoke $r1.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("CMD remove %s CANT find %s location %s%n", $r2);

        $r6 = <ucar.nc2.ncml.NcMLReader: org.slf4j.Logger log>;

        $r7 = virtualinvoke $r1.<java.util.Formatter: java.lang.String toString()>();

        interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>($r7);

     label9:
        return;
    }

    private void cmdRemove(ucar.nc2.Variable, java.lang.String, java.lang.String)
    {
        ucar.nc2.ncml.NcMLReader r4;
        java.util.Formatter $r1;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        ucar.nc2.Attribute $r17;
        java.lang.StringBuilder $r10, $r12, $r13, $r14, $r15, $r18, $r20, $r21, $r22, $r23;
        java.lang.Object[] $r2;
        ucar.nc2.Structure r25;
        ucar.nc2.Variable r8, $r9;
        java.lang.String r0, r3, $r5, $r7, $r16, $r24;
        java.io.PrintStream $r11, $r19;
        org.slf4j.Logger $r6;

        r4 := @this: ucar.nc2.ncml.NcMLReader;

        r8 := @parameter0: ucar.nc2.Variable;

        r0 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        z5 = 0;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("attribute");

        if $z0 == 0 goto label3;

        $r17 = virtualinvoke r8.<ucar.nc2.Variable: ucar.nc2.Attribute findAttribute(java.lang.String)>(r3);

        if $r17 == null goto label1;

        virtualinvoke r8.<ucar.nc2.Variable: boolean remove(ucar.nc2.Attribute)>($r17);

        $z4 = <ucar.nc2.ncml.NcMLReader: boolean debugCmd>;

        if $z4 == 0 goto label2;

        $r19 = <java.lang.System: java.io.PrintStream out>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CMD remove ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r24);

        goto label2;

     label1:
        z5 = 1;

     label2:
        goto label5;

     label3:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("variable");

        if $z1 == 0 goto label5;

        $z2 = r8 instanceof ucar.nc2.Structure;

        if $z2 == 0 goto label5;

        r25 = (ucar.nc2.Structure) r8;

        $r9 = virtualinvoke r25.<ucar.nc2.Structure: ucar.nc2.Variable findVariable(java.lang.String)>(r3);

        if $r9 == null goto label4;

        virtualinvoke r25.<ucar.nc2.Structure: boolean removeMemberVariable(ucar.nc2.Variable)>($r9);

        $z3 = <ucar.nc2.ncml.NcMLReader: boolean debugCmd>;

        if $z3 == 0 goto label5;

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CMD remove ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r16);

        goto label5;

     label4:
        z5 = 1;

     label5:
        if z5 == 0 goto label6;

        $r1 = new java.util.Formatter;

        specialinvoke $r1.<java.util.Formatter: void <init>()>();

        $r2 = newarray (java.lang.Object)[3];

        $r2[0] = r0;

        $r2[1] = r3;

        $r5 = r4.<ucar.nc2.ncml.NcMLReader: java.lang.String location>;

        $r2[2] = $r5;

        virtualinvoke $r1.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("CMD remove %s CANT find %s location %s%n", $r2);

        $r6 = <ucar.nc2.ncml.NcMLReader: org.slf4j.Logger log>;

        $r7 = virtualinvoke $r1.<java.util.Formatter: java.lang.String toString()>();

        interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>($r7);

     label6:
        return;
    }

    public static void writeNcMLToFile(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, r2;
        ucar.nc2.NetcdfFile $r1, $r3;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r1 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: ucar.nc2.NetcdfFile acquireFile(java.lang.String,ucar.nc2.util.CancelTask)>(r0, null);

        $r3 = staticinvoke <ucar.nc2.FileWriter: ucar.nc2.NetcdfFile writeToFile(ucar.nc2.NetcdfFile,java.lang.String)>($r1, r2);

        virtualinvoke $r1.<ucar.nc2.NetcdfFile: void close()>();

        virtualinvoke $r3.<ucar.nc2.NetcdfFile: void close()>();

        return;
    }

    public static void writeNcMLToFile(java.io.InputStream, java.lang.String) throws java.io.IOException
    {
        java.lang.String r2;
        ucar.nc2.NetcdfFile $r3;
        ucar.nc2.dataset.NetcdfDataset $r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

        $r1 = staticinvoke <ucar.nc2.ncml.NcMLReader: ucar.nc2.dataset.NetcdfDataset readNcML(java.io.InputStream,ucar.nc2.util.CancelTask)>(r0, null);

        $r3 = staticinvoke <ucar.nc2.FileWriter: ucar.nc2.NetcdfFile writeToFile(ucar.nc2.NetcdfFile,java.lang.String,boolean)>($r1, r2, 1);

        virtualinvoke $r1.<ucar.nc2.dataset.NetcdfDataset: void close()>();

        virtualinvoke $r3.<ucar.nc2.NetcdfFile: void close()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r3;
        java.lang.String[] r7;
        java.io.FileInputStream $r0;
        java.lang.Exception $r1;
        java.lang.StringBuilder $r2, $r4, $r5;
        java.lang.String $r6;

        r7 := @parameter0: java.lang.String[];

     label1:
        $r0 = new java.io.FileInputStream;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.lang.String)>("C:/data/AStest/oots/test.ncml");

        staticinvoke <ucar.nc2.ncml.NcMLReader: void writeNcMLToFile(java.io.InputStream,java.lang.String)>($r0, "C:/TEMP/testNcmlOut.nc");

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error = ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("C:/data/AStest/oots/test.ncml");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>();

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static boolean access$000()
    {
        boolean $z0;

        $z0 = <ucar.nc2.ncml.NcMLReader: boolean debugAggDetail>;

        return $z0;
    }

    static ucar.nc2.dataset.NetcdfDataset access$100(ucar.nc2.ncml.NcMLReader, java.lang.String, java.lang.String, org.jdom.Element, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.util.CancelTask r4;
        ucar.nc2.ncml.NcMLReader r0;
        java.lang.String r1, r2;
        org.jdom.Element r3;
        ucar.nc2.dataset.NetcdfDataset $r5;

        r0 := @parameter0: ucar.nc2.ncml.NcMLReader;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: org.jdom.Element;

        r4 := @parameter4: ucar.nc2.util.CancelTask;

        $r5 = specialinvoke r0.<ucar.nc2.ncml.NcMLReader: ucar.nc2.dataset.NetcdfDataset readNcML(java.lang.String,java.lang.String,org.jdom.Element,ucar.nc2.util.CancelTask)>(r1, r2, r3, r4);

        return $r5;
    }

    static void <clinit>()
    {
        org.jdom.Namespace $r0;
        org.slf4j.Logger $r1;

        $r0 = staticinvoke <org.jdom.Namespace: org.jdom.Namespace getNamespace(java.lang.String,java.lang.String)>("nc", "http://www.unidata.ucar.edu/namespaces/netcdf/ncml-2.2");

        <ucar.nc2.ncml.NcMLReader: org.jdom.Namespace ncNS> = $r0;

        $r1 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/ncml/NcMLReader;");

        <ucar.nc2.ncml.NcMLReader: org.slf4j.Logger log> = $r1;

        <ucar.nc2.ncml.NcMLReader: boolean debugURL> = 0;

        <ucar.nc2.ncml.NcMLReader: boolean debugXML> = 0;

        <ucar.nc2.ncml.NcMLReader: boolean showParsedXML> = 0;

        <ucar.nc2.ncml.NcMLReader: boolean debugOpen> = 0;

        <ucar.nc2.ncml.NcMLReader: boolean debugConstruct> = 0;

        <ucar.nc2.ncml.NcMLReader: boolean debugCmd> = 0;

        <ucar.nc2.ncml.NcMLReader: boolean debugAggDetail> = 0;

        <ucar.nc2.ncml.NcMLReader: boolean validate> = 0;

        return;
    }
}
