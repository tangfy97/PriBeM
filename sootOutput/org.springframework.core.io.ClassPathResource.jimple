public class org.springframework.core.io.ClassPathResource extends org.springframework.core.io.AbstractFileResolvingResource
{
    private final java.lang.String path;
    private java.lang.ClassLoader classLoader;
    private java.lang.Class clazz;

    public void <init>(java.lang.String)
    {
        org.springframework.core.io.ClassPathResource r0;
        java.lang.String r1;

        r0 := @this: org.springframework.core.io.ClassPathResource;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.springframework.core.io.ClassPathResource: void <init>(java.lang.String,java.lang.ClassLoader)>(r1, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.ClassLoader)
    {
        org.springframework.core.io.ClassPathResource r0;
        java.lang.String r1, $r2, r4;
        java.lang.ClassLoader r3, $r5;
        boolean $z0;

        r0 := @this: org.springframework.core.io.ClassPathResource;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.ClassLoader;

        specialinvoke r0.<org.springframework.core.io.AbstractFileResolvingResource: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Path must not be null");

        $r2 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>(r1);

        r4 = $r2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 == 0 goto label1;

        r4 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(1);

     label1:
        r0.<org.springframework.core.io.ClassPathResource: java.lang.String path> = r4;

        if r3 == null goto label2;

        $r5 = r3;

        goto label3;

     label2:
        $r5 = staticinvoke <org.springframework.util.ClassUtils: java.lang.ClassLoader getDefaultClassLoader()>();

     label3:
        r0.<org.springframework.core.io.ClassPathResource: java.lang.ClassLoader classLoader> = $r5;

        return;
    }

    public void <init>(java.lang.String, java.lang.Class)
    {
        org.springframework.core.io.ClassPathResource r0;
        java.lang.Class r3;
        java.lang.String r1, $r2;

        r0 := @this: org.springframework.core.io.ClassPathResource;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Class;

        specialinvoke r0.<org.springframework.core.io.AbstractFileResolvingResource: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Path must not be null");

        $r2 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>(r1);

        r0.<org.springframework.core.io.ClassPathResource: java.lang.String path> = $r2;

        r0.<org.springframework.core.io.ClassPathResource: java.lang.Class clazz> = r3;

        return;
    }

    protected void <init>(java.lang.String, java.lang.ClassLoader, java.lang.Class)
    {
        org.springframework.core.io.ClassPathResource r0;
        java.lang.Class r4;
        java.lang.String r1, $r2;
        java.lang.ClassLoader r3;

        r0 := @this: org.springframework.core.io.ClassPathResource;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.ClassLoader;

        r4 := @parameter2: java.lang.Class;

        specialinvoke r0.<org.springframework.core.io.AbstractFileResolvingResource: void <init>()>();

        $r2 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>(r1);

        r0.<org.springframework.core.io.ClassPathResource: java.lang.String path> = $r2;

        r0.<org.springframework.core.io.ClassPathResource: java.lang.ClassLoader classLoader> = r3;

        r0.<org.springframework.core.io.ClassPathResource: java.lang.Class clazz> = r4;

        return;
    }

    public final java.lang.String getPath()
    {
        org.springframework.core.io.ClassPathResource r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.core.io.ClassPathResource;

        $r1 = r0.<org.springframework.core.io.ClassPathResource: java.lang.String path>;

        return $r1;
    }

    public final java.lang.ClassLoader getClassLoader()
    {
        org.springframework.core.io.ClassPathResource r0;
        java.lang.Class $r2;
        java.lang.ClassLoader $r1, $r3;

        r0 := @this: org.springframework.core.io.ClassPathResource;

        $r1 = r0.<org.springframework.core.io.ClassPathResource: java.lang.ClassLoader classLoader>;

        if $r1 == null goto label1;

        $r3 = r0.<org.springframework.core.io.ClassPathResource: java.lang.ClassLoader classLoader>;

        goto label2;

     label1:
        $r2 = r0.<org.springframework.core.io.ClassPathResource: java.lang.Class clazz>;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label2:
        return $r3;
    }

    public boolean exists()
    {
        java.net.URL r6;
        org.springframework.core.io.ClassPathResource r0;
        java.lang.Class $r1, $r5;
        java.lang.String $r2, $r4;
        java.lang.ClassLoader $r3;

        r0 := @this: org.springframework.core.io.ClassPathResource;

        $r1 = r0.<org.springframework.core.io.ClassPathResource: java.lang.Class clazz>;

        if $r1 == null goto label1;

        $r5 = r0.<org.springframework.core.io.ClassPathResource: java.lang.Class clazz>;

        $r4 = r0.<org.springframework.core.io.ClassPathResource: java.lang.String path>;

        r6 = virtualinvoke $r5.<java.lang.Class: java.net.URL getResource(java.lang.String)>($r4);

        goto label2;

     label1:
        $r3 = r0.<org.springframework.core.io.ClassPathResource: java.lang.ClassLoader classLoader>;

        $r2 = r0.<org.springframework.core.io.ClassPathResource: java.lang.String path>;

        r6 = virtualinvoke $r3.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>($r2);

     label2:
        if r6 == null goto label3;

        return 1;

     label3:
        return 0;
    }

    public java.io.InputStream getInputStream() throws java.io.IOException
    {
        org.springframework.core.io.ClassPathResource r0;
        java.io.FileNotFoundException $r4;
        java.lang.Class $r1, $r11;
        java.lang.StringBuilder $r5, $r8;
        java.lang.String $r2, $r6, $r7, $r9, $r10;
        java.lang.ClassLoader $r3;
        java.io.InputStream r12;

        r0 := @this: org.springframework.core.io.ClassPathResource;

        $r1 = r0.<org.springframework.core.io.ClassPathResource: java.lang.Class clazz>;

        if $r1 == null goto label1;

        $r11 = r0.<org.springframework.core.io.ClassPathResource: java.lang.Class clazz>;

        $r10 = r0.<org.springframework.core.io.ClassPathResource: java.lang.String path>;

        r12 = virtualinvoke $r11.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r10);

        goto label2;

     label1:
        $r3 = r0.<org.springframework.core.io.ClassPathResource: java.lang.ClassLoader classLoader>;

        $r2 = r0.<org.springframework.core.io.ClassPathResource: java.lang.String path>;

        r12 = virtualinvoke $r3.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>($r2);

     label2:
        if r12 != null goto label3;

        $r4 = new java.io.FileNotFoundException;

        $r5 = new java.lang.StringBuilder;

        $r6 = virtualinvoke r0.<org.springframework.core.io.ClassPathResource: java.lang.String getDescription()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be opened because it does not exist");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label3:
        return r12;
    }

    public java.net.URL getURL() throws java.io.IOException
    {
        java.net.URL r12;
        org.springframework.core.io.ClassPathResource r0;
        java.io.FileNotFoundException $r4;
        java.lang.Class $r1, $r11;
        java.lang.StringBuilder $r5, $r8;
        java.lang.String $r2, $r6, $r7, $r9, $r10;
        java.lang.ClassLoader $r3;

        r0 := @this: org.springframework.core.io.ClassPathResource;

        $r1 = r0.<org.springframework.core.io.ClassPathResource: java.lang.Class clazz>;

        if $r1 == null goto label1;

        $r11 = r0.<org.springframework.core.io.ClassPathResource: java.lang.Class clazz>;

        $r10 = r0.<org.springframework.core.io.ClassPathResource: java.lang.String path>;

        r12 = virtualinvoke $r11.<java.lang.Class: java.net.URL getResource(java.lang.String)>($r10);

        goto label2;

     label1:
        $r3 = r0.<org.springframework.core.io.ClassPathResource: java.lang.ClassLoader classLoader>;

        $r2 = r0.<org.springframework.core.io.ClassPathResource: java.lang.String path>;

        r12 = virtualinvoke $r3.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>($r2);

     label2:
        if r12 != null goto label3;

        $r4 = new java.io.FileNotFoundException;

        $r5 = new java.lang.StringBuilder;

        $r6 = virtualinvoke r0.<org.springframework.core.io.ClassPathResource: java.lang.String getDescription()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be resolved to URL because it does not exist");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label3:
        return r12;
    }

    public org.springframework.core.io.Resource createRelative(java.lang.String)
    {
        org.springframework.core.io.ClassPathResource r0, $r4;
        java.lang.Class $r5;
        java.lang.String r1, $r2, $r3;
        java.lang.ClassLoader $r6;

        r0 := @this: org.springframework.core.io.ClassPathResource;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.core.io.ClassPathResource: java.lang.String path>;

        $r3 = staticinvoke <org.springframework.util.StringUtils: java.lang.String applyRelativePath(java.lang.String,java.lang.String)>($r2, r1);

        $r4 = new org.springframework.core.io.ClassPathResource;

        $r6 = r0.<org.springframework.core.io.ClassPathResource: java.lang.ClassLoader classLoader>;

        $r5 = r0.<org.springframework.core.io.ClassPathResource: java.lang.Class clazz>;

        specialinvoke $r4.<org.springframework.core.io.ClassPathResource: void <init>(java.lang.String,java.lang.ClassLoader,java.lang.Class)>($r3, $r6, $r5);

        return $r4;
    }

    public java.lang.String getFilename()
    {
        org.springframework.core.io.ClassPathResource r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.springframework.core.io.ClassPathResource;

        $r1 = r0.<org.springframework.core.io.ClassPathResource: java.lang.String path>;

        $r2 = staticinvoke <org.springframework.util.StringUtils: java.lang.String getFilename(java.lang.String)>($r1);

        return $r2;
    }

    public java.lang.String getDescription()
    {
        org.springframework.core.io.ClassPathResource r1;
        java.lang.StringBuilder $r0;
        java.lang.Class $r2, $r5;
        java.lang.String $r3, $r4, $r6;

        r1 := @this: org.springframework.core.io.ClassPathResource;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("class path resource [");

        $r2 = r1.<org.springframework.core.io.ClassPathResource: java.lang.Class clazz>;

        if $r2 == null goto label1;

        $r5 = r1.<org.springframework.core.io.ClassPathResource: java.lang.Class clazz>;

        $r6 = staticinvoke <org.springframework.util.ClassUtils: java.lang.String classPackageAsResourcePath(java.lang.Class)>($r5);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

     label1:
        $r3 = r1.<org.springframework.core.io.ClassPathResource: java.lang.String path>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public boolean equals(java.lang.Object)
    {
        org.springframework.core.io.ClassPathResource r1, r2;
        java.lang.Object r0;
        java.lang.Class $r7, $r8;
        java.lang.String $r3, $r4;
        java.lang.ClassLoader $r5, $r6;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: org.springframework.core.io.ClassPathResource;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.springframework.core.io.ClassPathResource;

        if $z0 == 0 goto label3;

        r2 = (org.springframework.core.io.ClassPathResource) r0;

        $r4 = r1.<org.springframework.core.io.ClassPathResource: java.lang.String path>;

        $r3 = r2.<org.springframework.core.io.ClassPathResource: java.lang.String path>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $r6 = r1.<org.springframework.core.io.ClassPathResource: java.lang.ClassLoader classLoader>;

        $r5 = r2.<org.springframework.core.io.ClassPathResource: java.lang.ClassLoader classLoader>;

        $z2 = staticinvoke <org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z2 == 0 goto label2;

        $r8 = r1.<org.springframework.core.io.ClassPathResource: java.lang.Class clazz>;

        $r7 = r2.<org.springframework.core.io.ClassPathResource: java.lang.Class clazz>;

        $z3 = staticinvoke <org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z3 == 0 goto label2;

        return 1;

     label2:
        return 0;

     label3:
        return 0;
    }

    public int hashCode()
    {
        org.springframework.core.io.ClassPathResource r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: org.springframework.core.io.ClassPathResource;

        $r1 = r0.<org.springframework.core.io.ClassPathResource: java.lang.String path>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }
}
