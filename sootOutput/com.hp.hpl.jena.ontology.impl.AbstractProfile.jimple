public abstract class com.hp.hpl.jena.ontology.impl.AbstractProfile extends java.lang.Object implements com.hp.hpl.jena.ontology.Profile
{
    protected com.hp.hpl.jena.util.OneToManyMap m_aliasesMap;

    public void <init>()
    {
        com.hp.hpl.jena.ontology.impl.AbstractProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.AbstractProfile;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean hasAliasFor(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.ontology.impl.AbstractProfile r0;
        com.hp.hpl.jena.util.OneToManyMap $r1;
        com.hp.hpl.jena.rdf.model.Resource r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.AbstractProfile;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.AbstractProfile: com.hp.hpl.jena.util.OneToManyMap aliasMap()>();

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.util.OneToManyMap: boolean containsKey(java.lang.Object)>(r2);

        return $z0;
    }

    public com.hp.hpl.jena.rdf.model.Resource getAliasFor(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.ontology.impl.AbstractProfile r0;
        java.lang.Object $r3;
        com.hp.hpl.jena.util.OneToManyMap $r1;
        com.hp.hpl.jena.rdf.model.Resource r2, $r4;

        r0 := @this: com.hp.hpl.jena.ontology.impl.AbstractProfile;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.AbstractProfile: com.hp.hpl.jena.util.OneToManyMap aliasMap()>();

        $r3 = virtualinvoke $r1.<com.hp.hpl.jena.util.OneToManyMap: java.lang.Object get(java.lang.Object)>(r2);

        $r4 = (com.hp.hpl.jena.rdf.model.Resource) $r3;

        return $r4;
    }

    public java.util.Iterator listAliasesFor(com.hp.hpl.jena.rdf.model.Resource)
    {
        java.util.Iterator $r3;
        com.hp.hpl.jena.ontology.impl.AbstractProfile r0;
        com.hp.hpl.jena.util.OneToManyMap $r1;
        com.hp.hpl.jena.rdf.model.Resource r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.AbstractProfile;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.AbstractProfile: com.hp.hpl.jena.util.OneToManyMap aliasMap()>();

        $r3 = virtualinvoke $r1.<com.hp.hpl.jena.util.OneToManyMap: java.util.Iterator getAll(java.lang.Object)>(r2);

        return $r3;
    }

    public static boolean containsSome(com.hp.hpl.jena.enhanced.EnhGraph, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.rdf.model.Property)
    {
        com.hp.hpl.jena.rdf.model.Property r3;
        com.hp.hpl.jena.graph.Node r2, $r4, $r5;
        com.hp.hpl.jena.graph.Graph $r1;
        com.hp.hpl.jena.enhanced.EnhGraph r0;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.enhanced.EnhGraph;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: com.hp.hpl.jena.rdf.model.Property;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.enhanced.EnhGraph: com.hp.hpl.jena.graph.Graph asGraph()>();

        $r4 = interfaceinvoke r3.<com.hp.hpl.jena.rdf.model.Property: com.hp.hpl.jena.graph.Node asNode()>();

        $r5 = <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node ANY>;

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.graph.Graph: boolean contains(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r2, $r4, $r5);

        return $z0;
    }

    protected abstract com.hp.hpl.jena.rdf.model.Resource[][] aliasTable();

    protected com.hp.hpl.jena.util.OneToManyMap aliasMap()
    {
        com.hp.hpl.jena.rdf.model.Resource[][] $r4;
        com.hp.hpl.jena.util.OneToManyMap $r1, $r2, $r3, $r9, $r14;
        int $i0, i1;
        com.hp.hpl.jena.rdf.model.Resource[] $r5, $r6, $r10, $r11;
        com.hp.hpl.jena.rdf.model.Resource $r7, $r8, $r12, $r13;
        com.hp.hpl.jena.ontology.impl.AbstractProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.AbstractProfile;

        $r1 = r0.<com.hp.hpl.jena.ontology.impl.AbstractProfile: com.hp.hpl.jena.util.OneToManyMap m_aliasesMap>;

        if $r1 != null goto label2;

        $r3 = new com.hp.hpl.jena.util.OneToManyMap;

        specialinvoke $r3.<com.hp.hpl.jena.util.OneToManyMap: void <init>()>();

        r0.<com.hp.hpl.jena.ontology.impl.AbstractProfile: com.hp.hpl.jena.util.OneToManyMap m_aliasesMap> = $r3;

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.AbstractProfile: com.hp.hpl.jena.rdf.model.Resource[][] aliasTable()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r4;

        if i1 >= $i0 goto label2;

        $r9 = r0.<com.hp.hpl.jena.ontology.impl.AbstractProfile: com.hp.hpl.jena.util.OneToManyMap m_aliasesMap>;

        $r5 = $r4[i1];

        $r8 = $r5[0];

        $r6 = $r4[i1];

        $r7 = $r6[1];

        virtualinvoke $r9.<com.hp.hpl.jena.util.OneToManyMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r7);

        $r14 = r0.<com.hp.hpl.jena.ontology.impl.AbstractProfile: com.hp.hpl.jena.util.OneToManyMap m_aliasesMap>;

        $r10 = $r4[i1];

        $r13 = $r10[1];

        $r11 = $r4[i1];

        $r12 = $r11[0];

        virtualinvoke $r14.<com.hp.hpl.jena.util.OneToManyMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r12);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = r0.<com.hp.hpl.jena.ontology.impl.AbstractProfile: com.hp.hpl.jena.util.OneToManyMap m_aliasesMap>;

        return $r2;
    }
}
