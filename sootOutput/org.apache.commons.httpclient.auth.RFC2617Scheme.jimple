public abstract class org.apache.commons.httpclient.auth.RFC2617Scheme extends java.lang.Object implements org.apache.commons.httpclient.auth.AuthScheme
{
    private java.util.Map params;

    public void <init>()
    {
        org.apache.commons.httpclient.auth.RFC2617Scheme r0;

        r0 := @this: org.apache.commons.httpclient.auth.RFC2617Scheme;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.auth.RFC2617Scheme: java.util.Map params> = null;

        return;
    }

    public void <init>(java.lang.String) throws org.apache.commons.httpclient.auth.MalformedChallengeException
    {
        java.lang.String r1;
        org.apache.commons.httpclient.auth.RFC2617Scheme r0;

        r0 := @this: org.apache.commons.httpclient.auth.RFC2617Scheme;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.auth.RFC2617Scheme: java.util.Map params> = null;

        virtualinvoke r0.<org.apache.commons.httpclient.auth.RFC2617Scheme: void processChallenge(java.lang.String)>(r1);

        return;
    }

    public void processChallenge(java.lang.String) throws org.apache.commons.httpclient.auth.MalformedChallengeException
    {
        org.apache.commons.httpclient.auth.RFC2617Scheme r2;
        java.lang.StringBuffer $r6, $r7, $r9, $r10, $r11;
        java.util.Map $r4;
        org.apache.commons.httpclient.auth.MalformedChallengeException $r5;
        java.lang.String r0, $r1, $r3, $r8, $r12;
        boolean $z0;

        r2 := @this: org.apache.commons.httpclient.auth.RFC2617Scheme;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.httpclient.auth.AuthChallengeParser: java.lang.String extractScheme(java.lang.String)>(r0);

        $r3 = virtualinvoke r2.<org.apache.commons.httpclient.auth.RFC2617Scheme: java.lang.String getSchemeName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 != 0 goto label1;

        $r5 = new org.apache.commons.httpclient.auth.MalformedChallengeException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid ");

        $r8 = virtualinvoke r2.<org.apache.commons.httpclient.auth.RFC2617Scheme: java.lang.String getSchemeName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" challenge: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<org.apache.commons.httpclient.auth.MalformedChallengeException: void <init>(java.lang.String)>($r12);

        throw $r5;

     label1:
        $r4 = staticinvoke <org.apache.commons.httpclient.auth.AuthChallengeParser: java.util.Map extractParams(java.lang.String)>(r0);

        r2.<org.apache.commons.httpclient.auth.RFC2617Scheme: java.util.Map params> = $r4;

        return;
    }

    protected java.util.Map getParameters()
    {
        org.apache.commons.httpclient.auth.RFC2617Scheme r0;
        java.util.Map $r1;

        r0 := @this: org.apache.commons.httpclient.auth.RFC2617Scheme;

        $r1 = r0.<org.apache.commons.httpclient.auth.RFC2617Scheme: java.util.Map params>;

        return $r1;
    }

    public java.lang.String getParameter(java.lang.String)
    {
        java.lang.IllegalArgumentException $r7;
        org.apache.commons.httpclient.auth.RFC2617Scheme r1;
        java.util.Map $r2, $r3;
        java.lang.Object $r5;
        java.lang.String r0, $r4, $r6;

        r1 := @this: org.apache.commons.httpclient.auth.RFC2617Scheme;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameter name may not be null");

        throw $r7;

     label1:
        $r2 = r1.<org.apache.commons.httpclient.auth.RFC2617Scheme: java.util.Map params>;

        if $r2 != null goto label2;

        return null;

     label2:
        $r3 = r1.<org.apache.commons.httpclient.auth.RFC2617Scheme: java.util.Map params>;

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = (java.lang.String) $r5;

        return $r6;
    }

    public java.lang.String getRealm()
    {
        java.lang.String $r1;
        org.apache.commons.httpclient.auth.RFC2617Scheme r0;

        r0 := @this: org.apache.commons.httpclient.auth.RFC2617Scheme;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)>("realm");

        return $r1;
    }

    public java.lang.String getID()
    {
        java.lang.String $r1;
        org.apache.commons.httpclient.auth.RFC2617Scheme r0;

        r0 := @this: org.apache.commons.httpclient.auth.RFC2617Scheme;

        $r1 = virtualinvoke r0.<org.apache.commons.httpclient.auth.RFC2617Scheme: java.lang.String getRealm()>();

        return $r1;
    }
}
