public class ucar.nc2.ft.point.writer.WriterCFPointDataset extends java.lang.Object
{
    private static final java.lang.String recordDimName;
    private static final java.lang.String latName;
    private static final java.lang.String lonName;
    private static final java.lang.String altName;
    private static final java.lang.String timeName;
    private ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream ncfileOut;
    private java.util.List globalAtts;
    private java.lang.String altUnits;
    private java.util.Set dimSet;
    private java.util.List recordVars;
    private boolean useAlt;
    private boolean debug;

    public void <init>(java.io.DataOutputStream, java.util.List, java.lang.String)
    {
        java.util.ArrayList $r2;
        java.util.HashSet $r1;
        ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream $r3;
        ucar.nc2.ft.point.writer.WriterCFPointDataset r0;
        java.util.List r5;
        java.io.DataOutputStream r4;
        java.lang.String r6;
        boolean $z0;

        r0 := @this: ucar.nc2.ft.point.writer.WriterCFPointDataset;

        r4 := @parameter0: java.io.DataOutputStream;

        r5 := @parameter1: java.util.List;

        r6 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.util.Set dimSet> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.util.List recordVars> = $r2;

        r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: boolean useAlt> = 0;

        r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: boolean debug> = 0;

        $r3 = new ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream;

        specialinvoke $r3.<ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream: void <init>(ucar.nc2.ft.point.writer.WriterCFPointDataset,java.io.DataOutputStream)>(r0, r4);

        r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream ncfileOut> = $r3;

        r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.util.List globalAtts> = r5;

        r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.lang.String altUnits> = r6;

        if r6 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: boolean useAlt> = $z0;

        return;
    }

    public void writeHeader(java.util.List, int) throws java.io.IOException
    {
        ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream $r2, $r3;
        ucar.nc2.ft.point.writer.WriterCFPointDataset r0;
        java.util.List r1;
        int i0;

        r0 := @this: ucar.nc2.ft.point.writer.WriterCFPointDataset;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        specialinvoke r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: void createGlobalAttributes()>();

        specialinvoke r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: void createRecordVariables(java.util.List)>(r1);

        $r2 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream ncfileOut>;

        virtualinvoke $r2.<ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream: void finish()>();

        $r3 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream ncfileOut>;

        virtualinvoke $r3.<ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream: void writeHeader(int)>(i0);

        return;
    }

    private void createGlobalAttributes()
    {
        java.lang.String $r7, $r12, $r13, $r14;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r9;
        ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream $r3, $r6, $r15;
        ucar.nc2.ft.point.writer.WriterCFPointDataset r0;
        java.util.List $r1, $r8;
        ucar.nc2.Attribute $r2, $r4, r11;
        ucar.nc2.constants.CF$FeatureType $r5;
        java.lang.Object $r10;

        r0 := @this: ucar.nc2.ft.point.writer.WriterCFPointDataset;

        $r1 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.util.List globalAtts>;

        if $r1 == null goto label5;

        $r8 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.util.List globalAtts>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (ucar.nc2.Attribute) $r10;

        $r12 = virtualinvoke r11.<ucar.nc2.Attribute: java.lang.String getName()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("cdm_data_type");

        if $z0 == 0 goto label2;

        goto label1;

     label2:
        $r13 = virtualinvoke r11.<ucar.nc2.Attribute: java.lang.String getName()>();

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("cdm_datatype");

        if $z1 == 0 goto label3;

        goto label1;

     label3:
        $r14 = virtualinvoke r11.<ucar.nc2.Attribute: java.lang.String getName()>();

        $z2 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("thredds_data_type");

        if $z2 == 0 goto label4;

        goto label1;

     label4:
        $r15 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream ncfileOut>;

        virtualinvoke $r15.<ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, r11);

        goto label1;

     label5:
        $r3 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream ncfileOut>;

        $r2 = new ucar.nc2.Attribute;

        specialinvoke $r2.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("Conventions", "CF-1");

        virtualinvoke $r3.<ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r2);

        $r6 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream ncfileOut>;

        $r4 = new ucar.nc2.Attribute;

        $r5 = <ucar.nc2.constants.CF$FeatureType: ucar.nc2.constants.CF$FeatureType point>;

        $r7 = virtualinvoke $r5.<ucar.nc2.constants.CF$FeatureType: java.lang.String name()>();

        specialinvoke $r4.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("CF:featureType", $r7);

        virtualinvoke $r6.<ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r4);

        return;
    }

    private void createRecordVariables(java.util.List)
    {
        java.util.Set $r26, $r55;
        ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream $r2, $r4, $r10, $r17, $r30, $r36, $r51, $r61;
        ucar.nc2.Attribute $r6, $r7, $r12, $r13, $r14, $r19, $r20, $r21, $r23, r45, $r63, $r65, $r66, $r67;
        ucar.nc2.VariableSimpleIF r72, r74;
        java.lang.StringBuilder $r34, $r47, $r56, $r57, $r58, $r59;
        java.lang.String $r31, $r37, $r39, $r48, $r52, $r64, $r68, $r69, r71;
        ucar.nc2.Dimension $r1, $r50, r73, r75;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        ucar.ma2.DataType $r3, $r9, $r16, $r38, $r60;
        java.util.List $r8, $r15, $r22, r24, $r33, $r41, $r42, $r54, $r70;
        int $i0;
        ucar.nc2.Variable $r5, $r11, $r18, $r32, $r40, $r62;
        java.util.Iterator $r25, $r27, $r28, $r35, $r43;
        ucar.nc2.ft.point.writer.WriterCFPointDataset r0;
        java.lang.Object $r29, $r44, $r46, $r49, $r53;

        r0 := @this: ucar.nc2.ft.point.writer.WriterCFPointDataset;

        r24 := @parameter0: java.util.List;

        $r2 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream ncfileOut>;

        $r1 = new ucar.nc2.Dimension;

        specialinvoke $r1.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean,boolean,boolean)>("record", 0, 1, 1, 0);

        virtualinvoke $r2.<ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r1);

        $r4 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream ncfileOut>;

        $r3 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r5 = virtualinvoke $r4.<ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream: ucar.nc2.Variable addVariable(ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String)>(null, "time", $r3, "record");

        $r6 = new ucar.nc2.Attribute;

        specialinvoke $r6.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "secs since 1970-01-01 00:00:00");

        virtualinvoke $r5.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r6);

        $r7 = new ucar.nc2.Attribute;

        specialinvoke $r7.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "date/time of observation");

        virtualinvoke $r5.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r7);

        $r8 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.util.List recordVars>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r10 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream ncfileOut>;

        $r9 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r11 = virtualinvoke $r10.<ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream: ucar.nc2.Variable addVariable(ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String)>(null, "latitude", $r9, "record");

        $r12 = new ucar.nc2.Attribute;

        specialinvoke $r12.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees_north");

        virtualinvoke $r11.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r12);

        $r13 = new ucar.nc2.Attribute;

        specialinvoke $r13.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "latitude of observation");

        virtualinvoke $r11.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r13);

        $r14 = new ucar.nc2.Attribute;

        specialinvoke $r14.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "latitude");

        virtualinvoke $r11.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r14);

        $r15 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.util.List recordVars>;

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r17 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream ncfileOut>;

        $r16 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r18 = virtualinvoke $r17.<ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream: ucar.nc2.Variable addVariable(ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String)>(null, "longitude", $r16, "record");

        $r19 = new ucar.nc2.Attribute;

        specialinvoke $r19.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "degrees_east");

        virtualinvoke $r18.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r19);

        $r20 = new ucar.nc2.Attribute;

        specialinvoke $r20.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "longitude of observation");

        virtualinvoke $r18.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r20);

        $r21 = new ucar.nc2.Attribute;

        specialinvoke $r21.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "longitude");

        virtualinvoke $r18.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r21);

        $r22 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.util.List recordVars>;

        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>($r18);

        $z0 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: boolean useAlt>;

        if $z0 == 0 goto label01;

        $r61 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream ncfileOut>;

        $r60 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r62 = virtualinvoke $r61.<ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream: ucar.nc2.Variable addVariable(ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String)>(null, "altitude", $r60, "record");

        $r63 = new ucar.nc2.Attribute;

        $r64 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.lang.String altUnits>;

        specialinvoke $r63.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r64);

        virtualinvoke $r62.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r63);

        $r65 = new ucar.nc2.Attribute;

        specialinvoke $r65.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "altitude of observation");

        virtualinvoke $r62.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r65);

        $r66 = new ucar.nc2.Attribute;

        specialinvoke $r66.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "longitude");

        virtualinvoke $r62.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r66);

        $r67 = new ucar.nc2.Attribute;

        $r68 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.lang.String altUnits>;

        $r69 = staticinvoke <ucar.nc2.dataset.conv.CF1Convention: java.lang.String getZisPositive(java.lang.String,java.lang.String)>("altitude", $r68);

        specialinvoke $r67.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("positive", $r69);

        virtualinvoke $r62.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r67);

        $r70 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.util.List recordVars>;

        interfaceinvoke $r70.<java.util.List: boolean add(java.lang.Object)>($r62);

     label01:
        r71 = "time latitude longitude";

        $z1 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: boolean useAlt>;

        if $z1 == 0 goto label02;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("time latitude longitude");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("altitude");

        r71 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        $r23 = new ucar.nc2.Attribute;

        specialinvoke $r23.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("coordinates", r71);

        $r25 = interfaceinvoke r24.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z8 = interfaceinvoke $r25.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label04;

        $r53 = interfaceinvoke $r25.<java.util.Iterator: java.lang.Object next()>();

        r72 = (ucar.nc2.VariableSimpleIF) $r53;

        $r54 = interfaceinvoke r72.<ucar.nc2.VariableSimpleIF: java.util.List getDimensions()>();

        $r55 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.util.Set dimSet>;

        interfaceinvoke $r55.<java.util.Set: boolean addAll(java.util.Collection)>($r54);

        goto label03;

     label04:
        $r26 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.util.Set dimSet>;

        $r27 = interfaceinvoke $r26.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label07;

        $r49 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        r73 = (ucar.nc2.Dimension) $r49;

        $z6 = specialinvoke r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: boolean isExtraDimension(ucar.nc2.Dimension)>(r73);

        if $z6 == 0 goto label06;

        $r51 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream ncfileOut>;

        $r50 = new ucar.nc2.Dimension;

        $r52 = virtualinvoke r73.<ucar.nc2.Dimension: java.lang.String getName()>();

        $i0 = virtualinvoke r73.<ucar.nc2.Dimension: int getLength()>();

        $z7 = virtualinvoke r73.<ucar.nc2.Dimension: boolean isVariableLength()>();

        specialinvoke $r50.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean,boolean,boolean)>($r52, $i0, 1, 0, $z7);

        virtualinvoke $r51.<ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(null, $r50);

     label06:
        goto label05;

     label07:
        $r28 = interfaceinvoke r24.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z9 = interfaceinvoke $r28.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label15;

        $r29 = interfaceinvoke $r28.<java.util.Iterator: java.lang.Object next()>();

        r74 = (ucar.nc2.VariableSimpleIF) $r29;

        $r30 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream ncfileOut>;

        $r31 = interfaceinvoke r74.<ucar.nc2.VariableSimpleIF: java.lang.String getShortName()>();

        $r32 = virtualinvoke $r30.<ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream: ucar.nc2.Variable findVariable(java.lang.String)>($r31);

        if $r32 == null goto label09;

        goto label08;

     label09:
        $r33 = interfaceinvoke r74.<ucar.nc2.VariableSimpleIF: java.util.List getDimensions()>();

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>(java.lang.String)>("record");

        $r35 = interfaceinvoke $r33.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z3 = interfaceinvoke $r35.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label12;

        $r46 = interfaceinvoke $r35.<java.util.Iterator: java.lang.Object next()>();

        r75 = (ucar.nc2.Dimension) $r46;

        $z5 = specialinvoke r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: boolean isExtraDimension(ucar.nc2.Dimension)>(r75);

        if $z5 == 0 goto label11;

        $r47 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r48 = virtualinvoke r75.<ucar.nc2.Dimension: java.lang.String getName()>();

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

     label11:
        goto label10;

     label12:
        $r36 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream ncfileOut>;

        $r37 = interfaceinvoke r74.<ucar.nc2.VariableSimpleIF: java.lang.String getShortName()>();

        $r38 = interfaceinvoke r74.<ucar.nc2.VariableSimpleIF: ucar.ma2.DataType getDataType()>();

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        $r40 = virtualinvoke $r36.<ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream: ucar.nc2.Variable addVariable(ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String)>(null, $r37, $r38, $r39);

        $r41 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.util.List recordVars>;

        interfaceinvoke $r41.<java.util.List: boolean add(java.lang.Object)>($r40);

        $r42 = interfaceinvoke r74.<ucar.nc2.VariableSimpleIF: java.util.List getAttributes()>();

        $r43 = interfaceinvoke $r42.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z4 = interfaceinvoke $r43.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label14;

        $r44 = interfaceinvoke $r43.<java.util.Iterator: java.lang.Object next()>();

        r45 = (ucar.nc2.Attribute) $r44;

        virtualinvoke $r40.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>(r45);

        goto label13;

     label14:
        virtualinvoke $r40.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r23);

        goto label08;

     label15:
        return;
    }

    private boolean isExtraDimension(ucar.nc2.Dimension)
    {
        ucar.nc2.ft.point.writer.WriterCFPointDataset r2;
        ucar.nc2.Dimension r0;
        java.lang.String $r1;
        boolean $z0, $z1, $z2;

        r2 := @this: ucar.nc2.ft.point.writer.WriterCFPointDataset;

        r0 := @parameter0: ucar.nc2.Dimension;

        $z0 = virtualinvoke r0.<ucar.nc2.Dimension: boolean isUnlimited()>();

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke r0.<ucar.nc2.Dimension: java.lang.String getName()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("time");

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void writeRecord(double, double, double, java.util.Date, double[], java.lang.String[]) throws java.io.IOException
    {
        java.util.Date r1;
        double[] r2;
        java.lang.String[] r3;
        ucar.ma2.ArrayChar $r8;
        int $i0, $i1, $i2, i3, i4, i5, i6, i7;
        ucar.nc2.Variable r12, r14;
        java.lang.String r13;
        double d0, d1, d2, d3;
        ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream $r5;
        ucar.nc2.ft.point.writer.WriterCFPointDataset r0;
        java.util.List $r4, $r6, $r10;
        ucar.ma2.ArrayDouble$D0 $r9;
        java.lang.Object $r7, $r11;

        r0 := @this: ucar.nc2.ft.point.writer.WriterCFPointDataset;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        r1 := @parameter3: java.util.Date;

        r2 := @parameter4: double[];

        r3 := @parameter5: java.lang.String[];

        i3 = specialinvoke r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: int writeCoordinates(double,double,double,java.util.Date)>(d0, d1, d2, r1);

        i4 = lengthof r2;

        i5 = 0;

     label1:
        if i5 >= i4 goto label2;

        d3 = r2[i5];

        $r9 = new ucar.ma2.ArrayDouble$D0;

        specialinvoke $r9.<ucar.ma2.ArrayDouble$D0: void <init>()>();

        virtualinvoke $r9.<ucar.ma2.ArrayDouble$D0: void set(double)>(d3);

        $r10 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.util.List recordVars>;

        $i2 = i3;

        i3 = i3 + 1;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>($i2);

        r12 = (ucar.nc2.Variable) $r11;

        virtualinvoke r12.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r9, 0);

        i5 = i5 + 1;

        goto label1;

     label2:
        i6 = lengthof r3;

        i7 = 0;

     label3:
        if i7 >= i6 goto label4;

        r13 = r3[i7];

        $r6 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.util.List recordVars>;

        $i0 = i3;

        i3 = i3 + 1;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i0);

        r14 = (ucar.nc2.Variable) $r7;

        $i1 = virtualinvoke r14.<ucar.nc2.Variable: int getShape(int)>(1);

        $r8 = staticinvoke <ucar.ma2.ArrayChar: ucar.ma2.ArrayChar makeFromString(java.lang.String,int)>(r13, $i1);

        virtualinvoke r14.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r8, 0);

        i7 = i7 + 1;

        goto label3;

     label4:
        $r5 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream ncfileOut>;

        $r4 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.util.List recordVars>;

        virtualinvoke $r5.<ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream: void writeRecordData(java.util.List)>($r4);

        return;
    }

    private int writeCoordinates(double, double, double, java.util.Date)
    {
        java.util.Date r1;
        long $l0;
        byte b1;
        ucar.nc2.Variable r14, r15, r16, r17;
        double $d0, d1, d2, d3, d4;
        boolean $z0;
        ucar.nc2.ft.point.writer.WriterCFPointDataset r2;
        java.util.List $r3, $r6, $r9, $r12;
        ucar.ma2.ArrayDouble$D0 $r0, $r5, $r8, $r11;
        java.lang.Object $r4, $r7, $r10, $r13;

        r2 := @this: ucar.nc2.ft.point.writer.WriterCFPointDataset;

        d2 := @parameter0: double;

        d3 := @parameter1: double;

        d4 := @parameter2: double;

        r1 := @parameter3: java.util.Date;

        $r0 = new ucar.ma2.ArrayDouble$D0;

        specialinvoke $r0.<ucar.ma2.ArrayDouble$D0: void <init>()>();

        $l0 = virtualinvoke r1.<java.util.Date: long getTime()>();

        $d0 = (double) $l0;

        d1 = $d0 / 1000.0;

        virtualinvoke $r0.<ucar.ma2.ArrayDouble$D0: void set(double)>(d1);

        $r3 = r2.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.util.List recordVars>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        r14 = (ucar.nc2.Variable) $r4;

        virtualinvoke r14.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r0, 0);

        $r5 = new ucar.ma2.ArrayDouble$D0;

        specialinvoke $r5.<ucar.ma2.ArrayDouble$D0: void <init>()>();

        virtualinvoke $r5.<ucar.ma2.ArrayDouble$D0: void set(double)>(d2);

        $r6 = r2.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.util.List recordVars>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(1);

        r15 = (ucar.nc2.Variable) $r7;

        virtualinvoke r15.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r5, 0);

        $r8 = new ucar.ma2.ArrayDouble$D0;

        specialinvoke $r8.<ucar.ma2.ArrayDouble$D0: void <init>()>();

        virtualinvoke $r8.<ucar.ma2.ArrayDouble$D0: void set(double)>(d3);

        $r9 = r2.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.util.List recordVars>;

        b1 = 3;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(2);

        r16 = (ucar.nc2.Variable) $r10;

        virtualinvoke r16.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r8, 0);

        $z0 = r2.<ucar.nc2.ft.point.writer.WriterCFPointDataset: boolean useAlt>;

        if $z0 == 0 goto label1;

        $r11 = new ucar.ma2.ArrayDouble$D0;

        specialinvoke $r11.<ucar.ma2.ArrayDouble$D0: void <init>()>();

        virtualinvoke $r11.<ucar.ma2.ArrayDouble$D0: void set(double)>(d4);

        $r12 = r2.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.util.List recordVars>;

        b1 = 4;

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(3);

        r17 = (ucar.nc2.Variable) $r13;

        virtualinvoke r17.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r11, 0);

     label1:
        return b1;
    }

    public void writeRecord(ucar.nc2.ft.PointFeature, ucar.ma2.StructureData) throws java.io.IOException
    {
        java.util.Date $r3;
        ucar.ma2.StructureData r9;
        ucar.nc2.ft.PointFeature r1;
        int i0, $i1;
        ucar.nc2.Variable r8;
        java.lang.String $r10, $r16;
        boolean $z0;
        double $d0, $d1, $d2;
        java.io.PrintStream $r13;
        ucar.ma2.Array $r11;
        ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream $r5;
        ucar.nc2.ft.point.writer.WriterCFPointDataset r0;
        java.util.List $r4, $r6, $r17;
        ucar.unidata.geoloc.EarthLocation $r2;
        java.lang.Object $r7;
        java.lang.StringBuilder $r12, $r14, $r15;

        r0 := @this: ucar.nc2.ft.point.writer.WriterCFPointDataset;

        r1 := @parameter0: ucar.nc2.ft.PointFeature;

        r9 := @parameter1: ucar.ma2.StructureData;

        $z0 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: boolean debug>;

        if $z0 == 0 goto label1;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PointFeature= ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r16);

     label1:
        $r2 = interfaceinvoke r1.<ucar.nc2.ft.PointFeature: ucar.unidata.geoloc.EarthLocation getLocation()>();

        $d0 = interfaceinvoke $r2.<ucar.unidata.geoloc.EarthLocation: double getLatitude()>();

        $d1 = interfaceinvoke $r2.<ucar.unidata.geoloc.EarthLocation: double getLongitude()>();

        $d2 = interfaceinvoke $r2.<ucar.unidata.geoloc.EarthLocation: double getAltitude()>();

        $r3 = interfaceinvoke r1.<ucar.nc2.ft.PointFeature: java.util.Date getObservationTimeAsDate()>();

        i0 = specialinvoke r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: int writeCoordinates(double,double,double,java.util.Date)>($d0, $d1, $d2, $r3);

     label2:
        $r17 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.util.List recordVars>;

        $i1 = interfaceinvoke $r17.<java.util.List: int size()>();

        if i0 >= $i1 goto label3;

        $r6 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.util.List recordVars>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);

        r8 = (ucar.nc2.Variable) $r7;

        $r10 = virtualinvoke r8.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r11 = virtualinvoke r9.<ucar.ma2.StructureData: ucar.ma2.Array getArray(java.lang.String)>($r10);

        virtualinvoke r8.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r11, 0);

        i0 = i0 + 1;

        goto label2;

     label3:
        $r5 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream ncfileOut>;

        $r4 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.util.List recordVars>;

        virtualinvoke $r5.<ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream: void writeRecordData(java.util.List)>($r4);

        return;
    }

    public void writeRecord(ucar.nc2.dt.PointObsDatatype, ucar.ma2.StructureData) throws java.io.IOException
    {
        java.util.Date $r3;
        ucar.ma2.StructureData r9;
        int i0, $i1;
        ucar.nc2.Variable r8;
        java.lang.String $r10, $r15, $r17, $r22;
        boolean $z0, $z1;
        double $d0, $d1, $d2;
        java.io.PrintStream $r13, $r19;
        ucar.ma2.Array $r11;
        ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream $r5;
        ucar.nc2.ft.point.writer.WriterCFPointDataset r0;
        java.util.List $r4, $r6, $r23;
        ucar.unidata.geoloc.EarthLocation $r2;
        ucar.nc2.dt.PointObsDatatype r1;
        java.lang.Object $r7;
        java.lang.StringBuilder $r12, $r14, $r16, $r18, $r20, $r21;

        r0 := @this: ucar.nc2.ft.point.writer.WriterCFPointDataset;

        r1 := @parameter0: ucar.nc2.dt.PointObsDatatype;

        r9 := @parameter1: ucar.ma2.StructureData;

        $z0 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: boolean debug>;

        if $z0 == 0 goto label1;

        $r19 = <java.lang.System: java.io.PrintStream out>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pobs= ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r22);

     label1:
        $r2 = interfaceinvoke r1.<ucar.nc2.dt.PointObsDatatype: ucar.unidata.geoloc.EarthLocation getLocation()>();

        $d0 = interfaceinvoke $r2.<ucar.unidata.geoloc.EarthLocation: double getLatitude()>();

        $d1 = interfaceinvoke $r2.<ucar.unidata.geoloc.EarthLocation: double getLongitude()>();

        $d2 = interfaceinvoke $r2.<ucar.unidata.geoloc.EarthLocation: double getAltitude()>();

        $r3 = interfaceinvoke r1.<ucar.nc2.dt.PointObsDatatype: java.util.Date getObservationTimeAsDate()>();

        i0 = specialinvoke r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: int writeCoordinates(double,double,double,java.util.Date)>($d0, $d1, $d2, $r3);

     label2:
        $r23 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.util.List recordVars>;

        $i1 = interfaceinvoke $r23.<java.util.List: int size()>();

        if i0 >= $i1 goto label4;

        $r6 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.util.List recordVars>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);

        r8 = (ucar.nc2.Variable) $r7;

        $z1 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: boolean debug>;

        if $z1 == 0 goto label3;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" var= ");

        $r15 = virtualinvoke r8.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r17);

     label3:
        $r10 = virtualinvoke r8.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r11 = virtualinvoke r9.<ucar.ma2.StructureData: ucar.ma2.Array getArray(java.lang.String)>($r10);

        virtualinvoke r8.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r11, 0);

        i0 = i0 + 1;

        goto label2;

     label4:
        $r5 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream ncfileOut>;

        $r4 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: java.util.List recordVars>;

        virtualinvoke $r5.<ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream: void writeRecordData(java.util.List)>($r4);

        return;
    }

    public void finish() throws java.io.IOException
    {
        ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream $r1, $r2, $r4;
        ucar.nc2.ft.point.writer.WriterCFPointDataset r0;
        java.io.DataOutputStream $r3, $r5;

        r0 := @this: ucar.nc2.ft.point.writer.WriterCFPointDataset;

        $r1 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream ncfileOut>;

        virtualinvoke $r1.<ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream: void close()>();

        $r2 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream ncfileOut>;

        $r3 = $r2.<ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream: java.io.DataOutputStream stream>;

        virtualinvoke $r3.<java.io.DataOutputStream: void flush()>();

        $r4 = r0.<ucar.nc2.ft.point.writer.WriterCFPointDataset: ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream ncfileOut>;

        $r5 = $r4.<ucar.nc2.ft.point.writer.WriterCFPointDataset$NetcdfFileStream: java.io.DataOutputStream stream>;

        virtualinvoke $r5.<java.io.DataOutputStream: void close()>();

        return;
    }

    public static int writePointFeatureCollection(ucar.nc2.ft.FeatureDatasetPoint, java.lang.String) throws java.io.IOException
    {
        java.lang.Integer $r12;
        ucar.ma2.StructureData $r16;
        ucar.nc2.dataset.CoordinateAxis $r24;
        java.io.DataOutputStream $r42;
        java.lang.Long $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.List $r1, $r9, $r19, $r20;
        ucar.nc2.ft.FeatureCollection r32;
        ucar.nc2.VariableSimpleIF r36;
        ucar.nc2.ft.FeatureDatasetPoint r0;
        java.lang.StringBuilder $r27, $r29, $r38;
        ucar.nc2.NetcdfFile $r8;
        java.lang.Object[] $r10;
        ucar.nc2.ft.PointFeatureCollection r33;
        long $l0, $l1, l3;
        java.io.BufferedOutputStream $r41;
        java.util.ArrayList $r43;
        ucar.nc2.ft.PointFeature $r15;
        int i2, $i5;
        java.lang.String r4, $r13, $r23, $r28, $r30, $r37;
        double $d0;
        java.io.PrintStream $r11;
        java.util.Iterator $r2, $r21;
        java.io.FileOutputStream $r40;
        java.io.IOException $r39;
        ucar.nc2.ft.point.writer.WriterCFPointDataset r34, $r44;
        ucar.unidata.geoloc.EarthLocation $r17;
        java.lang.Object $r22, $r31;
        ucar.nc2.dataset.NetcdfDataset r35;

        r0 := @parameter0: ucar.nc2.ft.FeatureDatasetPoint;

        r4 := @parameter1: java.lang.String;

        r33 = null;

        $r1 = interfaceinvoke r0.<ucar.nc2.ft.FeatureDatasetPoint: java.util.List getPointFeatureCollectionList()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r31 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r32 = (ucar.nc2.ft.FeatureCollection) $r31;

        $z4 = r32 instanceof ucar.nc2.ft.PointFeatureCollection;

        if $z4 == 0 goto label02;

        r33 = (ucar.nc2.ft.PointFeatureCollection) r32;

     label02:
        goto label01;

     label03:
        if null != r33 goto label04;

        $r39 = new java.io.IOException;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There is no PointFeatureCollection in  ");

        $r28 = interfaceinvoke r0.<ucar.nc2.ft.FeatureDatasetPoint: java.lang.String getLocation()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<java.io.IOException: void <init>(java.lang.String)>($r30);

        throw $r39;

     label04:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r40 = new java.io.FileOutputStream;

        specialinvoke $r40.<java.io.FileOutputStream: void <init>(java.lang.String)>(r4);

        $r42 = new java.io.DataOutputStream;

        $r41 = new java.io.BufferedOutputStream;

        specialinvoke $r41.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r40, 10000);

        specialinvoke $r42.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r41);

        r34 = null;

        $r43 = new java.util.ArrayList;

        specialinvoke $r43.<java.util.ArrayList: void <init>()>();

        $r8 = interfaceinvoke r0.<ucar.nc2.ft.FeatureDatasetPoint: ucar.nc2.NetcdfFile getNetcdfFile()>();

        if $r8 == null goto label05;

        $z2 = $r8 instanceof ucar.nc2.dataset.NetcdfDataset;

        if $z2 != 0 goto label06;

     label05:
        $r9 = interfaceinvoke r0.<ucar.nc2.ft.FeatureDatasetPoint: java.util.List getDataVariables()>();

        interfaceinvoke $r43.<java.util.List: boolean addAll(java.util.Collection)>($r9);

        goto label09;

     label06:
        r35 = (ucar.nc2.dataset.NetcdfDataset) $r8;

        $r20 = interfaceinvoke r0.<ucar.nc2.ft.FeatureDatasetPoint: java.util.List getDataVariables()>();

        $r21 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z3 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label09;

        $r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r36 = (ucar.nc2.VariableSimpleIF) $r22;

        $r23 = interfaceinvoke r36.<ucar.nc2.VariableSimpleIF: java.lang.String getName()>();

        $r24 = virtualinvoke r35.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis findCoordinateAxis(java.lang.String)>($r23);

        if $r24 != null goto label08;

        interfaceinvoke $r43.<java.util.List: boolean add(java.lang.Object)>(r36);

     label08:
        goto label07;

     label09:
        i2 = 0;

        interfaceinvoke r33.<ucar.nc2.ft.PointFeatureCollection: void resetIteration()>();

     label10:
        $z5 = interfaceinvoke r33.<ucar.nc2.ft.PointFeatureCollection: boolean hasNext()>();

        if $z5 == 0 goto label14;

        $r15 = interfaceinvoke r33.<ucar.nc2.ft.PointFeatureCollection: ucar.nc2.ft.PointFeature next()>();

        $r16 = interfaceinvoke $r15.<ucar.nc2.ft.PointFeature: ucar.ma2.StructureData getData()>();

        if i2 != 0 goto label13;

        $r17 = interfaceinvoke $r15.<ucar.nc2.ft.PointFeature: ucar.unidata.geoloc.EarthLocation getLocation()>();

        $d0 = interfaceinvoke $r17.<ucar.unidata.geoloc.EarthLocation: double getAltitude()>();

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z1 == 0 goto label11;

        $r37 = null;

        goto label12;

     label11:
        $r37 = "meters";

     label12:
        $r44 = new ucar.nc2.ft.point.writer.WriterCFPointDataset;

        $r19 = interfaceinvoke r0.<ucar.nc2.ft.FeatureDatasetPoint: java.util.List getGlobalAttributes()>();

        specialinvoke $r44.<ucar.nc2.ft.point.writer.WriterCFPointDataset: void <init>(java.io.DataOutputStream,java.util.List,java.lang.String)>($r42, $r19, $r37);

        r34 = $r44;

        $i5 = (int) -1;

        virtualinvoke $r44.<ucar.nc2.ft.point.writer.WriterCFPointDataset: void writeHeader(java.util.List,int)>($r43, $i5);

     label13:
        virtualinvoke r34.<ucar.nc2.ft.point.writer.WriterCFPointDataset: void writeRecord(ucar.nc2.ft.PointFeature,ucar.ma2.StructureData)>($r15, $r16);

        i2 = i2 + 1;

        goto label10;

     label14:
        virtualinvoke r34.<ucar.nc2.ft.point.writer.WriterCFPointDataset: void finish()>();

        virtualinvoke $r42.<java.io.DataOutputStream: void flush()>();

        virtualinvoke $r42.<java.io.DataOutputStream: void close()>();

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l3 = $l1 - $l0;

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r10 = newarray (java.lang.Object)[4];

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r10[0] = $r12;

        $r13 = interfaceinvoke r0.<ucar.nc2.ft.FeatureDatasetPoint: java.lang.String getLocation()>();

        $r10[1] = $r13;

        $r10[2] = r4;

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        $r10[3] = $r14;

        virtualinvoke $r11.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Write %d records from %s to %s took %d msecs %n", $r10);

        return i2;
    }

    public static void rewritePointObsDataset(java.lang.String, java.lang.String, boolean) throws java.io.IOException
    {
        ucar.ma2.StructureData $r29;
        java.io.DataOutputStream $r43;
        ucar.nc2.constants.FeatureType $r14;
        boolean z0, $z1, $z2;
        ucar.nc2.dt.DataIterator $r18;
        java.util.List $r32, $r33;
        ucar.nc2.dt.PointObsDatatype r37;
        ucar.nc2.dt.PointObsDataset $r34;
        java.lang.StringBuilder $r2, $r4, $r5, $r7, $r8, $r9, $r21, $r22, $r23, $r24, $r25, $r26, $r39, $r41, $r45;
        ucar.nc2.NetcdfFile r11, $r35;
        long $l0, $l1, l2;
        ucar.nc2.dt.TypedDataset $r15;
        int $i4;
        java.lang.String r3, r6, $r10, $r27, $r38;
        double $d0;
        java.io.PrintStream $r1, $r20;
        java.io.FileOutputStream $r42;
        ucar.nc2.ft.point.writer.WriterCFPointDataset r36, $r44;
        ucar.unidata.geoloc.EarthLocation $r30;
        java.lang.Object $r28;
        ucar.nc2.dataset.NetcdfDataset $r40;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rewrite .nc files from ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("inMem= ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r10);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        if z0 == 0 goto label1;

        $r35 = staticinvoke <ucar.nc2.NetcdfFile: ucar.nc2.NetcdfFile openInMemory(java.lang.String)>(r3);

        goto label2;

     label1:
        $r35 = staticinvoke <ucar.nc2.NetcdfFile: ucar.nc2.NetcdfFile open(java.lang.String)>(r3);

     label2:
        r11 = $r35;

        $r40 = new ucar.nc2.dataset.NetcdfDataset;

        specialinvoke $r40.<ucar.nc2.dataset.NetcdfDataset: void <init>(ucar.nc2.NetcdfFile)>($r35);

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r14 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType POINT>;

        $r15 = staticinvoke <ucar.nc2.dt.TypedDatasetFactory: ucar.nc2.dt.TypedDataset open(ucar.nc2.constants.FeatureType,ucar.nc2.dataset.NetcdfDataset,ucar.nc2.util.CancelTask,java.lang.StringBuilder)>($r14, $r40, null, $r41);

        $r34 = (ucar.nc2.dt.PointObsDataset) $r15;

        $r42 = new java.io.FileOutputStream;

        specialinvoke $r42.<java.io.FileOutputStream: void <init>(java.lang.String)>(r6);

        $r43 = new java.io.DataOutputStream;

        specialinvoke $r43.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r42);

        r36 = null;

        $r18 = interfaceinvoke $r34.<ucar.nc2.dt.PointObsDataset: ucar.nc2.dt.DataIterator getDataIterator(int)>(1000000);

     label3:
        $z2 = interfaceinvoke $r18.<ucar.nc2.dt.DataIterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r28 = interfaceinvoke $r18.<ucar.nc2.dt.DataIterator: java.lang.Object nextData()>();

        r37 = (ucar.nc2.dt.PointObsDatatype) $r28;

        $r29 = interfaceinvoke r37.<ucar.nc2.dt.PointObsDatatype: ucar.ma2.StructureData getData()>();

        if r36 != null goto label6;

        $r30 = interfaceinvoke r37.<ucar.nc2.dt.PointObsDatatype: ucar.unidata.geoloc.EarthLocation getLocation()>();

        $d0 = interfaceinvoke $r30.<ucar.unidata.geoloc.EarthLocation: double getAltitude()>();

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z1 == 0 goto label4;

        $r38 = null;

        goto label5;

     label4:
        $r38 = "meters";

     label5:
        $r44 = new ucar.nc2.ft.point.writer.WriterCFPointDataset;

        $r32 = virtualinvoke r11.<ucar.nc2.NetcdfFile: java.util.List getGlobalAttributes()>();

        specialinvoke $r44.<ucar.nc2.ft.point.writer.WriterCFPointDataset: void <init>(java.io.DataOutputStream,java.util.List,java.lang.String)>($r43, $r32, $r38);

        r36 = $r44;

        $r33 = interfaceinvoke $r34.<ucar.nc2.dt.PointObsDataset: java.util.List getDataVariables()>();

        $i4 = (int) -1;

        virtualinvoke $r44.<ucar.nc2.ft.point.writer.WriterCFPointDataset: void writeHeader(java.util.List,int)>($r33, $i4);

     label6:
        virtualinvoke r36.<ucar.nc2.ft.point.writer.WriterCFPointDataset: void writeRecord(ucar.nc2.dt.PointObsDatatype,ucar.ma2.StructureData)>(r37, $r29);

        goto label3;

     label7:
        virtualinvoke r36.<ucar.nc2.ft.point.writer.WriterCFPointDataset: void finish()>();

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l2 = $l1 - $l0;

        $r20 = <java.lang.System: java.io.PrintStream out>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rewrite ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" took = ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r27);

        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String[] r6;
        java.lang.String $r3, $r5;
        java.io.File $r0;

        r6 := @parameter0: java.lang.String[];

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>("R:/testdata/point/netcdf/02092412_metar.nc");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("C:/TEMP/");

        $r3 = virtualinvoke $r0.<java.io.File: java.lang.String getName()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <ucar.nc2.ft.point.writer.WriterCFPointDataset: void rewritePointObsDataset(java.lang.String,java.lang.String,boolean)>("R:/testdata/point/netcdf/02092412_metar.nc", $r5, 1);

        return;
    }

    public static void <clinit>()
    {
        <ucar.nc2.ft.point.writer.WriterCFPointDataset: java.lang.String timeName> = "time";

        <ucar.nc2.ft.point.writer.WriterCFPointDataset: java.lang.String altName> = "altitude";

        <ucar.nc2.ft.point.writer.WriterCFPointDataset: java.lang.String lonName> = "longitude";

        <ucar.nc2.ft.point.writer.WriterCFPointDataset: java.lang.String latName> = "latitude";

        <ucar.nc2.ft.point.writer.WriterCFPointDataset: java.lang.String recordDimName> = "record";

        return;
    }
}
