public class org.jsoup.select.Evaluator$IsNthOfType extends org.jsoup.select.Evaluator$CssNthEvaluator
{

    public void <init>(int, int)
    {
        int i0, i1;
        org.jsoup.select.Evaluator$IsNthOfType r0;

        r0 := @this: org.jsoup.select.Evaluator$IsNthOfType;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<org.jsoup.select.Evaluator$CssNthEvaluator: void <init>(int,int)>(i0, i1);

        return;
    }

    protected int calculatePosition(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.parser.Tag $r4, $r5;
        org.jsoup.nodes.Element r0, $r1, $r3, $r6, r8;
        int $i0, i1, i2;
        org.jsoup.select.Evaluator$IsNthOfType r7;
        org.jsoup.select.Elements $r2;

        r7 := @this: org.jsoup.select.Evaluator$IsNthOfType;

        r8 := @parameter0: org.jsoup.nodes.Element;

        r0 := @parameter1: org.jsoup.nodes.Element;

        i1 = 0;

        $r1 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element parent()>();

        $r2 = virtualinvoke $r1.<org.jsoup.nodes.Element: org.jsoup.select.Elements children()>();

        i2 = 0;

     label1:
        $i0 = virtualinvoke $r2.<org.jsoup.select.Elements: int size()>();

        if i2 >= $i0 goto label4;

        $r3 = virtualinvoke $r2.<org.jsoup.select.Elements: org.jsoup.nodes.Element get(int)>(i2);

        $r4 = virtualinvoke $r3.<org.jsoup.nodes.Element: org.jsoup.parser.Tag tag()>();

        $r5 = virtualinvoke r0.<org.jsoup.nodes.Element: org.jsoup.parser.Tag tag()>();

        if $r4 != $r5 goto label2;

        i1 = i1 + 1;

     label2:
        $r6 = virtualinvoke $r2.<org.jsoup.select.Elements: org.jsoup.nodes.Element get(int)>(i2);

        if $r6 != r0 goto label3;

        goto label4;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return i1;
    }

    protected java.lang.String getPseudoClass()
    {
        org.jsoup.select.Evaluator$IsNthOfType r0;

        r0 := @this: org.jsoup.select.Evaluator$IsNthOfType;

        return "nth-of-type";
    }
}
