public class org.apache.cxf.service.invoker.SessionFactory extends java.lang.Object implements org.apache.cxf.service.invoker.Factory
{
    org.apache.cxf.service.invoker.Factory factory;
    boolean createIfNotExist;

    public void <init>(java.lang.Class)
    {
        org.apache.cxf.service.invoker.PerRequestFactory $r1;
        java.lang.Class r2;
        org.apache.cxf.service.invoker.SessionFactory r0;

        r0 := @this: org.apache.cxf.service.invoker.SessionFactory;

        r2 := @parameter0: java.lang.Class;

        $r1 = new org.apache.cxf.service.invoker.PerRequestFactory;

        specialinvoke $r1.<org.apache.cxf.service.invoker.PerRequestFactory: void <init>(java.lang.Class)>(r2);

        specialinvoke r0.<org.apache.cxf.service.invoker.SessionFactory: void <init>(org.apache.cxf.service.invoker.Factory,boolean)>($r1, 1);

        return;
    }

    public void <init>(org.apache.cxf.service.invoker.Factory)
    {
        org.apache.cxf.service.invoker.SessionFactory r0;
        org.apache.cxf.service.invoker.Factory r1;

        r0 := @this: org.apache.cxf.service.invoker.SessionFactory;

        r1 := @parameter0: org.apache.cxf.service.invoker.Factory;

        specialinvoke r0.<org.apache.cxf.service.invoker.SessionFactory: void <init>(org.apache.cxf.service.invoker.Factory,boolean)>(r1, 1);

        return;
    }

    public void <init>(java.lang.Class, boolean)
    {
        org.apache.cxf.service.invoker.PerRequestFactory $r1;
        org.apache.cxf.service.invoker.SessionFactory r0;
        java.lang.Class r2;
        boolean z0;

        r0 := @this: org.apache.cxf.service.invoker.SessionFactory;

        r2 := @parameter0: java.lang.Class;

        z0 := @parameter1: boolean;

        $r1 = new org.apache.cxf.service.invoker.PerRequestFactory;

        specialinvoke $r1.<org.apache.cxf.service.invoker.PerRequestFactory: void <init>(java.lang.Class)>(r2);

        specialinvoke r0.<org.apache.cxf.service.invoker.SessionFactory: void <init>(org.apache.cxf.service.invoker.Factory,boolean)>($r1, z0);

        return;
    }

    public void <init>(org.apache.cxf.service.invoker.Factory, boolean)
    {
        org.apache.cxf.service.invoker.SessionFactory r0;
        org.apache.cxf.service.invoker.Factory r1;
        boolean z0;

        r0 := @this: org.apache.cxf.service.invoker.SessionFactory;

        r1 := @parameter0: org.apache.cxf.service.invoker.Factory;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.service.invoker.SessionFactory: org.apache.cxf.service.invoker.Factory factory> = r1;

        r0.<org.apache.cxf.service.invoker.SessionFactory: boolean createIfNotExist> = z0;

        return;
    }

    public java.lang.Object create(org.apache.cxf.message.Exchange) throws java.lang.Throwable
    {
        java.lang.Throwable $r15;
        org.apache.cxf.service.invoker.Factory $r10;
        org.apache.cxf.service.Service r2;
        org.apache.cxf.interceptor.Fault $r8;
        java.util.ResourceBundle $r9;
        org.apache.cxf.service.invoker.SessionFactory r7;
        java.lang.String $r5, $r14;
        boolean $z0;
        org.apache.cxf.message.Exchange r0;
        java.lang.Object $r1, $r6, $r11, r16;
        javax.xml.namespace.QName $r4, $r13;
        org.apache.cxf.transport.Session $r3, $r12;

        r7 := @this: org.apache.cxf.service.invoker.SessionFactory;

        r0 := @parameter0: org.apache.cxf.message.Exchange;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/service/Service;");

        r2 = (org.apache.cxf.service.Service) $r1;

        entermonitor r2;

     label1:
        $r3 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: org.apache.cxf.transport.Session getSession()>();

        $r4 = interfaceinvoke r2.<org.apache.cxf.service.Service: javax.xml.namespace.QName getName()>();

        $r5 = virtualinvoke $r4.<javax.xml.namespace.QName: java.lang.String toString()>();

        $r6 = interfaceinvoke $r3.<org.apache.cxf.transport.Session: java.lang.Object get(java.lang.Object)>($r5);

        r16 = $r6;

        if $r6 != null goto label3;

        $z0 = r7.<org.apache.cxf.service.invoker.SessionFactory: boolean createIfNotExist>;

        if $z0 == 0 goto label2;

        $r10 = r7.<org.apache.cxf.service.invoker.SessionFactory: org.apache.cxf.service.invoker.Factory factory>;

        $r11 = interfaceinvoke $r10.<org.apache.cxf.service.invoker.Factory: java.lang.Object create(org.apache.cxf.message.Exchange)>(r0);

        r16 = $r11;

        $r12 = interfaceinvoke r0.<org.apache.cxf.message.Exchange: org.apache.cxf.transport.Session getSession()>();

        $r13 = interfaceinvoke r2.<org.apache.cxf.service.Service: javax.xml.namespace.QName getName()>();

        $r14 = virtualinvoke $r13.<javax.xml.namespace.QName: java.lang.String toString()>();

        interfaceinvoke $r12.<org.apache.cxf.transport.Session: void put(java.lang.Object,java.lang.Object)>($r14, $r11);

        goto label3;

     label2:
        $r8 = new org.apache.cxf.interceptor.Fault;

        $r9 = <org.apache.cxf.service.invoker.FactoryInvoker: java.util.ResourceBundle BUNDLE>;

        specialinvoke $r8.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.String,java.util.ResourceBundle)>("COULD_NOT_INSTANTIATE", $r9);

        throw $r8;

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r15 := @caughtexception;

        exitmonitor r2;

     label6:
        throw $r15;

     label7:
        return r16;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void release(org.apache.cxf.message.Exchange, java.lang.Object)
    {
        java.lang.Object r2;
        org.apache.cxf.service.invoker.SessionFactory r0;
        org.apache.cxf.message.Exchange r1;

        r0 := @this: org.apache.cxf.service.invoker.SessionFactory;

        r1 := @parameter0: org.apache.cxf.message.Exchange;

        r2 := @parameter1: java.lang.Object;

        return;
    }
}
