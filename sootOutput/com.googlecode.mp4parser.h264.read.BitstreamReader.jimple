public class com.googlecode.mp4parser.h264.read.BitstreamReader extends java.lang.Object
{
    private java.io.InputStream is;
    private int curByte;
    private int nextByte;
    int nBit;
    protected static int bitsRead;
    protected com.googlecode.mp4parser.h264.CharCache debugBits;

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        com.googlecode.mp4parser.h264.CharCache $r1;
        com.googlecode.mp4parser.h264.read.BitstreamReader r0;
        int $i0, $i1;
        java.io.InputStream r2;

        r0 := @this: com.googlecode.mp4parser.h264.read.BitstreamReader;

        r2 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.googlecode.mp4parser.h264.CharCache;

        specialinvoke $r1.<com.googlecode.mp4parser.h264.CharCache: void <init>(int)>(50);

        r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: com.googlecode.mp4parser.h264.CharCache debugBits> = $r1;

        r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: java.io.InputStream is> = r2;

        $i0 = virtualinvoke r2.<java.io.InputStream: int read()>();

        r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int curByte> = $i0;

        $i1 = virtualinvoke r2.<java.io.InputStream: int read()>();

        r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nextByte> = $i1;

        return;
    }

    public int read1Bit() throws java.io.IOException
    {
        com.googlecode.mp4parser.h264.read.BitstreamReader r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i13, $i15;
        char $c11;
        com.googlecode.mp4parser.h264.CharCache $r1;

        r0 := @this: com.googlecode.mp4parser.h264.read.BitstreamReader;

        $i0 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit>;

        if $i0 != 8 goto label1;

        specialinvoke r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: void advance()>();

        $i9 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int curByte>;

        $i13 = (int) -1;

        if $i9 != $i13 goto label1;

        $i15 = (int) -1;

        return $i15;

     label1:
        $i3 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int curByte>;

        $i1 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit>;

        $i2 = 7 - $i1;

        $i4 = $i3 >> $i2;

        $i10 = $i4 & 1;

        $i5 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit>;

        $i6 = $i5 + 1;

        r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit> = $i6;

        $r1 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: com.googlecode.mp4parser.h264.CharCache debugBits>;

        if $i10 != 0 goto label2;

        $c11 = 48;

        goto label3;

     label2:
        $c11 = 49;

     label3:
        virtualinvoke $r1.<com.googlecode.mp4parser.h264.CharCache: void append(char)>($c11);

        $i7 = <com.googlecode.mp4parser.h264.read.BitstreamReader: int bitsRead>;

        $i8 = $i7 + 1;

        <com.googlecode.mp4parser.h264.read.BitstreamReader: int bitsRead> = $i8;

        return $i10;
    }

    public long readNBit(int) throws java.io.IOException
    {
        com.googlecode.mp4parser.h264.read.BitstreamReader r0;
        long $l2, l3, l5;
        java.lang.IllegalArgumentException $r1;
        int i0, $i1, i4;

        r0 := @this: com.googlecode.mp4parser.h264.read.BitstreamReader;

        i0 := @parameter0: int;

        if i0 <= 64 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can not readByte more then 64 bit");

        throw $r1;

     label1:
        l3 = 0L;

        i4 = 0;

        goto label3;

     label2:
        l5 = l3 << 1;

        $i1 = virtualinvoke r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int read1Bit()>();

        $l2 = (long) $i1;

        l3 = l5 | $l2;

        i4 = i4 + 1;

     label3:
        if i4 < i0 goto label2;

        return l3;
    }

    private void advance() throws java.io.IOException
    {
        com.googlecode.mp4parser.h264.read.BitstreamReader r0;
        int $i0, $i1;
        java.io.InputStream $r1;

        r0 := @this: com.googlecode.mp4parser.h264.read.BitstreamReader;

        $i0 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nextByte>;

        r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int curByte> = $i0;

        $r1 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: java.io.InputStream is>;

        $i1 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nextByte> = $i1;

        r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit> = 0;

        return;
    }

    public int readByte() throws java.io.IOException
    {
        com.googlecode.mp4parser.h264.read.BitstreamReader r0;
        int $i0, $i1;

        r0 := @this: com.googlecode.mp4parser.h264.read.BitstreamReader;

        $i0 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit>;

        if $i0 <= 0 goto label1;

        specialinvoke r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: void advance()>();

     label1:
        $i1 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int curByte>;

        specialinvoke r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: void advance()>();

        return $i1;
    }

    public boolean moreRBSPData() throws java.io.IOException
    {
        com.googlecode.mp4parser.h264.read.BitstreamReader r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i14;
        boolean $z0, $z1;

        r0 := @this: com.googlecode.mp4parser.h264.read.BitstreamReader;

        $i0 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit>;

        if $i0 != 8 goto label1;

        specialinvoke r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: void advance()>();

     label1:
        $i1 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit>;

        $i2 = 8 - $i1;

        $i3 = $i2 - 1;

        $i9 = 1 << $i3;

        $i4 = $i9 << 1;

        $i10 = $i4 - 1;

        $i5 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int curByte>;

        $i6 = $i5 & $i10;

        if $i6 != $i9 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $i7 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int curByte>;

        $i12 = (int) -1;

        if $i7 == $i12 goto label4;

        $i8 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nextByte>;

        $i14 = (int) -1;

        if $i8 != $i14 goto label5;

        if $z0 == 0 goto label5;

     label4:
        $z1 = 0;

        goto label6;

     label5:
        $z1 = 1;

     label6:
        return $z1;
    }

    public long getBitPosition()
    {
        int $i0, $i1, $i2, $i3, $i4;
        com.googlecode.mp4parser.h264.read.BitstreamReader r0;
        long $l5;

        r0 := @this: com.googlecode.mp4parser.h264.read.BitstreamReader;

        $i0 = <com.googlecode.mp4parser.h264.read.BitstreamReader: int bitsRead>;

        $i3 = $i0 * 8;

        $i1 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit>;

        $i2 = $i1 % 8;

        $i4 = $i3 + $i2;

        $l5 = (long) $i4;

        return $l5;
    }

    public long readRemainingByte() throws java.io.IOException
    {
        com.googlecode.mp4parser.h264.read.BitstreamReader r0;
        int $i0, $i1;
        long $l2;

        r0 := @this: com.googlecode.mp4parser.h264.read.BitstreamReader;

        $i0 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit>;

        $i1 = 8 - $i0;

        $l2 = virtualinvoke r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: long readNBit(int)>($i1);

        return $l2;
    }

    public int peakNextBits(int) throws java.io.IOException
    {
        com.googlecode.mp4parser.h264.read.BitstreamReader r0;
        int[] $r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19, i20, i21, $i23, $i25;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: com.googlecode.mp4parser.h264.read.BitstreamReader;

        i0 := @parameter0: int;

        if i0 <= 8 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("N should be less then 8");

        throw $r3;

     label1:
        $i1 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit>;

        if $i1 != 8 goto label2;

        specialinvoke r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: void advance()>();

        $i15 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int curByte>;

        $i23 = (int) -1;

        if $i15 != $i23 goto label2;

        $i25 = (int) -1;

        return $i25;

     label2:
        $i2 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit>;

        $i3 = 16 - $i2;

        $r1 = newarray (int)[$i3];

        i16 = 0;

        i17 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit>;

        goto label4;

     label3:
        $i4 = i16;

        i16 = i16 + 1;

        $i6 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int curByte>;

        $i5 = 7 - i17;

        $i7 = $i6 >> $i5;

        $i8 = $i7 & 1;

        $r1[$i4] = $i8;

        i17 = i17 + 1;

     label4:
        if i17 < 8 goto label3;

        i18 = 0;

        goto label6;

     label5:
        $i9 = i16;

        i16 = i16 + 1;

        $i11 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nextByte>;

        $i10 = 7 - i18;

        $i12 = $i11 >> $i10;

        $i13 = $i12 & 1;

        $r1[$i9] = $i13;

        i18 = i18 + 1;

     label6:
        if i18 < 8 goto label5;

        i19 = 0;

        i20 = 0;

        goto label8;

     label7:
        i21 = i19 << 1;

        $i14 = $r1[i20];

        i19 = i21 | $i14;

        i20 = i20 + 1;

     label8:
        if i20 < i0 goto label7;

        return i19;
    }

    public boolean isByteAligned()
    {
        com.googlecode.mp4parser.h264.read.BitstreamReader r0;
        int $i0, $i1;

        r0 := @this: com.googlecode.mp4parser.h264.read.BitstreamReader;

        $i0 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit>;

        $i1 = $i0 % 8;

        if $i1 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void close() throws java.io.IOException
    {
        com.googlecode.mp4parser.h264.read.BitstreamReader r0;

        r0 := @this: com.googlecode.mp4parser.h264.read.BitstreamReader;

        return;
    }

    public int getCurBit()
    {
        com.googlecode.mp4parser.h264.read.BitstreamReader r0;
        int $i0;

        r0 := @this: com.googlecode.mp4parser.h264.read.BitstreamReader;

        $i0 = r0.<com.googlecode.mp4parser.h264.read.BitstreamReader: int nBit>;

        return $i0;
    }
}
