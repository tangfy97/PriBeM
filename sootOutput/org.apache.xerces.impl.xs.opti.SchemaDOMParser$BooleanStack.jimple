final class org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack extends java.lang.Object
{
    private int fDepth;
    private boolean[] fData;

    public void <init>()
    {
        org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack r0;

        r0 := @this: org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int size()
    {
        int $i0;
        org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack r0;

        r0 := @this: org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack;

        $i0 = r0.<org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack: int fDepth>;

        return $i0;
    }

    public void push(boolean)
    {
        org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack r0;
        int $i0, $i1, $i2, $i3;
        boolean[] $r1;
        boolean z0;

        r0 := @this: org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack;

        z0 := @parameter0: boolean;

        $i0 = r0.<org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack: int fDepth>;

        $i1 = $i0 + 1;

        specialinvoke r0.<org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack: void ensureCapacity(int)>($i1);

        $r1 = r0.<org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack: boolean[] fData>;

        $i2 = r0.<org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack: int fDepth>;

        $i3 = $i2 + 1;

        r0.<org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack: int fDepth> = $i3;

        $r1[$i2] = z0;

        return;
    }

    public boolean pop()
    {
        org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack r0;
        int $i0, $i1;
        boolean[] $r1;
        boolean $z0;

        r0 := @this: org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack;

        $r1 = r0.<org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack: boolean[] fData>;

        $i0 = r0.<org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack: int fDepth>;

        $i1 = $i0 - 1;

        r0.<org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack: int fDepth> = $i1;

        $z0 = $r1[$i1];

        return $z0;
    }

    public void clear()
    {
        org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack r0;

        r0 := @this: org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack;

        r0.<org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack: int fDepth> = 0;

        return;
    }

    private void ensureCapacity(int)
    {
        boolean[] $r1, $r2, $r3, r4, $r5, $r6, $r7;
        org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack r0;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack: boolean[] fData>;

        if $r1 != null goto label1;

        $r7 = newarray (boolean)[32];

        r0.<org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack: boolean[] fData> = $r7;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack: boolean[] fData>;

        $i1 = lengthof $r2;

        if $i1 > i0 goto label2;

        $r3 = r0.<org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack: boolean[] fData>;

        $i2 = lengthof $r3;

        $i3 = $i2 * 2;

        r4 = newarray (boolean)[$i3];

        $r6 = r0.<org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack: boolean[] fData>;

        $r5 = r0.<org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack: boolean[] fData>;

        $i4 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r4, 0, $i4);

        r0.<org.apache.xerces.impl.xs.opti.SchemaDOMParser$BooleanStack: boolean[] fData> = r4;

     label2:
        return;
    }
}
