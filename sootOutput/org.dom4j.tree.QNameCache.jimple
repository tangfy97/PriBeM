public class org.dom4j.tree.QNameCache extends java.lang.Object
{
    protected java.util.Map noNamespaceCache;
    protected java.util.Map namespaceCache;
    private org.dom4j.DocumentFactory documentFactory;

    public void <init>()
    {
        java.util.Map $r2, $r4;
        org.dom4j.tree.QNameCache r0;
        java.util.WeakHashMap $r1, $r3;

        r0 := @this: org.dom4j.tree.QNameCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r1);

        r0.<org.dom4j.tree.QNameCache: java.util.Map noNamespaceCache> = $r2;

        $r3 = new java.util.WeakHashMap;

        specialinvoke $r3.<java.util.WeakHashMap: void <init>()>();

        $r4 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r3);

        r0.<org.dom4j.tree.QNameCache: java.util.Map namespaceCache> = $r4;

        return;
    }

    public void <init>(org.dom4j.DocumentFactory)
    {
        java.util.Map $r2, $r4;
        org.dom4j.tree.QNameCache r0;
        java.util.WeakHashMap $r1, $r3;
        org.dom4j.DocumentFactory r5;

        r0 := @this: org.dom4j.tree.QNameCache;

        r5 := @parameter0: org.dom4j.DocumentFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r1);

        r0.<org.dom4j.tree.QNameCache: java.util.Map noNamespaceCache> = $r2;

        $r3 = new java.util.WeakHashMap;

        specialinvoke $r3.<java.util.WeakHashMap: void <init>()>();

        $r4 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r3);

        r0.<org.dom4j.tree.QNameCache: java.util.Map namespaceCache> = $r4;

        r0.<org.dom4j.tree.QNameCache: org.dom4j.DocumentFactory documentFactory> = r5;

        return;
    }

    public java.util.List getQNames()
    {
        java.util.Iterator $r6;
        java.util.Collection $r3, $r5, $r9;
        org.dom4j.tree.QNameCache r1;
        java.util.ArrayList $r0;
        java.util.Map $r2, $r4, r8;
        java.lang.Object $r7;
        boolean $z0;

        r1 := @this: org.dom4j.tree.QNameCache;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.dom4j.tree.QNameCache: java.util.Map noNamespaceCache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r3);

        $r4 = r1.<org.dom4j.tree.QNameCache: java.util.Map namespaceCache>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map) $r7;

        $r9 = interfaceinvoke r8.<java.util.Map: java.util.Collection values()>();

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r9);

        goto label1;

     label2:
        return $r0;
    }

    public org.dom4j.QName get(java.lang.String)
    {
        org.dom4j.tree.QNameCache r0;
        org.dom4j.DocumentFactory $r2;
        java.util.Map $r3, $r4;
        org.dom4j.QName $r1, r7;
        java.lang.Object $r5;
        java.lang.String r6;

        r0 := @this: org.dom4j.tree.QNameCache;

        r6 := @parameter0: java.lang.String;

        r7 = null;

        if r6 == null goto label1;

        $r4 = r0.<org.dom4j.tree.QNameCache: java.util.Map noNamespaceCache>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r7 = (org.dom4j.QName) $r5;

        goto label2;

     label1:
        r6 = "";

     label2:
        if r7 != null goto label3;

        $r1 = virtualinvoke r0.<org.dom4j.tree.QNameCache: org.dom4j.QName createQName(java.lang.String)>(r6);

        r7 = $r1;

        $r2 = r0.<org.dom4j.tree.QNameCache: org.dom4j.DocumentFactory documentFactory>;

        virtualinvoke $r1.<org.dom4j.QName: void setDocumentFactory(org.dom4j.DocumentFactory)>($r2);

        $r3 = r0.<org.dom4j.tree.QNameCache: java.util.Map noNamespaceCache>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r1);

     label3:
        return r7;
    }

    public org.dom4j.QName get(java.lang.String, org.dom4j.Namespace)
    {
        org.dom4j.Namespace r1;
        org.dom4j.tree.QNameCache r0;
        org.dom4j.DocumentFactory $r4;
        java.util.Map $r2;
        org.dom4j.QName $r3, r7;
        java.lang.Object $r5;
        java.lang.String r6;

        r0 := @this: org.dom4j.tree.QNameCache;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: org.dom4j.Namespace;

        $r2 = virtualinvoke r0.<org.dom4j.tree.QNameCache: java.util.Map getNamespaceCache(org.dom4j.Namespace)>(r1);

        r7 = null;

        if r6 == null goto label1;

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r7 = (org.dom4j.QName) $r5;

        goto label2;

     label1:
        r6 = "";

     label2:
        if r7 != null goto label3;

        $r3 = virtualinvoke r0.<org.dom4j.tree.QNameCache: org.dom4j.QName createQName(java.lang.String,org.dom4j.Namespace)>(r6, r1);

        r7 = $r3;

        $r4 = r0.<org.dom4j.tree.QNameCache: org.dom4j.DocumentFactory documentFactory>;

        virtualinvoke $r3.<org.dom4j.QName: void setDocumentFactory(org.dom4j.DocumentFactory)>($r4);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r3);

     label3:
        return r7;
    }

    public org.dom4j.QName get(java.lang.String, org.dom4j.Namespace, java.lang.String)
    {
        org.dom4j.Namespace r1;
        org.dom4j.tree.QNameCache r0;
        org.dom4j.DocumentFactory $r5;
        java.util.Map $r2;
        org.dom4j.QName $r4, r8;
        java.lang.Object $r6;
        java.lang.String r3, r7;

        r0 := @this: org.dom4j.tree.QNameCache;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: org.dom4j.Namespace;

        r3 := @parameter2: java.lang.String;

        $r2 = virtualinvoke r0.<org.dom4j.tree.QNameCache: java.util.Map getNamespaceCache(org.dom4j.Namespace)>(r1);

        r8 = null;

        if r7 == null goto label1;

        $r6 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        r8 = (org.dom4j.QName) $r6;

        goto label2;

     label1:
        r7 = "";

     label2:
        if r8 != null goto label3;

        $r4 = virtualinvoke r0.<org.dom4j.tree.QNameCache: org.dom4j.QName createQName(java.lang.String,org.dom4j.Namespace,java.lang.String)>(r7, r1, r3);

        r8 = $r4;

        $r5 = r0.<org.dom4j.tree.QNameCache: org.dom4j.DocumentFactory documentFactory>;

        virtualinvoke $r4.<org.dom4j.QName: void setDocumentFactory(org.dom4j.DocumentFactory)>($r5);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r4);

     label3:
        return r8;
    }

    public org.dom4j.QName get(java.lang.String, java.lang.String)
    {
        org.dom4j.Namespace $r5, $r7;
        org.dom4j.tree.QNameCache r3;
        int $i0, $i1;
        org.dom4j.QName $r6, $r8;
        java.lang.String r0, $r1, $r2, r4;

        r3 := @this: org.dom4j.tree.QNameCache;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);

        if $i0 >= 0 goto label1;

        $r7 = staticinvoke <org.dom4j.Namespace: org.dom4j.Namespace get(java.lang.String)>(r4);

        $r8 = virtualinvoke r3.<org.dom4j.tree.QNameCache: org.dom4j.QName get(java.lang.String,org.dom4j.Namespace)>(r0, $r7);

        return $r8;

     label1:
        $i1 = $i0 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r5 = staticinvoke <org.dom4j.Namespace: org.dom4j.Namespace get(java.lang.String,java.lang.String)>($r2, r4);

        $r6 = virtualinvoke r3.<org.dom4j.tree.QNameCache: org.dom4j.QName get(java.lang.String,org.dom4j.Namespace)>($r1, $r5);

        return $r6;
    }

    public org.dom4j.QName intern(org.dom4j.QName)
    {
        org.dom4j.Namespace $r3;
        org.dom4j.QName r1, $r5;
        java.lang.String $r2, $r4;
        org.dom4j.tree.QNameCache r0;

        r0 := @this: org.dom4j.tree.QNameCache;

        r1 := @parameter0: org.dom4j.QName;

        $r2 = virtualinvoke r1.<org.dom4j.QName: java.lang.String getName()>();

        $r3 = virtualinvoke r1.<org.dom4j.QName: org.dom4j.Namespace getNamespace()>();

        $r4 = virtualinvoke r1.<org.dom4j.QName: java.lang.String getQualifiedName()>();

        $r5 = virtualinvoke r0.<org.dom4j.tree.QNameCache: org.dom4j.QName get(java.lang.String,org.dom4j.Namespace,java.lang.String)>($r2, $r3, $r4);

        return $r5;
    }

    protected java.util.Map getNamespaceCache(org.dom4j.Namespace)
    {
        org.dom4j.Namespace r0, $r1;
        org.dom4j.tree.QNameCache r2;
        java.util.Map $r3, $r4, $r5, $r7, r8;
        java.lang.Object $r6;

        r2 := @this: org.dom4j.tree.QNameCache;

        r0 := @parameter0: org.dom4j.Namespace;

        $r1 = <org.dom4j.Namespace: org.dom4j.Namespace NO_NAMESPACE>;

        if r0 != $r1 goto label1;

        $r7 = r2.<org.dom4j.tree.QNameCache: java.util.Map noNamespaceCache>;

        return $r7;

     label1:
        r8 = null;

        if r0 == null goto label2;

        $r5 = r2.<org.dom4j.tree.QNameCache: java.util.Map namespaceCache>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r8 = (java.util.Map) $r6;

     label2:
        if r8 != null goto label3;

        $r3 = virtualinvoke r2.<org.dom4j.tree.QNameCache: java.util.Map createMap()>();

        r8 = $r3;

        $r4 = r2.<org.dom4j.tree.QNameCache: java.util.Map namespaceCache>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r3);

     label3:
        return r8;
    }

    protected java.util.Map createMap()
    {
        java.util.HashMap $r0;
        org.dom4j.tree.QNameCache r2;
        java.util.Map $r1;

        r2 := @this: org.dom4j.tree.QNameCache;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r1 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r0);

        return $r1;
    }

    protected org.dom4j.QName createQName(java.lang.String)
    {
        org.dom4j.QName $r0;
        java.lang.String r1;
        org.dom4j.tree.QNameCache r2;

        r2 := @this: org.dom4j.tree.QNameCache;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.dom4j.QName;

        specialinvoke $r0.<org.dom4j.QName: void <init>(java.lang.String)>(r1);

        return $r0;
    }

    protected org.dom4j.QName createQName(java.lang.String, org.dom4j.Namespace)
    {
        org.dom4j.Namespace r2;
        org.dom4j.QName $r0;
        java.lang.String r1;
        org.dom4j.tree.QNameCache r3;

        r3 := @this: org.dom4j.tree.QNameCache;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.dom4j.Namespace;

        $r0 = new org.dom4j.QName;

        specialinvoke $r0.<org.dom4j.QName: void <init>(java.lang.String,org.dom4j.Namespace)>(r1, r2);

        return $r0;
    }

    protected org.dom4j.QName createQName(java.lang.String, org.dom4j.Namespace, java.lang.String)
    {
        org.dom4j.Namespace r2;
        org.dom4j.QName $r0;
        java.lang.String r1, r3;
        org.dom4j.tree.QNameCache r4;

        r4 := @this: org.dom4j.tree.QNameCache;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.dom4j.Namespace;

        r3 := @parameter2: java.lang.String;

        $r0 = new org.dom4j.QName;

        specialinvoke $r0.<org.dom4j.QName: void <init>(java.lang.String,org.dom4j.Namespace,java.lang.String)>(r1, r2, r3);

        return $r0;
    }
}
