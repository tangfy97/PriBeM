public class com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler extends com.hp.hpl.jena.assembler.assemblers.AssemblerBase implements com.hp.hpl.jena.assembler.Assembler
{
    private static final com.hp.hpl.jena.ontology.OntModelSpec DEFAULT;

    public void <init>()
    {
        com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler r0;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler;

        specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.AssemblerBase: void <init>()>();

        return;
    }

    public java.lang.Object open(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.assembler.Mode)
    {
        com.hp.hpl.jena.assembler.Assembler r5;
        com.hp.hpl.jena.reasoner.ReasonerFactory $r7;
        com.hp.hpl.jena.assembler.Mode r10;
        com.hp.hpl.jena.ontology.OntDocumentManager $r6;
        com.hp.hpl.jena.rdf.model.ModelGetter $r9;
        com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler r0;
        com.hp.hpl.jena.rdf.model.Resource r1, $r2;
        com.hp.hpl.jena.ontology.OntModelSpec $r3, $r4;
        java.lang.String $r8;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler;

        r5 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        r10 := @parameter2: com.hp.hpl.jena.assembler.Mode;

        $r2 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Resource OntModelSpec>;

        virtualinvoke r0.<com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler: void checkType(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Resource)>(r1, $r2);

        $r3 = new com.hp.hpl.jena.ontology.OntModelSpec;

        $r4 = specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler: com.hp.hpl.jena.ontology.OntModelSpec getDefault(com.hp.hpl.jena.rdf.model.Resource)>(r1);

        specialinvoke $r3.<com.hp.hpl.jena.ontology.OntModelSpec: void <init>(com.hp.hpl.jena.ontology.OntModelSpec)>($r4);

        $r6 = specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler: com.hp.hpl.jena.ontology.OntDocumentManager getDocumentManager(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource)>(r5, r1);

        $r7 = specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler: com.hp.hpl.jena.reasoner.ReasonerFactory getReasonerFactory(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource)>(r5, r1);

        $r8 = specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler: java.lang.String getLanguage(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource)>(r5, r1);

        $r9 = specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler: com.hp.hpl.jena.rdf.model.ModelGetter getModelSource(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource)>(r5, r1);

        if $r6 == null goto label1;

        virtualinvoke $r3.<com.hp.hpl.jena.ontology.OntModelSpec: void setDocumentManager(com.hp.hpl.jena.ontology.OntDocumentManager)>($r6);

     label1:
        if $r7 == null goto label2;

        virtualinvoke $r3.<com.hp.hpl.jena.ontology.OntModelSpec: void setReasonerFactory(com.hp.hpl.jena.reasoner.ReasonerFactory)>($r7);

     label2:
        if $r8 == null goto label3;

        virtualinvoke $r3.<com.hp.hpl.jena.ontology.OntModelSpec: void setLanguage(java.lang.String)>($r8);

     label3:
        if $r9 == null goto label4;

        virtualinvoke $r3.<com.hp.hpl.jena.ontology.OntModelSpec: void setImportModelGetter(com.hp.hpl.jena.rdf.model.ModelGetter)>($r9);

     label4:
        return $r3;
    }

    private com.hp.hpl.jena.rdf.model.ModelGetter getModelSource(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.assembler.Assembler r3;
        com.hp.hpl.jena.rdf.model.Property $r1;
        java.lang.Object $r4;
        com.hp.hpl.jena.rdf.model.ModelGetter $r6;
        com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler r5;
        com.hp.hpl.jena.rdf.model.Resource r0, $r2;

        r5 := @this: com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler;

        r3 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r0 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property importSource>;

        $r2 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler: com.hp.hpl.jena.rdf.model.Resource getUniqueResource(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, $r1);

        if $r2 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r4 = interfaceinvoke r3.<com.hp.hpl.jena.assembler.Assembler: java.lang.Object open(com.hp.hpl.jena.rdf.model.Resource)>($r2);

        $r6 = (com.hp.hpl.jena.rdf.model.ModelGetter) $r4;

     label2:
        return $r6;
    }

    private java.lang.String getLanguage(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.assembler.Assembler r4;
        com.hp.hpl.jena.rdf.model.Property $r1;
        java.lang.String $r5;
        com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler r3;
        com.hp.hpl.jena.rdf.model.Resource r0, $r2;

        r3 := @this: com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler;

        r4 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r0 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property ontLanguage>;

        $r2 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler: com.hp.hpl.jena.rdf.model.Resource getUniqueResource(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, $r1);

        if $r2 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r5 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Resource: java.lang.String getURI()>();

     label2:
        return $r5;
    }

    private com.hp.hpl.jena.reasoner.ReasonerFactory getReasonerFactory(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.assembler.Assembler r5;
        com.hp.hpl.jena.reasoner.ReasonerFactory $r7, $r10;
        com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler r9;
        com.hp.hpl.jena.rdf.model.Resource r0, $r2, $r4;
        com.hp.hpl.jena.rdf.model.Property $r1, $r3;
        java.lang.Object $r6;
        com.hp.hpl.jena.assembler.exceptions.ReasonerClashException $r8;

        r9 := @this: com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler;

        r5 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r0 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property reasonerFactory>;

        $r2 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler: com.hp.hpl.jena.rdf.model.Resource getUniqueResource(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, $r1);

        $r3 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property reasonerURL>;

        $r4 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler: com.hp.hpl.jena.rdf.model.Resource getUniqueResource(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, $r3);

        if $r4 == null goto label1;

        if $r2 == null goto label1;

        $r8 = new com.hp.hpl.jena.assembler.exceptions.ReasonerClashException;

        specialinvoke $r8.<com.hp.hpl.jena.assembler.exceptions.ReasonerClashException: void <init>(com.hp.hpl.jena.rdf.model.Resource)>(r0);

        throw $r8;

     label1:
        if $r4 == null goto label2;

        $r7 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.ReasonerFactoryAssembler: com.hp.hpl.jena.reasoner.ReasonerFactory getReasonerFactoryByURL(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Resource)>(r0, $r4);

        return $r7;

     label2:
        if $r2 != null goto label3;

        $r10 = null;

        goto label4;

     label3:
        $r6 = interfaceinvoke r5.<com.hp.hpl.jena.assembler.Assembler: java.lang.Object open(com.hp.hpl.jena.rdf.model.Resource)>($r2);

        $r10 = (com.hp.hpl.jena.reasoner.ReasonerFactory) $r6;

     label4:
        return $r10;
    }

    private com.hp.hpl.jena.ontology.OntDocumentManager getDocumentManager(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.assembler.Assembler r3;
        com.hp.hpl.jena.rdf.model.Property $r1;
        java.lang.Object $r4;
        com.hp.hpl.jena.ontology.OntDocumentManager $r6;
        com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler r5;
        com.hp.hpl.jena.rdf.model.Resource r0, $r2;

        r5 := @this: com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler;

        r3 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r0 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property documentManager>;

        $r2 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler: com.hp.hpl.jena.rdf.model.Resource getUniqueResource(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, $r1);

        if $r2 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r4 = interfaceinvoke r3.<com.hp.hpl.jena.assembler.Assembler: java.lang.Object open(com.hp.hpl.jena.rdf.model.Resource)>($r2);

        $r6 = (com.hp.hpl.jena.ontology.OntDocumentManager) $r4;

     label2:
        return $r6;
    }

    private com.hp.hpl.jena.ontology.OntModelSpec getDefault(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler r3;
        com.hp.hpl.jena.rdf.model.Resource r0, $r2;
        com.hp.hpl.jena.ontology.OntModelSpec $r7, $r8, $r9;
        com.hp.hpl.jena.rdf.model.Property $r1;
        java.lang.String $r4, $r5, $r6;
        boolean $z0, $z1;

        r3 := @this: com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $z0 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: boolean isURIResource()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: java.lang.String getNameSpace()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("http://jena.hpl.hp.com/2005/11/Assembler#");

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: java.lang.String getLocalName()>();

        $r7 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler: com.hp.hpl.jena.ontology.OntModelSpec getOntModelSpecField(java.lang.String)>($r6);

        if $r7 != null goto label1;

        $r8 = <com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler: com.hp.hpl.jena.ontology.OntModelSpec DEFAULT>;

        goto label2;

     label1:
        $r8 = $r7;

     label2:
        return $r8;

     label3:
        $r1 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property likeBuiltinSpec>;

        $r2 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler: com.hp.hpl.jena.rdf.model.Resource getUniqueResource(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, $r1);

        if $r2 != null goto label4;

        $r9 = <com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler: com.hp.hpl.jena.ontology.OntModelSpec DEFAULT>;

        goto label5;

     label4:
        $r4 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Resource: java.lang.String getLocalName()>();

        $r9 = specialinvoke r3.<com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler: com.hp.hpl.jena.ontology.OntModelSpec getRequiredOntModelSpecField(java.lang.String)>($r4);

     label5:
        return $r9;
    }

    private com.hp.hpl.jena.ontology.OntModelSpec getRequiredOntModelSpecField(java.lang.String)
    {
        java.lang.String r0;
        com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler r3;
        com.hp.hpl.jena.ontology.OntModelSpec $r1;
        com.hp.hpl.jena.shared.NotFoundException $r2;

        r3 := @this: com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler: com.hp.hpl.jena.ontology.OntModelSpec getOntModelSpecField(java.lang.String)>(r0);

        if $r1 != null goto label1;

        $r2 = new com.hp.hpl.jena.shared.NotFoundException;

        specialinvoke $r2.<com.hp.hpl.jena.shared.NotFoundException: void <init>(java.lang.String)>(r0);

        throw $r2;

     label1:
        return $r1;
    }

    public static com.hp.hpl.jena.ontology.OntModelSpec getOntModelSpecField(java.lang.String)
    {
        java.lang.reflect.Field $r1;
        com.hp.hpl.jena.ontology.OntModelSpec $r4;
        java.lang.Exception $r5;
        int $i0;
        java.lang.Class $r2, r6;
        java.lang.Object $r3;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

     label1:
        r6 = class "Lcom/hp/hpl/jena/ontology/OntModelSpec;";

        $r1 = virtualinvoke r6.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(r0);

        $i0 = virtualinvoke $r1.<java.lang.reflect.Field: int getModifiers()>();

        $r2 = virtualinvoke $r1.<java.lang.reflect.Field: java.lang.Class getType()>();

        if $r2 != class "Lcom/hp/hpl/jena/ontology/OntModelSpec;" goto label3;

        $z0 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler: boolean isConstant(int)>($i0);

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke $r1.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r4 = (com.hp.hpl.jena.ontology.OntModelSpec) $r3;

     label2:
        return $r4;

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

     label5:
        return null;

        catch java.lang.Exception from label1 to label2 with label4;
    }

    protected static boolean isConstant(int)
    {
        int i0;
        boolean $z0, $z1, $z2, $z3;

        i0 := @parameter0: int;

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>(i0);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>(i0);

        if $z1 == 0 goto label1;

        $z2 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>(i0);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.ontology.OntModelSpec $r0;

        $r0 = <com.hp.hpl.jena.ontology.OntModelSpec: com.hp.hpl.jena.ontology.OntModelSpec OWL_MEM_RDFS_INF>;

        <com.hp.hpl.jena.assembler.assemblers.OntModelSpecAssembler: com.hp.hpl.jena.ontology.OntModelSpec DEFAULT> = $r0;

        return;
    }
}
