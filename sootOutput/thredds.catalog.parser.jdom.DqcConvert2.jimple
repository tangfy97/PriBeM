public class thredds.catalog.parser.jdom.DqcConvert2 extends java.lang.Object implements thredds.catalog.query.DqcConvertIF
{
    public static boolean debugURL;
    public static boolean debugXML;
    public static boolean debugDBurl;
    public static boolean debugXMLopen;
    public static boolean showParsedXML;
    public static boolean showXMLoutput;
    protected static final org.jdom.Namespace defNS;
    protected static final org.jdom.Namespace xlinkNS;

    public void <init>()
    {
        thredds.catalog.parser.jdom.DqcConvert2 r0;

        r0 := @this: thredds.catalog.parser.jdom.DqcConvert2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public thredds.catalog.query.QueryCapability parseXML(thredds.catalog.query.DqcFactory, org.jdom.Document, java.net.URI) throws java.io.IOException
    {
        org.jdom.output.XMLOutputter $r7;
        thredds.catalog.query.QueryCapability $r4;
        org.jdom.Document r1;
        java.net.URI r3;
        java.lang.String $r11, $r14;
        boolean $z0, $z1;
        java.io.PrintStream $r5, $r6, $r9;
        thredds.catalog.parser.jdom.DqcConvert2 r0;
        java.lang.StringBuilder $r8, $r10, $r12, $r13;
        thredds.catalog.query.DqcFactory r15;
        org.jdom.Element $r2;

        r0 := @this: thredds.catalog.parser.jdom.DqcConvert2;

        r15 := @parameter0: thredds.catalog.query.DqcFactory;

        r1 := @parameter1: org.jdom.Document;

        r3 := @parameter2: java.net.URI;

        $z0 = <thredds.catalog.parser.jdom.DqcConvert2: boolean showParsedXML>;

        if $z0 == 0 goto label1;

        $r7 = new org.jdom.output.XMLOutputter;

        specialinvoke $r7.<org.jdom.output.XMLOutputter: void <init>()>();

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*** queryFactory/showParsedXML = \n");

        $r11 = virtualinvoke $r7.<org.jdom.output.XMLOutputter: java.lang.String outputString(org.jdom.Document)>(r1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n*******");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r14);

     label1:
        $r2 = virtualinvoke r1.<org.jdom.Document: org.jdom.Element getRootElement()>();

        $r4 = specialinvoke r0.<thredds.catalog.parser.jdom.DqcConvert2: thredds.catalog.query.QueryCapability readQC(org.jdom.Element,java.net.URI)>($r2, r3);

        $z1 = <thredds.catalog.parser.jdom.DqcConvert2: boolean showXMLoutput>;

        if $z1 == 0 goto label2;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("*** queryFactory/showXMLoutput");

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke r0.<thredds.catalog.parser.jdom.DqcConvert2: void writeXML(thredds.catalog.query.QueryCapability,java.io.OutputStream)>($r4, $r6);

     label2:
        return $r4;
    }

    private thredds.catalog.query.QueryCapability readQC(org.jdom.Element, java.net.URI)
    {
        thredds.catalog.query.SelectList $r17;
        thredds.catalog.query.QueryCapability $r3;
        int $i0, i1;
        org.jdom.Namespace $r7, $r10;
        java.lang.String $r1, $r2, $r5, $r15;
        java.net.URI r4;
        boolean $z0, $z1;
        thredds.catalog.parser.jdom.DqcConvert2 r6;
        thredds.catalog.query.SelectStation $r16;
        thredds.catalog.query.Query $r9;
        java.util.List $r12;
        java.lang.Object $r13;
        org.jdom.Element r0, $r8, $r11, r14;

        r6 := @this: thredds.catalog.parser.jdom.DqcConvert2;

        r0 := @parameter0: org.jdom.Element;

        r4 := @parameter1: java.net.URI;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        $r2 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("version");

        $r3 = new thredds.catalog.query.QueryCapability;

        $r5 = virtualinvoke r4.<java.net.URI: java.lang.String toString()>();

        specialinvoke $r3.<thredds.catalog.query.QueryCapability: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r5, $r1, $r2);

        $r7 = <thredds.catalog.parser.jdom.DqcConvert2: org.jdom.Namespace defNS>;

        $r8 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("query", $r7);

        $r9 = specialinvoke r6.<thredds.catalog.parser.jdom.DqcConvert2: thredds.catalog.query.Query readQuery(org.jdom.Element,java.net.URI)>($r8, r4);

        virtualinvoke $r3.<thredds.catalog.query.QueryCapability: void setQuery(thredds.catalog.query.Query)>($r9);

        $r10 = <thredds.catalog.parser.jdom.DqcConvert2: org.jdom.Namespace defNS>;

        $r11 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("selections", $r10);

        $r12 = virtualinvoke $r11.<org.jdom.Element: java.util.List getChildren()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r12.<java.util.List: int size()>();

        if i1 >= $i0 goto label4;

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i1);

        r14 = (org.jdom.Element) $r13;

        $r15 = virtualinvoke r14.<org.jdom.Element: java.lang.String getName()>();

        $z0 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("selectList");

        if $z0 == 0 goto label2;

        $r17 = specialinvoke r6.<thredds.catalog.parser.jdom.DqcConvert2: thredds.catalog.query.SelectList readSelectList(thredds.catalog.query.QueryCapability,org.jdom.Element)>($r3, r14);

        virtualinvoke $r3.<thredds.catalog.query.QueryCapability: void addSelector(thredds.catalog.query.Selector)>($r17);

     label2:
        $z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("selectStation");

        if $z1 == 0 goto label3;

        $r16 = specialinvoke r6.<thredds.catalog.parser.jdom.DqcConvert2: thredds.catalog.query.SelectStation readSelectStation(thredds.catalog.query.QueryCapability,org.jdom.Element)>($r3, r14);

        virtualinvoke $r3.<thredds.catalog.query.QueryCapability: void addSelector(thredds.catalog.query.Selector)>($r16);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return $r3;
    }

    public org.jdom.Document makeQC(thredds.catalog.query.QueryCapability)
    {
        thredds.catalog.query.SelectList $r16;
        thredds.catalog.query.Selector r13;
        thredds.catalog.query.QueryCapability r3;
        java.util.ArrayList $r11;
        org.jdom.Document $r2;
        int i0, $i1;
        org.jdom.Namespace $r1, $r10;
        java.lang.String $r4, $r5, $r18;
        boolean $z0, $z1;
        thredds.catalog.parser.jdom.DqcConvert2 r6;
        thredds.catalog.query.SelectStation $r14;
        thredds.catalog.query.Query $r7;
        java.lang.Object $r12;
        org.jdom.Element $r0, $r8, $r9, $r15, $r17;

        r6 := @this: thredds.catalog.parser.jdom.DqcConvert2;

        r3 := @parameter0: thredds.catalog.query.QueryCapability;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.catalog.parser.jdom.DqcConvert2: org.jdom.Namespace defNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("queryCapability", $r1);

        $r2 = new org.jdom.Document;

        specialinvoke $r2.<org.jdom.Document: void <init>(org.jdom.Element)>($r0);

        $r4 = virtualinvoke r3.<thredds.catalog.query.QueryCapability: java.lang.String getName()>();

        if null == $r4 goto label1;

        $r18 = virtualinvoke r3.<thredds.catalog.query.QueryCapability: java.lang.String getName()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("name", $r18);

     label1:
        $r5 = virtualinvoke r3.<thredds.catalog.query.QueryCapability: java.lang.String getVersion()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("version", $r5);

        $r7 = virtualinvoke r3.<thredds.catalog.query.QueryCapability: thredds.catalog.query.Query getQuery()>();

        $r8 = specialinvoke r6.<thredds.catalog.parser.jdom.DqcConvert2: org.jdom.Element makeQuery(thredds.catalog.query.Query)>($r7);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r8);

        $r9 = new org.jdom.Element;

        $r10 = <thredds.catalog.parser.jdom.DqcConvert2: org.jdom.Namespace defNS>;

        specialinvoke $r9.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("selections", $r10);

        $r11 = virtualinvoke r3.<thredds.catalog.query.QueryCapability: java.util.ArrayList getSelectors()>();

        i0 = 0;

     label2:
        $i1 = interfaceinvoke $r11.<java.util.List: int size()>();

        if i0 >= $i1 goto label5;

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i0);

        r13 = (thredds.catalog.query.Selector) $r12;

        $z0 = r13 instanceof thredds.catalog.query.SelectList;

        if $z0 == 0 goto label3;

        $r16 = (thredds.catalog.query.SelectList) r13;

        $r17 = specialinvoke r6.<thredds.catalog.parser.jdom.DqcConvert2: org.jdom.Element makeSelectList(thredds.catalog.query.SelectList)>($r16);

        virtualinvoke $r9.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r17);

        goto label4;

     label3:
        $z1 = r13 instanceof thredds.catalog.query.SelectStation;

        if $z1 == 0 goto label4;

        $r14 = (thredds.catalog.query.SelectStation) r13;

        $r15 = specialinvoke r6.<thredds.catalog.parser.jdom.DqcConvert2: org.jdom.Element makeSelectStation(thredds.catalog.query.SelectStation)>($r14);

        virtualinvoke $r9.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r15);

     label4:
        i0 = i0 + 1;

        goto label2;

     label5:
        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r9);

        return $r2;
    }

    private thredds.catalog.query.Query readQuery(org.jdom.Element, java.net.URI)
    {
        thredds.catalog.query.Query $r5;
        java.lang.String $r1, $r2;
        java.net.URI r3, $r4;
        thredds.catalog.parser.jdom.DqcConvert2 r6;
        org.jdom.Element r0;

        r6 := @this: thredds.catalog.parser.jdom.DqcConvert2;

        r0 := @parameter0: org.jdom.Element;

        r3 := @parameter1: java.net.URI;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("action");

        $r2 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("construct");

        virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("returns");

        $r4 = virtualinvoke r3.<java.net.URI: java.net.URI resolve(java.lang.String)>($r1);

        $r5 = new thredds.catalog.query.Query;

        specialinvoke $r5.<thredds.catalog.query.Query: void <init>(java.lang.String,java.net.URI,java.lang.String)>($r1, $r4, $r2);

        return $r5;
    }

    private org.jdom.Element makeQuery(thredds.catalog.query.Query)
    {
        thredds.catalog.query.Query r2;
        org.jdom.Namespace $r1;
        java.lang.String $r3, $r4, $r5;
        thredds.catalog.parser.jdom.DqcConvert2 r6;
        org.jdom.Element $r0;

        r6 := @this: thredds.catalog.parser.jdom.DqcConvert2;

        r2 := @parameter0: thredds.catalog.query.Query;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.catalog.parser.jdom.DqcConvert2: org.jdom.Namespace defNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("query", $r1);

        $r3 = virtualinvoke r2.<thredds.catalog.query.Query: java.lang.String getBase()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("action", $r3);

        $r4 = virtualinvoke r2.<thredds.catalog.query.Query: java.lang.String getConstruct()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("construct", $r4);

        $r5 = virtualinvoke r2.<thredds.catalog.query.Query: java.lang.String getReturns()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("returns", $r5);

        return $r0;
    }

    private thredds.catalog.query.SelectList readSelectList(thredds.catalog.query.QueryCapability, org.jdom.Element)
    {
        thredds.catalog.query.SelectList $r6;
        thredds.catalog.query.QueryCapability r7;
        int i0, $i1;
        org.jdom.Namespace $r8;
        java.lang.String $r1, $r2, $r3, $r4, $r5, r14;
        boolean $z0;
        thredds.catalog.query.ListChoice $r13;
        thredds.catalog.parser.jdom.DqcConvert2 r10;
        java.util.List $r9;
        java.lang.Object $r11;
        org.jdom.Element r0, $r12;

        r10 := @this: thredds.catalog.parser.jdom.DqcConvert2;

        r7 := @parameter0: thredds.catalog.query.QueryCapability;

        r0 := @parameter1: org.jdom.Element;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("label");

        $r2 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("id");

        $r3 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("template");

        $r4 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("selectType");

        $r5 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("required");

        r14 = "false";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("multiple");

        if $z0 == 0 goto label1;

        r14 = "true";

     label1:
        $r6 = new thredds.catalog.query.SelectList;

        specialinvoke $r6.<thredds.catalog.query.SelectList: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3, $r5, r14);

        virtualinvoke r7.<thredds.catalog.query.QueryCapability: void addUniqueSelector(thredds.catalog.query.Selector)>($r6);

        $r8 = <thredds.catalog.parser.jdom.DqcConvert2: org.jdom.Namespace defNS>;

        $r9 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("choice", $r8);

        i0 = 0;

     label2:
        $i1 = interfaceinvoke $r9.<java.util.List: int size()>();

        if i0 >= $i1 goto label3;

        $r11 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i0);

        $r12 = (org.jdom.Element) $r11;

        $r13 = specialinvoke r10.<thredds.catalog.parser.jdom.DqcConvert2: thredds.catalog.query.ListChoice readChoice(thredds.catalog.query.QueryCapability,thredds.catalog.query.Selector,org.jdom.Element)>(r7, $r6, $r12);

        virtualinvoke $r6.<thredds.catalog.query.SelectList: void addChoice(thredds.catalog.query.ListChoice)>($r13);

        i0 = i0 + 1;

        goto label2;

     label3:
        return $r6;
    }

    private org.jdom.Element makeSelectList(thredds.catalog.query.SelectList)
    {
        thredds.catalog.query.SelectList r2;
        java.util.ArrayList $r8;
        int i0, $i1;
        org.jdom.Namespace $r1;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r13, $r14;
        boolean $z0;
        thredds.catalog.query.ListChoice $r11;
        thredds.catalog.parser.jdom.DqcConvert2 r9;
        java.lang.Object $r10;
        org.jdom.Element $r0, $r12;

        r9 := @this: thredds.catalog.parser.jdom.DqcConvert2;

        r2 := @parameter0: thredds.catalog.query.SelectList;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.catalog.parser.jdom.DqcConvert2: org.jdom.Namespace defNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("selectList", $r1);

        $r3 = virtualinvoke r2.<thredds.catalog.query.SelectList: java.lang.String getTitle()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("label", $r3);

        $r4 = virtualinvoke r2.<thredds.catalog.query.SelectList: java.lang.String getId()>();

        if null == $r4 goto label1;

        $r14 = virtualinvoke r2.<thredds.catalog.query.SelectList: java.lang.String getId()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("id", $r14);

     label1:
        $r5 = virtualinvoke r2.<thredds.catalog.query.SelectList: java.lang.String getTemplate()>();

        if null == $r5 goto label2;

        $r13 = virtualinvoke r2.<thredds.catalog.query.SelectList: java.lang.String getTemplate()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("template", $r13);

     label2:
        $r6 = virtualinvoke r2.<thredds.catalog.query.SelectList: java.lang.String getSelectType()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("selectType", $r6);

        $z0 = virtualinvoke r2.<thredds.catalog.query.SelectList: boolean isRequired()>();

        $r7 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z0);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("required", $r7);

        $r8 = virtualinvoke r2.<thredds.catalog.query.SelectList: java.util.ArrayList getChoices()>();

        i0 = 0;

     label3:
        $i1 = interfaceinvoke $r8.<java.util.List: int size()>();

        if i0 >= $i1 goto label4;

        $r10 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i0);

        $r11 = (thredds.catalog.query.ListChoice) $r10;

        $r12 = specialinvoke r9.<thredds.catalog.parser.jdom.DqcConvert2: org.jdom.Element makeChoice(thredds.catalog.query.ListChoice)>($r11);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r12);

        i0 = i0 + 1;

        goto label3;

     label4:
        return $r0;
    }

    private thredds.catalog.query.SelectStation readSelectStation(thredds.catalog.query.QueryCapability, org.jdom.Element)
    {
        thredds.catalog.query.QueryCapability r7;
        int i0, $i1;
        org.jdom.Namespace $r8;
        java.lang.String $r1, $r2, $r3, $r4, $r5, r14;
        boolean $z0;
        thredds.catalog.parser.jdom.DqcConvert2 r10;
        thredds.catalog.query.SelectStation $r6;
        thredds.catalog.query.Station $r13;
        java.util.List $r9;
        java.lang.Object $r11;
        org.jdom.Element r0, $r12;

        r10 := @this: thredds.catalog.parser.jdom.DqcConvert2;

        r7 := @parameter0: thredds.catalog.query.QueryCapability;

        r0 := @parameter1: org.jdom.Element;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("label");

        $r2 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("id");

        $r3 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("template");

        $r4 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("selectType");

        $r5 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("required");

        r14 = "false";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("multiple");

        if $z0 == 0 goto label1;

        r14 = "true";

     label1:
        $r6 = new thredds.catalog.query.SelectStation;

        specialinvoke $r6.<thredds.catalog.query.SelectStation: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3, $r5, r14);

        virtualinvoke r7.<thredds.catalog.query.QueryCapability: void addUniqueSelector(thredds.catalog.query.Selector)>($r6);

        $r8 = <thredds.catalog.parser.jdom.DqcConvert2: org.jdom.Namespace defNS>;

        $r9 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("station", $r8);

        i0 = 0;

     label2:
        $i1 = interfaceinvoke $r9.<java.util.List: int size()>();

        if i0 >= $i1 goto label3;

        $r11 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i0);

        $r12 = (org.jdom.Element) $r11;

        $r13 = specialinvoke r10.<thredds.catalog.parser.jdom.DqcConvert2: thredds.catalog.query.Station readStation(thredds.catalog.query.Selector,org.jdom.Element)>($r6, $r12);

        virtualinvoke $r6.<thredds.catalog.query.SelectStation: void addStation(thredds.catalog.query.Station)>($r13);

        i0 = i0 + 1;

        goto label2;

     label3:
        return $r6;
    }

    private org.jdom.Element makeSelectStation(thredds.catalog.query.SelectStation)
    {
        java.util.ArrayList $r8;
        int i0, $i1;
        org.jdom.Namespace $r1;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r13, $r14;
        boolean $z0;
        thredds.catalog.parser.jdom.DqcConvert2 r9;
        thredds.catalog.query.SelectStation r2;
        thredds.catalog.query.Station $r11;
        java.lang.Object $r10;
        org.jdom.Element $r0, $r12;

        r9 := @this: thredds.catalog.parser.jdom.DqcConvert2;

        r2 := @parameter0: thredds.catalog.query.SelectStation;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.catalog.parser.jdom.DqcConvert2: org.jdom.Namespace defNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("selectStation", $r1);

        $r3 = virtualinvoke r2.<thredds.catalog.query.SelectStation: java.lang.String getTitle()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("label", $r3);

        $r4 = virtualinvoke r2.<thredds.catalog.query.SelectStation: java.lang.String getId()>();

        if null == $r4 goto label1;

        $r14 = virtualinvoke r2.<thredds.catalog.query.SelectStation: java.lang.String getId()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("id", $r14);

     label1:
        $r5 = virtualinvoke r2.<thredds.catalog.query.SelectStation: java.lang.String getTemplate()>();

        if null == $r5 goto label2;

        $r13 = virtualinvoke r2.<thredds.catalog.query.SelectStation: java.lang.String getTemplate()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("template", $r13);

     label2:
        $r6 = virtualinvoke r2.<thredds.catalog.query.SelectStation: java.lang.String getSelectType()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("selectType", $r6);

        $z0 = virtualinvoke r2.<thredds.catalog.query.SelectStation: boolean isRequired()>();

        $r7 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z0);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("required", $r7);

        $r8 = virtualinvoke r2.<thredds.catalog.query.SelectStation: java.util.ArrayList getStations()>();

        i0 = 0;

     label3:
        $i1 = interfaceinvoke $r8.<java.util.List: int size()>();

        if i0 >= $i1 goto label4;

        $r10 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i0);

        $r11 = (thredds.catalog.query.Station) $r10;

        $r12 = specialinvoke r9.<thredds.catalog.parser.jdom.DqcConvert2: org.jdom.Element makeStation(thredds.catalog.query.Station)>($r11);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r12);

        i0 = i0 + 1;

        goto label3;

     label4:
        return $r0;
    }

    private thredds.catalog.query.ListChoice readChoice(thredds.catalog.query.QueryCapability, thredds.catalog.query.Selector, org.jdom.Element)
    {
        thredds.catalog.query.SelectList $r12;
        thredds.catalog.query.Selector r5;
        thredds.catalog.query.QueryCapability r11;
        int $i0, i1;
        java.lang.String $r1, $r2, $r3, $r9;
        boolean $z0;
        thredds.catalog.query.ListChoice $r4;
        thredds.catalog.parser.jdom.DqcConvert2 r10;
        java.util.List $r6;
        java.lang.Object $r7;
        org.jdom.Element r0, r8;

        r10 := @this: thredds.catalog.parser.jdom.DqcConvert2;

        r11 := @parameter0: thredds.catalog.query.QueryCapability;

        r5 := @parameter1: thredds.catalog.query.Selector;

        r0 := @parameter2: org.jdom.Element;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        $r2 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("value");

        $r3 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("description");

        $r4 = new thredds.catalog.query.ListChoice;

        specialinvoke $r4.<thredds.catalog.query.ListChoice: void <init>(thredds.catalog.query.Selector,java.lang.String,java.lang.String,java.lang.String)>(r5, $r1, $r2, $r3);

        $r6 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1);

        r8 = (org.jdom.Element) $r7;

        $r9 = virtualinvoke r8.<org.jdom.Element: java.lang.String getName()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("selectList");

        if $z0 == 0 goto label2;

        $r12 = specialinvoke r10.<thredds.catalog.parser.jdom.DqcConvert2: thredds.catalog.query.SelectList readSelectList(thredds.catalog.query.QueryCapability,org.jdom.Element)>(r11, r8);

        virtualinvoke $r4.<thredds.catalog.query.ListChoice: void addNestedSelector(thredds.catalog.query.SelectList)>($r12);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return $r4;
    }

    private org.jdom.Element makeChoice(thredds.catalog.query.ListChoice)
    {
        thredds.catalog.query.SelectList $r9;
        thredds.catalog.query.Selector r7;
        thredds.catalog.query.ListChoice r2;
        thredds.catalog.parser.jdom.DqcConvert2 r8;
        java.util.ArrayList $r5;
        int $i0, i1;
        org.jdom.Namespace $r1;
        java.lang.Object $r6;
        java.lang.String $r3, $r4;
        org.jdom.Element $r0, $r10;
        boolean $z0;

        r8 := @this: thredds.catalog.parser.jdom.DqcConvert2;

        r2 := @parameter0: thredds.catalog.query.ListChoice;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.catalog.parser.jdom.DqcConvert2: org.jdom.Namespace defNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("choice", $r1);

        $r3 = virtualinvoke r2.<thredds.catalog.query.ListChoice: java.lang.String getName()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("name", $r3);

        $r4 = virtualinvoke r2.<thredds.catalog.query.ListChoice: java.lang.String getValue()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("value", $r4);

        $r5 = virtualinvoke r2.<thredds.catalog.query.ListChoice: java.util.ArrayList getNestedSelectors()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        r7 = (thredds.catalog.query.Selector) $r6;

        $z0 = r7 instanceof thredds.catalog.query.SelectList;

        if $z0 == 0 goto label2;

        $r9 = (thredds.catalog.query.SelectList) r7;

        $r10 = specialinvoke r8.<thredds.catalog.parser.jdom.DqcConvert2: org.jdom.Element makeSelectList(thredds.catalog.query.SelectList)>($r9);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r10);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return $r0;
    }

    private thredds.catalog.query.Station readStation(thredds.catalog.query.Selector, org.jdom.Element)
    {
        thredds.catalog.query.Selector r5;
        thredds.catalog.query.Location $r14;
        org.jdom.Namespace $r6, $r15;
        java.lang.String $r1, $r2, $r3, $r8, $r9, $r10, $r11, $r12, $r13;
        thredds.catalog.parser.jdom.DqcConvert2 r16;
        thredds.catalog.query.Station $r4;
        org.jdom.Element r0, $r7, r17;

        r16 := @this: thredds.catalog.parser.jdom.DqcConvert2;

        r5 := @parameter0: thredds.catalog.query.Selector;

        r0 := @parameter1: org.jdom.Element;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        $r2 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("value");

        $r3 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("description");

        $r4 = new thredds.catalog.query.Station;

        specialinvoke $r4.<thredds.catalog.query.Station: void <init>(thredds.catalog.query.Selector,java.lang.String,java.lang.String,java.lang.String)>(r5, $r1, $r2, $r3);

        $r6 = <thredds.catalog.parser.jdom.DqcConvert2: org.jdom.Namespace defNS>;

        $r7 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("location", $r6);

        r17 = $r7;

        if null != $r7 goto label1;

        $r15 = <thredds.catalog.parser.jdom.DqcConvert2: org.jdom.Namespace defNS>;

        r17 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("location3D", $r15);

     label1:
        $r8 = virtualinvoke r17.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("latitude");

        $r9 = virtualinvoke r17.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("longitude");

        $r10 = virtualinvoke r17.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("elevation");

        $r11 = virtualinvoke r17.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("latitude_units");

        $r12 = virtualinvoke r17.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("longitude_units");

        $r13 = virtualinvoke r17.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("elevation_units");

        $r14 = new thredds.catalog.query.Location;

        specialinvoke $r14.<thredds.catalog.query.Location: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r8, $r9, $r10, $r11, $r12, $r13);

        virtualinvoke $r4.<thredds.catalog.query.Station: void setLocation(thredds.catalog.query.Location)>($r14);

        return $r4;
    }

    private org.jdom.Element makeStation(thredds.catalog.query.Station)
    {
        thredds.catalog.query.Location $r5;
        org.jdom.Namespace $r1, $r7;
        java.lang.String $r3, $r4, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18;
        boolean $z0, $z1;
        double $d0, $d1, $d2;
        thredds.catalog.parser.jdom.DqcConvert2 r17;
        thredds.catalog.query.Station r2;
        org.jdom.Element $r0, $r6;

        r17 := @this: thredds.catalog.parser.jdom.DqcConvert2;

        r2 := @parameter0: thredds.catalog.query.Station;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.catalog.parser.jdom.DqcConvert2: org.jdom.Namespace defNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("station", $r1);

        $r3 = virtualinvoke r2.<thredds.catalog.query.Station: java.lang.String getName()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("name", $r3);

        $r4 = virtualinvoke r2.<thredds.catalog.query.Station: java.lang.String getValue()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("value", $r4);

        $r5 = virtualinvoke r2.<thredds.catalog.query.Station: thredds.catalog.query.Location getLocation()>();

        $r6 = new org.jdom.Element;

        $z0 = virtualinvoke $r5.<thredds.catalog.query.Location: boolean hasElevation()>();

        if $z0 == 0 goto label1;

        $r18 = "location3D";

        goto label2;

     label1:
        $r18 = "location";

     label2:
        $r7 = <thredds.catalog.parser.jdom.DqcConvert2: org.jdom.Namespace defNS>;

        specialinvoke $r6.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>($r18, $r7);

        $d0 = virtualinvoke $r5.<thredds.catalog.query.Location: double getLatitude()>();

        $r8 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

        virtualinvoke $r6.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("latitude", $r8);

        $d1 = virtualinvoke $r5.<thredds.catalog.query.Location: double getLongitude()>();

        $r9 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d1);

        virtualinvoke $r6.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("longitude", $r9);

        $r10 = virtualinvoke $r5.<thredds.catalog.query.Location: java.lang.String getLatitudeUnits()>();

        if null == $r10 goto label3;

        $r16 = virtualinvoke $r5.<thredds.catalog.query.Location: java.lang.String getLatitudeUnits()>();

        virtualinvoke $r6.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("latitude_units", $r16);

     label3:
        $r11 = virtualinvoke $r5.<thredds.catalog.query.Location: java.lang.String getLongitudeUnits()>();

        if null == $r11 goto label4;

        $r15 = virtualinvoke $r5.<thredds.catalog.query.Location: java.lang.String getLongitudeUnits()>();

        virtualinvoke $r6.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("longitude_units", $r15);

     label4:
        $z1 = virtualinvoke $r5.<thredds.catalog.query.Location: boolean hasElevation()>();

        if $z1 == 0 goto label5;

        $d2 = virtualinvoke $r5.<thredds.catalog.query.Location: double getElevation()>();

        $r12 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d2);

        virtualinvoke $r6.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("elevation", $r12);

        $r13 = virtualinvoke $r5.<thredds.catalog.query.Location: java.lang.String getElevationUnits()>();

        if null == $r13 goto label5;

        $r14 = virtualinvoke $r5.<thredds.catalog.query.Location: java.lang.String getElevationUnits()>();

        virtualinvoke $r6.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("elevation_units", $r14);

     label5:
        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r6);

        return $r0;
    }

    public void writeXML(thredds.catalog.query.QueryCapability, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r4;
        org.jdom.Document $r3;
        org.jdom.output.XMLOutputter $r0;
        thredds.catalog.parser.jdom.DqcConvert2 r1;
        thredds.catalog.query.QueryCapability r2;

        r1 := @this: thredds.catalog.parser.jdom.DqcConvert2;

        r2 := @parameter0: thredds.catalog.query.QueryCapability;

        r4 := @parameter1: java.io.OutputStream;

        $r0 = new org.jdom.output.XMLOutputter;

        specialinvoke $r0.<org.jdom.output.XMLOutputter: void <init>()>();

        $r3 = virtualinvoke r1.<thredds.catalog.parser.jdom.DqcConvert2: org.jdom.Document makeQC(thredds.catalog.query.QueryCapability)>(r2);

        virtualinvoke $r0.<org.jdom.output.XMLOutputter: void output(org.jdom.Document,java.io.OutputStream)>($r3, r4);

        return;
    }

    static void <clinit>()
    {
        org.jdom.Namespace $r0, $r1;

        <thredds.catalog.parser.jdom.DqcConvert2: boolean debugURL> = 0;

        <thredds.catalog.parser.jdom.DqcConvert2: boolean debugXML> = 0;

        <thredds.catalog.parser.jdom.DqcConvert2: boolean debugDBurl> = 0;

        <thredds.catalog.parser.jdom.DqcConvert2: boolean debugXMLopen> = 0;

        <thredds.catalog.parser.jdom.DqcConvert2: boolean showParsedXML> = 0;

        <thredds.catalog.parser.jdom.DqcConvert2: boolean showXMLoutput> = 0;

        $r0 = staticinvoke <org.jdom.Namespace: org.jdom.Namespace getNamespace(java.lang.String)>("http://www.unidata.ucar.edu/schemas/thredds/queryCapability");

        <thredds.catalog.parser.jdom.DqcConvert2: org.jdom.Namespace defNS> = $r0;

        $r1 = staticinvoke <org.jdom.Namespace: org.jdom.Namespace getNamespace(java.lang.String,java.lang.String)>("xlink", "http://www.w3.org/1999/xlink");

        <thredds.catalog.parser.jdom.DqcConvert2: org.jdom.Namespace xlinkNS> = $r1;

        return;
    }
}
