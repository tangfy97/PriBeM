final class org.waveprotocol.wave.concurrencycontrol.channel.ViewChannelImpl$1 extends java.lang.Object implements org.waveprotocol.wave.concurrencycontrol.channel.ViewChannelFactory
{
    final org.waveprotocol.wave.concurrencycontrol.channel.WaveViewService val$waveService;
    final org.waveprotocol.wave.common.logging.LoggerBundle val$logger;

    void <init>(org.waveprotocol.wave.concurrencycontrol.channel.WaveViewService, org.waveprotocol.wave.common.logging.LoggerBundle)
    {
        org.waveprotocol.wave.concurrencycontrol.channel.WaveViewService r1;
        org.waveprotocol.wave.concurrencycontrol.channel.ViewChannelImpl$1 r0;
        org.waveprotocol.wave.common.logging.LoggerBundle r2;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.channel.ViewChannelImpl$1;

        r1 := @parameter0: org.waveprotocol.wave.concurrencycontrol.channel.WaveViewService;

        r2 := @parameter1: org.waveprotocol.wave.common.logging.LoggerBundle;

        r0.<org.waveprotocol.wave.concurrencycontrol.channel.ViewChannelImpl$1: org.waveprotocol.wave.concurrencycontrol.channel.WaveViewService val$waveService> = r1;

        r0.<org.waveprotocol.wave.concurrencycontrol.channel.ViewChannelImpl$1: org.waveprotocol.wave.common.logging.LoggerBundle val$logger> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.concurrencycontrol.channel.ViewChannel create(org.waveprotocol.wave.model.id.WaveId)
    {
        org.waveprotocol.wave.concurrencycontrol.channel.WaveViewService $r4;
        org.waveprotocol.wave.model.id.WaveId r1;
        org.waveprotocol.wave.concurrencycontrol.channel.ViewChannelImpl $r0;
        org.waveprotocol.wave.concurrencycontrol.channel.ViewChannelImpl$1 r2;
        org.waveprotocol.wave.common.logging.LoggerBundle $r3;

        r2 := @this: org.waveprotocol.wave.concurrencycontrol.channel.ViewChannelImpl$1;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveId;

        $r0 = new org.waveprotocol.wave.concurrencycontrol.channel.ViewChannelImpl;

        $r4 = r2.<org.waveprotocol.wave.concurrencycontrol.channel.ViewChannelImpl$1: org.waveprotocol.wave.concurrencycontrol.channel.WaveViewService val$waveService>;

        $r3 = r2.<org.waveprotocol.wave.concurrencycontrol.channel.ViewChannelImpl$1: org.waveprotocol.wave.common.logging.LoggerBundle val$logger>;

        specialinvoke $r0.<org.waveprotocol.wave.concurrencycontrol.channel.ViewChannelImpl: void <init>(org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.concurrencycontrol.channel.WaveViewService,org.waveprotocol.wave.common.logging.LoggerBundle)>(r1, $r4, $r3);

        return $r0;
    }
}
