public class org.springframework.core.io.FileSystemResource extends org.springframework.core.io.AbstractResource
{
    private final java.io.File file;
    private final java.lang.String path;

    public void <init>(java.io.File)
    {
        org.springframework.core.io.FileSystemResource r0;
        java.lang.String $r2, $r3;
        java.io.File r1;

        r0 := @this: org.springframework.core.io.FileSystemResource;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<org.springframework.core.io.AbstractResource: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "File must not be null");

        r0.<org.springframework.core.io.FileSystemResource: java.io.File file> = r1;

        $r2 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $r3 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>($r2);

        r0.<org.springframework.core.io.FileSystemResource: java.lang.String path> = $r3;

        return;
    }

    public void <init>(java.lang.String)
    {
        org.springframework.core.io.FileSystemResource r0;
        java.lang.String r1, $r3;
        java.io.File $r2;

        r0 := @this: org.springframework.core.io.FileSystemResource;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.springframework.core.io.AbstractResource: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Path must not be null");

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r1);

        r0.<org.springframework.core.io.FileSystemResource: java.io.File file> = $r2;

        $r3 = staticinvoke <org.springframework.util.StringUtils: java.lang.String cleanPath(java.lang.String)>(r1);

        r0.<org.springframework.core.io.FileSystemResource: java.lang.String path> = $r3;

        return;
    }

    public final java.lang.String getPath()
    {
        org.springframework.core.io.FileSystemResource r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.core.io.FileSystemResource;

        $r1 = r0.<org.springframework.core.io.FileSystemResource: java.lang.String path>;

        return $r1;
    }

    public boolean exists()
    {
        org.springframework.core.io.FileSystemResource r0;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: org.springframework.core.io.FileSystemResource;

        $r1 = r0.<org.springframework.core.io.FileSystemResource: java.io.File file>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        return $z0;
    }

    public boolean isReadable()
    {
        org.springframework.core.io.FileSystemResource r0;
        java.io.File $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: org.springframework.core.io.FileSystemResource;

        $r1 = r0.<org.springframework.core.io.FileSystemResource: java.io.File file>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean canRead()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<org.springframework.core.io.FileSystemResource: java.io.File file>;

        $z1 = virtualinvoke $r2.<java.io.File: boolean isDirectory()>();

        if $z1 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.io.InputStream getInputStream() throws java.io.IOException
    {
        org.springframework.core.io.FileSystemResource r1;
        java.io.FileInputStream $r0;
        java.io.File $r2;

        r1 := @this: org.springframework.core.io.FileSystemResource;

        $r0 = new java.io.FileInputStream;

        $r2 = r1.<org.springframework.core.io.FileSystemResource: java.io.File file>;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

        return $r0;
    }

    public java.net.URL getURL() throws java.io.IOException
    {
        java.net.URL $r3;
        org.springframework.core.io.FileSystemResource r0;
        java.net.URI $r2;
        java.io.File $r1;

        r0 := @this: org.springframework.core.io.FileSystemResource;

        $r1 = r0.<org.springframework.core.io.FileSystemResource: java.io.File file>;

        $r2 = virtualinvoke $r1.<java.io.File: java.net.URI toURI()>();

        $r3 = virtualinvoke $r2.<java.net.URI: java.net.URL toURL()>();

        return $r3;
    }

    public java.net.URI getURI() throws java.io.IOException
    {
        org.springframework.core.io.FileSystemResource r0;
        java.net.URI $r2;
        java.io.File $r1;

        r0 := @this: org.springframework.core.io.FileSystemResource;

        $r1 = r0.<org.springframework.core.io.FileSystemResource: java.io.File file>;

        $r2 = virtualinvoke $r1.<java.io.File: java.net.URI toURI()>();

        return $r2;
    }

    public java.io.File getFile()
    {
        org.springframework.core.io.FileSystemResource r0;
        java.io.File $r1;

        r0 := @this: org.springframework.core.io.FileSystemResource;

        $r1 = r0.<org.springframework.core.io.FileSystemResource: java.io.File file>;

        return $r1;
    }

    public org.springframework.core.io.Resource createRelative(java.lang.String)
    {
        org.springframework.core.io.FileSystemResource r0, $r4;
        java.lang.String r1, $r2, $r3;

        r0 := @this: org.springframework.core.io.FileSystemResource;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.core.io.FileSystemResource: java.lang.String path>;

        $r3 = staticinvoke <org.springframework.util.StringUtils: java.lang.String applyRelativePath(java.lang.String,java.lang.String)>($r2, r1);

        $r4 = new org.springframework.core.io.FileSystemResource;

        specialinvoke $r4.<org.springframework.core.io.FileSystemResource: void <init>(java.lang.String)>($r3);

        return $r4;
    }

    public java.lang.String getFilename()
    {
        org.springframework.core.io.FileSystemResource r0;
        java.lang.String $r2;
        java.io.File $r1;

        r0 := @this: org.springframework.core.io.FileSystemResource;

        $r1 = r0.<org.springframework.core.io.FileSystemResource: java.io.File file>;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        return $r2;
    }

    public java.lang.String getDescription()
    {
        org.springframework.core.io.FileSystemResource r1;
        java.lang.StringBuilder $r0, $r4, $r5;
        java.lang.String $r3, $r6;
        java.io.File $r2;

        r1 := @this: org.springframework.core.io.FileSystemResource;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("file [");

        $r2 = r1.<org.springframework.core.io.FileSystemResource: java.io.File file>;

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public boolean equals(java.lang.Object)
    {
        org.springframework.core.io.FileSystemResource r1, $r2;
        java.lang.Object r0;
        java.lang.String $r3, $r4;
        boolean $z0, $z1;

        r1 := @this: org.springframework.core.io.FileSystemResource;

        r0 := @parameter0: java.lang.Object;

        if r0 == r1 goto label2;

        $z0 = r0 instanceof org.springframework.core.io.FileSystemResource;

        if $z0 == 0 goto label1;

        $r4 = r1.<org.springframework.core.io.FileSystemResource: java.lang.String path>;

        $r2 = (org.springframework.core.io.FileSystemResource) r0;

        $r3 = $r2.<org.springframework.core.io.FileSystemResource: java.lang.String path>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public int hashCode()
    {
        int $i0;
        org.springframework.core.io.FileSystemResource r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.core.io.FileSystemResource;

        $r1 = r0.<org.springframework.core.io.FileSystemResource: java.lang.String path>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }
}
