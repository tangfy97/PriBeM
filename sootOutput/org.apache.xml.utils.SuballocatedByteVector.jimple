public class org.apache.xml.utils.SuballocatedByteVector extends java.lang.Object
{
    protected int m_blocksize;
    protected int m_numblocks;
    protected byte[][] m_map;
    protected int m_firstFree;
    protected byte[] m_map0;

    public void <init>()
    {
        org.apache.xml.utils.SuballocatedByteVector r0;

        r0 := @this: org.apache.xml.utils.SuballocatedByteVector;

        specialinvoke r0.<org.apache.xml.utils.SuballocatedByteVector: void <init>(int)>(2048);

        return;
    }

    public void <init>(int)
    {
        byte[] $r1, $r3;
        byte[][] $r2, $r4;
        org.apache.xml.utils.SuballocatedByteVector r0;
        int i0, $i1;

        r0 := @this: org.apache.xml.utils.SuballocatedByteVector;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xml.utils.SuballocatedByteVector: int m_numblocks> = 32;

        r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree> = 0;

        r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize> = i0;

        $r1 = newarray (byte)[i0];

        r0.<org.apache.xml.utils.SuballocatedByteVector: byte[] m_map0> = $r1;

        $i1 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_numblocks>;

        $r2 = newarray (byte[])[$i1];

        r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map> = $r2;

        $r4 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        $r3 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[] m_map0>;

        $r4[0] = $r3;

        return;
    }

    public void <init>(int, int)
    {
        int i0, i1;
        org.apache.xml.utils.SuballocatedByteVector r0;

        r0 := @this: org.apache.xml.utils.SuballocatedByteVector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<org.apache.xml.utils.SuballocatedByteVector: void <init>(int)>(i0);

        return;
    }

    public int size()
    {
        int $i0;
        org.apache.xml.utils.SuballocatedByteVector r0;

        r0 := @this: org.apache.xml.utils.SuballocatedByteVector;

        $i0 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        return $i0;
    }

    private void setSize(int)
    {
        int i0, $i1;
        org.apache.xml.utils.SuballocatedByteVector r0;

        r0 := @this: org.apache.xml.utils.SuballocatedByteVector;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        if $i1 >= i0 goto label1;

        r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree> = i0;

     label1:
        return;
    }

    public void addElement(byte)
    {
        byte[] $r3, $r8, $r9, r10;
        byte b11;
        org.apache.xml.utils.SuballocatedByteVector r0;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, i17;
        byte[][] $r1, $r2, $r4, r5, $r6, $r7;

        r0 := @this: org.apache.xml.utils.SuballocatedByteVector;

        b11 := @parameter0: byte;

        $i1 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        $i0 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        if $i1 >= $i0 goto label1;

        $r9 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[] m_map0>;

        $i15 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        $i16 = $i15 + 1;

        r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree> = $i16;

        $r9[$i15] = b11;

        goto label4;

     label1:
        $i3 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        $i2 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        i4 = $i3 / $i2;

        $i6 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        $i5 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        i7 = $i6 % $i5;

        $i8 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        $i9 = $i8 + 1;

        r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree> = $i9;

        $r1 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        $i10 = lengthof $r1;

        if i4 < $i10 goto label2;

        $i13 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_numblocks>;

        i17 = i4 + $i13;

        r5 = newarray (byte[])[i17];

        $r7 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        $r6 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        $i14 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r5, 0, $i14);

        r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map> = r5;

     label2:
        $r2 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        $r8 = $r2[i4];

        r10 = $r8;

        if null != $r8 goto label3;

        $r4 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        $i12 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        $r3 = newarray (byte)[$i12];

        $r4[i4] = $r3;

        r10 = $r3;

     label3:
        r10[i7] = b11;

     label4:
        return;
    }

    private void addElements(byte, int)
    {
        byte[] $r3, $r7, $r8, r10;
        byte b14;
        byte[][] $r1, $r2, $r4, $r5, $r6, r9;
        org.apache.xml.utils.SuballocatedByteVector r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23, i24, i25, $i26, i27, $i29;

        r0 := @this: org.apache.xml.utils.SuballocatedByteVector;

        b14 := @parameter0: byte;

        i21 := @parameter1: int;

        $i0 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        $i2 = $i0 + i21;

        $i1 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        if $i2 >= $i1 goto label03;

        i22 = 0;

        goto label02;

     label01:
        $r8 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[] m_map0>;

        $i19 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        $i20 = $i19 + 1;

        r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree> = $i20;

        $r8[$i19] = b14;

        i22 = i22 + 1;

     label02:
        if i22 < i21 goto label01;

        goto label12;

     label03:
        $i4 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        $i3 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        i23 = $i4 / $i3;

        $i6 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        $i5 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        i24 = $i6 % $i5;

        $i7 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        $i8 = $i7 + i21;

        r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree> = $i8;

        goto label11;

     label04:
        $r1 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        $i9 = lengthof $r1;

        if i23 < $i9 goto label05;

        $i17 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_numblocks>;

        i25 = i23 + $i17;

        r9 = newarray (byte[])[i25];

        $r6 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        $r5 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        $i18 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r9, 0, $i18);

        r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map> = r9;

     label05:
        $r2 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        $r7 = $r2[i23];

        r10 = $r7;

        if null != $r7 goto label06;

        $r4 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        $i16 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        $r3 = newarray (byte)[$i16];

        $r4[i23] = $r3;

        r10 = $r3;

     label06:
        $i10 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        $i11 = $i10 - i24;

        if $i11 >= i21 goto label07;

        $i15 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        $i26 = $i15 - i24;

        goto label08;

     label07:
        $i26 = i21;

     label08:
        i27 = $i26;

        i21 = i21 - $i26;

        goto label10;

     label09:
        $i13 = i24;

        i24 = i24 + 1;

        r10[$i13] = b14;

     label10:
        $i12 = i27;

        $i29 = (int) -1;

        i27 = i27 + $i29;

        if $i12 > 0 goto label09;

        i23 = i23 + 1;

        i24 = 0;

     label11:
        if i21 > 0 goto label04;

     label12:
        return;
    }

    private void addElements(int)
    {
        byte[] $r1;
        org.apache.xml.utils.SuballocatedByteVector r0;
        int i0, $i1, i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, i10, $i11, i12;
        byte[][] $r2;

        r0 := @this: org.apache.xml.utils.SuballocatedByteVector;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        i2 = $i1 + i0;

        $i3 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        if i2 <= $i3 goto label3;

        $i5 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        $i4 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        i6 = $i5 % $i4;

        $i7 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        $i9 = $i7 + i0;

        $i8 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        i10 = $i9 % $i8;

        i12 = i6 + 1;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        $i11 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        $r1 = newarray (byte)[$i11];

        $r2[i12] = $r1;

        i12 = i12 + 1;

     label2:
        if i12 <= i10 goto label1;

     label3:
        r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree> = i2;

        return;
    }

    private void insertElementAt(byte, int)
    {
        byte[] $r2, $r6, $r10, r12, r13;
        byte b25, b31;
        byte[][] $r1, $r3, $r4, $r5, $r7, $r8, $r9, r11;
        org.apache.xml.utils.SuballocatedByteVector r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i26, i27, i28, i29, i30;

        r0 := @this: org.apache.xml.utils.SuballocatedByteVector;

        b25 := @parameter0: byte;

        i0 := @parameter1: int;

        $i1 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        if i0 != $i1 goto label1;

        virtualinvoke r0.<org.apache.xml.utils.SuballocatedByteVector: void addElement(byte)>(b25);

        goto label9;

     label1:
        $i2 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        if i0 <= $i2 goto label4;

        $i17 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        i26 = i0 / $i17;

        $r4 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        $i18 = lengthof $r4;

        if i26 < $i18 goto label2;

        $i23 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_numblocks>;

        i27 = i26 + $i23;

        r11 = newarray (byte[])[i27];

        $r9 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        $r8 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        $i24 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r11, 0, $i24);

        r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map> = r11;

     label2:
        $r5 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        $r10 = $r5[i26];

        r12 = $r10;

        if null != $r10 goto label3;

        $r7 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        $i21 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        $r6 = newarray (byte)[$i21];

        $r7[i26] = $r6;

        r12 = $r6;

     label3:
        $i19 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        $i22 = i0 % $i19;

        r12[$i22] = b25;

        $i20 = $i22 + 1;

        r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree> = $i20;

        goto label9;

     label4:
        $i3 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        i28 = i0 / $i3;

        $i6 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        $i4 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        $i5 = 1 / $i4;

        i29 = $i6 + $i5;

        $i7 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        $i8 = $i7 + 1;

        r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree> = $i8;

        $i9 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        i30 = i0 % $i9;

        goto label8;

     label5:
        $i10 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        $i11 = $i10 - i30;

        i12 = $i11 - 1;

        $r1 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        r13 = $r1[i28];

        if null != r13 goto label6;

        b31 = 0;

        $r3 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        $i16 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        $r2 = newarray (byte)[$i16];

        $r3[i28] = $r2;

        r13 = $r2;

        goto label7;

     label6:
        $i13 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        $i14 = $i13 - 1;

        b31 = r13[$i14];

        $i15 = i30 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r13, i30, r13, $i15, i12);

     label7:
        r13[i30] = b25;

        b25 = b31;

        i30 = 0;

        i28 = i28 + 1;

     label8:
        if i28 <= i29 goto label5;

     label9:
        return;
    }

    public void removeAllElements()
    {
        org.apache.xml.utils.SuballocatedByteVector r0;

        r0 := @this: org.apache.xml.utils.SuballocatedByteVector;

        r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree> = 0;

        return;
    }

    private boolean removeElement(byte)
    {
        int $i1;
        byte b0;
        org.apache.xml.utils.SuballocatedByteVector r0;

        r0 := @this: org.apache.xml.utils.SuballocatedByteVector;

        b0 := @parameter0: byte;

        $i1 = virtualinvoke r0.<org.apache.xml.utils.SuballocatedByteVector: int indexOf(byte,int)>(b0, 0);

        if $i1 >= 0 goto label1;

        return 0;

     label1:
        specialinvoke r0.<org.apache.xml.utils.SuballocatedByteVector: void removeElementAt(int)>($i1);

        return 1;
    }

    private void removeElementAt(int)
    {
        byte[] r3, $r4, $r5, r7;
        byte $b21;
        org.apache.xml.utils.SuballocatedByteVector r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20;
        byte[][] $r1, $r2, $r6;

        r0 := @this: org.apache.xml.utils.SuballocatedByteVector;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        if i0 >= $i1 goto label10;

        $i4 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        i19 = i0 / $i4;

        $i6 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        $i5 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        i7 = $i6 / $i5;

        $i8 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        i20 = i0 % $i8;

        goto label09;

     label01:
        $i9 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        $i10 = $i9 - i20;

        i11 = $i10 - 1;

        $r1 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        r7 = $r1[i19];

        if null != r7 goto label02;

        $r6 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        $i18 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        $r5 = newarray (byte)[$i18];

        $r6[i19] = $r5;

        r7 = $r5;

        goto label03;

     label02:
        $i12 = i20 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, $i12, r7, i20, i11);

     label03:
        if i19 >= i7 goto label07;

        $r2 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        $i15 = i19 + 1;

        r3 = $r2[$i15];

        if r3 == null goto label06;

        $r4 = r7;

        $i16 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        $i17 = $i16 - 1;

        if r3 == null goto label04;

        $b21 = r3[0];

        goto label05;

     label04:
        $b21 = 0;

     label05:
        $r4[$i17] = $b21;

     label06:
        goto label08;

     label07:
        $i13 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        $i14 = $i13 - 1;

        r7[$i14] = 0;

     label08:
        i20 = 0;

        i19 = i19 + 1;

     label09:
        if i19 <= i7 goto label01;

     label10:
        $i2 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        $i3 = $i2 - 1;

        r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree> = $i3;

        return;
    }

    public void setElementAt(byte, int)
    {
        byte[] $r3, $r8, $r9, r10;
        byte b7;
        org.apache.xml.utils.SuballocatedByteVector r0;
        int i0, $i1, $i2, i3, $i4, i5, $i6, $i8, $i9, $i10, $i11, $i12, i13;
        byte[][] $r1, $r2, $r4, r5, $r6, $r7;

        r0 := @this: org.apache.xml.utils.SuballocatedByteVector;

        b7 := @parameter0: byte;

        i0 := @parameter1: int;

        $i1 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        if i0 >= $i1 goto label1;

        $r9 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[] m_map0>;

        $r9[i0] = b7;

        return;

     label1:
        $i2 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        i3 = i0 / $i2;

        $i4 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        i5 = i0 % $i4;

        $r1 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        $i6 = lengthof $r1;

        if i3 < $i6 goto label2;

        $i11 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_numblocks>;

        i13 = i3 + $i11;

        r5 = newarray (byte[])[i13];

        $r7 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        $r6 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        $i12 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r5, 0, $i12);

        r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map> = r5;

     label2:
        $r2 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        $r8 = $r2[i3];

        r10 = $r8;

        if null != $r8 goto label3;

        $r4 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        $i10 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        $r3 = newarray (byte)[$i10];

        $r4[i3] = $r3;

        r10 = $r3;

     label3:
        r10[i5] = b7;

        $i8 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        if i0 < $i8 goto label4;

        $i9 = i0 + 1;

        r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree> = $i9;

     label4:
        return;
    }

    public byte elementAt(int)
    {
        byte[] $r2, $r3;
        byte[][] $r1;
        byte $b6, $b7;
        org.apache.xml.utils.SuballocatedByteVector r0;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.apache.xml.utils.SuballocatedByteVector;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        if i0 >= $i1 goto label1;

        $r3 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[] m_map0>;

        $b7 = $r3[i0];

        return $b7;

     label1:
        $r1 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        $i2 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        $i3 = i0 / $i2;

        $r2 = $r1[$i3];

        $i4 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        $i5 = i0 % $i4;

        $b6 = $r2[$i5];

        return $b6;
    }

    private boolean contains(byte)
    {
        byte b0;
        org.apache.xml.utils.SuballocatedByteVector r0;
        int $i1;
        boolean $z0;

        r0 := @this: org.apache.xml.utils.SuballocatedByteVector;

        b0 := @parameter0: byte;

        $i1 = virtualinvoke r0.<org.apache.xml.utils.SuballocatedByteVector: int indexOf(byte,int)>(b0, 0);

        if $i1 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int indexOf(byte, int)
    {
        byte[] r3, r4;
        byte b8, $b9, $b15;
        byte[][] $r1, $r2;
        org.apache.xml.utils.SuballocatedByteVector r0;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, i19, i20, i21, i22, i23, $i25, $i26, $i27, $i28, $i29, $i31;

        r0 := @this: org.apache.xml.utils.SuballocatedByteVector;

        b8 := @parameter0: byte;

        i0 := @parameter1: int;

        $i1 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        if i0 < $i1 goto label01;

        $i25 = (int) -1;

        return $i25;

     label01:
        $i2 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        i19 = i0 / $i2;

        $i3 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        i20 = i0 % $i3;

        $i5 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        $i4 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        i6 = $i5 / $i4;

        goto label07;

     label02:
        $r1 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        r3 = $r1[i19];

        if r3 == null goto label06;

        i21 = i20;

        goto label05;

     label03:
        $b9 = r3[i21];

        $i26 = (int) $b9;

        $i27 = (int) b8;

        if $i26 != $i27 goto label04;

        $i10 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        $i11 = i19 * $i10;

        $i12 = i21 + $i11;

        return $i12;

     label04:
        i21 = i21 + 1;

     label05:
        $i7 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        if i21 < $i7 goto label03;

     label06:
        i20 = 0;

        i19 = i19 + 1;

     label07:
        if i19 < i6 goto label02;

        $i14 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        $i13 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        i22 = $i14 % $i13;

        $r2 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        r4 = $r2[i6];

        i23 = i20;

        goto label10;

     label08:
        $b15 = r4[i23];

        $i28 = (int) $b15;

        $i29 = (int) b8;

        if $i28 != $i29 goto label09;

        $i16 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        $i17 = i6 * $i16;

        $i18 = i23 + $i17;

        return $i18;

     label09:
        i23 = i23 + 1;

     label10:
        if i23 < i22 goto label08;

        $i31 = (int) -1;

        return $i31;
    }

    public int indexOf(byte)
    {
        int $i1;
        byte b0;
        org.apache.xml.utils.SuballocatedByteVector r0;

        r0 := @this: org.apache.xml.utils.SuballocatedByteVector;

        b0 := @parameter0: byte;

        $i1 = virtualinvoke r0.<org.apache.xml.utils.SuballocatedByteVector: int indexOf(byte,int)>(b0, 0);

        return $i1;
    }

    private int lastIndexOf(byte)
    {
        byte[] r2;
        byte b4, $b5;
        org.apache.xml.utils.SuballocatedByteVector r0;
        int $i0, $i1, $i2, $i3, $i6, $i7, $i8, i9, i10, i11, $i12, $i13, $i15, $i17, $i19;
        byte[][] $r1;

        r0 := @this: org.apache.xml.utils.SuballocatedByteVector;

        b4 := @parameter0: byte;

        $i1 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        $i0 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        i9 = $i1 % $i0;

        $i3 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_firstFree>;

        $i2 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        i10 = $i3 / $i2;

        goto label6;

     label1:
        $r1 = r0.<org.apache.xml.utils.SuballocatedByteVector: byte[][] m_map>;

        r2 = $r1[i10];

        if r2 == null goto label5;

        i11 = i9;

        goto label4;

     label2:
        $b5 = r2[i11];

        $i12 = (int) $b5;

        $i13 = (int) b4;

        if $i12 != $i13 goto label3;

        $i6 = r0.<org.apache.xml.utils.SuballocatedByteVector: int m_blocksize>;

        $i7 = i10 * $i6;

        $i8 = i11 + $i7;

        return $i8;

     label3:
        $i15 = (int) -1;

        i11 = i11 + $i15;

     label4:
        if i11 >= 0 goto label2;

     label5:
        i9 = 0;

        $i17 = (int) -1;

        i10 = i10 + $i17;

     label6:
        if i10 >= 0 goto label1;

        $i19 = (int) -1;

        return $i19;
    }
}
