class org.dom4j.io.SAXModifyElementHandler extends java.lang.Object implements org.dom4j.ElementHandler
{
    private org.dom4j.io.ElementModifier elemModifier;
    private org.dom4j.Element modifiedElement;

    public void <init>(org.dom4j.io.ElementModifier)
    {
        org.dom4j.io.SAXModifyElementHandler r0;
        org.dom4j.io.ElementModifier r1;

        r0 := @this: org.dom4j.io.SAXModifyElementHandler;

        r1 := @parameter0: org.dom4j.io.ElementModifier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.dom4j.io.SAXModifyElementHandler: org.dom4j.io.ElementModifier elemModifier> = r1;

        return;
    }

    public void onStart(org.dom4j.ElementPath)
    {
        org.dom4j.Element $r2;
        org.dom4j.ElementPath r1;
        org.dom4j.io.SAXModifyElementHandler r0;

        r0 := @this: org.dom4j.io.SAXModifyElementHandler;

        r1 := @parameter0: org.dom4j.ElementPath;

        $r2 = interfaceinvoke r1.<org.dom4j.ElementPath: org.dom4j.Element getCurrent()>();

        r0.<org.dom4j.io.SAXModifyElementHandler: org.dom4j.Element modifiedElement> = $r2;

        return;
    }

    public void onEnd(org.dom4j.ElementPath)
    {
        org.dom4j.Document $r10, $r11, $r20;
        org.dom4j.io.ElementModifier $r6, $r14;
        org.dom4j.io.SAXModifyException $r24;
        int $i0;
        org.dom4j.ElementPath r0;
        boolean $z0, $z1;
        org.dom4j.io.ElementStack r27;
        java.lang.Exception $r23;
        java.util.List $r21;
        org.dom4j.Element $r1, $r2, $r4, $r7, $r8, $r9, $r12, $r15, $r16, $r17, $r18, $r19, $r22, r25, r26;
        java.lang.Object $r5, $r13;
        org.dom4j.io.SAXModifyElementHandler r3;

        r3 := @this: org.dom4j.io.SAXModifyElementHandler;

        r0 := @parameter0: org.dom4j.ElementPath;

     label1:
        $r1 = interfaceinvoke r0.<org.dom4j.ElementPath: org.dom4j.Element getCurrent()>();

        $r2 = interfaceinvoke $r1.<org.dom4j.Element: org.dom4j.Element getParent()>();

        if $r2 == null goto label3;

        $r13 = interfaceinvoke $r1.<org.dom4j.Node: java.lang.Object clone()>();

        r25 = (org.dom4j.Element) $r13;

        $r14 = r3.<org.dom4j.io.SAXModifyElementHandler: org.dom4j.io.ElementModifier elemModifier>;

        $r15 = interfaceinvoke $r14.<org.dom4j.io.ElementModifier: org.dom4j.Element modifyElement(org.dom4j.Element)>(r25);

        r3.<org.dom4j.io.SAXModifyElementHandler: org.dom4j.Element modifiedElement> = $r15;

        $r16 = r3.<org.dom4j.io.SAXModifyElementHandler: org.dom4j.Element modifiedElement>;

        if $r16 == null goto label2;

        $r17 = r3.<org.dom4j.io.SAXModifyElementHandler: org.dom4j.Element modifiedElement>;

        $r18 = interfaceinvoke $r1.<org.dom4j.Element: org.dom4j.Element getParent()>();

        interfaceinvoke $r17.<org.dom4j.Element: void setParent(org.dom4j.Element)>($r18);

        $r19 = r3.<org.dom4j.io.SAXModifyElementHandler: org.dom4j.Element modifiedElement>;

        $r20 = interfaceinvoke $r1.<org.dom4j.Element: org.dom4j.Document getDocument()>();

        interfaceinvoke $r19.<org.dom4j.Element: void setDocument(org.dom4j.Document)>($r20);

        $i0 = interfaceinvoke $r2.<org.dom4j.Element: int indexOf(org.dom4j.Node)>($r1);

        $r21 = interfaceinvoke $r2.<org.dom4j.Element: java.util.List content()>();

        $r22 = r3.<org.dom4j.io.SAXModifyElementHandler: org.dom4j.Element modifiedElement>;

        interfaceinvoke $r21.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i0, $r22);

     label2:
        interfaceinvoke $r1.<org.dom4j.Element: org.dom4j.Node detach()>();

        goto label5;

     label3:
        $z0 = interfaceinvoke $r1.<org.dom4j.Element: boolean isRootElement()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r1.<org.dom4j.Node: java.lang.Object clone()>();

        r26 = (org.dom4j.Element) $r5;

        $r6 = r3.<org.dom4j.io.SAXModifyElementHandler: org.dom4j.io.ElementModifier elemModifier>;

        $r7 = interfaceinvoke $r6.<org.dom4j.io.ElementModifier: org.dom4j.Element modifyElement(org.dom4j.Element)>(r26);

        r3.<org.dom4j.io.SAXModifyElementHandler: org.dom4j.Element modifiedElement> = $r7;

        $r8 = r3.<org.dom4j.io.SAXModifyElementHandler: org.dom4j.Element modifiedElement>;

        if $r8 == null goto label4;

        $r9 = r3.<org.dom4j.io.SAXModifyElementHandler: org.dom4j.Element modifiedElement>;

        $r10 = interfaceinvoke $r1.<org.dom4j.Element: org.dom4j.Document getDocument()>();

        interfaceinvoke $r9.<org.dom4j.Element: void setDocument(org.dom4j.Document)>($r10);

        $r11 = interfaceinvoke $r1.<org.dom4j.Element: org.dom4j.Document getDocument()>();

        $r12 = r3.<org.dom4j.io.SAXModifyElementHandler: org.dom4j.Element modifiedElement>;

        interfaceinvoke $r11.<org.dom4j.Document: void setRootElement(org.dom4j.Element)>($r12);

     label4:
        interfaceinvoke $r1.<org.dom4j.Element: org.dom4j.Node detach()>();

     label5:
        $z1 = r0 instanceof org.dom4j.io.ElementStack;

        if $z1 == 0 goto label6;

        r27 = (org.dom4j.io.ElementStack) r0;

        virtualinvoke r27.<org.dom4j.io.ElementStack: org.dom4j.Element popElement()>();

        $r4 = r3.<org.dom4j.io.SAXModifyElementHandler: org.dom4j.Element modifiedElement>;

        virtualinvoke r27.<org.dom4j.io.ElementStack: void pushElement(org.dom4j.Element)>($r4);

     label6:
        goto label8;

     label7:
        $r23 := @caughtexception;

        $r24 = new org.dom4j.io.SAXModifyException;

        specialinvoke $r24.<org.dom4j.io.SAXModifyException: void <init>(java.lang.Throwable)>($r23);

        throw $r24;

     label8:
        return;

        catch java.lang.Exception from label1 to label6 with label7;
    }

    protected org.dom4j.Element getModifiedElement()
    {
        org.dom4j.Element $r1;
        org.dom4j.io.SAXModifyElementHandler r0;

        r0 := @this: org.dom4j.io.SAXModifyElementHandler;

        $r1 = r0.<org.dom4j.io.SAXModifyElementHandler: org.dom4j.Element modifiedElement>;

        return $r1;
    }
}
