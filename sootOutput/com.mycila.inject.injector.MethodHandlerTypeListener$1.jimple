class com.mycila.inject.injector.MethodHandlerTypeListener$1 extends java.lang.Object implements com.google.inject.spi.InjectionListener
{
    final com.google.inject.Provider val$provider;
    final com.google.inject.TypeLiteral val$type;
    final com.mycila.inject.injector.MethodHandlerTypeListener this$0;

    void <init>(com.mycila.inject.injector.MethodHandlerTypeListener, com.google.inject.Provider, com.google.inject.TypeLiteral)
    {
        com.google.inject.Provider r2;
        com.mycila.inject.injector.MethodHandlerTypeListener r1;
        com.google.inject.TypeLiteral r3;
        com.mycila.inject.injector.MethodHandlerTypeListener$1 r0;

        r0 := @this: com.mycila.inject.injector.MethodHandlerTypeListener$1;

        r1 := @parameter0: com.mycila.inject.injector.MethodHandlerTypeListener;

        r2 := @parameter1: com.google.inject.Provider;

        r3 := @parameter2: com.google.inject.TypeLiteral;

        r0.<com.mycila.inject.injector.MethodHandlerTypeListener$1: com.mycila.inject.injector.MethodHandlerTypeListener this$0> = r1;

        r0.<com.mycila.inject.injector.MethodHandlerTypeListener$1: com.google.inject.Provider val$provider> = r2;

        r0.<com.mycila.inject.injector.MethodHandlerTypeListener$1: com.google.inject.TypeLiteral val$type> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void afterInjection(java.lang.Object)
    {
        com.mycila.inject.internal.guava.base.Predicate $r9;
        java.lang.Iterable $r6, $r10;
        com.mycila.inject.injector.MethodHandlerTypeListener $r7, $r17;
        java.util.LinkedList $r11;
        java.lang.reflect.Method r15;
        com.mycila.inject.injector.MethodHandlerTypeListener$1 r0;
        boolean $z0;
        java.util.Iterator $r13;
        com.mycila.inject.injector.MethodHandler r3;
        com.google.inject.Provider $r1;
        java.util.List $r12;
        java.lang.'annotation'.Annotation $r20;
        java.lang.Object $r2, $r14, r16;
        java.lang.Class $r5, $r8, $r19;
        com.google.inject.TypeLiteral $r4, $r18;

        r0 := @this: com.mycila.inject.injector.MethodHandlerTypeListener$1;

        r16 := @parameter0: java.lang.Object;

        $r1 = r0.<com.mycila.inject.injector.MethodHandlerTypeListener$1: com.google.inject.Provider val$provider>;

        $r2 = interfaceinvoke $r1.<com.google.inject.Provider: java.lang.Object get()>();

        r3 = (com.mycila.inject.injector.MethodHandler) $r2;

        $r4 = r0.<com.mycila.inject.injector.MethodHandlerTypeListener$1: com.google.inject.TypeLiteral val$type>;

        $r5 = virtualinvoke $r4.<com.google.inject.TypeLiteral: java.lang.Class getRawType()>();

        $r6 = staticinvoke <com.mycila.inject.internal.Reflect: java.lang.Iterable findMethods(java.lang.Class)>($r5);

        $r7 = r0.<com.mycila.inject.injector.MethodHandlerTypeListener$1: com.mycila.inject.injector.MethodHandlerTypeListener this$0>;

        $r8 = staticinvoke <com.mycila.inject.injector.MethodHandlerTypeListener: java.lang.Class access$000(com.mycila.inject.injector.MethodHandlerTypeListener)>($r7);

        $r9 = staticinvoke <com.mycila.inject.internal.Reflect: com.mycila.inject.internal.guava.base.Predicate annotatedBy(java.lang.Class)>($r8);

        $r10 = staticinvoke <com.mycila.inject.internal.guava.collect.Iterables: java.lang.Iterable filter(java.lang.Iterable,com.mycila.inject.internal.guava.base.Predicate)>($r6, $r9);

        $r11 = staticinvoke <com.mycila.inject.internal.guava.collect.Lists: java.util.LinkedList newLinkedList(java.lang.Iterable)>($r10);

        $r12 = staticinvoke <com.mycila.inject.internal.guava.collect.Lists: java.util.List reverse(java.util.List)>($r11);

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.lang.reflect.Method) $r14;

        $r18 = r0.<com.mycila.inject.injector.MethodHandlerTypeListener$1: com.google.inject.TypeLiteral val$type>;

        $r17 = r0.<com.mycila.inject.injector.MethodHandlerTypeListener$1: com.mycila.inject.injector.MethodHandlerTypeListener this$0>;

        $r19 = staticinvoke <com.mycila.inject.injector.MethodHandlerTypeListener: java.lang.Class access$000(com.mycila.inject.injector.MethodHandlerTypeListener)>($r17);

        $r20 = virtualinvoke r15.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>($r19);

        interfaceinvoke r3.<com.mycila.inject.injector.MethodHandler: void handle(com.google.inject.TypeLiteral,java.lang.Object,java.lang.reflect.Member,java.lang.'annotation'.Annotation)>($r18, r16, r15, $r20);

        goto label1;

     label2:
        return;
    }
}
