public class org.apache.batik.css.engine.value.svg.BaselineShiftManager extends org.apache.batik.css.engine.value.LengthManager
{
    protected static final org.apache.batik.css.engine.value.StringMap values;

    public void <init>()
    {
        org.apache.batik.css.engine.value.svg.BaselineShiftManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.BaselineShiftManager;

        specialinvoke r0.<org.apache.batik.css.engine.value.LengthManager: void <init>()>();

        return;
    }

    public boolean isInheritedProperty()
    {
        org.apache.batik.css.engine.value.svg.BaselineShiftManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.BaselineShiftManager;

        return 0;
    }

    public boolean isAnimatableProperty()
    {
        org.apache.batik.css.engine.value.svg.BaselineShiftManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.BaselineShiftManager;

        return 1;
    }

    public boolean isAdditiveProperty()
    {
        org.apache.batik.css.engine.value.svg.BaselineShiftManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.BaselineShiftManager;

        return 0;
    }

    public int getPropertyType()
    {
        org.apache.batik.css.engine.value.svg.BaselineShiftManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.BaselineShiftManager;

        return 40;
    }

    public java.lang.String getPropertyName()
    {
        org.apache.batik.css.engine.value.svg.BaselineShiftManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.BaselineShiftManager;

        return "baseline-shift";
    }

    public org.apache.batik.css.engine.value.Value getDefaultValue()
    {
        org.apache.batik.css.engine.value.svg.BaselineShiftManager r1;
        org.apache.batik.css.engine.value.Value $r0;

        r1 := @this: org.apache.batik.css.engine.value.svg.BaselineShiftManager;

        $r0 = <org.apache.batik.css.engine.value.svg.SVGValueConstants: org.apache.batik.css.engine.value.Value BASELINE_VALUE>;

        return $r0;
    }

    public org.apache.batik.css.engine.value.Value createValue(org.w3c.css.sac.LexicalUnit, org.apache.batik.css.engine.CSSEngine) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.engine.value.Value $r6, $r10, $r12;
        org.apache.batik.css.engine.CSSEngine r11;
        org.apache.batik.css.engine.value.svg.BaselineShiftManager r7;
        short $s0;
        org.w3c.dom.DOMException $r9;
        org.w3c.css.sac.LexicalUnit r0;
        int $i1;
        java.lang.Object $r5;
        org.apache.batik.css.engine.value.StringMap $r1;
        java.lang.String $r2, $r3, $r4, $r8;

        r7 := @this: org.apache.batik.css.engine.value.svg.BaselineShiftManager;

        r0 := @parameter0: org.w3c.css.sac.LexicalUnit;

        r11 := @parameter1: org.apache.batik.css.engine.CSSEngine;

        $s0 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $i1 = (int) $s0;

        lookupswitch($i1)
        {
            case 12: goto label1;
            case 35: goto label2;
            default: goto label4;
        };

     label1:
        $r10 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value INHERIT_VALUE>;

        return $r10;

     label2:
        $r1 = <org.apache.batik.css.engine.value.svg.BaselineShiftManager: org.apache.batik.css.engine.value.StringMap values>;

        $r2 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: java.lang.String getStringValue()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String intern()>();

        $r5 = virtualinvoke $r1.<org.apache.batik.css.engine.value.StringMap: java.lang.Object get(java.lang.String)>($r4);

        if $r5 != null goto label3;

        $r8 = interfaceinvoke r0.<org.w3c.css.sac.LexicalUnit: java.lang.String getStringValue()>();

        $r9 = virtualinvoke r7.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createInvalidIdentifierDOMException(java.lang.String)>($r8);

        throw $r9;

     label3:
        $r6 = (org.apache.batik.css.engine.value.Value) $r5;

        return $r6;

     label4:
        $r12 = specialinvoke r7.<org.apache.batik.css.engine.value.LengthManager: org.apache.batik.css.engine.value.Value createValue(org.w3c.css.sac.LexicalUnit,org.apache.batik.css.engine.CSSEngine)>(r0, r11);

        return $r12;
    }

    public org.apache.batik.css.engine.value.Value createStringValue(short, java.lang.String, org.apache.batik.css.engine.CSSEngine) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.engine.value.Value $r5;
        org.apache.batik.css.engine.CSSEngine r9;
        org.apache.batik.css.engine.value.svg.BaselineShiftManager r6;
        short s0;
        org.w3c.dom.DOMException $r7, $r8;
        int $i1;
        java.lang.Object $r4;
        java.lang.String r0, $r2, $r3;
        org.apache.batik.css.engine.value.StringMap $r1;

        r6 := @this: org.apache.batik.css.engine.value.svg.BaselineShiftManager;

        s0 := @parameter0: short;

        r0 := @parameter1: java.lang.String;

        r9 := @parameter2: org.apache.batik.css.engine.CSSEngine;

        $i1 = (int) s0;

        if $i1 == 21 goto label1;

        $r8 = virtualinvoke r6.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createInvalidIdentifierDOMException(java.lang.String)>(r0);

        throw $r8;

     label1:
        $r1 = <org.apache.batik.css.engine.value.svg.BaselineShiftManager: org.apache.batik.css.engine.value.StringMap values>;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String intern()>();

        $r4 = virtualinvoke $r1.<org.apache.batik.css.engine.value.StringMap: java.lang.Object get(java.lang.String)>($r3);

        if $r4 != null goto label2;

        $r7 = virtualinvoke r6.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createInvalidIdentifierDOMException(java.lang.String)>(r0);

        throw $r7;

     label2:
        $r5 = (org.apache.batik.css.engine.value.Value) $r4;

        return $r5;
    }

    public org.apache.batik.css.engine.value.Value computeValue(org.apache.batik.css.engine.CSSStylableElement, java.lang.String, org.apache.batik.css.engine.CSSEngine, int, org.apache.batik.css.engine.StyleMap, org.apache.batik.css.engine.value.Value)
    {
        org.apache.batik.css.engine.CSSStylableElement r2, r10;
        org.apache.batik.css.engine.CSSEngine r4;
        org.apache.batik.css.engine.value.svg.BaselineShiftManager r1;
        short $s0;
        org.apache.batik.css.engine.StyleMap r5;
        org.w3c.dom.Node $r7;
        int i1, $i2, $i3;
        java.lang.String r3;
        org.apache.batik.css.engine.value.FloatValue $r11;
        org.apache.batik.css.engine.value.Value r0, $r6, $r8;
        float $f0, $f1, $f2, $f3;

        r1 := @this: org.apache.batik.css.engine.value.svg.BaselineShiftManager;

        r2 := @parameter0: org.apache.batik.css.engine.CSSStylableElement;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: org.apache.batik.css.engine.CSSEngine;

        i1 := @parameter3: int;

        r5 := @parameter4: org.apache.batik.css.engine.StyleMap;

        r0 := @parameter5: org.apache.batik.css.engine.value.Value;

        $s0 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: short getPrimitiveType()>();

        $i3 = (int) $s0;

        if $i3 != 2 goto label2;

        virtualinvoke r5.<org.apache.batik.css.engine.StyleMap: void putLineHeightRelative(int,boolean)>(i1, 1);

        $i2 = virtualinvoke r4.<org.apache.batik.css.engine.CSSEngine: int getLineHeightIndex()>();

        $r7 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        r10 = (org.apache.batik.css.engine.CSSStylableElement) $r7;

        if r10 != null goto label1;

        r10 = r2;

     label1:
        $r8 = virtualinvoke r4.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.value.Value getComputedStyle(org.apache.batik.css.engine.CSSStylableElement,java.lang.String,int)>(r10, r3, $i2);

        $f0 = interfaceinvoke $r8.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $f1 = interfaceinvoke r0.<org.apache.batik.css.engine.value.Value: float getFloatValue()>();

        $r11 = new org.apache.batik.css.engine.value.FloatValue;

        $f2 = $f0 * $f1;

        $f3 = $f2 / 100.0F;

        specialinvoke $r11.<org.apache.batik.css.engine.value.FloatValue: void <init>(short,float)>(1, $f3);

        return $r11;

     label2:
        $r6 = specialinvoke r1.<org.apache.batik.css.engine.value.LengthManager: org.apache.batik.css.engine.value.Value computeValue(org.apache.batik.css.engine.CSSStylableElement,java.lang.String,org.apache.batik.css.engine.CSSEngine,int,org.apache.batik.css.engine.StyleMap,org.apache.batik.css.engine.value.Value)>(r2, r3, r4, i1, r5, r0);

        return $r6;
    }

    protected int getOrientation()
    {
        org.apache.batik.css.engine.value.svg.BaselineShiftManager r0;

        r0 := @this: org.apache.batik.css.engine.value.svg.BaselineShiftManager;

        return 2;
    }

    static void <clinit>()
    {
        org.apache.batik.css.engine.value.StringMap $r0, $r2, $r4, $r6;
        org.apache.batik.css.engine.value.Value $r1, $r3, $r5;

        $r0 = new org.apache.batik.css.engine.value.StringMap;

        specialinvoke $r0.<org.apache.batik.css.engine.value.StringMap: void <init>()>();

        <org.apache.batik.css.engine.value.svg.BaselineShiftManager: org.apache.batik.css.engine.value.StringMap values> = $r0;

        $r2 = <org.apache.batik.css.engine.value.svg.BaselineShiftManager: org.apache.batik.css.engine.value.StringMap values>;

        $r1 = <org.apache.batik.css.engine.value.svg.SVGValueConstants: org.apache.batik.css.engine.value.Value BASELINE_VALUE>;

        virtualinvoke $r2.<org.apache.batik.css.engine.value.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("baseline", $r1);

        $r4 = <org.apache.batik.css.engine.value.svg.BaselineShiftManager: org.apache.batik.css.engine.value.StringMap values>;

        $r3 = <org.apache.batik.css.engine.value.svg.SVGValueConstants: org.apache.batik.css.engine.value.Value SUB_VALUE>;

        virtualinvoke $r4.<org.apache.batik.css.engine.value.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("sub", $r3);

        $r6 = <org.apache.batik.css.engine.value.svg.BaselineShiftManager: org.apache.batik.css.engine.value.StringMap values>;

        $r5 = <org.apache.batik.css.engine.value.svg.SVGValueConstants: org.apache.batik.css.engine.value.Value SUPER_VALUE>;

        virtualinvoke $r6.<org.apache.batik.css.engine.value.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("super", $r5);

        return;
    }
}
