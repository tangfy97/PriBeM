public final class org.apache.commons.collections.functors.NonePredicate extends java.lang.Object implements org.apache.commons.collections.Predicate, org.apache.commons.collections.functors.PredicateDecorator, java.io.Serializable
{
    private static final long serialVersionUID;
    private final org.apache.commons.collections.Predicate[] iPredicates;

    public static org.apache.commons.collections.Predicate getInstance(org.apache.commons.collections.Predicate[])
    {
        org.apache.commons.collections.Predicate $r2;
        org.apache.commons.collections.Predicate[] $r0, r3;
        int $i0;
        org.apache.commons.collections.functors.NonePredicate $r1;

        r3 := @parameter0: org.apache.commons.collections.Predicate[];

        staticinvoke <org.apache.commons.collections.functors.FunctorUtils: void validate(org.apache.commons.collections.Predicate[])>(r3);

        $i0 = lengthof r3;

        if $i0 != 0 goto label1;

        $r2 = <org.apache.commons.collections.functors.TruePredicate: org.apache.commons.collections.Predicate INSTANCE>;

        return $r2;

     label1:
        $r0 = staticinvoke <org.apache.commons.collections.functors.FunctorUtils: org.apache.commons.collections.Predicate[] copy(org.apache.commons.collections.Predicate[])>(r3);

        $r1 = new org.apache.commons.collections.functors.NonePredicate;

        specialinvoke $r1.<org.apache.commons.collections.functors.NonePredicate: void <init>(org.apache.commons.collections.Predicate[])>($r0);

        return $r1;
    }

    public static org.apache.commons.collections.Predicate getInstance(java.util.Collection)
    {
        org.apache.commons.collections.Predicate $r3;
        org.apache.commons.collections.Predicate[] $r1;
        java.util.Collection r0;
        int $i0;
        org.apache.commons.collections.functors.NonePredicate $r2;

        r0 := @parameter0: java.util.Collection;

        $r1 = staticinvoke <org.apache.commons.collections.functors.FunctorUtils: org.apache.commons.collections.Predicate[] validate(java.util.Collection)>(r0);

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $r3 = <org.apache.commons.collections.functors.TruePredicate: org.apache.commons.collections.Predicate INSTANCE>;

        return $r3;

     label1:
        $r2 = new org.apache.commons.collections.functors.NonePredicate;

        specialinvoke $r2.<org.apache.commons.collections.functors.NonePredicate: void <init>(org.apache.commons.collections.Predicate[])>($r1);

        return $r2;
    }

    public void <init>(org.apache.commons.collections.Predicate[])
    {
        org.apache.commons.collections.Predicate[] r1;
        org.apache.commons.collections.functors.NonePredicate r0;

        r0 := @this: org.apache.commons.collections.functors.NonePredicate;

        r1 := @parameter0: org.apache.commons.collections.Predicate[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.functors.NonePredicate: org.apache.commons.collections.Predicate[] iPredicates> = r1;

        return;
    }

    public boolean evaluate(java.lang.Object)
    {
        org.apache.commons.collections.Predicate $r4;
        org.apache.commons.collections.functors.NonePredicate r0;
        org.apache.commons.collections.Predicate[] $r1, $r2;
        int $i0, i1;
        java.lang.Object r3;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.functors.NonePredicate;

        r3 := @parameter0: java.lang.Object;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.commons.collections.functors.NonePredicate: org.apache.commons.collections.Predicate[] iPredicates>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label3;

        $r2 = r0.<org.apache.commons.collections.functors.NonePredicate: org.apache.commons.collections.Predicate[] iPredicates>;

        $r4 = $r2[i1];

        $z0 = interfaceinvoke $r4.<org.apache.commons.collections.Predicate: boolean evaluate(java.lang.Object)>(r3);

        if $z0 == 0 goto label2;

        return 0;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public org.apache.commons.collections.Predicate[] getPredicates()
    {
        org.apache.commons.collections.Predicate[] $r1;
        org.apache.commons.collections.functors.NonePredicate r0;

        r0 := @this: org.apache.commons.collections.functors.NonePredicate;

        $r1 = r0.<org.apache.commons.collections.functors.NonePredicate: org.apache.commons.collections.Predicate[] iPredicates>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections.functors.NonePredicate: long serialVersionUID> = 2007613066565892961L;

        return;
    }
}
