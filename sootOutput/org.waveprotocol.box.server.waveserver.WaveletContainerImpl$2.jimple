class org.waveprotocol.box.server.waveserver.WaveletContainerImpl$2 extends java.lang.Object implements java.lang.Runnable
{
    final com.google.common.util.concurrent.ListenableFuture val$result;
    final org.waveprotocol.wave.model.version.HashedVersion val$version;
    final com.google.common.collect.ImmutableSet val$domainsToNotify;
    final org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0;

    void <init>(org.waveprotocol.box.server.waveserver.WaveletContainerImpl, com.google.common.util.concurrent.ListenableFuture, org.waveprotocol.wave.model.version.HashedVersion, com.google.common.collect.ImmutableSet)
    {
        com.google.common.collect.ImmutableSet r4;
        com.google.common.util.concurrent.ListenableFuture r2;
        org.waveprotocol.box.server.waveserver.WaveletContainerImpl$2 r0;
        org.waveprotocol.wave.model.version.HashedVersion r3;
        org.waveprotocol.box.server.waveserver.WaveletContainerImpl r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveletContainerImpl$2;

        r1 := @parameter0: org.waveprotocol.box.server.waveserver.WaveletContainerImpl;

        r2 := @parameter1: com.google.common.util.concurrent.ListenableFuture;

        r3 := @parameter2: org.waveprotocol.wave.model.version.HashedVersion;

        r4 := @parameter3: com.google.common.collect.ImmutableSet;

        r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$2: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0> = r1;

        r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$2: com.google.common.util.concurrent.ListenableFuture val$result> = r2;

        r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$2: org.waveprotocol.wave.model.version.HashedVersion val$version> = r3;

        r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$2: com.google.common.collect.ImmutableSet val$domainsToNotify> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        java.lang.Throwable $r2;
        com.google.common.util.concurrent.ListenableFuture $r1;
        org.waveprotocol.box.server.waveserver.WaveletContainerImpl$2 r0;
        java.lang.Thread $r12;
        org.waveprotocol.wave.model.version.HashedVersion $r8, $r16, $r18;
        org.waveprotocol.wave.util.logging.Log $r5;
        java.lang.String $r10;
        org.waveprotocol.box.server.waveserver.WaveletContainerImpl $r3, $r13, $r14, $r17, $r20;
        com.google.common.collect.ImmutableSet $r19;
        org.waveprotocol.box.server.waveserver.WaveletState $r15;
        java.util.concurrent.ExecutionException $r4;
        java.lang.InterruptedException $r11;
        java.lang.StringBuilder $r6, $r7, $r9;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveletContainerImpl$2;

     label01:
        $r1 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$2: com.google.common.util.concurrent.ListenableFuture val$result>;

        interfaceinvoke $r1.<com.google.common.util.concurrent.ListenableFuture: java.lang.Object get()>();

     label02:
        goto label05;

     label03:
        $r11 := @caughtexception;

        $r12 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r12.<java.lang.Thread: void interrupt()>();

        goto label05;

     label04:
        $r4 := @caughtexception;

        $r5 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveletContainerImpl: org.waveprotocol.wave.util.logging.Log access$200()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Version ");

        $r8 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$2: org.waveprotocol.wave.model.version.HashedVersion val$version>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<org.waveprotocol.wave.util.logging.Log: void severe(java.lang.String,java.lang.Throwable)>($r10, $r4);

     label05:
        $r13 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$2: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        virtualinvoke $r13.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl: void acquireWriteLock()>();

     label06:
        $r14 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$2: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        $r15 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveletContainerImpl: org.waveprotocol.box.server.waveserver.WaveletState access$000(org.waveprotocol.box.server.waveserver.WaveletContainerImpl)>($r14);

        $r16 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$2: org.waveprotocol.wave.model.version.HashedVersion val$version>;

        interfaceinvoke $r15.<org.waveprotocol.box.server.waveserver.WaveletState: void flush(org.waveprotocol.wave.model.version.HashedVersion)>($r16);

        $r17 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$2: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        $r18 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$2: org.waveprotocol.wave.model.version.HashedVersion val$version>;

        $r19 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$2: com.google.common.collect.ImmutableSet val$domainsToNotify>;

        virtualinvoke $r17.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl: void notifyOfCommit(org.waveprotocol.wave.model.version.HashedVersion,com.google.common.collect.ImmutableSet)>($r18, $r19);

     label07:
        $r20 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$2: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        virtualinvoke $r20.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl: void releaseWriteLock()>();

        goto label10;

     label08:
        $r2 := @caughtexception;

     label09:
        $r3 = r0.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl$2: org.waveprotocol.box.server.waveserver.WaveletContainerImpl this$0>;

        virtualinvoke $r3.<org.waveprotocol.box.server.waveserver.WaveletContainerImpl: void releaseWriteLock()>();

        throw $r2;

     label10:
        return;

        catch java.lang.InterruptedException from label01 to label02 with label03;
        catch java.util.concurrent.ExecutionException from label01 to label02 with label04;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }
}
