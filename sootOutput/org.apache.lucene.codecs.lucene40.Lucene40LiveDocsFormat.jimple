public class org.apache.lucene.codecs.lucene40.Lucene40LiveDocsFormat extends org.apache.lucene.codecs.LiveDocsFormat
{
    static final java.lang.String DELETES_EXTENSION;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.apache.lucene.codecs.lucene40.Lucene40LiveDocsFormat r0;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40LiveDocsFormat;

        specialinvoke r0.<org.apache.lucene.codecs.LiveDocsFormat: void <init>()>();

        return;
    }

    public org.apache.lucene.util.MutableBits newLiveDocs(int) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene40.BitVector $r0;
        int i0;
        org.apache.lucene.codecs.lucene40.Lucene40LiveDocsFormat r1;

        r1 := @this: org.apache.lucene.codecs.lucene40.Lucene40LiveDocsFormat;

        i0 := @parameter0: int;

        $r0 = new org.apache.lucene.codecs.lucene40.BitVector;

        specialinvoke $r0.<org.apache.lucene.codecs.lucene40.BitVector: void <init>(int)>(i0);

        virtualinvoke $r0.<org.apache.lucene.codecs.lucene40.BitVector: void invertAll()>();

        return $r0;
    }

    public org.apache.lucene.util.MutableBits newLiveDocs(org.apache.lucene.util.Bits) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene40.Lucene40LiveDocsFormat r3;
        org.apache.lucene.codecs.lucene40.BitVector r1, $r2;
        org.apache.lucene.util.Bits r0;

        r3 := @this: org.apache.lucene.codecs.lucene40.Lucene40LiveDocsFormat;

        r0 := @parameter0: org.apache.lucene.util.Bits;

        r1 = (org.apache.lucene.codecs.lucene40.BitVector) r0;

        $r2 = virtualinvoke r1.<org.apache.lucene.codecs.lucene40.BitVector: org.apache.lucene.codecs.lucene40.BitVector clone()>();

        return $r2;
    }

    public org.apache.lucene.util.Bits readLiveDocs(org.apache.lucene.store.Directory, org.apache.lucene.index.SegmentInfoPerCommit, org.apache.lucene.store.IOContext) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene40.Lucene40LiveDocsFormat r20;
        org.apache.lucene.index.SegmentInfoPerCommit r0;
        org.apache.lucene.store.Directory r5;
        org.apache.lucene.store.IOContext r6;
        boolean $z0, $z1;
        org.apache.lucene.index.SegmentInfo $r1, $r7, $r9, $r15;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r16, $r17, $r18;
        long $l0;
        java.lang.AssertionError $r8, $r10;
        org.apache.lucene.codecs.lucene40.BitVector $r4;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r2, $r3, $r19;

        r20 := @this: org.apache.lucene.codecs.lucene40.Lucene40LiveDocsFormat;

        r5 := @parameter0: org.apache.lucene.store.Directory;

        r0 := @parameter1: org.apache.lucene.index.SegmentInfoPerCommit;

        r6 := @parameter2: org.apache.lucene.store.IOContext;

        $r1 = r0.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r2 = $r1.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $l0 = virtualinvoke r0.<org.apache.lucene.index.SegmentInfoPerCommit: long getDelGen()>();

        $r3 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String fileNameFromGeneration(java.lang.String,java.lang.String,long)>($r2, "del", $l0);

        $r4 = new org.apache.lucene.codecs.lucene40.BitVector;

        specialinvoke $r4.<org.apache.lucene.codecs.lucene40.BitVector: void <init>(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.store.IOContext)>(r5, $r3, r6);

        $z0 = <org.apache.lucene.codecs.lucene40.Lucene40LiveDocsFormat: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i3 = virtualinvoke $r4.<org.apache.lucene.codecs.lucene40.BitVector: int count()>();

        $r9 = r0.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i4 = virtualinvoke $r9.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $i5 = virtualinvoke r0.<org.apache.lucene.index.SegmentInfoPerCommit: int getDelCount()>();

        $i6 = $i4 - $i5;

        if $i3 == $i6 goto label1;

        $r10 = new java.lang.AssertionError;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("liveDocs.count()=");

        $i7 = virtualinvoke $r4.<org.apache.lucene.codecs.lucene40.BitVector: int count()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" info.docCount=");

        $r15 = r0.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i8 = virtualinvoke $r15.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" info.getDelCount()=");

        $i9 = virtualinvoke r0.<org.apache.lucene.index.SegmentInfoPerCommit: int getDelCount()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>($r19);

        throw $r10;

     label1:
        $z1 = <org.apache.lucene.codecs.lucene40.Lucene40LiveDocsFormat: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $i1 = virtualinvoke $r4.<org.apache.lucene.codecs.lucene40.BitVector: int length()>();

        $r7 = r0.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i2 = virtualinvoke $r7.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        if $i1 == $i2 goto label2;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label2:
        return $r4;
    }

    public void writeLiveDocs(org.apache.lucene.util.MutableBits, org.apache.lucene.store.Directory, org.apache.lucene.index.SegmentInfoPerCommit, int, org.apache.lucene.store.IOContext) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene40.Lucene40LiveDocsFormat r12;
        org.apache.lucene.index.SegmentInfoPerCommit r0;
        long $l0;
        java.lang.AssertionError $r9, $r11;
        org.apache.lucene.store.Directory r6;
        org.apache.lucene.codecs.lucene40.BitVector r5;
        int $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8;
        java.lang.String $r2, $r3;
        org.apache.lucene.store.IOContext r7;
        boolean $z0, $z1;
        org.apache.lucene.index.SegmentInfo $r1, $r8, $r10;
        org.apache.lucene.util.MutableBits r4;

        r12 := @this: org.apache.lucene.codecs.lucene40.Lucene40LiveDocsFormat;

        r4 := @parameter0: org.apache.lucene.util.MutableBits;

        r6 := @parameter1: org.apache.lucene.store.Directory;

        r0 := @parameter2: org.apache.lucene.index.SegmentInfoPerCommit;

        i6 := @parameter3: int;

        r7 := @parameter4: org.apache.lucene.store.IOContext;

        $r1 = r0.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r2 = $r1.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $l0 = virtualinvoke r0.<org.apache.lucene.index.SegmentInfoPerCommit: long getNextDelGen()>();

        $r3 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String fileNameFromGeneration(java.lang.String,java.lang.String,long)>($r2, "del", $l0);

        r5 = (org.apache.lucene.codecs.lucene40.BitVector) r4;

        $z0 = <org.apache.lucene.codecs.lucene40.Lucene40LiveDocsFormat: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i3 = virtualinvoke r5.<org.apache.lucene.codecs.lucene40.BitVector: int count()>();

        $r10 = r0.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i4 = virtualinvoke $r10.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        $i5 = virtualinvoke r0.<org.apache.lucene.index.SegmentInfoPerCommit: int getDelCount()>();

        $i7 = $i4 - $i5;

        $i8 = $i7 - i6;

        if $i3 == $i8 goto label1;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label1:
        $z1 = <org.apache.lucene.codecs.lucene40.Lucene40LiveDocsFormat: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $i1 = virtualinvoke r5.<org.apache.lucene.codecs.lucene40.BitVector: int length()>();

        $r8 = r0.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $i2 = virtualinvoke $r8.<org.apache.lucene.index.SegmentInfo: int getDocCount()>();

        if $i1 == $i2 goto label2;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label2:
        virtualinvoke r5.<org.apache.lucene.codecs.lucene40.BitVector: void write(org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.store.IOContext)>(r6, $r3, r7);

        return;
    }

    public void files(org.apache.lucene.index.SegmentInfoPerCommit, java.util.Collection) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene40.Lucene40LiveDocsFormat r5;
        java.util.Collection r1;
        org.apache.lucene.index.SegmentInfo $r2;
        org.apache.lucene.index.SegmentInfoPerCommit r0;
        long $l0;
        java.lang.String $r3, $r4;
        boolean $z0;

        r5 := @this: org.apache.lucene.codecs.lucene40.Lucene40LiveDocsFormat;

        r0 := @parameter0: org.apache.lucene.index.SegmentInfoPerCommit;

        r1 := @parameter1: java.util.Collection;

        $z0 = virtualinvoke r0.<org.apache.lucene.index.SegmentInfoPerCommit: boolean hasDeletions()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.lucene.index.SegmentInfoPerCommit: org.apache.lucene.index.SegmentInfo info>;

        $r3 = $r2.<org.apache.lucene.index.SegmentInfo: java.lang.String name>;

        $l0 = virtualinvoke r0.<org.apache.lucene.index.SegmentInfoPerCommit: long getDelGen()>();

        $r4 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String fileNameFromGeneration(java.lang.String,java.lang.String,long)>($r3, "del", $l0);

        interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);

     label1:
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.apache.lucene.codecs.lucene40.Lucene40LiveDocsFormat: java.lang.String DELETES_EXTENSION> = "del";

        $r0 = class "Lorg/apache/lucene/codecs/lucene40/Lucene40LiveDocsFormat;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.lucene40.Lucene40LiveDocsFormat: boolean $assertionsDisabled> = $z1;

        return;
    }
}
