public class org.apache.pdfbox.pdmodel.PDPageable extends java.lang.Object implements java.awt.print.Pageable, java.awt.print.Printable
{
    private final java.util.List pages;
    private final java.awt.print.PrinterJob job;

    public void <init>(org.apache.pdfbox.pdmodel.PDDocument, java.awt.print.PrinterJob) throws java.lang.IllegalArgumentException, java.awt.print.PrinterException
    {
        java.util.ArrayList $r1;
        java.awt.print.PrinterJob r8;
        org.apache.pdfbox.pdmodel.PDPageable r0;
        java.lang.String $r11;
        boolean $z0;
        org.apache.pdfbox.pdmodel.PDDocumentCatalog $r13;
        org.apache.pdfbox.pdmodel.PDPageNode $r14;
        org.apache.pdfbox.pdmodel.encryption.AccessPermission $r12;
        org.apache.pdfbox.pdmodel.PDDocument r2;
        java.lang.IllegalArgumentException $r3;
        java.util.List $r15;
        java.awt.print.PrinterException $r16;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9, $r10;

        r0 := @this: org.apache.pdfbox.pdmodel.PDPageable;

        r2 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        r8 := @parameter1: java.awt.print.PrinterJob;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.PDPageable: java.util.List pages> = $r1;

        if r2 == null goto label1;

        if r8 != null goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PDPageable(");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r3;

     label2:
        $r12 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.AccessPermission getCurrentAccessPermission()>();

        $z0 = virtualinvoke $r12.<org.apache.pdfbox.pdmodel.encryption.AccessPermission: boolean canPrint()>();

        if $z0 != 0 goto label3;

        $r16 = new java.awt.print.PrinterException;

        specialinvoke $r16.<java.awt.print.PrinterException: void <init>(java.lang.String)>("You do not have permission to print this document");

        throw $r16;

     label3:
        $r13 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r14 = virtualinvoke $r13.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDPageNode getPages()>();

        $r15 = r0.<org.apache.pdfbox.pdmodel.PDPageable: java.util.List pages>;

        virtualinvoke $r14.<org.apache.pdfbox.pdmodel.PDPageNode: void getAllKids(java.util.List)>($r15);

        r0.<org.apache.pdfbox.pdmodel.PDPageable: java.awt.print.PrinterJob job> = r8;

        return;
    }

    public void <init>(org.apache.pdfbox.pdmodel.PDDocument) throws java.lang.IllegalArgumentException, java.awt.print.PrinterException
    {
        org.apache.pdfbox.pdmodel.PDPageable r0;
        org.apache.pdfbox.pdmodel.PDDocument r1;
        java.awt.print.PrinterJob $r2;

        r0 := @this: org.apache.pdfbox.pdmodel.PDPageable;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        $r2 = staticinvoke <java.awt.print.PrinterJob: java.awt.print.PrinterJob getPrinterJob()>();

        specialinvoke r0.<org.apache.pdfbox.pdmodel.PDPageable: void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.awt.print.PrinterJob)>(r1, $r2);

        return;
    }

    public java.awt.print.PrinterJob getPrinterJob()
    {
        org.apache.pdfbox.pdmodel.PDPageable r0;
        java.awt.print.PrinterJob $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.PDPageable;

        $r1 = r0.<org.apache.pdfbox.pdmodel.PDPageable: java.awt.print.PrinterJob job>;

        return $r1;
    }

    public int getNumberOfPages()
    {
        int $i0;
        org.apache.pdfbox.pdmodel.PDPageable r0;
        java.util.List $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.PDPageable;

        $r1 = r0.<org.apache.pdfbox.pdmodel.PDPageable: java.util.List pages>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public java.awt.print.PageFormat getPageFormat(int) throws java.lang.IndexOutOfBoundsException
    {
        java.awt.print.Paper $r10;
        java.awt.print.PrinterJob $r1;
        org.apache.pdfbox.pdmodel.PDPageable r0;
        byte $b1;
        int i0, $i2;
        java.awt.print.PageFormat $r2;
        boolean $z0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, d12, d13;
        org.apache.pdfbox.pdmodel.common.PDRectangle $r6, $r8;
        java.util.List $r3;
        java.awt.Dimension $r7, $r9;
        java.lang.Object $r4;
        org.apache.pdfbox.pdmodel.PDPage r5;

        r0 := @this: org.apache.pdfbox.pdmodel.PDPageable;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.pdfbox.pdmodel.PDPageable: java.awt.print.PrinterJob job>;

        $r2 = virtualinvoke $r1.<java.awt.print.PrinterJob: java.awt.print.PageFormat defaultPage()>();

        $r3 = r0.<org.apache.pdfbox.pdmodel.PDPageable: java.util.List pages>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0);

        r5 = (org.apache.pdfbox.pdmodel.PDPage) $r4;

        $r6 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDRectangle findMediaBox()>();

        $r7 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.common.PDRectangle: java.awt.Dimension createDimension()>();

        $r8 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDRectangle findCropBox()>();

        $r9 = virtualinvoke $r8.<org.apache.pdfbox.pdmodel.common.PDRectangle: java.awt.Dimension createDimension()>();

        d12 = 0.0;

        d13 = 0.0;

        $z0 = virtualinvoke $r7.<java.awt.Dimension: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label1;

        $d6 = virtualinvoke $r7.<java.awt.Dimension: double getWidth()>();

        $d7 = virtualinvoke $r9.<java.awt.Dimension: double getWidth()>();

        $d8 = $d6 - $d7;

        d12 = $d8 / 2.0;

        $d9 = virtualinvoke $r7.<java.awt.Dimension: double getHeight()>();

        $d10 = virtualinvoke $r9.<java.awt.Dimension: double getHeight()>();

        $d11 = $d9 - $d10;

        d13 = $d11 / 2.0;

     label1:
        $r10 = virtualinvoke $r2.<java.awt.print.PageFormat: java.awt.print.Paper getPaper()>();

        $d0 = virtualinvoke $r7.<java.awt.Dimension: double getWidth()>();

        $d1 = virtualinvoke $r7.<java.awt.Dimension: double getHeight()>();

        $b1 = $d0 cmpg $d1;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label2;

        virtualinvoke $r2.<java.awt.print.PageFormat: void setOrientation(int)>(1);

        $d4 = virtualinvoke $r9.<java.awt.Dimension: double getWidth()>();

        $d5 = virtualinvoke $r9.<java.awt.Dimension: double getHeight()>();

        virtualinvoke $r10.<java.awt.print.Paper: void setImageableArea(double,double,double,double)>(d12, d13, $d4, $d5);

        goto label3;

     label2:
        virtualinvoke $r2.<java.awt.print.PageFormat: void setOrientation(int)>(0);

        $d2 = virtualinvoke $r9.<java.awt.Dimension: double getHeight()>();

        $d3 = virtualinvoke $r9.<java.awt.Dimension: double getWidth()>();

        virtualinvoke $r10.<java.awt.print.Paper: void setImageableArea(double,double,double,double)>(d13, d12, $d2, $d3);

     label3:
        virtualinvoke $r2.<java.awt.print.PageFormat: void setPaper(java.awt.print.Paper)>($r10);

        return $r2;
    }

    public java.awt.print.Printable getPrintable(int) throws java.lang.IndexOutOfBoundsException
    {
        org.apache.pdfbox.pdmodel.PDPageable r0;
        java.util.List $r1;
        int i0;
        java.lang.Object $r2;
        java.awt.print.Printable $r3;

        r0 := @this: org.apache.pdfbox.pdmodel.PDPageable;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.pdfbox.pdmodel.PDPageable: java.util.List pages>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (java.awt.print.Printable) $r2;

        return $r3;
    }

    public int print(java.awt.Graphics, java.awt.print.PageFormat, int) throws java.awt.print.PrinterException
    {
        java.awt.print.PrinterIOException $r9;
        java.io.IOException $r8;
        org.apache.pdfbox.pdmodel.common.PDRectangle $r4;
        org.apache.pdfbox.pdmodel.PDPageable r0;
        java.util.List $r1, $r2;
        java.awt.Dimension $r7;
        org.apache.pdfbox.pdfviewer.PageDrawer $r5;
        int i0, $i1;
        java.awt.Graphics r6;
        java.lang.Object $r3;
        org.apache.pdfbox.pdmodel.PDPage r11;
        java.awt.print.PageFormat r10;

        r0 := @this: org.apache.pdfbox.pdmodel.PDPageable;

        r6 := @parameter0: java.awt.Graphics;

        r10 := @parameter1: java.awt.print.PageFormat;

        i0 := @parameter2: int;

        if 0 > i0 goto label4;

        $r1 = r0.<org.apache.pdfbox.pdmodel.PDPageable: java.util.List pages>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i0 >= $i1 goto label4;

     label1:
        $r2 = r0.<org.apache.pdfbox.pdmodel.PDPageable: java.util.List pages>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        r11 = (org.apache.pdfbox.pdmodel.PDPage) $r3;

        $r4 = virtualinvoke r11.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDRectangle findCropBox()>();

        $r5 = new org.apache.pdfbox.pdfviewer.PageDrawer;

        specialinvoke $r5.<org.apache.pdfbox.pdfviewer.PageDrawer: void <init>()>();

        $r7 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.common.PDRectangle: java.awt.Dimension createDimension()>();

        virtualinvoke $r5.<org.apache.pdfbox.pdfviewer.PageDrawer: void drawPage(java.awt.Graphics,org.apache.pdfbox.pdmodel.PDPage,java.awt.Dimension)>(r6, r11, $r7);

        virtualinvoke $r5.<org.apache.pdfbox.pdfviewer.PageDrawer: void dispose()>();

     label2:
        return 0;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.awt.print.PrinterIOException;

        specialinvoke $r9.<java.awt.print.PrinterIOException: void <init>(java.io.IOException)>($r8);

        throw $r9;

     label4:
        return 1;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
