public class groovyjarjarantlr.NameSpace extends java.lang.Object
{
    private java.util.Vector names;
    private java.lang.String _name;

    public void <init>(java.lang.String)
    {
        java.util.Vector $r1;
        java.lang.String $r2, r3;
        groovyjarjarantlr.NameSpace r0;

        r0 := @this: groovyjarjarantlr.NameSpace;

        r3 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        r0.<groovyjarjarantlr.NameSpace: java.util.Vector names> = $r1;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(java.lang.String)>(r3);

        r0.<groovyjarjarantlr.NameSpace: java.lang.String _name> = $r2;

        virtualinvoke r0.<groovyjarjarantlr.NameSpace: void parse(java.lang.String)>(r3);

        return;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        groovyjarjarantlr.NameSpace r0;

        r0 := @this: groovyjarjarantlr.NameSpace;

        $r1 = r0.<groovyjarjarantlr.NameSpace: java.lang.String _name>;

        return $r1;
    }

    protected void parse(java.lang.String)
    {
        java.util.Vector $r3;
        java.util.StringTokenizer $r0;
        java.lang.String r1, $r4;
        groovyjarjarantlr.NameSpace r2;
        boolean $z0;

        r2 := @this: groovyjarjarantlr.NameSpace;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.util.StringTokenizer;

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, "::");

     label1:
        $z0 = virtualinvoke $r0.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label2;

        $r3 = r2.<groovyjarjarantlr.NameSpace: java.util.Vector names>;

        $r4 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        goto label1;

     label2:
        return;
    }

    void emitDeclarations(java.io.PrintWriter)
    {
        java.io.PrintWriter r5;
        java.util.Enumeration $r2;
        java.util.Vector $r1;
        java.lang.StringBuffer $r6, $r7, $r8, $r9;
        java.lang.Object $r3;
        java.lang.String r4, $r10;
        groovyjarjarantlr.NameSpace r0;
        boolean $z0;

        r0 := @this: groovyjarjarantlr.NameSpace;

        r5 := @parameter0: java.io.PrintWriter;

        $r1 = r0.<groovyjarjarantlr.NameSpace: java.util.Vector names>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.util.Enumeration elements()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        r4 = (java.lang.String) $r3;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ANTLR_BEGIN_NAMESPACE(");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        goto label1;

     label2:
        return;
    }

    void emitClosures(java.io.PrintWriter)
    {
        java.io.PrintWriter r2;
        java.util.Vector $r1;
        int $i0, i1;
        groovyjarjarantlr.NameSpace r0;

        r0 := @this: groovyjarjarantlr.NameSpace;

        r2 := @parameter0: java.io.PrintWriter;

        i1 = 0;

     label1:
        $r1 = r0.<groovyjarjarantlr.NameSpace: java.util.Vector names>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if i1 >= $i0 goto label2;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("ANTLR_END_NAMESPACE");

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
}
