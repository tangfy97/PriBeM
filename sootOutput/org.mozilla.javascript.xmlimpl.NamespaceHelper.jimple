class org.mozilla.javascript.xmlimpl.NamespaceHelper extends java.lang.Object
{
    private org.mozilla.javascript.xmlimpl.XMLLibImpl lib;
    private final java.util.Map prefixToURI;
    private final java.util.Map uriToPrefix;
    private final java.util.Set undeclared;

    private void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl)
    {
        java.util.HashMap $r1, $r2;
        java.util.HashSet $r3, $r6;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r4;
        java.util.Map $r5, $r7;
        org.mozilla.javascript.xmlimpl.NamespaceHelper r0;

        r0 := @this: org.mozilla.javascript.xmlimpl.NamespaceHelper;

        r4 := @parameter0: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.mozilla.javascript.xmlimpl.NamespaceHelper: java.util.Map prefixToURI> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.mozilla.javascript.xmlimpl.NamespaceHelper: java.util.Map uriToPrefix> = $r2;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<org.mozilla.javascript.xmlimpl.NamespaceHelper: java.util.Set undeclared> = $r3;

        r0.<org.mozilla.javascript.xmlimpl.NamespaceHelper: org.mozilla.javascript.xmlimpl.XMLLibImpl lib> = r4;

        $r5 = r0.<org.mozilla.javascript.xmlimpl.NamespaceHelper: java.util.Map prefixToURI>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("", "");

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>("");

        $r7 = r0.<org.mozilla.javascript.xmlimpl.NamespaceHelper: java.util.Map uriToPrefix>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("", $r6);

        return;
    }

    private void declareNamespace(java.lang.String, java.lang.String, org.mozilla.javascript.ObjArray)
    {
        java.util.HashSet $r14;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r13;
        java.util.Map $r2, $r5, $r8, $r10, $r15;
        java.lang.String r1, r4, r7;
        org.mozilla.javascript.xmlimpl.Namespace $r12;
        boolean $z0;
        java.util.Set r16, r17;
        org.mozilla.javascript.ObjArray r9;
        org.mozilla.javascript.xmlimpl.NamespaceHelper r0;
        java.lang.Object $r3, $r6, $r11;

        r0 := @this: org.mozilla.javascript.xmlimpl.NamespaceHelper;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r9 := @parameter2: org.mozilla.javascript.ObjArray;

        $r2 = r0.<org.mozilla.javascript.xmlimpl.NamespaceHelper: java.util.Map uriToPrefix>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r16 = (java.util.Set) $r3;

        if r16 != null goto label1;

        $r14 = new java.util.HashSet;

        specialinvoke $r14.<java.util.HashSet: void <init>()>();

        r16 = $r14;

        $r15 = r0.<org.mozilla.javascript.xmlimpl.NamespaceHelper: java.util.Map uriToPrefix>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r14);

     label1:
        $z0 = interfaceinvoke r16.<java.util.Set: boolean contains(java.lang.Object)>(r4);

        if $z0 != 0 goto label3;

        $r5 = r0.<org.mozilla.javascript.xmlimpl.NamespaceHelper: java.util.Map prefixToURI>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r7 = (java.lang.String) $r6;

        interfaceinvoke r16.<java.util.Set: boolean add(java.lang.Object)>(r4);

        $r8 = r0.<org.mozilla.javascript.xmlimpl.NamespaceHelper: java.util.Map prefixToURI>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r1);

        if r9 == null goto label2;

        $r12 = new org.mozilla.javascript.xmlimpl.Namespace;

        $r13 = r0.<org.mozilla.javascript.xmlimpl.NamespaceHelper: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        specialinvoke $r12.<org.mozilla.javascript.xmlimpl.Namespace: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,java.lang.String,java.lang.String)>($r13, r4, r1);

        virtualinvoke r9.<org.mozilla.javascript.ObjArray: void add(java.lang.Object)>($r12);

     label2:
        if r7 == null goto label3;

        $r10 = r0.<org.mozilla.javascript.xmlimpl.NamespaceHelper: java.util.Map uriToPrefix>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        r17 = (java.util.Set) $r11;

        interfaceinvoke r17.<java.util.Set: boolean remove(java.lang.Object)>(r4);

     label3:
        return;
    }

    private void processName(org.apache.xmlbeans.XmlCursor, org.mozilla.javascript.ObjArray)
    {
        org.apache.xmlbeans.XmlCursor r0;
        java.util.Set r6, $r7;
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r10;
        java.util.Map $r4;
        org.mozilla.javascript.ObjArray r8;
        int $i0;
        org.mozilla.javascript.xmlimpl.NamespaceHelper r3;
        java.lang.Object $r5;
        javax.xml.namespace.QName $r1;
        java.lang.String $r2;
        org.mozilla.javascript.xmlimpl.Namespace $r9;

        r3 := @this: org.mozilla.javascript.xmlimpl.NamespaceHelper;

        r0 := @parameter0: org.apache.xmlbeans.XmlCursor;

        r8 := @parameter1: org.mozilla.javascript.ObjArray;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        $r2 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r4 = r3.<org.mozilla.javascript.xmlimpl.NamespaceHelper: java.util.Map uriToPrefix>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r6 = (java.util.Set) $r5;

        if r6 == null goto label1;

        $i0 = interfaceinvoke r6.<java.util.Set: int size()>();

        if $i0 != 0 goto label2;

     label1:
        $r7 = r3.<org.mozilla.javascript.xmlimpl.NamespaceHelper: java.util.Set undeclared>;

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r2);

        if r8 == null goto label2;

        $r9 = new org.mozilla.javascript.xmlimpl.Namespace;

        $r10 = r3.<org.mozilla.javascript.xmlimpl.NamespaceHelper: org.mozilla.javascript.xmlimpl.XMLLibImpl lib>;

        specialinvoke $r9.<org.mozilla.javascript.xmlimpl.Namespace: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,java.lang.String)>($r10, $r2);

        virtualinvoke r8.<org.mozilla.javascript.ObjArray: void add(java.lang.Object)>($r9);

     label2:
        return;
    }

    private void update(org.apache.xmlbeans.XmlCursor, org.mozilla.javascript.ObjArray)
    {
        org.apache.xmlbeans.XmlCursor r0;
        org.apache.xmlbeans.XmlCursor$TokenType $r6;
        org.mozilla.javascript.ObjArray r2;
        org.mozilla.javascript.xmlimpl.NamespaceHelper r1;
        javax.xml.namespace.QName $r3;
        java.lang.String $r4, $r5;
        boolean $z0, $z1, z2;

        r1 := @this: org.mozilla.javascript.xmlimpl.NamespaceHelper;

        r0 := @parameter0: org.apache.xmlbeans.XmlCursor;

        r2 := @parameter1: org.mozilla.javascript.ObjArray;

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: void push()>();

     label1:
        $r6 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        $z1 = virtualinvoke $r6.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isAnyAttr()>();

        if $z1 == 0 goto label2;

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isNamespace()>();

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        $r4 = virtualinvoke $r3.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r5 = virtualinvoke $r3.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        specialinvoke r1.<org.mozilla.javascript.xmlimpl.NamespaceHelper: void declareNamespace(java.lang.String,java.lang.String,org.mozilla.javascript.ObjArray)>($r4, $r5, r2);

        goto label1;

     label2:
        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        specialinvoke r1.<org.mozilla.javascript.xmlimpl.NamespaceHelper: void processName(org.apache.xmlbeans.XmlCursor,org.mozilla.javascript.ObjArray)>(r0, r2);

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: void push()>();

        z2 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean toFirstAttribute()>();

     label3:
        if z2 == 0 goto label4;

        specialinvoke r1.<org.mozilla.javascript.xmlimpl.NamespaceHelper: void processName(org.apache.xmlbeans.XmlCursor,org.mozilla.javascript.ObjArray)>(r0, r2);

        z2 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean toNextAttribute()>();

        goto label3;

     label4:
        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        return;
    }

    public static java.lang.Object[] inScopeNamespaces(org.mozilla.javascript.xmlimpl.XMLLibImpl, org.apache.xmlbeans.XmlCursor)
    {
        java.lang.Object[] $r9;
        org.apache.xmlbeans.XmlCursor r3;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r2;
        java.util.Map $r4;
        int i0, i1;
        java.lang.String $r12, $r16, $r18;
        org.mozilla.javascript.xmlimpl.Namespace $r10, $r14;
        boolean $z0, $z1, $z2, $z3;
        java.util.Map$Entry r19;
        java.util.Iterator $r6, $r8;
        java.util.Set $r5, $r7;
        org.mozilla.javascript.ObjArray $r0;
        org.mozilla.javascript.xmlimpl.NamespaceHelper $r1;
        java.lang.Object $r11, $r13, $r15, $r17;

        r2 := @parameter0: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r3 := @parameter1: org.apache.xmlbeans.XmlCursor;

        $r0 = new org.mozilla.javascript.ObjArray;

        specialinvoke $r0.<org.mozilla.javascript.ObjArray: void <init>()>();

        $r1 = new org.mozilla.javascript.xmlimpl.NamespaceHelper;

        specialinvoke $r1.<org.mozilla.javascript.xmlimpl.NamespaceHelper: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl)>(r2);

        interfaceinvoke r3.<org.apache.xmlbeans.XmlCursor: void push()>();

        i0 = 0;

     label1:
        $z0 = interfaceinvoke r3.<org.apache.xmlbeans.XmlCursor: boolean hasPrevToken()>();

        if $z0 == 0 goto label3;

        $z3 = interfaceinvoke r3.<org.apache.xmlbeans.XmlCursor: boolean isContainer()>();

        if $z3 == 0 goto label2;

        interfaceinvoke r3.<org.apache.xmlbeans.XmlCursor: void push()>();

        i0 = i0 + 1;

     label2:
        interfaceinvoke r3.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        goto label1;

     label3:
        i1 = 0;

     label4:
        if i1 >= i0 goto label5;

        interfaceinvoke r3.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        specialinvoke $r1.<org.mozilla.javascript.xmlimpl.NamespaceHelper: void update(org.apache.xmlbeans.XmlCursor,org.mozilla.javascript.ObjArray)>(r3, null);

        i1 = i1 + 1;

        goto label4;

     label5:
        $r4 = $r1.<org.mozilla.javascript.xmlimpl.NamespaceHelper: java.util.Map prefixToURI>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r13 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r19 = (java.util.Map$Entry) $r13;

        $r14 = new org.mozilla.javascript.xmlimpl.Namespace;

        $r15 = interfaceinvoke r19.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r16 = (java.lang.String) $r15;

        $r17 = interfaceinvoke r19.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18 = (java.lang.String) $r17;

        specialinvoke $r14.<org.mozilla.javascript.xmlimpl.Namespace: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,java.lang.String,java.lang.String)>(r2, $r16, $r18);

        virtualinvoke $r0.<org.mozilla.javascript.ObjArray: void add(java.lang.Object)>($r14);

        goto label6;

     label7:
        $r7 = $r1.<org.mozilla.javascript.xmlimpl.NamespaceHelper: java.util.Set undeclared>;

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label8:
        $z2 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label9;

        $r10 = new org.mozilla.javascript.xmlimpl.Namespace;

        $r11 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.lang.String) $r11;

        specialinvoke $r10.<org.mozilla.javascript.xmlimpl.Namespace: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,java.lang.String)>(r2, $r12);

        virtualinvoke $r0.<org.mozilla.javascript.ObjArray: void add(java.lang.Object)>($r10);

        goto label8;

     label9:
        interfaceinvoke r3.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        $r9 = virtualinvoke $r0.<org.mozilla.javascript.ObjArray: java.lang.Object[] toArray()>();

        return $r9;
    }

    static org.mozilla.javascript.xmlimpl.Namespace getNamespace(org.mozilla.javascript.xmlimpl.XMLLibImpl, org.apache.xmlbeans.XmlCursor, java.lang.Object[])
    {
        java.lang.Object[] r2;
        org.apache.xmlbeans.XmlCursor r0;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r4;
        int $i0, i1;
        java.lang.String $r7, $r8, $r9, $r10, r12, r13;
        org.mozilla.javascript.xmlimpl.Namespace $r3, r6, $r11, r14;
        boolean $z0, $z1, $z2;
        java.lang.Object $r5;
        javax.xml.namespace.QName $r1;

        r4 := @parameter0: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r0 := @parameter1: org.apache.xmlbeans.XmlCursor;

        r2 := @parameter2: java.lang.Object[];

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isProcinst()>();

        if $z0 == 0 goto label01;

        r12 = "";

        r13 = "";

        goto label02;

     label01:
        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        r12 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        r13 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

     label02:
        if r2 != null goto label03;

        $r11 = new org.mozilla.javascript.xmlimpl.Namespace;

        specialinvoke $r11.<org.mozilla.javascript.xmlimpl.Namespace: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,java.lang.String,java.lang.String)>(r4, r13, r12);

        return $r11;

     label03:
        r14 = null;

        i1 = 0;

     label04:
        $i0 = lengthof r2;

        if i1 == $i0 goto label09;

        $r5 = r2[i1];

        r6 = (org.mozilla.javascript.xmlimpl.Namespace) $r5;

        if r6 != null goto label05;

        goto label08;

     label05:
        $r7 = virtualinvoke r6.<org.mozilla.javascript.xmlimpl.Namespace: java.lang.String uri()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r12);

        if $z1 == 0 goto label08;

        $r8 = virtualinvoke r6.<org.mozilla.javascript.xmlimpl.Namespace: java.lang.String prefix()>();

        $z2 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z2 == 0 goto label06;

        r14 = r6;

        goto label09;

     label06:
        if r14 == null goto label07;

        $r9 = virtualinvoke r14.<org.mozilla.javascript.xmlimpl.Namespace: java.lang.String prefix()>();

        if $r9 != null goto label08;

        $r10 = virtualinvoke r6.<org.mozilla.javascript.xmlimpl.Namespace: java.lang.String prefix()>();

        if $r10 == null goto label08;

     label07:
        r14 = r6;

     label08:
        i1 = i1 + 1;

        goto label04;

     label09:
        if r14 != null goto label10;

        $r3 = new org.mozilla.javascript.xmlimpl.Namespace;

        specialinvoke $r3.<org.mozilla.javascript.xmlimpl.Namespace: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,java.lang.String,java.lang.String)>(r4, r13, r12);

        r14 = $r3;

     label10:
        return r14;
    }

    public static java.lang.Object[] namespaceDeclarations(org.mozilla.javascript.xmlimpl.XMLLibImpl, org.apache.xmlbeans.XmlCursor)
    {
        java.lang.Object[] $r4;
        org.apache.xmlbeans.XmlCursor r3;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r2;
        org.mozilla.javascript.ObjArray $r0;
        int $i0, i1, i2;
        org.mozilla.javascript.xmlimpl.NamespaceHelper $r1;
        boolean $z0, $z1;

        r2 := @parameter0: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r3 := @parameter1: org.apache.xmlbeans.XmlCursor;

        $r0 = new org.mozilla.javascript.ObjArray;

        specialinvoke $r0.<org.mozilla.javascript.ObjArray: void <init>()>();

        $r1 = new org.mozilla.javascript.xmlimpl.NamespaceHelper;

        specialinvoke $r1.<org.mozilla.javascript.xmlimpl.NamespaceHelper: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl)>(r2);

        interfaceinvoke r3.<org.apache.xmlbeans.XmlCursor: void push()>();

        i1 = 0;

     label1:
        $z0 = interfaceinvoke r3.<org.apache.xmlbeans.XmlCursor: boolean hasPrevToken()>();

        if $z0 == 0 goto label3;

        $z1 = interfaceinvoke r3.<org.apache.xmlbeans.XmlCursor: boolean isContainer()>();

        if $z1 == 0 goto label2;

        interfaceinvoke r3.<org.apache.xmlbeans.XmlCursor: void push()>();

        i1 = i1 + 1;

     label2:
        interfaceinvoke r3.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        goto label1;

     label3:
        i2 = 0;

     label4:
        $i0 = i1 - 1;

        if i2 >= $i0 goto label5;

        interfaceinvoke r3.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        specialinvoke $r1.<org.mozilla.javascript.xmlimpl.NamespaceHelper: void update(org.apache.xmlbeans.XmlCursor,org.mozilla.javascript.ObjArray)>(r3, null);

        i2 = i2 + 1;

        goto label4;

     label5:
        if i1 <= 0 goto label6;

        interfaceinvoke r3.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        specialinvoke $r1.<org.mozilla.javascript.xmlimpl.NamespaceHelper: void update(org.apache.xmlbeans.XmlCursor,org.mozilla.javascript.ObjArray)>(r3, $r0);

     label6:
        interfaceinvoke r3.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        $r4 = virtualinvoke $r0.<org.mozilla.javascript.ObjArray: java.lang.Object[] toArray()>();

        return $r4;
    }

    public static java.util.Map getAllNamespaces(org.mozilla.javascript.xmlimpl.XMLLibImpl, org.apache.xmlbeans.XmlCursor)
    {
        org.apache.xmlbeans.XmlCursor r2;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r1;
        java.util.Map $r3;
        int i0, i1;
        org.mozilla.javascript.xmlimpl.NamespaceHelper $r0;
        boolean $z0, $z1;

        r1 := @parameter0: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r2 := @parameter1: org.apache.xmlbeans.XmlCursor;

        $r0 = new org.mozilla.javascript.xmlimpl.NamespaceHelper;

        specialinvoke $r0.<org.mozilla.javascript.xmlimpl.NamespaceHelper: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl)>(r1);

        interfaceinvoke r2.<org.apache.xmlbeans.XmlCursor: void push()>();

        i0 = 0;

     label1:
        $z0 = interfaceinvoke r2.<org.apache.xmlbeans.XmlCursor: boolean hasPrevToken()>();

        if $z0 == 0 goto label3;

        $z1 = interfaceinvoke r2.<org.apache.xmlbeans.XmlCursor: boolean isContainer()>();

        if $z1 == 0 goto label2;

        interfaceinvoke r2.<org.apache.xmlbeans.XmlCursor: void push()>();

        i0 = i0 + 1;

     label2:
        interfaceinvoke r2.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        goto label1;

     label3:
        i1 = 0;

     label4:
        if i1 >= i0 goto label5;

        interfaceinvoke r2.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        specialinvoke $r0.<org.mozilla.javascript.xmlimpl.NamespaceHelper: void update(org.apache.xmlbeans.XmlCursor,org.mozilla.javascript.ObjArray)>(r2, null);

        i1 = i1 + 1;

        goto label4;

     label5:
        interfaceinvoke r2.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        $r3 = $r0.<org.mozilla.javascript.xmlimpl.NamespaceHelper: java.util.Map prefixToURI>;

        return $r3;
    }

    public static void getNamespaces(org.apache.xmlbeans.XmlCursor, java.util.Map)
    {
        org.apache.xmlbeans.XmlCursor r0;
        org.apache.xmlbeans.XmlCursor$TokenType $r5;
        java.util.Map r4;
        javax.xml.namespace.QName $r1;
        java.lang.String $r2, $r3;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.xmlbeans.XmlCursor;

        r4 := @parameter1: java.util.Map;

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: void push()>();

     label1:
        $r5 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        $z1 = virtualinvoke $r5.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isAnyAttr()>();

        if $z1 == 0 goto label2;

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isNamespace()>();

        if $z0 == 0 goto label1;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        $r2 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r3 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        goto label1;

     label2:
        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        return;
    }

    public static void removeNamespace(org.apache.xmlbeans.XmlCursor, java.lang.String)
    {
        org.apache.xmlbeans.XmlCursor r0;
        org.apache.xmlbeans.XmlCursor$TokenType $r4;
        javax.xml.namespace.QName $r1;
        java.lang.String $r2, r3;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: org.apache.xmlbeans.XmlCursor;

        r3 := @parameter1: java.lang.String;

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: void push()>();

     label1:
        $r4 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        $z2 = virtualinvoke $r4.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isAnyAttr()>();

        if $z2 == 0 goto label2;

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean isNamespace()>();

        if $z0 == 0 goto label1;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: javax.xml.namespace.QName getName()>();

        $r2 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label1;

        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean removeXml()>();

        goto label2;

     label2:
        interfaceinvoke r0.<org.apache.xmlbeans.XmlCursor: boolean pop()>();

        return;
    }
}
