public final class org.codehaus.jackson.impl.ByteSourceBootstrapper extends java.lang.Object
{
    final org.codehaus.jackson.io.IOContext _context;
    final java.io.InputStream _in;
    final byte[] _inputBuffer;
    private int _inputPtr;
    private int _inputEnd;
    private final boolean _bufferRecyclable;
    protected int _inputProcessed;
    boolean _bigEndian;
    int _bytesPerChar;

    public void <init>(org.codehaus.jackson.io.IOContext, java.io.InputStream)
    {
        org.codehaus.jackson.io.IOContext r1;
        byte[] $r3;
        org.codehaus.jackson.impl.ByteSourceBootstrapper r0;
        java.io.InputStream r2;

        r0 := @this: org.codehaus.jackson.impl.ByteSourceBootstrapper;

        r1 := @parameter0: org.codehaus.jackson.io.IOContext;

        r2 := @parameter1: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bigEndian> = 1;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _bytesPerChar> = 0;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: org.codehaus.jackson.io.IOContext _context> = r1;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: java.io.InputStream _in> = r2;

        $r3 = virtualinvoke r1.<org.codehaus.jackson.io.IOContext: byte[] allocReadIOBuffer()>();

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer> = $r3;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr> = 0;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputEnd> = 0;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputProcessed> = 0;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bufferRecyclable> = 1;

        return;
    }

    public void <init>(org.codehaus.jackson.io.IOContext, byte[], int, int)
    {
        org.codehaus.jackson.io.IOContext r1;
        byte[] r2;
        int i0, i1, $i2, $i3;
        org.codehaus.jackson.impl.ByteSourceBootstrapper r0;

        r0 := @this: org.codehaus.jackson.impl.ByteSourceBootstrapper;

        r1 := @parameter0: org.codehaus.jackson.io.IOContext;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bigEndian> = 1;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _bytesPerChar> = 0;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: org.codehaus.jackson.io.IOContext _context> = r1;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: java.io.InputStream _in> = null;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer> = r2;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr> = i0;

        $i2 = i0 + i1;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputEnd> = $i2;

        $i3 = neg i0;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputProcessed> = $i3;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bufferRecyclable> = 0;

        return;
    }

    public org.codehaus.jackson.JsonEncoding detectEncoding() throws java.io.IOException, org.codehaus.jackson.JsonParseException
    {
        byte[] $r2, $r3, $r4, $r5, $r6, $r7;
        byte $b3, $b7, $b11, $b14, $b20, $b26;
        org.codehaus.jackson.io.IOContext $r11;
        short $s4, $s8, $s15, $s21, $s27, $s33, $s35, $s37, $s39, $s41;
        org.codehaus.jackson.JsonEncoding r8, $r9, $r10;
        java.lang.RuntimeException $r12;
        org.codehaus.jackson.impl.ByteSourceBootstrapper r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8;
        int $i0, $i1, $i2, $i5, $i6, $i9, $i10, $i12, $i13, $i16, $i17, $i18, $i19, $i22, $i23, $i24, $i25, $i28, $i29, i30, i31, $i32, $i34, $i36, $i38, $i40, $i42;

        r0 := @this: org.codehaus.jackson.impl.ByteSourceBootstrapper;

        z8 = 0;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean ensureLoaded(int)>(4);

        if $z0 == 0 goto label04;

        $r4 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer>;

        $i10 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $b11 = $r4[$i10];

        $i32 = (int) $b11;

        $i17 = $i32 << 24;

        $r5 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer>;

        $i12 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i13 = $i12 + 1;

        $b14 = $r5[$i13];

        $s33 = (short) $b14;

        $s15 = $s33 & 255;

        $i34 = (int) $s15;

        $i16 = $i34 << 16;

        $i23 = $i17 | $i16;

        $r6 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer>;

        $i18 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i19 = $i18 + 2;

        $b20 = $r6[$i19];

        $s35 = (short) $b20;

        $s21 = $s35 & 255;

        $i36 = (int) $s21;

        $i22 = $i36 << 8;

        $i28 = $i23 | $i22;

        $r7 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer>;

        $i24 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i25 = $i24 + 3;

        $b26 = $r7[$i25];

        $s37 = (short) $b26;

        $s27 = $s37 & 255;

        $i38 = (int) $s27;

        i30 = $i28 | $i38;

        $z5 = specialinvoke r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean handleBOM(int)>(i30);

        if $z5 == 0 goto label01;

        z8 = 1;

        goto label03;

     label01:
        $z6 = specialinvoke r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean checkUTF32(int)>(i30);

        if $z6 == 0 goto label02;

        z8 = 1;

        goto label03;

     label02:
        $i29 = i30 >>> 16;

        $z7 = specialinvoke r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean checkUTF16(int)>($i29);

        if $z7 == 0 goto label03;

        z8 = 1;

     label03:
        goto label05;

     label04:
        $z1 = virtualinvoke r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean ensureLoaded(int)>(2);

        if $z1 == 0 goto label05;

        $r2 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer>;

        $i2 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $b3 = $r2[$i2];

        $s39 = (short) $b3;

        $s4 = $s39 & 255;

        $i40 = (int) $s4;

        $i9 = $i40 << 8;

        $r3 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer>;

        $i5 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i6 = $i5 + 1;

        $b7 = $r3[$i6];

        $s41 = (short) $b7;

        $s8 = $s41 & 255;

        $i42 = (int) $s8;

        i31 = $i9 | $i42;

        $z4 = specialinvoke r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean checkUTF16(int)>(i31);

        if $z4 == 0 goto label05;

        z8 = 1;

     label05:
        if z8 != 0 goto label06;

        r8 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF8>;

        goto label13;

     label06:
        $i0 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _bytesPerChar>;

        if $i0 != 2 goto label09;

        $z3 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bigEndian>;

        if $z3 == 0 goto label07;

        $r9 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF16_BE>;

        goto label08;

     label07:
        $r9 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF16_LE>;

     label08:
        r8 = $r9;

        goto label13;

     label09:
        $i1 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _bytesPerChar>;

        if $i1 != 4 goto label12;

        $z2 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bigEndian>;

        if $z2 == 0 goto label10;

        $r10 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF32_BE>;

        goto label11;

     label10:
        $r10 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF32_LE>;

     label11:
        r8 = $r10;

        goto label13;

     label12:
        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>("Internal error");

        throw $r12;

     label13:
        $r11 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: org.codehaus.jackson.io.IOContext _context>;

        virtualinvoke $r11.<org.codehaus.jackson.io.IOContext: void setEncoding(org.codehaus.jackson.JsonEncoding)>(r8);

        return r8;
    }

    public java.io.Reader constructReader() throws java.io.IOException
    {
        org.codehaus.jackson.io.IOContext $r1, $r6, $r10, $r11;
        byte[] $r5, $r8, $r13;
        java.io.ByteArrayInputStream $r7;
        org.codehaus.jackson.JsonEncoding $r2, $r14;
        int[] $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r18;
        boolean $z0;
        org.codehaus.jackson.io.UTF32Reader $r9;
        org.codehaus.jackson.io.MergedStream $r4;
        java.lang.RuntimeException $r15;
        java.io.InputStreamReader $r17;
        org.codehaus.jackson.impl.ByteSourceBootstrapper r0;
        java.io.InputStream $r12, r16;

        r0 := @this: org.codehaus.jackson.impl.ByteSourceBootstrapper;

        $r1 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: org.codehaus.jackson.io.IOContext _context>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.io.IOContext: org.codehaus.jackson.JsonEncoding getEncoding()>();

        $r3 = <org.codehaus.jackson.impl.ByteSourceBootstrapper$1: int[] $SwitchMap$org$codehaus$jackson$JsonEncoding>;

        $i0 = virtualinvoke $r2.<org.codehaus.jackson.JsonEncoding: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label2;
            default: goto label5;
        };

     label1:
        $r9 = new org.codehaus.jackson.io.UTF32Reader;

        $r11 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: org.codehaus.jackson.io.IOContext _context>;

        $r12 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: java.io.InputStream _in>;

        $r13 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer>;

        $i8 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i9 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputEnd>;

        $r10 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: org.codehaus.jackson.io.IOContext _context>;

        $r14 = virtualinvoke $r10.<org.codehaus.jackson.io.IOContext: org.codehaus.jackson.JsonEncoding getEncoding()>();

        $z0 = virtualinvoke $r14.<org.codehaus.jackson.JsonEncoding: boolean isBigEndian()>();

        specialinvoke $r9.<org.codehaus.jackson.io.UTF32Reader: void <init>(org.codehaus.jackson.io.IOContext,java.io.InputStream,byte[],int,int,boolean)>($r11, $r12, $r13, $i8, $i9, $z0);

        return $r9;

     label2:
        r16 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: java.io.InputStream _in>;

        if r16 != null goto label3;

        $r7 = new java.io.ByteArrayInputStream;

        $r8 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer>;

        $i7 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i6 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputEnd>;

        specialinvoke $r7.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>($r8, $i7, $i6);

        r16 = $r7;

        goto label4;

     label3:
        $i3 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i2 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputEnd>;

        if $i3 >= $i2 goto label4;

        $r4 = new org.codehaus.jackson.io.MergedStream;

        $r6 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: org.codehaus.jackson.io.IOContext _context>;

        $r5 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer>;

        $i5 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i4 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputEnd>;

        specialinvoke $r4.<org.codehaus.jackson.io.MergedStream: void <init>(org.codehaus.jackson.io.IOContext,java.io.InputStream,byte[],int,int)>($r6, r16, $r5, $i5, $i4);

        r16 = $r4;

     label4:
        $r17 = new java.io.InputStreamReader;

        $r18 = virtualinvoke $r2.<org.codehaus.jackson.JsonEncoding: java.lang.String getJavaName()>();

        specialinvoke $r17.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r16, $r18);

        return $r17;

     label5:
        $r15 = new java.lang.RuntimeException;

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>("Internal error");

        throw $r15;
    }

    public org.codehaus.jackson.JsonParser constructParser(int, org.codehaus.jackson.ObjectCodec, org.codehaus.jackson.sym.BytesToNameCanonicalizer, org.codehaus.jackson.sym.CharsToNameCanonicalizer) throws java.io.IOException, org.codehaus.jackson.JsonParseException
    {
        org.codehaus.jackson.io.IOContext $r6, $r16;
        byte[] $r14;
        org.codehaus.jackson.impl.Utf8StreamParser $r13;
        org.codehaus.jackson.sym.CharsToNameCanonicalizer r9, $r10;
        org.codehaus.jackson.sym.BytesToNameCanonicalizer r11, $r12;
        org.codehaus.jackson.impl.ReaderBasedParser $r5;
        org.codehaus.jackson.JsonEncoding $r1, $r4;
        int i0, $i1, $i2;
        boolean $z0, $z1, $z2;
        org.codehaus.jackson.ObjectCodec r8;
        java.io.Reader $r7;
        org.codehaus.jackson.impl.ByteSourceBootstrapper r0;
        org.codehaus.jackson.JsonParser$Feature $r2, $r3;
        java.io.InputStream $r15;

        r0 := @this: org.codehaus.jackson.impl.ByteSourceBootstrapper;

        i0 := @parameter0: int;

        r8 := @parameter1: org.codehaus.jackson.ObjectCodec;

        r11 := @parameter2: org.codehaus.jackson.sym.BytesToNameCanonicalizer;

        r9 := @parameter3: org.codehaus.jackson.sym.CharsToNameCanonicalizer;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: org.codehaus.jackson.JsonEncoding detectEncoding()>();

        $r2 = <org.codehaus.jackson.JsonParser$Feature: org.codehaus.jackson.JsonParser$Feature CANONICALIZE_FIELD_NAMES>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser$Feature: boolean enabledIn(int)>(i0);

        $r3 = <org.codehaus.jackson.JsonParser$Feature: org.codehaus.jackson.JsonParser$Feature INTERN_FIELD_NAMES>;

        $z1 = virtualinvoke $r3.<org.codehaus.jackson.JsonParser$Feature: boolean enabledIn(int)>(i0);

        $r4 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF8>;

        if $r1 != $r4 goto label1;

        if $z0 == 0 goto label1;

        $r12 = virtualinvoke r11.<org.codehaus.jackson.sym.BytesToNameCanonicalizer: org.codehaus.jackson.sym.BytesToNameCanonicalizer makeChild(boolean,boolean)>($z0, $z1);

        $r13 = new org.codehaus.jackson.impl.Utf8StreamParser;

        $r16 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: org.codehaus.jackson.io.IOContext _context>;

        $r15 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: java.io.InputStream _in>;

        $r14 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer>;

        $i2 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i1 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputEnd>;

        $z2 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bufferRecyclable>;

        specialinvoke $r13.<org.codehaus.jackson.impl.Utf8StreamParser: void <init>(org.codehaus.jackson.io.IOContext,int,java.io.InputStream,org.codehaus.jackson.ObjectCodec,org.codehaus.jackson.sym.BytesToNameCanonicalizer,byte[],int,int,boolean)>($r16, i0, $r15, r8, $r12, $r14, $i2, $i1, $z2);

        return $r13;

     label1:
        $r5 = new org.codehaus.jackson.impl.ReaderBasedParser;

        $r6 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: org.codehaus.jackson.io.IOContext _context>;

        $r7 = virtualinvoke r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: java.io.Reader constructReader()>();

        $r10 = virtualinvoke r9.<org.codehaus.jackson.sym.CharsToNameCanonicalizer: org.codehaus.jackson.sym.CharsToNameCanonicalizer makeChild(boolean,boolean)>($z0, $z1);

        specialinvoke $r5.<org.codehaus.jackson.impl.ReaderBasedParser: void <init>(org.codehaus.jackson.io.IOContext,int,java.io.Reader,org.codehaus.jackson.ObjectCodec,org.codehaus.jackson.sym.CharsToNameCanonicalizer)>($r6, i0, $r7, r8, $r10);

        return $r5;
    }

    private boolean handleBOM(int) throws java.io.IOException
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i16;
        org.codehaus.jackson.impl.ByteSourceBootstrapper r0;

        r0 := @this: org.codehaus.jackson.impl.ByteSourceBootstrapper;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case -16842752: goto label4;
            case -131072: goto label2;
            case 65279: goto label1;
            case 65534: goto label3;
            default: goto label5;
        };

     label1:
        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bigEndian> = 1;

        $i8 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i9 = $i8 + 4;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr> = $i9;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _bytesPerChar> = 4;

        return 1;

     label2:
        $i10 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i11 = $i10 + 4;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr> = $i11;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _bytesPerChar> = 4;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bigEndian> = 0;

        return 1;

     label3:
        specialinvoke r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: void reportWeirdUCS4(java.lang.String)>("2143");

     label4:
        specialinvoke r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: void reportWeirdUCS4(java.lang.String)>("3412");

     label5:
        $i12 = i0 >>> 16;

        $i14 = (int) 65279;

        if $i12 != $i14 goto label6;

        $i6 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i7 = $i6 + 2;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr> = $i7;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _bytesPerChar> = 2;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bigEndian> = 1;

        return 1;

     label6:
        $i16 = (int) 65534;

        if $i12 != $i16 goto label7;

        $i4 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i5 = $i4 + 2;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr> = $i5;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _bytesPerChar> = 2;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bigEndian> = 0;

        return 1;

     label7:
        $i1 = i0 >>> 8;

        if $i1 != 15711167 goto label8;

        $i2 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i3 = $i2 + 3;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr> = $i3;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _bytesPerChar> = 1;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bigEndian> = 1;

        return 1;

     label8:
        return 0;
    }

    private boolean checkUTF32(int) throws java.io.IOException
    {
        int i0, $i1, $i2, $i3, $i4;
        org.codehaus.jackson.impl.ByteSourceBootstrapper r0;

        r0 := @this: org.codehaus.jackson.impl.ByteSourceBootstrapper;

        i0 := @parameter0: int;

        $i1 = i0 >> 8;

        if $i1 != 0 goto label1;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bigEndian> = 1;

        goto label5;

     label1:
        $i2 = i0 & 16777215;

        if $i2 != 0 goto label2;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bigEndian> = 0;

        goto label5;

     label2:
        $i3 = i0 & -16711681;

        if $i3 != 0 goto label3;

        specialinvoke r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: void reportWeirdUCS4(java.lang.String)>("3412");

        goto label5;

     label3:
        $i4 = i0 & -65281;

        if $i4 != 0 goto label4;

        specialinvoke r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: void reportWeirdUCS4(java.lang.String)>("2143");

        goto label5;

     label4:
        return 0;

     label5:
        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _bytesPerChar> = 4;

        return 1;
    }

    private boolean checkUTF16(int)
    {
        int i0, $i1, $i2, $i4;
        org.codehaus.jackson.impl.ByteSourceBootstrapper r0;

        r0 := @this: org.codehaus.jackson.impl.ByteSourceBootstrapper;

        i0 := @parameter0: int;

        $i4 = (int) 65280;

        $i1 = i0 & $i4;

        if $i1 != 0 goto label1;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bigEndian> = 1;

        goto label3;

     label1:
        $i2 = i0 & 255;

        if $i2 != 0 goto label2;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bigEndian> = 0;

        goto label3;

     label2:
        return 0;

     label3:
        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _bytesPerChar> = 2;

        return 1;
    }

    private void reportWeirdUCS4(java.lang.String) throws java.io.IOException
    {
        java.io.CharConversionException $r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        java.lang.String r3, $r6;
        org.codehaus.jackson.impl.ByteSourceBootstrapper r7;

        r7 := @this: org.codehaus.jackson.impl.ByteSourceBootstrapper;

        r3 := @parameter0: java.lang.String;

        $r0 = new java.io.CharConversionException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported UCS-4 endianness (");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") detected");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.io.CharConversionException: void <init>(java.lang.String)>($r6);

        throw $r0;
    }

    protected boolean ensureLoaded(int) throws java.io.IOException
    {
        byte[] $r2, $r3;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, $i12;
        org.codehaus.jackson.impl.ByteSourceBootstrapper r0;
        java.io.InputStream $r1, $r4;

        r0 := @this: org.codehaus.jackson.impl.ByteSourceBootstrapper;

        i2 := @parameter0: int;

        $i1 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputEnd>;

        $i0 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        i9 = $i1 - $i0;

     label1:
        if i9 >= i2 goto label5;

        $r1 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: java.io.InputStream _in>;

        if $r1 != null goto label2;

        $i12 = (int) -1;

        i10 = $i12;

        goto label3;

     label2:
        $r4 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: java.io.InputStream _in>;

        $r3 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer>;

        $i6 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputEnd>;

        $r2 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer>;

        $i4 = lengthof $r2;

        $i3 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputEnd>;

        $i5 = $i4 - $i3;

        i10 = virtualinvoke $r4.<java.io.InputStream: int read(byte[],int,int)>($r3, $i6, $i5);

     label3:
        if i10 >= 1 goto label4;

        return 0;

     label4:
        $i7 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputEnd>;

        $i8 = $i7 + i10;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputEnd> = $i8;

        i9 = i9 + i10;

        goto label1;

     label5:
        return 1;
    }
}
