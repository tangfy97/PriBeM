public class org.apache.commons.configuration.plist.PropertyListConfiguration extends org.apache.commons.configuration.AbstractHierarchicalFileConfiguration
{
    private static final org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser DATE_SEPARATOR_PARSER;
    private static final org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser TIME_SEPARATOR_PARSER;
    private static final org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser BLANK_SEPARATOR_PARSER;
    private static final org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser[] DATE_PARSERS;
    private static final java.lang.String TIME_ZONE_PREFIX;
    private static final long serialVersionUID;
    private static final int MILLIS_PER_MINUTE;
    private static final int MINUTES_PER_HOUR;
    private static final int INDENT_SIZE;
    private static final int TIME_ZONE_LENGTH;
    private static final char PAD_CHAR;

    public void <init>()
    {
        org.apache.commons.configuration.plist.PropertyListConfiguration r0;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListConfiguration;

        specialinvoke r0.<org.apache.commons.configuration.AbstractHierarchicalFileConfiguration: void <init>()>();

        return;
    }

    public void <init>(org.apache.commons.configuration.HierarchicalConfiguration)
    {
        org.apache.commons.configuration.HierarchicalConfiguration r1;
        org.apache.commons.configuration.plist.PropertyListConfiguration r0;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListConfiguration;

        r1 := @parameter0: org.apache.commons.configuration.HierarchicalConfiguration;

        specialinvoke r0.<org.apache.commons.configuration.AbstractHierarchicalFileConfiguration: void <init>(org.apache.commons.configuration.HierarchicalConfiguration)>(r1);

        return;
    }

    public void <init>(java.lang.String) throws org.apache.commons.configuration.ConfigurationException
    {
        java.lang.String r1;
        org.apache.commons.configuration.plist.PropertyListConfiguration r0;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListConfiguration;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.configuration.AbstractHierarchicalFileConfiguration: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.io.File) throws org.apache.commons.configuration.ConfigurationException
    {
        org.apache.commons.configuration.plist.PropertyListConfiguration r0;
        java.io.File r1;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListConfiguration;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<org.apache.commons.configuration.AbstractHierarchicalFileConfiguration: void <init>(java.io.File)>(r1);

        return;
    }

    public void <init>(java.net.URL) throws org.apache.commons.configuration.ConfigurationException
    {
        org.apache.commons.configuration.plist.PropertyListConfiguration r0;
        java.net.URL r1;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListConfiguration;

        r1 := @parameter0: java.net.URL;

        specialinvoke r0.<org.apache.commons.configuration.AbstractHierarchicalFileConfiguration: void <init>(java.net.URL)>(r1);

        return;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        java.lang.Throwable $r3;
        java.lang.Object r0;
        java.lang.String r2;
        org.apache.commons.configuration.plist.PropertyListConfiguration r1;
        boolean $z0;

        r1 := @this: org.apache.commons.configuration.plist.PropertyListConfiguration;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof byte[];

        if $z0 == 0 goto label6;

        virtualinvoke r1.<org.apache.commons.configuration.plist.PropertyListConfiguration: void fireEvent(int,java.lang.String,java.lang.Object,boolean)>(3, r2, r0, 1);

        virtualinvoke r1.<org.apache.commons.configuration.plist.PropertyListConfiguration: void setDetailEvents(boolean)>(0);

     label1:
        virtualinvoke r1.<org.apache.commons.configuration.plist.PropertyListConfiguration: void clearProperty(java.lang.String)>(r2);

        virtualinvoke r1.<org.apache.commons.configuration.plist.PropertyListConfiguration: void addPropertyDirect(java.lang.String,java.lang.Object)>(r2, r0);

     label2:
        virtualinvoke r1.<org.apache.commons.configuration.plist.PropertyListConfiguration: void setDetailEvents(boolean)>(1);

        goto label5;

     label3:
        $r3 := @caughtexception;

     label4:
        virtualinvoke r1.<org.apache.commons.configuration.plist.PropertyListConfiguration: void setDetailEvents(boolean)>(1);

        throw $r3;

     label5:
        virtualinvoke r1.<org.apache.commons.configuration.plist.PropertyListConfiguration: void fireEvent(int,java.lang.String,java.lang.Object,boolean)>(3, r2, r0, 0);

        goto label7;

     label6:
        specialinvoke r1.<org.apache.commons.configuration.AbstractHierarchicalFileConfiguration: void setProperty(java.lang.String,java.lang.Object)>(r2, r0);

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void addProperty(java.lang.String, java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String r2;
        org.apache.commons.configuration.plist.PropertyListConfiguration r1;
        boolean $z0;

        r1 := @this: org.apache.commons.configuration.plist.PropertyListConfiguration;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof byte[];

        if $z0 == 0 goto label1;

        virtualinvoke r1.<org.apache.commons.configuration.plist.PropertyListConfiguration: void fireEvent(int,java.lang.String,java.lang.Object,boolean)>(1, r2, r0, 1);

        virtualinvoke r1.<org.apache.commons.configuration.plist.PropertyListConfiguration: void addPropertyDirect(java.lang.String,java.lang.Object)>(r2, r0);

        virtualinvoke r1.<org.apache.commons.configuration.plist.PropertyListConfiguration: void fireEvent(int,java.lang.String,java.lang.Object,boolean)>(1, r2, r0, 0);

        goto label2;

     label1:
        specialinvoke r1.<org.apache.commons.configuration.AbstractHierarchicalFileConfiguration: void addProperty(java.lang.String,java.lang.Object)>(r2, r0);

     label2:
        return;
    }

    public void load(java.io.Reader) throws org.apache.commons.configuration.ConfigurationException
    {
        org.apache.commons.configuration.plist.ParseException $r5;
        org.apache.commons.configuration.plist.PropertyListParser $r0;
        java.io.Reader r1;
        org.apache.commons.configuration.HierarchicalConfiguration$Node $r4;
        org.apache.commons.configuration.plist.PropertyListConfiguration $r2, r3;
        org.apache.commons.configuration.ConfigurationException $r6;

        r3 := @this: org.apache.commons.configuration.plist.PropertyListConfiguration;

        r1 := @parameter0: java.io.Reader;

        $r0 = new org.apache.commons.configuration.plist.PropertyListParser;

        specialinvoke $r0.<org.apache.commons.configuration.plist.PropertyListParser: void <init>(java.io.Reader)>(r1);

     label1:
        $r2 = virtualinvoke $r0.<org.apache.commons.configuration.plist.PropertyListParser: org.apache.commons.configuration.plist.PropertyListConfiguration parse()>();

        $r4 = virtualinvoke $r2.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.HierarchicalConfiguration$Node getRoot()>();

        virtualinvoke r3.<org.apache.commons.configuration.plist.PropertyListConfiguration: void setRoot(org.apache.commons.configuration.HierarchicalConfiguration$Node)>($r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.apache.commons.configuration.ConfigurationException;

        specialinvoke $r6.<org.apache.commons.configuration.ConfigurationException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label4:
        return;

        catch org.apache.commons.configuration.plist.ParseException from label1 to label2 with label3;
    }

    public void save(java.io.Writer) throws org.apache.commons.configuration.ConfigurationException
    {
        java.io.PrintWriter $r0;
        java.io.Writer r1;
        org.apache.commons.configuration.HierarchicalConfiguration$Node $r3;
        org.apache.commons.configuration.plist.PropertyListConfiguration r2;

        r2 := @this: org.apache.commons.configuration.plist.PropertyListConfiguration;

        r1 := @parameter0: java.io.Writer;

        $r0 = new java.io.PrintWriter;

        specialinvoke $r0.<java.io.PrintWriter: void <init>(java.io.Writer)>(r1);

        $r3 = virtualinvoke r2.<org.apache.commons.configuration.plist.PropertyListConfiguration: org.apache.commons.configuration.HierarchicalConfiguration$Node getRoot()>();

        specialinvoke r2.<org.apache.commons.configuration.plist.PropertyListConfiguration: void printNode(java.io.PrintWriter,int,org.apache.commons.configuration.HierarchicalConfiguration$Node)>($r0, 0, $r3);

        virtualinvoke $r0.<java.io.PrintWriter: void flush()>();

        return;
    }

    private void printNode(java.io.PrintWriter, int, org.apache.commons.configuration.HierarchicalConfiguration$Node)
    {
        org.apache.commons.configuration.plist.PropertyListConfiguration r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.io.PrintWriter r8;
        java.util.List $r4, $r23, $r24;
        java.util.ArrayList $r3;
        java.lang.StringBuffer $r9, $r10, $r11, $r14, $r15, $r16, $r25, $r26, $r29, $r30;
        int i0, $i1, $i2;
        java.lang.String $r0, $r2, $r12, $r17, $r27, $r28, $r31;
        java.util.Iterator $r5, $r13;
        org.apache.commons.configuration.HierarchicalConfiguration$Node r1, $r18, r32, r33;
        java.lang.Object $r6, $r19, $r20, $r21, $r22;

        r7 := @this: org.apache.commons.configuration.plist.PropertyListConfiguration;

        r8 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        r1 := @parameter2: org.apache.commons.configuration.HierarchicalConfiguration$Node;

        $i1 = i0 * 4;

        $r0 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String repeat(java.lang.String,int)>(" ", $i1);

        $r2 = virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration$Node: java.lang.String getName()>();

        if $r2 == null goto label01;

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r27 = virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration$Node: java.lang.String getName()>();

        $r28 = virtualinvoke r7.<org.apache.commons.configuration.plist.PropertyListConfiguration: java.lang.String quoteString(java.lang.String)>($r27);

        $r29 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r8.<java.io.PrintWriter: void print(java.lang.String)>($r31);

     label01:
        $r3 = new java.util.ArrayList;

        $r4 = virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration$Node: java.util.List getChildren()>();

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        $r5 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z5 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label05;

        $r21 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r32 = (org.apache.commons.configuration.HierarchicalConfiguration$Node) $r21;

        $r22 = virtualinvoke r32.<org.apache.commons.configuration.HierarchicalConfiguration$Node: java.lang.Object getValue()>();

        if $r22 != null goto label04;

        $r23 = virtualinvoke r32.<org.apache.commons.configuration.HierarchicalConfiguration$Node: java.util.List getChildren()>();

        if $r23 == null goto label03;

        $r24 = virtualinvoke r32.<org.apache.commons.configuration.HierarchicalConfiguration$Node: java.util.List getChildren()>();

        $z4 = interfaceinvoke $r24.<java.util.List: boolean isEmpty()>();

        if $z4 == 0 goto label04;

     label03:
        interfaceinvoke $r5.<java.util.Iterator: void remove()>();

     label04:
        goto label02;

     label05:
        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label12;

        if i0 <= 0 goto label06;

        virtualinvoke r8.<java.io.PrintWriter: void println()>();

     label06:
        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r8.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        $r13 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z6 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label11;

        $r19 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r33 = (org.apache.commons.configuration.HierarchicalConfiguration$Node) $r19;

        $i2 = i0 + 1;

        specialinvoke r7.<org.apache.commons.configuration.plist.PropertyListConfiguration: void printNode(java.io.PrintWriter,int,org.apache.commons.configuration.HierarchicalConfiguration$Node)>(r8, $i2, r33);

        $r20 = virtualinvoke r33.<org.apache.commons.configuration.HierarchicalConfiguration$Node: java.lang.Object getValue()>();

        if $r20 == null goto label08;

        $z2 = $r20 instanceof java.util.Map;

        if $z2 != 0 goto label08;

        $z3 = $r20 instanceof org.apache.commons.configuration.Configuration;

        if $z3 != 0 goto label08;

        virtualinvoke r8.<java.io.PrintWriter: void println(java.lang.String)>(";");

     label08:
        $z7 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label10;

        if $r20 == null goto label09;

        $z1 = $r20 instanceof java.util.List;

        if $z1 == 0 goto label10;

     label09:
        virtualinvoke r8.<java.io.PrintWriter: void println()>();

     label10:
        goto label07;

     label11:
        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r8.<java.io.PrintWriter: void print(java.lang.String)>($r17);

        $r18 = virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration$Node: org.apache.commons.configuration.HierarchicalConfiguration$Node getParent()>();

        if $r18 == null goto label13;

        virtualinvoke r8.<java.io.PrintWriter: void println()>();

        goto label13;

     label12:
        $r6 = virtualinvoke r1.<org.apache.commons.configuration.HierarchicalConfiguration$Node: java.lang.Object getValue()>();

        specialinvoke r7.<org.apache.commons.configuration.plist.PropertyListConfiguration: void printValue(java.io.PrintWriter,int,java.lang.Object)>(r8, i0, $r6);

     label13:
        return;
    }

    private void printValue(java.io.PrintWriter, int, java.lang.Object)
    {
        byte[] $r11;
        java.util.Date $r6;
        org.apache.commons.configuration.plist.PropertyListConfiguration r3;
        java.util.Map r36;
        org.apache.commons.configuration.MapConfiguration $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.io.PrintWriter r2;
        org.apache.commons.configuration.HierarchicalConfiguration $r30;
        java.util.List $r32;
        org.apache.commons.configuration.Configuration r35;
        java.lang.StringBuffer $r8, $r9, $r13, $r14, $r17, $r18, $r19, $r22, $r23, $r24;
        int i0, $i1, $i2, $i3;
        java.lang.String $r0, $r4, $r5, $r7, $r10, $r15, $r20, $r25, r27;
        java.util.Iterator $r21, $r33;
        org.apache.commons.configuration.HierarchicalConfiguration$Node $r28, $r31;
        char[] $r12;
        java.lang.Object r1, $r26, $r29, $r34;

        r3 := @this: org.apache.commons.configuration.plist.PropertyListConfiguration;

        r2 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $i1 = i0 * 4;

        $r0 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String repeat(java.lang.String,int)>(" ", $i1);

        $z0 = r1 instanceof java.util.List;

        if $z0 == 0 goto label03;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("( ");

        $r32 = (java.util.List) r1;

        $r33 = interfaceinvoke $r32.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z8 = interfaceinvoke $r33.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label02;

        $i3 = i0 + 1;

        $r34 = interfaceinvoke $r33.<java.util.Iterator: java.lang.Object next()>();

        specialinvoke r3.<org.apache.commons.configuration.plist.PropertyListConfiguration: void printValue(java.io.PrintWriter,int,java.lang.Object)>(r2, $i3, $r34);

        $z7 = interfaceinvoke $r33.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label01;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(", ");

        goto label01;

     label02:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" )");

        goto label11;

     label03:
        $z1 = r1 instanceof org.apache.commons.configuration.HierarchicalConfiguration;

        if $z1 == 0 goto label04;

        $r30 = (org.apache.commons.configuration.HierarchicalConfiguration) r1;

        $r31 = virtualinvoke $r30.<org.apache.commons.configuration.HierarchicalConfiguration: org.apache.commons.configuration.HierarchicalConfiguration$Node getRoot()>();

        specialinvoke r3.<org.apache.commons.configuration.plist.PropertyListConfiguration: void printNode(java.io.PrintWriter,int,org.apache.commons.configuration.HierarchicalConfiguration$Node)>(r2, i0, $r31);

        goto label11;

     label04:
        $z2 = r1 instanceof org.apache.commons.configuration.Configuration;

        if $z2 == 0 goto label07;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        r35 = (org.apache.commons.configuration.Configuration) r1;

        $r21 = interfaceinvoke r35.<org.apache.commons.configuration.Configuration: java.util.Iterator getKeys()>();

     label05:
        $z6 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label06;

        $r26 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r27 = (java.lang.String) $r26;

        $r28 = new org.apache.commons.configuration.HierarchicalConfiguration$Node;

        specialinvoke $r28.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void <init>(java.lang.String)>(r27);

        $r29 = interfaceinvoke r35.<org.apache.commons.configuration.Configuration: java.lang.Object getProperty(java.lang.String)>(r27);

        virtualinvoke $r28.<org.apache.commons.configuration.HierarchicalConfiguration$Node: void setValue(java.lang.Object)>($r29);

        $i2 = i0 + 1;

        specialinvoke r3.<org.apache.commons.configuration.plist.PropertyListConfiguration: void printNode(java.io.PrintWriter,int,org.apache.commons.configuration.HierarchicalConfiguration$Node)>(r2, $i2, $r28);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(";");

        goto label05;

     label06:
        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r25);

        goto label11;

     label07:
        $z3 = r1 instanceof java.util.Map;

        if $z3 == 0 goto label08;

        r36 = (java.util.Map) r1;

        $r16 = new org.apache.commons.configuration.MapConfiguration;

        specialinvoke $r16.<org.apache.commons.configuration.MapConfiguration: void <init>(java.util.Map)>(r36);

        specialinvoke r3.<org.apache.commons.configuration.plist.PropertyListConfiguration: void printValue(java.io.PrintWriter,int,java.lang.Object)>(r2, i0, $r16);

        goto label11;

     label08:
        $z4 = r1 instanceof byte[];

        if $z4 == 0 goto label09;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<");

        $r10 = new java.lang.String;

        $r11 = (byte[]) r1;

        $r12 = staticinvoke <org.apache.commons.codec.binary.Hex: char[] encodeHex(byte[])>($r11);

        specialinvoke $r10.<java.lang.String: void <init>(char[])>($r12);

        $r13 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r15);

        goto label11;

     label09:
        $z5 = r1 instanceof java.util.Date;

        if $z5 == 0 goto label10;

        $r6 = (java.util.Date) r1;

        $r7 = staticinvoke <org.apache.commons.configuration.plist.PropertyListConfiguration: java.lang.String formatDate(java.util.Date)>($r6);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r7);

        goto label11;

     label10:
        if r1 == null goto label11;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $r5 = virtualinvoke r3.<org.apache.commons.configuration.plist.PropertyListConfiguration: java.lang.String quoteString(java.lang.String)>($r4);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r5);

     label11:
        return;
    }

    java.lang.String quoteString(java.lang.String)
    {
        org.apache.commons.configuration.plist.PropertyListConfiguration r0;
        java.lang.StringBuffer $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i15, $i17, $i19, $i21, $i23, $i25, $i27, $i29, $i31, $i33, $i35;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListConfiguration;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(32);

        $i13 = (int) -1;

        if $i0 != $i13 goto label2;

        $i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(9);

        $i15 = (int) -1;

        if $i1 != $i15 goto label2;

        $i2 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(13);

        $i17 = (int) -1;

        if $i2 != $i17 goto label2;

        $i3 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(10);

        $i19 = (int) -1;

        if $i3 != $i19 goto label2;

        $i4 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(34);

        $i21 = (int) -1;

        if $i4 != $i21 goto label2;

        $i5 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(40);

        $i23 = (int) -1;

        if $i5 != $i23 goto label2;

        $i6 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(41);

        $i25 = (int) -1;

        if $i6 != $i25 goto label2;

        $i7 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(123);

        $i27 = (int) -1;

        if $i7 != $i27 goto label2;

        $i8 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(125);

        $i29 = (int) -1;

        if $i8 != $i29 goto label2;

        $i9 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(61);

        $i31 = (int) -1;

        if $i9 != $i31 goto label2;

        $i10 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(44);

        $i33 = (int) -1;

        if $i10 != $i33 goto label2;

        $i11 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(59);

        $i35 = (int) -1;

        if $i11 == $i35 goto label3;

     label2:
        $r2 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>(r1, "\"", "\\\"");

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        r1 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        return r1;
    }

    static java.util.Date parseDate(java.lang.String) throws org.apache.commons.configuration.plist.ParseException
    {
        java.util.Date $r2;
        org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser[] $r1, $r3;
        java.util.Calendar $r0;
        int $i0, $i1, i2, i3;
        java.lang.String r4;
        org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser $r5;

        r4 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke $r0.<java.util.Calendar: void clear()>();

        i2 = 0;

        i3 = 0;

     label1:
        $r1 = <org.apache.commons.configuration.plist.PropertyListConfiguration: org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser[] DATE_PARSERS>;

        $i0 = lengthof $r1;

        if i3 >= $i0 goto label2;

        $r3 = <org.apache.commons.configuration.plist.PropertyListConfiguration: org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser[] DATE_PARSERS>;

        $r5 = $r3[i3];

        $i1 = virtualinvoke $r5.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser: int parseComponent(java.lang.String,int,java.util.Calendar)>(r4, i2, $r0);

        i2 = i2 + $i1;

        i3 = i3 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke $r0.<java.util.Calendar: java.util.Date getTime()>();

        return $r2;
    }

    static java.lang.String formatDate(java.util.Calendar)
    {
        org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser[] $r1, $r3;
        java.util.Calendar r4;
        java.lang.StringBuffer $r0;
        int $i0, i1;
        java.lang.String $r2;
        org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser $r5;

        r4 := @parameter0: java.util.Calendar;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i1 = 0;

     label1:
        $r1 = <org.apache.commons.configuration.plist.PropertyListConfiguration: org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser[] DATE_PARSERS>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r3 = <org.apache.commons.configuration.plist.PropertyListConfiguration: org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser[] DATE_PARSERS>;

        $r5 = $r3[i1];

        virtualinvoke $r5.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser: void formatComponent(java.lang.StringBuffer,java.util.Calendar)>($r0, r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    static java.lang.String formatDate(java.util.Date)
    {
        java.util.Calendar $r0;
        java.lang.String $r2;
        java.util.Date r1;

        r1 := @parameter0: java.util.Date;

        $r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke $r0.<java.util.Calendar: void setTime(java.util.Date)>(r1);

        $r2 = staticinvoke <org.apache.commons.configuration.plist.PropertyListConfiguration: java.lang.String formatDate(java.util.Calendar)>($r0);

        return $r2;
    }

    static void <clinit>()
    {
        org.apache.commons.configuration.plist.PropertyListConfiguration$DateTimeZoneParser $r17;
        org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser[] $r3;
        org.apache.commons.configuration.plist.PropertyListConfiguration$DateSeparatorParser $r0, $r1, $r2, $r4, $r18;
        org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser $r5, $r7, $r9, $r11, $r13, $r15;
        org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser $r6, $r8, $r10, $r12, $r14, $r16;

        <org.apache.commons.configuration.plist.PropertyListConfiguration: char PAD_CHAR> = 48;

        <org.apache.commons.configuration.plist.PropertyListConfiguration: int TIME_ZONE_LENGTH> = 5;

        <org.apache.commons.configuration.plist.PropertyListConfiguration: int INDENT_SIZE> = 4;

        <org.apache.commons.configuration.plist.PropertyListConfiguration: int MINUTES_PER_HOUR> = 60;

        <org.apache.commons.configuration.plist.PropertyListConfiguration: int MILLIS_PER_MINUTE> = 60000;

        <org.apache.commons.configuration.plist.PropertyListConfiguration: long serialVersionUID> = 3227248503779092127L;

        <org.apache.commons.configuration.plist.PropertyListConfiguration: java.lang.String TIME_ZONE_PREFIX> = "GMT";

        $r0 = new org.apache.commons.configuration.plist.PropertyListConfiguration$DateSeparatorParser;

        specialinvoke $r0.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateSeparatorParser: void <init>(java.lang.String)>("-");

        <org.apache.commons.configuration.plist.PropertyListConfiguration: org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser DATE_SEPARATOR_PARSER> = $r0;

        $r1 = new org.apache.commons.configuration.plist.PropertyListConfiguration$DateSeparatorParser;

        specialinvoke $r1.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateSeparatorParser: void <init>(java.lang.String)>(":");

        <org.apache.commons.configuration.plist.PropertyListConfiguration: org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser TIME_SEPARATOR_PARSER> = $r1;

        $r2 = new org.apache.commons.configuration.plist.PropertyListConfiguration$DateSeparatorParser;

        specialinvoke $r2.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateSeparatorParser: void <init>(java.lang.String)>(" ");

        <org.apache.commons.configuration.plist.PropertyListConfiguration: org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser BLANK_SEPARATOR_PARSER> = $r2;

        $r3 = newarray (org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser)[15];

        $r4 = new org.apache.commons.configuration.plist.PropertyListConfiguration$DateSeparatorParser;

        specialinvoke $r4.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateSeparatorParser: void <init>(java.lang.String)>("<*D");

        $r3[0] = $r4;

        $r5 = new org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser;

        specialinvoke $r5.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser: void <init>(int,int)>(1, 4);

        $r3[1] = $r5;

        $r6 = <org.apache.commons.configuration.plist.PropertyListConfiguration: org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser DATE_SEPARATOR_PARSER>;

        $r3[2] = $r6;

        $r7 = new org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser;

        specialinvoke $r7.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser: void <init>(int,int,int)>(2, 2, 1);

        $r3[3] = $r7;

        $r8 = <org.apache.commons.configuration.plist.PropertyListConfiguration: org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser DATE_SEPARATOR_PARSER>;

        $r3[4] = $r8;

        $r9 = new org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser;

        specialinvoke $r9.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser: void <init>(int,int)>(5, 2);

        $r3[5] = $r9;

        $r10 = <org.apache.commons.configuration.plist.PropertyListConfiguration: org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser BLANK_SEPARATOR_PARSER>;

        $r3[6] = $r10;

        $r11 = new org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser;

        specialinvoke $r11.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser: void <init>(int,int)>(11, 2);

        $r3[7] = $r11;

        $r12 = <org.apache.commons.configuration.plist.PropertyListConfiguration: org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser TIME_SEPARATOR_PARSER>;

        $r3[8] = $r12;

        $r13 = new org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser;

        specialinvoke $r13.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser: void <init>(int,int)>(12, 2);

        $r3[9] = $r13;

        $r14 = <org.apache.commons.configuration.plist.PropertyListConfiguration: org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser TIME_SEPARATOR_PARSER>;

        $r3[10] = $r14;

        $r15 = new org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser;

        specialinvoke $r15.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateFieldParser: void <init>(int,int)>(13, 2);

        $r3[11] = $r15;

        $r16 = <org.apache.commons.configuration.plist.PropertyListConfiguration: org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser BLANK_SEPARATOR_PARSER>;

        $r3[12] = $r16;

        $r17 = new org.apache.commons.configuration.plist.PropertyListConfiguration$DateTimeZoneParser;

        specialinvoke $r17.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateTimeZoneParser: void <init>(org.apache.commons.configuration.plist.PropertyListConfiguration$1)>(null);

        $r3[13] = $r17;

        $r18 = new org.apache.commons.configuration.plist.PropertyListConfiguration$DateSeparatorParser;

        specialinvoke $r18.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateSeparatorParser: void <init>(java.lang.String)>(">");

        $r3[14] = $r18;

        <org.apache.commons.configuration.plist.PropertyListConfiguration: org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser[] DATE_PARSERS> = $r3;

        return;
    }
}
