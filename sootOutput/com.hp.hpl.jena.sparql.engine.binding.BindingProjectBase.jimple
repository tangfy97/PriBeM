public abstract class com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase extends com.hp.hpl.jena.sparql.engine.binding.BindingBase
{
    private com.hp.hpl.jena.sparql.engine.binding.Binding binding;
    private java.util.List actualVars;

    public void <init>(com.hp.hpl.jena.sparql.engine.binding.Binding)
    {
        com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase: void <init>(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.engine.binding.Binding)>(r1, null);

        return;
    }

    public void <init>(com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.engine.binding.Binding)
    {
        com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding r1, r2;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase;

        r2 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r1 := @parameter1: com.hp.hpl.jena.sparql.engine.binding.Binding;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.BindingBase: void <init>(com.hp.hpl.jena.sparql.engine.binding.Binding)>(r1);

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase: java.util.List actualVars> = null;

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase: com.hp.hpl.jena.sparql.engine.binding.Binding binding> = r2;

        return;
    }

    protected abstract boolean accept(com.hp.hpl.jena.sparql.core.Var);

    protected boolean contains1(com.hp.hpl.jena.sparql.core.Var)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding $r2;
        com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase r0;
        com.hp.hpl.jena.sparql.core.Var r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Var;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase: boolean accept(com.hp.hpl.jena.sparql.core.Var)>(r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase: com.hp.hpl.jena.sparql.engine.binding.Binding binding>;

        $z1 = interfaceinvoke $r2.<com.hp.hpl.jena.sparql.engine.binding.Binding: boolean contains(com.hp.hpl.jena.sparql.core.Var)>(r1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    protected com.hp.hpl.jena.graph.Node get1(com.hp.hpl.jena.sparql.core.Var)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding $r2;
        com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase r0;
        com.hp.hpl.jena.graph.Node $r3;
        com.hp.hpl.jena.sparql.core.Var r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Var;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase: boolean accept(com.hp.hpl.jena.sparql.core.Var)>(r1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase: com.hp.hpl.jena.sparql.engine.binding.Binding binding>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.sparql.engine.binding.Binding: com.hp.hpl.jena.graph.Node get(com.hp.hpl.jena.sparql.core.Var)>(r1);

        return $r3;
    }

    protected java.util.Iterator vars1()
    {
        com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase r0;
        java.util.List $r1;
        java.util.Iterator $r2;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase: java.util.List actualVars()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    private java.util.List actualVars()
    {
        java.util.Iterator $r5;
        com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase r0;
        com.hp.hpl.jena.sparql.core.Var r7;
        java.util.ArrayList $r3;
        java.util.List $r1, $r2, $r8;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r4;
        java.lang.Object $r6;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase: java.util.List actualVars>;

        if $r1 != null goto label3;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase: java.util.List actualVars> = $r3;

        $r4 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase: com.hp.hpl.jena.sparql.engine.binding.Binding binding>;

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.sparql.engine.binding.Binding: java.util.Iterator vars()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.hp.hpl.jena.sparql.core.Var) $r6;

        $z1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase: boolean accept(com.hp.hpl.jena.sparql.core.Var)>(r7);

        if $z1 == 0 goto label2;

        $r8 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase: java.util.List actualVars>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r7);

     label2:
        goto label1;

     label3:
        $r2 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase: java.util.List actualVars>;

        return $r2;
    }

    protected int size1()
    {
        int $i0;
        com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase r0;
        java.util.List $r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase: java.util.List actualVars()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    protected boolean isEmpty1()
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding $r1;
        int $i0;
        com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase: com.hp.hpl.jena.sparql.engine.binding.Binding binding>;

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.engine.binding.Binding: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $i0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.BindingProjectBase: int size1()>();

        if $i0 != 0 goto label2;

        return 1;

     label2:
        return 0;
    }
}
