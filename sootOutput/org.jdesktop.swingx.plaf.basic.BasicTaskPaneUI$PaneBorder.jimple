public class org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder extends java.lang.Object implements javax.swing.border.Border, javax.swing.plaf.UIResource
{
    protected java.awt.Color borderColor;
    protected java.awt.Color titleForeground;
    protected java.awt.Color specialTitleBackground;
    protected java.awt.Color specialTitleForeground;
    protected java.awt.Color titleBackgroundGradientStart;
    protected java.awt.Color titleBackgroundGradientEnd;
    protected java.awt.Color titleOver;
    protected java.awt.Color specialTitleOver;
    protected javax.swing.JLabel label;
    final org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI this$0;

    public void <init>(org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI)
    {
        java.awt.Color $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r15, $r16, $r17, $r18;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder r0;
        javax.swing.JLabel $r12, $r13, $r14;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder;

        r1 := @parameter0: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI;

        r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("TaskPane.borderColor");

        r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Color borderColor> = $r2;

        $r3 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("TaskPane.titleForeground");

        r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Color titleForeground> = $r3;

        $r4 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("TaskPane.specialTitleBackground");

        r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Color specialTitleBackground> = $r4;

        $r5 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("TaskPane.specialTitleForeground");

        r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Color specialTitleForeground> = $r5;

        $r6 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("TaskPane.titleBackgroundGradientStart");

        r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Color titleBackgroundGradientStart> = $r6;

        $r7 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("TaskPane.titleBackgroundGradientEnd");

        r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Color titleBackgroundGradientEnd> = $r7;

        $r8 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("TaskPane.titleOver");

        r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Color titleOver> = $r8;

        $r9 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Color titleOver>;

        if $r9 != null goto label1;

        $r17 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Color specialTitleBackground>;

        $r18 = virtualinvoke $r17.<java.awt.Color: java.awt.Color brighter()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Color titleOver> = $r18;

     label1:
        $r10 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("TaskPane.specialTitleOver");

        r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Color specialTitleOver> = $r10;

        $r11 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Color specialTitleOver>;

        if $r11 != null goto label2;

        $r15 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Color specialTitleBackground>;

        $r16 = virtualinvoke $r15.<java.awt.Color: java.awt.Color brighter()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Color specialTitleOver> = $r16;

     label2:
        $r12 = new javax.swing.JLabel;

        specialinvoke $r12.<javax.swing.JLabel: void <init>()>();

        r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: javax.swing.JLabel label> = $r12;

        $r13 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: javax.swing.JLabel label>;

        virtualinvoke $r13.<javax.swing.JLabel: void setOpaque(boolean)>(0);

        $r14 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: javax.swing.JLabel label>;

        virtualinvoke $r14.<javax.swing.JLabel: void setIconTextGap(int)>(8);

        return;
    }

    public java.awt.Insets getBorderInsets(java.awt.Component)
    {
        java.awt.Insets $r0;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder r1;
        int $i0;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI $r3;
        java.awt.Component r2;

        r1 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder;

        r2 := @parameter0: java.awt.Component;

        $r0 = new java.awt.Insets;

        $r3 = r1.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI this$0>;

        $i0 = virtualinvoke $r3.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: int getTitleHeight(java.awt.Component)>(r2);

        specialinvoke $r0.<java.awt.Insets: void <init>(int,int,int,int)>($i0, 0, 0, 0);

        return $r0;
    }

    public boolean isBorderOpaque()
    {
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder;

        return 1;
    }

    public java.awt.Dimension getPreferredSize(org.jdesktop.swingx.JXTaskPane)
    {
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder r0;
        java.awt.Dimension $r3;
        javax.swing.JLabel $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI $r4, $r5;
        org.jdesktop.swingx.JXTaskPane r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder;

        r1 := @parameter0: org.jdesktop.swingx.JXTaskPane;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: void configureLabel(org.jdesktop.swingx.JXTaskPane)>(r1);

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: javax.swing.JLabel label>;

        $r3 = virtualinvoke $r2.<javax.swing.JLabel: java.awt.Dimension getPreferredSize()>();

        $i0 = $r3.<java.awt.Dimension: int width>;

        $i1 = $i0 + 3;

        $r3.<java.awt.Dimension: int width> = $i1;

        $i2 = $r3.<java.awt.Dimension: int width>;

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI this$0>;

        $i3 = virtualinvoke $r4.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: int getTitleHeight(java.awt.Component)>(r1);

        $i4 = $i2 + $i3;

        $r3.<java.awt.Dimension: int width> = $i4;

        $i5 = $r3.<java.awt.Dimension: int width>;

        $i6 = $i5 + 3;

        $r3.<java.awt.Dimension: int width> = $i6;

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI this$0>;

        $i7 = virtualinvoke $r5.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: int getTitleHeight(java.awt.Component)>(r1);

        $r3.<java.awt.Dimension: int height> = $i7;

        return $r3;
    }

    protected void paintTitleBackground(org.jdesktop.swingx.JXTaskPane, java.awt.Graphics)
    {
        java.awt.Color $r3, $r5;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder r2;
        java.awt.Graphics r1;
        int $i0, $i1, $i2;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI $r4;
        org.jdesktop.swingx.JXTaskPane r0;
        boolean $z0;

        r2 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder;

        r0 := @parameter0: org.jdesktop.swingx.JXTaskPane;

        r1 := @parameter1: java.awt.Graphics;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: boolean isSpecial()>();

        if $z0 == 0 goto label1;

        $r5 = r2.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Color specialTitleBackground>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

        goto label2;

     label1:
        $r3 = r2.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Color titleBackgroundGradientStart>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r3);

     label2:
        $i0 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: int getWidth()>();

        $r4 = r2.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI this$0>;

        $i1 = virtualinvoke $r4.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: int getTitleHeight(java.awt.Component)>(r0);

        $i2 = $i1 - 1;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>(0, 0, $i0, $i2);

        return;
    }

    protected void paintTitle(org.jdesktop.swingx.JXTaskPane, java.awt.Graphics, java.awt.Color, int, int, int, int)
    {
        java.awt.Color r2;
        int i0, i1, i2, i3, $i4, $i5;
        org.jdesktop.swingx.JXTaskPane r1;
        boolean $z0;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder r0;
        java.awt.Font $r4, $r6, $r8;
        javax.swing.JLabel $r3, $r7, $r9, $r10;
        java.awt.Graphics r5;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder;

        r1 := @parameter0: org.jdesktop.swingx.JXTaskPane;

        r5 := @parameter1: java.awt.Graphics;

        r2 := @parameter2: java.awt.Color;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: void configureLabel(org.jdesktop.swingx.JXTaskPane)>(r1);

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: javax.swing.JLabel label>;

        virtualinvoke $r3.<javax.swing.JLabel: void setForeground(java.awt.Color)>(r2);

        $r4 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: java.awt.Font getFont()>();

        if $r4 == null goto label1;

        $r6 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: java.awt.Font getFont()>();

        $z0 = $r6 instanceof javax.swing.plaf.FontUIResource;

        if $z0 != 0 goto label1;

        $r7 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: javax.swing.JLabel label>;

        $r8 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: java.awt.Font getFont()>();

        virtualinvoke $r7.<javax.swing.JLabel: void setFont(java.awt.Font)>($r8);

     label1:
        virtualinvoke r5.<java.awt.Graphics: void translate(int,int)>(i0, i1);

        $r9 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: javax.swing.JLabel label>;

        virtualinvoke $r9.<javax.swing.JLabel: void setBounds(int,int,int,int)>(0, 0, i2, i3);

        $r10 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: javax.swing.JLabel label>;

        virtualinvoke $r10.<javax.swing.JLabel: void paint(java.awt.Graphics)>(r5);

        $i4 = neg i0;

        $i5 = neg i1;

        virtualinvoke r5.<java.awt.Graphics: void translate(int,int)>($i4, $i5);

        return;
    }

    protected void configureLabel(org.jdesktop.swingx.JXTaskPane)
    {
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder r0;
        java.awt.Font $r5;
        javax.swing.Icon $r9, $r10;
        org.jdesktop.swingx.icon.EmptyIcon $r11;
        java.awt.ComponentOrientation $r3;
        javax.swing.JLabel $r2, $r4, $r6, $r8;
        java.lang.String $r7;
        org.jdesktop.swingx.JXTaskPane r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder;

        r1 := @parameter0: org.jdesktop.swingx.JXTaskPane;

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: javax.swing.JLabel label>;

        $r3 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: java.awt.ComponentOrientation getComponentOrientation()>();

        virtualinvoke $r2.<javax.swing.JLabel: void applyComponentOrientation(java.awt.ComponentOrientation)>($r3);

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: javax.swing.JLabel label>;

        $r5 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: java.awt.Font getFont()>();

        virtualinvoke $r4.<javax.swing.JLabel: void setFont(java.awt.Font)>($r5);

        $r6 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: javax.swing.JLabel label>;

        $r7 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: java.lang.String getTitle()>();

        virtualinvoke $r6.<javax.swing.JLabel: void setText(java.lang.String)>($r7);

        $r8 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: javax.swing.JLabel label>;

        $r9 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: javax.swing.Icon getIcon()>();

        if $r9 != null goto label1;

        $r11 = new org.jdesktop.swingx.icon.EmptyIcon;

        $r10 = $r11;

        specialinvoke $r11.<org.jdesktop.swingx.icon.EmptyIcon: void <init>()>();

        goto label2;

     label1:
        $r10 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: javax.swing.Icon getIcon()>();

     label2:
        virtualinvoke $r8.<javax.swing.JLabel: void setIcon(javax.swing.Icon)>($r10);

        return;
    }

    protected void paintExpandedControls(org.jdesktop.swingx.JXTaskPane, java.awt.Graphics, int, int, int, int)
    {
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder r0;
        java.awt.Graphics r2;
        int i0, i1, i2, i3;
        org.jdesktop.swingx.JXTaskPane r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder;

        r1 := @parameter0: org.jdesktop.swingx.JXTaskPane;

        r2 := @parameter1: java.awt.Graphics;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        return;
    }

    protected java.awt.Color getPaintColor(org.jdesktop.swingx.JXTaskPane)
    {
        java.awt.Color $r2, $r3, $r5, $r6, r7, $r8, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.jdesktop.swingx.JXTaskPane r1;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder r0;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI $r4;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder;

        r1 := @parameter0: org.jdesktop.swingx.JXTaskPane;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: boolean isMouseOverBorder()>();

        if $z0 == 0 goto label07;

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI this$0>;

        $z3 = $r4.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: boolean mouseOver>;

        if $z3 == 0 goto label02;

        $z6 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: boolean isSpecial()>();

        if $z6 == 0 goto label01;

        r7 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Color specialTitleOver>;

        goto label12;

     label01:
        r7 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Color titleOver>;

        goto label12;

     label02:
        $z4 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: boolean isSpecial()>();

        if $z4 == 0 goto label03;

        r7 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Color specialTitleForeground>;

        goto label12;

     label03:
        $r5 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: java.awt.Color getForeground()>();

        if $r5 == null goto label04;

        $r6 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: java.awt.Color getForeground()>();

        $z5 = $r6 instanceof javax.swing.plaf.ColorUIResource;

        if $z5 == 0 goto label05;

     label04:
        $r8 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Color titleForeground>;

        goto label06;

     label05:
        $r8 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: java.awt.Color getForeground()>();

     label06:
        r7 = $r8;

        goto label12;

     label07:
        $z1 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: boolean isSpecial()>();

        if $z1 == 0 goto label08;

        r7 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Color specialTitleForeground>;

        goto label12;

     label08:
        $r2 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: java.awt.Color getForeground()>();

        if $r2 == null goto label09;

        $r3 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: java.awt.Color getForeground()>();

        $z2 = $r3 instanceof javax.swing.plaf.ColorUIResource;

        if $z2 == 0 goto label10;

     label09:
        $r9 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Color titleForeground>;

        goto label11;

     label10:
        $r9 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: java.awt.Color getForeground()>();

     label11:
        r7 = $r9;

     label12:
        return r7;
    }

    public void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int)
    {
        java.awt.Color $r11;
        boolean $z0, $z1;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder r2;
        java.awt.Component r0;
        java.awt.Graphics r10;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI $r3, $r4, $r5, $r6, $r7, $r8, $r12;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, i11, $i12, i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23, i24, i25;
        org.jdesktop.swingx.JXTaskPane r1;
        java.awt.ComponentOrientation $r9;

        r2 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder;

        r0 := @parameter0: java.awt.Component;

        r10 := @parameter1: java.awt.Graphics;

        i21 := @parameter2: int;

        i22 := @parameter3: int;

        i13 := @parameter4: int;

        i23 := @parameter5: int;

        r1 = (org.jdesktop.swingx.JXTaskPane) r0;

        $r3 = r2.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI this$0>;

        $i0 = virtualinvoke $r3.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: int getTitleHeight(java.awt.Component)>(r1);

        $r4 = r2.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI this$0>;

        $i1 = virtualinvoke $r4.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: int getRoundHeight()>();

        $i2 = 2 * $i1;

        i3 = $i0 - $i2;

        $i4 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: int getWidth()>();

        $r5 = r2.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI this$0>;

        $i5 = virtualinvoke $r5.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: int getTitleHeight(java.awt.Component)>(r1);

        i24 = $i4 - $i5;

        $r6 = r2.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI this$0>;

        $i6 = virtualinvoke $r6.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: int getRoundHeight()>();

        i7 = $i6 - 1;

        i25 = 3;

        $i8 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: int getWidth()>();

        $r7 = r2.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI this$0>;

        $i9 = virtualinvoke $r7.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: int getTitleHeight(java.awt.Component)>(r1);

        $i10 = $i8 - $i9;

        i11 = $i10 - 3;

        $r8 = r2.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI this$0>;

        $i12 = virtualinvoke $r8.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: int getTitleHeight(java.awt.Component)>(r1);

        $r9 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r9.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z0 != 0 goto label1;

        $i17 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: int getWidth()>();

        $i18 = $i17 - i24;

        i24 = $i18 - i3;

        $i19 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: int getWidth()>();

        $i20 = $i19 - 3;

        i25 = $i20 - i11;

     label1:
        virtualinvoke r2.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: void paintTitleBackground(org.jdesktop.swingx.JXTaskPane,java.awt.Graphics)>(r1, r10);

        virtualinvoke r2.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: void paintExpandedControls(org.jdesktop.swingx.JXTaskPane,java.awt.Graphics,int,int,int,int)>(r1, r10, i24, i7, i3, i3);

        $r11 = virtualinvoke r2.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Color getPaintColor(org.jdesktop.swingx.JXTaskPane)>(r1);

        $z1 = virtualinvoke r1.<org.jdesktop.swingx.JXTaskPane: boolean hasFocus()>();

        if $z1 == 0 goto label2;

        $i14 = i13 - 6;

        $r12 = r2.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI this$0>;

        $i15 = virtualinvoke $r12.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: int getTitleHeight(java.awt.Component)>(r1);

        $i16 = $i15 - 6;

        virtualinvoke r2.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: void paintFocus(java.awt.Graphics,java.awt.Color,int,int,int,int)>(r10, $r11, 3, 3, $i14, $i16);

     label2:
        virtualinvoke r2.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: void paintTitle(org.jdesktop.swingx.JXTaskPane,java.awt.Graphics,java.awt.Color,int,int,int,int)>(r1, r10, $r11, i25, 0, i11, $i12);

        return;
    }

    protected void paintRectAroundControls(org.jdesktop.swingx.JXTaskPane, java.awt.Graphics, int, int, int, int, java.awt.Color, java.awt.Color)
    {
        java.awt.Color r3, r4;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder r0;
        int i0, i1, i2, i3, i4, i5;
        java.awt.Graphics r2;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI $r1;
        boolean $z0;
        org.jdesktop.swingx.JXTaskPane r5;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder;

        r5 := @parameter0: org.jdesktop.swingx.JXTaskPane;

        r2 := @parameter1: java.awt.Graphics;

        i0 := @parameter2: int;

        i3 := @parameter3: int;

        i1 := @parameter4: int;

        i4 := @parameter5: int;

        r3 := @parameter6: java.awt.Color;

        r4 := @parameter7: java.awt.Color;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI this$0>;

        $z0 = $r1.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI: boolean mouseOver>;

        if $z0 == 0 goto label1;

        i2 = i0 + i1;

        i5 = i3 + i4;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>(r3);

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>(i0, i3, i2, i3);

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>(i0, i3, i0, i5);

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>(r4);

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>(i2, i3, i2, i5);

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>(i0, i5, i2, i5);

     label1:
        return;
    }

    protected void paintOvalAroundControls(org.jdesktop.swingx.JXTaskPane, java.awt.Graphics, int, int, int, int)
    {
        java.awt.Color $r3, $r4, $r5, $r6, $r7;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder r2;
        java.awt.Graphics r1;
        int i0, i1, i2, i3;
        org.jdesktop.swingx.JXTaskPane r0;
        boolean $z0;

        r2 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder;

        r0 := @parameter0: org.jdesktop.swingx.JXTaskPane;

        r1 := @parameter1: java.awt.Graphics;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: boolean isSpecial()>();

        if $z0 == 0 goto label1;

        $r6 = r2.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Color specialTitleBackground>;

        $r7 = virtualinvoke $r6.<java.awt.Color: java.awt.Color brighter()>();

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r7);

        virtualinvoke r1.<java.awt.Graphics: void drawOval(int,int,int,int)>(i0, i1, i2, i3);

        goto label2;

     label1:
        $r3 = r2.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Color titleBackgroundGradientStart>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r3);

        virtualinvoke r1.<java.awt.Graphics: void fillOval(int,int,int,int)>(i0, i1, i2, i3);

        $r4 = r2.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: java.awt.Color titleBackgroundGradientEnd>;

        $r5 = virtualinvoke $r4.<java.awt.Color: java.awt.Color darker()>();

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

        virtualinvoke r1.<java.awt.Graphics: void drawOval(int,int,int,int)>(i0, i1, i2, i2);

     label2:
        return;
    }

    protected void paintChevronControls(org.jdesktop.swingx.JXTaskPane, java.awt.Graphics, int, int, int, int)
    {
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ChevronIcon $r1, $r3, r5;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        org.jdesktop.swingx.JXTaskPane r0;
        boolean $z0;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder r4;
        java.awt.Graphics r2;

        r4 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder;

        r0 := @parameter0: org.jdesktop.swingx.JXTaskPane;

        r2 := @parameter1: java.awt.Graphics;

        i0 := @parameter2: int;

        i6 := @parameter3: int;

        i1 := @parameter4: int;

        i7 := @parameter5: int;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: boolean isCollapsed()>();

        if $z0 == 0 goto label1;

        $r3 = new org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ChevronIcon;

        specialinvoke $r3.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ChevronIcon: void <init>(boolean)>(0);

        r5 = $r3;

        goto label2;

     label1:
        $r1 = new org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ChevronIcon;

        specialinvoke $r1.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ChevronIcon: void <init>(boolean)>(1);

        r5 = $r1;

     label2:
        $i2 = i1 / 2;

        $i3 = i0 + $i2;

        $i4 = virtualinvoke r5.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ChevronIcon: int getIconWidth()>();

        $i5 = $i4 / 2;

        $i14 = $i3 - $i5;

        $i8 = i7 / 2;

        $i9 = virtualinvoke r5.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ChevronIcon: int getIconHeight()>();

        $i10 = $i8 - $i9;

        $i15 = i6 + $i10;

        virtualinvoke r5.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ChevronIcon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(r0, r2, $i14, $i15);

        $i11 = virtualinvoke r5.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ChevronIcon: int getIconHeight()>();

        $i12 = $i15 + $i11;

        $i13 = $i12 + 1;

        virtualinvoke r5.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ChevronIcon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(r0, r2, $i14, $i13);

        return;
    }

    protected void paintFocus(java.awt.Graphics, java.awt.Color, int, int, int, int)
    {
        java.awt.Color r1;
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder r2;
        java.awt.Graphics r0;
        int i0, i1, i2, i3;

        r2 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder;

        r0 := @parameter0: java.awt.Graphics;

        r1 := @parameter1: java.awt.Color;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>(r1);

        staticinvoke <javax.swing.plaf.basic.BasicGraphicsUtils: void drawDashedRect(java.awt.Graphics,int,int,int,int)>(r0, i0, i1, i2, i3);

        return;
    }

    protected boolean isMouseOverBorder()
    {
        org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder;

        return 0;
    }
}
