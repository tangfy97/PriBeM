public final class org.apache.poi.hslf.model.Freeform extends org.apache.poi.hslf.model.AutoShape
{
    public static final byte[] SEGMENTINFO_MOVETO;
    public static final byte[] SEGMENTINFO_LINETO;
    public static final byte[] SEGMENTINFO_ESCAPE;
    public static final byte[] SEGMENTINFO_ESCAPE2;
    public static final byte[] SEGMENTINFO_CUBICTO;
    public static final byte[] SEGMENTINFO_CUBICTO2;
    public static final byte[] SEGMENTINFO_CLOSE;
    public static final byte[] SEGMENTINFO_END;

    protected void <init>(org.apache.poi.ddf.EscherContainerRecord, org.apache.poi.hslf.model.Shape)
    {
        org.apache.poi.hslf.model.Freeform r0;
        org.apache.poi.ddf.EscherContainerRecord r1;
        org.apache.poi.hslf.model.Shape r2;

        r0 := @this: org.apache.poi.hslf.model.Freeform;

        r1 := @parameter0: org.apache.poi.ddf.EscherContainerRecord;

        r2 := @parameter1: org.apache.poi.hslf.model.Shape;

        specialinvoke r0.<org.apache.poi.hslf.model.AutoShape: void <init>(org.apache.poi.ddf.EscherContainerRecord,org.apache.poi.hslf.model.Shape)>(r1, r2);

        return;
    }

    public void <init>(org.apache.poi.hslf.model.Shape)
    {
        org.apache.poi.hslf.model.Freeform r0;
        org.apache.poi.ddf.EscherContainerRecord $r2;
        org.apache.poi.hslf.model.Shape r1;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.model.Freeform;

        r1 := @parameter0: org.apache.poi.hslf.model.Shape;

        specialinvoke r0.<org.apache.poi.hslf.model.AutoShape: void <init>(org.apache.poi.ddf.EscherContainerRecord,org.apache.poi.hslf.model.Shape)>(null, r1);

        $z0 = r1 instanceof org.apache.poi.hslf.model.ShapeGroup;

        $r2 = virtualinvoke r0.<org.apache.poi.hslf.model.Freeform: org.apache.poi.ddf.EscherContainerRecord createSpContainer(int,boolean)>(0, $z0);

        r0.<org.apache.poi.hslf.model.Freeform: org.apache.poi.ddf.EscherContainerRecord _escherContainer> = $r2;

        return;
    }

    public void <init>()
    {
        org.apache.poi.hslf.model.Freeform r0;

        r0 := @this: org.apache.poi.hslf.model.Freeform;

        specialinvoke r0.<org.apache.poi.hslf.model.Freeform: void <init>(org.apache.poi.hslf.model.Shape)>(null);

        return;
    }

    public void setPath(java.awt.geom.GeneralPath)
    {
        byte[] $r6, $r17, $r20, $r21, $r22, $r23, $r27, $r28, $r31, $r32, $r34, r37, r38;
        java.awt.geom.Rectangle2D $r1;
        java.awt.geom.AffineTransform $r39;
        java.awt.geom.GeneralPath r0;
        double[] r35;
        java.util.ArrayList $r40, $r41;
        short $s8, $s10;
        java.awt.geom.Point2D$Double r36, $r42, $r43, $r44, $r45, $r46;
        java.awt.geom.PathIterator $r3;
        org.apache.poi.ddf.EscherArrayProperty $r48, $r49;
        boolean $z0, z1;
        org.apache.poi.ddf.EscherOptRecord $r18;
        org.apache.poi.ddf.EscherSimpleProperty $r47, $r50, $r51;
        org.apache.poi.ddf.EscherContainerRecord $r8;
        org.apache.poi.util.POILogger $r29;
        org.apache.poi.hslf.model.Freeform r7;
        org.apache.poi.ddf.EscherRecord $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i11, i12, $i13, i14, $i16, $i18;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25;
        java.lang.Object $r15, $r16, $r19;

        r7 := @this: org.apache.poi.hslf.model.Freeform;

        r0 := @parameter0: java.awt.geom.GeneralPath;

        $r1 = virtualinvoke r0.<java.awt.geom.GeneralPath: java.awt.geom.Rectangle2D getBounds2D()>();

        $r39 = new java.awt.geom.AffineTransform;

        specialinvoke $r39.<java.awt.geom.AffineTransform: void <init>()>();

        $r3 = virtualinvoke r0.<java.awt.geom.GeneralPath: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>($r39);

        $r40 = new java.util.ArrayList;

        specialinvoke $r40.<java.util.ArrayList: void <init>()>();

        $r41 = new java.util.ArrayList;

        specialinvoke $r41.<java.util.ArrayList: void <init>()>();

        z1 = 0;

     label01:
        $z0 = interfaceinvoke $r3.<java.awt.geom.PathIterator: boolean isDone()>();

        if $z0 != 0 goto label08;

        r35 = newarray (double)[6];

        $i11 = interfaceinvoke $r3.<java.awt.geom.PathIterator: int currentSegment(double[])>(r35);

        tableswitch($i11)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label05;
            case 3: goto label04;
            case 4: goto label06;
            default: goto label07;
        };

     label02:
        $r42 = new java.awt.geom.Point2D$Double;

        $d25 = r35[0];

        $d24 = r35[1];

        specialinvoke $r42.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d25, $d24);

        interfaceinvoke $r41.<java.util.List: boolean add(java.lang.Object)>($r42);

        $r34 = <org.apache.poi.hslf.model.Freeform: byte[] SEGMENTINFO_MOVETO>;

        interfaceinvoke $r40.<java.util.List: boolean add(java.lang.Object)>($r34);

        goto label07;

     label03:
        $r43 = new java.awt.geom.Point2D$Double;

        $d23 = r35[0];

        $d22 = r35[1];

        specialinvoke $r43.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d23, $d22);

        interfaceinvoke $r41.<java.util.List: boolean add(java.lang.Object)>($r43);

        $r31 = <org.apache.poi.hslf.model.Freeform: byte[] SEGMENTINFO_LINETO>;

        interfaceinvoke $r40.<java.util.List: boolean add(java.lang.Object)>($r31);

        $r32 = <org.apache.poi.hslf.model.Freeform: byte[] SEGMENTINFO_ESCAPE>;

        interfaceinvoke $r40.<java.util.List: boolean add(java.lang.Object)>($r32);

        goto label07;

     label04:
        $r44 = new java.awt.geom.Point2D$Double;

        $d17 = r35[0];

        $d16 = r35[1];

        specialinvoke $r44.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d17, $d16);

        interfaceinvoke $r41.<java.util.List: boolean add(java.lang.Object)>($r44);

        $r45 = new java.awt.geom.Point2D$Double;

        $d19 = r35[2];

        $d18 = r35[3];

        specialinvoke $r45.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d19, $d18);

        interfaceinvoke $r41.<java.util.List: boolean add(java.lang.Object)>($r45);

        $r46 = new java.awt.geom.Point2D$Double;

        $d21 = r35[4];

        $d20 = r35[5];

        specialinvoke $r46.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d21, $d20);

        interfaceinvoke $r41.<java.util.List: boolean add(java.lang.Object)>($r46);

        $r27 = <org.apache.poi.hslf.model.Freeform: byte[] SEGMENTINFO_CUBICTO>;

        interfaceinvoke $r40.<java.util.List: boolean add(java.lang.Object)>($r27);

        $r28 = <org.apache.poi.hslf.model.Freeform: byte[] SEGMENTINFO_ESCAPE2>;

        interfaceinvoke $r40.<java.util.List: boolean add(java.lang.Object)>($r28);

        goto label07;

     label05:
        $r29 = r7.<org.apache.poi.hslf.model.Freeform: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r29.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "SEG_QUADTO is not supported");

        goto label07;

     label06:
        $r19 = interfaceinvoke $r41.<java.util.List: java.lang.Object get(int)>(0);

        interfaceinvoke $r41.<java.util.List: boolean add(java.lang.Object)>($r19);

        $r20 = <org.apache.poi.hslf.model.Freeform: byte[] SEGMENTINFO_LINETO>;

        interfaceinvoke $r40.<java.util.List: boolean add(java.lang.Object)>($r20);

        $r21 = <org.apache.poi.hslf.model.Freeform: byte[] SEGMENTINFO_ESCAPE>;

        interfaceinvoke $r40.<java.util.List: boolean add(java.lang.Object)>($r21);

        $r22 = <org.apache.poi.hslf.model.Freeform: byte[] SEGMENTINFO_LINETO>;

        interfaceinvoke $r40.<java.util.List: boolean add(java.lang.Object)>($r22);

        $r23 = <org.apache.poi.hslf.model.Freeform: byte[] SEGMENTINFO_CLOSE>;

        interfaceinvoke $r40.<java.util.List: boolean add(java.lang.Object)>($r23);

        z1 = 1;

     label07:
        interfaceinvoke $r3.<java.awt.geom.PathIterator: void next()>();

        goto label01;

     label08:
        if z1 != 0 goto label09;

        $r17 = <org.apache.poi.hslf.model.Freeform: byte[] SEGMENTINFO_LINETO>;

        interfaceinvoke $r40.<java.util.List: boolean add(java.lang.Object)>($r17);

     label09:
        $r6 = newarray (byte)[2];

        $r6[0] = 0;

        $r6[1] = -128;

        interfaceinvoke $r40.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r8 = r7.<org.apache.poi.hslf.model.Freeform: org.apache.poi.ddf.EscherContainerRecord _escherContainer>;

        $i16 = (int) -4085;

        $r9 = staticinvoke <org.apache.poi.hslf.model.Freeform: org.apache.poi.ddf.EscherRecord getEscherChild(org.apache.poi.ddf.EscherContainerRecord,int)>($r8, $i16);

        $r18 = (org.apache.poi.ddf.EscherOptRecord) $r9;

        $r47 = new org.apache.poi.ddf.EscherSimpleProperty;

        specialinvoke $r47.<org.apache.poi.ddf.EscherSimpleProperty: void <init>(short,int)>(324, 4);

        virtualinvoke $r18.<org.apache.poi.ddf.EscherOptRecord: void addEscherProperty(org.apache.poi.ddf.EscherProperty)>($r47);

        $r48 = new org.apache.poi.ddf.EscherArrayProperty;

        specialinvoke $r48.<org.apache.poi.ddf.EscherArrayProperty: void <init>(short,boolean,byte[])>(16709, 0, null);

        $i0 = interfaceinvoke $r41.<java.util.List: int size()>();

        virtualinvoke $r48.<org.apache.poi.ddf.EscherArrayProperty: void setNumberOfElementsInArray(int)>($i0);

        $i1 = interfaceinvoke $r41.<java.util.List: int size()>();

        virtualinvoke $r48.<org.apache.poi.ddf.EscherArrayProperty: void setNumberOfElementsInMemory(int)>($i1);

        $i18 = (int) 65520;

        virtualinvoke $r48.<org.apache.poi.ddf.EscherArrayProperty: void setSizeOfElements(int)>($i18);

        i12 = 0;

     label10:
        $i13 = interfaceinvoke $r41.<java.util.List: int size()>();

        if i12 >= $i13 goto label11;

        $r16 = interfaceinvoke $r41.<java.util.List: java.lang.Object get(int)>(i12);

        r36 = (java.awt.geom.Point2D$Double) $r16;

        r37 = newarray (byte)[4];

        $d6 = virtualinvoke r36.<java.awt.geom.Point2D$Double: double getX()>();

        $d7 = virtualinvoke $r1.<java.awt.geom.Rectangle2D: double getX()>();

        $d8 = $d6 - $d7;

        $d9 = $d8 * 576.0;

        $d10 = $d9 / 72.0;

        $i7 = (int) $d10;

        $s8 = (short) $i7;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>(r37, 0, $s8);

        $d11 = virtualinvoke r36.<java.awt.geom.Point2D$Double: double getY()>();

        $d12 = virtualinvoke $r1.<java.awt.geom.Rectangle2D: double getY()>();

        $d13 = $d11 - $d12;

        $d14 = $d13 * 576.0;

        $d15 = $d14 / 72.0;

        $i9 = (int) $d15;

        $s10 = (short) $i9;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>(r37, 2, $s10);

        virtualinvoke $r48.<org.apache.poi.ddf.EscherArrayProperty: void setElement(int,byte[])>(i12, r37);

        i12 = i12 + 1;

        goto label10;

     label11:
        virtualinvoke $r18.<org.apache.poi.ddf.EscherOptRecord: void addEscherProperty(org.apache.poi.ddf.EscherProperty)>($r48);

        $r49 = new org.apache.poi.ddf.EscherArrayProperty;

        specialinvoke $r49.<org.apache.poi.ddf.EscherArrayProperty: void <init>(short,boolean,byte[])>(16710, 0, null);

        $i2 = interfaceinvoke $r40.<java.util.List: int size()>();

        virtualinvoke $r49.<org.apache.poi.ddf.EscherArrayProperty: void setNumberOfElementsInArray(int)>($i2);

        $i3 = interfaceinvoke $r40.<java.util.List: int size()>();

        virtualinvoke $r49.<org.apache.poi.ddf.EscherArrayProperty: void setNumberOfElementsInMemory(int)>($i3);

        virtualinvoke $r49.<org.apache.poi.ddf.EscherArrayProperty: void setSizeOfElements(int)>(2);

        i14 = 0;

     label12:
        $i4 = interfaceinvoke $r40.<java.util.List: int size()>();

        if i14 >= $i4 goto label13;

        $r15 = interfaceinvoke $r40.<java.util.List: java.lang.Object get(int)>(i14);

        r38 = (byte[]) $r15;

        virtualinvoke $r49.<org.apache.poi.ddf.EscherArrayProperty: void setElement(int,byte[])>(i14, r38);

        i14 = i14 + 1;

        goto label12;

     label13:
        virtualinvoke $r18.<org.apache.poi.ddf.EscherOptRecord: void addEscherProperty(org.apache.poi.ddf.EscherProperty)>($r49);

        $r50 = new org.apache.poi.ddf.EscherSimpleProperty;

        $d0 = virtualinvoke $r1.<java.awt.geom.Rectangle2D: double getWidth()>();

        $d1 = $d0 * 576.0;

        $d2 = $d1 / 72.0;

        $i5 = (int) $d2;

        specialinvoke $r50.<org.apache.poi.ddf.EscherSimpleProperty: void <init>(short,int)>(322, $i5);

        virtualinvoke $r18.<org.apache.poi.ddf.EscherOptRecord: void addEscherProperty(org.apache.poi.ddf.EscherProperty)>($r50);

        $r51 = new org.apache.poi.ddf.EscherSimpleProperty;

        $d3 = virtualinvoke $r1.<java.awt.geom.Rectangle2D: double getHeight()>();

        $d4 = $d3 * 576.0;

        $d5 = $d4 / 72.0;

        $i6 = (int) $d5;

        specialinvoke $r51.<org.apache.poi.ddf.EscherSimpleProperty: void <init>(short,int)>(323, $i6);

        virtualinvoke $r18.<org.apache.poi.ddf.EscherOptRecord: void addEscherProperty(org.apache.poi.ddf.EscherProperty)>($r51);

        virtualinvoke $r18.<org.apache.poi.ddf.EscherOptRecord: void sortProperties()>();

        virtualinvoke r7.<org.apache.poi.hslf.model.Freeform: void setAnchor(java.awt.geom.Rectangle2D)>($r1);

        return;
    }

    public java.awt.geom.GeneralPath getPath()
    {
        byte[] $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        java.awt.geom.GeneralPath $r29;
        short $s2, $s3, $s4, $s5, $s6, $s7, $s10, $s11, $s13, $s14;
        org.apache.poi.ddf.EscherArrayProperty $r25, r26, r27;
        org.apache.poi.ddf.EscherOptRecord r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.poi.ddf.EscherSimpleProperty $r28;
        org.apache.poi.ddf.EscherContainerRecord $r1;
        org.apache.poi.util.POILogger $r21, $r22;
        org.apache.poi.ddf.EscherProperty $r5, $r6, $r23, $r24;
        org.apache.poi.hslf.model.Freeform r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29;
        org.apache.poi.ddf.EscherRecord $r2;
        int $i0, $i1, $i8, $i9, $i12, i15, i16, i17, i18, $i20;

        r0 := @this: org.apache.poi.hslf.model.Freeform;

        $r1 = r0.<org.apache.poi.hslf.model.Freeform: org.apache.poi.ddf.EscherContainerRecord _escherContainer>;

        $i20 = (int) -4085;

        $r2 = staticinvoke <org.apache.poi.hslf.model.Freeform: org.apache.poi.ddf.EscherRecord getEscherChild(org.apache.poi.ddf.EscherContainerRecord,int)>($r1, $i20);

        r3 = (org.apache.poi.ddf.EscherOptRecord) $r2;

        $r28 = new org.apache.poi.ddf.EscherSimpleProperty;

        specialinvoke $r28.<org.apache.poi.ddf.EscherSimpleProperty: void <init>(short,int)>(324, 4);

        virtualinvoke r3.<org.apache.poi.ddf.EscherOptRecord: void addEscherProperty(org.apache.poi.ddf.EscherProperty)>($r28);

        $r5 = staticinvoke <org.apache.poi.hslf.model.Freeform: org.apache.poi.ddf.EscherProperty getEscherProperty(org.apache.poi.ddf.EscherOptRecord,int)>(r3, 16709);

        r26 = (org.apache.poi.ddf.EscherArrayProperty) $r5;

        if r26 != null goto label01;

        $r24 = staticinvoke <org.apache.poi.hslf.model.Freeform: org.apache.poi.ddf.EscherProperty getEscherProperty(org.apache.poi.ddf.EscherOptRecord,int)>(r3, 325);

        r26 = (org.apache.poi.ddf.EscherArrayProperty) $r24;

     label01:
        $r6 = staticinvoke <org.apache.poi.hslf.model.Freeform: org.apache.poi.ddf.EscherProperty getEscherProperty(org.apache.poi.ddf.EscherOptRecord,int)>(r3, 16710);

        $r25 = (org.apache.poi.ddf.EscherArrayProperty) $r6;

        r27 = $r25;

        if $r25 != null goto label02;

        $r23 = staticinvoke <org.apache.poi.hslf.model.Freeform: org.apache.poi.ddf.EscherProperty getEscherProperty(org.apache.poi.ddf.EscherOptRecord,int)>(r3, 326);

        r27 = (org.apache.poi.ddf.EscherArrayProperty) $r23;

     label02:
        if r26 != null goto label03;

        $r22 = r0.<org.apache.poi.hslf.model.Freeform: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r22.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "Freeform is missing GEOMETRY__VERTICES ");

        return null;

     label03:
        if r27 != null goto label04;

        $r21 = r0.<org.apache.poi.hslf.model.Freeform: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r21.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "Freeform is missing GEOMETRY__SEGMENTINFO ");

        return null;

     label04:
        $r29 = new java.awt.geom.GeneralPath;

        specialinvoke $r29.<java.awt.geom.GeneralPath: void <init>()>();

        $i0 = virtualinvoke r26.<org.apache.poi.ddf.EscherArrayProperty: int getNumberOfElementsInArray()>();

        $i1 = virtualinvoke r27.<org.apache.poi.ddf.EscherArrayProperty: int getNumberOfElementsInArray()>();

        i15 = 0;

        i16 = 0;

     label05:
        if i15 >= $i1 goto label11;

        if i16 >= $i0 goto label11;

        $r8 = virtualinvoke r27.<org.apache.poi.ddf.EscherArrayProperty: byte[] getElement(int)>(i15);

        $r9 = <org.apache.poi.hslf.model.Freeform: byte[] SEGMENTINFO_MOVETO>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r8, $r9);

        if $z0 == 0 goto label06;

        $i12 = i16;

        i16 = i16 + 1;

        $r20 = virtualinvoke r26.<org.apache.poi.ddf.EscherArrayProperty: byte[] getElement(int)>($i12);

        $s13 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r20, 0);

        $s14 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r20, 2);

        $f24 = (float) $s13;

        $f25 = $f24 * 72.0F;

        $f29 = $f25 / 576.0F;

        $f26 = (float) $s14;

        $f27 = $f26 * 72.0F;

        $f28 = $f27 / 576.0F;

        virtualinvoke $r29.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f29, $f28);

        goto label10;

     label06:
        $r10 = <org.apache.poi.hslf.model.Freeform: byte[] SEGMENTINFO_CUBICTO>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r8, $r10);

        if $z1 != 0 goto label07;

        $r14 = <org.apache.poi.hslf.model.Freeform: byte[] SEGMENTINFO_CUBICTO2>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r8, $r14);

        if $z2 == 0 goto label08;

     label07:
        i15 = i15 + 1;

        i17 = i16 + 1;

        $r11 = virtualinvoke r26.<org.apache.poi.ddf.EscherArrayProperty: byte[] getElement(int)>(i16);

        $s2 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r11, 0);

        $s3 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r11, 2);

        i18 = i17 + 1;

        $r12 = virtualinvoke r26.<org.apache.poi.ddf.EscherArrayProperty: byte[] getElement(int)>(i17);

        $s4 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r12, 0);

        $s5 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r12, 2);

        i16 = i18 + 1;

        $r13 = virtualinvoke r26.<org.apache.poi.ddf.EscherArrayProperty: byte[] getElement(int)>(i18);

        $s6 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r13, 0);

        $s7 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r13, 2);

        $f0 = (float) $s2;

        $f1 = $f0 * 72.0F;

        $f17 = $f1 / 576.0F;

        $f2 = (float) $s3;

        $f3 = $f2 * 72.0F;

        $f16 = $f3 / 576.0F;

        $f4 = (float) $s4;

        $f5 = $f4 * 72.0F;

        $f15 = $f5 / 576.0F;

        $f6 = (float) $s5;

        $f7 = $f6 * 72.0F;

        $f14 = $f7 / 576.0F;

        $f8 = (float) $s6;

        $f9 = $f8 * 72.0F;

        $f13 = $f9 / 576.0F;

        $f10 = (float) $s7;

        $f11 = $f10 * 72.0F;

        $f12 = $f11 / 576.0F;

        virtualinvoke $r29.<java.awt.geom.GeneralPath: void curveTo(float,float,float,float,float,float)>($f17, $f16, $f15, $f14, $f13, $f12);

        goto label10;

     label08:
        $r15 = <org.apache.poi.hslf.model.Freeform: byte[] SEGMENTINFO_LINETO>;

        $z3 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r8, $r15);

        if $z3 == 0 goto label10;

        i15 = i15 + 1;

        $r16 = virtualinvoke r27.<org.apache.poi.ddf.EscherArrayProperty: byte[] getElement(int)>(i15);

        $r17 = <org.apache.poi.hslf.model.Freeform: byte[] SEGMENTINFO_ESCAPE>;

        $z4 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r16, $r17);

        if $z4 == 0 goto label09;

        $i8 = i16 + 1;

        if $i8 >= $i0 goto label10;

        $i9 = i16;

        i16 = i16 + 1;

        $r19 = virtualinvoke r26.<org.apache.poi.ddf.EscherArrayProperty: byte[] getElement(int)>($i9);

        $s10 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r19, 0);

        $s11 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>($r19, 2);

        $f18 = (float) $s10;

        $f19 = $f18 * 72.0F;

        $f23 = $f19 / 576.0F;

        $f20 = (float) $s11;

        $f21 = $f20 * 72.0F;

        $f22 = $f21 / 576.0F;

        virtualinvoke $r29.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f23, $f22);

        goto label10;

     label09:
        $r18 = <org.apache.poi.hslf.model.Freeform: byte[] SEGMENTINFO_CLOSE>;

        $z5 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r16, $r18);

        if $z5 == 0 goto label10;

        virtualinvoke $r29.<java.awt.geom.GeneralPath: void closePath()>();

     label10:
        i15 = i15 + 1;

        goto label05;

     label11:
        return $r29;
    }

    public java.awt.Shape getOutline()
    {
        java.awt.Shape $r5;
        java.awt.geom.Rectangle2D $r2, $r3;
        java.awt.geom.AffineTransform $r4;
        org.apache.poi.hslf.model.Freeform r0;
        java.awt.geom.GeneralPath $r1, $r6;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;

        r0 := @this: org.apache.poi.hslf.model.Freeform;

        $r1 = virtualinvoke r0.<org.apache.poi.hslf.model.Freeform: java.awt.geom.GeneralPath getPath()>();

        if $r1 != null goto label1;

        $r6 = new java.awt.geom.GeneralPath;

        specialinvoke $r6.<java.awt.geom.GeneralPath: void <init>()>();

        return $r6;

     label1:
        $r2 = virtualinvoke r0.<org.apache.poi.hslf.model.Freeform: java.awt.geom.Rectangle2D getAnchor2D()>();

        $r3 = virtualinvoke $r1.<java.awt.geom.GeneralPath: java.awt.geom.Rectangle2D getBounds2D()>();

        $r4 = new java.awt.geom.AffineTransform;

        specialinvoke $r4.<java.awt.geom.AffineTransform: void <init>()>();

        $d0 = virtualinvoke $r2.<java.awt.geom.Rectangle2D: double getX()>();

        $d1 = virtualinvoke $r2.<java.awt.geom.Rectangle2D: double getY()>();

        virtualinvoke $r4.<java.awt.geom.AffineTransform: void translate(double,double)>($d0, $d1);

        $d2 = virtualinvoke $r2.<java.awt.geom.Rectangle2D: double getWidth()>();

        $d3 = virtualinvoke $r3.<java.awt.geom.Rectangle2D: double getWidth()>();

        $d4 = $d2 / $d3;

        $d5 = virtualinvoke $r2.<java.awt.geom.Rectangle2D: double getHeight()>();

        $d6 = virtualinvoke $r3.<java.awt.geom.Rectangle2D: double getHeight()>();

        $d7 = $d5 / $d6;

        virtualinvoke $r4.<java.awt.geom.AffineTransform: void scale(double,double)>($d4, $d7);

        $r5 = virtualinvoke $r4.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>($r1);

        return $r5;
    }

    static void <clinit>()
    {
        byte[] $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        $r0 = newarray (byte)[2];

        $r0[0] = 0;

        $r0[1] = 64;

        <org.apache.poi.hslf.model.Freeform: byte[] SEGMENTINFO_MOVETO> = $r0;

        $r1 = newarray (byte)[2];

        $r1[0] = 0;

        $r1[1] = -84;

        <org.apache.poi.hslf.model.Freeform: byte[] SEGMENTINFO_LINETO> = $r1;

        $r2 = newarray (byte)[2];

        $r2[0] = 1;

        $r2[1] = 0;

        <org.apache.poi.hslf.model.Freeform: byte[] SEGMENTINFO_ESCAPE> = $r2;

        $r3 = newarray (byte)[2];

        $r3[0] = 1;

        $r3[1] = 32;

        <org.apache.poi.hslf.model.Freeform: byte[] SEGMENTINFO_ESCAPE2> = $r3;

        $r4 = newarray (byte)[2];

        $r4[0] = 0;

        $r4[1] = -83;

        <org.apache.poi.hslf.model.Freeform: byte[] SEGMENTINFO_CUBICTO> = $r4;

        $r5 = newarray (byte)[2];

        $r5[0] = 0;

        $r5[1] = -77;

        <org.apache.poi.hslf.model.Freeform: byte[] SEGMENTINFO_CUBICTO2> = $r5;

        $r6 = newarray (byte)[2];

        $r6[0] = 1;

        $r6[1] = 96;

        <org.apache.poi.hslf.model.Freeform: byte[] SEGMENTINFO_CLOSE> = $r6;

        $r7 = newarray (byte)[2];

        $r7[0] = 0;

        $r7[1] = -128;

        <org.apache.poi.hslf.model.Freeform: byte[] SEGMENTINFO_END> = $r7;

        return;
    }
}
