class com.hp.hpl.jena.sparql.algebra.Transformer$WalkerVisitorSkipService extends com.hp.hpl.jena.sparql.algebra.OpWalker$WalkerVisitor
{

    public void <init>(com.hp.hpl.jena.sparql.algebra.OpVisitor, com.hp.hpl.jena.sparql.algebra.OpVisitor, com.hp.hpl.jena.sparql.algebra.OpVisitor)
    {
        com.hp.hpl.jena.sparql.algebra.Transformer$WalkerVisitorSkipService r0;
        com.hp.hpl.jena.sparql.algebra.OpVisitor r1, r2, r3;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.Transformer$WalkerVisitorSkipService;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.OpVisitor;

        r2 := @parameter1: com.hp.hpl.jena.sparql.algebra.OpVisitor;

        r3 := @parameter2: com.hp.hpl.jena.sparql.algebra.OpVisitor;

        specialinvoke r0.<com.hp.hpl.jena.sparql.algebra.OpWalker$WalkerVisitor: void <init>(com.hp.hpl.jena.sparql.algebra.OpVisitor,com.hp.hpl.jena.sparql.algebra.OpVisitor,com.hp.hpl.jena.sparql.algebra.OpVisitor)>(r1, r2, r3);

        return;
    }

    public void <init>(com.hp.hpl.jena.sparql.algebra.OpVisitor)
    {
        com.hp.hpl.jena.sparql.algebra.Transformer$WalkerVisitorSkipService r0;
        com.hp.hpl.jena.sparql.algebra.OpVisitor r1;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.Transformer$WalkerVisitorSkipService;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.OpVisitor;

        specialinvoke r0.<com.hp.hpl.jena.sparql.algebra.OpWalker$WalkerVisitor: void <init>(com.hp.hpl.jena.sparql.algebra.OpVisitor)>(r1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.algebra.op.OpService)
    {
        com.hp.hpl.jena.sparql.algebra.Transformer$WalkerVisitorSkipService r0;
        com.hp.hpl.jena.sparql.algebra.op.OpService r1;
        com.hp.hpl.jena.sparql.algebra.OpVisitor $r2, $r3;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.Transformer$WalkerVisitorSkipService;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpService;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.Transformer$WalkerVisitorSkipService: void before(com.hp.hpl.jena.sparql.algebra.Op)>(r1);

        $r2 = r0.<com.hp.hpl.jena.sparql.algebra.Transformer$WalkerVisitorSkipService: com.hp.hpl.jena.sparql.algebra.OpVisitor visitor>;

        if $r2 == null goto label1;

        $r3 = r0.<com.hp.hpl.jena.sparql.algebra.Transformer$WalkerVisitorSkipService: com.hp.hpl.jena.sparql.algebra.OpVisitor visitor>;

        virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpService: void visit(com.hp.hpl.jena.sparql.algebra.OpVisitor)>($r3);

     label1:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.algebra.Transformer$WalkerVisitorSkipService: void after(com.hp.hpl.jena.sparql.algebra.Op)>(r1);

        return;
    }
}
