public class org.apache.xml.dtm.ref.DTMChildIterNodeList extends org.apache.xml.dtm.ref.DTMNodeListBase
{
    private int m_firstChild;
    private org.apache.xml.dtm.DTM m_parentDTM;

    private void <init>()
    {
        org.apache.xml.dtm.ref.DTMChildIterNodeList r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMChildIterNodeList;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMNodeListBase: void <init>()>();

        return;
    }

    public void <init>(org.apache.xml.dtm.DTM, int)
    {
        org.apache.xml.dtm.ref.DTMChildIterNodeList r0;
        org.apache.xml.dtm.DTM r1;
        int i0, $i1;

        r0 := @this: org.apache.xml.dtm.ref.DTMChildIterNodeList;

        r1 := @parameter0: org.apache.xml.dtm.DTM;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMNodeListBase: void <init>()>();

        r0.<org.apache.xml.dtm.ref.DTMChildIterNodeList: org.apache.xml.dtm.DTM m_parentDTM> = r1;

        $i1 = interfaceinvoke r1.<org.apache.xml.dtm.DTM: int getFirstChild(int)>(i0);

        r0.<org.apache.xml.dtm.ref.DTMChildIterNodeList: int m_firstChild> = $i1;

        return;
    }

    public org.w3c.dom.Node item(int)
    {
        org.apache.xml.dtm.ref.DTMChildIterNodeList r0;
        org.w3c.dom.Node $r2;
        org.apache.xml.dtm.DTM $r1, $r3;
        int i0, i1, $i3, $i5, $i7;

        r0 := @this: org.apache.xml.dtm.ref.DTMChildIterNodeList;

        i0 := @parameter0: int;

        i1 = r0.<org.apache.xml.dtm.ref.DTMChildIterNodeList: int m_firstChild>;

        goto label2;

     label1:
        $r3 = r0.<org.apache.xml.dtm.ref.DTMChildIterNodeList: org.apache.xml.dtm.DTM m_parentDTM>;

        i1 = interfaceinvoke $r3.<org.apache.xml.dtm.DTM: int getNextSibling(int)>(i1);

     label2:
        $i3 = (int) -1;

        i0 = i0 + $i3;

        if i0 < 0 goto label3;

        $i5 = (int) -1;

        if i1 != $i5 goto label1;

     label3:
        $i7 = (int) -1;

        if i1 != $i7 goto label4;

        return null;

     label4:
        $r1 = r0.<org.apache.xml.dtm.ref.DTMChildIterNodeList: org.apache.xml.dtm.DTM m_parentDTM>;

        $r2 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>(i1);

        return $r2;
    }

    public int getLength()
    {
        org.apache.xml.dtm.ref.DTMChildIterNodeList r0;
        org.apache.xml.dtm.DTM $r1;
        int i0, i1, $i3;

        r0 := @this: org.apache.xml.dtm.ref.DTMChildIterNodeList;

        i0 = 0;

        i1 = r0.<org.apache.xml.dtm.ref.DTMChildIterNodeList: int m_firstChild>;

        goto label2;

     label1:
        i0 = i0 + 1;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMChildIterNodeList: org.apache.xml.dtm.DTM m_parentDTM>;

        i1 = interfaceinvoke $r1.<org.apache.xml.dtm.DTM: int getNextSibling(int)>(i1);

     label2:
        $i3 = (int) -1;

        if i1 != $i3 goto label1;

        return i0;
    }
}
