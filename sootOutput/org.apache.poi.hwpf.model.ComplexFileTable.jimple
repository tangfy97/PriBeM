public final class org.apache.poi.hwpf.model.ComplexFileTable extends java.lang.Object
{
    private static final byte GRPPRL_TYPE;
    private static final byte TEXT_PIECE_TABLE_TYPE;
    protected org.apache.poi.hwpf.model.TextPieceTable _tpt;
    private org.apache.poi.hwpf.sprm.SprmBuffer[] _grpprls;

    public void <init>()
    {
        org.apache.poi.hwpf.model.TextPieceTable $r1;
        org.apache.poi.hwpf.model.ComplexFileTable r0;

        r0 := @this: org.apache.poi.hwpf.model.ComplexFileTable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.poi.hwpf.model.TextPieceTable;

        specialinvoke $r1.<org.apache.poi.hwpf.model.TextPieceTable: void <init>()>();

        r0.<org.apache.poi.hwpf.model.ComplexFileTable: org.apache.poi.hwpf.model.TextPieceTable _tpt> = $r1;

        return;
    }

    public void <init>(byte[], byte[], int, int) throws java.io.IOException
    {
        byte[] r2, r7, $r9;
        java.lang.Object[] $r4;
        org.apache.poi.hwpf.model.TextPieceTable $r14;
        org.apache.poi.hwpf.sprm.SprmBuffer $r12;
        short $s5;
        byte $b0, $b2;
        int $i1, $i3, i4, i6, i7, i8, i9, i10, $i11, $i12, $i13;
        java.util.LinkedList $r11;
        org.apache.poi.hwpf.model.ComplexFileTable r0;
        org.apache.poi.hwpf.sprm.SprmBuffer[] $r3, $r5;
        java.io.IOException $r13;

        r0 := @this: org.apache.poi.hwpf.model.ComplexFileTable;

        r7 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        i6 := @parameter2: int;

        i4 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r11 = new java.util.LinkedList;

        specialinvoke $r11.<java.util.LinkedList: void <init>()>();

     label1:
        $b0 = r2[i6];

        if $b0 != 1 goto label2;

        i7 = i6 + 1;

        $s5 = staticinvoke <org.apache.poi.util.LittleEndian: short getShort(byte[],int)>(r2, i7);

        i8 = i7 + 2;

        $i11 = (int) $s5;

        $r9 = staticinvoke <org.apache.poi.util.LittleEndian: byte[] getByteArray(byte[],int,int)>(r2, i8, $i11);

        $i12 = (int) $s5;

        i6 = i8 + $i12;

        $r12 = new org.apache.poi.hwpf.sprm.SprmBuffer;

        specialinvoke $r12.<org.apache.poi.hwpf.sprm.SprmBuffer: void <init>(byte[],boolean,int)>($r9, 0, 0);

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label1;

     label2:
        $i1 = interfaceinvoke $r11.<java.util.List: int size()>();

        $r3 = newarray (org.apache.poi.hwpf.sprm.SprmBuffer)[$i1];

        $r4 = interfaceinvoke $r11.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (org.apache.poi.hwpf.sprm.SprmBuffer[]) $r4;

        r0.<org.apache.poi.hwpf.model.ComplexFileTable: org.apache.poi.hwpf.sprm.SprmBuffer[] _grpprls> = $r5;

        $b2 = r2[i6];

        $i13 = (int) $b2;

        if $i13 == 2 goto label3;

        $r13 = new java.io.IOException;

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>("The text piece table is corrupted");

        throw $r13;

     label3:
        i9 = i6 + 1;

        $i3 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, i9);

        i10 = i9 + 4;

        $r14 = new org.apache.poi.hwpf.model.TextPieceTable;

        specialinvoke $r14.<org.apache.poi.hwpf.model.TextPieceTable: void <init>(byte[],byte[],int,int,int)>(r7, r2, i10, $i3, i4);

        r0.<org.apache.poi.hwpf.model.ComplexFileTable: org.apache.poi.hwpf.model.TextPieceTable _tpt> = $r14;

        return;
    }

    public org.apache.poi.hwpf.model.TextPieceTable getTextPieceTable()
    {
        org.apache.poi.hwpf.model.TextPieceTable $r1;
        org.apache.poi.hwpf.model.ComplexFileTable r0;

        r0 := @this: org.apache.poi.hwpf.model.ComplexFileTable;

        $r1 = r0.<org.apache.poi.hwpf.model.ComplexFileTable: org.apache.poi.hwpf.model.TextPieceTable _tpt>;

        return $r1;
    }

    public org.apache.poi.hwpf.sprm.SprmBuffer[] getGrpprls()
    {
        org.apache.poi.hwpf.model.ComplexFileTable r0;
        org.apache.poi.hwpf.sprm.SprmBuffer[] $r1;

        r0 := @this: org.apache.poi.hwpf.model.ComplexFileTable;

        $r1 = r0.<org.apache.poi.hwpf.model.ComplexFileTable: org.apache.poi.hwpf.sprm.SprmBuffer[] _grpprls>;

        return $r1;
    }

    public void writeTo(org.apache.poi.hwpf.model.io.HWPFFileSystem) throws java.io.IOException
    {
        org.apache.poi.hwpf.model.ComplexFileTable r3;
        org.apache.poi.hwpf.model.io.HWPFOutputStream $r1, $r2;
        org.apache.poi.hwpf.model.io.HWPFFileSystem r0;

        r3 := @this: org.apache.poi.hwpf.model.ComplexFileTable;

        r0 := @parameter0: org.apache.poi.hwpf.model.io.HWPFFileSystem;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.model.io.HWPFFileSystem: org.apache.poi.hwpf.model.io.HWPFOutputStream getStream(java.lang.String)>("WordDocument");

        $r2 = virtualinvoke r0.<org.apache.poi.hwpf.model.io.HWPFFileSystem: org.apache.poi.hwpf.model.io.HWPFOutputStream getStream(java.lang.String)>("1Table");

        virtualinvoke r3.<org.apache.poi.hwpf.model.ComplexFileTable: void writeTo(org.apache.poi.hwpf.model.io.HWPFOutputStream,org.apache.poi.hwpf.model.io.HWPFOutputStream)>($r1, $r2);

        return;
    }

    public void writeTo(org.apache.poi.hwpf.model.io.HWPFOutputStream, org.apache.poi.hwpf.model.io.HWPFOutputStream) throws java.io.IOException
    {
        byte[] $r4, r5;
        org.apache.poi.hwpf.model.TextPieceTable $r3;
        org.apache.poi.hwpf.model.ComplexFileTable r1;
        int $i0;
        org.apache.poi.hwpf.model.io.HWPFOutputStream r0, r2;

        r1 := @this: org.apache.poi.hwpf.model.ComplexFileTable;

        r2 := @parameter0: org.apache.poi.hwpf.model.io.HWPFOutputStream;

        r0 := @parameter1: org.apache.poi.hwpf.model.io.HWPFOutputStream;

        virtualinvoke r0.<org.apache.poi.hwpf.model.io.HWPFOutputStream: void write(int)>(2);

        $r3 = r1.<org.apache.poi.hwpf.model.ComplexFileTable: org.apache.poi.hwpf.model.TextPieceTable _tpt>;

        $r4 = virtualinvoke $r3.<org.apache.poi.hwpf.model.TextPieceTable: byte[] writeTo(org.apache.poi.hwpf.model.io.HWPFOutputStream)>(r2);

        r5 = newarray (byte)[4];

        $i0 = lengthof $r4;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int)>(r5, $i0);

        virtualinvoke r0.<org.apache.poi.hwpf.model.io.HWPFOutputStream: void write(byte[])>(r5);

        virtualinvoke r0.<org.apache.poi.hwpf.model.io.HWPFOutputStream: void write(byte[])>($r4);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.poi.hwpf.model.ComplexFileTable: byte TEXT_PIECE_TABLE_TYPE> = 2;

        <org.apache.poi.hwpf.model.ComplexFileTable: byte GRPPRL_TYPE> = 1;

        return;
    }
}
