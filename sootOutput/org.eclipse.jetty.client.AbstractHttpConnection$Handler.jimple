class org.eclipse.jetty.client.AbstractHttpConnection$Handler extends org.eclipse.jetty.http.HttpParser$EventHandler
{
    final org.eclipse.jetty.client.AbstractHttpConnection this$0;

    private void <init>(org.eclipse.jetty.client.AbstractHttpConnection)
    {
        org.eclipse.jetty.client.AbstractHttpConnection r1;
        org.eclipse.jetty.client.AbstractHttpConnection$Handler r0;

        r0 := @this: org.eclipse.jetty.client.AbstractHttpConnection$Handler;

        r1 := @parameter0: org.eclipse.jetty.client.AbstractHttpConnection;

        r0.<org.eclipse.jetty.client.AbstractHttpConnection$Handler: org.eclipse.jetty.client.AbstractHttpConnection this$0> = r1;

        specialinvoke r0.<org.eclipse.jetty.http.HttpParser$EventHandler: void <init>()>();

        return;
    }

    public void startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer) throws java.io.IOException
    {
        org.eclipse.jetty.client.AbstractHttpConnection$Handler r0;
        org.eclipse.jetty.io.Buffer r1, r2, r3;

        r0 := @this: org.eclipse.jetty.client.AbstractHttpConnection$Handler;

        r1 := @parameter0: org.eclipse.jetty.io.Buffer;

        r2 := @parameter1: org.eclipse.jetty.io.Buffer;

        r3 := @parameter2: org.eclipse.jetty.io.Buffer;

        return;
    }

    public void startResponse(org.eclipse.jetty.io.Buffer, int, org.eclipse.jetty.io.Buffer) throws java.io.IOException
    {
        java.lang.Object[] $r12;
        org.eclipse.jetty.io.EndPoint $r14;
        org.eclipse.jetty.client.AbstractHttpConnection $r1, $r7, $r10, $r13, $r15, $r17;
        org.eclipse.jetty.client.AbstractHttpConnection$NonFinalResponseListener $r9;
        int i0;
        java.lang.String $r3, $r4;
        org.eclipse.jetty.io.Buffer r5, r6, $r16;
        boolean $z0, $z1;
        org.eclipse.jetty.client.AbstractHttpConnection$Handler r0;
        org.eclipse.jetty.http.HttpParser $r8;
        org.eclipse.jetty.util.log.Logger $r11;
        org.eclipse.jetty.client.HttpEventListener $r18;
        org.eclipse.jetty.client.HttpExchange r2;

        r0 := @this: org.eclipse.jetty.client.AbstractHttpConnection$Handler;

        r5 := @parameter0: org.eclipse.jetty.io.Buffer;

        i0 := @parameter1: int;

        r6 := @parameter2: org.eclipse.jetty.io.Buffer;

        $r1 = r0.<org.eclipse.jetty.client.AbstractHttpConnection$Handler: org.eclipse.jetty.client.AbstractHttpConnection this$0>;

        r2 = $r1.<org.eclipse.jetty.client.AbstractHttpConnection: org.eclipse.jetty.client.HttpExchange _exchange>;

        if r2 != null goto label1;

        $r11 = staticinvoke <org.eclipse.jetty.client.AbstractHttpConnection: org.eclipse.jetty.util.log.Logger access$200()>();

        $r12 = newarray (java.lang.Object)[0];

        interfaceinvoke $r11.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>("No exchange for response", $r12);

        $r13 = r0.<org.eclipse.jetty.client.AbstractHttpConnection$Handler: org.eclipse.jetty.client.AbstractHttpConnection this$0>;

        $r14 = staticinvoke <org.eclipse.jetty.client.AbstractHttpConnection: org.eclipse.jetty.io.EndPoint access$300(org.eclipse.jetty.client.AbstractHttpConnection)>($r13);

        interfaceinvoke $r14.<org.eclipse.jetty.io.EndPoint: void close()>();

        return;

     label1:
        lookupswitch(i0)
        {
            case 100: goto label2;
            case 102: goto label2;
            case 200: goto label3;
            default: goto label4;
        };

     label2:
        $r9 = new org.eclipse.jetty.client.AbstractHttpConnection$NonFinalResponseListener;

        $r10 = r0.<org.eclipse.jetty.client.AbstractHttpConnection$Handler: org.eclipse.jetty.client.AbstractHttpConnection this$0>;

        specialinvoke $r9.<org.eclipse.jetty.client.AbstractHttpConnection$NonFinalResponseListener: void <init>(org.eclipse.jetty.client.AbstractHttpConnection,org.eclipse.jetty.client.HttpExchange)>($r10, r2);

        virtualinvoke r2.<org.eclipse.jetty.client.HttpExchange: void setEventListener(org.eclipse.jetty.client.HttpEventListener)>($r9);

        goto label4;

     label3:
        $r3 = "CONNECT";

        $r4 = virtualinvoke r2.<org.eclipse.jetty.client.HttpExchange: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        if $z0 == 0 goto label4;

        $r7 = r0.<org.eclipse.jetty.client.AbstractHttpConnection$Handler: org.eclipse.jetty.client.AbstractHttpConnection this$0>;

        $r8 = $r7.<org.eclipse.jetty.client.AbstractHttpConnection: org.eclipse.jetty.http.HttpParser _parser>;

        virtualinvoke $r8.<org.eclipse.jetty.http.HttpParser: void setHeadResponse(boolean)>(1);

     label4:
        $r15 = r0.<org.eclipse.jetty.client.AbstractHttpConnection$Handler: org.eclipse.jetty.client.AbstractHttpConnection this$0>;

        $r16 = <org.eclipse.jetty.http.HttpVersions: org.eclipse.jetty.io.Buffer HTTP_1_1_BUFFER>;

        $z1 = virtualinvoke $r16.<java.lang.Object: boolean equals(java.lang.Object)>(r5);

        $r15.<org.eclipse.jetty.client.AbstractHttpConnection: boolean _http11> = $z1;

        $r17 = r0.<org.eclipse.jetty.client.AbstractHttpConnection$Handler: org.eclipse.jetty.client.AbstractHttpConnection this$0>;

        $r17.<org.eclipse.jetty.client.AbstractHttpConnection: int _status> = i0;

        $r18 = virtualinvoke r2.<org.eclipse.jetty.client.HttpExchange: org.eclipse.jetty.client.HttpEventListener getEventListener()>();

        interfaceinvoke $r18.<org.eclipse.jetty.client.HttpEventListener: void onResponseStatus(org.eclipse.jetty.io.Buffer,int,org.eclipse.jetty.io.Buffer)>(r5, i0, r6);

        virtualinvoke r2.<org.eclipse.jetty.client.HttpExchange: boolean setStatus(int)>(5);

        return;
    }

    public void parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer) throws java.io.IOException
    {
        org.eclipse.jetty.http.HttpHeaders $r4;
        org.eclipse.jetty.client.AbstractHttpConnection $r1, $r8;
        org.eclipse.jetty.client.AbstractHttpConnection$Handler r0;
        int $i0;
        org.eclipse.jetty.client.HttpEventListener $r5;
        org.eclipse.jetty.http.HttpHeaderValues $r7;
        org.eclipse.jetty.io.Buffer r3, r6, $r9;
        org.eclipse.jetty.client.HttpExchange r2;

        r0 := @this: org.eclipse.jetty.client.AbstractHttpConnection$Handler;

        r3 := @parameter0: org.eclipse.jetty.io.Buffer;

        r6 := @parameter1: org.eclipse.jetty.io.Buffer;

        $r1 = r0.<org.eclipse.jetty.client.AbstractHttpConnection$Handler: org.eclipse.jetty.client.AbstractHttpConnection this$0>;

        r2 = $r1.<org.eclipse.jetty.client.AbstractHttpConnection: org.eclipse.jetty.client.HttpExchange _exchange>;

        if r2 == null goto label2;

        $r4 = <org.eclipse.jetty.http.HttpHeaders: org.eclipse.jetty.http.HttpHeaders CACHE>;

        $i0 = virtualinvoke $r4.<org.eclipse.jetty.http.HttpHeaders: int getOrdinal(org.eclipse.jetty.io.Buffer)>(r3);

        if $i0 != 1 goto label1;

        $r8 = r0.<org.eclipse.jetty.client.AbstractHttpConnection$Handler: org.eclipse.jetty.client.AbstractHttpConnection this$0>;

        $r7 = <org.eclipse.jetty.http.HttpHeaderValues: org.eclipse.jetty.http.HttpHeaderValues CACHE>;

        $r9 = virtualinvoke $r7.<org.eclipse.jetty.http.HttpHeaderValues: org.eclipse.jetty.io.Buffer lookup(org.eclipse.jetty.io.Buffer)>(r6);

        $r8.<org.eclipse.jetty.client.AbstractHttpConnection: org.eclipse.jetty.io.Buffer _connectionHeader> = $r9;

     label1:
        $r5 = virtualinvoke r2.<org.eclipse.jetty.client.HttpExchange: org.eclipse.jetty.client.HttpEventListener getEventListener()>();

        interfaceinvoke $r5.<org.eclipse.jetty.client.HttpEventListener: void onResponseHeader(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>(r3, r6);

     label2:
        return;
    }

    public void headerComplete() throws java.io.IOException
    {
        org.eclipse.jetty.client.AbstractHttpConnection $r1;
        org.eclipse.jetty.client.AbstractHttpConnection$Handler r0;
        org.eclipse.jetty.client.HttpExchange r2;

        r0 := @this: org.eclipse.jetty.client.AbstractHttpConnection$Handler;

        $r1 = r0.<org.eclipse.jetty.client.AbstractHttpConnection$Handler: org.eclipse.jetty.client.AbstractHttpConnection this$0>;

        r2 = $r1.<org.eclipse.jetty.client.AbstractHttpConnection: org.eclipse.jetty.client.HttpExchange _exchange>;

        if r2 == null goto label1;

        virtualinvoke r2.<org.eclipse.jetty.client.HttpExchange: boolean setStatus(int)>(6);

     label1:
        return;
    }

    public void content(org.eclipse.jetty.io.Buffer) throws java.io.IOException
    {
        org.eclipse.jetty.client.AbstractHttpConnection $r1;
        org.eclipse.jetty.client.HttpEventListener $r3;
        org.eclipse.jetty.client.AbstractHttpConnection$Handler r0;
        org.eclipse.jetty.io.Buffer r4;
        org.eclipse.jetty.client.HttpExchange r2;

        r0 := @this: org.eclipse.jetty.client.AbstractHttpConnection$Handler;

        r4 := @parameter0: org.eclipse.jetty.io.Buffer;

        $r1 = r0.<org.eclipse.jetty.client.AbstractHttpConnection$Handler: org.eclipse.jetty.client.AbstractHttpConnection this$0>;

        r2 = $r1.<org.eclipse.jetty.client.AbstractHttpConnection: org.eclipse.jetty.client.HttpExchange _exchange>;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<org.eclipse.jetty.client.HttpExchange: org.eclipse.jetty.client.HttpEventListener getEventListener()>();

        interfaceinvoke $r3.<org.eclipse.jetty.client.HttpEventListener: void onResponseContent(org.eclipse.jetty.io.Buffer)>(r4);

     label1:
        return;
    }

    public void messageComplete(long) throws java.io.IOException
    {
        org.eclipse.jetty.client.AbstractHttpConnection $r1;
        long l0;
        org.eclipse.jetty.client.AbstractHttpConnection$Handler r0;
        org.eclipse.jetty.client.HttpExchange r2;

        r0 := @this: org.eclipse.jetty.client.AbstractHttpConnection$Handler;

        l0 := @parameter0: long;

        $r1 = r0.<org.eclipse.jetty.client.AbstractHttpConnection$Handler: org.eclipse.jetty.client.AbstractHttpConnection this$0>;

        r2 = $r1.<org.eclipse.jetty.client.AbstractHttpConnection: org.eclipse.jetty.client.HttpExchange _exchange>;

        if r2 == null goto label1;

        virtualinvoke r2.<org.eclipse.jetty.client.HttpExchange: boolean setStatus(int)>(7);

     label1:
        return;
    }

    public void earlyEOF()
    {
        org.eclipse.jetty.client.AbstractHttpConnection $r1;
        org.eclipse.jetty.client.HttpEventListener $r3;
        org.eclipse.jetty.client.AbstractHttpConnection$Handler r0;
        org.eclipse.jetty.io.EofException $r4;
        org.eclipse.jetty.client.HttpExchange r2;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.client.AbstractHttpConnection$Handler;

        $r1 = r0.<org.eclipse.jetty.client.AbstractHttpConnection$Handler: org.eclipse.jetty.client.AbstractHttpConnection this$0>;

        r2 = $r1.<org.eclipse.jetty.client.AbstractHttpConnection: org.eclipse.jetty.client.HttpExchange _exchange>;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<org.eclipse.jetty.client.HttpExchange: boolean isDone()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r2.<org.eclipse.jetty.client.HttpExchange: boolean setStatus(int)>(9);

        if $z1 == 0 goto label1;

        $r3 = virtualinvoke r2.<org.eclipse.jetty.client.HttpExchange: org.eclipse.jetty.client.HttpEventListener getEventListener()>();

        $r4 = new org.eclipse.jetty.io.EofException;

        specialinvoke $r4.<org.eclipse.jetty.io.EofException: void <init>(java.lang.String)>("early EOF");

        interfaceinvoke $r3.<org.eclipse.jetty.client.HttpEventListener: void onException(java.lang.Throwable)>($r4);

     label1:
        return;
    }

    void <init>(org.eclipse.jetty.client.AbstractHttpConnection, org.eclipse.jetty.client.AbstractHttpConnection$1)
    {
        org.eclipse.jetty.client.AbstractHttpConnection r1;
        org.eclipse.jetty.client.AbstractHttpConnection$Handler r0;
        org.eclipse.jetty.client.AbstractHttpConnection$1 r2;

        r0 := @this: org.eclipse.jetty.client.AbstractHttpConnection$Handler;

        r1 := @parameter0: org.eclipse.jetty.client.AbstractHttpConnection;

        r2 := @parameter1: org.eclipse.jetty.client.AbstractHttpConnection$1;

        specialinvoke r0.<org.eclipse.jetty.client.AbstractHttpConnection$Handler: void <init>(org.eclipse.jetty.client.AbstractHttpConnection)>(r1);

        return;
    }
}
