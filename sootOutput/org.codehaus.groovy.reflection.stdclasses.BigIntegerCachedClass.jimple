public class org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass extends org.codehaus.groovy.reflection.stdclasses.NumberCachedClass
{
    static java.lang.Class class$java$lang$Integer;
    static java.lang.Class class$java$lang$Short;
    static java.lang.Class class$java$lang$Byte;
    static java.lang.Class class$java$math$BigInteger;
    static java.lang.Class class$java$lang$Long;

    public void <init>(java.lang.Class)
    {
        java.lang.Class r1;
        org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass r0;

        r0 := @this: org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.codehaus.groovy.reflection.stdclasses.NumberCachedClass: void <init>(java.lang.Class)>(r1);

        return;
    }

    public boolean isDirectlyAssignable(java.lang.Object)
    {
        java.lang.Object r0;
        org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass r1;
        boolean $z0;

        r1 := @this: org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.math.BigInteger;

        return $z0;
    }

    public boolean isAssignableFrom(java.lang.Class)
    {
        org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass r10;
        boolean $z0;
        java.lang.Class r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15;

        r10 := @this: org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass;

        r0 := @parameter0: java.lang.Class;

        if r0 == null goto label11;

        $r1 = <org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass: java.lang.Class class$java$lang$Integer>;

        if $r1 != null goto label01;

        $r11 = staticinvoke <org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass: java.lang.Class class$(java.lang.String)>("java.lang.Integer");

        <org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass: java.lang.Class class$java$lang$Integer> = $r11;

        goto label02;

     label01:
        $r11 = <org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass: java.lang.Class class$java$lang$Integer>;

     label02:
        if r0 == $r11 goto label11;

        $r2 = <org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass: java.lang.Class class$java$lang$Short>;

        if $r2 != null goto label03;

        $r12 = staticinvoke <org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass: java.lang.Class class$(java.lang.String)>("java.lang.Short");

        <org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass: java.lang.Class class$java$lang$Short> = $r12;

        goto label04;

     label03:
        $r12 = <org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass: java.lang.Class class$java$lang$Short>;

     label04:
        if r0 == $r12 goto label11;

        $r3 = <org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass: java.lang.Class class$java$lang$Byte>;

        if $r3 != null goto label05;

        $r13 = staticinvoke <org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass: java.lang.Class class$(java.lang.String)>("java.lang.Byte");

        <org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass: java.lang.Class class$java$lang$Byte> = $r13;

        goto label06;

     label05:
        $r13 = <org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass: java.lang.Class class$java$lang$Byte>;

     label06:
        if r0 == $r13 goto label11;

        $r4 = <org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass: java.lang.Class class$java$math$BigInteger>;

        if $r4 != null goto label07;

        $r14 = staticinvoke <org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass: java.lang.Class class$(java.lang.String)>("java.math.BigInteger");

        <org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass: java.lang.Class class$java$math$BigInteger> = $r14;

        goto label08;

     label07:
        $r14 = <org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass: java.lang.Class class$java$math$BigInteger>;

     label08:
        if r0 == $r14 goto label11;

        $r5 = <org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass: java.lang.Class class$java$lang$Long>;

        if $r5 != null goto label09;

        $r15 = staticinvoke <org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass: java.lang.Class class$(java.lang.String)>("java.lang.Long");

        <org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass: java.lang.Class class$java$lang$Long> = $r15;

        goto label10;

     label09:
        $r15 = <org.codehaus.groovy.reflection.stdclasses.BigIntegerCachedClass: java.lang.Class class$java$lang$Long>;

     label10:
        if r0 == $r15 goto label11;

        $r6 = <java.lang.Integer: java.lang.Class TYPE>;

        if r0 == $r6 goto label11;

        $r7 = <java.lang.Short: java.lang.Class TYPE>;

        if r0 == $r7 goto label11;

        $r8 = <java.lang.Byte: java.lang.Class TYPE>;

        if r0 == $r8 goto label11;

        $r9 = <java.lang.Long: java.lang.Class TYPE>;

        if r0 != $r9 goto label12;

     label11:
        $z0 = 1;

        goto label13;

     label12:
        $z0 = 0;

     label13:
        return $z0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
