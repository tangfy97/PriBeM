class com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent extends java.lang.Object implements java.util.Iterator, org.apache.jena.atlas.lib.Closeable
{
    private java.util.Iterator iter;
    private java.util.concurrent.atomic.AtomicLong eCount;
    private boolean finished;
    private long startEpoch;

    void <init>(java.util.Iterator, java.util.concurrent.atomic.AtomicLong)
    {
        java.util.concurrent.atomic.AtomicLong r2;
        com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent r0;
        java.util.Iterator r1;
        long $l0;

        r0 := @this: com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent;

        r1 := @parameter0: java.util.Iterator;

        r2 := @parameter1: java.util.concurrent.atomic.AtomicLong;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent: boolean finished> = 0;

        r0.<com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent: java.util.Iterator iter> = r1;

        r0.<com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent: java.util.concurrent.atomic.AtomicLong eCount> = r2;

        $l0 = virtualinvoke r2.<java.util.concurrent.atomic.AtomicLong: long get()>();

        r0.<com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent: long startEpoch> = $l0;

        return;
    }

    private void checkCourrentModification()
    {
        com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent r0;
        java.lang.Object[] $r2;
        long $l0, $l1, $l3;
        java.util.concurrent.atomic.AtomicLong $r1;
        byte $b2;
        java.lang.Long $r3, $r4;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent;

        $z0 = r0.<com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent: boolean finished>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent: java.util.concurrent.atomic.AtomicLong eCount>;

        $l0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: long get()>();

        $l1 = r0.<com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent: long startEpoch>;

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label2;

        $r2 = newarray (java.lang.Object)[2];

        $l3 = r0.<com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent: long startEpoch>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r2[1] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Iterator: started at %d, now %d", $r2);

        staticinvoke <com.hp.hpl.jena.tdb.sys.DatasetControlMRSW: void access$000(java.lang.String)>($r5);

     label2:
        return;
    }

    public boolean hasNext()
    {
        com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent;

        specialinvoke r0.<com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent: void checkCourrentModification()>();

        $r1 = r0.<com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent: java.util.Iterator iter>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent: void close()>();

     label1:
        return $z0;
    }

    public java.lang.Object next()
    {
        com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent r0;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r3;

        r0 := @this: com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent;

        specialinvoke r0.<com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent: void checkCourrentModification()>();

     label1:
        $r1 = r0.<com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent: java.util.Iterator iter>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        virtualinvoke r0.<com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent: void close()>();

        throw $r3;

        catch java.util.NoSuchElementException from label1 to label2 with label3;
    }

    public void remove()
    {
        com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent r0;
        java.util.Iterator $r1;

        r0 := @this: com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent;

        specialinvoke r0.<com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent: void checkCourrentModification()>();

        $r1 = r0.<com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent: java.util.Iterator iter>;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        return;
    }

    public void close()
    {
        com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent r0;
        java.util.Iterator $r1;

        r0 := @this: com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent;

        r0.<com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent: boolean finished> = 1;

        $r1 = r0.<com.hp.hpl.jena.tdb.sys.DatasetControlMRSW$IteratorCheckNotConcurrent: java.util.Iterator iter>;

        staticinvoke <org.apache.jena.atlas.iterator.Iter: void close(java.util.Iterator)>($r1);

        return;
    }
}
