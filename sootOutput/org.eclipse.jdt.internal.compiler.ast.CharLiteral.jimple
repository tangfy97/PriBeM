public class org.eclipse.jdt.internal.compiler.ast.CharLiteral extends org.eclipse.jdt.internal.compiler.ast.NumberLiteral
{
    char value;

    public void <init>(char[], int, int)
    {
        int i0, i1;
        org.eclipse.jdt.internal.compiler.ast.CharLiteral r0;
        char[] r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CharLiteral;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.NumberLiteral: void <init>(char[],int,int)>(r1, i0, i1);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.CharLiteral: void computeValue()>();

        return;
    }

    public void computeConstant()
    {
        org.eclipse.jdt.internal.compiler.ast.CharLiteral r0;
        char $c0;
        org.eclipse.jdt.internal.compiler.impl.Constant $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CharLiteral;

        $c0 = r0.<org.eclipse.jdt.internal.compiler.ast.CharLiteral: char value>;

        $r1 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.CharConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(char)>($c0);

        r0.<org.eclipse.jdt.internal.compiler.ast.CharLiteral: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r1;

        return;
    }

    private void computeValue()
    {
        int $i2, $i5, $i6, $i9, $i10, i11, $i12, $i13, $i14, $i15;
        org.eclipse.jdt.internal.compiler.ast.CharLiteral r0;
        char $c0, $c1, $c3, $c4, $c7, $c8;
        org.eclipse.jdt.internal.compiler.impl.Constant $r4;
        char[] $r1, $r2, $r3, $r5;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.CharLiteral;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.CharLiteral: char[] source>;

        $c0 = $r1[1];

        r0.<org.eclipse.jdt.internal.compiler.ast.CharLiteral: char value> = $c0;

        $i12 = (int) $c0;

        if $i12 == 92 goto label01;

        return;

     label01:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.CharLiteral: char[] source>;

        $c1 = $r2[2];

        $i13 = (int) $c1;

        lookupswitch($i13)
        {
            case 34: goto label07;
            case 39: goto label08;
            case 92: goto label09;
            case 98: goto label02;
            case 102: goto label05;
            case 110: goto label04;
            case 114: goto label06;
            case 116: goto label03;
            default: goto label10;
        };

     label02:
        r0.<org.eclipse.jdt.internal.compiler.ast.CharLiteral: char value> = 8;

        goto label14;

     label03:
        r0.<org.eclipse.jdt.internal.compiler.ast.CharLiteral: char value> = 9;

        goto label14;

     label04:
        r0.<org.eclipse.jdt.internal.compiler.ast.CharLiteral: char value> = 10;

        goto label14;

     label05:
        r0.<org.eclipse.jdt.internal.compiler.ast.CharLiteral: char value> = 12;

        goto label14;

     label06:
        r0.<org.eclipse.jdt.internal.compiler.ast.CharLiteral: char value> = 13;

        goto label14;

     label07:
        r0.<org.eclipse.jdt.internal.compiler.ast.CharLiteral: char value> = 34;

        goto label14;

     label08:
        r0.<org.eclipse.jdt.internal.compiler.ast.CharLiteral: char value> = 39;

        goto label14;

     label09:
        r0.<org.eclipse.jdt.internal.compiler.ast.CharLiteral: char value> = 92;

        goto label14;

     label10:
        $i2 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int getNumericValue(char)>($c1);

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.CharLiteral: char[] source>;

        $c3 = $r3[3];

        $i14 = (int) $c3;

        if $i14 == 39 goto label11;

        $i5 = $i2 * 8;

        $i6 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int getNumericValue(char)>($c3);

        i11 = $i5 + $i6;

        goto label12;

     label11:
        $c4 = (char) $i2;

        r0.<org.eclipse.jdt.internal.compiler.ast.CharLiteral: char value> = $c4;

        $r4 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.CharConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(char)>($c4);

        r0.<org.eclipse.jdt.internal.compiler.ast.CharLiteral: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r4;

        goto label14;

     label12:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.CharLiteral: char[] source>;

        $c7 = $r5[4];

        $i15 = (int) $c7;

        if $i15 == 39 goto label13;

        $i9 = i11 * 8;

        $i10 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int getNumericValue(char)>($c7);

        i11 = $i9 + $i10;

     label13:
        $c8 = (char) i11;

        r0.<org.eclipse.jdt.internal.compiler.ast.CharLiteral: char value> = $c8;

     label14:
        return;
    }

    public void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream, boolean)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r3;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.impl.Constant $r2;
        int i0, $i1, $i2;
        org.eclipse.jdt.internal.compiler.ast.CharLiteral r1;
        boolean z0;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.CharLiteral;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        z0 := @parameter2: boolean;

        i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        if z0 == 0 goto label1;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.CharLiteral: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $i2 = r1.<org.eclipse.jdt.internal.compiler.ast.CharLiteral: int implicitConversion>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateConstant(org.eclipse.jdt.internal.compiler.impl.Constant,int)>($r2, $i2);

     label1:
        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.CharLiteral: int sourceStart>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i0, $i1);

        return;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding literalType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r0;
        org.eclipse.jdt.internal.compiler.ast.CharLiteral r1;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.CharLiteral;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $r0 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding CHAR>;

        return $r0;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.CharLiteral r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.CharLiteral;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.CharLiteral,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.CharLiteral,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        return;
    }
}
