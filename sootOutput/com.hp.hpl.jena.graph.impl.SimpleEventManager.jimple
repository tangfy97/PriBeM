public class com.hp.hpl.jena.graph.impl.SimpleEventManager extends java.lang.Object implements com.hp.hpl.jena.graph.GraphEventManager
{
    protected com.hp.hpl.jena.graph.Graph graph;
    protected java.util.List listeners;

    public void <init>(com.hp.hpl.jena.graph.Graph)
    {
        com.hp.hpl.jena.graph.impl.SimpleEventManager r0;
        com.hp.hpl.jena.graph.Graph r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: com.hp.hpl.jena.graph.impl.SimpleEventManager;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.graph.impl.SimpleEventManager: com.hp.hpl.jena.graph.Graph graph> = r1;

        $r2 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.graph.impl.SimpleEventManager: java.util.List listeners> = $r2;

        return;
    }

    public com.hp.hpl.jena.graph.GraphEventManager register(com.hp.hpl.jena.graph.GraphListener)
    {
        java.util.List $r2;
        com.hp.hpl.jena.graph.impl.SimpleEventManager r0;
        com.hp.hpl.jena.graph.GraphListener r1;

        r0 := @this: com.hp.hpl.jena.graph.impl.SimpleEventManager;

        r1 := @parameter0: com.hp.hpl.jena.graph.GraphListener;

        $r2 = r0.<com.hp.hpl.jena.graph.impl.SimpleEventManager: java.util.List listeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public com.hp.hpl.jena.graph.GraphEventManager unregister(com.hp.hpl.jena.graph.GraphListener)
    {
        java.util.List $r2;
        com.hp.hpl.jena.graph.impl.SimpleEventManager r0;
        com.hp.hpl.jena.graph.GraphListener r1;

        r0 := @this: com.hp.hpl.jena.graph.impl.SimpleEventManager;

        r1 := @parameter0: com.hp.hpl.jena.graph.GraphListener;

        $r2 = r0.<com.hp.hpl.jena.graph.impl.SimpleEventManager: java.util.List listeners>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return r0;
    }

    public boolean listening()
    {
        java.util.List $r1;
        com.hp.hpl.jena.graph.impl.SimpleEventManager r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.impl.SimpleEventManager;

        $r1 = r0.<com.hp.hpl.jena.graph.impl.SimpleEventManager: java.util.List listeners>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void notifyAddTriple(com.hp.hpl.jena.graph.Graph, com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.graph.impl.SimpleEventManager r0;
        java.util.Iterator $r2;
        com.hp.hpl.jena.graph.Triple r6;
        java.util.List $r1;
        java.lang.Object $r3;
        com.hp.hpl.jena.graph.GraphListener r4;
        com.hp.hpl.jena.graph.Graph r5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.impl.SimpleEventManager;

        r5 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r6 := @parameter1: com.hp.hpl.jena.graph.Triple;

        $r1 = r0.<com.hp.hpl.jena.graph.impl.SimpleEventManager: java.util.List listeners>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.hp.hpl.jena.graph.GraphListener) $r3;

        interfaceinvoke r4.<com.hp.hpl.jena.graph.GraphListener: void notifyAddTriple(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Triple)>(r5, r6);

        goto label1;

     label2:
        return;
    }

    public void notifyAddArray(com.hp.hpl.jena.graph.Graph, com.hp.hpl.jena.graph.Triple[])
    {
        com.hp.hpl.jena.graph.impl.SimpleEventManager r0;
        java.util.Iterator $r2;
        java.util.List $r1;
        java.lang.Object $r3;
        com.hp.hpl.jena.graph.GraphListener r4;
        com.hp.hpl.jena.graph.Graph r5;
        com.hp.hpl.jena.graph.Triple[] r6;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.impl.SimpleEventManager;

        r5 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r6 := @parameter1: com.hp.hpl.jena.graph.Triple[];

        $r1 = r0.<com.hp.hpl.jena.graph.impl.SimpleEventManager: java.util.List listeners>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.hp.hpl.jena.graph.GraphListener) $r3;

        interfaceinvoke r4.<com.hp.hpl.jena.graph.GraphListener: void notifyAddArray(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Triple[])>(r5, r6);

        goto label1;

     label2:
        return;
    }

    public void notifyAddList(com.hp.hpl.jena.graph.Graph, java.util.List)
    {
        com.hp.hpl.jena.graph.impl.SimpleEventManager r0;
        java.util.Iterator $r2;
        java.util.List $r1, r6;
        java.lang.Object $r3;
        com.hp.hpl.jena.graph.GraphListener r4;
        com.hp.hpl.jena.graph.Graph r5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.impl.SimpleEventManager;

        r5 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r6 := @parameter1: java.util.List;

        $r1 = r0.<com.hp.hpl.jena.graph.impl.SimpleEventManager: java.util.List listeners>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.hp.hpl.jena.graph.GraphListener) $r3;

        interfaceinvoke r4.<com.hp.hpl.jena.graph.GraphListener: void notifyAddList(com.hp.hpl.jena.graph.Graph,java.util.List)>(r5, r6);

        goto label1;

     label2:
        return;
    }

    public void notifyAddIterator(com.hp.hpl.jena.graph.Graph, java.util.List)
    {
        com.hp.hpl.jena.graph.impl.SimpleEventManager r0;
        java.util.Iterator $r2, $r7;
        java.util.List $r1, r6;
        java.lang.Object $r3;
        com.hp.hpl.jena.graph.GraphListener r4;
        com.hp.hpl.jena.graph.Graph r5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.impl.SimpleEventManager;

        r5 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r6 := @parameter1: java.util.List;

        $r1 = r0.<com.hp.hpl.jena.graph.impl.SimpleEventManager: java.util.List listeners>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.hp.hpl.jena.graph.GraphListener) $r3;

        $r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

        interfaceinvoke r4.<com.hp.hpl.jena.graph.GraphListener: void notifyAddIterator(com.hp.hpl.jena.graph.Graph,java.util.Iterator)>(r5, $r7);

        goto label1;

     label2:
        return;
    }

    public void notifyAddIterator(com.hp.hpl.jena.graph.Graph, java.util.Iterator)
    {
        java.util.List $r3;
        com.hp.hpl.jena.graph.impl.SimpleEventManager r0;
        java.util.Iterator r2;
        com.hp.hpl.jena.graph.Graph r1;

        r0 := @this: com.hp.hpl.jena.graph.impl.SimpleEventManager;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r2 := @parameter1: java.util.Iterator;

        $r3 = staticinvoke <com.hp.hpl.jena.util.IteratorCollection: java.util.List iteratorToList(java.util.Iterator)>(r2);

        virtualinvoke r0.<com.hp.hpl.jena.graph.impl.SimpleEventManager: void notifyAddIterator(com.hp.hpl.jena.graph.Graph,java.util.List)>(r1, $r3);

        return;
    }

    public void notifyAddGraph(com.hp.hpl.jena.graph.Graph, com.hp.hpl.jena.graph.Graph)
    {
        com.hp.hpl.jena.graph.impl.SimpleEventManager r0;
        java.util.Iterator $r2;
        java.util.List $r1;
        java.lang.Object $r3;
        com.hp.hpl.jena.graph.GraphListener r4;
        com.hp.hpl.jena.graph.Graph r5, r6;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.impl.SimpleEventManager;

        r5 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r6 := @parameter1: com.hp.hpl.jena.graph.Graph;

        $r1 = r0.<com.hp.hpl.jena.graph.impl.SimpleEventManager: java.util.List listeners>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.hp.hpl.jena.graph.GraphListener) $r3;

        interfaceinvoke r4.<com.hp.hpl.jena.graph.GraphListener: void notifyAddGraph(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Graph)>(r5, r6);

        goto label1;

     label2:
        return;
    }

    public void notifyDeleteTriple(com.hp.hpl.jena.graph.Graph, com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.graph.impl.SimpleEventManager r0;
        java.util.Iterator $r2;
        com.hp.hpl.jena.graph.Triple r6;
        java.util.List $r1;
        java.lang.Object $r3;
        com.hp.hpl.jena.graph.GraphListener r4;
        com.hp.hpl.jena.graph.Graph r5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.impl.SimpleEventManager;

        r5 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r6 := @parameter1: com.hp.hpl.jena.graph.Triple;

        $r1 = r0.<com.hp.hpl.jena.graph.impl.SimpleEventManager: java.util.List listeners>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.hp.hpl.jena.graph.GraphListener) $r3;

        interfaceinvoke r4.<com.hp.hpl.jena.graph.GraphListener: void notifyDeleteTriple(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Triple)>(r5, r6);

        goto label1;

     label2:
        return;
    }

    public void notifyDeleteArray(com.hp.hpl.jena.graph.Graph, com.hp.hpl.jena.graph.Triple[])
    {
        com.hp.hpl.jena.graph.impl.SimpleEventManager r0;
        java.util.Iterator $r2;
        java.util.List $r1;
        java.lang.Object $r3;
        com.hp.hpl.jena.graph.GraphListener r4;
        com.hp.hpl.jena.graph.Graph r5;
        com.hp.hpl.jena.graph.Triple[] r6;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.impl.SimpleEventManager;

        r5 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r6 := @parameter1: com.hp.hpl.jena.graph.Triple[];

        $r1 = r0.<com.hp.hpl.jena.graph.impl.SimpleEventManager: java.util.List listeners>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.hp.hpl.jena.graph.GraphListener) $r3;

        interfaceinvoke r4.<com.hp.hpl.jena.graph.GraphListener: void notifyDeleteArray(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Triple[])>(r5, r6);

        goto label1;

     label2:
        return;
    }

    public void notifyDeleteList(com.hp.hpl.jena.graph.Graph, java.util.List)
    {
        com.hp.hpl.jena.graph.impl.SimpleEventManager r0;
        java.util.Iterator $r2;
        java.util.List $r1, r6;
        java.lang.Object $r3;
        com.hp.hpl.jena.graph.GraphListener r4;
        com.hp.hpl.jena.graph.Graph r5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.impl.SimpleEventManager;

        r5 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r6 := @parameter1: java.util.List;

        $r1 = r0.<com.hp.hpl.jena.graph.impl.SimpleEventManager: java.util.List listeners>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.hp.hpl.jena.graph.GraphListener) $r3;

        interfaceinvoke r4.<com.hp.hpl.jena.graph.GraphListener: void notifyDeleteList(com.hp.hpl.jena.graph.Graph,java.util.List)>(r5, r6);

        goto label1;

     label2:
        return;
    }

    public void notifyDeleteIterator(com.hp.hpl.jena.graph.Graph, java.util.List)
    {
        com.hp.hpl.jena.graph.impl.SimpleEventManager r0;
        java.util.Iterator $r2, $r7;
        java.util.List $r1, r6;
        java.lang.Object $r3;
        com.hp.hpl.jena.graph.GraphListener r4;
        com.hp.hpl.jena.graph.Graph r5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.impl.SimpleEventManager;

        r5 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r6 := @parameter1: java.util.List;

        $r1 = r0.<com.hp.hpl.jena.graph.impl.SimpleEventManager: java.util.List listeners>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.hp.hpl.jena.graph.GraphListener) $r3;

        $r7 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

        interfaceinvoke r4.<com.hp.hpl.jena.graph.GraphListener: void notifyDeleteIterator(com.hp.hpl.jena.graph.Graph,java.util.Iterator)>(r5, $r7);

        goto label1;

     label2:
        return;
    }

    public void notifyDeleteIterator(com.hp.hpl.jena.graph.Graph, java.util.Iterator)
    {
        java.util.List $r3;
        com.hp.hpl.jena.graph.impl.SimpleEventManager r0;
        java.util.Iterator r2;
        com.hp.hpl.jena.graph.Graph r1;

        r0 := @this: com.hp.hpl.jena.graph.impl.SimpleEventManager;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r2 := @parameter1: java.util.Iterator;

        $r3 = staticinvoke <com.hp.hpl.jena.util.IteratorCollection: java.util.List iteratorToList(java.util.Iterator)>(r2);

        virtualinvoke r0.<com.hp.hpl.jena.graph.impl.SimpleEventManager: void notifyDeleteIterator(com.hp.hpl.jena.graph.Graph,java.util.List)>(r1, $r3);

        return;
    }

    public void notifyDeleteGraph(com.hp.hpl.jena.graph.Graph, com.hp.hpl.jena.graph.Graph)
    {
        com.hp.hpl.jena.graph.impl.SimpleEventManager r0;
        java.util.Iterator $r2;
        java.util.List $r1;
        java.lang.Object $r3;
        com.hp.hpl.jena.graph.GraphListener r4;
        com.hp.hpl.jena.graph.Graph r5, r6;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.impl.SimpleEventManager;

        r5 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r6 := @parameter1: com.hp.hpl.jena.graph.Graph;

        $r1 = r0.<com.hp.hpl.jena.graph.impl.SimpleEventManager: java.util.List listeners>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.hp.hpl.jena.graph.GraphListener) $r3;

        interfaceinvoke r4.<com.hp.hpl.jena.graph.GraphListener: void notifyDeleteGraph(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Graph)>(r5, r6);

        goto label1;

     label2:
        return;
    }

    public void notifyEvent(com.hp.hpl.jena.graph.Graph, java.lang.Object)
    {
        com.hp.hpl.jena.graph.impl.SimpleEventManager r0;
        java.util.Iterator $r2;
        java.util.List $r1;
        java.lang.Object $r3, r6;
        com.hp.hpl.jena.graph.GraphListener r4;
        com.hp.hpl.jena.graph.Graph r5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.graph.impl.SimpleEventManager;

        r5 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r6 := @parameter1: java.lang.Object;

        $r1 = r0.<com.hp.hpl.jena.graph.impl.SimpleEventManager: java.util.List listeners>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.hp.hpl.jena.graph.GraphListener) $r3;

        interfaceinvoke r4.<com.hp.hpl.jena.graph.GraphListener: void notifyEvent(com.hp.hpl.jena.graph.Graph,java.lang.Object)>(r5, r6);

        goto label1;

     label2:
        return;
    }

    public static com.hp.hpl.jena.util.iterator.ExtendedIterator notifyingRemove(com.hp.hpl.jena.graph.Graph, java.util.Iterator)
    {
        com.hp.hpl.jena.graph.impl.SimpleEventManager$1 $r0;
        java.util.Iterator r1;
        com.hp.hpl.jena.graph.Graph r2;

        r2 := @parameter0: com.hp.hpl.jena.graph.Graph;

        r1 := @parameter1: java.util.Iterator;

        $r0 = new com.hp.hpl.jena.graph.impl.SimpleEventManager$1;

        specialinvoke $r0.<com.hp.hpl.jena.graph.impl.SimpleEventManager$1: void <init>(java.util.Iterator,com.hp.hpl.jena.graph.Graph)>(r1, r2);

        return $r0;
    }
}
