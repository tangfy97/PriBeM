final class org.springframework.core.convert.support.StringToPropertiesConverter extends java.lang.Object implements org.springframework.core.convert.converter.Converter
{

    void <init>()
    {
        org.springframework.core.convert.support.StringToPropertiesConverter r0;

        r0 := @this: org.springframework.core.convert.support.StringToPropertiesConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.Properties convert(java.lang.String)
    {
        byte[] $r3;
        java.util.Properties $r0;
        org.springframework.core.convert.support.StringToPropertiesConverter r10;
        java.lang.IllegalArgumentException $r5;
        java.lang.Exception $r4;
        java.io.ByteArrayInputStream $r1;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String r2, $r9;

        r10 := @this: org.springframework.core.convert.support.StringToPropertiesConverter;

        r2 := @parameter0: java.lang.String;

     label1:
        $r0 = new java.util.Properties;

        specialinvoke $r0.<java.util.Properties: void <init>()>();

        $r1 = new java.io.ByteArrayInputStream;

        $r3 = virtualinvoke r2.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

        virtualinvoke $r0.<java.util.Properties: void load(java.io.InputStream)>($r1);

     label2:
        return $r0;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to parse [");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] into Properties");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r9, $r4);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public volatile java.lang.Object convert(java.lang.Object)
    {
        java.util.Properties $r3;
        org.springframework.core.convert.support.StringToPropertiesConverter r0;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @this: org.springframework.core.convert.support.StringToPropertiesConverter;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) r1;

        $r3 = virtualinvoke r0.<org.springframework.core.convert.support.StringToPropertiesConverter: java.util.Properties convert(java.lang.String)>($r2);

        return $r3;
    }
}
