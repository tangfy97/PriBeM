final class org.apache.poi.ss.util.MutableFPNumber$TenPower extends java.lang.Object
{
    private static final java.math.BigInteger FIVE;
    private static final org.apache.poi.ss.util.MutableFPNumber$TenPower[] _cache;
    public final java.math.BigInteger _multiplicand;
    public final java.math.BigInteger _divisor;
    public final int _divisorShift;
    public final int _multiplierShift;

    private void <init>(int)
    {
        int i0, $i1, i2, $i3, i4, $i5, $i6, $i7, $i8, i9, $i10, i11;
        java.math.BigInteger $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        org.apache.poi.ss.util.MutableFPNumber$TenPower r0;

        r0 := @this: org.apache.poi.ss.util.MutableFPNumber$TenPower;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <org.apache.poi.ss.util.MutableFPNumber$TenPower: java.math.BigInteger FIVE>;

        $r2 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger pow(int)>(i0);

        $i1 = virtualinvoke $r2.<java.math.BigInteger: int bitLength()>();

        i2 = 80 + $i1;

        $r3 = <java.math.BigInteger: java.math.BigInteger ONE>;

        $r4 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>(i2);

        $r5 = virtualinvoke $r4.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>($r2);

        $i3 = virtualinvoke $r5.<java.math.BigInteger: int bitLength()>();

        i4 = $i3 - 80;

        $r6 = virtualinvoke $r5.<java.math.BigInteger: java.math.BigInteger shiftRight(int)>(i4);

        r0.<org.apache.poi.ss.util.MutableFPNumber$TenPower: java.math.BigInteger _divisor> = $r6;

        i11 = $i1 - i4;

        $i5 = i11 + i0;

        $i6 = $i5 + 80;

        $i7 = neg $i6;

        r0.<org.apache.poi.ss.util.MutableFPNumber$TenPower: int _divisorShift> = $i7;

        $i8 = virtualinvoke $r2.<java.math.BigInteger: int bitLength()>();

        i9 = $i8 - 68;

        if i9 <= 0 goto label1;

        $i10 = i0 + i9;

        r0.<org.apache.poi.ss.util.MutableFPNumber$TenPower: int _multiplierShift> = $i10;

        $r7 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger shiftRight(int)>(i9);

        r0.<org.apache.poi.ss.util.MutableFPNumber$TenPower: java.math.BigInteger _multiplicand> = $r7;

        goto label2;

     label1:
        r0.<org.apache.poi.ss.util.MutableFPNumber$TenPower: int _multiplierShift> = i0;

        r0.<org.apache.poi.ss.util.MutableFPNumber$TenPower: java.math.BigInteger _multiplicand> = $r2;

     label2:
        return;
    }

    static org.apache.poi.ss.util.MutableFPNumber$TenPower getInstance(int)
    {
        org.apache.poi.ss.util.MutableFPNumber$TenPower $r1, r3;
        int i0;
        org.apache.poi.ss.util.MutableFPNumber$TenPower[] $r0, $r2;

        i0 := @parameter0: int;

        $r0 = <org.apache.poi.ss.util.MutableFPNumber$TenPower: org.apache.poi.ss.util.MutableFPNumber$TenPower[] _cache>;

        r3 = $r0[i0];

        if r3 != null goto label1;

        $r1 = new org.apache.poi.ss.util.MutableFPNumber$TenPower;

        specialinvoke $r1.<org.apache.poi.ss.util.MutableFPNumber$TenPower: void <init>(int)>(i0);

        r3 = $r1;

        $r2 = <org.apache.poi.ss.util.MutableFPNumber$TenPower: org.apache.poi.ss.util.MutableFPNumber$TenPower[] _cache>;

        $r2[i0] = $r1;

     label1:
        return r3;
    }

    static void <clinit>()
    {
        java.math.BigInteger $r0;
        org.apache.poi.ss.util.MutableFPNumber$TenPower[] $r1;

        $r0 = new java.math.BigInteger;

        specialinvoke $r0.<java.math.BigInteger: void <init>(java.lang.String)>("5");

        <org.apache.poi.ss.util.MutableFPNumber$TenPower: java.math.BigInteger FIVE> = $r0;

        $r1 = newarray (org.apache.poi.ss.util.MutableFPNumber$TenPower)[350];

        <org.apache.poi.ss.util.MutableFPNumber$TenPower: org.apache.poi.ss.util.MutableFPNumber$TenPower[] _cache> = $r1;

        return;
    }
}
