public class org.springframework.context.support.GenericApplicationContext extends org.springframework.context.support.AbstractApplicationContext implements org.springframework.beans.factory.support.BeanDefinitionRegistry
{
    private final org.springframework.beans.factory.support.DefaultListableBeanFactory beanFactory;
    private org.springframework.core.io.ResourceLoader resourceLoader;
    private boolean refreshed;

    public void <init>()
    {
        org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver $r4;
        org.springframework.beans.factory.support.DefaultListableBeanFactory $r1, $r3, $r5;
        org.springframework.context.support.GenericApplicationContext r0;
        org.springframework.core.LocalVariableTableParameterNameDiscoverer $r2;

        r0 := @this: org.springframework.context.support.GenericApplicationContext;

        specialinvoke r0.<org.springframework.context.support.AbstractApplicationContext: void <init>()>();

        r0.<org.springframework.context.support.GenericApplicationContext: boolean refreshed> = 0;

        $r1 = new org.springframework.beans.factory.support.DefaultListableBeanFactory;

        specialinvoke $r1.<org.springframework.beans.factory.support.DefaultListableBeanFactory: void <init>()>();

        r0.<org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory beanFactory> = $r1;

        $r3 = r0.<org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory beanFactory>;

        $r2 = new org.springframework.core.LocalVariableTableParameterNameDiscoverer;

        specialinvoke $r2.<org.springframework.core.LocalVariableTableParameterNameDiscoverer: void <init>()>();

        virtualinvoke $r3.<org.springframework.beans.factory.support.DefaultListableBeanFactory: void setParameterNameDiscoverer(org.springframework.core.ParameterNameDiscoverer)>($r2);

        $r5 = r0.<org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory beanFactory>;

        $r4 = new org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver;

        specialinvoke $r4.<org.springframework.beans.factory.'annotation'.QualifierAnnotationAutowireCandidateResolver: void <init>()>();

        virtualinvoke $r5.<org.springframework.beans.factory.support.DefaultListableBeanFactory: void setAutowireCandidateResolver(org.springframework.beans.factory.support.AutowireCandidateResolver)>($r4);

        return;
    }

    public void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)
    {
        org.springframework.beans.factory.support.DefaultListableBeanFactory r1;
        org.springframework.context.support.GenericApplicationContext r0;

        r0 := @this: org.springframework.context.support.GenericApplicationContext;

        r1 := @parameter0: org.springframework.beans.factory.support.DefaultListableBeanFactory;

        specialinvoke r0.<org.springframework.context.support.AbstractApplicationContext: void <init>()>();

        r0.<org.springframework.context.support.GenericApplicationContext: boolean refreshed> = 0;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "BeanFactory must not be null");

        r0.<org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory beanFactory> = r1;

        return;
    }

    public void <init>(org.springframework.context.ApplicationContext)
    {
        org.springframework.context.ApplicationContext r1;
        org.springframework.context.support.GenericApplicationContext r0;

        r0 := @this: org.springframework.context.support.GenericApplicationContext;

        r1 := @parameter0: org.springframework.context.ApplicationContext;

        specialinvoke r0.<org.springframework.context.support.GenericApplicationContext: void <init>()>();

        virtualinvoke r0.<org.springframework.context.support.GenericApplicationContext: void setParent(org.springframework.context.ApplicationContext)>(r1);

        return;
    }

    public void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory, org.springframework.context.ApplicationContext)
    {
        org.springframework.beans.factory.support.DefaultListableBeanFactory r1;
        org.springframework.context.ApplicationContext r2;
        org.springframework.context.support.GenericApplicationContext r0;

        r0 := @this: org.springframework.context.support.GenericApplicationContext;

        r1 := @parameter0: org.springframework.beans.factory.support.DefaultListableBeanFactory;

        r2 := @parameter1: org.springframework.context.ApplicationContext;

        specialinvoke r0.<org.springframework.context.support.GenericApplicationContext: void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)>(r1);

        virtualinvoke r0.<org.springframework.context.support.GenericApplicationContext: void setParent(org.springframework.context.ApplicationContext)>(r2);

        return;
    }

    public void setParent(org.springframework.context.ApplicationContext)
    {
        org.springframework.beans.factory.BeanFactory $r3;
        org.springframework.beans.factory.support.DefaultListableBeanFactory $r2;
        org.springframework.context.ApplicationContext r1;
        org.springframework.context.support.GenericApplicationContext r0;

        r0 := @this: org.springframework.context.support.GenericApplicationContext;

        r1 := @parameter0: org.springframework.context.ApplicationContext;

        specialinvoke r0.<org.springframework.context.support.AbstractApplicationContext: void setParent(org.springframework.context.ApplicationContext)>(r1);

        $r2 = r0.<org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory beanFactory>;

        $r3 = virtualinvoke r0.<org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.BeanFactory getInternalParentBeanFactory()>();

        virtualinvoke $r2.<org.springframework.beans.factory.support.DefaultListableBeanFactory: void setParentBeanFactory(org.springframework.beans.factory.BeanFactory)>($r3);

        return;
    }

    public void setId(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.context.support.GenericApplicationContext r0;

        r0 := @this: org.springframework.context.support.GenericApplicationContext;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.springframework.context.support.AbstractApplicationContext: void setId(java.lang.String)>(r1);

        return;
    }

    public void setAllowBeanDefinitionOverriding(boolean)
    {
        org.springframework.beans.factory.support.DefaultListableBeanFactory $r1;
        org.springframework.context.support.GenericApplicationContext r0;
        boolean z0;

        r0 := @this: org.springframework.context.support.GenericApplicationContext;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory beanFactory>;

        virtualinvoke $r1.<org.springframework.beans.factory.support.DefaultListableBeanFactory: void setAllowBeanDefinitionOverriding(boolean)>(z0);

        return;
    }

    public void setAllowCircularReferences(boolean)
    {
        org.springframework.beans.factory.support.DefaultListableBeanFactory $r1;
        org.springframework.context.support.GenericApplicationContext r0;
        boolean z0;

        r0 := @this: org.springframework.context.support.GenericApplicationContext;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory beanFactory>;

        virtualinvoke $r1.<org.springframework.beans.factory.support.DefaultListableBeanFactory: void setAllowCircularReferences(boolean)>(z0);

        return;
    }

    public void setResourceLoader(org.springframework.core.io.ResourceLoader)
    {
        org.springframework.core.io.ResourceLoader r1;
        org.springframework.context.support.GenericApplicationContext r0;

        r0 := @this: org.springframework.context.support.GenericApplicationContext;

        r1 := @parameter0: org.springframework.core.io.ResourceLoader;

        r0.<org.springframework.context.support.GenericApplicationContext: org.springframework.core.io.ResourceLoader resourceLoader> = r1;

        return;
    }

    public org.springframework.core.io.Resource getResource(java.lang.String)
    {
        org.springframework.core.io.ResourceLoader $r1, $r4;
        java.lang.String r2;
        org.springframework.context.support.GenericApplicationContext r0;
        org.springframework.core.io.Resource $r3, $r5;

        r0 := @this: org.springframework.context.support.GenericApplicationContext;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.springframework.context.support.GenericApplicationContext: org.springframework.core.io.ResourceLoader resourceLoader>;

        if $r1 == null goto label1;

        $r4 = r0.<org.springframework.context.support.GenericApplicationContext: org.springframework.core.io.ResourceLoader resourceLoader>;

        $r5 = interfaceinvoke $r4.<org.springframework.core.io.ResourceLoader: org.springframework.core.io.Resource getResource(java.lang.String)>(r2);

        return $r5;

     label1:
        $r3 = specialinvoke r0.<org.springframework.context.support.AbstractApplicationContext: org.springframework.core.io.Resource getResource(java.lang.String)>(r2);

        return $r3;
    }

    public org.springframework.core.io.Resource[] getResources(java.lang.String) throws java.io.IOException
    {
        org.springframework.core.io.ResourceLoader $r1, $r4;
        org.springframework.context.support.GenericApplicationContext r0;
        org.springframework.core.io.Resource[] $r3, $r6;
        java.lang.String r2;
        org.springframework.core.io.support.ResourcePatternResolver $r5;
        boolean $z0;

        r0 := @this: org.springframework.context.support.GenericApplicationContext;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.springframework.context.support.GenericApplicationContext: org.springframework.core.io.ResourceLoader resourceLoader>;

        $z0 = $r1 instanceof org.springframework.core.io.support.ResourcePatternResolver;

        if $z0 == 0 goto label1;

        $r4 = r0.<org.springframework.context.support.GenericApplicationContext: org.springframework.core.io.ResourceLoader resourceLoader>;

        $r5 = (org.springframework.core.io.support.ResourcePatternResolver) $r4;

        $r6 = interfaceinvoke $r5.<org.springframework.core.io.support.ResourcePatternResolver: org.springframework.core.io.Resource[] getResources(java.lang.String)>(r2);

        return $r6;

     label1:
        $r3 = specialinvoke r0.<org.springframework.context.support.AbstractApplicationContext: org.springframework.core.io.Resource[] getResources(java.lang.String)>(r2);

        return $r3;
    }

    protected final void refreshBeanFactory() throws java.lang.IllegalStateException
    {
        java.lang.IllegalStateException $r3;
        org.springframework.beans.factory.support.DefaultListableBeanFactory $r1;
        java.lang.String $r2;
        org.springframework.context.support.GenericApplicationContext r0;
        boolean $z0;

        r0 := @this: org.springframework.context.support.GenericApplicationContext;

        $z0 = r0.<org.springframework.context.support.GenericApplicationContext: boolean refreshed>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("GenericApplicationContext does not support multiple refresh attempts: just call \'refresh\' once");

        throw $r3;

     label1:
        $r1 = r0.<org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory beanFactory>;

        $r2 = virtualinvoke r0.<org.springframework.context.support.GenericApplicationContext: java.lang.String getId()>();

        virtualinvoke $r1.<org.springframework.beans.factory.support.DefaultListableBeanFactory: void setSerializationId(java.lang.String)>($r2);

        r0.<org.springframework.context.support.GenericApplicationContext: boolean refreshed> = 1;

        return;
    }

    protected void cancelRefresh(org.springframework.beans.BeansException)
    {
        org.springframework.beans.BeansException r2;
        org.springframework.beans.factory.support.DefaultListableBeanFactory $r1;
        org.springframework.context.support.GenericApplicationContext r0;

        r0 := @this: org.springframework.context.support.GenericApplicationContext;

        r2 := @parameter0: org.springframework.beans.BeansException;

        $r1 = r0.<org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory beanFactory>;

        virtualinvoke $r1.<org.springframework.beans.factory.support.DefaultListableBeanFactory: void setSerializationId(java.lang.String)>(null);

        specialinvoke r0.<org.springframework.context.support.AbstractApplicationContext: void cancelRefresh(org.springframework.beans.BeansException)>(r2);

        return;
    }

    protected final void closeBeanFactory()
    {
        org.springframework.beans.factory.support.DefaultListableBeanFactory $r1;
        org.springframework.context.support.GenericApplicationContext r0;

        r0 := @this: org.springframework.context.support.GenericApplicationContext;

        $r1 = r0.<org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory beanFactory>;

        virtualinvoke $r1.<org.springframework.beans.factory.support.DefaultListableBeanFactory: void setSerializationId(java.lang.String)>(null);

        return;
    }

    public final org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory()
    {
        org.springframework.beans.factory.support.DefaultListableBeanFactory $r1;
        org.springframework.context.support.GenericApplicationContext r0;

        r0 := @this: org.springframework.context.support.GenericApplicationContext;

        $r1 = r0.<org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory beanFactory>;

        return $r1;
    }

    public final org.springframework.beans.factory.support.DefaultListableBeanFactory getDefaultListableBeanFactory()
    {
        org.springframework.beans.factory.support.DefaultListableBeanFactory $r1;
        org.springframework.context.support.GenericApplicationContext r0;

        r0 := @this: org.springframework.context.support.GenericApplicationContext;

        $r1 = r0.<org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory beanFactory>;

        return $r1;
    }

    public void registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition) throws org.springframework.beans.factory.BeanDefinitionStoreException
    {
        org.springframework.beans.factory.config.BeanDefinition r2;
        java.lang.String r1;
        org.springframework.beans.factory.support.DefaultListableBeanFactory $r3;
        org.springframework.context.support.GenericApplicationContext r0;

        r0 := @this: org.springframework.context.support.GenericApplicationContext;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.springframework.beans.factory.config.BeanDefinition;

        $r3 = r0.<org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory beanFactory>;

        virtualinvoke $r3.<org.springframework.beans.factory.support.DefaultListableBeanFactory: void registerBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>(r1, r2);

        return;
    }

    public void removeBeanDefinition(java.lang.String) throws org.springframework.beans.factory.NoSuchBeanDefinitionException
    {
        java.lang.String r1;
        org.springframework.beans.factory.support.DefaultListableBeanFactory $r2;
        org.springframework.context.support.GenericApplicationContext r0;

        r0 := @this: org.springframework.context.support.GenericApplicationContext;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory beanFactory>;

        virtualinvoke $r2.<org.springframework.beans.factory.support.DefaultListableBeanFactory: void removeBeanDefinition(java.lang.String)>(r1);

        return;
    }

    public org.springframework.beans.factory.config.BeanDefinition getBeanDefinition(java.lang.String) throws org.springframework.beans.factory.NoSuchBeanDefinitionException
    {
        org.springframework.beans.factory.config.BeanDefinition $r3;
        java.lang.String r1;
        org.springframework.beans.factory.support.DefaultListableBeanFactory $r2;
        org.springframework.context.support.GenericApplicationContext r0;

        r0 := @this: org.springframework.context.support.GenericApplicationContext;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory beanFactory>;

        $r3 = virtualinvoke $r2.<org.springframework.beans.factory.support.DefaultListableBeanFactory: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition(java.lang.String)>(r1);

        return $r3;
    }

    public boolean isBeanNameInUse(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.beans.factory.support.DefaultListableBeanFactory $r2;
        org.springframework.context.support.GenericApplicationContext r0;
        boolean $z0;

        r0 := @this: org.springframework.context.support.GenericApplicationContext;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory beanFactory>;

        $z0 = virtualinvoke $r2.<org.springframework.beans.factory.support.DefaultListableBeanFactory: boolean isBeanNameInUse(java.lang.String)>(r1);

        return $z0;
    }

    public void registerAlias(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        org.springframework.beans.factory.support.DefaultListableBeanFactory $r3;
        org.springframework.context.support.GenericApplicationContext r0;

        r0 := @this: org.springframework.context.support.GenericApplicationContext;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory beanFactory>;

        virtualinvoke $r3.<org.springframework.beans.factory.support.DefaultListableBeanFactory: void registerAlias(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void removeAlias(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.beans.factory.support.DefaultListableBeanFactory $r2;
        org.springframework.context.support.GenericApplicationContext r0;

        r0 := @this: org.springframework.context.support.GenericApplicationContext;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory beanFactory>;

        virtualinvoke $r2.<org.springframework.beans.factory.support.DefaultListableBeanFactory: void removeAlias(java.lang.String)>(r1);

        return;
    }

    public boolean isAlias(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.beans.factory.support.DefaultListableBeanFactory $r2;
        org.springframework.context.support.GenericApplicationContext r0;
        boolean $z0;

        r0 := @this: org.springframework.context.support.GenericApplicationContext;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory beanFactory>;

        $z0 = virtualinvoke $r2.<org.springframework.beans.factory.support.DefaultListableBeanFactory: boolean isAlias(java.lang.String)>(r1);

        return $z0;
    }
}
