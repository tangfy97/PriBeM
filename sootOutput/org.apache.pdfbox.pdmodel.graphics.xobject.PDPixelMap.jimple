public class org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap extends org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage
{
    private static final org.apache.commons.logging.Log LOG;
    private java.awt.image.BufferedImage image;
    private static final java.lang.String PNG;

    public void <init>(org.apache.pdfbox.pdmodel.common.PDStream)
    {
        org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap r0;
        org.apache.pdfbox.pdmodel.common.PDStream r1;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.common.PDStream;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: void <init>(org.apache.pdfbox.pdmodel.common.PDStream,java.lang.String)>(r1, "png");

        r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: java.awt.image.BufferedImage image> = null;

        return;
    }

    public void <init>(org.apache.pdfbox.pdmodel.PDDocument, java.awt.image.BufferedImage) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap r0;
        java.awt.image.BufferedImage r2;
        org.apache.pdfbox.pdmodel.PDDocument r1;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        r2 := @parameter1: java.awt.image.BufferedImage;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String)>(r1, "png");

        r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: java.awt.image.BufferedImage image> = null;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: void createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,boolean)>(r1, r2, 0);

        return;
    }

    private void <init>(org.apache.pdfbox.pdmodel.PDDocument, java.awt.image.BufferedImage, boolean) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap r0;
        java.awt.image.BufferedImage r2;
        org.apache.pdfbox.pdmodel.PDDocument r1;
        boolean z0;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        r2 := @parameter1: java.awt.image.BufferedImage;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String)>(r1, "png");

        r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: java.awt.image.BufferedImage image> = null;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: void createImageStream(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,boolean)>(r1, r2, z0);

        return;
    }

    private void createImageStream(org.apache.pdfbox.pdmodel.PDDocument, java.awt.image.BufferedImage, boolean) throws java.io.IOException
    {
        java.awt.Color $r11;
        java.lang.IllegalStateException $r17;
        boolean $z0, z1;
        java.awt.image.BufferedImage r0, $r18, r20, r21;
        org.apache.pdfbox.pdmodel.PDDocument r9;
        javax.imageio.stream.MemoryCacheImageOutputStream $r16;
        org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray $r12;
        java.awt.image.DataBuffer $r15;
        java.lang.Throwable $r19;
        long $l14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, i19, i20, $i21, i22, i23, i24, i25, i26, i27, i28;
        java.awt.image.Raster $r14;
        org.apache.pdfbox.cos.COSStream $r5, $r24;
        org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB $r7;
        java.io.OutputStream $r6, r22;
        org.apache.pdfbox.cos.COSName $r10, $r25, $r26, $r27, $r28, $r29, $r30;
        org.apache.pdfbox.pdmodel.common.PDStream $r4;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap r3, $r8;
        java.awt.image.ColorModel $r1, $r2, $r13, $r23;

        r3 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap;

        r9 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        r0 := @parameter1: java.awt.image.BufferedImage;

        z1 := @parameter2: boolean;

        r20 = null;

        $i0 = virtualinvoke r0.<java.awt.image.BufferedImage: int getWidth()>();

        $i1 = virtualinvoke r0.<java.awt.image.BufferedImage: int getHeight()>();

        $r1 = virtualinvoke r0.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();

        $z0 = virtualinvoke $r1.<java.awt.image.ColorModel: boolean hasAlpha()>();

        if $z0 == 0 goto label05;

        r20 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: java.awt.image.BufferedImage extractAlphaImage(java.awt.image.BufferedImage)>(r0);

        $r18 = new java.awt.image.BufferedImage;

        specialinvoke $r18.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i0, $i1, 5);

        r21 = $r18;

        i19 = 0;

     label01:
        if i19 >= $i0 goto label04;

        i20 = 0;

     label02:
        if i20 >= $i1 goto label03;

        $i17 = virtualinvoke r0.<java.awt.image.BufferedImage: int getRGB(int,int)>(i19, i20);

        $i18 = $i17 & 16777215;

        virtualinvoke $r18.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(i19, i20, $i18);

        i20 = i20 + 1;

        goto label02;

     label03:
        i19 = i19 + 1;

        goto label01;

     label04:
        goto label06;

     label05:
        r21 = r0;

     label06:
        r22 = null;

     label07:
        $r2 = virtualinvoke r21.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();

        $i2 = virtualinvoke $r2.<java.awt.image.ColorModel: int getNumComponents()>();

        if $i2 == 3 goto label08;

        if $i2 == 1 goto label08;

        $r17 = new java.lang.IllegalStateException;

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>()>();

        throw $r17;

     label08:
        $r4 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: org.apache.pdfbox.pdmodel.common.PDStream getPDStream()>();

        virtualinvoke $r4.<org.apache.pdfbox.pdmodel.common.PDStream: void addCompression()>();

        $r5 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: org.apache.pdfbox.cos.COSStream getCOSStream()>();

        $r6 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createUnfilteredStream()>();

        r22 = $r6;

        if z1 != 0 goto label09;

        $i15 = virtualinvoke r0.<java.awt.image.BufferedImage: int getType()>();

        if $i15 == 10 goto label09;

        $i16 = virtualinvoke r0.<java.awt.image.BufferedImage: int getType()>();

        if $i16 != 12 goto label20;

     label09:
        $r23 = virtualinvoke r0.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();

        $i21 = virtualinvoke $r23.<java.awt.image.ColorModel: int getPixelSize()>();

        if $i21 > 8 goto label20;

        $r12 = new org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray;

        specialinvoke $r12.<org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray: void <init>()>();

        virtualinvoke r3.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: void setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>($r12);

        $r13 = virtualinvoke r0.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();

        $i7 = virtualinvoke $r13.<java.awt.image.ColorModel: int getPixelSize()>();

        i22 = $i7;

        if $i7 >= 8 goto label15;

        $r16 = new javax.imageio.stream.MemoryCacheImageOutputStream;

        specialinvoke $r16.<javax.imageio.stream.MemoryCacheImageOutputStream: void <init>(java.io.OutputStream)>($r6);

        i23 = 0;

     label10:
        if i23 >= $i1 goto label13;

        i24 = 0;

     label11:
        if i24 >= $i0 goto label12;

        $i12 = virtualinvoke r0.<java.awt.image.BufferedImage: int getRGB(int,int)>(i24, i23);

        $i13 = $i12 & 255;

        $l14 = (long) $i13;

        virtualinvoke $r16.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBits(long,int)>($l14, $i7);

        i24 = i24 + 1;

        goto label11;

     label12:
        i23 = i23 + 1;

        goto label10;

     label13:
        $i11 = virtualinvoke $r16.<javax.imageio.stream.MemoryCacheImageOutputStream: int getBitOffset()>();

        if $i11 == 0 goto label14;

        virtualinvoke $r16.<javax.imageio.stream.MemoryCacheImageOutputStream: void writeBit(int)>(0);

        goto label13;

     label14:
        virtualinvoke $r16.<javax.imageio.stream.MemoryCacheImageOutputStream: void flush()>();

        virtualinvoke $r16.<javax.imageio.stream.MemoryCacheImageOutputStream: void close()>();

        goto label24;

     label15:
        $r14 = virtualinvoke r21.<java.awt.image.BufferedImage: java.awt.image.Raster getData()>();

        $r15 = virtualinvoke $r14.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();

        i25 = 0;

     label16:
        if i25 >= $i1 goto label19;

        i26 = 0;

     label17:
        if i26 >= $i0 goto label18;

        $i8 = i25 * $i0;

        $i9 = $i8 + i26;

        $i10 = virtualinvoke $r15.<java.awt.image.DataBuffer: int getElem(int)>($i9);

        virtualinvoke $r6.<java.io.OutputStream: void write(int)>($i10);

        i26 = i26 + 1;

        goto label17;

     label18:
        i25 = i25 + 1;

        goto label16;

     label19:
        goto label24;

     label20:
        $r7 = <org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB: org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB INSTANCE>;

        virtualinvoke r3.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: void setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)>($r7);

        i22 = 8;

        i27 = 0;

     label21:
        if i27 >= $i1 goto label24;

        i28 = 0;

     label22:
        if i28 >= $i0 goto label23;

        $r11 = new java.awt.Color;

        $i3 = virtualinvoke r21.<java.awt.image.BufferedImage: int getRGB(int,int)>(i28, i27);

        specialinvoke $r11.<java.awt.Color: void <init>(int)>($i3);

        $i4 = virtualinvoke $r11.<java.awt.Color: int getRed()>();

        virtualinvoke $r6.<java.io.OutputStream: void write(int)>($i4);

        $i5 = virtualinvoke $r11.<java.awt.Color: int getGreen()>();

        virtualinvoke $r6.<java.io.OutputStream: void write(int)>($i5);

        $i6 = virtualinvoke $r11.<java.awt.Color: int getBlue()>();

        virtualinvoke $r6.<java.io.OutputStream: void write(int)>($i6);

        i28 = i28 + 1;

        goto label22;

     label23:
        i27 = i27 + 1;

        goto label21;

     label24:
        $r24 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: org.apache.pdfbox.cos.COSStream getCOSStream()>();

        $r25 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FILTER>;

        $r26 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FLATE_DECODE>;

        virtualinvoke $r24.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r25, $r26);

        $r27 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SUBTYPE>;

        $r28 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName IMAGE>;

        virtualinvoke $r24.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r27, $r28);

        $r29 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE>;

        $r30 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName XOBJECT>;

        virtualinvoke $r24.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r29, $r30);

        if r20 == null goto label25;

        $r8 = new org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap;

        specialinvoke $r8.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,boolean)>(r9, r20, 1);

        $r10 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SMASK>;

        virtualinvoke $r24.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r10, $r8);

     label25:
        virtualinvoke r3.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: void setBitsPerComponent(int)>(i22);

        virtualinvoke r3.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: void setHeight(int)>($i1);

        virtualinvoke r3.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: void setWidth(int)>($i0);

     label26:
        if $r6 == null goto label30;

        virtualinvoke $r6.<java.io.OutputStream: void close()>();

        goto label30;

     label27:
        $r19 := @caughtexception;

     label28:
        if r22 == null goto label29;

        virtualinvoke r22.<java.io.OutputStream: void close()>();

     label29:
        throw $r19;

     label30:
        return;

        catch java.lang.Throwable from label07 to label26 with label27;
        catch java.lang.Throwable from label27 to label28 with label27;
    }

    public java.awt.image.BufferedImage getRGBImage() throws java.io.IOException
    {
        byte[] $r3, $r8, $r9, $r12, $r13, r25, $r29, r31, $r41;
        java.awt.image.DataBufferByte $r40;
        byte $b10, $b16;
        java.awt.image.IndexColorModel $r42;
        java.lang.Exception $r23;
        org.apache.pdfbox.pdmodel.graphics.color.PDIndexed r26;
        org.apache.pdfbox.pdmodel.common.function.PDFunction $r15;
        org.apache.pdfbox.cos.COSBase $r18;
        java.lang.StringBuilder $r34, $r36, $r43;
        float[] $r17, $r30;
        java.lang.String $r35, $r37;
        org.apache.pdfbox.pdmodel.common.PDStream $r2;
        org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace $r4, $r14;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap r0;
        boolean $z0, $z1, $z2, z3, $z4, $z5;
        java.awt.image.BufferedImage $r1, $r6, $r7, $r22, $r44;
        float $f0, f1, $f2, $f3, $f4;
        java.awt.image.DataBuffer $r39;
        org.apache.pdfbox.cos.COSArray $r11, $r16, $r19;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i11, i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, i29, i30, $i31, $i32, $i33, $i34;
        double $d0, $d1;
        org.apache.pdfbox.pdmodel.graphics.color.PDSeparation r28;
        java.awt.image.ColorModel r27;
        org.apache.commons.logging.Log $r20, $r21, $r24, $r32;
        java.awt.image.WritableRaster $r38;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap;

        $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: java.awt.image.BufferedImage image>;

        if $r1 == null goto label01;

        $r22 = r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: java.awt.image.BufferedImage image>;

        return $r22;

     label01:
        $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: org.apache.pdfbox.pdmodel.common.PDStream getPDStream()>();

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.common.PDStream: byte[] getByteArray()>();

        r25 = $r3;

        $i0 = lengthof $r3;

        if $i0 != 0 goto label03;

        $r21 = <org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r21.<org.apache.commons.logging.Log: void error(java.lang.Object)>("Something went wrong ... the pixelmap doesn\'t contain any data.");

     label02:
        return null;

     label03:
        $i1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: int getWidth()>();

        $i2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: int getHeight()>();

        $i3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: int getBitsPerComponent()>();

        $r4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()>();

        if $r4 != null goto label05;

        $r20 = <org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r20.<org.apache.commons.logging.Log: void error(java.lang.Object)>("getColorSpace() returned NULL.");

     label04:
        return null;

     label05:
        $z0 = $r4 instanceof org.apache.pdfbox.pdmodel.graphics.color.PDIndexed;

        if $z0 == 0 goto label08;

        r26 = (org.apache.pdfbox.pdmodel.graphics.color.PDIndexed) $r4;

        $r18 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: org.apache.pdfbox.cos.COSBase getMask()>();

        if $r18 == null goto label06;

        $z4 = $r18 instanceof org.apache.pdfbox.cos.COSArray;

        if $z4 == 0 goto label06;

        $r19 = (org.apache.pdfbox.cos.COSArray) $r18;

        $i22 = virtualinvoke $r19.<org.apache.pdfbox.cos.COSArray: int getInt(int)>(0);

        r27 = virtualinvoke r26.<org.apache.pdfbox.pdmodel.graphics.color.PDIndexed: java.awt.image.ColorModel createColorModel(int,int)>($i3, $i22);

        goto label07;

     label06:
        r27 = virtualinvoke r26.<org.apache.pdfbox.pdmodel.graphics.color.PDIndexed: java.awt.image.ColorModel createColorModel(int)>($i3);

     label07:
        goto label25;

     label08:
        $z1 = $r4 instanceof org.apache.pdfbox.pdmodel.graphics.color.PDSeparation;

        if $z1 == 0 goto label19;

        r28 = (org.apache.pdfbox.pdmodel.graphics.color.PDSeparation) $r4;

        $r14 = virtualinvoke r28.<org.apache.pdfbox.pdmodel.graphics.color.PDSeparation: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getAlternateColorSpace()>();

        $i6 = virtualinvoke $r14.<org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace: int getNumberOfComponents()>();

        $r15 = virtualinvoke r28.<org.apache.pdfbox.pdmodel.graphics.color.PDSeparation: org.apache.pdfbox.pdmodel.common.function.PDFunction getTintTransform()>();

        $r16 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: org.apache.pdfbox.cos.COSArray getDecode()>();

        if $r16 == null goto label09;

        $i21 = virtualinvoke $r16.<org.apache.pdfbox.cos.COSArray: int getInt(int)>(0);

        if $i21 != 1 goto label09;

        $z5 = 1;

        goto label10;

     label09:
        $z5 = 0;

     label10:
        z3 = $z5;

        $d0 = (double) $i3;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, $d0);

        $i23 = (int) $d1;

        $i24 = $i23 - 1;

        $i25 = $i1 * $i2;

        $i26 = $i25 * $i6;

        $r29 = newarray (byte)[$i26];

        $i27 = $i1 * $i6;

        $r30 = newarray (float)[1];

        i28 = 0;

     label11:
        if i28 >= $i2 goto label18;

        i7 = i28 * $i27;

        i29 = 0;

     label12:
        if i29 >= $i1 goto label17;

        $i8 = i28 * $i1;

        $i9 = $i8 + i29;

        $b10 = $r3[$i9];

        $i34 = (int) $b10;

        $i11 = $i34 + 256;

        i12 = $i11 % 256;

        if z3 == 0 goto label13;

        $i18 = i12 / $i24;

        $i19 = 1 - $i18;

        $f4 = (float) $i19;

        $r30[0] = $f4;

        goto label14;

     label13:
        $i13 = i12 / $i24;

        $f0 = (float) $i13;

        $r30[0] = $f0;

     label14:
        $r17 = virtualinvoke $r15.<org.apache.pdfbox.pdmodel.common.function.PDFunction: float[] eval(float[])>($r30);

        $i20 = i29 * $i6;

        i30 = 0;

     label15:
        if i30 >= $i6 goto label16;

        f1 = $r17[i30];

        $i14 = i7 + $i20;

        $i17 = $i14 + i30;

        $f2 = (float) $i24;

        $f3 = f1 * $f2;

        $i15 = (int) $f3;

        $b16 = (byte) $i15;

        $r29[$i17] = $b16;

        i30 = i30 + 1;

        goto label15;

     label16:
        i29 = i29 + 1;

        goto label12;

     label17:
        i28 = i28 + 1;

        goto label11;

     label18:
        r25 = $r29;

        r27 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace: java.awt.image.ColorModel createColorModel(int)>($i3);

        goto label25;

     label19:
        if $i3 != 1 goto label24;

        $z2 = $r4 instanceof org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray;

        if $z2 == 0 goto label22;

        $r11 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: org.apache.pdfbox.cos.COSArray getDecode()>();

        if $r11 == null goto label20;

        $i5 = virtualinvoke $r11.<org.apache.pdfbox.cos.COSArray: int getInt(int)>(0);

        if $i5 != 1 goto label20;

        $r13 = newarray (byte)[1];

        $r13[0] = -1;

        r31 = $r13;

        goto label21;

     label20:
        $r12 = newarray (byte)[2];

        $r12[0] = 0;

        $r12[1] = -1;

        r31 = $r12;

     label21:
        goto label23;

     label22:
        $r9 = newarray (byte)[2];

        $r9[0] = 0;

        $r9[1] = -1;

        r31 = $r9;

     label23:
        $r42 = new java.awt.image.IndexColorModel;

        $i4 = lengthof r31;

        specialinvoke $r42.<java.awt.image.IndexColorModel: void <init>(int,int,byte[],byte[],byte[],int)>($i3, $i4, r31, r31, r31, 1);

        r27 = $r42;

        goto label25;

     label24:
        r27 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace: java.awt.image.ColorModel createColorModel(int)>($i3);

     label25:
        $r32 = <org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: org.apache.commons.logging.Log LOG>;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ColorModel: ");

        $r35 = virtualinvoke r27.<java.awt.image.ColorModel: java.lang.String toString()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r32.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r37);

        $r38 = virtualinvoke r27.<java.awt.image.ColorModel: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>($i1, $i2);

        $r39 = virtualinvoke $r38.<java.awt.image.WritableRaster: java.awt.image.DataBuffer getDataBuffer()>();

        $r40 = (java.awt.image.DataBufferByte) $r39;

        $r41 = virtualinvoke $r40.<java.awt.image.DataBufferByte: byte[] getData()>();

        $r8 = r25;

        $i31 = lengthof r25;

        $i32 = lengthof $r41;

        if $i31 >= $i32 goto label26;

        $i33 = lengthof r25;

        goto label27;

     label26:
        $i33 = lengthof $r41;

     label27:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r41, 0, $i33);

        $r44 = new java.awt.image.BufferedImage;

        specialinvoke $r44.<java.awt.image.BufferedImage: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)>(r27, $r38, 0, null);

        r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: java.awt.image.BufferedImage image> = $r44;

        $r6 = r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: java.awt.image.BufferedImage image>;

        $r7 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: java.awt.image.BufferedImage applyMasks(java.awt.image.BufferedImage)>($r6);

     label28:
        return $r7;

     label29:
        $r23 := @caughtexception;

        $r24 = <org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r24.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r23, $r23);

        return null;

        catch java.lang.Exception from label01 to label02 with label29;
        catch java.lang.Exception from label03 to label04 with label29;
        catch java.lang.Exception from label05 to label28 with label29;
    }

    public void write2OutputStream(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r2;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap r0;
        java.awt.image.BufferedImage $r1, $r3;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap;

        r2 := @parameter0: java.io.OutputStream;

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: java.awt.image.BufferedImage getRGBImage()>();

        $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: java.awt.image.BufferedImage image>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: java.awt.image.BufferedImage image>;

        staticinvoke <org.apache.pdfbox.util.ImageIOUtil: boolean writeImage(java.awt.image.BufferedImage,java.lang.String,java.io.OutputStream)>($r3, "png", r2);

     label1:
        return;
    }

    public org.apache.pdfbox.cos.COSDictionary getDecodeParams()
    {
        org.apache.pdfbox.cos.COSName $r2;
        org.apache.pdfbox.cos.COSDictionary $r4;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap r0;
        org.apache.pdfbox.cos.COSBase $r3;
        org.apache.pdfbox.cos.COSStream $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: org.apache.pdfbox.cos.COSStream getCOSStream()>();

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DECODE_PARMS>;

        $r3 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r2);

        if $r3 == null goto label3;

        $z0 = $r3 instanceof org.apache.pdfbox.cos.COSDictionary;

        if $z0 == 0 goto label1;

        $r4 = (org.apache.pdfbox.cos.COSDictionary) $r3;

        return $r4;

     label1:
        $z1 = $r3 instanceof org.apache.pdfbox.cos.COSArray;

        if $z1 == 0 goto label2;

        return null;

     label2:
        return null;

     label3:
        return null;
    }

    public int getPredictor()
    {
        org.apache.pdfbox.cos.COSDictionary $r1;
        org.apache.pdfbox.cos.COSName $r2;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap r0;
        int $i0, $i2;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: org.apache.pdfbox.cos.COSDictionary getDecodeParams()>();

        if $r1 == null goto label1;

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PREDICTOR>;

        $i0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName)>($r2);

        $i2 = (int) -1;

        if $i0 == $i2 goto label1;

        return $i0;

     label1:
        return 1;
    }

    public void clear()
    {
        org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap r0;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDXObjectImage: void clear()>();

        r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: java.awt.image.BufferedImage image> = null;

        return;
    }

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        <org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: java.lang.String PNG> = "png";

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/pdfbox/pdmodel/graphics/xobject/PDPixelMap;");

        <org.apache.pdfbox.pdmodel.graphics.xobject.PDPixelMap: org.apache.commons.logging.Log LOG> = $r0;

        return;
    }
}
