abstract class org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache extends java.lang.Object
{
    final org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer this$0;

    private void <init>(org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache r0;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer;

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    abstract void flush();

    public void skip(int)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache r0, $r3, $r5;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer $r1, $r2, $r4;
        int i0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: void flush()>();

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer this$0>;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer this$0>;

        $r3 = staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache access$100(org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer)>($r1);

        staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache access$002(org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer,org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache)>($r2, $r3);

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer this$0>;

        $r5 = staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache access$000(org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer)>($r4);

        virtualinvoke $r5.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: void skip(int)>(i0);

        return;
    }

    public void characters(java.lang.String)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache r0, $r3, $r5;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer $r1, $r2, $r4;
        java.lang.String r6;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache;

        r6 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: void flush()>();

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer this$0>;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer this$0>;

        $r3 = staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache access$200(org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer)>($r1);

        staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache access$002(org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer,org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache)>($r2, $r3);

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer this$0>;

        $r5 = staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache access$000(org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer)>($r4);

        virtualinvoke $r5.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: void characters(java.lang.String)>(r6);

        return;
    }

    public void deleteCharacters(java.lang.String)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache r0, $r3, $r5;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer $r1, $r2, $r4;
        java.lang.String r6;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache;

        r6 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: void flush()>();

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer this$0>;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer this$0>;

        $r3 = staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache access$300(org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer)>($r1);

        staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache access$002(org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer,org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache)>($r2, $r3);

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer this$0>;

        $r5 = staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache access$000(org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer)>($r4);

        virtualinvoke $r5.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: void deleteCharacters(java.lang.String)>(r6);

        return;
    }

    void <init>(org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer, org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$1)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache r0;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$1 r2;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$1;

        specialinvoke r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: void <init>(org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer)>(r1);

        return;
    }
}
