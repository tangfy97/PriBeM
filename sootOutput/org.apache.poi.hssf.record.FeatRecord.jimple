public final class org.apache.poi.hssf.record.FeatRecord extends org.apache.poi.hssf.record.StandardRecord
{
    private static org.apache.poi.util.POILogger logger;
    public static final short sid;
    private org.apache.poi.hssf.record.common.FtrHeader futureHeader;
    private int isf_sharedFeatureType;
    private byte reserved1;
    private long reserved2;
    private long cbFeatData;
    private int reserved3;
    private org.apache.poi.ss.util.CellRangeAddress[] cellRefs;
    private org.apache.poi.hssf.record.common.SharedFeature sharedFeature;

    public void <init>()
    {
        org.apache.poi.hssf.record.FeatRecord r0;
        org.apache.poi.hssf.record.common.FtrHeader $r1, $r2;

        r0 := @this: org.apache.poi.hssf.record.FeatRecord;

        specialinvoke r0.<org.apache.poi.hssf.record.StandardRecord: void <init>()>();

        $r1 = new org.apache.poi.hssf.record.common.FtrHeader;

        specialinvoke $r1.<org.apache.poi.hssf.record.common.FtrHeader: void <init>()>();

        r0.<org.apache.poi.hssf.record.FeatRecord: org.apache.poi.hssf.record.common.FtrHeader futureHeader> = $r1;

        $r2 = r0.<org.apache.poi.hssf.record.FeatRecord: org.apache.poi.hssf.record.common.FtrHeader futureHeader>;

        virtualinvoke $r2.<org.apache.poi.hssf.record.common.FtrHeader: void setRecordType(short)>(2152);

        return;
    }

    public short getSid()
    {
        org.apache.poi.hssf.record.FeatRecord r0;

        r0 := @this: org.apache.poi.hssf.record.FeatRecord;

        return 2152;
    }

    public void <init>(org.apache.poi.hssf.record.RecordInputStream)
    {
        long $l3, $l6;
        org.apache.poi.hssf.record.common.FeatProtection $r18;
        org.apache.poi.ss.util.CellRangeAddress[] $r3, $r4, $r15;
        short $s0, $s7;
        org.apache.poi.hssf.record.RecordInputStream r2;
        byte $b1;
        int $i2, $i4, $i5, $i8, $i9, $i10, i11, $i12, $i13;
        org.apache.poi.hssf.record.common.FtrHeader $r16;
        org.apache.poi.hssf.record.common.FeatSmartTag $r20;
        java.lang.String $r13;
        org.apache.poi.ss.util.CellRangeAddress $r17;
        org.apache.poi.hssf.record.FeatRecord r0;
        org.apache.poi.util.POILogger $r9;
        org.apache.poi.hssf.record.common.FeatFormulaErr2 $r19;
        java.lang.StringBuilder $r10, $r11, $r12, $r21;

        r0 := @this: org.apache.poi.hssf.record.FeatRecord;

        r2 := @parameter0: org.apache.poi.hssf.record.RecordInputStream;

        specialinvoke r0.<org.apache.poi.hssf.record.StandardRecord: void <init>()>();

        $r16 = new org.apache.poi.hssf.record.common.FtrHeader;

        specialinvoke $r16.<org.apache.poi.hssf.record.common.FtrHeader: void <init>(org.apache.poi.hssf.record.RecordInputStream)>(r2);

        r0.<org.apache.poi.hssf.record.FeatRecord: org.apache.poi.hssf.record.common.FtrHeader futureHeader> = $r16;

        $s0 = virtualinvoke r2.<org.apache.poi.hssf.record.RecordInputStream: short readShort()>();

        $i12 = (int) $s0;

        r0.<org.apache.poi.hssf.record.FeatRecord: int isf_sharedFeatureType> = $i12;

        $b1 = virtualinvoke r2.<org.apache.poi.hssf.record.RecordInputStream: byte readByte()>();

        r0.<org.apache.poi.hssf.record.FeatRecord: byte reserved1> = $b1;

        $i2 = virtualinvoke r2.<org.apache.poi.hssf.record.RecordInputStream: int readInt()>();

        $l3 = (long) $i2;

        r0.<org.apache.poi.hssf.record.FeatRecord: long reserved2> = $l3;

        $i4 = virtualinvoke r2.<org.apache.poi.hssf.record.RecordInputStream: int readUShort()>();

        $i5 = virtualinvoke r2.<org.apache.poi.hssf.record.RecordInputStream: int readInt()>();

        $l6 = (long) $i5;

        r0.<org.apache.poi.hssf.record.FeatRecord: long cbFeatData> = $l6;

        $s7 = virtualinvoke r2.<org.apache.poi.hssf.record.RecordInputStream: short readShort()>();

        $i13 = (int) $s7;

        r0.<org.apache.poi.hssf.record.FeatRecord: int reserved3> = $i13;

        $r3 = newarray (org.apache.poi.ss.util.CellRangeAddress)[$i4];

        r0.<org.apache.poi.hssf.record.FeatRecord: org.apache.poi.ss.util.CellRangeAddress[] cellRefs> = $r3;

        i11 = 0;

     label1:
        $r4 = r0.<org.apache.poi.hssf.record.FeatRecord: org.apache.poi.ss.util.CellRangeAddress[] cellRefs>;

        $i8 = lengthof $r4;

        if i11 >= $i8 goto label2;

        $r15 = r0.<org.apache.poi.hssf.record.FeatRecord: org.apache.poi.ss.util.CellRangeAddress[] cellRefs>;

        $r17 = new org.apache.poi.ss.util.CellRangeAddress;

        specialinvoke $r17.<org.apache.poi.ss.util.CellRangeAddress: void <init>(org.apache.poi.hssf.record.RecordInputStream)>(r2);

        $r15[i11] = $r17;

        i11 = i11 + 1;

        goto label1;

     label2:
        $i9 = r0.<org.apache.poi.hssf.record.FeatRecord: int isf_sharedFeatureType>;

        tableswitch($i9)
        {
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            default: goto label6;
        };

     label3:
        $r18 = new org.apache.poi.hssf.record.common.FeatProtection;

        specialinvoke $r18.<org.apache.poi.hssf.record.common.FeatProtection: void <init>(org.apache.poi.hssf.record.RecordInputStream)>(r2);

        r0.<org.apache.poi.hssf.record.FeatRecord: org.apache.poi.hssf.record.common.SharedFeature sharedFeature> = $r18;

        goto label7;

     label4:
        $r19 = new org.apache.poi.hssf.record.common.FeatFormulaErr2;

        specialinvoke $r19.<org.apache.poi.hssf.record.common.FeatFormulaErr2: void <init>(org.apache.poi.hssf.record.RecordInputStream)>(r2);

        r0.<org.apache.poi.hssf.record.FeatRecord: org.apache.poi.hssf.record.common.SharedFeature sharedFeature> = $r19;

        goto label7;

     label5:
        $r20 = new org.apache.poi.hssf.record.common.FeatSmartTag;

        specialinvoke $r20.<org.apache.poi.hssf.record.common.FeatSmartTag: void <init>(org.apache.poi.hssf.record.RecordInputStream)>(r2);

        r0.<org.apache.poi.hssf.record.FeatRecord: org.apache.poi.hssf.record.common.SharedFeature sharedFeature> = $r20;

        goto label7;

     label6:
        $r9 = <org.apache.poi.hssf.record.FeatRecord: org.apache.poi.util.POILogger logger>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown Shared Feature ");

        $i10 = r0.<org.apache.poi.hssf.record.FeatRecord: int isf_sharedFeatureType>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found!");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(7, $r13);

     label7:
        return;
    }

    public java.lang.String toString()
    {
        org.apache.poi.hssf.record.FeatRecord r2;
        java.lang.String $r1;
        java.lang.StringBuffer $r0;

        r2 := @this: org.apache.poi.hssf.record.FeatRecord;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[SHARED FEATURE]\n");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[/SHARED FEATURE]\n");

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    public void serialize(org.apache.poi.util.LittleEndianOutput)
    {
        long $l2, $l5;
        org.apache.poi.ss.util.CellRangeAddress[] $r3, $r4, $r6;
        org.apache.poi.hssf.record.common.SharedFeature $r5;
        byte $b1;
        org.apache.poi.util.LittleEndianOutput r1;
        int $i0, $i3, $i4, $i6, $i7, $i8, i9, $i10;
        org.apache.poi.hssf.record.common.FtrHeader $r2;
        org.apache.poi.ss.util.CellRangeAddress $r7;
        org.apache.poi.hssf.record.FeatRecord r0;

        r0 := @this: org.apache.poi.hssf.record.FeatRecord;

        r1 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        $r2 = r0.<org.apache.poi.hssf.record.FeatRecord: org.apache.poi.hssf.record.common.FtrHeader futureHeader>;

        virtualinvoke $r2.<org.apache.poi.hssf.record.common.FtrHeader: void serialize(org.apache.poi.util.LittleEndianOutput)>(r1);

        $i0 = r0.<org.apache.poi.hssf.record.FeatRecord: int isf_sharedFeatureType>;

        interfaceinvoke r1.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i0);

        $b1 = r0.<org.apache.poi.hssf.record.FeatRecord: byte reserved1>;

        $i10 = (int) $b1;

        interfaceinvoke r1.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($i10);

        $l2 = r0.<org.apache.poi.hssf.record.FeatRecord: long reserved2>;

        $i3 = (int) $l2;

        interfaceinvoke r1.<org.apache.poi.util.LittleEndianOutput: void writeInt(int)>($i3);

        $r3 = r0.<org.apache.poi.hssf.record.FeatRecord: org.apache.poi.ss.util.CellRangeAddress[] cellRefs>;

        $i4 = lengthof $r3;

        interfaceinvoke r1.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i4);

        $l5 = r0.<org.apache.poi.hssf.record.FeatRecord: long cbFeatData>;

        $i6 = (int) $l5;

        interfaceinvoke r1.<org.apache.poi.util.LittleEndianOutput: void writeInt(int)>($i6);

        $i7 = r0.<org.apache.poi.hssf.record.FeatRecord: int reserved3>;

        interfaceinvoke r1.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i7);

        i9 = 0;

     label1:
        $r4 = r0.<org.apache.poi.hssf.record.FeatRecord: org.apache.poi.ss.util.CellRangeAddress[] cellRefs>;

        $i8 = lengthof $r4;

        if i9 >= $i8 goto label2;

        $r6 = r0.<org.apache.poi.hssf.record.FeatRecord: org.apache.poi.ss.util.CellRangeAddress[] cellRefs>;

        $r7 = $r6[i9];

        virtualinvoke $r7.<org.apache.poi.ss.util.CellRangeAddress: void serialize(org.apache.poi.util.LittleEndianOutput)>(r1);

        i9 = i9 + 1;

        goto label1;

     label2:
        $r5 = r0.<org.apache.poi.hssf.record.FeatRecord: org.apache.poi.hssf.record.common.SharedFeature sharedFeature>;

        interfaceinvoke $r5.<org.apache.poi.hssf.record.common.SharedFeature: void serialize(org.apache.poi.util.LittleEndianOutput)>(r1);

        return;
    }

    protected int getDataSize()
    {
        org.apache.poi.hssf.record.FeatRecord r0;
        org.apache.poi.ss.util.CellRangeAddress[] $r1;
        org.apache.poi.hssf.record.common.SharedFeature $r2;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.poi.hssf.record.FeatRecord;

        $r1 = r0.<org.apache.poi.hssf.record.FeatRecord: org.apache.poi.ss.util.CellRangeAddress[] cellRefs>;

        $i0 = lengthof $r1;

        $i1 = $i0 * 8;

        $i2 = 27 + $i1;

        $r2 = r0.<org.apache.poi.hssf.record.FeatRecord: org.apache.poi.hssf.record.common.SharedFeature sharedFeature>;

        $i3 = interfaceinvoke $r2.<org.apache.poi.hssf.record.common.SharedFeature: int getDataSize()>();

        $i4 = $i2 + $i3;

        return $i4;
    }

    public int getIsf_sharedFeatureType()
    {
        org.apache.poi.hssf.record.FeatRecord r0;
        int $i0;

        r0 := @this: org.apache.poi.hssf.record.FeatRecord;

        $i0 = r0.<org.apache.poi.hssf.record.FeatRecord: int isf_sharedFeatureType>;

        return $i0;
    }

    public long getCbFeatData()
    {
        org.apache.poi.hssf.record.FeatRecord r0;
        long $l0;

        r0 := @this: org.apache.poi.hssf.record.FeatRecord;

        $l0 = r0.<org.apache.poi.hssf.record.FeatRecord: long cbFeatData>;

        return $l0;
    }

    public void setCbFeatData(long)
    {
        org.apache.poi.hssf.record.FeatRecord r0;
        long l0;

        r0 := @this: org.apache.poi.hssf.record.FeatRecord;

        l0 := @parameter0: long;

        r0.<org.apache.poi.hssf.record.FeatRecord: long cbFeatData> = l0;

        return;
    }

    public org.apache.poi.ss.util.CellRangeAddress[] getCellRefs()
    {
        org.apache.poi.hssf.record.FeatRecord r0;
        org.apache.poi.ss.util.CellRangeAddress[] $r1;

        r0 := @this: org.apache.poi.hssf.record.FeatRecord;

        $r1 = r0.<org.apache.poi.hssf.record.FeatRecord: org.apache.poi.ss.util.CellRangeAddress[] cellRefs>;

        return $r1;
    }

    public void setCellRefs(org.apache.poi.ss.util.CellRangeAddress[])
    {
        org.apache.poi.hssf.record.FeatRecord r0;
        org.apache.poi.ss.util.CellRangeAddress[] r1;

        r0 := @this: org.apache.poi.hssf.record.FeatRecord;

        r1 := @parameter0: org.apache.poi.ss.util.CellRangeAddress[];

        r0.<org.apache.poi.hssf.record.FeatRecord: org.apache.poi.ss.util.CellRangeAddress[] cellRefs> = r1;

        return;
    }

    public org.apache.poi.hssf.record.common.SharedFeature getSharedFeature()
    {
        org.apache.poi.hssf.record.FeatRecord r0;
        org.apache.poi.hssf.record.common.SharedFeature $r1;

        r0 := @this: org.apache.poi.hssf.record.FeatRecord;

        $r1 = r0.<org.apache.poi.hssf.record.FeatRecord: org.apache.poi.hssf.record.common.SharedFeature sharedFeature>;

        return $r1;
    }

    public void setSharedFeature(org.apache.poi.hssf.record.common.SharedFeature)
    {
        org.apache.poi.hssf.record.FeatRecord r0;
        long $l2;
        org.apache.poi.hssf.record.common.SharedFeature r1, $r2;
        int $i0, $i1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.poi.hssf.record.FeatRecord;

        r1 := @parameter0: org.apache.poi.hssf.record.common.SharedFeature;

        r0.<org.apache.poi.hssf.record.FeatRecord: org.apache.poi.hssf.record.common.SharedFeature sharedFeature> = r1;

        $z0 = r1 instanceof org.apache.poi.hssf.record.common.FeatProtection;

        if $z0 == 0 goto label1;

        r0.<org.apache.poi.hssf.record.FeatRecord: int isf_sharedFeatureType> = 2;

     label1:
        $z1 = r1 instanceof org.apache.poi.hssf.record.common.FeatFormulaErr2;

        if $z1 == 0 goto label2;

        r0.<org.apache.poi.hssf.record.FeatRecord: int isf_sharedFeatureType> = 3;

     label2:
        $z2 = r1 instanceof org.apache.poi.hssf.record.common.FeatSmartTag;

        if $z2 == 0 goto label3;

        r0.<org.apache.poi.hssf.record.FeatRecord: int isf_sharedFeatureType> = 4;

     label3:
        $i0 = r0.<org.apache.poi.hssf.record.FeatRecord: int isf_sharedFeatureType>;

        if $i0 != 3 goto label4;

        $r2 = r0.<org.apache.poi.hssf.record.FeatRecord: org.apache.poi.hssf.record.common.SharedFeature sharedFeature>;

        $i1 = interfaceinvoke $r2.<org.apache.poi.hssf.record.common.SharedFeature: int getDataSize()>();

        $l2 = (long) $i1;

        r0.<org.apache.poi.hssf.record.FeatRecord: long cbFeatData> = $l2;

        goto label5;

     label4:
        r0.<org.apache.poi.hssf.record.FeatRecord: long cbFeatData> = 0L;

     label5:
        return;
    }

    public java.lang.Object clone()
    {
        org.apache.poi.hssf.record.FeatRecord r0;
        org.apache.poi.hssf.record.Record $r1;

        r0 := @this: org.apache.poi.hssf.record.FeatRecord;

        $r1 = virtualinvoke r0.<org.apache.poi.hssf.record.FeatRecord: org.apache.poi.hssf.record.Record cloneViaReserialise()>();

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        <org.apache.poi.hssf.record.FeatRecord: short sid> = 2152;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hssf/record/FeatRecord;");

        <org.apache.poi.hssf.record.FeatRecord: org.apache.poi.util.POILogger logger> = $r0;

        return;
    }
}
