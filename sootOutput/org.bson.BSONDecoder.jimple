public class org.bson.BSONDecoder extends java.lang.Object
{
    private org.bson.BSONDecoder$Input _in;
    private org.bson.BSONCallback _callback;
    private byte[] _random;
    private org.bson.io.PoolOutputBuffer _stringBuffer;

    public void <init>()
    {
        byte[] $r1;
        org.bson.io.PoolOutputBuffer $r2;
        org.bson.BSONDecoder r0;

        r0 := @this: org.bson.BSONDecoder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[1024];

        r0.<org.bson.BSONDecoder: byte[] _random> = $r1;

        $r2 = new org.bson.io.PoolOutputBuffer;

        specialinvoke $r2.<org.bson.io.PoolOutputBuffer: void <init>()>();

        r0.<org.bson.BSONDecoder: org.bson.io.PoolOutputBuffer _stringBuffer> = $r2;

        return;
    }

    public org.bson.BSONObject readObject(byte[])
    {
        byte[] r2;
        java.io.ByteArrayInputStream $r1;
        org.bson.BSONDecoder r0;
        org.bson.BSONObject $r3;
        java.io.IOException $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: org.bson.BSONDecoder;

        r2 := @parameter0: byte[];

     label1:
        $r1 = new java.io.ByteArrayInputStream;

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>(r2);

        $r3 = virtualinvoke r0.<org.bson.BSONDecoder: org.bson.BSONObject readObject(java.io.InputStream)>($r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("should be impossible", $r4);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public org.bson.BSONObject readObject(java.io.InputStream) throws java.io.IOException
    {
        org.bson.BSONDecoder r1;
        org.bson.BasicBSONCallback $r0;
        org.bson.BSONObject $r4;
        java.lang.Object $r3;
        java.io.InputStream r2;

        r1 := @this: org.bson.BSONDecoder;

        r2 := @parameter0: java.io.InputStream;

        $r0 = new org.bson.BasicBSONCallback;

        specialinvoke $r0.<org.bson.BasicBSONCallback: void <init>()>();

        virtualinvoke r1.<org.bson.BSONDecoder: int decode(java.io.InputStream,org.bson.BSONCallback)>(r2, $r0);

        $r3 = virtualinvoke $r0.<org.bson.BasicBSONCallback: java.lang.Object get()>();

        $r4 = (org.bson.BSONObject) $r3;

        return $r4;
    }

    public int decode(byte[], org.bson.BSONCallback)
    {
        byte[] r3;
        java.io.IOException $r5;
        java.lang.RuntimeException $r6;
        java.io.ByteArrayInputStream $r2;
        org.bson.BSONCallback r4;
        org.bson.BSONDecoder r0;
        org.bson.BSONDecoder$Input $r1;
        int $i0;

        r0 := @this: org.bson.BSONDecoder;

        r3 := @parameter0: byte[];

        r4 := @parameter1: org.bson.BSONCallback;

     label1:
        $r1 = new org.bson.BSONDecoder$Input;

        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>(r3);

        specialinvoke $r1.<org.bson.BSONDecoder$Input: void <init>(org.bson.BSONDecoder,java.io.InputStream)>(r0, $r2);

        $i0 = virtualinvoke r0.<org.bson.BSONDecoder: int decode(org.bson.BSONDecoder$Input,org.bson.BSONCallback)>($r1, r4);

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("should be impossible", $r5);

        throw $r6;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public int decode(java.io.InputStream, org.bson.BSONCallback) throws java.io.IOException
    {
        org.bson.BSONCallback r3;
        org.bson.BSONDecoder r0;
        org.bson.BSONDecoder$Input $r1;
        int $i0;
        java.io.InputStream r2;

        r0 := @this: org.bson.BSONDecoder;

        r2 := @parameter0: java.io.InputStream;

        r3 := @parameter1: org.bson.BSONCallback;

        $r1 = new org.bson.BSONDecoder$Input;

        specialinvoke $r1.<org.bson.BSONDecoder$Input: void <init>(org.bson.BSONDecoder,java.io.InputStream)>(r0, r2);

        $i0 = virtualinvoke r0.<org.bson.BSONDecoder: int decode(org.bson.BSONDecoder$Input,org.bson.BSONCallback)>($r1, r3);

        return $i0;
    }

    public int decode(org.bson.BSONDecoder$Input, org.bson.BSONCallback) throws java.io.IOException
    {
        java.lang.Throwable $r6;
        java.lang.IllegalStateException $r2;
        org.bson.BSONCallback $r3, r5;
        org.bson.BSONDecoder r0;
        org.bson.BSONDecoder$Input $r1, r4;
        int $i0;

        r0 := @this: org.bson.BSONDecoder;

        r4 := @parameter0: org.bson.BSONDecoder$Input;

        r5 := @parameter1: org.bson.BSONCallback;

        $r1 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        if $r1 != null goto label1;

        $r3 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        if $r3 == null goto label2;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("not ready");

        throw $r2;

     label2:
        r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in> = r4;

        r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback> = r5;

     label3:
        $i0 = virtualinvoke r0.<org.bson.BSONDecoder: int decode()>();

     label4:
        r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in> = null;

        r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback> = null;

        return $i0;

     label5:
        $r6 := @caughtexception;

     label6:
        r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in> = null;

        r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback> = null;

        throw $r6;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    int decode() throws java.io.IOException
    {
        org.bson.BSONCallback $r3, $r4;
        org.bson.BSONDecoder r0;
        org.bson.BSONDecoder$Input $r1, $r2, $r5;
        int i0, $i1, $i2, i3;
        boolean $z0;

        r0 := @this: org.bson.BSONDecoder;

        $r1 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        i0 = $r1.<org.bson.BSONDecoder$Input: int _read>;

        $r2 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $i1 = virtualinvoke $r2.<org.bson.BSONDecoder$Input: int readInt()>();

        $r3 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        interfaceinvoke $r3.<org.bson.BSONCallback: void objectStart()>();

     label1:
        $z0 = virtualinvoke r0.<org.bson.BSONDecoder: boolean decodeElement()>();

        if $z0 == 0 goto label2;

        goto label1;

     label2:
        $r4 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        interfaceinvoke $r4.<org.bson.BSONCallback: java.lang.Object objectDone()>();

        $r5 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $i2 = $r5.<org.bson.BSONDecoder$Input: int _read>;

        i3 = $i2 - i0;

        if i3 == $i1 goto label3;

     label3:
        return $i1;
    }

    boolean decodeElement() throws java.io.IOException
    {
        byte $b0, $b9;
        org.bson.BSONDecoder$Input $r1, $r2, $r5, $r7, $r8, $r10, $r12, $r13, $r17, $r20, $r23, $r24, $r27, $r28, $r29, $r31, $r34, $r37, $r39, $r42, $r44, $r45, $r47, $r50, $r53, $r56;
        java.lang.StringBuilder $r61, $r62, $r63, $r64, $r68;
        long $l1, $l8;
        java.lang.String $r3, $r15, $r19, $r22, $r25, $r33, $r35, $r55, $r65;
        java.lang.UnsupportedOperationException $r69;
        org.bson.types.ObjectId $r66, $r67;
        boolean $z0, $z1, $z2;
        org.bson.BSONCallback $r4, $r6, $r9, $r11, $r14, $r18, $r21, $r30, $r32, $r36, $r38, $r40, $r43, $r46, $r48, $r49, $r51, $r52, $r54, $r57, $r58;
        org.bson.BSONDecoder r0;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i10, $i11, $i12, $i13, $i14, $i15;
        double $d0;
        java.lang.Object $r16;

        r0 := @this: org.bson.BSONDecoder;

        $r1 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $b0 = virtualinvoke $r1.<org.bson.BSONDecoder$Input: byte read()>();

        if $b0 != 0 goto label01;

        return 0;

     label01:
        $r2 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $r3 = virtualinvoke $r2.<org.bson.BSONDecoder$Input: java.lang.String readCStr()>();

        $i13 = (int) $b0;

        lookupswitch($i13)
        {
            case -1: goto label26;
            case 1: goto label07;
            case 2: goto label11;
            case 3: goto label22;
            case 4: goto label19;
            case 5: goto label16;
            case 6: goto label03;
            case 7: goto label12;
            case 8: goto label04;
            case 9: goto label14;
            case 10: goto label02;
            case 11: goto label15;
            case 12: goto label13;
            case 13: goto label17;
            case 14: goto label10;
            case 15: goto label18;
            case 16: goto label08;
            case 17: goto label25;
            case 18: goto label09;
            case 127: goto label27;
            default: goto label28;
        };

     label02:
        $r36 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        interfaceinvoke $r36.<org.bson.BSONCallback: void gotNull(java.lang.String)>($r3);

        goto label29;

     label03:
        $r46 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        interfaceinvoke $r46.<org.bson.BSONCallback: void gotUndefined(java.lang.String)>($r3);

        goto label29;

     label04:
        $r40 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        $r39 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $b9 = virtualinvoke $r39.<org.bson.BSONDecoder$Input: byte read()>();

        $i14 = (int) $b9;

        if $i14 <= 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        interfaceinvoke $r40.<org.bson.BSONCallback: void gotBoolean(java.lang.String,boolean)>($r3, $z2);

        goto label29;

     label07:
        $r57 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        $r56 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $d0 = virtualinvoke $r56.<org.bson.BSONDecoder$Input: double readDouble()>();

        interfaceinvoke $r57.<org.bson.BSONCallback: void gotDouble(java.lang.String,double)>($r3, $d0);

        goto label29;

     label08:
        $r11 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        $r10 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $i4 = virtualinvoke $r10.<org.bson.BSONDecoder$Input: int readInt()>();

        interfaceinvoke $r11.<org.bson.BSONCallback: void gotInt(java.lang.String,int)>($r3, $i4);

        goto label29;

     label09:
        $r6 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        $r5 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $l1 = virtualinvoke $r5.<org.bson.BSONDecoder$Input: long readLong()>();

        interfaceinvoke $r6.<org.bson.BSONCallback: void gotLong(java.lang.String,long)>($r3, $l1);

        goto label29;

     label10:
        $r18 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        $r17 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $r19 = virtualinvoke $r17.<org.bson.BSONDecoder$Input: java.lang.String readUTF8String()>();

        interfaceinvoke $r18.<org.bson.BSONCallback: void gotSymbol(java.lang.String,java.lang.String)>($r3, $r19);

        goto label29;

     label11:
        $r54 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        $r53 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $r55 = virtualinvoke $r53.<org.bson.BSONDecoder$Input: java.lang.String readUTF8String()>();

        interfaceinvoke $r54.<org.bson.BSONCallback: void gotString(java.lang.String,java.lang.String)>($r3, $r55);

        goto label29;

     label12:
        $r43 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        $r66 = new org.bson.types.ObjectId;

        $r42 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $i10 = virtualinvoke $r42.<org.bson.BSONDecoder$Input: int readInt()>();

        $r44 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $i11 = virtualinvoke $r44.<org.bson.BSONDecoder$Input: int readInt()>();

        $r45 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $i12 = virtualinvoke $r45.<org.bson.BSONDecoder$Input: int readInt()>();

        specialinvoke $r66.<org.bson.types.ObjectId: void <init>(int,int,int)>($i10, $i11, $i12);

        interfaceinvoke $r43.<org.bson.BSONCallback: void gotObjectId(java.lang.String,org.bson.types.ObjectId)>($r3, $r66);

        goto label29;

     label13:
        $r23 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        virtualinvoke $r23.<org.bson.BSONDecoder$Input: int readInt()>();

        $r24 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $r25 = virtualinvoke $r24.<org.bson.BSONDecoder$Input: java.lang.String readCStr()>();

        $r67 = new org.bson.types.ObjectId;

        $r27 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $i5 = virtualinvoke $r27.<org.bson.BSONDecoder$Input: int readInt()>();

        $r28 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $i6 = virtualinvoke $r28.<org.bson.BSONDecoder$Input: int readInt()>();

        $r29 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $i7 = virtualinvoke $r29.<org.bson.BSONDecoder$Input: int readInt()>();

        specialinvoke $r67.<org.bson.types.ObjectId: void <init>(int,int,int)>($i5, $i6, $i7);

        $r30 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        interfaceinvoke $r30.<org.bson.BSONCallback: void gotDBRef(java.lang.String,java.lang.String,org.bson.types.ObjectId)>($r3, $r25, $r67);

        goto label29;

     label14:
        $r38 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        $r37 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $l8 = virtualinvoke $r37.<org.bson.BSONDecoder$Input: long readLong()>();

        interfaceinvoke $r38.<org.bson.BSONCallback: void gotDate(java.lang.String,long)>($r3, $l8);

        goto label29;

     label15:
        $r32 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        $r31 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $r33 = virtualinvoke $r31.<org.bson.BSONDecoder$Input: java.lang.String readCStr()>();

        $r34 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $r35 = virtualinvoke $r34.<org.bson.BSONDecoder$Input: java.lang.String readCStr()>();

        interfaceinvoke $r32.<org.bson.BSONCallback: void gotRegex(java.lang.String,java.lang.String,java.lang.String)>($r3, $r33, $r35);

        goto label29;

     label16:
        virtualinvoke r0.<org.bson.BSONDecoder: void _binary(java.lang.String)>($r3);

        goto label29;

     label17:
        $r21 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        $r20 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $r22 = virtualinvoke $r20.<org.bson.BSONDecoder$Input: java.lang.String readUTF8String()>();

        interfaceinvoke $r21.<org.bson.BSONCallback: void gotCode(java.lang.String,java.lang.String)>($r3, $r22);

        goto label29;

     label18:
        $r12 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        virtualinvoke $r12.<org.bson.BSONDecoder$Input: int readInt()>();

        $r14 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        $r13 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $r15 = virtualinvoke $r13.<org.bson.BSONDecoder$Input: java.lang.String readUTF8String()>();

        $r16 = virtualinvoke r0.<org.bson.BSONDecoder: java.lang.Object _readBasicObject()>();

        interfaceinvoke $r14.<org.bson.BSONCallback: void gotCodeWScope(java.lang.String,java.lang.String,java.lang.Object)>($r3, $r15, $r16);

        goto label29;

     label19:
        $r47 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        virtualinvoke $r47.<org.bson.BSONDecoder$Input: int readInt()>();

        $r48 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        interfaceinvoke $r48.<org.bson.BSONCallback: void arrayStart(java.lang.String)>($r3);

     label20:
        $z0 = virtualinvoke r0.<org.bson.BSONDecoder: boolean decodeElement()>();

        if $z0 == 0 goto label21;

        goto label20;

     label21:
        $r49 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        interfaceinvoke $r49.<org.bson.BSONCallback: java.lang.Object arrayDone()>();

        goto label29;

     label22:
        $r50 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        virtualinvoke $r50.<org.bson.BSONDecoder$Input: int readInt()>();

        $r51 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        interfaceinvoke $r51.<org.bson.BSONCallback: void objectStart(java.lang.String)>($r3);

     label23:
        $z1 = virtualinvoke r0.<org.bson.BSONDecoder: boolean decodeElement()>();

        if $z1 == 0 goto label24;

        goto label23;

     label24:
        $r52 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        interfaceinvoke $r52.<org.bson.BSONCallback: java.lang.Object objectDone()>();

        goto label29;

     label25:
        $r7 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $i2 = virtualinvoke $r7.<org.bson.BSONDecoder$Input: int readInt()>();

        $r8 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $i3 = virtualinvoke $r8.<org.bson.BSONDecoder$Input: int readInt()>();

        $r9 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        interfaceinvoke $r9.<org.bson.BSONCallback: void gotTimestamp(java.lang.String,int,int)>($r3, $i3, $i2);

        goto label29;

     label26:
        $r58 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        interfaceinvoke $r58.<org.bson.BSONCallback: void gotMinKey(java.lang.String)>($r3);

        goto label29;

     label27:
        $r4 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        interfaceinvoke $r4.<org.bson.BSONCallback: void gotMaxKey(java.lang.String)>($r3);

        goto label29;

     label28:
        $r69 = new java.lang.UnsupportedOperationException;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BSONDecoder doesn\'t understand type : ");

        $i15 = (int) $b0;

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" name: ");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r69.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r65);

        throw $r69;

     label29:
        return 1;
    }

    void _binary(java.lang.String) throws java.io.IOException
    {
        byte[] r14, r28, r29;
        byte $b1;
        org.bson.BSONDecoder$Input $r1, $r2, $r3, $r4, $r13, $r15, $r24, $r26;
        org.bson.BSONCallback $r6, $r16, $r25, $r27;
        org.bson.BSONDecoder r0;
        java.lang.StringBuilder $r9, $r10, $r11, $r19, $r20, $r21, $r22, $r30, $r32;
        long $l2, $l3;
        int $i0, $i4, $i5, $i6;
        java.lang.String r5, $r12, $r23;
        java.lang.IllegalArgumentException $r31, $r33;

        r0 := @this: org.bson.BSONDecoder;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $i0 = virtualinvoke $r1.<org.bson.BSONDecoder$Input: int readInt()>();

        $r2 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $b1 = virtualinvoke $r2.<org.bson.BSONDecoder$Input: byte read()>();

        $i6 = (int) $b1;

        tableswitch($i6)
        {
            case 0: goto label1;
            case 1: goto label6;
            case 2: goto label2;
            case 3: goto label4;
            default: goto label6;
        };

     label1:
        r28 = newarray (byte)[$i0];

        $r24 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        virtualinvoke $r24.<org.bson.BSONDecoder$Input: void fill(byte[])>(r28);

        $r25 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        interfaceinvoke $r25.<org.bson.BSONCallback: void gotBinaryArray(java.lang.String,byte[])>(r5, r28);

        return;

     label2:
        $r13 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $i4 = virtualinvoke $r13.<org.bson.BSONDecoder$Input: int readInt()>();

        $i5 = $i4 + 4;

        if $i5 == $i0 goto label3;

        $r31 = new java.lang.IllegalArgumentException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad data size subtype 2 len: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" totalLen: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw $r31;

     label3:
        r14 = newarray (byte)[$i4];

        $r15 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        virtualinvoke $r15.<org.bson.BSONDecoder$Input: void fill(byte[])>(r14);

        $r16 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        interfaceinvoke $r16.<org.bson.BSONCallback: void gotBinaryArray(java.lang.String,byte[])>(r5, r14);

        return;

     label4:
        if $i0 == 16 goto label5;

        $r33 = new java.lang.IllegalArgumentException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad data size subtype 3 len: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != 16");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r33;

     label5:
        $r3 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $l2 = virtualinvoke $r3.<org.bson.BSONDecoder$Input: long readLong()>();

        $r4 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        $l3 = virtualinvoke $r4.<org.bson.BSONDecoder$Input: long readLong()>();

        $r6 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        interfaceinvoke $r6.<org.bson.BSONCallback: void gotUUID(java.lang.String,long,long)>(r5, $l2, $l3);

        return;

     label6:
        r29 = newarray (byte)[$i0];

        $r26 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        virtualinvoke $r26.<org.bson.BSONDecoder$Input: void fill(byte[])>(r29);

        $r27 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        interfaceinvoke $r27.<org.bson.BSONCallback: void gotBinary(java.lang.String,byte,byte[])>(r5, $b1, r29);

        return;
    }

    java.lang.Object _readBasicObject() throws java.io.IOException
    {
        org.bson.BSONCallback r2, $r3, $r4;
        org.bson.BSONDecoder r0;
        org.bson.BSONDecoder$Input $r1;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: org.bson.BSONDecoder;

        $r1 = r0.<org.bson.BSONDecoder: org.bson.BSONDecoder$Input _in>;

        virtualinvoke $r1.<org.bson.BSONDecoder$Input: int readInt()>();

        r2 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        $r3 = r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback>;

        $r4 = interfaceinvoke $r3.<org.bson.BSONCallback: org.bson.BSONCallback createBSONCallback()>();

        r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback> = $r4;

        interfaceinvoke $r4.<org.bson.BSONCallback: void reset()>();

        interfaceinvoke $r4.<org.bson.BSONCallback: void objectStart(boolean)>(0);

     label1:
        $z0 = virtualinvoke r0.<org.bson.BSONDecoder: boolean decodeElement()>();

        if $z0 == 0 goto label2;

        goto label1;

     label2:
        r0.<org.bson.BSONDecoder: org.bson.BSONCallback _callback> = r2;

        $r5 = interfaceinvoke $r4.<org.bson.BSONCallback: java.lang.Object get()>();

        return $r5;
    }

    static org.bson.io.PoolOutputBuffer access$000(org.bson.BSONDecoder)
    {
        org.bson.io.PoolOutputBuffer $r1;
        org.bson.BSONDecoder r0;

        r0 := @parameter0: org.bson.BSONDecoder;

        $r1 = r0.<org.bson.BSONDecoder: org.bson.io.PoolOutputBuffer _stringBuffer>;

        return $r1;
    }

    static byte[] access$100(org.bson.BSONDecoder)
    {
        byte[] $r1;
        org.bson.BSONDecoder r0;

        r0 := @parameter0: org.bson.BSONDecoder;

        $r1 = r0.<org.bson.BSONDecoder: byte[] _random>;

        return $r1;
    }
}
