final class com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl extends com.sun.xml.bind.v2.model.impl.EnumLeafInfoImpl implements com.sun.xml.bind.v2.model.runtime.RuntimeEnumLeafInfo, com.sun.xml.bind.v2.runtime.Transducer
{
    private final com.sun.xml.bind.v2.runtime.Transducer baseXducer;
    private final java.util.Map parseMap;
    private final java.util.Map printMap;

    public com.sun.xml.bind.v2.runtime.Transducer getTransducer()
    {
        com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl;

        return r0;
    }

    void <init>(com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder, com.sun.xml.bind.v2.model.'annotation'.Locatable, java.lang.Class)
    {
        com.sun.xml.bind.v2.model.'annotation'.Locatable r2;
        java.util.EnumMap $r5;
        com.sun.xml.bind.v2.model.core.NonElement $r6;
        java.util.HashMap $r4;
        com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder r1;
        com.sun.xml.bind.v2.model.runtime.RuntimeNonElement $r7;
        java.lang.Class r3;
        com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl r0;
        com.sun.xml.bind.v2.runtime.Transducer $r8;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl;

        r1 := @parameter0: com.sun.xml.bind.v2.model.impl.RuntimeModelBuilder;

        r2 := @parameter1: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        r3 := @parameter2: java.lang.Class;

        specialinvoke r0.<com.sun.xml.bind.v2.model.impl.EnumLeafInfoImpl: void <init>(com.sun.xml.bind.v2.model.impl.ModelBuilder,com.sun.xml.bind.v2.model.'annotation'.Locatable,java.lang.Object,java.lang.Object)>(r1, r2, r3, r3);

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: java.util.Map parseMap> = $r4;

        $r5 = new java.util.EnumMap;

        specialinvoke $r5.<java.util.EnumMap: void <init>(java.lang.Class)>(r3);

        r0.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: java.util.Map printMap> = $r5;

        $r6 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: com.sun.xml.bind.v2.model.core.NonElement baseType>;

        $r7 = (com.sun.xml.bind.v2.model.runtime.RuntimeNonElement) $r6;

        $r8 = interfaceinvoke $r7.<com.sun.xml.bind.v2.model.runtime.RuntimeNonElement: com.sun.xml.bind.v2.runtime.Transducer getTransducer()>();

        r0.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: com.sun.xml.bind.v2.runtime.Transducer baseXducer> = $r8;

        return;
    }

    public com.sun.xml.bind.v2.model.impl.RuntimeEnumConstantImpl createEnumConstant(java.lang.String, java.lang.String, java.lang.reflect.Field, com.sun.xml.bind.v2.model.impl.EnumConstantImpl)
    {
        java.lang.Object[] $r12;
        com.sun.xml.bind.v2.model.'annotation'.FieldLocatable $r20;
        com.sun.xml.bind.v2.model.impl.EnumConstantImpl r9;
        java.lang.Enum $r26;
        java.util.Map $r5, $r6;
        com.sun.xml.bind.v2.model.impl.RuntimeEnumConstantImpl $r7;
        java.lang.SecurityException $r25;
        java.lang.String r3, r8, $r18, $r19, $r24;
        com.sun.xml.bind.v2.model.impl.ModelBuilder $r14;
        java.lang.IllegalAccessException $r22;
        com.sun.xml.bind.v2.model.core.NonElement $r13;
        java.lang.reflect.Field r0;
        java.lang.Exception $r10;
        com.sun.xml.bind.v2.model.impl.Messages $r15;
        java.lang.reflect.Type $r17;
        java.lang.IllegalAccessError $r23;
        com.sun.xml.bind.v2.runtime.IllegalAnnotationException $r11;
        java.lang.Object $r1, $r16, r27;
        com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl r2;
        com.sun.xml.bind.v2.runtime.Transducer $r4;
        com.sun.xml.bind.v2.model.nav.Navigator $r21;

        r2 := @this: com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl;

        r8 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.reflect.Field;

        r9 := @parameter3: com.sun.xml.bind.v2.model.impl.EnumConstantImpl;

     label01:
        virtualinvoke r0.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label02:
        goto label04;

     label03:
        $r25 := @caughtexception;

     label04:
        $r1 = virtualinvoke r0.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r26 = (java.lang.Enum) $r1;

     label05:
        goto label07;

     label06:
        $r22 := @caughtexception;

        $r23 = new java.lang.IllegalAccessError;

        $r24 = virtualinvoke $r22.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        specialinvoke $r23.<java.lang.IllegalAccessError: void <init>(java.lang.String)>($r24);

        throw $r23;

     label07:
        r27 = null;

     label08:
        $r4 = r2.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: com.sun.xml.bind.v2.runtime.Transducer baseXducer>;

        r27 = interfaceinvoke $r4.<com.sun.xml.bind.v2.runtime.Transducer: java.lang.Object parse(java.lang.CharSequence)>(r3);

     label09:
        goto label11;

     label10:
        $r10 := @caughtexception;

        $r14 = r2.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: com.sun.xml.bind.v2.model.impl.ModelBuilder builder>;

        $r11 = new com.sun.xml.bind.v2.runtime.IllegalAnnotationException;

        $r15 = <com.sun.xml.bind.v2.model.impl.Messages: com.sun.xml.bind.v2.model.impl.Messages INVALID_XML_ENUM_VALUE>;

        $r12 = newarray (java.lang.Object)[2];

        $r12[0] = r3;

        $r13 = r2.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: com.sun.xml.bind.v2.model.core.NonElement baseType>;

        $r16 = interfaceinvoke $r13.<com.sun.xml.bind.v2.model.core.NonElement: java.lang.Object getType()>();

        $r17 = (java.lang.reflect.Type) $r16;

        $r18 = virtualinvoke $r17.<java.lang.Object: java.lang.String toString()>();

        $r12[1] = $r18;

        $r19 = virtualinvoke $r15.<com.sun.xml.bind.v2.model.impl.Messages: java.lang.String format(java.lang.Object[])>($r12);

        $r20 = new com.sun.xml.bind.v2.model.'annotation'.FieldLocatable;

        $r21 = virtualinvoke r2.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: com.sun.xml.bind.v2.model.nav.Navigator nav()>();

        specialinvoke $r20.<com.sun.xml.bind.v2.model.'annotation'.FieldLocatable: void <init>(com.sun.xml.bind.v2.model.'annotation'.Locatable,java.lang.Object,com.sun.xml.bind.v2.model.nav.Navigator)>(r2, r0, $r21);

        specialinvoke $r11.<com.sun.xml.bind.v2.runtime.IllegalAnnotationException: void <init>(java.lang.String,java.lang.Throwable,com.sun.xml.bind.v2.model.'annotation'.Locatable)>($r19, $r10, $r20);

        virtualinvoke $r14.<com.sun.xml.bind.v2.model.impl.ModelBuilder: void reportError(com.sun.xml.bind.v2.runtime.IllegalAnnotationException)>($r11);

     label11:
        $r5 = r2.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: java.util.Map parseMap>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r27, $r26);

        $r6 = r2.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: java.util.Map printMap>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, r27);

        $r7 = new com.sun.xml.bind.v2.model.impl.RuntimeEnumConstantImpl;

        specialinvoke $r7.<com.sun.xml.bind.v2.model.impl.RuntimeEnumConstantImpl: void <init>(com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl,java.lang.String,java.lang.String,com.sun.xml.bind.v2.model.impl.EnumConstantImpl)>(r2, r8, r3, r9);

        return $r7;

        catch java.lang.SecurityException from label01 to label02 with label03;
        catch java.lang.IllegalAccessException from label01 to label05 with label06;
        catch java.lang.Exception from label08 to label09 with label10;
    }

    public javax.xml.namespace.QName[] getTypeNames()
    {
        com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl r1;
        javax.xml.namespace.QName $r2;
        javax.xml.namespace.QName[] $r0;

        r1 := @this: com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl;

        $r0 = newarray (javax.xml.namespace.QName)[1];

        $r2 = virtualinvoke r1.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: javax.xml.namespace.QName getTypeName()>();

        $r0[0] = $r2;

        return $r0;
    }

    public boolean isDefault()
    {
        com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl;

        return 0;
    }

    public java.lang.Class getClazz()
    {
        java.lang.Object $r1;
        java.lang.Class $r2;
        com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: java.lang.Object clazz>;

        $r2 = (java.lang.Class) $r1;

        return $r2;
    }

    public boolean useNamespace()
    {
        com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl r0;
        com.sun.xml.bind.v2.runtime.Transducer $r1;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: com.sun.xml.bind.v2.runtime.Transducer baseXducer>;

        $z0 = interfaceinvoke $r1.<com.sun.xml.bind.v2.runtime.Transducer: boolean useNamespace()>();

        return $z0;
    }

    public void declareNamespace(java.lang.Enum, com.sun.xml.bind.v2.runtime.XMLSerializer) throws com.sun.xml.bind.api.AccessorException
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r5;
        java.lang.Enum r1;
        java.util.Map $r2;
        java.lang.Object $r4;
        com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl r0;
        com.sun.xml.bind.v2.runtime.Transducer $r3;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl;

        r1 := @parameter0: java.lang.Enum;

        r5 := @parameter1: com.sun.xml.bind.v2.runtime.XMLSerializer;

        $r3 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: com.sun.xml.bind.v2.runtime.Transducer baseXducer>;

        $r2 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: java.util.Map printMap>;

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        interfaceinvoke $r3.<com.sun.xml.bind.v2.runtime.Transducer: void declareNamespace(java.lang.Object,com.sun.xml.bind.v2.runtime.XMLSerializer)>($r4, r5);

        return;
    }

    public java.lang.CharSequence print(java.lang.Enum) throws com.sun.xml.bind.api.AccessorException
    {
        java.lang.Enum r1;
        java.lang.CharSequence $r5;
        java.util.Map $r2;
        java.lang.Object $r4;
        com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl r0;
        com.sun.xml.bind.v2.runtime.Transducer $r3;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl;

        r1 := @parameter0: java.lang.Enum;

        $r3 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: com.sun.xml.bind.v2.runtime.Transducer baseXducer>;

        $r2 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: java.util.Map printMap>;

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = interfaceinvoke $r3.<com.sun.xml.bind.v2.runtime.Transducer: java.lang.CharSequence print(java.lang.Object)>($r4);

        return $r5;
    }

    public java.lang.Enum parse(java.lang.CharSequence) throws com.sun.xml.bind.api.AccessorException, org.xml.sax.SAXException
    {
        java.lang.CharSequence r1;
        java.lang.Enum $r6;
        java.util.Map $r4;
        java.lang.Object $r3, $r5, r8;
        com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl r0;
        com.sun.xml.bind.v2.runtime.Transducer $r2;
        java.lang.String $r7;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: com.sun.xml.bind.v2.runtime.Transducer baseXducer>;

        $r3 = interfaceinvoke $r2.<com.sun.xml.bind.v2.runtime.Transducer: java.lang.Object parse(java.lang.CharSequence)>(r1);

        r8 = $r3;

        $z0 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: boolean tokenStringType>;

        if $z0 == 0 goto label1;

        $r7 = (java.lang.String) $r3;

        r8 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

     label1:
        $r4 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: java.util.Map parseMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);

        $r6 = (java.lang.Enum) $r5;

        return $r6;
    }

    public void writeText(com.sun.xml.bind.v2.runtime.XMLSerializer, java.lang.Enum, java.lang.String) throws java.io.IOException, org.xml.sax.SAXException, javax.xml.stream.XMLStreamException, com.sun.xml.bind.api.AccessorException
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r1;
        java.lang.Enum r2;
        java.util.Map $r3;
        java.lang.Object $r5;
        com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl r0;
        com.sun.xml.bind.v2.runtime.Transducer $r4;
        java.lang.String r6;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r2 := @parameter1: java.lang.Enum;

        r6 := @parameter2: java.lang.String;

        $r4 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: com.sun.xml.bind.v2.runtime.Transducer baseXducer>;

        $r3 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: java.util.Map printMap>;

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        interfaceinvoke $r4.<com.sun.xml.bind.v2.runtime.Transducer: void writeText(com.sun.xml.bind.v2.runtime.XMLSerializer,java.lang.Object,java.lang.String)>(r1, $r5, r6);

        return;
    }

    public void writeLeafElement(com.sun.xml.bind.v2.runtime.XMLSerializer, com.sun.xml.bind.v2.runtime.Name, java.lang.Enum, java.lang.String) throws java.io.IOException, org.xml.sax.SAXException, javax.xml.stream.XMLStreamException, com.sun.xml.bind.api.AccessorException
    {
        com.sun.xml.bind.v2.runtime.Name r2;
        com.sun.xml.bind.v2.runtime.XMLSerializer r1;
        java.lang.Enum r3;
        java.util.Map $r4;
        java.lang.Object $r6;
        com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl r0;
        com.sun.xml.bind.v2.runtime.Transducer $r5;
        java.lang.String r7;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r2 := @parameter1: com.sun.xml.bind.v2.runtime.Name;

        r3 := @parameter2: java.lang.Enum;

        r7 := @parameter3: java.lang.String;

        $r5 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: com.sun.xml.bind.v2.runtime.Transducer baseXducer>;

        $r4 = r0.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: java.util.Map printMap>;

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        interfaceinvoke $r5.<com.sun.xml.bind.v2.runtime.Transducer: void writeLeafElement(com.sun.xml.bind.v2.runtime.XMLSerializer,com.sun.xml.bind.v2.runtime.Name,java.lang.Object,java.lang.String)>(r1, r2, $r6, r7);

        return;
    }

    public javax.xml.namespace.QName getTypeName(java.lang.Enum)
    {
        com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl r0;
        java.lang.Enum r1;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl;

        r1 := @parameter0: java.lang.Enum;

        return null;
    }

    public volatile java.lang.Object getClazz()
    {
        java.lang.Class $r1;
        com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl;

        $r1 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: java.lang.Class getClazz()>();

        return $r1;
    }

    public volatile com.sun.xml.bind.v2.model.impl.EnumConstantImpl createEnumConstant(java.lang.String, java.lang.String, java.lang.Object, com.sun.xml.bind.v2.model.impl.EnumConstantImpl)
    {
        com.sun.xml.bind.v2.model.impl.RuntimeEnumConstantImpl $r6;
        java.lang.Object r3;
        com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl r0;
        java.lang.String r1, r2;
        java.lang.reflect.Field $r5;
        com.sun.xml.bind.v2.model.impl.EnumConstantImpl r4;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: com.sun.xml.bind.v2.model.impl.EnumConstantImpl;

        $r5 = (java.lang.reflect.Field) r3;

        $r6 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: com.sun.xml.bind.v2.model.impl.RuntimeEnumConstantImpl createEnumConstant(java.lang.String,java.lang.String,java.lang.reflect.Field,com.sun.xml.bind.v2.model.impl.EnumConstantImpl)>(r1, r2, $r5, r4);

        return $r6;
    }

    public volatile javax.xml.namespace.QName getTypeName(java.lang.Object)
    {
        java.lang.Enum $r2;
        java.lang.Object r1;
        com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl r0;
        javax.xml.namespace.QName $r3;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Enum) r1;

        $r3 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: javax.xml.namespace.QName getTypeName(java.lang.Enum)>($r2);

        return $r3;
    }

    public volatile void writeLeafElement(com.sun.xml.bind.v2.runtime.XMLSerializer, com.sun.xml.bind.v2.runtime.Name, java.lang.Object, java.lang.String) throws java.io.IOException, org.xml.sax.SAXException, javax.xml.stream.XMLStreamException, com.sun.xml.bind.api.AccessorException
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r1;
        com.sun.xml.bind.v2.runtime.Name r2;
        java.lang.Enum $r5;
        java.lang.Object r3;
        com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl r0;
        java.lang.String r4;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r2 := @parameter1: com.sun.xml.bind.v2.runtime.Name;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.String;

        $r5 = (java.lang.Enum) r3;

        virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: void writeLeafElement(com.sun.xml.bind.v2.runtime.XMLSerializer,com.sun.xml.bind.v2.runtime.Name,java.lang.Enum,java.lang.String)>(r1, r2, $r5, r4);

        return;
    }

    public volatile void writeText(com.sun.xml.bind.v2.runtime.XMLSerializer, java.lang.Object, java.lang.String) throws java.io.IOException, org.xml.sax.SAXException, javax.xml.stream.XMLStreamException, com.sun.xml.bind.api.AccessorException
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r1;
        java.lang.Enum $r4;
        java.lang.Object r2;
        com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl r0;
        java.lang.String r3;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.XMLSerializer;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.String;

        $r4 = (java.lang.Enum) r2;

        virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: void writeText(com.sun.xml.bind.v2.runtime.XMLSerializer,java.lang.Enum,java.lang.String)>(r1, $r4, r3);

        return;
    }

    public volatile java.lang.Object parse(java.lang.CharSequence) throws com.sun.xml.bind.api.AccessorException, org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl r0;
        java.lang.CharSequence r1;
        java.lang.Enum $r2;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: java.lang.Enum parse(java.lang.CharSequence)>(r1);

        return $r2;
    }

    public volatile java.lang.CharSequence print(java.lang.Object) throws com.sun.xml.bind.api.AccessorException
    {
        java.lang.Enum $r2;
        java.lang.CharSequence $r3;
        java.lang.Object r1;
        com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Enum) r1;

        $r3 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: java.lang.CharSequence print(java.lang.Enum)>($r2);

        return $r3;
    }

    public volatile void declareNamespace(java.lang.Object, com.sun.xml.bind.v2.runtime.XMLSerializer) throws com.sun.xml.bind.api.AccessorException
    {
        com.sun.xml.bind.v2.runtime.XMLSerializer r2;
        java.lang.Enum $r3;
        java.lang.Object r1;
        com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.sun.xml.bind.v2.runtime.XMLSerializer;

        $r3 = (java.lang.Enum) r1;

        virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.RuntimeEnumLeafInfoImpl: void declareNamespace(java.lang.Enum,com.sun.xml.bind.v2.runtime.XMLSerializer)>($r3, r2);

        return;
    }
}
