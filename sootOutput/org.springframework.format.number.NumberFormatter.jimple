public class org.springframework.format.number.NumberFormatter extends org.springframework.format.number.AbstractNumberFormatter
{
    private java.lang.String pattern;

    public void <init>()
    {
        org.springframework.format.number.NumberFormatter r0;

        r0 := @this: org.springframework.format.number.NumberFormatter;

        specialinvoke r0.<org.springframework.format.number.AbstractNumberFormatter: void <init>()>();

        return;
    }

    public void <init>(java.lang.String)
    {
        org.springframework.format.number.NumberFormatter r0;
        java.lang.String r1;

        r0 := @this: org.springframework.format.number.NumberFormatter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.springframework.format.number.AbstractNumberFormatter: void <init>()>();

        r0.<org.springframework.format.number.NumberFormatter: java.lang.String pattern> = r1;

        return;
    }

    public void setPattern(java.lang.String)
    {
        org.springframework.format.number.NumberFormatter r0;
        java.lang.String r1;

        r0 := @this: org.springframework.format.number.NumberFormatter;

        r1 := @parameter0: java.lang.String;

        r0.<org.springframework.format.number.NumberFormatter: java.lang.String pattern> = r1;

        return;
    }

    public java.text.NumberFormat getNumberFormat(java.util.Locale)
    {
        org.springframework.format.number.NumberFormatter r3;
        java.lang.IllegalStateException $r7;
        java.text.DecimalFormat r2;
        java.text.NumberFormat $r1;
        java.util.Locale r0;
        java.lang.StringBuilder $r8, $r9;
        java.lang.String $r4, $r5, $r6, $r10;
        boolean $z0;

        r3 := @this: org.springframework.format.number.NumberFormatter;

        r0 := @parameter0: java.util.Locale;

        $r1 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale)>(r0);

        $z0 = $r1 instanceof java.text.DecimalFormat;

        if $z0 != 0 goto label2;

        $r6 = r3.<org.springframework.format.number.NumberFormatter: java.lang.String pattern>;

        if $r6 == null goto label1;

        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot support pattern for non-DecimalFormat: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r7;

     label1:
        return $r1;

     label2:
        r2 = (java.text.DecimalFormat) $r1;

        virtualinvoke r2.<java.text.DecimalFormat: void setParseBigDecimal(boolean)>(1);

        $r4 = r3.<org.springframework.format.number.NumberFormatter: java.lang.String pattern>;

        if $r4 == null goto label3;

        $r5 = r3.<org.springframework.format.number.NumberFormatter: java.lang.String pattern>;

        virtualinvoke r2.<java.text.DecimalFormat: void applyPattern(java.lang.String)>($r5);

     label3:
        return r2;
    }
}
