public abstract class org.objectweb.asm.ClassVisitor extends java.lang.Object
{
    protected final int api;
    protected org.objectweb.asm.ClassVisitor cv;

    public void <init>(int)
    {
        int i0;
        org.objectweb.asm.ClassVisitor r0;

        r0 := @this: org.objectweb.asm.ClassVisitor;

        i0 := @parameter0: int;

        specialinvoke r0.<org.objectweb.asm.ClassVisitor: void <init>(int,org.objectweb.asm.ClassVisitor)>(i0, null);

        return;
    }

    public void <init>(int, org.objectweb.asm.ClassVisitor)
    {
        int i0;
        java.lang.IllegalArgumentException $r2;
        org.objectweb.asm.ClassVisitor r0, r1;

        r0 := @this: org.objectweb.asm.ClassVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: org.objectweb.asm.ClassVisitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 == 262144 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        r0.<org.objectweb.asm.ClassVisitor: int api> = i0;

        r0.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.ClassVisitor cv> = r1;

        return;
    }

    public void visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        java.lang.String[] r5;
        int i0, i1;
        java.lang.String r2, r3, r4;
        org.objectweb.asm.ClassVisitor r0, $r1, $r6;

        r0 := @this: org.objectweb.asm.ClassVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String[];

        $r1 = r0.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.ClassVisitor cv>;

        if $r1 == null goto label1;

        $r6 = r0.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.ClassVisitor cv>;

        virtualinvoke $r6.<org.objectweb.asm.ClassVisitor: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(i0, i1, r2, r3, r4, r5);

     label1:
        return;
    }

    public void visitSource(java.lang.String, java.lang.String)
    {
        java.lang.String r2, r3;
        org.objectweb.asm.ClassVisitor r0, $r1, $r4;

        r0 := @this: org.objectweb.asm.ClassVisitor;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = r0.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.ClassVisitor cv>;

        if $r1 == null goto label1;

        $r4 = r0.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.ClassVisitor cv>;

        virtualinvoke $r4.<org.objectweb.asm.ClassVisitor: void visitSource(java.lang.String,java.lang.String)>(r2, r3);

     label1:
        return;
    }

    public void visitOuterClass(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r2, r3, r4;
        org.objectweb.asm.ClassVisitor r0, $r1, $r5;

        r0 := @this: org.objectweb.asm.ClassVisitor;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r1 = r0.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.ClassVisitor cv>;

        if $r1 == null goto label1;

        $r5 = r0.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.ClassVisitor cv>;

        virtualinvoke $r5.<org.objectweb.asm.ClassVisitor: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>(r2, r3, r4);

     label1:
        return;
    }

    public org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)
    {
        org.objectweb.asm.AnnotationVisitor $r4;
        java.lang.String r2;
        org.objectweb.asm.ClassVisitor r0, $r1, $r3;
        boolean z0;

        r0 := @this: org.objectweb.asm.ClassVisitor;

        r2 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = r0.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.ClassVisitor cv>;

        if $r1 == null goto label1;

        $r3 = r0.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.ClassVisitor cv>;

        $r4 = virtualinvoke $r3.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>(r2, z0);

        return $r4;

     label1:
        return null;
    }

    public void visitAttribute(org.objectweb.asm.Attribute)
    {
        org.objectweb.asm.Attribute r2;
        org.objectweb.asm.ClassVisitor r0, $r1, $r3;

        r0 := @this: org.objectweb.asm.ClassVisitor;

        r2 := @parameter0: org.objectweb.asm.Attribute;

        $r1 = r0.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.ClassVisitor cv>;

        if $r1 == null goto label1;

        $r3 = r0.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.ClassVisitor cv>;

        virtualinvoke $r3.<org.objectweb.asm.ClassVisitor: void visitAttribute(org.objectweb.asm.Attribute)>(r2);

     label1:
        return;
    }

    public void visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int)
    {
        int i0;
        java.lang.String r2, r3, r4;
        org.objectweb.asm.ClassVisitor r0, $r1, $r5;

        r0 := @this: org.objectweb.asm.ClassVisitor;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $r1 = r0.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.ClassVisitor cv>;

        if $r1 == null goto label1;

        $r5 = r0.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.ClassVisitor cv>;

        virtualinvoke $r5.<org.objectweb.asm.ClassVisitor: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>(r2, r3, r4, i0);

     label1:
        return;
    }

    public org.objectweb.asm.FieldVisitor visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)
    {
        org.objectweb.asm.FieldVisitor $r7;
        int i0;
        java.lang.Object r5;
        java.lang.String r2, r3, r4;
        org.objectweb.asm.ClassVisitor r0, $r1, $r6;

        r0 := @this: org.objectweb.asm.ClassVisitor;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object;

        $r1 = r0.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.ClassVisitor cv>;

        if $r1 == null goto label1;

        $r6 = r0.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.ClassVisitor cv>;

        $r7 = virtualinvoke $r6.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>(i0, r2, r3, r4, r5);

        return $r7;

     label1:
        return null;
    }

    public org.objectweb.asm.MethodVisitor visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        org.objectweb.asm.MethodVisitor $r7;
        java.lang.String[] r5;
        int i0;
        java.lang.String r2, r3, r4;
        org.objectweb.asm.ClassVisitor r0, $r1, $r6;

        r0 := @this: org.objectweb.asm.ClassVisitor;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String[];

        $r1 = r0.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.ClassVisitor cv>;

        if $r1 == null goto label1;

        $r6 = r0.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.ClassVisitor cv>;

        $r7 = virtualinvoke $r6.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(i0, r2, r3, r4, r5);

        return $r7;

     label1:
        return null;
    }

    public void visitEnd()
    {
        org.objectweb.asm.ClassVisitor r0, $r1, $r2;

        r0 := @this: org.objectweb.asm.ClassVisitor;

        $r1 = r0.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.ClassVisitor cv>;

        if $r1 == null goto label1;

        $r2 = r0.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.ClassVisitor cv>;

        virtualinvoke $r2.<org.objectweb.asm.ClassVisitor: void visitEnd()>();

     label1:
        return;
    }
}
