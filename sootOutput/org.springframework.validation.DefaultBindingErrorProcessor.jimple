public class org.springframework.validation.DefaultBindingErrorProcessor extends java.lang.Object implements org.springframework.validation.BindingErrorProcessor
{
    public static final java.lang.String MISSING_FIELD_ERROR_CODE;

    public void <init>()
    {
        org.springframework.validation.DefaultBindingErrorProcessor r0;

        r0 := @this: org.springframework.validation.DefaultBindingErrorProcessor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void processMissingFieldError(java.lang.String, org.springframework.validation.BindingResult)
    {
        java.lang.Object[] $r10;
        org.springframework.validation.BindingResult r1;
        java.lang.String[] $r7;
        java.lang.String $r2, $r3, r4, $r6, $r9, $r12, $r16;
        org.springframework.validation.DefaultBindingErrorProcessor r8;
        org.springframework.validation.FieldError $r11;
        java.lang.StringBuilder $r0, $r5, $r13, $r14, $r15;

        r8 := @this: org.springframework.validation.DefaultBindingErrorProcessor;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: org.springframework.validation.BindingResult;

        $r0 = new java.lang.StringBuilder;

        $r2 = interfaceinvoke r1.<org.springframework.validation.BindingResult: java.lang.String getNestedPath()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = interfaceinvoke r1.<org.springframework.validation.BindingResult: java.lang.String[] resolveMessageCodes(java.lang.String,java.lang.String)>("required", r4);

        $r9 = interfaceinvoke r1.<org.springframework.validation.BindingResult: java.lang.String getObjectName()>();

        $r10 = virtualinvoke r8.<org.springframework.validation.DefaultBindingErrorProcessor: java.lang.Object[] getArgumentsForBindError(java.lang.String,java.lang.String)>($r9, $r6);

        $r11 = new org.springframework.validation.FieldError;

        $r12 = interfaceinvoke r1.<org.springframework.validation.BindingResult: java.lang.String getObjectName()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("Field \'");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is required");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<org.springframework.validation.FieldError: void <init>(java.lang.String,java.lang.String,java.lang.Object,boolean,java.lang.String[],java.lang.Object[],java.lang.String)>($r12, $r6, "", 1, $r7, $r10, $r16);

        interfaceinvoke r1.<org.springframework.validation.BindingResult: void addError(org.springframework.validation.ObjectError)>($r11);

        return;
    }

    public void processPropertyAccessException(org.springframework.beans.PropertyAccessException, org.springframework.validation.BindingResult)
    {
        java.lang.Object[] $r7, $r10;
        org.springframework.validation.BindingResult r2;
        java.lang.String[] $r4;
        java.lang.String $r1, $r3, $r6, $r13, $r14;
        org.springframework.validation.DefaultBindingErrorProcessor r5;
        boolean $z0;
        org.springframework.beans.PropertyAccessException r0;
        org.springframework.validation.FieldError $r12;
        java.lang.Object $r8, r11;
        java.lang.Class $r9;

        r5 := @this: org.springframework.validation.DefaultBindingErrorProcessor;

        r0 := @parameter0: org.springframework.beans.PropertyAccessException;

        r2 := @parameter1: org.springframework.validation.BindingResult;

        $r1 = virtualinvoke r0.<org.springframework.beans.PropertyAccessException: java.lang.String getPropertyName()>();

        $r3 = virtualinvoke r0.<org.springframework.beans.PropertyAccessException: java.lang.String getErrorCode()>();

        $r4 = interfaceinvoke r2.<org.springframework.validation.BindingResult: java.lang.String[] resolveMessageCodes(java.lang.String,java.lang.String)>($r3, $r1);

        $r6 = interfaceinvoke r2.<org.springframework.validation.BindingResult: java.lang.String getObjectName()>();

        $r7 = virtualinvoke r5.<org.springframework.validation.DefaultBindingErrorProcessor: java.lang.Object[] getArgumentsForBindError(java.lang.String,java.lang.String)>($r6, $r1);

        $r8 = virtualinvoke r0.<org.springframework.beans.PropertyAccessException: java.lang.Object getValue()>();

        r11 = $r8;

        if $r8 == null goto label1;

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r9.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label1;

        $r10 = staticinvoke <org.springframework.util.ObjectUtils: java.lang.Object[] toObjectArray(java.lang.Object)>($r8);

        r11 = staticinvoke <org.springframework.util.StringUtils: java.lang.String arrayToCommaDelimitedString(java.lang.Object[])>($r10);

     label1:
        $r12 = new org.springframework.validation.FieldError;

        $r13 = interfaceinvoke r2.<org.springframework.validation.BindingResult: java.lang.String getObjectName()>();

        $r14 = virtualinvoke r0.<org.springframework.beans.PropertyAccessException: java.lang.String getLocalizedMessage()>();

        specialinvoke $r12.<org.springframework.validation.FieldError: void <init>(java.lang.String,java.lang.String,java.lang.Object,boolean,java.lang.String[],java.lang.Object[],java.lang.String)>($r13, $r1, r11, 1, $r4, $r7, $r14);

        interfaceinvoke r2.<org.springframework.validation.BindingResult: void addError(org.springframework.validation.ObjectError)>($r12);

        return;
    }

    protected java.lang.Object[] getArgumentsForBindError(java.lang.String, java.lang.String)
    {
        java.lang.Object[] $r8;
        java.lang.String[] $r0;
        org.springframework.context.support.DefaultMessageSourceResolvable $r9;
        java.lang.StringBuilder $r1, $r4, $r6;
        java.lang.String r2, $r3, r5, $r7;
        org.springframework.validation.DefaultBindingErrorProcessor r10;

        r10 := @this: org.springframework.validation.DefaultBindingErrorProcessor;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r0 = newarray (java.lang.String)[2];

        $r1 = new java.lang.StringBuilder;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0[0] = $r7;

        $r0[1] = r5;

        $r8 = newarray (java.lang.Object)[1];

        $r9 = new org.springframework.context.support.DefaultMessageSourceResolvable;

        specialinvoke $r9.<org.springframework.context.support.DefaultMessageSourceResolvable: void <init>(java.lang.String[],java.lang.String)>($r0, r5);

        $r8[0] = $r9;

        return $r8;
    }

    public static void <clinit>()
    {
        <org.springframework.validation.DefaultBindingErrorProcessor: java.lang.String MISSING_FIELD_ERROR_CODE> = "required";

        return;
    }
}
