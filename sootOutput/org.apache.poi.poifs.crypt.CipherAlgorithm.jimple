public final enum class org.apache.poi.poifs.crypt.CipherAlgorithm extends java.lang.Enum
{
    public static final enum org.apache.poi.poifs.crypt.CipherAlgorithm rc4;
    public static final enum org.apache.poi.poifs.crypt.CipherAlgorithm aes128;
    public static final enum org.apache.poi.poifs.crypt.CipherAlgorithm aes192;
    public static final enum org.apache.poi.poifs.crypt.CipherAlgorithm aes256;
    public static final enum org.apache.poi.poifs.crypt.CipherAlgorithm rc2;
    public static final enum org.apache.poi.poifs.crypt.CipherAlgorithm des;
    public static final enum org.apache.poi.poifs.crypt.CipherAlgorithm des3;
    public static final enum org.apache.poi.poifs.crypt.CipherAlgorithm des3_112;
    public final org.apache.poi.poifs.crypt.CipherProvider provider;
    public final java.lang.String jceId;
    public final int ecmaId;
    public final int defaultKeySize;
    public final int[] allowedKeySize;
    public final int blockSize;
    public final int encryptedVerifierHashLength;
    public final java.lang.String xmlId;
    public final boolean needsBouncyCastle;
    private static final org.apache.poi.poifs.crypt.CipherAlgorithm[] $VALUES;

    public static org.apache.poi.poifs.crypt.CipherAlgorithm[] values()
    {
        org.apache.poi.poifs.crypt.CipherAlgorithm[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.apache.poi.poifs.crypt.CipherAlgorithm: org.apache.poi.poifs.crypt.CipherAlgorithm[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.poi.poifs.crypt.CipherAlgorithm[]) $r1;

        return $r2;
    }

    public static org.apache.poi.poifs.crypt.CipherAlgorithm valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.apache.poi.poifs.crypt.CipherAlgorithm $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/poi/poifs/crypt/CipherAlgorithm;", r0);

        $r2 = (org.apache.poi.poifs.crypt.CipherAlgorithm) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, org.apache.poi.poifs.crypt.CipherProvider, java.lang.String, int, int, int[], int, int, java.lang.String, boolean)
    {
        org.apache.poi.poifs.crypt.CipherProvider r2;
        int[] r4;
        int i0, i1, i2, i3, i4;
        java.lang.String r1, r3, r5;
        org.apache.poi.poifs.crypt.CipherAlgorithm r0;
        boolean z0;

        r0 := @this: org.apache.poi.poifs.crypt.CipherAlgorithm;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.poi.poifs.crypt.CipherProvider;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        r4 := @parameter6: int[];

        i3 := @parameter7: int;

        i4 := @parameter8: int;

        r5 := @parameter9: java.lang.String;

        z0 := @parameter10: boolean;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.apache.poi.poifs.crypt.CipherAlgorithm: org.apache.poi.poifs.crypt.CipherProvider provider> = r2;

        r0.<org.apache.poi.poifs.crypt.CipherAlgorithm: java.lang.String jceId> = r3;

        r0.<org.apache.poi.poifs.crypt.CipherAlgorithm: int ecmaId> = i1;

        r0.<org.apache.poi.poifs.crypt.CipherAlgorithm: int defaultKeySize> = i2;

        r0.<org.apache.poi.poifs.crypt.CipherAlgorithm: int[] allowedKeySize> = r4;

        r0.<org.apache.poi.poifs.crypt.CipherAlgorithm: int blockSize> = i3;

        r0.<org.apache.poi.poifs.crypt.CipherAlgorithm: int encryptedVerifierHashLength> = i4;

        r0.<org.apache.poi.poifs.crypt.CipherAlgorithm: java.lang.String xmlId> = r5;

        r0.<org.apache.poi.poifs.crypt.CipherAlgorithm: boolean needsBouncyCastle> = z0;

        return;
    }

    public static org.apache.poi.poifs.crypt.CipherAlgorithm fromEcmaId(int)
    {
        org.apache.poi.EncryptedDocumentException $r1;
        org.apache.poi.poifs.crypt.CipherAlgorithm[] $r0;
        int i0, i1, $i2, i3;
        org.apache.poi.poifs.crypt.CipherAlgorithm r2;

        i1 := @parameter0: int;

        $r0 = staticinvoke <org.apache.poi.poifs.crypt.CipherAlgorithm: org.apache.poi.poifs.crypt.CipherAlgorithm[] values()>();

        i0 = lengthof $r0;

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        r2 = $r0[i3];

        $i2 = r2.<org.apache.poi.poifs.crypt.CipherAlgorithm: int ecmaId>;

        if $i2 != i1 goto label2;

        return r2;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r1 = new org.apache.poi.EncryptedDocumentException;

        specialinvoke $r1.<org.apache.poi.EncryptedDocumentException: void <init>(java.lang.String)>("cipher algorithm not found");

        throw $r1;
    }

    public static org.apache.poi.poifs.crypt.CipherAlgorithm fromXmlId(java.lang.String, int)
    {
        org.apache.poi.poifs.crypt.CipherAlgorithm[] $r0;
        int[] r5;
        org.apache.poi.EncryptedDocumentException $r1;
        int i0, i1, i2, i3, i4, i5;
        java.lang.String r3, $r4;
        org.apache.poi.poifs.crypt.CipherAlgorithm r2;
        boolean $z0;

        r3 := @parameter0: java.lang.String;

        i3 := @parameter1: int;

        $r0 = staticinvoke <org.apache.poi.poifs.crypt.CipherAlgorithm: org.apache.poi.poifs.crypt.CipherAlgorithm[] values()>();

        i0 = lengthof $r0;

        i4 = 0;

     label1:
        if i4 >= i0 goto label6;

        r2 = $r0[i4];

        $r4 = r2.<org.apache.poi.poifs.crypt.CipherAlgorithm: java.lang.String xmlId>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 != 0 goto label2;

        goto label5;

     label2:
        r5 = r2.<org.apache.poi.poifs.crypt.CipherAlgorithm: int[] allowedKeySize>;

        i1 = lengthof r5;

        i5 = 0;

     label3:
        if i5 >= i1 goto label5;

        i2 = r5[i5];

        if i2 != i3 goto label4;

        return r2;

     label4:
        i5 = i5 + 1;

        goto label3;

     label5:
        i4 = i4 + 1;

        goto label1;

     label6:
        $r1 = new org.apache.poi.EncryptedDocumentException;

        specialinvoke $r1.<org.apache.poi.EncryptedDocumentException: void <init>(java.lang.String)>("cipher algorithm not found");

        throw $r1;
    }

    static void <clinit>()
    {
        org.apache.poi.poifs.crypt.CipherAlgorithm[] $r20;
        int[] $r1, $r4, $r7, $r10, $r13, $r15, $r17, $r19;
        org.apache.poi.poifs.crypt.CipherProvider $r2, $r5, $r8, $r11;
        int $i1, $i3, $i5, $i7, $i9;
        org.apache.poi.poifs.crypt.CipherAlgorithm $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36;

        $r29 = new org.apache.poi.poifs.crypt.CipherAlgorithm;

        $r2 = <org.apache.poi.poifs.crypt.CipherProvider: org.apache.poi.poifs.crypt.CipherProvider rc4>;

        $r1 = newarray (int)[12];

        $r1[0] = 40;

        $r1[1] = 48;

        $r1[2] = 56;

        $r1[3] = 64;

        $r1[4] = 72;

        $r1[5] = 80;

        $r1[6] = 88;

        $r1[7] = 96;

        $r1[8] = 104;

        $r1[9] = 112;

        $r1[10] = 120;

        $r1[11] = 128;

        $i1 = (int) -1;

        specialinvoke $r29.<org.apache.poi.poifs.crypt.CipherAlgorithm: void <init>(java.lang.String,int,org.apache.poi.poifs.crypt.CipherProvider,java.lang.String,int,int,int[],int,int,java.lang.String,boolean)>("rc4", 0, $r2, "RC4", 26625, 64, $r1, $i1, 20, "RC4", 0);

        <org.apache.poi.poifs.crypt.CipherAlgorithm: org.apache.poi.poifs.crypt.CipherAlgorithm rc4> = $r29;

        $r30 = new org.apache.poi.poifs.crypt.CipherAlgorithm;

        $r5 = <org.apache.poi.poifs.crypt.CipherProvider: org.apache.poi.poifs.crypt.CipherProvider aes>;

        $r4 = newarray (int)[1];

        $r4[0] = 128;

        specialinvoke $r30.<org.apache.poi.poifs.crypt.CipherAlgorithm: void <init>(java.lang.String,int,org.apache.poi.poifs.crypt.CipherProvider,java.lang.String,int,int,int[],int,int,java.lang.String,boolean)>("aes128", 1, $r5, "AES", 26126, 128, $r4, 16, 32, "AES", 0);

        <org.apache.poi.poifs.crypt.CipherAlgorithm: org.apache.poi.poifs.crypt.CipherAlgorithm aes128> = $r30;

        $r31 = new org.apache.poi.poifs.crypt.CipherAlgorithm;

        $r8 = <org.apache.poi.poifs.crypt.CipherProvider: org.apache.poi.poifs.crypt.CipherProvider aes>;

        $r7 = newarray (int)[1];

        $r7[0] = 192;

        specialinvoke $r31.<org.apache.poi.poifs.crypt.CipherAlgorithm: void <init>(java.lang.String,int,org.apache.poi.poifs.crypt.CipherProvider,java.lang.String,int,int,int[],int,int,java.lang.String,boolean)>("aes192", 2, $r8, "AES", 26127, 192, $r7, 16, 32, "AES", 0);

        <org.apache.poi.poifs.crypt.CipherAlgorithm: org.apache.poi.poifs.crypt.CipherAlgorithm aes192> = $r31;

        $r32 = new org.apache.poi.poifs.crypt.CipherAlgorithm;

        $r11 = <org.apache.poi.poifs.crypt.CipherProvider: org.apache.poi.poifs.crypt.CipherProvider aes>;

        $r10 = newarray (int)[1];

        $r10[0] = 256;

        specialinvoke $r32.<org.apache.poi.poifs.crypt.CipherAlgorithm: void <init>(java.lang.String,int,org.apache.poi.poifs.crypt.CipherProvider,java.lang.String,int,int,int[],int,int,java.lang.String,boolean)>("aes256", 3, $r11, "AES", 26128, 256, $r10, 16, 32, "AES", 0);

        <org.apache.poi.poifs.crypt.CipherAlgorithm: org.apache.poi.poifs.crypt.CipherAlgorithm aes256> = $r32;

        $r33 = new org.apache.poi.poifs.crypt.CipherAlgorithm;

        $r13 = newarray (int)[12];

        $r13[0] = 40;

        $r13[1] = 48;

        $r13[2] = 56;

        $r13[3] = 64;

        $r13[4] = 72;

        $r13[5] = 80;

        $r13[6] = 88;

        $r13[7] = 96;

        $r13[8] = 104;

        $r13[9] = 112;

        $r13[10] = 120;

        $r13[11] = 128;

        $i3 = (int) -1;

        specialinvoke $r33.<org.apache.poi.poifs.crypt.CipherAlgorithm: void <init>(java.lang.String,int,org.apache.poi.poifs.crypt.CipherProvider,java.lang.String,int,int,int[],int,int,java.lang.String,boolean)>("rc2", 4, null, "RC2", $i3, 128, $r13, 8, 20, "RC2", 0);

        <org.apache.poi.poifs.crypt.CipherAlgorithm: org.apache.poi.poifs.crypt.CipherAlgorithm rc2> = $r33;

        $r34 = new org.apache.poi.poifs.crypt.CipherAlgorithm;

        $r15 = newarray (int)[1];

        $r15[0] = 64;

        $i5 = (int) -1;

        specialinvoke $r34.<org.apache.poi.poifs.crypt.CipherAlgorithm: void <init>(java.lang.String,int,org.apache.poi.poifs.crypt.CipherProvider,java.lang.String,int,int,int[],int,int,java.lang.String,boolean)>("des", 5, null, "DES", $i5, 64, $r15, 8, 32, "DES", 0);

        <org.apache.poi.poifs.crypt.CipherAlgorithm: org.apache.poi.poifs.crypt.CipherAlgorithm des> = $r34;

        $r35 = new org.apache.poi.poifs.crypt.CipherAlgorithm;

        $r17 = newarray (int)[1];

        $r17[0] = 192;

        $i7 = (int) -1;

        specialinvoke $r35.<org.apache.poi.poifs.crypt.CipherAlgorithm: void <init>(java.lang.String,int,org.apache.poi.poifs.crypt.CipherProvider,java.lang.String,int,int,int[],int,int,java.lang.String,boolean)>("des3", 6, null, "DESede", $i7, 192, $r17, 8, 32, "3DES", 0);

        <org.apache.poi.poifs.crypt.CipherAlgorithm: org.apache.poi.poifs.crypt.CipherAlgorithm des3> = $r35;

        $r36 = new org.apache.poi.poifs.crypt.CipherAlgorithm;

        $r19 = newarray (int)[1];

        $r19[0] = 128;

        $i9 = (int) -1;

        specialinvoke $r36.<org.apache.poi.poifs.crypt.CipherAlgorithm: void <init>(java.lang.String,int,org.apache.poi.poifs.crypt.CipherProvider,java.lang.String,int,int,int[],int,int,java.lang.String,boolean)>("des3_112", 7, null, "DESede", $i9, 128, $r19, 8, 32, "3DES_112", 1);

        <org.apache.poi.poifs.crypt.CipherAlgorithm: org.apache.poi.poifs.crypt.CipherAlgorithm des3_112> = $r36;

        $r20 = newarray (org.apache.poi.poifs.crypt.CipherAlgorithm)[8];

        $r21 = <org.apache.poi.poifs.crypt.CipherAlgorithm: org.apache.poi.poifs.crypt.CipherAlgorithm rc4>;

        $r20[0] = $r21;

        $r22 = <org.apache.poi.poifs.crypt.CipherAlgorithm: org.apache.poi.poifs.crypt.CipherAlgorithm aes128>;

        $r20[1] = $r22;

        $r23 = <org.apache.poi.poifs.crypt.CipherAlgorithm: org.apache.poi.poifs.crypt.CipherAlgorithm aes192>;

        $r20[2] = $r23;

        $r24 = <org.apache.poi.poifs.crypt.CipherAlgorithm: org.apache.poi.poifs.crypt.CipherAlgorithm aes256>;

        $r20[3] = $r24;

        $r25 = <org.apache.poi.poifs.crypt.CipherAlgorithm: org.apache.poi.poifs.crypt.CipherAlgorithm rc2>;

        $r20[4] = $r25;

        $r26 = <org.apache.poi.poifs.crypt.CipherAlgorithm: org.apache.poi.poifs.crypt.CipherAlgorithm des>;

        $r20[5] = $r26;

        $r27 = <org.apache.poi.poifs.crypt.CipherAlgorithm: org.apache.poi.poifs.crypt.CipherAlgorithm des3>;

        $r20[6] = $r27;

        $r28 = <org.apache.poi.poifs.crypt.CipherAlgorithm: org.apache.poi.poifs.crypt.CipherAlgorithm des3_112>;

        $r20[7] = $r28;

        <org.apache.poi.poifs.crypt.CipherAlgorithm: org.apache.poi.poifs.crypt.CipherAlgorithm[] $VALUES> = $r20;

        return;
    }
}
